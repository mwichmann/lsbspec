<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.76 2005/12/02 01:32:08 nick Exp 0 -->
<!--    at Thu Jan 12 15:05:15 2006 -->
<SECT1 ID=libQtGui>
<TITLE>Interfaces for libQtGui</TITLE>
<PARA>
<XREF LINKEND="lib-libQtGui-def"> defines the library name and shared object name
for the libQtGui library
</PARA>
<TABLE id="lib-libQtGui-def">
<TITLE>libQtGui Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libQtGui</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libQtGui.so.4</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libQtGui.1'>
[QtGui] <XREF LINKEND="std.QtGui">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name QtGui -->
<SECT2>
<!--libgroup-->
<TITLE>QtGui</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for QPixmap</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPixmap class
is described by <XREF LINKEND="cls-327-0">
</PARA>
<!--classdata-->
<TABLE id="cls-327-0">
<TITLE>Primary vtable for QPixmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPixmap</primary></indexterm>typeinfo for QPixmap</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::~QPixmap()</primary></indexterm>QPixmap::~QPixmap()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::~QPixmap()</primary></indexterm>QPixmap::~QPixmap()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::devType() const</primary></indexterm>QPixmap::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::paintEngine() const</primary></indexterm>QPixmap::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QPixmap::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPixmap  class
is described by <XREF LINKEND="rtti-325">
</PARA>
<!--classdata-->
<TABLE ID="rtti-325">
<TITLE>typeinfo for QPixmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPixmap</primary></indexterm>typeinfo name for QPixmap</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextObject</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextObject class
is described by <XREF LINKEND="cls-326-0">
</PARA>
<!--classdata-->
<TABLE id="cls-326-0">
<TITLE>Primary vtable for QTextObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextObject</primary></indexterm>typeinfo for QTextObject</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObject::metaObject() const</primary></indexterm>QTextObject::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObject::qt_metacast(char const*)</primary></indexterm>QTextObject::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObject::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextObject::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObject::~QTextObject()</primary></indexterm>QTextObject::~QTextObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextObject::~QTextObject()</primary></indexterm>QTextObject::~QTextObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextObject  class
is described by <XREF LINKEND="rtti-323">
</PARA>
<!--classdata-->
<TABLE ID="rtti-323">
<TITLE>typeinfo for QTextObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextObject</primary></indexterm>typeinfo name for QTextObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextDocument</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextDocument class
is described by <XREF LINKEND="cls-328-0">
</PARA>
<!--classdata-->
<TABLE id="cls-328-0">
<TITLE>Primary vtable for QTextDocument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextDocument</primary></indexterm>typeinfo for QTextDocument</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::metaObject() const</primary></indexterm>QTextDocument::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::qt_metacast(char const*)</primary></indexterm>QTextDocument::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextDocument::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::~QTextDocument()</primary></indexterm>QTextDocument::~QTextDocument()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::~QTextDocument()</primary></indexterm>QTextDocument::~QTextDocument()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::clear()</primary></indexterm>QTextDocument::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::createObject(QTextFormat const&)</primary></indexterm>QTextDocument::createObject(QTextFormat const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextDocument::loadResource(int, QUrl const&)</primary></indexterm>QTextDocument::loadResource(int, QUrl const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextDocument  class
is described by <XREF LINKEND="rtti-324">
</PARA>
<!--classdata-->
<TABLE ID="rtti-324">
<TITLE>typeinfo for QTextDocument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextDocument</primary></indexterm>typeinfo name for QTextDocument</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextBlockGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextBlockGroup class
is described by <XREF LINKEND="cls-329-0">
</PARA>
<!--classdata-->
<TABLE id="cls-329-0">
<TITLE>Primary vtable for QTextBlockGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextBlockGroup</primary></indexterm>typeinfo for QTextBlockGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::metaObject() const</primary></indexterm>QTextBlockGroup::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::qt_metacast(char const*)</primary></indexterm>QTextBlockGroup::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextBlockGroup::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::~QTextBlockGroup()</primary></indexterm>QTextBlockGroup::~QTextBlockGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::~QTextBlockGroup()</primary></indexterm>QTextBlockGroup::~QTextBlockGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockInserted(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockInserted(QTextBlock const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockRemoved(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockRemoved(QTextBlock const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockFormatChanged(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockFormatChanged(QTextBlock const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextBlockGroup  class
is described by <XREF LINKEND="rtti-330">
</PARA>
<!--classdata-->
<TABLE ID="rtti-330">
<TITLE>typeinfo for QTextBlockGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QTextObject</primary></indexterm>vtable for QTextObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextBlockGroup</primary></indexterm>typeinfo name for QTextBlockGroup</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextFrameLayoutData</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextFrameLayoutData class
is described by <XREF LINKEND="cls-331-0">
</PARA>
<!--classdata-->
<TABLE id="cls-331-0">
<TITLE>Primary vtable for QTextFrameLayoutData</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextFrameLayoutData</primary></indexterm>typeinfo for QTextFrameLayoutData</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrameLayoutData::~QTextFrameLayoutData()</primary></indexterm>QTextFrameLayoutData::~QTextFrameLayoutData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrameLayoutData::~QTextFrameLayoutData()</primary></indexterm>QTextFrameLayoutData::~QTextFrameLayoutData()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextFrameLayoutData  class
is described by <XREF LINKEND="rtti-332">
</PARA>
<!--classdata-->
<TABLE ID="rtti-332">
<TITLE>typeinfo for QTextFrameLayoutData</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextFrameLayoutData</primary></indexterm>typeinfo name for QTextFrameLayoutData</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextFrame</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextFrame class
is described by <XREF LINKEND="cls-333-0">
</PARA>
<!--classdata-->
<TABLE id="cls-333-0">
<TITLE>Primary vtable for QTextFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextFrame</primary></indexterm>typeinfo for QTextFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrame::metaObject() const</primary></indexterm>QTextFrame::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrame::qt_metacast(char const*)</primary></indexterm>QTextFrame::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrame::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextFrame::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrame::~QTextFrame()</primary></indexterm>QTextFrame::~QTextFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextFrame::~QTextFrame()</primary></indexterm>QTextFrame::~QTextFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextFrame  class
is described by <XREF LINKEND="rtti-334">
</PARA>
<!--classdata-->
<TABLE ID="rtti-334">
<TITLE>typeinfo for QTextFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QTextObject</primary></indexterm>vtable for QTextObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextFrame</primary></indexterm>typeinfo name for QTextFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextBlockUserData</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextBlockUserData class
is described by <XREF LINKEND="cls-335-0">
</PARA>
<!--classdata-->
<TABLE id="cls-335-0">
<TITLE>Primary vtable for QTextBlockUserData</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextBlockUserData</primary></indexterm>typeinfo for QTextBlockUserData</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockUserData::~QTextBlockUserData()</primary></indexterm>QTextBlockUserData::~QTextBlockUserData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockUserData::~QTextBlockUserData()</primary></indexterm>QTextBlockUserData::~QTextBlockUserData()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextBlockUserData  class
is described by <XREF LINKEND="rtti-336">
</PARA>
<!--classdata-->
<TABLE ID="rtti-336">
<TITLE>typeinfo for QTextBlockUserData</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextBlockUserData</primary></indexterm>typeinfo name for QTextBlockUserData</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextList</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextList class
is described by <XREF LINKEND="cls-337-0">
</PARA>
<!--classdata-->
<TABLE id="cls-337-0">
<TITLE>Primary vtable for QTextList</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextList</primary></indexterm>typeinfo for QTextList</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextList::metaObject() const</primary></indexterm>QTextList::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextList::qt_metacast(char const*)</primary></indexterm>QTextList::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextList::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextList::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextList::~QTextList()</primary></indexterm>QTextList::~QTextList()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextList::~QTextList()</primary></indexterm>QTextList::~QTextList()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockInserted(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockInserted(QTextBlock const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockRemoved(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockRemoved(QTextBlock const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBlockGroup::blockFormatChanged(QTextBlock const&)</primary></indexterm>QTextBlockGroup::blockFormatChanged(QTextBlock const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextList  class
is described by <XREF LINKEND="rtti-338">
</PARA>
<!--classdata-->
<TABLE ID="rtti-338">
<TITLE>typeinfo for QTextList</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QTextBlockGroup</primary></indexterm>vtable for QTextBlockGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextList</primary></indexterm>typeinfo name for QTextList</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractTextDocumentLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractTextDocumentLayout class
is described by <XREF LINKEND="cls-339-0">
</PARA>
<!--classdata-->
<TABLE id="cls-339-0">
<TITLE>Primary vtable for QAbstractTextDocumentLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractTextDocumentLayout</primary></indexterm>typeinfo for QAbstractTextDocumentLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::metaObject() const</primary></indexterm>QAbstractTextDocumentLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::qt_metacast(char const*)</primary></indexterm>QAbstractTextDocumentLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractTextDocumentLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::~QAbstractTextDocumentLayout()</primary></indexterm>QAbstractTextDocumentLayout::~QAbstractTextDocumentLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::~QAbstractTextDocumentLayout()</primary></indexterm>QAbstractTextDocumentLayout::~QAbstractTextDocumentLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::resizeInlineObject(QTextInlineObject, int, QTextFormat const&)</primary></indexterm>QAbstractTextDocumentLayout::resizeInlineObject(QTextInlineObject, int, QTextFormat const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::positionInlineObject(QTextInlineObject, int, QTextFormat const&)</primary></indexterm>QAbstractTextDocumentLayout::positionInlineObject(QTextInlineObject, int, QTextFormat const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractTextDocumentLayout::drawInlineObject(QPainter*, QRectF const&, QTextInlineObject, int, QTextFormat const&)</primary></indexterm>QAbstractTextDocumentLayout::drawInlineObject(QPainter*, QRectF const&, QTextInlineObject, int, QTextFormat const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractTextDocumentLayout  class
is described by <XREF LINKEND="rtti-340">
</PARA>
<!--classdata-->
<TABLE ID="rtti-340">
<TITLE>typeinfo for QAbstractTextDocumentLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractTextDocumentLayout</primary></indexterm>typeinfo name for QAbstractTextDocumentLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextTable</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextTable class
is described by <XREF LINKEND="cls-341-0">
</PARA>
<!--classdata-->
<TABLE id="cls-341-0">
<TITLE>Primary vtable for QTextTable</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextTable</primary></indexterm>typeinfo for QTextTable</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextTable::metaObject() const</primary></indexterm>QTextTable::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextTable::qt_metacast(char const*)</primary></indexterm>QTextTable::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextTable::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextTable::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextTable::~QTextTable()</primary></indexterm>QTextTable::~QTextTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextTable::~QTextTable()</primary></indexterm>QTextTable::~QTextTable()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextTable  class
is described by <XREF LINKEND="rtti-342">
</PARA>
<!--classdata-->
<TABLE ID="rtti-342">
<TITLE>typeinfo for QTextTable</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QTextFrame</primary></indexterm>vtable for QTextFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextTable</primary></indexterm>typeinfo name for QTextTable</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMimeSource</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMimeSource class
is described by <XREF LINKEND="cls-343-0">
</PARA>
<!--classdata-->
<TABLE id="cls-343-0">
<TITLE>Primary vtable for QMimeSource</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMimeSource</primary></indexterm>typeinfo for QMimeSource</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::~QMimeSource()</primary></indexterm>QMimeSource::~QMimeSource()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::~QMimeSource()</primary></indexterm>QMimeSource::~QMimeSource()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMimeSource::provides(char const*) const</primary></indexterm>QMimeSource::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMimeSource  class
is described by <XREF LINKEND="rtti-344">
</PARA>
<!--classdata-->
<TABLE ID="rtti-344">
<TITLE>typeinfo for QMimeSource</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMimeSource</primary></indexterm>typeinfo name for QMimeSource</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDrag</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDrag class
is described by <XREF LINKEND="cls-345-0">
</PARA>
<!--classdata-->
<TABLE id="cls-345-0">
<TITLE>Primary vtable for QDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDrag</primary></indexterm>typeinfo for QDrag</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDrag::metaObject() const</primary></indexterm>QDrag::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDrag::qt_metacast(char const*)</primary></indexterm>QDrag::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDrag::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDrag::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDrag::~QDrag()</primary></indexterm>QDrag::~QDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDrag::~QDrag()</primary></indexterm>QDrag::~QDrag()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDrag  class
is described by <XREF LINKEND="rtti-346">
</PARA>
<!--classdata-->
<TABLE ID="rtti-346">
<TITLE>typeinfo for QDrag</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDrag</primary></indexterm>typeinfo name for QDrag</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWidget class
is described by <XREF LINKEND="cls-347-0">
</PARA>
<!--classdata-->
<TABLE id="cls-347-0">
<TITLE>Primary vtable for QWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidget</primary></indexterm>typeinfo for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metaObject() const</primary></indexterm>QWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::qt_metacast(char const*)</primary></indexterm>QWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::~QWidget()</primary></indexterm>QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::~QWidget()</primary></indexterm>QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::~QWidget()</primary></indexterm>non-virtual thunk to QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::~QWidget()</primary></indexterm>non-virtual thunk to QWidget::~QWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWidget  class
is described by <XREF LINKEND="rtti-348">
</PARA>
<!--classdata-->
<TABLE ID="rtti-348">
<TITLE>typeinfo for QWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWidget</primary></indexterm>typeinfo name for QWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputEvent class
is described by <XREF LINKEND="cls-349-0">
</PARA>
<!--classdata-->
<TABLE id="cls-349-0">
<TITLE>Primary vtable for QInputEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputEvent</primary></indexterm>typeinfo for QInputEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputEvent::~QInputEvent()</primary></indexterm>QInputEvent::~QInputEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputEvent::~QInputEvent()</primary></indexterm>QInputEvent::~QInputEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputEvent  class
is described by <XREF LINKEND="rtti-350">
</PARA>
<!--classdata-->
<TABLE ID="rtti-350">
<TITLE>typeinfo for QInputEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputEvent</primary></indexterm>typeinfo name for QInputEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMouseEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMouseEvent class
is described by <XREF LINKEND="cls-351-0">
</PARA>
<!--classdata-->
<TABLE id="cls-351-0">
<TITLE>Primary vtable for QMouseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMouseEvent</primary></indexterm>typeinfo for QMouseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMouseEvent::~QMouseEvent()</primary></indexterm>QMouseEvent::~QMouseEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMouseEvent::~QMouseEvent()</primary></indexterm>QMouseEvent::~QMouseEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMouseEvent  class
is described by <XREF LINKEND="rtti-352">
</PARA>
<!--classdata-->
<TABLE ID="rtti-352">
<TITLE>typeinfo for QMouseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QInputEvent</primary></indexterm>vtable for QInputEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMouseEvent</primary></indexterm>typeinfo name for QMouseEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHoverEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHoverEvent class
is described by <XREF LINKEND="cls-353-0">
</PARA>
<!--classdata-->
<TABLE id="cls-353-0">
<TITLE>Primary vtable for QHoverEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHoverEvent</primary></indexterm>typeinfo for QHoverEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHoverEvent::~QHoverEvent()</primary></indexterm>QHoverEvent::~QHoverEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHoverEvent::~QHoverEvent()</primary></indexterm>QHoverEvent::~QHoverEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHoverEvent  class
is described by <XREF LINKEND="rtti-354">
</PARA>
<!--classdata-->
<TABLE ID="rtti-354">
<TITLE>typeinfo for QHoverEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHoverEvent</primary></indexterm>typeinfo name for QHoverEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWheelEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWheelEvent class
is described by <XREF LINKEND="cls-355-0">
</PARA>
<!--classdata-->
<TABLE id="cls-355-0">
<TITLE>Primary vtable for QWheelEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWheelEvent</primary></indexterm>typeinfo for QWheelEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWheelEvent::~QWheelEvent()</primary></indexterm>QWheelEvent::~QWheelEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWheelEvent::~QWheelEvent()</primary></indexterm>QWheelEvent::~QWheelEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWheelEvent  class
is described by <XREF LINKEND="rtti-356">
</PARA>
<!--classdata-->
<TABLE ID="rtti-356">
<TITLE>typeinfo for QWheelEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QInputEvent</primary></indexterm>vtable for QInputEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWheelEvent</primary></indexterm>typeinfo name for QWheelEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTabletEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTabletEvent class
is described by <XREF LINKEND="cls-357-0">
</PARA>
<!--classdata-->
<TABLE id="cls-357-0">
<TITLE>Primary vtable for QTabletEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabletEvent</primary></indexterm>typeinfo for QTabletEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabletEvent::~QTabletEvent()</primary></indexterm>QTabletEvent::~QTabletEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabletEvent::~QTabletEvent()</primary></indexterm>QTabletEvent::~QTabletEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTabletEvent  class
is described by <XREF LINKEND="rtti-358">
</PARA>
<!--classdata-->
<TABLE ID="rtti-358">
<TITLE>typeinfo for QTabletEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QInputEvent</primary></indexterm>vtable for QInputEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTabletEvent</primary></indexterm>typeinfo name for QTabletEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QKeyEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QKeyEvent class
is described by <XREF LINKEND="cls-359-0">
</PARA>
<!--classdata-->
<TABLE id="cls-359-0">
<TITLE>Primary vtable for QKeyEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QKeyEvent</primary></indexterm>typeinfo for QKeyEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QKeyEvent::~QKeyEvent()</primary></indexterm>QKeyEvent::~QKeyEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QKeyEvent::~QKeyEvent()</primary></indexterm>QKeyEvent::~QKeyEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QKeyEvent  class
is described by <XREF LINKEND="rtti-360">
</PARA>
<!--classdata-->
<TABLE ID="rtti-360">
<TITLE>typeinfo for QKeyEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QInputEvent</primary></indexterm>vtable for QInputEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QKeyEvent</primary></indexterm>typeinfo name for QKeyEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFocusEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFocusEvent class
is described by <XREF LINKEND="cls-361-0">
</PARA>
<!--classdata-->
<TABLE id="cls-361-0">
<TITLE>Primary vtable for QFocusEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFocusEvent</primary></indexterm>typeinfo for QFocusEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusEvent::~QFocusEvent()</primary></indexterm>QFocusEvent::~QFocusEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusEvent::~QFocusEvent()</primary></indexterm>QFocusEvent::~QFocusEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFocusEvent  class
is described by <XREF LINKEND="rtti-362">
</PARA>
<!--classdata-->
<TABLE ID="rtti-362">
<TITLE>typeinfo for QFocusEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFocusEvent</primary></indexterm>typeinfo name for QFocusEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPaintEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPaintEvent class
is described by <XREF LINKEND="cls-363-0">
</PARA>
<!--classdata-->
<TABLE id="cls-363-0">
<TITLE>Primary vtable for QPaintEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintEvent</primary></indexterm>typeinfo for QPaintEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEvent::~QPaintEvent()</primary></indexterm>QPaintEvent::~QPaintEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEvent::~QPaintEvent()</primary></indexterm>QPaintEvent::~QPaintEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPaintEvent  class
is described by <XREF LINKEND="rtti-364">
</PARA>
<!--classdata-->
<TABLE ID="rtti-364">
<TITLE>typeinfo for QPaintEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPaintEvent</primary></indexterm>typeinfo name for QPaintEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMoveEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMoveEvent class
is described by <XREF LINKEND="cls-365-0">
</PARA>
<!--classdata-->
<TABLE id="cls-365-0">
<TITLE>Primary vtable for QMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMoveEvent</primary></indexterm>typeinfo for QMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMoveEvent::~QMoveEvent()</primary></indexterm>QMoveEvent::~QMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMoveEvent::~QMoveEvent()</primary></indexterm>QMoveEvent::~QMoveEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMoveEvent  class
is described by <XREF LINKEND="rtti-366">
</PARA>
<!--classdata-->
<TABLE ID="rtti-366">
<TITLE>typeinfo for QMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMoveEvent</primary></indexterm>typeinfo name for QMoveEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QResizeEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QResizeEvent class
is described by <XREF LINKEND="cls-367-0">
</PARA>
<!--classdata-->
<TABLE id="cls-367-0">
<TITLE>Primary vtable for QResizeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QResizeEvent</primary></indexterm>typeinfo for QResizeEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QResizeEvent::~QResizeEvent()</primary></indexterm>QResizeEvent::~QResizeEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QResizeEvent::~QResizeEvent()</primary></indexterm>QResizeEvent::~QResizeEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QResizeEvent  class
is described by <XREF LINKEND="rtti-368">
</PARA>
<!--classdata-->
<TABLE ID="rtti-368">
<TITLE>typeinfo for QResizeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QResizeEvent</primary></indexterm>typeinfo name for QResizeEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCloseEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCloseEvent class
is described by <XREF LINKEND="cls-369-0">
</PARA>
<!--classdata-->
<TABLE id="cls-369-0">
<TITLE>Primary vtable for QCloseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCloseEvent</primary></indexterm>typeinfo for QCloseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCloseEvent::~QCloseEvent()</primary></indexterm>QCloseEvent::~QCloseEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCloseEvent::~QCloseEvent()</primary></indexterm>QCloseEvent::~QCloseEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QCloseEvent  class
is described by <XREF LINKEND="rtti-370">
</PARA>
<!--classdata-->
<TABLE ID="rtti-370">
<TITLE>typeinfo for QCloseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCloseEvent</primary></indexterm>typeinfo name for QCloseEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconDragEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconDragEvent class
is described by <XREF LINKEND="cls-371-0">
</PARA>
<!--classdata-->
<TABLE id="cls-371-0">
<TITLE>Primary vtable for QIconDragEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconDragEvent</primary></indexterm>typeinfo for QIconDragEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDragEvent::~QIconDragEvent()</primary></indexterm>QIconDragEvent::~QIconDragEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconDragEvent::~QIconDragEvent()</primary></indexterm>QIconDragEvent::~QIconDragEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIconDragEvent  class
is described by <XREF LINKEND="rtti-372">
</PARA>
<!--classdata-->
<TABLE ID="rtti-372">
<TITLE>typeinfo for QIconDragEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconDragEvent</primary></indexterm>typeinfo name for QIconDragEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QShowEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QShowEvent class
is described by <XREF LINKEND="cls-373-0">
</PARA>
<!--classdata-->
<TABLE id="cls-373-0">
<TITLE>Primary vtable for QShowEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QShowEvent</primary></indexterm>typeinfo for QShowEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShowEvent::~QShowEvent()</primary></indexterm>QShowEvent::~QShowEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShowEvent::~QShowEvent()</primary></indexterm>QShowEvent::~QShowEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QShowEvent  class
is described by <XREF LINKEND="rtti-374">
</PARA>
<!--classdata-->
<TABLE ID="rtti-374">
<TITLE>typeinfo for QShowEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QShowEvent</primary></indexterm>typeinfo name for QShowEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHideEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHideEvent class
is described by <XREF LINKEND="cls-375-0">
</PARA>
<!--classdata-->
<TABLE id="cls-375-0">
<TITLE>Primary vtable for QHideEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHideEvent</primary></indexterm>typeinfo for QHideEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHideEvent::~QHideEvent()</primary></indexterm>QHideEvent::~QHideEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHideEvent::~QHideEvent()</primary></indexterm>QHideEvent::~QHideEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHideEvent  class
is described by <XREF LINKEND="rtti-376">
</PARA>
<!--classdata-->
<TABLE ID="rtti-376">
<TITLE>typeinfo for QHideEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHideEvent</primary></indexterm>typeinfo name for QHideEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QContextMenuEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QContextMenuEvent class
is described by <XREF LINKEND="cls-377-0">
</PARA>
<!--classdata-->
<TABLE id="cls-377-0">
<TITLE>Primary vtable for QContextMenuEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QContextMenuEvent</primary></indexterm>typeinfo for QContextMenuEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QContextMenuEvent::~QContextMenuEvent()</primary></indexterm>QContextMenuEvent::~QContextMenuEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QContextMenuEvent::~QContextMenuEvent()</primary></indexterm>QContextMenuEvent::~QContextMenuEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QContextMenuEvent  class
is described by <XREF LINKEND="rtti-378">
</PARA>
<!--classdata-->
<TABLE ID="rtti-378">
<TITLE>typeinfo for QContextMenuEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QInputEvent</primary></indexterm>vtable for QInputEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QContextMenuEvent</primary></indexterm>typeinfo name for QContextMenuEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputMethodEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputMethodEvent class
is described by <XREF LINKEND="cls-379-0">
</PARA>
<!--classdata-->
<TABLE id="cls-379-0">
<TITLE>Primary vtable for QInputMethodEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputMethodEvent</primary></indexterm>typeinfo for QInputMethodEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputMethodEvent::~QInputMethodEvent()</primary></indexterm>QInputMethodEvent::~QInputMethodEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputMethodEvent::~QInputMethodEvent()</primary></indexterm>QInputMethodEvent::~QInputMethodEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputMethodEvent  class
is described by <XREF LINKEND="rtti-380">
</PARA>
<!--classdata-->
<TABLE ID="rtti-380">
<TITLE>typeinfo for QInputMethodEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputMethodEvent</primary></indexterm>typeinfo name for QInputMethodEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDropEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDropEvent class
is described by <XREF LINKEND="cls-381-0">
</PARA>
<!--classdata-->
<TABLE id="cls-381-0">
<TITLE>Primary vtable for QDropEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDropEvent</primary></indexterm>typeinfo for QDropEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::~QDropEvent()</primary></indexterm>QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::~QDropEvent()</primary></indexterm>QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::format(int) const</primary></indexterm>QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::encodedData(char const*) const</primary></indexterm>QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::provides(char const*) const</primary></indexterm>QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::~QDropEvent()</primary></indexterm>non-virtual thunk to QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::~QDropEvent()</primary></indexterm>non-virtual thunk to QDropEvent::~QDropEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::format(int) const</primary></indexterm>non-virtual thunk to QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::provides(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDropEvent  class
is described by <XREF LINKEND="rtti-382">
</PARA>
<!--classdata-->
<TABLE ID="rtti-382">
<TITLE>typeinfo for QDropEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDropEvent</primary></indexterm>typeinfo name for QDropEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragMoveEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragMoveEvent class
is described by <XREF LINKEND="cls-383-0">
</PARA>
<!--classdata-->
<TABLE id="cls-383-0">
<TITLE>Primary vtable for QDragMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragMoveEvent</primary></indexterm>typeinfo for QDragMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::format(int) const</primary></indexterm>QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::encodedData(char const*) const</primary></indexterm>QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::provides(char const*) const</primary></indexterm>QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</primary></indexterm>non-virtual thunk to QDragMoveEvent::~QDragMoveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::format(int) const</primary></indexterm>non-virtual thunk to QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::provides(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDragMoveEvent  class
is described by <XREF LINKEND="rtti-384">
</PARA>
<!--classdata-->
<TABLE ID="rtti-384">
<TITLE>typeinfo for QDragMoveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDropEvent</primary></indexterm>vtable for QDropEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragMoveEvent</primary></indexterm>typeinfo name for QDragMoveEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragEnterEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragEnterEvent class
is described by <XREF LINKEND="cls-385-0">
</PARA>
<!--classdata-->
<TABLE id="cls-385-0">
<TITLE>Primary vtable for QDragEnterEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragEnterEvent</primary></indexterm>typeinfo for QDragEnterEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::format(int) const</primary></indexterm>QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::encodedData(char const*) const</primary></indexterm>QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDropEvent::provides(char const*) const</primary></indexterm>QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</primary></indexterm>non-virtual thunk to QDragEnterEvent::~QDragEnterEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::format(int) const</primary></indexterm>non-virtual thunk to QDropEvent::format(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::provides(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::provides(char const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDropEvent::encodedData(char const*) const</primary></indexterm>non-virtual thunk to QDropEvent::encodedData(char const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDragEnterEvent  class
is described by <XREF LINKEND="rtti-386">
</PARA>
<!--classdata-->
<TABLE ID="rtti-386">
<TITLE>typeinfo for QDragEnterEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDragMoveEvent</primary></indexterm>vtable for QDragMoveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragEnterEvent</primary></indexterm>typeinfo name for QDragEnterEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragResponseEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragResponseEvent class
is described by <XREF LINKEND="cls-387-0">
</PARA>
<!--classdata-->
<TABLE id="cls-387-0">
<TITLE>Primary vtable for QDragResponseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragResponseEvent</primary></indexterm>typeinfo for QDragResponseEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragResponseEvent::~QDragResponseEvent()</primary></indexterm>QDragResponseEvent::~QDragResponseEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragResponseEvent::~QDragResponseEvent()</primary></indexterm>QDragResponseEvent::~QDragResponseEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDragResponseEvent  class
is described by <XREF LINKEND="rtti-388">
</PARA>
<!--classdata-->
<TABLE ID="rtti-388">
<TITLE>typeinfo for QDragResponseEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragResponseEvent</primary></indexterm>typeinfo name for QDragResponseEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDragLeaveEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDragLeaveEvent class
is described by <XREF LINKEND="cls-389-0">
</PARA>
<!--classdata-->
<TABLE id="cls-389-0">
<TITLE>Primary vtable for QDragLeaveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDragLeaveEvent</primary></indexterm>typeinfo for QDragLeaveEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragLeaveEvent::~QDragLeaveEvent()</primary></indexterm>QDragLeaveEvent::~QDragLeaveEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDragLeaveEvent::~QDragLeaveEvent()</primary></indexterm>QDragLeaveEvent::~QDragLeaveEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDragLeaveEvent  class
is described by <XREF LINKEND="rtti-390">
</PARA>
<!--classdata-->
<TABLE ID="rtti-390">
<TITLE>typeinfo for QDragLeaveEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDragLeaveEvent</primary></indexterm>typeinfo name for QDragLeaveEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHelpEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHelpEvent class
is described by <XREF LINKEND="cls-391-0">
</PARA>
<!--classdata-->
<TABLE id="cls-391-0">
<TITLE>Primary vtable for QHelpEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHelpEvent</primary></indexterm>typeinfo for QHelpEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHelpEvent::~QHelpEvent()</primary></indexterm>QHelpEvent::~QHelpEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHelpEvent::~QHelpEvent()</primary></indexterm>QHelpEvent::~QHelpEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHelpEvent  class
is described by <XREF LINKEND="rtti-392">
</PARA>
<!--classdata-->
<TABLE ID="rtti-392">
<TITLE>typeinfo for QHelpEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHelpEvent</primary></indexterm>typeinfo name for QHelpEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStatusTipEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStatusTipEvent class
is described by <XREF LINKEND="cls-393-0">
</PARA>
<!--classdata-->
<TABLE id="cls-393-0">
<TITLE>Primary vtable for QStatusTipEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStatusTipEvent</primary></indexterm>typeinfo for QStatusTipEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusTipEvent::~QStatusTipEvent()</primary></indexterm>QStatusTipEvent::~QStatusTipEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusTipEvent::~QStatusTipEvent()</primary></indexterm>QStatusTipEvent::~QStatusTipEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStatusTipEvent  class
is described by <XREF LINKEND="rtti-394">
</PARA>
<!--classdata-->
<TABLE ID="rtti-394">
<TITLE>typeinfo for QStatusTipEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStatusTipEvent</primary></indexterm>typeinfo name for QStatusTipEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWhatsThisClickedEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWhatsThisClickedEvent class
is described by <XREF LINKEND="cls-395-0">
</PARA>
<!--classdata-->
<TABLE id="cls-395-0">
<TITLE>Primary vtable for QWhatsThisClickedEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWhatsThisClickedEvent</primary></indexterm>typeinfo for QWhatsThisClickedEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWhatsThisClickedEvent::~QWhatsThisClickedEvent()</primary></indexterm>QWhatsThisClickedEvent::~QWhatsThisClickedEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWhatsThisClickedEvent::~QWhatsThisClickedEvent()</primary></indexterm>QWhatsThisClickedEvent::~QWhatsThisClickedEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWhatsThisClickedEvent  class
is described by <XREF LINKEND="rtti-396">
</PARA>
<!--classdata-->
<TABLE ID="rtti-396">
<TITLE>typeinfo for QWhatsThisClickedEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWhatsThisClickedEvent</primary></indexterm>typeinfo name for QWhatsThisClickedEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QActionEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QActionEvent class
is described by <XREF LINKEND="cls-397-0">
</PARA>
<!--classdata-->
<TABLE id="cls-397-0">
<TITLE>Primary vtable for QActionEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QActionEvent</primary></indexterm>typeinfo for QActionEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionEvent::~QActionEvent()</primary></indexterm>QActionEvent::~QActionEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionEvent::~QActionEvent()</primary></indexterm>QActionEvent::~QActionEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QActionEvent  class
is described by <XREF LINKEND="rtti-398">
</PARA>
<!--classdata-->
<TABLE ID="rtti-398">
<TITLE>typeinfo for QActionEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QActionEvent</primary></indexterm>typeinfo name for QActionEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFileOpenEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFileOpenEvent class
is described by <XREF LINKEND="cls-399-0">
</PARA>
<!--classdata-->
<TABLE id="cls-399-0">
<TITLE>Primary vtable for QFileOpenEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFileOpenEvent</primary></indexterm>typeinfo for QFileOpenEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileOpenEvent::~QFileOpenEvent()</primary></indexterm>QFileOpenEvent::~QFileOpenEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileOpenEvent::~QFileOpenEvent()</primary></indexterm>QFileOpenEvent::~QFileOpenEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFileOpenEvent  class
is described by <XREF LINKEND="rtti-400">
</PARA>
<!--classdata-->
<TABLE ID="rtti-400">
<TITLE>typeinfo for QFileOpenEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFileOpenEvent</primary></indexterm>typeinfo name for QFileOpenEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolBarChangeEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolBarChangeEvent class
is described by <XREF LINKEND="cls-401-0">
</PARA>
<!--classdata-->
<TABLE id="cls-401-0">
<TITLE>Primary vtable for QToolBarChangeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBarChangeEvent</primary></indexterm>typeinfo for QToolBarChangeEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBarChangeEvent::~QToolBarChangeEvent()</primary></indexterm>QToolBarChangeEvent::~QToolBarChangeEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBarChangeEvent::~QToolBarChangeEvent()</primary></indexterm>QToolBarChangeEvent::~QToolBarChangeEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QToolBarChangeEvent  class
is described by <XREF LINKEND="rtti-402">
</PARA>
<!--classdata-->
<TABLE ID="rtti-402">
<TITLE>typeinfo for QToolBarChangeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolBarChangeEvent</primary></indexterm>typeinfo name for QToolBarChangeEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QShortcutEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QShortcutEvent class
is described by <XREF LINKEND="cls-403-0">
</PARA>
<!--classdata-->
<TABLE id="cls-403-0">
<TITLE>Primary vtable for QShortcutEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QShortcutEvent</primary></indexterm>typeinfo for QShortcutEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcutEvent::~QShortcutEvent()</primary></indexterm>QShortcutEvent::~QShortcutEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcutEvent::~QShortcutEvent()</primary></indexterm>QShortcutEvent::~QShortcutEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QShortcutEvent  class
is described by <XREF LINKEND="rtti-404">
</PARA>
<!--classdata-->
<TABLE ID="rtti-404">
<TITLE>typeinfo for QShortcutEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QShortcutEvent</primary></indexterm>typeinfo name for QShortcutEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QClipboardEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QClipboardEvent class
is described by <XREF LINKEND="cls-405-0">
</PARA>
<!--classdata-->
<TABLE id="cls-405-0">
<TITLE>Primary vtable for QClipboardEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QClipboardEvent</primary></indexterm>typeinfo for QClipboardEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboardEvent::~QClipboardEvent()</primary></indexterm>QClipboardEvent::~QClipboardEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboardEvent::~QClipboardEvent()</primary></indexterm>QClipboardEvent::~QClipboardEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QClipboardEvent  class
is described by <XREF LINKEND="rtti-406">
</PARA>
<!--classdata-->
<TABLE ID="rtti-406">
<TITLE>typeinfo for QClipboardEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QClipboardEvent</primary></indexterm>typeinfo name for QClipboardEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWindowStateChangeEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWindowStateChangeEvent class
is described by <XREF LINKEND="cls-407-0">
</PARA>
<!--classdata-->
<TABLE id="cls-407-0">
<TITLE>Primary vtable for QWindowStateChangeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWindowStateChangeEvent</primary></indexterm>typeinfo for QWindowStateChangeEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowStateChangeEvent::~QWindowStateChangeEvent()</primary></indexterm>QWindowStateChangeEvent::~QWindowStateChangeEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowStateChangeEvent::~QWindowStateChangeEvent()</primary></indexterm>QWindowStateChangeEvent::~QWindowStateChangeEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWindowStateChangeEvent  class
is described by <XREF LINKEND="rtti-408">
</PARA>
<!--classdata-->
<TABLE ID="rtti-408">
<TITLE>typeinfo for QWindowStateChangeEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWindowStateChangeEvent</primary></indexterm>typeinfo name for QWindowStateChangeEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMenubarUpdatedEvent</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMenubarUpdatedEvent class
is described by <XREF LINKEND="cls-409-0">
</PARA>
<!--classdata-->
<TABLE id="cls-409-0">
<TITLE>Primary vtable for QMenubarUpdatedEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenubarUpdatedEvent</primary></indexterm>typeinfo for QMenubarUpdatedEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenubarUpdatedEvent::~QMenubarUpdatedEvent()</primary></indexterm>QMenubarUpdatedEvent::~QMenubarUpdatedEvent()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenubarUpdatedEvent::~QMenubarUpdatedEvent()</primary></indexterm>QMenubarUpdatedEvent::~QMenubarUpdatedEvent()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMenubarUpdatedEvent  class
is described by <XREF LINKEND="rtti-410">
</PARA>
<!--classdata-->
<TABLE ID="rtti-410">
<TITLE>typeinfo for QMenubarUpdatedEvent</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QEvent</primary></indexterm>vtable for QEvent</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMenubarUpdatedEvent</primary></indexterm>typeinfo name for QMenubarUpdatedEvent</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPaintDevice</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPaintDevice class
is described by <XREF LINKEND="cls-411-0">
</PARA>
<!--classdata-->
<TABLE id="cls-411-0">
<TITLE>Primary vtable for QPaintDevice</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintDevice</primary></indexterm>typeinfo for QPaintDevice</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::~QPaintDevice()</primary></indexterm>QPaintDevice::~QPaintDevice()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::~QPaintDevice()</primary></indexterm>QPaintDevice::~QPaintDevice()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintDevice::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QPaintDevice::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPaintDevice  class
is described by <XREF LINKEND="rtti-412">
</PARA>
<!--classdata-->
<TABLE ID="rtti-412">
<TITLE>typeinfo for QPaintDevice</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPaintDevice</primary></indexterm>typeinfo name for QPaintDevice</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextObjectInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextObjectInterface class
is described by <XREF LINKEND="cls-413-0">
</PARA>
<!--classdata-->
<TABLE id="cls-413-0">
<TITLE>Primary vtable for QTextObjectInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextObjectInterface</primary></indexterm>typeinfo for QTextObjectInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextObjectInterface  class
is described by <XREF LINKEND="rtti-414">
</PARA>
<!--classdata-->
<TABLE ID="rtti-414">
<TITLE>typeinfo for QTextObjectInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextObjectInterface</primary></indexterm>typeinfo name for QTextObjectInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSyntaxHighlighter</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSyntaxHighlighter class
is described by <XREF LINKEND="cls-415-0">
</PARA>
<!--classdata-->
<TABLE id="cls-415-0">
<TITLE>Primary vtable for QSyntaxHighlighter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSyntaxHighlighter</primary></indexterm>typeinfo for QSyntaxHighlighter</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSyntaxHighlighter::metaObject() const</primary></indexterm>QSyntaxHighlighter::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSyntaxHighlighter::qt_metacast(char const*)</primary></indexterm>QSyntaxHighlighter::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSyntaxHighlighter::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSyntaxHighlighter::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSyntaxHighlighter::~QSyntaxHighlighter()</primary></indexterm>QSyntaxHighlighter::~QSyntaxHighlighter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSyntaxHighlighter::~QSyntaxHighlighter()</primary></indexterm>QSyntaxHighlighter::~QSyntaxHighlighter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSyntaxHighlighter  class
is described by <XREF LINKEND="rtti-416">
</PARA>
<!--classdata-->
<TABLE ID="rtti-416">
<TITLE>typeinfo for QSyntaxHighlighter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSyntaxHighlighter</primary></indexterm>typeinfo name for QSyntaxHighlighter</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QBitmap</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QBitmap class
is described by <XREF LINKEND="cls-417-0">
</PARA>
<!--classdata-->
<TABLE id="cls-417-0">
<TITLE>Primary vtable for QBitmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QBitmap</primary></indexterm>typeinfo for QBitmap</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBitmap::~QBitmap()</primary></indexterm>QBitmap::~QBitmap()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBitmap::~QBitmap()</primary></indexterm>QBitmap::~QBitmap()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::devType() const</primary></indexterm>QPixmap::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::paintEngine() const</primary></indexterm>QPixmap::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPixmap::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QPixmap::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QBitmap  class
is described by <XREF LINKEND="rtti-418">
</PARA>
<!--classdata-->
<TABLE ID="rtti-418">
<TITLE>typeinfo for QBitmap</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QPixmap</primary></indexterm>vtable for QPixmap</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QBitmap</primary></indexterm>typeinfo name for QBitmap</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStyle class
is described by <XREF LINKEND="cls-419-0">
</PARA>
<!--classdata-->
<TABLE id="cls-419-0">
<TITLE>Primary vtable for QStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStyle</primary></indexterm>typeinfo for QStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::metaObject() const</primary></indexterm>QStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::qt_metacast(char const*)</primary></indexterm>QStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::~QStyle()</primary></indexterm>QStyle::~QStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::~QStyle()</primary></indexterm>QStyle::~QStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QWidget*)</primary></indexterm>QStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::unpolish(QWidget*)</primary></indexterm>QStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QApplication*)</primary></indexterm>QStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::unpolish(QApplication*)</primary></indexterm>QStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QPalette&)</primary></indexterm>QStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::standardPalette() const</primary></indexterm>QStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStyle  class
is described by <XREF LINKEND="rtti-420">
</PARA>
<!--classdata-->
<TABLE ID="rtti-420">
<TITLE>typeinfo for QStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStyle</primary></indexterm>typeinfo name for QStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLayout class
is described by <XREF LINKEND="cls-421-0">
</PARA>
<!--classdata-->
<TABLE id="cls-421-0">
<TITLE>Primary vtable for QLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayout</primary></indexterm>typeinfo for QLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::metaObject() const</primary></indexterm>QLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::qt_metacast(char const*)</primary></indexterm>QLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::~QLayout()</primary></indexterm>QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::~QLayout()</primary></indexterm>QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::invalidate()</primary></indexterm>QLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::expandingDirections() const</primary></indexterm>QLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::minimumSize() const</primary></indexterm>QLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::maximumSize() const</primary></indexterm>QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::~QLayout()</primary></indexterm>non-virtual thunk to QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::~QLayout()</primary></indexterm>non-virtual thunk to QLayout::~QLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::hasHeightForWidth() const</primary></indexterm>QLayoutItem::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::heightForWidth(int) const</primary></indexterm>QLayoutItem::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::minimumHeightForWidth(int) const</primary></indexterm>QLayoutItem::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::invalidate()</primary></indexterm>non-virtual thunk to QLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLayout  class
is described by <XREF LINKEND="rtti-422">
</PARA>
<!--classdata-->
<TABLE ID="rtti-422">
<TITLE>typeinfo for QLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLayout</primary></indexterm>typeinfo name for QLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPaintEngine</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPaintEngine class
is described by <XREF LINKEND="cls-423-0">
</PARA>
<!--classdata-->
<TABLE id="cls-423-0">
<TITLE>Primary vtable for QPaintEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPaintEngine</primary></indexterm>typeinfo for QPaintEngine</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::~QPaintEngine()</primary></indexterm>QPaintEngine::~QPaintEngine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::~QPaintEngine()</primary></indexterm>QPaintEngine::~QPaintEngine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawRects(QRect const*, int)</primary></indexterm>QPaintEngine::drawRects(QRect const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawRects(QRectF const*, int)</primary></indexterm>QPaintEngine::drawRects(QRectF const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawLines(QLine const*, int)</primary></indexterm>QPaintEngine::drawLines(QLine const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawLines(QLineF const*, int)</primary></indexterm>QPaintEngine::drawLines(QLineF const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawEllipse(QRectF const&)</primary></indexterm>QPaintEngine::drawEllipse(QRectF const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawEllipse(QRect const&)</primary></indexterm>QPaintEngine::drawEllipse(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawPath(QPainterPath const&)</primary></indexterm>QPaintEngine::drawPath(QPainterPath const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawPoints(QPointF const*, int)</primary></indexterm>QPaintEngine::drawPoints(QPointF const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawPoints(QPoint const*, int)</primary></indexterm>QPaintEngine::drawPoints(QPoint const*, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawPolygon(QPointF const*, int, QPaintEngine::PolygonDrawMode)</primary></indexterm>QPaintEngine::drawPolygon(QPointF const*, int, QPaintEngine::PolygonDrawMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawPolygon(QPoint const*, int, QPaintEngine::PolygonDrawMode)</primary></indexterm>QPaintEngine::drawPolygon(QPoint const*, int, QPaintEngine::PolygonDrawMode)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawTextItem(QPointF const&, QTextItem const&)</primary></indexterm>QPaintEngine::drawTextItem(QPointF const&, QTextItem const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawTiledPixmap(QRectF const&, QPixmap const&, QPointF const&)</primary></indexterm>QPaintEngine::drawTiledPixmap(QRectF const&, QPixmap const&, QPointF const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::drawImage(QRectF const&, QImage const&, QRectF const&, QFlags&lt;Qt::ImageConversionFlag&gt;)</primary></indexterm>QPaintEngine::drawImage(QRectF const&, QImage const&, QRectF const&, QFlags&lt;Qt::ImageConversionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPaintEngine::coordinateOffset() const</primary></indexterm>QPaintEngine::coordinateOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPaintEngine  class
is described by <XREF LINKEND="rtti-424">
</PARA>
<!--classdata-->
<TABLE ID="rtti-424">
<TITLE>typeinfo for QPaintEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPaintEngine</primary></indexterm>typeinfo name for QPaintEngine</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputContext</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputContext class
is described by <XREF LINKEND="cls-425-0">
</PARA>
<!--classdata-->
<TABLE id="cls-425-0">
<TITLE>Primary vtable for QInputContext</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputContext</primary></indexterm>typeinfo for QInputContext</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::metaObject() const</primary></indexterm>QInputContext::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::qt_metacast(char const*)</primary></indexterm>QInputContext::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QInputContext::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::~QInputContext()</primary></indexterm>QInputContext::~QInputContext()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::~QInputContext()</primary></indexterm>QInputContext::~QInputContext()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::update()</primary></indexterm>QInputContext::update()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::mouseHandler(int, QMouseEvent*)</primary></indexterm>QInputContext::mouseHandler(int, QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::font() const</primary></indexterm>QInputContext::font() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::setFocusWidget(QWidget*)</primary></indexterm>QInputContext::setFocusWidget(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::widgetDestroyed(QWidget*)</primary></indexterm>QInputContext::widgetDestroyed(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::actions()</primary></indexterm>QInputContext::actions()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::x11FilterEvent(QWidget*, _XEvent*)</primary></indexterm>QInputContext::x11FilterEvent(QWidget*, _XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContext::filterEvent(QEvent const*)</primary></indexterm>QInputContext::filterEvent(QEvent const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputContext  class
is described by <XREF LINKEND="rtti-426">
</PARA>
<!--classdata-->
<TABLE ID="rtti-426">
<TITLE>typeinfo for QInputContext</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputContext</primary></indexterm>typeinfo name for QInputContext</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDialog class
is described by <XREF LINKEND="cls-427-0">
</PARA>
<!--classdata-->
<TABLE id="cls-427-0">
<TITLE>Primary vtable for QDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDialog</primary></indexterm>typeinfo for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::metaObject() const</primary></indexterm>QDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacast(char const*)</primary></indexterm>QDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::~QDialog()</primary></indexterm>QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::~QDialog()</primary></indexterm>QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDialog::~QDialog()</primary></indexterm>non-virtual thunk to QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDialog::~QDialog()</primary></indexterm>non-virtual thunk to QDialog::~QDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDialog  class
is described by <XREF LINKEND="rtti-428">
</PARA>
<!--classdata-->
<TABLE ID="rtti-428">
<TITLE>typeinfo for QDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDialog</primary></indexterm>typeinfo name for QDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractPageSetupDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractPageSetupDialog class
is described by <XREF LINKEND="cls-429-0">
</PARA>
<!--classdata-->
<TABLE id="cls-429-0">
<TITLE>Primary vtable for QAbstractPageSetupDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractPageSetupDialog</primary></indexterm>typeinfo for QAbstractPageSetupDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::metaObject() const</primary></indexterm>QDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacast(char const*)</primary></indexterm>QDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</primary></indexterm>QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</primary></indexterm>QAbstractPageSetupDialog::~QAbstractPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractPageSetupDialog  class
is described by <XREF LINKEND="rtti-430">
</PARA>
<!--classdata-->
<TABLE ID="rtti-430">
<TITLE>typeinfo for QAbstractPageSetupDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDialog</primary></indexterm>vtable for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractPageSetupDialog</primary></indexterm>typeinfo name for QAbstractPageSetupDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPrinter</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPrinter class
is described by <XREF LINKEND="cls-431-0">
</PARA>
<!--classdata-->
<TABLE id="cls-431-0">
<TITLE>Primary vtable for QPrinter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPrinter</primary></indexterm>typeinfo for QPrinter</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrinter::~QPrinter()</primary></indexterm>QPrinter::~QPrinter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrinter::~QPrinter()</primary></indexterm>QPrinter::~QPrinter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrinter::devType() const</primary></indexterm>QPrinter::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrinter::paintEngine() const</primary></indexterm>QPrinter::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrinter::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QPrinter::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPrinter  class
is described by <XREF LINKEND="rtti-432">
</PARA>
<!--classdata-->
<TABLE ID="rtti-432">
<TITLE>typeinfo for QPrinter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QPaintDevice</primary></indexterm>vtable for QPaintDevice</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPrinter</primary></indexterm>typeinfo name for QPrinter</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QColorDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QColorDialog class
is described by <XREF LINKEND="cls-433-0">
</PARA>
<!--classdata-->
<TABLE id="cls-433-0">
<TITLE>Primary vtable for QColorDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QColorDialog</primary></indexterm>typeinfo for QColorDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::metaObject() const</primary></indexterm>QColorDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::qt_metacast(char const*)</primary></indexterm>QColorDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QColorDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QColorDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QColorDialog::~QColorDialog()</primary></indexterm>non-virtual thunk to QColorDialog::~QColorDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QColorDialog::~QColorDialog()</primary></indexterm>non-virtual thunk to QColorDialog::~QColorDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QColorDialog  class
is described by <XREF LINKEND="rtti-434">
</PARA>
<!--classdata-->
<TABLE ID="rtti-434">
<TITLE>typeinfo for QColorDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDialog</primary></indexterm>vtable for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QColorDialog</primary></indexterm>typeinfo name for QColorDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFontDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFontDialog class
is described by <XREF LINKEND="cls-435-0">
</PARA>
<!--classdata-->
<TABLE id="cls-435-0">
<TITLE>Primary vtable for QFontDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFontDialog</primary></indexterm>typeinfo for QFontDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::metaObject() const</primary></indexterm>QFontDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::qt_metacast(char const*)</primary></indexterm>QFontDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFontDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QFontDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFontDialog::~QFontDialog()</primary></indexterm>non-virtual thunk to QFontDialog::~QFontDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFontDialog::~QFontDialog()</primary></indexterm>non-virtual thunk to QFontDialog::~QFontDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFontDialog  class
is described by <XREF LINKEND="rtti-436">
</PARA>
<!--classdata-->
<TABLE ID="rtti-436">
<TITLE>typeinfo for QFontDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDialog</primary></indexterm>vtable for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFontDialog</primary></indexterm>typeinfo name for QFontDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMessageBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMessageBox class
is described by <XREF LINKEND="cls-437-0">
</PARA>
<!--classdata-->
<TABLE id="cls-437-0">
<TITLE>Primary vtable for QMessageBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMessageBox</primary></indexterm>typeinfo for QMessageBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::metaObject() const</primary></indexterm>QMessageBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::qt_metacast(char const*)</primary></indexterm>QMessageBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMessageBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::~QMessageBox()</primary></indexterm>QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::~QMessageBox()</primary></indexterm>QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::sizeHint() const</primary></indexterm>QMessageBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QMessageBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::resizeEvent(QResizeEvent*)</primary></indexterm>QMessageBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::closeEvent(QCloseEvent*)</primary></indexterm>QMessageBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::showEvent(QShowEvent*)</primary></indexterm>QMessageBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMessageBox::changeEvent(QEvent*)</primary></indexterm>QMessageBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMessageBox::~QMessageBox()</primary></indexterm>non-virtual thunk to QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMessageBox::~QMessageBox()</primary></indexterm>non-virtual thunk to QMessageBox::~QMessageBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMessageBox  class
is described by <XREF LINKEND="rtti-438">
</PARA>
<!--classdata-->
<TABLE ID="rtti-438">
<TITLE>typeinfo for QMessageBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDialog</primary></indexterm>vtable for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMessageBox</primary></indexterm>typeinfo name for QMessageBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QProgressDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QProgressDialog class
is described by <XREF LINKEND="cls-439-0">
</PARA>
<!--classdata-->
<TABLE id="cls-439-0">
<TITLE>Primary vtable for QProgressDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProgressDialog</primary></indexterm>typeinfo for QProgressDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::metaObject() const</primary></indexterm>QProgressDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::qt_metacast(char const*)</primary></indexterm>QProgressDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QProgressDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::~QProgressDialog()</primary></indexterm>QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::~QProgressDialog()</primary></indexterm>QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::sizeHint() const</primary></indexterm>QProgressDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QProgressDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::closeEvent(QCloseEvent*)</primary></indexterm>QProgressDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::showEvent(QShowEvent*)</primary></indexterm>QProgressDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressDialog::changeEvent(QEvent*)</primary></indexterm>QProgressDialog::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QProgressDialog::~QProgressDialog()</primary></indexterm>non-virtual thunk to QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QProgressDialog::~QProgressDialog()</primary></indexterm>non-virtual thunk to QProgressDialog::~QProgressDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QProgressDialog  class
is described by <XREF LINKEND="rtti-440">
</PARA>
<!--classdata-->
<TABLE ID="rtti-440">
<TITLE>typeinfo for QProgressDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDialog</primary></indexterm>vtable for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QProgressDialog</primary></indexterm>typeinfo name for QProgressDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QErrorMessage</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QErrorMessage class
is described by <XREF LINKEND="cls-441-0">
</PARA>
<!--classdata-->
<TABLE id="cls-441-0">
<TITLE>Primary vtable for QErrorMessage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QErrorMessage</primary></indexterm>typeinfo for QErrorMessage</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::metaObject() const</primary></indexterm>QErrorMessage::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::qt_metacast(char const*)</primary></indexterm>QErrorMessage::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QErrorMessage::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::~QErrorMessage()</primary></indexterm>QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::~QErrorMessage()</primary></indexterm>QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QErrorMessage::done(int)</primary></indexterm>QErrorMessage::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QErrorMessage::~QErrorMessage()</primary></indexterm>non-virtual thunk to QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QErrorMessage::~QErrorMessage()</primary></indexterm>non-virtual thunk to QErrorMessage::~QErrorMessage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QErrorMessage  class
is described by <XREF LINKEND="rtti-442">
</PARA>
<!--classdata-->
<TABLE ID="rtti-442">
<TITLE>typeinfo for QErrorMessage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDialog</primary></indexterm>vtable for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QErrorMessage</primary></indexterm>typeinfo name for QErrorMessage</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFileDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFileDialog class
is described by <XREF LINKEND="cls-443-0">
</PARA>
<!--classdata-->
<TABLE id="cls-443-0">
<TITLE>Primary vtable for QFileDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFileDialog</primary></indexterm>typeinfo for QFileDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::metaObject() const</primary></indexterm>QFileDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::qt_metacast(char const*)</primary></indexterm>QFileDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QFileDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::~QFileDialog()</primary></indexterm>QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::~QFileDialog()</primary></indexterm>QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::done(int)</primary></indexterm>QFileDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileDialog::accept()</primary></indexterm>QFileDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFileDialog::~QFileDialog()</primary></indexterm>non-virtual thunk to QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFileDialog::~QFileDialog()</primary></indexterm>non-virtual thunk to QFileDialog::~QFileDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFileDialog  class
is described by <XREF LINKEND="rtti-444">
</PARA>
<!--classdata-->
<TABLE ID="rtti-444">
<TITLE>typeinfo for QFileDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDialog</primary></indexterm>vtable for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFileDialog</primary></indexterm>typeinfo name for QFileDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractItemDelegate</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractItemDelegate class
is described by <XREF LINKEND="cls-445-0">
</PARA>
<!--classdata-->
<TABLE id="cls-445-0">
<TITLE>Primary vtable for QAbstractItemDelegate</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemDelegate</primary></indexterm>typeinfo for QAbstractItemDelegate</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::metaObject() const</primary></indexterm>QAbstractItemDelegate::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::qt_metacast(char const*)</primary></indexterm>QAbstractItemDelegate::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractItemDelegate::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::~QAbstractItemDelegate()</primary></indexterm>QAbstractItemDelegate::~QAbstractItemDelegate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::~QAbstractItemDelegate()</primary></indexterm>QAbstractItemDelegate::~QAbstractItemDelegate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::createEditor(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QAbstractItemDelegate::createEditor(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::setEditorData(QWidget*, QModelIndex const&) const</primary></indexterm>QAbstractItemDelegate::setEditorData(QWidget*, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::setModelData(QWidget*, QAbstractItemModel*, QModelIndex const&) const</primary></indexterm>QAbstractItemDelegate::setModelData(QWidget*, QAbstractItemModel*, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::updateEditorGeometry(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QAbstractItemDelegate::updateEditorGeometry(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemDelegate::editorEvent(QEvent*, QAbstractItemModel*, QStyleOptionViewItem const&, QModelIndex const&)</primary></indexterm>QAbstractItemDelegate::editorEvent(QEvent*, QAbstractItemModel*, QStyleOptionViewItem const&, QModelIndex const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractItemDelegate  class
is described by <XREF LINKEND="rtti-446">
</PARA>
<!--classdata-->
<TABLE ID="rtti-446">
<TITLE>typeinfo for QAbstractItemDelegate</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractItemDelegate</primary></indexterm>typeinfo name for QAbstractItemDelegate</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFileIconProvider</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFileIconProvider class
is described by <XREF LINKEND="cls-447-0">
</PARA>
<!--classdata-->
<TABLE id="cls-447-0">
<TITLE>Primary vtable for QFileIconProvider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFileIconProvider</primary></indexterm>typeinfo for QFileIconProvider</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileIconProvider::~QFileIconProvider()</primary></indexterm>QFileIconProvider::~QFileIconProvider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileIconProvider::~QFileIconProvider()</primary></indexterm>QFileIconProvider::~QFileIconProvider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileIconProvider::icon(QFileIconProvider::IconType) const</primary></indexterm>QFileIconProvider::icon(QFileIconProvider::IconType) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileIconProvider::icon(QFileInfo const&) const</primary></indexterm>QFileIconProvider::icon(QFileInfo const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFileIconProvider::type(QFileInfo const&) const</primary></indexterm>QFileIconProvider::type(QFileInfo const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFileIconProvider  class
is described by <XREF LINKEND="rtti-448">
</PARA>
<!--classdata-->
<TABLE ID="rtti-448">
<TITLE>typeinfo for QFileIconProvider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFileIconProvider</primary></indexterm>typeinfo name for QFileIconProvider</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractPrintDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractPrintDialog class
is described by <XREF LINKEND="cls-449-0">
</PARA>
<!--classdata-->
<TABLE id="cls-449-0">
<TITLE>Primary vtable for QAbstractPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractPrintDialog</primary></indexterm>typeinfo for QAbstractPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::metaObject() const</primary></indexterm>QDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacast(char const*)</primary></indexterm>QDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractPrintDialog::~QAbstractPrintDialog()</primary></indexterm>QAbstractPrintDialog::~QAbstractPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractPrintDialog::~QAbstractPrintDialog()</primary></indexterm>QAbstractPrintDialog::~QAbstractPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractPrintDialog  class
is described by <XREF LINKEND="rtti-450">
</PARA>
<!--classdata-->
<TABLE ID="rtti-450">
<TITLE>typeinfo for QAbstractPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDialog</primary></indexterm>vtable for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractPrintDialog</primary></indexterm>typeinfo name for QAbstractPrintDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPrintDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPrintDialog class
is described by <XREF LINKEND="cls-451-0">
</PARA>
<!--classdata-->
<TABLE id="cls-451-0">
<TITLE>Primary vtable for QPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPrintDialog</primary></indexterm>typeinfo for QPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::metaObject() const</primary></indexterm>QPrintDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::qt_metacast(char const*)</primary></indexterm>QPrintDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QPrintDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::~QPrintDialog()</primary></indexterm>QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::~QPrintDialog()</primary></indexterm>QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPrintDialog::exec()</primary></indexterm>QPrintDialog::exec()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPrintDialog::~QPrintDialog()</primary></indexterm>non-virtual thunk to QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPrintDialog::~QPrintDialog()</primary></indexterm>non-virtual thunk to QPrintDialog::~QPrintDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPrintDialog  class
is described by <XREF LINKEND="rtti-452">
</PARA>
<!--classdata-->
<TABLE ID="rtti-452">
<TITLE>typeinfo for QPrintDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractPrintDialog</primary></indexterm>vtable for QAbstractPrintDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPrintDialog</primary></indexterm>typeinfo name for QPrintDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPageSetupDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPageSetupDialog class
is described by <XREF LINKEND="cls-453-0">
</PARA>
<!--classdata-->
<TABLE id="cls-453-0">
<TITLE>Primary vtable for QPageSetupDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPageSetupDialog</primary></indexterm>typeinfo for QPageSetupDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::metaObject() const</primary></indexterm>QDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacast(char const*)</primary></indexterm>QDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPageSetupDialog::~QPageSetupDialog()</primary></indexterm>QPageSetupDialog::~QPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPageSetupDialog::~QPageSetupDialog()</primary></indexterm>QPageSetupDialog::~QPageSetupDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPageSetupDialog::exec()</primary></indexterm>QPageSetupDialog::exec()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPageSetupDialog  class
is described by <XREF LINKEND="rtti-454">
</PARA>
<!--classdata-->
<TABLE ID="rtti-454">
<TITLE>typeinfo for QPageSetupDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractPageSetupDialog</primary></indexterm>vtable for QAbstractPageSetupDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPageSetupDialog</primary></indexterm>typeinfo name for QPageSetupDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFrame</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFrame class
is described by <XREF LINKEND="cls-455-0">
</PARA>
<!--classdata-->
<TABLE id="cls-455-0">
<TITLE>Primary vtable for QFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFrame</primary></indexterm>typeinfo for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::metaObject() const</primary></indexterm>QFrame::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::qt_metacast(char const*)</primary></indexterm>QFrame::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QFrame::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::~QFrame()</primary></indexterm>QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::~QFrame()</primary></indexterm>QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::event(QEvent*)</primary></indexterm>QFrame::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::sizeHint() const</primary></indexterm>QFrame::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFrame::~QFrame()</primary></indexterm>non-virtual thunk to QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFrame::~QFrame()</primary></indexterm>non-virtual thunk to QFrame::~QFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFrame  class
is described by <XREF LINKEND="rtti-456">
</PARA>
<!--classdata-->
<TABLE ID="rtti-456">
<TITLE>typeinfo for QFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFrame</primary></indexterm>typeinfo name for QFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLineEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLineEdit class
is described by <XREF LINKEND="cls-457-0">
</PARA>
<!--classdata-->
<TABLE id="cls-457-0">
<TITLE>Primary vtable for QLineEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLineEdit</primary></indexterm>typeinfo for QLineEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::metaObject() const</primary></indexterm>QLineEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::qt_metacast(char const*)</primary></indexterm>QLineEdit::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QLineEdit::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::~QLineEdit()</primary></indexterm>QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::~QLineEdit()</primary></indexterm>QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::event(QEvent*)</primary></indexterm>QLineEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::sizeHint() const</primary></indexterm>QLineEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::minimumSizeHint() const</primary></indexterm>QLineEdit::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mousePressEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QLineEdit::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QLineEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QLineEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::focusOutEvent(QFocusEvent*)</primary></indexterm>QLineEdit::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::paintEvent(QPaintEvent*)</primary></indexterm>QLineEdit::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QLineEdit::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QLineEdit::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QLineEdit::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QLineEdit::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::dropEvent(QDropEvent*)</primary></indexterm>QLineEdit::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::changeEvent(QEvent*)</primary></indexterm>QLineEdit::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QLineEdit::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLineEdit::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QLineEdit::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLineEdit::~QLineEdit()</primary></indexterm>non-virtual thunk to QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLineEdit::~QLineEdit()</primary></indexterm>non-virtual thunk to QLineEdit::~QLineEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLineEdit  class
is described by <XREF LINKEND="rtti-458">
</PARA>
<!--classdata-->
<TABLE ID="rtti-458">
<TITLE>typeinfo for QLineEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLineEdit</primary></indexterm>typeinfo name for QLineEdit</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QValidator class
is described by <XREF LINKEND="cls-459-0">
</PARA>
<!--classdata-->
<TABLE id="cls-459-0">
<TITLE>Primary vtable for QValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QValidator</primary></indexterm>typeinfo for QValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::metaObject() const</primary></indexterm>QValidator::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::qt_metacast(char const*)</primary></indexterm>QValidator::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QValidator::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::~QValidator()</primary></indexterm>QValidator::~QValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::~QValidator()</primary></indexterm>QValidator::~QValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::fixup(QString&) const</primary></indexterm>QValidator::fixup(QString&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QValidator  class
is described by <XREF LINKEND="rtti-460">
</PARA>
<!--classdata-->
<TABLE ID="rtti-460">
<TITLE>typeinfo for QValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QValidator</primary></indexterm>typeinfo name for QValidator</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMenu</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMenu class
is described by <XREF LINKEND="cls-461-0">
</PARA>
<!--classdata-->
<TABLE id="cls-461-0">
<TITLE>Primary vtable for QMenu</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenu</primary></indexterm>typeinfo for QMenu</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::metaObject() const</primary></indexterm>QMenu::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::qt_metacast(char const*)</primary></indexterm>QMenu::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMenu::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::~QMenu()</primary></indexterm>QMenu::~QMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::~QMenu()</primary></indexterm>QMenu::~QMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::event(QEvent*)</primary></indexterm>QMenu::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::timerEvent(QTimerEvent*)</primary></indexterm>QMenu::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::sizeHint() const</primary></indexterm>QMenu::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::mousePressEvent(QMouseEvent*)</primary></indexterm>QMenu::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QMenu::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QMenu::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::wheelEvent(QWheelEvent*)</primary></indexterm>QMenu::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::keyPressEvent(QKeyEvent*)</primary></indexterm>QMenu::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::enterEvent(QEvent*)</primary></indexterm>QMenu::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::leaveEvent(QEvent*)</primary></indexterm>QMenu::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::paintEvent(QPaintEvent*)</primary></indexterm>QMenu::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::actionEvent(QActionEvent*)</primary></indexterm>QMenu::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::hideEvent(QHideEvent*)</primary></indexterm>QMenu::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenu::changeEvent(QEvent*)</primary></indexterm>QMenu::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenu::~QMenu()</primary></indexterm>non-virtual thunk to QMenu::~QMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenu::~QMenu()</primary></indexterm>non-virtual thunk to QMenu::~QMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMenu  class
is described by <XREF LINKEND="rtti-462">
</PARA>
<!--classdata-->
<TABLE ID="rtti-462">
<TITLE>typeinfo for QMenu</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMenu</primary></indexterm>typeinfo name for QMenu</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputDialog</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputDialog class
is described by <XREF LINKEND="cls-463-0">
</PARA>
<!--classdata-->
<TABLE id="cls-463-0">
<TITLE>Primary vtable for QInputDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputDialog</primary></indexterm>typeinfo for QInputDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::metaObject() const</primary></indexterm>QInputDialog::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::qt_metacast(char const*)</primary></indexterm>QInputDialog::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputDialog::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QInputDialog::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::eventFilter(QObject*, QEvent*)</primary></indexterm>QDialog::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::setVisible(bool)</primary></indexterm>QDialog::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::sizeHint() const</primary></indexterm>QDialog::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::minimumSizeHint() const</primary></indexterm>QDialog::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::keyPressEvent(QKeyEvent*)</primary></indexterm>QDialog::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::resizeEvent(QResizeEvent*)</primary></indexterm>QDialog::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::closeEvent(QCloseEvent*)</primary></indexterm>QDialog::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QDialog::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::showEvent(QShowEvent*)</primary></indexterm>QDialog::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::done(int)</primary></indexterm>QDialog::done(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::accept()</primary></indexterm>QDialog::accept()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDialog::reject()</primary></indexterm>QDialog::reject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QInputDialog::~QInputDialog()</primary></indexterm>non-virtual thunk to QInputDialog::~QInputDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QInputDialog::~QInputDialog()</primary></indexterm>non-virtual thunk to QInputDialog::~QInputDialog()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputDialog  class
is described by <XREF LINKEND="rtti-464">
</PARA>
<!--classdata-->
<TABLE ID="rtti-464">
<TITLE>typeinfo for QInputDialog</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDialog</primary></indexterm>vtable for QDialog</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputDialog</primary></indexterm>typeinfo name for QInputDialog</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QImage</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImage class
is described by <XREF LINKEND="cls-465-0">
</PARA>
<!--classdata-->
<TABLE id="cls-465-0">
<TITLE>Primary vtable for QImage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImage</primary></indexterm>typeinfo for QImage</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImage::~QImage()</primary></indexterm>QImage::~QImage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImage::~QImage()</primary></indexterm>QImage::~QImage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImage::devType() const</primary></indexterm>QImage::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImage::paintEngine() const</primary></indexterm>QImage::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImage::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QImage::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QImage  class
is described by <XREF LINKEND="rtti-466">
</PARA>
<!--classdata-->
<TABLE ID="rtti-466">
<TITLE>typeinfo for QImage</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QPaintDevice</primary></indexterm>vtable for QPaintDevice</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImage</primary></indexterm>typeinfo name for QImage</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QImageIOHandler</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImageIOHandler class
is described by <XREF LINKEND="cls-467-0">
</PARA>
<!--classdata-->
<TABLE id="cls-467-0">
<TITLE>Primary vtable for QImageIOHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImageIOHandler</primary></indexterm>typeinfo for QImageIOHandler</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::~QImageIOHandler()</primary></indexterm>QImageIOHandler::~QImageIOHandler()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::~QImageIOHandler()</primary></indexterm>QImageIOHandler::~QImageIOHandler()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::name() const</primary></indexterm>QImageIOHandler::name() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::write(QImage const&)</primary></indexterm>QImageIOHandler::write(QImage const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::option(QImageIOHandler::ImageOption) const</primary></indexterm>QImageIOHandler::option(QImageIOHandler::ImageOption) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::setOption(QImageIOHandler::ImageOption, QVariant const&)</primary></indexterm>QImageIOHandler::setOption(QImageIOHandler::ImageOption, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::supportsOption(QImageIOHandler::ImageOption) const</primary></indexterm>QImageIOHandler::supportsOption(QImageIOHandler::ImageOption) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::jumpToNextImage()</primary></indexterm>QImageIOHandler::jumpToNextImage()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::jumpToImage(int)</primary></indexterm>QImageIOHandler::jumpToImage(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::loopCount() const</primary></indexterm>QImageIOHandler::loopCount() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::imageCount() const</primary></indexterm>QImageIOHandler::imageCount() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::nextImageDelay() const</primary></indexterm>QImageIOHandler::nextImageDelay() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::currentImageNumber() const</primary></indexterm>QImageIOHandler::currentImageNumber() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandler::currentImageRect() const</primary></indexterm>QImageIOHandler::currentImageRect() const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QImageIOHandler  class
is described by <XREF LINKEND="rtti-468">
</PARA>
<!--classdata-->
<TABLE ID="rtti-468">
<TITLE>typeinfo for QImageIOHandler</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImageIOHandler</primary></indexterm>typeinfo name for QImageIOHandler</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QImageIOHandlerFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImageIOHandlerFactoryInterface class
is described by <XREF LINKEND="cls-469-0">
</PARA>
<!--classdata-->
<TABLE id="cls-469-0">
<TITLE>Primary vtable for QImageIOHandlerFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImageIOHandlerFactoryInterface</primary></indexterm>typeinfo for QImageIOHandlerFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandlerFactoryInterface::~QImageIOHandlerFactoryInterface()</primary></indexterm>QImageIOHandlerFactoryInterface::~QImageIOHandlerFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOHandlerFactoryInterface::~QImageIOHandlerFactoryInterface()</primary></indexterm>QImageIOHandlerFactoryInterface::~QImageIOHandlerFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QImageIOHandlerFactoryInterface  class
is described by <XREF LINKEND="rtti-470">
</PARA>
<!--classdata-->
<TABLE ID="rtti-470">
<TITLE>typeinfo for QImageIOHandlerFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImageIOHandlerFactoryInterface</primary></indexterm>typeinfo name for QImageIOHandlerFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QImageIOPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QImageIOPlugin class
is described by <XREF LINKEND="cls-471-0">
</PARA>
<!--classdata-->
<TABLE id="cls-471-0">
<TITLE>Primary vtable for QImageIOPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QImageIOPlugin</primary></indexterm>typeinfo for QImageIOPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOPlugin::metaObject() const</primary></indexterm>QImageIOPlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOPlugin::qt_metacast(char const*)</primary></indexterm>QImageIOPlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOPlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QImageIOPlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOPlugin::~QImageIOPlugin()</primary></indexterm>QImageIOPlugin::~QImageIOPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QImageIOPlugin::~QImageIOPlugin()</primary></indexterm>QImageIOPlugin::~QImageIOPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QImageIOPlugin::~QImageIOPlugin()</primary></indexterm>non-virtual thunk to QImageIOPlugin::~QImageIOPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QImageIOPlugin::~QImageIOPlugin()</primary></indexterm>non-virtual thunk to QImageIOPlugin::~QImageIOPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QImageIOPlugin  class
is described by <XREF LINKEND="rtti-472">
</PARA>
<!--classdata-->
<TABLE ID="rtti-472">
<TITLE>typeinfo for QImageIOPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QImageIOPlugin</primary></indexterm>typeinfo name for QImageIOPlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPicture</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPicture class
is described by <XREF LINKEND="cls-473-0">
</PARA>
<!--classdata-->
<TABLE id="cls-473-0">
<TITLE>Primary vtable for QPicture</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPicture</primary></indexterm>typeinfo for QPicture</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::~QPicture()</primary></indexterm>QPicture::~QPicture()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::~QPicture()</primary></indexterm>QPicture::~QPicture()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::devType() const</primary></indexterm>QPicture::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::paintEngine() const</primary></indexterm>QPicture::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QPicture::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPicture::setData(char const*, unsigned int)</primary></indexterm>QPicture::setData(char const*, unsigned int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPicture  class
is described by <XREF LINKEND="rtti-474">
</PARA>
<!--classdata-->
<TABLE ID="rtti-474">
<TITLE>typeinfo for QPicture</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QPaintDevice</primary></indexterm>vtable for QPaintDevice</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPicture</primary></indexterm>typeinfo name for QPicture</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMovie</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMovie class
is described by <XREF LINKEND="cls-475-0">
</PARA>
<!--classdata-->
<TABLE id="cls-475-0">
<TITLE>Primary vtable for QMovie</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMovie</primary></indexterm>typeinfo for QMovie</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMovie::metaObject() const</primary></indexterm>QMovie::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMovie::qt_metacast(char const*)</primary></indexterm>QMovie::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMovie::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMovie::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMovie::~QMovie()</primary></indexterm>QMovie::~QMovie()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMovie::~QMovie()</primary></indexterm>QMovie::~QMovie()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMovie  class
is described by <XREF LINKEND="rtti-476">
</PARA>
<!--classdata-->
<TABLE ID="rtti-476">
<TITLE>typeinfo for QMovie</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMovie</primary></indexterm>typeinfo name for QMovie</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconEngineFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconEngineFactoryInterface class
is described by <XREF LINKEND="cls-477-0">
</PARA>
<!--classdata-->
<TABLE id="cls-477-0">
<TITLE>Primary vtable for QIconEngineFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconEngineFactoryInterface</primary></indexterm>typeinfo for QIconEngineFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngineFactoryInterface::~QIconEngineFactoryInterface()</primary></indexterm>QIconEngineFactoryInterface::~QIconEngineFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngineFactoryInterface::~QIconEngineFactoryInterface()</primary></indexterm>QIconEngineFactoryInterface::~QIconEngineFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIconEngineFactoryInterface  class
is described by <XREF LINKEND="rtti-478">
</PARA>
<!--classdata-->
<TABLE ID="rtti-478">
<TITLE>typeinfo for QIconEngineFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconEngineFactoryInterface</primary></indexterm>typeinfo name for QIconEngineFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconEnginePlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconEnginePlugin class
is described by <XREF LINKEND="cls-479-0">
</PARA>
<!--classdata-->
<TABLE id="cls-479-0">
<TITLE>Primary vtable for QIconEnginePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconEnginePlugin</primary></indexterm>typeinfo for QIconEnginePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEnginePlugin::metaObject() const</primary></indexterm>QIconEnginePlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEnginePlugin::qt_metacast(char const*)</primary></indexterm>QIconEnginePlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEnginePlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QIconEnginePlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEnginePlugin::~QIconEnginePlugin()</primary></indexterm>QIconEnginePlugin::~QIconEnginePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEnginePlugin::~QIconEnginePlugin()</primary></indexterm>QIconEnginePlugin::~QIconEnginePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QIconEnginePlugin::~QIconEnginePlugin()</primary></indexterm>non-virtual thunk to QIconEnginePlugin::~QIconEnginePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QIconEnginePlugin::~QIconEnginePlugin()</primary></indexterm>non-virtual thunk to QIconEnginePlugin::~QIconEnginePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIconEnginePlugin  class
is described by <XREF LINKEND="rtti-480">
</PARA>
<!--classdata-->
<TABLE ID="rtti-480">
<TITLE>typeinfo for QIconEnginePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconEnginePlugin</primary></indexterm>typeinfo name for QIconEnginePlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIconEngine</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIconEngine class
is described by <XREF LINKEND="cls-481-0">
</PARA>
<!--classdata-->
<TABLE id="cls-481-0">
<TITLE>Primary vtable for QIconEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIconEngine</primary></indexterm>typeinfo for QIconEngine</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::~QIconEngine()</primary></indexterm>QIconEngine::~QIconEngine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::~QIconEngine()</primary></indexterm>QIconEngine::~QIconEngine()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::actualSize(QSize const&, QIcon::Mode, QIcon::State)</primary></indexterm>QIconEngine::actualSize(QSize const&, QIcon::Mode, QIcon::State)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::pixmap(QSize const&, QIcon::Mode, QIcon::State)</primary></indexterm>QIconEngine::pixmap(QSize const&, QIcon::Mode, QIcon::State)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::addPixmap(QPixmap const&, QIcon::Mode, QIcon::State)</primary></indexterm>QIconEngine::addPixmap(QPixmap const&, QIcon::Mode, QIcon::State)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIconEngine::addFile(QString const&, QSize const&, QIcon::Mode, QIcon::State)</primary></indexterm>QIconEngine::addFile(QString const&, QSize const&, QIcon::Mode, QIcon::State)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIconEngine  class
is described by <XREF LINKEND="rtti-482">
</PARA>
<!--classdata-->
<TABLE ID="rtti-482">
<TITLE>typeinfo for QIconEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIconEngine</primary></indexterm>typeinfo name for QIconEngine</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPictureFormatInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPictureFormatInterface class
is described by <XREF LINKEND="cls-483-0">
</PARA>
<!--classdata-->
<TABLE id="cls-483-0">
<TITLE>Primary vtable for QPictureFormatInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPictureFormatInterface</primary></indexterm>typeinfo for QPictureFormatInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatInterface::~QPictureFormatInterface()</primary></indexterm>QPictureFormatInterface::~QPictureFormatInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatInterface::~QPictureFormatInterface()</primary></indexterm>QPictureFormatInterface::~QPictureFormatInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPictureFormatInterface  class
is described by <XREF LINKEND="rtti-484">
</PARA>
<!--classdata-->
<TABLE ID="rtti-484">
<TITLE>typeinfo for QPictureFormatInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPictureFormatInterface</primary></indexterm>typeinfo name for QPictureFormatInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPictureFormatPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPictureFormatPlugin class
is described by <XREF LINKEND="cls-485-0">
</PARA>
<!--classdata-->
<TABLE id="cls-485-0">
<TITLE>Primary vtable for QPictureFormatPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPictureFormatPlugin</primary></indexterm>typeinfo for QPictureFormatPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::metaObject() const</primary></indexterm>QPictureFormatPlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::qt_metacast(char const*)</primary></indexterm>QPictureFormatPlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QPictureFormatPlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::~QPictureFormatPlugin()</primary></indexterm>QPictureFormatPlugin::~QPictureFormatPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::~QPictureFormatPlugin()</primary></indexterm>QPictureFormatPlugin::~QPictureFormatPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::loadPicture(QString const&, QString const&, QPicture*)</primary></indexterm>QPictureFormatPlugin::loadPicture(QString const&, QString const&, QPicture*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPictureFormatPlugin::savePicture(QString const&, QString const&, QPicture const&)</primary></indexterm>QPictureFormatPlugin::savePicture(QString const&, QString const&, QPicture const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPictureFormatPlugin::~QPictureFormatPlugin()</primary></indexterm>non-virtual thunk to QPictureFormatPlugin::~QPictureFormatPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPictureFormatPlugin::~QPictureFormatPlugin()</primary></indexterm>non-virtual thunk to QPictureFormatPlugin::~QPictureFormatPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPictureFormatPlugin::loadPicture(QString const&, QString const&, QPicture*)</primary></indexterm>non-virtual thunk to QPictureFormatPlugin::loadPicture(QString const&, QString const&, QPicture*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPictureFormatPlugin::savePicture(QString const&, QString const&, QPicture const&)</primary></indexterm>non-virtual thunk to QPictureFormatPlugin::savePicture(QString const&, QString const&, QPicture const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPictureFormatPlugin  class
is described by <XREF LINKEND="rtti-486">
</PARA>
<!--classdata-->
<TABLE ID="rtti-486">
<TITLE>typeinfo for QPictureFormatPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPictureFormatPlugin</primary></indexterm>typeinfo name for QPictureFormatPlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPrintEngine</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPrintEngine class
is described by <XREF LINKEND="cls-487-0">
</PARA>
<!--classdata-->
<TABLE id="cls-487-0">
<TITLE>Primary vtable for QPrintEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPrintEngine</primary></indexterm>typeinfo for QPrintEngine</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPrintEngine  class
is described by <XREF LINKEND="rtti-488">
</PARA>
<!--classdata-->
<TABLE ID="rtti-488">
<TITLE>typeinfo for QPrintEngine</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPrintEngine</primary></indexterm>typeinfo name for QPrintEngine</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QItemSelectionModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QItemSelectionModel class
is described by <XREF LINKEND="cls-489-0">
</PARA>
<!--classdata-->
<TABLE id="cls-489-0">
<TITLE>Primary vtable for QItemSelectionModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QItemSelectionModel</primary></indexterm>typeinfo for QItemSelectionModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::metaObject() const</primary></indexterm>QItemSelectionModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::qt_metacast(char const*)</primary></indexterm>QItemSelectionModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QItemSelectionModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::~QItemSelectionModel()</primary></indexterm>QItemSelectionModel::~QItemSelectionModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::~QItemSelectionModel()</primary></indexterm>QItemSelectionModel::~QItemSelectionModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::select(QModelIndex const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QItemSelectionModel::select(QModelIndex const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::select(QItemSelection const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QItemSelectionModel::select(QItemSelection const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::clear()</primary></indexterm>QItemSelectionModel::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemSelectionModel::reset()</primary></indexterm>QItemSelectionModel::reset()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QItemSelectionModel  class
is described by <XREF LINKEND="rtti-490">
</PARA>
<!--classdata-->
<TABLE ID="rtti-490">
<TITLE>typeinfo for QItemSelectionModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QItemSelectionModel</primary></indexterm>typeinfo name for QItemSelectionModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractScrollArea</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractScrollArea class
is described by <XREF LINKEND="cls-491-0">
</PARA>
<!--classdata-->
<TABLE id="cls-491-0">
<TITLE>Primary vtable for QAbstractScrollArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractScrollArea</primary></indexterm>typeinfo for QAbstractScrollArea</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::metaObject() const</primary></indexterm>QAbstractScrollArea::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::qt_metacast(char const*)</primary></indexterm>QAbstractScrollArea::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractScrollArea::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::~QAbstractScrollArea()</primary></indexterm>QAbstractScrollArea::~QAbstractScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::~QAbstractScrollArea()</primary></indexterm>QAbstractScrollArea::~QAbstractScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::event(QEvent*)</primary></indexterm>QAbstractScrollArea::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractScrollArea::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractScrollArea::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractScrollArea::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractScrollArea::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractScrollArea::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractScrollArea::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dropEvent(QDropEvent*)</primary></indexterm>QAbstractScrollArea::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::viewportEvent(QEvent*)</primary></indexterm>QAbstractScrollArea::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::scrollContentsBy(int, int)</primary></indexterm>QAbstractScrollArea::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractScrollArea::~QAbstractScrollArea()</primary></indexterm>non-virtual thunk to QAbstractScrollArea::~QAbstractScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractScrollArea::~QAbstractScrollArea()</primary></indexterm>non-virtual thunk to QAbstractScrollArea::~QAbstractScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractScrollArea  class
is described by <XREF LINKEND="rtti-492">
</PARA>
<!--classdata-->
<TABLE ID="rtti-492">
<TITLE>typeinfo for QAbstractScrollArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QFrame</primary></indexterm>vtable for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractScrollArea</primary></indexterm>typeinfo name for QAbstractScrollArea</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QScrollBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QScrollBar class
is described by <XREF LINKEND="cls-493-0">
</PARA>
<!--classdata-->
<TABLE id="cls-493-0">
<TITLE>Primary vtable for QScrollBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollBar</primary></indexterm>typeinfo for QScrollBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::metaObject() const</primary></indexterm>QScrollBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::qt_metacast(char const*)</primary></indexterm>QScrollBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QScrollBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::~QScrollBar()</primary></indexterm>QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::~QScrollBar()</primary></indexterm>QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::event(QEvent*)</primary></indexterm>QScrollBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSlider::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::sizeHint() const</primary></indexterm>QScrollBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::mousePressEvent(QMouseEvent*)</primary></indexterm>QScrollBar::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QScrollBar::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QScrollBar::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSlider::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSlider::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::paintEvent(QPaintEvent*)</primary></indexterm>QScrollBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QScrollBar::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::hideEvent(QHideEvent*)</primary></indexterm>QScrollBar::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::changeEvent(QEvent*)</primary></indexterm>QAbstractSlider::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollBar::sliderChange(QAbstractSlider::SliderChange)</primary></indexterm>QScrollBar::sliderChange(QAbstractSlider::SliderChange)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollBar::~QScrollBar()</primary></indexterm>non-virtual thunk to QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollBar::~QScrollBar()</primary></indexterm>non-virtual thunk to QScrollBar::~QScrollBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QScrollBar  class
is described by <XREF LINKEND="rtti-494">
</PARA>
<!--classdata-->
<TABLE ID="rtti-494">
<TITLE>typeinfo for QScrollBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QScrollBar</primary></indexterm>typeinfo name for QScrollBar</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QIntValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QIntValidator class
is described by <XREF LINKEND="cls-495-0">
</PARA>
<!--classdata-->
<TABLE id="cls-495-0">
<TITLE>Primary vtable for QIntValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QIntValidator</primary></indexterm>typeinfo for QIntValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::metaObject() const</primary></indexterm>QIntValidator::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::qt_metacast(char const*)</primary></indexterm>QIntValidator::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QIntValidator::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::~QIntValidator()</primary></indexterm>QIntValidator::~QIntValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::~QIntValidator()</primary></indexterm>QIntValidator::~QIntValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::validate(QString&, int&) const</primary></indexterm>QIntValidator::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::fixup(QString&) const</primary></indexterm>QValidator::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QIntValidator::setRange(int, int)</primary></indexterm>QIntValidator::setRange(int, int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QIntValidator  class
is described by <XREF LINKEND="rtti-496">
</PARA>
<!--classdata-->
<TABLE ID="rtti-496">
<TITLE>typeinfo for QIntValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QValidator</primary></indexterm>vtable for QValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QIntValidator</primary></indexterm>typeinfo name for QIntValidator</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDoubleValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDoubleValidator class
is described by <XREF LINKEND="cls-497-0">
</PARA>
<!--classdata-->
<TABLE id="cls-497-0">
<TITLE>Primary vtable for QDoubleValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDoubleValidator</primary></indexterm>typeinfo for QDoubleValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::metaObject() const</primary></indexterm>QDoubleValidator::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::qt_metacast(char const*)</primary></indexterm>QDoubleValidator::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDoubleValidator::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::~QDoubleValidator()</primary></indexterm>QDoubleValidator::~QDoubleValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::~QDoubleValidator()</primary></indexterm>QDoubleValidator::~QDoubleValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::validate(QString&, int&) const</primary></indexterm>QDoubleValidator::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::fixup(QString&) const</primary></indexterm>QValidator::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleValidator::setRange(double, double, int)</primary></indexterm>QDoubleValidator::setRange(double, double, int)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDoubleValidator  class
is described by <XREF LINKEND="rtti-498">
</PARA>
<!--classdata-->
<TABLE ID="rtti-498">
<TITLE>typeinfo for QDoubleValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QValidator</primary></indexterm>vtable for QValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDoubleValidator</primary></indexterm>typeinfo name for QDoubleValidator</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QRegExpValidator</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QRegExpValidator class
is described by <XREF LINKEND="cls-499-0">
</PARA>
<!--classdata-->
<TABLE id="cls-499-0">
<TITLE>Primary vtable for QRegExpValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRegExpValidator</primary></indexterm>typeinfo for QRegExpValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::metaObject() const</primary></indexterm>QRegExpValidator::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::qt_metacast(char const*)</primary></indexterm>QRegExpValidator::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QRegExpValidator::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::~QRegExpValidator()</primary></indexterm>QRegExpValidator::~QRegExpValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::~QRegExpValidator()</primary></indexterm>QRegExpValidator::~QRegExpValidator()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRegExpValidator::validate(QString&, int&) const</primary></indexterm>QRegExpValidator::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QValidator::fixup(QString&) const</primary></indexterm>QValidator::fixup(QString&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QRegExpValidator  class
is described by <XREF LINKEND="rtti-500">
</PARA>
<!--classdata-->
<TABLE ID="rtti-500">
<TITLE>typeinfo for QRegExpValidator</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QValidator</primary></indexterm>vtable for QValidator</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QRegExpValidator</primary></indexterm>typeinfo name for QRegExpValidator</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractSpinBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractSpinBox class
is described by <XREF LINKEND="cls-501-0">
</PARA>
<!--classdata-->
<TABLE id="cls-501-0">
<TITLE>Primary vtable for QAbstractSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSpinBox</primary></indexterm>typeinfo for QAbstractSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::metaObject() const</primary></indexterm>QAbstractSpinBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::qt_metacast(char const*)</primary></indexterm>QAbstractSpinBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractSpinBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::~QAbstractSpinBox()</primary></indexterm>QAbstractSpinBox::~QAbstractSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::~QAbstractSpinBox()</primary></indexterm>QAbstractSpinBox::~QAbstractSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::event(QEvent*)</primary></indexterm>QAbstractSpinBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::sizeHint() const</primary></indexterm>QAbstractSpinBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSpinBox::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::validate(QString&, int&) const</primary></indexterm>QAbstractSpinBox::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::fixup(QString&) const</primary></indexterm>QAbstractSpinBox::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepBy(int)</primary></indexterm>QAbstractSpinBox::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::clear()</primary></indexterm>QAbstractSpinBox::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepEnabled() const</primary></indexterm>QAbstractSpinBox::stepEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractSpinBox::~QAbstractSpinBox()</primary></indexterm>non-virtual thunk to QAbstractSpinBox::~QAbstractSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractSpinBox::~QAbstractSpinBox()</primary></indexterm>non-virtual thunk to QAbstractSpinBox::~QAbstractSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractSpinBox  class
is described by <XREF LINKEND="rtti-502">
</PARA>
<!--classdata-->
<TABLE ID="rtti-502">
<TITLE>typeinfo for QAbstractSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractSpinBox</primary></indexterm>typeinfo name for QAbstractSpinBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractSlider</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractSlider class
is described by <XREF LINKEND="cls-503-0">
</PARA>
<!--classdata-->
<TABLE id="cls-503-0">
<TITLE>Primary vtable for QAbstractSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractSlider</primary></indexterm>typeinfo for QAbstractSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::metaObject() const</primary></indexterm>QAbstractSlider::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::qt_metacast(char const*)</primary></indexterm>QAbstractSlider::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractSlider::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::~QAbstractSlider()</primary></indexterm>QAbstractSlider::~QAbstractSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::~QAbstractSlider()</primary></indexterm>QAbstractSlider::~QAbstractSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::event(QEvent*)</primary></indexterm>QAbstractSlider::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSlider::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSlider::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSlider::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::changeEvent(QEvent*)</primary></indexterm>QAbstractSlider::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::sliderChange(QAbstractSlider::SliderChange)</primary></indexterm>QAbstractSlider::sliderChange(QAbstractSlider::SliderChange)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractSlider::~QAbstractSlider()</primary></indexterm>non-virtual thunk to QAbstractSlider::~QAbstractSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractSlider::~QAbstractSlider()</primary></indexterm>non-virtual thunk to QAbstractSlider::~QAbstractSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractSlider  class
is described by <XREF LINKEND="rtti-504">
</PARA>
<!--classdata-->
<TABLE ID="rtti-504">
<TITLE>typeinfo for QAbstractSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractSlider</primary></indexterm>typeinfo name for QAbstractSlider</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSlider</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSlider class
is described by <XREF LINKEND="cls-505-0">
</PARA>
<!--classdata-->
<TABLE id="cls-505-0">
<TITLE>Primary vtable for QSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSlider</primary></indexterm>typeinfo for QSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::metaObject() const</primary></indexterm>QSlider::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::qt_metacast(char const*)</primary></indexterm>QSlider::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSlider::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::~QSlider()</primary></indexterm>QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::~QSlider()</primary></indexterm>QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::event(QEvent*)</primary></indexterm>QSlider::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSlider::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::sizeHint() const</primary></indexterm>QSlider::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::minimumSizeHint() const</primary></indexterm>QSlider::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::mousePressEvent(QMouseEvent*)</primary></indexterm>QSlider::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QSlider::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QSlider::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSlider::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSlider::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSlider::paintEvent(QPaintEvent*)</primary></indexterm>QSlider::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::changeEvent(QEvent*)</primary></indexterm>QAbstractSlider::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::sliderChange(QAbstractSlider::SliderChange)</primary></indexterm>QAbstractSlider::sliderChange(QAbstractSlider::SliderChange)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSlider::~QSlider()</primary></indexterm>non-virtual thunk to QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSlider::~QSlider()</primary></indexterm>non-virtual thunk to QSlider::~QSlider()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSlider  class
is described by <XREF LINKEND="rtti-506">
</PARA>
<!--classdata-->
<TABLE ID="rtti-506">
<TITLE>typeinfo for QSlider</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractSlider</primary></indexterm>vtable for QAbstractSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSlider</primary></indexterm>typeinfo name for QSlider</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTabBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTabBar class
is described by <XREF LINKEND="cls-507-0">
</PARA>
<!--classdata-->
<TABLE id="cls-507-0">
<TITLE>Primary vtable for QTabBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabBar</primary></indexterm>typeinfo for QTabBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::metaObject() const</primary></indexterm>QTabBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::qt_metacast(char const*)</primary></indexterm>QTabBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTabBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::~QTabBar()</primary></indexterm>QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::~QTabBar()</primary></indexterm>QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::event(QEvent*)</primary></indexterm>QTabBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::sizeHint() const</primary></indexterm>QTabBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::minimumSizeHint() const</primary></indexterm>QTabBar::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::mousePressEvent(QMouseEvent*)</primary></indexterm>QTabBar::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTabBar::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QTabBar::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::keyPressEvent(QKeyEvent*)</primary></indexterm>QTabBar::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::paintEvent(QPaintEvent*)</primary></indexterm>QTabBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::resizeEvent(QResizeEvent*)</primary></indexterm>QTabBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::showEvent(QShowEvent*)</primary></indexterm>QTabBar::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::changeEvent(QEvent*)</primary></indexterm>QTabBar::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::tabSizeHint(int) const</primary></indexterm>QTabBar::tabSizeHint(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::tabInserted(int)</primary></indexterm>QTabBar::tabInserted(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::tabRemoved(int)</primary></indexterm>QTabBar::tabRemoved(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabBar::tabLayoutChange()</primary></indexterm>QTabBar::tabLayoutChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabBar::~QTabBar()</primary></indexterm>non-virtual thunk to QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabBar::~QTabBar()</primary></indexterm>non-virtual thunk to QTabBar::~QTabBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTabBar  class
is described by <XREF LINKEND="rtti-508">
</PARA>
<!--classdata-->
<TABLE ID="rtti-508">
<TITLE>typeinfo for QTabBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTabBar</primary></indexterm>typeinfo name for QTabBar</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTabWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTabWidget class
is described by <XREF LINKEND="cls-509-0">
</PARA>
<!--classdata-->
<TABLE id="cls-509-0">
<TITLE>Primary vtable for QTabWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTabWidget</primary></indexterm>typeinfo for QTabWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::metaObject() const</primary></indexterm>QTabWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::qt_metacast(char const*)</primary></indexterm>QTabWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTabWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::~QTabWidget()</primary></indexterm>QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::~QTabWidget()</primary></indexterm>QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::event(QEvent*)</primary></indexterm>QTabWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::sizeHint() const</primary></indexterm>QTabWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::minimumSizeHint() const</primary></indexterm>QTabWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QTabWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::paintEvent(QPaintEvent*)</primary></indexterm>QTabWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QTabWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::showEvent(QShowEvent*)</primary></indexterm>QTabWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::changeEvent(QEvent*)</primary></indexterm>QTabWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::tabInserted(int)</primary></indexterm>QTabWidget::tabInserted(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTabWidget::tabRemoved(int)</primary></indexterm>QTabWidget::tabRemoved(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabWidget::~QTabWidget()</primary></indexterm>non-virtual thunk to QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTabWidget::~QTabWidget()</primary></indexterm>non-virtual thunk to QTabWidget::~QTabWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTabWidget  class
is described by <XREF LINKEND="rtti-510">
</PARA>
<!--classdata-->
<TABLE ID="rtti-510">
<TITLE>typeinfo for QTabWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTabWidget</primary></indexterm>typeinfo name for QTabWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QRubberBand</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QRubberBand class
is described by <XREF LINKEND="cls-511-0">
</PARA>
<!--classdata-->
<TABLE id="cls-511-0">
<TITLE>Primary vtable for QRubberBand</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRubberBand</primary></indexterm>typeinfo for QRubberBand</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::metaObject() const</primary></indexterm>QRubberBand::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::qt_metacast(char const*)</primary></indexterm>QRubberBand::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QRubberBand::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::~QRubberBand()</primary></indexterm>QRubberBand::~QRubberBand()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::~QRubberBand()</primary></indexterm>QRubberBand::~QRubberBand()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::event(QEvent*)</primary></indexterm>QRubberBand::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::paintEvent(QPaintEvent*)</primary></indexterm>QRubberBand::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::moveEvent(QMoveEvent*)</primary></indexterm>QRubberBand::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::resizeEvent(QResizeEvent*)</primary></indexterm>QRubberBand::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::showEvent(QShowEvent*)</primary></indexterm>QRubberBand::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRubberBand::changeEvent(QEvent*)</primary></indexterm>QRubberBand::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QRubberBand::~QRubberBand()</primary></indexterm>non-virtual thunk to QRubberBand::~QRubberBand()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QRubberBand::~QRubberBand()</primary></indexterm>non-virtual thunk to QRubberBand::~QRubberBand()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QRubberBand  class
is described by <XREF LINKEND="rtti-512">
</PARA>
<!--classdata-->
<TABLE ID="rtti-512">
<TITLE>typeinfo for QRubberBand</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QRubberBand</primary></indexterm>typeinfo name for QRubberBand</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractItemView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractItemView class
is described by <XREF LINKEND="cls-513-0">
</PARA>
<!--classdata-->
<TABLE id="cls-513-0">
<TITLE>Primary vtable for QAbstractItemView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractItemView</primary></indexterm>typeinfo for QAbstractItemView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::metaObject() const</primary></indexterm>QAbstractItemView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::qt_metacast(char const*)</primary></indexterm>QAbstractItemView::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractItemView::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::~QAbstractItemView()</primary></indexterm>QAbstractItemView::~QAbstractItemView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::~QAbstractItemView()</primary></indexterm>QAbstractItemView::~QAbstractItemView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::event(QEvent*)</primary></indexterm>QAbstractItemView::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractItemView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractScrollArea::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::scrollContentsBy(int, int)</primary></indexterm>QAbstractScrollArea::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setModel(QAbstractItemModel*)</primary></indexterm>QAbstractItemView::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForColumn(int) const</primary></indexterm>QAbstractItemView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::reset()</primary></indexterm>QAbstractItemView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setRootIndex(QModelIndex const&)</primary></indexterm>QAbstractItemView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::doItemsLayout()</primary></indexterm>QAbstractItemView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateGeometries()</primary></indexterm>QAbstractItemView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarAction(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectedIndexes() const</primary></indexterm>QAbstractItemView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewOptions() const</primary></indexterm>QAbstractItemView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractItemView::~QAbstractItemView()</primary></indexterm>non-virtual thunk to QAbstractItemView::~QAbstractItemView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractItemView::~QAbstractItemView()</primary></indexterm>non-virtual thunk to QAbstractItemView::~QAbstractItemView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractItemView  class
is described by <XREF LINKEND="rtti-514">
</PARA>
<!--classdata-->
<TABLE ID="rtti-514">
<TITLE>typeinfo for QAbstractItemView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractScrollArea</primary></indexterm>vtable for QAbstractScrollArea</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractItemView</primary></indexterm>typeinfo name for QAbstractItemView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStringListModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStringListModel class
is described by <XREF LINKEND="cls-515-0">
</PARA>
<!--classdata-->
<TABLE id="cls-515-0">
<TITLE>Primary vtable for QStringListModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStringListModel</primary></indexterm>typeinfo for QStringListModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::metaObject() const</primary></indexterm>QStringListModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::qt_metacast(char const*)</primary></indexterm>QStringListModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStringListModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::~QStringListModel()</primary></indexterm>QStringListModel::~QStringListModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::~QStringListModel()</primary></indexterm>QStringListModel::~QStringListModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractListModel::index(int, int, QModelIndex const&) const</primary></indexterm>QAbstractListModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractListModel::parent(QModelIndex const&) const</primary></indexterm>QAbstractListModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::rowCount(QModelIndex const&) const</primary></indexterm>QStringListModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractListModel::columnCount(QModelIndex const&) const</primary></indexterm>QAbstractListModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractListModel::hasChildren(QModelIndex const&) const</primary></indexterm>QAbstractListModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::data(QModelIndex const&, int) const</primary></indexterm>QStringListModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QStringListModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QAbstractItemModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeTypes() const</primary></indexterm>QAbstractItemModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractListModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QAbstractListModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::supportedDropActions() const</primary></indexterm>QAbstractItemModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QStringListModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QStringListModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::fetchMore(QModelIndex const&)</primary></indexterm>QAbstractItemModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::flags(QModelIndex const&) const</primary></indexterm>QStringListModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStringListModel::sort(int, Qt::SortOrder)</primary></indexterm>QStringListModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::span(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::submit()</primary></indexterm>QAbstractItemModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::revert()</primary></indexterm>QAbstractItemModel::revert()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStringListModel  class
is described by <XREF LINKEND="rtti-516">
</PARA>
<!--classdata-->
<TABLE ID="rtti-516">
<TITLE>typeinfo for QStringListModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractListModel</primary></indexterm>vtable for QAbstractListModel</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStringListModel</primary></indexterm>typeinfo name for QStringListModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListView class
is described by <XREF LINKEND="cls-517-0">
</PARA>
<!--classdata-->
<TABLE id="cls-517-0">
<TITLE>Primary vtable for QListView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListView</primary></indexterm>typeinfo for QListView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::metaObject() const</primary></indexterm>QListView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::qt_metacast(char const*)</primary></indexterm>QListView::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QListView::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::~QListView()</primary></indexterm>QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::~QListView()</primary></indexterm>QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::event(QEvent*)</primary></indexterm>QListView::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::timerEvent(QTimerEvent*)</primary></indexterm>QListView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QListView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QListView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::paintEvent(QPaintEvent*)</primary></indexterm>QListView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::resizeEvent(QResizeEvent*)</primary></indexterm>QListView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QListView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QListView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dropEvent(QDropEvent*)</primary></indexterm>QListView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::scrollContentsBy(int, int)</primary></indexterm>QListView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setModel(QAbstractItemModel*)</primary></indexterm>QAbstractItemView::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::visualRect(QModelIndex const&) const</primary></indexterm>QListView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QListView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::indexAt(QPoint const&) const</primary></indexterm>QListView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForColumn(int) const</primary></indexterm>QAbstractItemView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::reset()</primary></indexterm>QListView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setRootIndex(QModelIndex const&)</primary></indexterm>QListView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::doItemsLayout()</primary></indexterm>QListView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QListView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QListView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QListView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::updateGeometries()</primary></indexterm>QListView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarAction(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QListView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::horizontalOffset() const</primary></indexterm>QListView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::verticalOffset() const</primary></indexterm>QListView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QListView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QListView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QListView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::selectedIndexes() const</primary></indexterm>QListView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QListView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::viewOptions() const</primary></indexterm>QListView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListView::~QListView()</primary></indexterm>non-virtual thunk to QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListView::~QListView()</primary></indexterm>non-virtual thunk to QListView::~QListView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QListView  class
is described by <XREF LINKEND="rtti-518">
</PARA>
<!--classdata-->
<TABLE ID="rtti-518">
<TITLE>typeinfo for QListView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractItemView</primary></indexterm>vtable for QAbstractItemView</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListView</primary></indexterm>typeinfo name for QListView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListWidgetItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListWidgetItem class
is described by <XREF LINKEND="cls-519-0">
</PARA>
<!--classdata-->
<TABLE id="cls-519-0">
<TITLE>Primary vtable for QListWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListWidgetItem</primary></indexterm>typeinfo for QListWidgetItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::~QListWidgetItem()</primary></indexterm>QListWidgetItem::~QListWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::~QListWidgetItem()</primary></indexterm>QListWidgetItem::~QListWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::clone() const</primary></indexterm>QListWidgetItem::clone() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::data(int) const</primary></indexterm>QListWidgetItem::data(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::setData(int, QVariant const&)</primary></indexterm>QListWidgetItem::setData(int, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::operator&lt;(QListWidgetItem const&) const</primary></indexterm>QListWidgetItem::operator&lt;(QListWidgetItem const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::read(QDataStream&)</primary></indexterm>QListWidgetItem::read(QDataStream&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidgetItem::write(QDataStream&) const</primary></indexterm>QListWidgetItem::write(QDataStream&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QListWidgetItem  class
is described by <XREF LINKEND="rtti-520">
</PARA>
<!--classdata-->
<TABLE ID="rtti-520">
<TITLE>typeinfo for QListWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListWidgetItem</primary></indexterm>typeinfo name for QListWidgetItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QListWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QListWidget class
is described by <XREF LINKEND="cls-521-0">
</PARA>
<!--classdata-->
<TABLE id="cls-521-0">
<TITLE>Primary vtable for QListWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QListWidget</primary></indexterm>typeinfo for QListWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::metaObject() const</primary></indexterm>QListWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::qt_metacast(char const*)</primary></indexterm>QListWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QListWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::~QListWidget()</primary></indexterm>QListWidget::~QListWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::~QListWidget()</primary></indexterm>QListWidget::~QListWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::event(QEvent*)</primary></indexterm>QListWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::timerEvent(QTimerEvent*)</primary></indexterm>QListView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QListView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QListView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::paintEvent(QPaintEvent*)</primary></indexterm>QListView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::resizeEvent(QResizeEvent*)</primary></indexterm>QListView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QListView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QListView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dropEvent(QDropEvent*)</primary></indexterm>QListView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::scrollContentsBy(int, int)</primary></indexterm>QListView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::setModel(QAbstractItemModel*)</primary></indexterm>QListWidget::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::visualRect(QModelIndex const&) const</primary></indexterm>QListView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QListView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::indexAt(QPoint const&) const</primary></indexterm>QListView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForColumn(int) const</primary></indexterm>QAbstractItemView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::reset()</primary></indexterm>QListView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setRootIndex(QModelIndex const&)</primary></indexterm>QListView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::doItemsLayout()</primary></indexterm>QListView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QListView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QListView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QListView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::updateGeometries()</primary></indexterm>QListView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarAction(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QListView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::horizontalOffset() const</primary></indexterm>QListView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::verticalOffset() const</primary></indexterm>QListView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QListView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QListView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QListView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::selectedIndexes() const</primary></indexterm>QListView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QListView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListView::viewOptions() const</primary></indexterm>QListView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::mimeTypes() const</primary></indexterm>QListWidget::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::mimeData(QList&lt;QListWidgetItem*&gt;) const</primary></indexterm>QListWidget::mimeData(QList&lt;QListWidgetItem*&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::dropMimeData(int, QMimeData const*, Qt::DropAction)</primary></indexterm>QListWidget::dropMimeData(int, QMimeData const*, Qt::DropAction)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QListWidget::supportedDropActions() const</primary></indexterm>QListWidget::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListWidget::~QListWidget()</primary></indexterm>non-virtual thunk to QListWidget::~QListWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QListWidget::~QListWidget()</primary></indexterm>non-virtual thunk to QListWidget::~QListWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QListWidget  class
is described by <XREF LINKEND="rtti-522">
</PARA>
<!--classdata-->
<TABLE ID="rtti-522">
<TITLE>typeinfo for QListWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QListView</primary></indexterm>vtable for QListView</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QListWidget</primary></indexterm>typeinfo name for QListWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDirModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDirModel class
is described by <XREF LINKEND="cls-523-0">
</PARA>
<!--classdata-->
<TABLE id="cls-523-0">
<TITLE>Primary vtable for QDirModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDirModel</primary></indexterm>typeinfo for QDirModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::metaObject() const</primary></indexterm>QDirModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::qt_metacast(char const*)</primary></indexterm>QDirModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDirModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::~QDirModel()</primary></indexterm>QDirModel::~QDirModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::~QDirModel()</primary></indexterm>QDirModel::~QDirModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::index(int, int, QModelIndex const&) const</primary></indexterm>QDirModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::parent(QModelIndex const&) const</primary></indexterm>QDirModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::rowCount(QModelIndex const&) const</primary></indexterm>QDirModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::columnCount(QModelIndex const&) const</primary></indexterm>QDirModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::hasChildren(QModelIndex const&) const</primary></indexterm>QDirModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::data(QModelIndex const&, int) const</primary></indexterm>QDirModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QDirModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QDirModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::mimeTypes() const</primary></indexterm>QDirModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QDirModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QDirModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::supportedDropActions() const</primary></indexterm>QDirModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::fetchMore(QModelIndex const&)</primary></indexterm>QAbstractItemModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::flags(QModelIndex const&) const</primary></indexterm>QDirModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDirModel::sort(int, Qt::SortOrder)</primary></indexterm>QDirModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::span(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::submit()</primary></indexterm>QAbstractItemModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::revert()</primary></indexterm>QAbstractItemModel::revert()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDirModel  class
is described by <XREF LINKEND="rtti-524">
</PARA>
<!--classdata-->
<TABLE ID="rtti-524">
<TITLE>typeinfo for QDirModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractItemModel</primary></indexterm>vtable for QAbstractItemModel</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDirModel</primary></indexterm>typeinfo name for QDirModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStandardItemModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStandardItemModel class
is described by <XREF LINKEND="cls-525-0">
</PARA>
<!--classdata-->
<TABLE id="cls-525-0">
<TITLE>Primary vtable for QStandardItemModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStandardItemModel</primary></indexterm>typeinfo for QStandardItemModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::metaObject() const</primary></indexterm>QStandardItemModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::qt_metacast(char const*)</primary></indexterm>QStandardItemModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStandardItemModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::~QStandardItemModel()</primary></indexterm>QStandardItemModel::~QStandardItemModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::~QStandardItemModel()</primary></indexterm>QStandardItemModel::~QStandardItemModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::index(int, int, QModelIndex const&) const</primary></indexterm>QStandardItemModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::parent(QModelIndex const&) const</primary></indexterm>QStandardItemModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::rowCount(QModelIndex const&) const</primary></indexterm>QStandardItemModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::columnCount(QModelIndex const&) const</primary></indexterm>QStandardItemModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::hasChildren(QModelIndex const&) const</primary></indexterm>QStandardItemModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::data(QModelIndex const&, int) const</primary></indexterm>QStandardItemModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QStandardItemModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QStandardItemModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QStandardItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeTypes() const</primary></indexterm>QAbstractItemModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::supportedDropActions() const</primary></indexterm>QAbstractItemModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QStandardItemModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QStandardItemModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QStandardItemModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QStandardItemModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::fetchMore(QModelIndex const&)</primary></indexterm>QAbstractItemModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStandardItemModel::flags(QModelIndex const&) const</primary></indexterm>QStandardItemModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::sort(int, Qt::SortOrder)</primary></indexterm>QAbstractItemModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::span(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::submit()</primary></indexterm>QAbstractItemModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::revert()</primary></indexterm>QAbstractItemModel::revert()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStandardItemModel  class
is described by <XREF LINKEND="rtti-526">
</PARA>
<!--classdata-->
<TABLE ID="rtti-526">
<TITLE>typeinfo for QStandardItemModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractItemModel</primary></indexterm>vtable for QAbstractItemModel</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStandardItemModel</primary></indexterm>typeinfo name for QStandardItemModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractProxyModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractProxyModel class
is described by <XREF LINKEND="cls-527-0">
</PARA>
<!--classdata-->
<TABLE id="cls-527-0">
<TITLE>Primary vtable for QAbstractProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractProxyModel</primary></indexterm>typeinfo for QAbstractProxyModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::metaObject() const</primary></indexterm>QAbstractProxyModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::qt_metacast(char const*)</primary></indexterm>QAbstractProxyModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractProxyModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::~QAbstractProxyModel()</primary></indexterm>QAbstractProxyModel::~QAbstractProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::~QAbstractProxyModel()</primary></indexterm>QAbstractProxyModel::~QAbstractProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::hasChildren(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QAbstractItemModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QAbstractItemModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QAbstractItemModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeTypes() const</primary></indexterm>QAbstractItemModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QAbstractItemModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::supportedDropActions() const</primary></indexterm>QAbstractItemModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::fetchMore(QModelIndex const&)</primary></indexterm>QAbstractItemModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::flags(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::sort(int, Qt::SortOrder)</primary></indexterm>QAbstractItemModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QAbstractItemModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::span(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::submit()</primary></indexterm>QAbstractProxyModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::revert()</primary></indexterm>QAbstractProxyModel::revert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::setSourceModel(QAbstractItemModel*)</primary></indexterm>QAbstractProxyModel::setSourceModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::mapSelectionToSource(QItemSelection const&) const</primary></indexterm>QAbstractProxyModel::mapSelectionToSource(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::mapSelectionFromSource(QItemSelection const&) const</primary></indexterm>QAbstractProxyModel::mapSelectionFromSource(QItemSelection const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractProxyModel  class
is described by <XREF LINKEND="rtti-528">
</PARA>
<!--classdata-->
<TABLE ID="rtti-528">
<TITLE>typeinfo for QAbstractProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractItemModel</primary></indexterm>vtable for QAbstractItemModel</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractProxyModel</primary></indexterm>typeinfo name for QAbstractProxyModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSortFilterProxyModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSortFilterProxyModel class
is described by <XREF LINKEND="cls-529-0">
</PARA>
<!--classdata-->
<TABLE id="cls-529-0">
<TITLE>Primary vtable for QSortFilterProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSortFilterProxyModel</primary></indexterm>typeinfo for QSortFilterProxyModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::metaObject() const</primary></indexterm>QSortFilterProxyModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::qt_metacast(char const*)</primary></indexterm>QSortFilterProxyModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSortFilterProxyModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::~QSortFilterProxyModel()</primary></indexterm>QSortFilterProxyModel::~QSortFilterProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::~QSortFilterProxyModel()</primary></indexterm>QSortFilterProxyModel::~QSortFilterProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::index(int, int, QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::parent(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::rowCount(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::columnCount(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::hasChildren(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::data(QModelIndex const&, int) const</primary></indexterm>QSortFilterProxyModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QSortFilterProxyModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QSortFilterProxyModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QSortFilterProxyModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::mimeTypes() const</primary></indexterm>QAbstractItemModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QSortFilterProxyModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::supportedDropActions() const</primary></indexterm>QAbstractItemModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::fetchMore(QModelIndex const&)</primary></indexterm>QSortFilterProxyModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::flags(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::sort(int, Qt::SortOrder)</primary></indexterm>QSortFilterProxyModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::buddy(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QSortFilterProxyModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::span(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::submit()</primary></indexterm>QAbstractProxyModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractProxyModel::revert()</primary></indexterm>QAbstractProxyModel::revert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::setSourceModel(QAbstractItemModel*)</primary></indexterm>QSortFilterProxyModel::setSourceModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::mapToSource(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::mapToSource(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::mapFromSource(QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::mapFromSource(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::mapSelectionToSource(QItemSelection const&) const</primary></indexterm>QSortFilterProxyModel::mapSelectionToSource(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::mapSelectionFromSource(QItemSelection const&) const</primary></indexterm>QSortFilterProxyModel::mapSelectionFromSource(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::filterAcceptsRow(int, QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::filterAcceptsRow(int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::filterAcceptsColumn(int, QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::filterAcceptsColumn(int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSortFilterProxyModel::lessThan(QModelIndex const&, QModelIndex const&) const</primary></indexterm>QSortFilterProxyModel::lessThan(QModelIndex const&, QModelIndex const&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSortFilterProxyModel  class
is described by <XREF LINKEND="rtti-530">
</PARA>
<!--classdata-->
<TABLE ID="rtti-530">
<TITLE>typeinfo for QSortFilterProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractProxyModel</primary></indexterm>vtable for QAbstractProxyModel</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSortFilterProxyModel</primary></indexterm>typeinfo name for QSortFilterProxyModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QItemDelegate</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QItemDelegate class
is described by <XREF LINKEND="cls-531-0">
</PARA>
<!--classdata-->
<TABLE id="cls-531-0">
<TITLE>Primary vtable for QItemDelegate</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QItemDelegate</primary></indexterm>typeinfo for QItemDelegate</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::metaObject() const</primary></indexterm>QItemDelegate::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::qt_metacast(char const*)</primary></indexterm>QItemDelegate::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QItemDelegate::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::~QItemDelegate()</primary></indexterm>QItemDelegate::~QItemDelegate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::~QItemDelegate()</primary></indexterm>QItemDelegate::~QItemDelegate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::eventFilter(QObject*, QEvent*)</primary></indexterm>QItemDelegate::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::paint(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QItemDelegate::paint(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::sizeHint(QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QItemDelegate::sizeHint(QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::createEditor(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QItemDelegate::createEditor(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::setEditorData(QWidget*, QModelIndex const&) const</primary></indexterm>QItemDelegate::setEditorData(QWidget*, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::setModelData(QWidget*, QAbstractItemModel*, QModelIndex const&) const</primary></indexterm>QItemDelegate::setModelData(QWidget*, QAbstractItemModel*, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::updateEditorGeometry(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QItemDelegate::updateEditorGeometry(QWidget*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::editorEvent(QEvent*, QAbstractItemModel*, QStyleOptionViewItem const&, QModelIndex const&)</primary></indexterm>QItemDelegate::editorEvent(QEvent*, QAbstractItemModel*, QStyleOptionViewItem const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::drawDisplay(QPainter*, QStyleOptionViewItem const&, QRect const&, QString const&) const</primary></indexterm>QItemDelegate::drawDisplay(QPainter*, QStyleOptionViewItem const&, QRect const&, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::drawDecoration(QPainter*, QStyleOptionViewItem const&, QRect const&, QPixmap const&) const</primary></indexterm>QItemDelegate::drawDecoration(QPainter*, QStyleOptionViewItem const&, QRect const&, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::drawFocus(QPainter*, QStyleOptionViewItem const&, QRect const&) const</primary></indexterm>QItemDelegate::drawFocus(QPainter*, QStyleOptionViewItem const&, QRect const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemDelegate::drawCheck(QPainter*, QStyleOptionViewItem const&, QRect const&, Qt::CheckState) const</primary></indexterm>QItemDelegate::drawCheck(QPainter*, QStyleOptionViewItem const&, QRect const&, Qt::CheckState) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QItemDelegate  class
is described by <XREF LINKEND="rtti-532">
</PARA>
<!--classdata-->
<TABLE ID="rtti-532">
<TITLE>typeinfo for QItemDelegate</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractItemDelegate</primary></indexterm>vtable for QAbstractItemDelegate</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QItemDelegate</primary></indexterm>typeinfo name for QItemDelegate</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QItemEditorFactory</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QItemEditorFactory class
is described by <XREF LINKEND="cls-533-0">
</PARA>
<!--classdata-->
<TABLE id="cls-533-0">
<TITLE>Primary vtable for QItemEditorFactory</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QItemEditorFactory</primary></indexterm>typeinfo for QItemEditorFactory</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemEditorFactory::~QItemEditorFactory()</primary></indexterm>QItemEditorFactory::~QItemEditorFactory()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemEditorFactory::~QItemEditorFactory()</primary></indexterm>QItemEditorFactory::~QItemEditorFactory()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemEditorFactory::createEditor(QVariant::Type, QWidget*) const</primary></indexterm>QItemEditorFactory::createEditor(QVariant::Type, QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QItemEditorFactory::valuePropertyName(QVariant::Type) const</primary></indexterm>QItemEditorFactory::valuePropertyName(QVariant::Type) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QItemEditorFactory  class
is described by <XREF LINKEND="rtti-534">
</PARA>
<!--classdata-->
<TABLE ID="rtti-534">
<TITLE>typeinfo for QItemEditorFactory</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QItemEditorFactory</primary></indexterm>typeinfo name for QItemEditorFactory</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTableView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTableView class
is described by <XREF LINKEND="cls-535-0">
</PARA>
<!--classdata-->
<TABLE id="cls-535-0">
<TITLE>Primary vtable for QTableView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTableView</primary></indexterm>typeinfo for QTableView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::metaObject() const</primary></indexterm>QTableView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::qt_metacast(char const*)</primary></indexterm>QTableView::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTableView::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::~QTableView()</primary></indexterm>QTableView::~QTableView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::~QTableView()</primary></indexterm>QTableView::~QTableView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::event(QEvent*)</primary></indexterm>QAbstractItemView::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::timerEvent(QTimerEvent*)</primary></indexterm>QTableView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::paintEvent(QPaintEvent*)</primary></indexterm>QTableView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::scrollContentsBy(int, int)</primary></indexterm>QTableView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setModel(QAbstractItemModel*)</primary></indexterm>QTableView::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QTableView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::visualRect(QModelIndex const&) const</primary></indexterm>QTableView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QTableView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::indexAt(QPoint const&) const</primary></indexterm>QTableView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::sizeHintForRow(int) const</primary></indexterm>QTableView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::sizeHintForColumn(int) const</primary></indexterm>QTableView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::reset()</primary></indexterm>QAbstractItemView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setRootIndex(QModelIndex const&)</primary></indexterm>QTableView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::doItemsLayout()</primary></indexterm>QAbstractItemView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::updateGeometries()</primary></indexterm>QTableView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::verticalScrollbarAction(int)</primary></indexterm>QTableView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::horizontalScrollbarAction(int)</primary></indexterm>QTableView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QTableView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::horizontalOffset() const</primary></indexterm>QTableView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::verticalOffset() const</primary></indexterm>QTableView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QTableView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QTableView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QTableView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::selectedIndexes() const</primary></indexterm>QTableView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::viewOptions() const</primary></indexterm>QTableView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTableView::~QTableView()</primary></indexterm>non-virtual thunk to QTableView::~QTableView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTableView::~QTableView()</primary></indexterm>non-virtual thunk to QTableView::~QTableView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTableView  class
is described by <XREF LINKEND="rtti-536">
</PARA>
<!--classdata-->
<TABLE ID="rtti-536">
<TITLE>typeinfo for QTableView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractItemView</primary></indexterm>vtable for QAbstractItemView</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTableView</primary></indexterm>typeinfo name for QTableView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHeaderView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHeaderView class
is described by <XREF LINKEND="cls-537-0">
</PARA>
<!--classdata-->
<TABLE id="cls-537-0">
<TITLE>Primary vtable for QHeaderView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHeaderView</primary></indexterm>typeinfo for QHeaderView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::metaObject() const</primary></indexterm>QHeaderView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::qt_metacast(char const*)</primary></indexterm>QHeaderView::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QHeaderView::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::~QHeaderView()</primary></indexterm>QHeaderView::~QHeaderView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::~QHeaderView()</primary></indexterm>QHeaderView::~QHeaderView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::event(QEvent*)</primary></indexterm>QHeaderView::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractItemView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::sizeHint() const</primary></indexterm>QHeaderView::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::mousePressEvent(QMouseEvent*)</primary></indexterm>QHeaderView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QHeaderView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QHeaderView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QHeaderView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::paintEvent(QPaintEvent*)</primary></indexterm>QHeaderView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::viewportEvent(QEvent*)</primary></indexterm>QHeaderView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::scrollContentsBy(int, int)</primary></indexterm>QHeaderView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::setModel(QAbstractItemModel*)</primary></indexterm>QHeaderView::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QAbstractItemView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::visualRect(QModelIndex const&) const</primary></indexterm>QHeaderView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QHeaderView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::indexAt(QPoint const&) const</primary></indexterm>QHeaderView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForColumn(int) const</primary></indexterm>QAbstractItemView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::reset()</primary></indexterm>QAbstractItemView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::setRootIndex(QModelIndex const&)</primary></indexterm>QAbstractItemView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::doItemsLayout()</primary></indexterm>QHeaderView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QHeaderView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QHeaderView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QHeaderView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::updateGeometries()</primary></indexterm>QHeaderView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarAction(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QHeaderView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::horizontalOffset() const</primary></indexterm>QHeaderView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::verticalOffset() const</primary></indexterm>QHeaderView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QHeaderView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QHeaderView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QHeaderView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectedIndexes() const</primary></indexterm>QAbstractItemView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewOptions() const</primary></indexterm>QAbstractItemView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::paintSection(QPainter*, QRect const&, int) const</primary></indexterm>QHeaderView::paintSection(QPainter*, QRect const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHeaderView::sectionSizeFromContents(int) const</primary></indexterm>QHeaderView::sectionSizeFromContents(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHeaderView::~QHeaderView()</primary></indexterm>non-virtual thunk to QHeaderView::~QHeaderView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHeaderView::~QHeaderView()</primary></indexterm>non-virtual thunk to QHeaderView::~QHeaderView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHeaderView  class
is described by <XREF LINKEND="rtti-538">
</PARA>
<!--classdata-->
<TABLE ID="rtti-538">
<TITLE>typeinfo for QHeaderView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractItemView</primary></indexterm>vtable for QAbstractItemView</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHeaderView</primary></indexterm>typeinfo name for QHeaderView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTableWidgetItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTableWidgetItem class
is described by <XREF LINKEND="cls-539-0">
</PARA>
<!--classdata-->
<TABLE id="cls-539-0">
<TITLE>Primary vtable for QTableWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTableWidgetItem</primary></indexterm>typeinfo for QTableWidgetItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::~QTableWidgetItem()</primary></indexterm>QTableWidgetItem::~QTableWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::~QTableWidgetItem()</primary></indexterm>QTableWidgetItem::~QTableWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::clone() const</primary></indexterm>QTableWidgetItem::clone() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::data(int) const</primary></indexterm>QTableWidgetItem::data(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::setData(int, QVariant const&)</primary></indexterm>QTableWidgetItem::setData(int, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::operator&lt;(QTableWidgetItem const&) const</primary></indexterm>QTableWidgetItem::operator&lt;(QTableWidgetItem const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::read(QDataStream&)</primary></indexterm>QTableWidgetItem::read(QDataStream&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidgetItem::write(QDataStream&) const</primary></indexterm>QTableWidgetItem::write(QDataStream&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTableWidgetItem  class
is described by <XREF LINKEND="rtti-540">
</PARA>
<!--classdata-->
<TABLE ID="rtti-540">
<TITLE>typeinfo for QTableWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTableWidgetItem</primary></indexterm>typeinfo name for QTableWidgetItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTableWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTableWidget class
is described by <XREF LINKEND="cls-541-0">
</PARA>
<!--classdata-->
<TABLE id="cls-541-0">
<TITLE>Primary vtable for QTableWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTableWidget</primary></indexterm>typeinfo for QTableWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::metaObject() const</primary></indexterm>QTableWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::qt_metacast(char const*)</primary></indexterm>QTableWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTableWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::~QTableWidget()</primary></indexterm>QTableWidget::~QTableWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::~QTableWidget()</primary></indexterm>QTableWidget::~QTableWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::event(QEvent*)</primary></indexterm>QTableWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::timerEvent(QTimerEvent*)</primary></indexterm>QTableView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::paintEvent(QPaintEvent*)</primary></indexterm>QTableView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::scrollContentsBy(int, int)</primary></indexterm>QTableView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::setModel(QAbstractItemModel*)</primary></indexterm>QTableWidget::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QTableView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyboardSearch(QString const&)</primary></indexterm>QAbstractItemView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::visualRect(QModelIndex const&) const</primary></indexterm>QTableView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QTableView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::indexAt(QPoint const&) const</primary></indexterm>QTableView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::sizeHintForRow(int) const</primary></indexterm>QTableView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::sizeHintForColumn(int) const</primary></indexterm>QTableView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::reset()</primary></indexterm>QAbstractItemView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setRootIndex(QModelIndex const&)</primary></indexterm>QTableView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::doItemsLayout()</primary></indexterm>QAbstractItemView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectAll()</primary></indexterm>QAbstractItemView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::updateGeometries()</primary></indexterm>QTableView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::verticalScrollbarAction(int)</primary></indexterm>QTableView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::horizontalScrollbarAction(int)</primary></indexterm>QTableView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QTableView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::horizontalOffset() const</primary></indexterm>QTableView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::verticalOffset() const</primary></indexterm>QTableView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QTableView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QTableView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QTableView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::selectedIndexes() const</primary></indexterm>QTableView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableView::viewOptions() const</primary></indexterm>QTableView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::mimeTypes() const</primary></indexterm>QTableWidget::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::mimeData(QList&lt;QTableWidgetItem*&gt;) const</primary></indexterm>QTableWidget::mimeData(QList&lt;QTableWidgetItem*&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::dropMimeData(int, int, QMimeData const*, Qt::DropAction)</primary></indexterm>QTableWidget::dropMimeData(int, int, QMimeData const*, Qt::DropAction)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTableWidget::supportedDropActions() const</primary></indexterm>QTableWidget::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTableWidget::~QTableWidget()</primary></indexterm>non-virtual thunk to QTableWidget::~QTableWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTableWidget::~QTableWidget()</primary></indexterm>non-virtual thunk to QTableWidget::~QTableWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTableWidget  class
is described by <XREF LINKEND="rtti-542">
</PARA>
<!--classdata-->
<TABLE ID="rtti-542">
<TITLE>typeinfo for QTableWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QTableView</primary></indexterm>vtable for QTableView</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTableWidget</primary></indexterm>typeinfo name for QTableWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTreeView</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTreeView class
is described by <XREF LINKEND="cls-543-0">
</PARA>
<!--classdata-->
<TABLE id="cls-543-0">
<TITLE>Primary vtable for QTreeView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTreeView</primary></indexterm>typeinfo for QTreeView</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::metaObject() const</primary></indexterm>QTreeView::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::qt_metacast(char const*)</primary></indexterm>QTreeView::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTreeView::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::~QTreeView()</primary></indexterm>QTreeView::~QTreeView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::~QTreeView()</primary></indexterm>QTreeView::~QTreeView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::event(QEvent*)</primary></indexterm>QAbstractItemView::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::timerEvent(QTimerEvent*)</primary></indexterm>QTreeView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mousePressEvent(QMouseEvent*)</primary></indexterm>QTreeView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTreeView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTreeView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::paintEvent(QPaintEvent*)</primary></indexterm>QTreeView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::scrollContentsBy(int, int)</primary></indexterm>QTreeView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setModel(QAbstractItemModel*)</primary></indexterm>QTreeView::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QTreeView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::keyboardSearch(QString const&)</primary></indexterm>QTreeView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::visualRect(QModelIndex const&) const</primary></indexterm>QTreeView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QTreeView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::indexAt(QPoint const&) const</primary></indexterm>QTreeView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::sizeHintForColumn(int) const</primary></indexterm>QTreeView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::reset()</primary></indexterm>QTreeView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setRootIndex(QModelIndex const&)</primary></indexterm>QTreeView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::doItemsLayout()</primary></indexterm>QTreeView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::selectAll()</primary></indexterm>QTreeView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QTreeView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QTreeView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QTreeView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::updateGeometries()</primary></indexterm>QTreeView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::horizontalScrollbarAction(int)</primary></indexterm>QTreeView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QTreeView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::horizontalOffset() const</primary></indexterm>QTreeView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::verticalOffset() const</primary></indexterm>QTreeView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QTreeView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QTreeView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QTreeView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::selectedIndexes() const</primary></indexterm>QTreeView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewOptions() const</primary></indexterm>QAbstractItemView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::drawRow(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QTreeView::drawRow(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::drawBranches(QPainter*, QRect const&, QModelIndex const&) const</primary></indexterm>QTreeView::drawBranches(QPainter*, QRect const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTreeView::~QTreeView()</primary></indexterm>non-virtual thunk to QTreeView::~QTreeView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTreeView::~QTreeView()</primary></indexterm>non-virtual thunk to QTreeView::~QTreeView()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTreeView  class
is described by <XREF LINKEND="rtti-544">
</PARA>
<!--classdata-->
<TABLE ID="rtti-544">
<TITLE>typeinfo for QTreeView</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractItemView</primary></indexterm>vtable for QAbstractItemView</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTreeView</primary></indexterm>typeinfo name for QTreeView</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QProxyModel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QProxyModel class
is described by <XREF LINKEND="cls-545-0">
</PARA>
<!--classdata-->
<TABLE id="cls-545-0">
<TITLE>Primary vtable for QProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProxyModel</primary></indexterm>typeinfo for QProxyModel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::metaObject() const</primary></indexterm>QProxyModel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::qt_metacast(char const*)</primary></indexterm>QProxyModel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QProxyModel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::~QProxyModel()</primary></indexterm>QProxyModel::~QProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::~QProxyModel()</primary></indexterm>QProxyModel::~QProxyModel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::index(int, int, QModelIndex const&) const</primary></indexterm>QProxyModel::index(int, int, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::parent(QModelIndex const&) const</primary></indexterm>QProxyModel::parent(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::rowCount(QModelIndex const&) const</primary></indexterm>QProxyModel::rowCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::columnCount(QModelIndex const&) const</primary></indexterm>QProxyModel::columnCount(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::hasChildren(QModelIndex const&) const</primary></indexterm>QProxyModel::hasChildren(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::data(QModelIndex const&, int) const</primary></indexterm>QProxyModel::data(QModelIndex const&, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::setData(QModelIndex const&, QVariant const&, int)</primary></indexterm>QProxyModel::setData(QModelIndex const&, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::headerData(int, Qt::Orientation, int) const</primary></indexterm>QProxyModel::headerData(int, Qt::Orientation, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</primary></indexterm>QProxyModel::setHeaderData(int, Qt::Orientation, QVariant const&, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::itemData(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::itemData(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</primary></indexterm>QAbstractItemModel::setItemData(QModelIndex const&, QMap&lt;int, QVariant&gt; const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::mimeTypes() const</primary></indexterm>QProxyModel::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::mimeData(QList&lt;QModelIndex&gt; const&) const</primary></indexterm>QProxyModel::mimeData(QList&lt;QModelIndex&gt; const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</primary></indexterm>QProxyModel::dropMimeData(QMimeData const*, Qt::DropAction, int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::supportedDropActions() const</primary></indexterm>QProxyModel::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::insertRows(int, int, QModelIndex const&)</primary></indexterm>QProxyModel::insertRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::insertColumns(int, int, QModelIndex const&)</primary></indexterm>QProxyModel::insertColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeRows(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</primary></indexterm>QAbstractItemModel::removeColumns(int, int, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::fetchMore(QModelIndex const&)</primary></indexterm>QProxyModel::fetchMore(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::canFetchMore(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::canFetchMore(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::flags(QModelIndex const&) const</primary></indexterm>QProxyModel::flags(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::sort(int, Qt::SortOrder)</primary></indexterm>QProxyModel::sort(int, Qt::SortOrder)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemModel::buddy(QModelIndex const&) const</primary></indexterm>QAbstractItemModel::buddy(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</primary></indexterm>QProxyModel::match(QModelIndex const&, int, QVariant const&, int, QFlags&lt;Qt::MatchFlag&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::span(QModelIndex const&) const</primary></indexterm>QProxyModel::span(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::submit()</primary></indexterm>QProxyModel::submit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::revert()</primary></indexterm>QProxyModel::revert()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProxyModel::setModel(QAbstractItemModel*)</primary></indexterm>QProxyModel::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QProxyModel  class
is described by <XREF LINKEND="rtti-546">
</PARA>
<!--classdata-->
<TABLE ID="rtti-546">
<TITLE>typeinfo for QProxyModel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractItemModel</primary></indexterm>vtable for QAbstractItemModel</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QProxyModel</primary></indexterm>typeinfo name for QProxyModel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTreeWidgetItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTreeWidgetItem class
is described by <XREF LINKEND="cls-547-0">
</PARA>
<!--classdata-->
<TABLE id="cls-547-0">
<TITLE>Primary vtable for QTreeWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTreeWidgetItem</primary></indexterm>typeinfo for QTreeWidgetItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::~QTreeWidgetItem()</primary></indexterm>QTreeWidgetItem::~QTreeWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::~QTreeWidgetItem()</primary></indexterm>QTreeWidgetItem::~QTreeWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::clone() const</primary></indexterm>QTreeWidgetItem::clone() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::data(int, int) const</primary></indexterm>QTreeWidgetItem::data(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::setData(int, int, QVariant const&)</primary></indexterm>QTreeWidgetItem::setData(int, int, QVariant const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::operator&lt;(QTreeWidgetItem const&) const</primary></indexterm>QTreeWidgetItem::operator&lt;(QTreeWidgetItem const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::read(QDataStream&)</primary></indexterm>QTreeWidgetItem::read(QDataStream&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidgetItem::write(QDataStream&) const</primary></indexterm>QTreeWidgetItem::write(QDataStream&) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTreeWidgetItem  class
is described by <XREF LINKEND="rtti-548">
</PARA>
<!--classdata-->
<TABLE ID="rtti-548">
<TITLE>typeinfo for QTreeWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTreeWidgetItem</primary></indexterm>typeinfo name for QTreeWidgetItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTreeWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTreeWidget class
is described by <XREF LINKEND="cls-549-0">
</PARA>
<!--classdata-->
<TABLE id="cls-549-0">
<TITLE>Primary vtable for QTreeWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTreeWidget</primary></indexterm>typeinfo for QTreeWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::metaObject() const</primary></indexterm>QTreeWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::qt_metacast(char const*)</primary></indexterm>QTreeWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTreeWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::~QTreeWidget()</primary></indexterm>QTreeWidget::~QTreeWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::~QTreeWidget()</primary></indexterm>QTreeWidget::~QTreeWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::event(QEvent*)</primary></indexterm>QTreeWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::timerEvent(QTimerEvent*)</primary></indexterm>QTreeView::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mousePressEvent(QMouseEvent*)</primary></indexterm>QTreeView::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTreeView::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTreeView::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractItemView::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractItemView::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractItemView::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::paintEvent(QPaintEvent*)</primary></indexterm>QTreeView::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractItemView::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractItemView::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractItemView::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractItemView::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::dropEvent(QDropEvent*)</primary></indexterm>QAbstractItemView::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewportEvent(QEvent*)</primary></indexterm>QAbstractItemView::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::scrollContentsBy(int, int)</primary></indexterm>QTreeView::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::setModel(QAbstractItemModel*)</primary></indexterm>QTreeWidget::setModel(QAbstractItemModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setSelectionModel(QItemSelectionModel*)</primary></indexterm>QTreeView::setSelectionModel(QItemSelectionModel*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::keyboardSearch(QString const&)</primary></indexterm>QTreeView::keyboardSearch(QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::visualRect(QModelIndex const&) const</primary></indexterm>QTreeView::visualRect(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</primary></indexterm>QTreeView::scrollTo(QModelIndex const&, QAbstractItemView::ScrollHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::indexAt(QPoint const&) const</primary></indexterm>QTreeView::indexAt(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::sizeHintForRow(int) const</primary></indexterm>QAbstractItemView::sizeHintForRow(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::sizeHintForColumn(int) const</primary></indexterm>QTreeView::sizeHintForColumn(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::reset()</primary></indexterm>QTreeView::reset()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setRootIndex(QModelIndex const&)</primary></indexterm>QTreeView::setRootIndex(QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::doItemsLayout()</primary></indexterm>QTreeView::doItemsLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::selectAll()</primary></indexterm>QTreeView::selectAll()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::dataChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QTreeView::dataChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::rowsInserted(QModelIndex const&, int, int)</primary></indexterm>QTreeView::rowsInserted(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;70&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</primary></indexterm>QTreeView::rowsAboutToBeRemoved(QModelIndex const&, int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;71&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</primary></indexterm>QAbstractItemView::selectionChanged(QItemSelection const&, QItemSelection const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;72&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</primary></indexterm>QAbstractItemView::currentChanged(QModelIndex const&, QModelIndex const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;73&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorData()</primary></indexterm>QAbstractItemView::updateEditorData()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;74&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::updateEditorGeometries()</primary></indexterm>QAbstractItemView::updateEditorGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;75&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::updateGeometries()</primary></indexterm>QTreeView::updateGeometries()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;76&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarAction(int)</primary></indexterm>QAbstractItemView::verticalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;77&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::horizontalScrollbarAction(int)</primary></indexterm>QTreeView::horizontalScrollbarAction(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;78&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::verticalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::verticalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;79&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::horizontalScrollbarValueChanged(int)</primary></indexterm>QAbstractItemView::horizontalScrollbarValueChanged(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;80&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</primary></indexterm>QAbstractItemView::closeEditor(QWidget*, QAbstractItemDelegate::EndEditHint)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;81&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::commitData(QWidget*)</primary></indexterm>QAbstractItemView::commitData(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;82&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::editorDestroyed(QObject*)</primary></indexterm>QAbstractItemView::editorDestroyed(QObject*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;83&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</primary></indexterm>QTreeView::moveCursor(QAbstractItemView::CursorAction, QFlags&lt;Qt::KeyboardModifier&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;84&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::horizontalOffset() const</primary></indexterm>QTreeView::horizontalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;85&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::verticalOffset() const</primary></indexterm>QTreeView::verticalOffset() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;86&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::isIndexHidden(QModelIndex const&) const</primary></indexterm>QTreeView::isIndexHidden(QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;87&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</primary></indexterm>QTreeView::setSelection(QRect const&, QFlags&lt;QItemSelectionModel::SelectionFlag&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;88&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::visualRegionForSelection(QItemSelection const&) const</primary></indexterm>QTreeView::visualRegionForSelection(QItemSelection const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;89&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::selectedIndexes() const</primary></indexterm>QTreeView::selectedIndexes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;90&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</primary></indexterm>QAbstractItemView::edit(QModelIndex const&, QAbstractItemView::EditTrigger, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;91&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</primary></indexterm>QAbstractItemView::selectionCommand(QModelIndex const&, QEvent const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;92&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</primary></indexterm>QAbstractItemView::startDrag(QFlags&lt;Qt::DropAction&gt;)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;93&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractItemView::viewOptions() const</primary></indexterm>QAbstractItemView::viewOptions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;94&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::drawRow(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</primary></indexterm>QTreeView::drawRow(QPainter*, QStyleOptionViewItem const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;95&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeView::drawBranches(QPainter*, QRect const&, QModelIndex const&) const</primary></indexterm>QTreeView::drawBranches(QPainter*, QRect const&, QModelIndex const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;96&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::mimeTypes() const</primary></indexterm>QTreeWidget::mimeTypes() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;97&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::mimeData(QList&lt;QTreeWidgetItem*&gt;) const</primary></indexterm>QTreeWidget::mimeData(QList&lt;QTreeWidgetItem*&gt;) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;98&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::dropMimeData(QTreeWidgetItem*, int, QMimeData const*, Qt::DropAction)</primary></indexterm>QTreeWidget::dropMimeData(QTreeWidgetItem*, int, QMimeData const*, Qt::DropAction)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;99&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTreeWidget::supportedDropActions() const</primary></indexterm>QTreeWidget::supportedDropActions() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;100&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTreeWidget::~QTreeWidget()</primary></indexterm>non-virtual thunk to QTreeWidget::~QTreeWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;101&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTreeWidget::~QTreeWidget()</primary></indexterm>non-virtual thunk to QTreeWidget::~QTreeWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;102&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;103&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;104&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTreeWidget  class
is described by <XREF LINKEND="rtti-550">
</PARA>
<!--classdata-->
<TABLE ID="rtti-550">
<TITLE>typeinfo for QTreeWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QTreeView</primary></indexterm>vtable for QTreeView</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTreeWidget</primary></indexterm>typeinfo name for QTreeWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleBridgeFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleBridgeFactoryInterface class
is described by <XREF LINKEND="cls-551-0">
</PARA>
<!--classdata-->
<TABLE id="cls-551-0">
<TITLE>Primary vtable for QAccessibleBridgeFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleBridgeFactoryInterface</primary></indexterm>typeinfo for QAccessibleBridgeFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgeFactoryInterface::~QAccessibleBridgeFactoryInterface()</primary></indexterm>QAccessibleBridgeFactoryInterface::~QAccessibleBridgeFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgeFactoryInterface::~QAccessibleBridgeFactoryInterface()</primary></indexterm>QAccessibleBridgeFactoryInterface::~QAccessibleBridgeFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleBridgeFactoryInterface  class
is described by <XREF LINKEND="rtti-552">
</PARA>
<!--classdata-->
<TABLE ID="rtti-552">
<TITLE>typeinfo for QAccessibleBridgeFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleBridgeFactoryInterface</primary></indexterm>typeinfo name for QAccessibleBridgeFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleBridgePlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleBridgePlugin class
is described by <XREF LINKEND="cls-553-0">
</PARA>
<!--classdata-->
<TABLE id="cls-553-0">
<TITLE>Primary vtable for QAccessibleBridgePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleBridgePlugin</primary></indexterm>typeinfo for QAccessibleBridgePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgePlugin::metaObject() const</primary></indexterm>QAccessibleBridgePlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgePlugin::qt_metacast(char const*)</primary></indexterm>QAccessibleBridgePlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgePlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAccessibleBridgePlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</primary></indexterm>QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</primary></indexterm>QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</primary></indexterm>non-virtual thunk to QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</primary></indexterm>non-virtual thunk to QAccessibleBridgePlugin::~QAccessibleBridgePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleBridgePlugin  class
is described by <XREF LINKEND="rtti-554">
</PARA>
<!--classdata-->
<TABLE ID="rtti-554">
<TITLE>typeinfo for QAccessibleBridgePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleBridgePlugin</primary></indexterm>typeinfo name for QAccessibleBridgePlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleInterface class
is described by <XREF LINKEND="cls-555-0">
</PARA>
<!--classdata-->
<TABLE id="cls-555-0">
<TITLE>Primary vtable for QAccessibleInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleInterface</primary></indexterm>typeinfo for QAccessibleInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleInterface  class
is described by <XREF LINKEND="rtti-556">
</PARA>
<!--classdata-->
<TABLE ID="rtti-556">
<TITLE>typeinfo for QAccessibleInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleInterface</primary></indexterm>typeinfo name for QAccessibleInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleObject</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleObject class
is described by <XREF LINKEND="cls-557-0">
</PARA>
<!--classdata-->
<TABLE id="cls-557-0">
<TITLE>Primary vtable for QAccessibleObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleObject</primary></indexterm>typeinfo for QAccessibleObject</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::~QAccessibleObject()</primary></indexterm>QAccessibleObject::~QAccessibleObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::~QAccessibleObject()</primary></indexterm>QAccessibleObject::~QAccessibleObject()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::isValid() const</primary></indexterm>QAccessibleObject::isValid() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::object() const</primary></indexterm>QAccessibleObject::object() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</primary></indexterm>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::rect(int) const</primary></indexterm>QAccessibleObject::rect(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::userActionCount(int) const</primary></indexterm>QAccessibleObject::userActionCount(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::actionText(int, QAccessible::Text, int) const</primary></indexterm>QAccessibleObject::actionText(int, QAccessible::Text, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::doAction(int, int, QList&lt;QVariant&gt; const&)</primary></indexterm>QAccessibleObject::doAction(int, int, QList&lt;QVariant&gt; const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleObject  class
is described by <XREF LINKEND="rtti-558">
</PARA>
<!--classdata-->
<TABLE ID="rtti-558">
<TITLE>typeinfo for QAccessibleObject</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAccessibleInterface</primary></indexterm>vtable for QAccessibleInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleObject</primary></indexterm>typeinfo name for QAccessibleObject</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleApplication</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleApplication class
is described by <XREF LINKEND="cls-559-0">
</PARA>
<!--classdata-->
<TABLE id="cls-559-0">
<TITLE>Primary vtable for QAccessibleApplication</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleApplication</primary></indexterm>typeinfo for QAccessibleApplication</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::~QAccessibleApplication()</primary></indexterm>QAccessibleApplication::~QAccessibleApplication()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::~QAccessibleApplication()</primary></indexterm>QAccessibleApplication::~QAccessibleApplication()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::isValid() const</primary></indexterm>QAccessibleObject::isValid() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::object() const</primary></indexterm>QAccessibleObject::object() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::childCount() const</primary></indexterm>QAccessibleApplication::childCount() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::indexOfChild(QAccessibleInterface const*) const</primary></indexterm>QAccessibleApplication::indexOfChild(QAccessibleInterface const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::relationTo(int, QAccessibleInterface const*, int) const</primary></indexterm>QAccessibleApplication::relationTo(int, QAccessibleInterface const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::childAt(int, int) const</primary></indexterm>QAccessibleApplication::childAt(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::navigate(QAccessible::RelationFlag, int, QAccessibleInterface**) const</primary></indexterm>QAccessibleApplication::navigate(QAccessible::RelationFlag, int, QAccessibleInterface**) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::text(QAccessible::Text, int) const</primary></indexterm>QAccessibleApplication::text(QAccessible::Text, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</primary></indexterm>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::rect(int) const</primary></indexterm>QAccessibleObject::rect(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::role(int) const</primary></indexterm>QAccessibleApplication::role(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::state(int) const</primary></indexterm>QAccessibleApplication::state(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::userActionCount(int) const</primary></indexterm>QAccessibleApplication::userActionCount(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::actionText(int, QAccessible::Text, int) const</primary></indexterm>QAccessibleApplication::actionText(int, QAccessible::Text, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleApplication::doAction(int, int, QList&lt;QVariant&gt; const&)</primary></indexterm>QAccessibleApplication::doAction(int, int, QList&lt;QVariant&gt; const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleApplication  class
is described by <XREF LINKEND="rtti-560">
</PARA>
<!--classdata-->
<TABLE ID="rtti-560">
<TITLE>typeinfo for QAccessibleApplication</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAccessibleObject</primary></indexterm>vtable for QAccessibleObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleApplication</primary></indexterm>typeinfo name for QAccessibleApplication</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleWidget class
is described by <XREF LINKEND="cls-561-0">
</PARA>
<!--classdata-->
<TABLE id="cls-561-0">
<TITLE>Primary vtable for QAccessibleWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleWidget</primary></indexterm>typeinfo for QAccessibleWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::~QAccessibleWidget()</primary></indexterm>QAccessibleWidget::~QAccessibleWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::~QAccessibleWidget()</primary></indexterm>QAccessibleWidget::~QAccessibleWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::isValid() const</primary></indexterm>QAccessibleObject::isValid() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::object() const</primary></indexterm>QAccessibleObject::object() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::childCount() const</primary></indexterm>QAccessibleWidget::childCount() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::indexOfChild(QAccessibleInterface const*) const</primary></indexterm>QAccessibleWidget::indexOfChild(QAccessibleInterface const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::relationTo(int, QAccessibleInterface const*, int) const</primary></indexterm>QAccessibleWidget::relationTo(int, QAccessibleInterface const*, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::childAt(int, int) const</primary></indexterm>QAccessibleWidget::childAt(int, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::navigate(QAccessible::RelationFlag, int, QAccessibleInterface**) const</primary></indexterm>QAccessibleWidget::navigate(QAccessible::RelationFlag, int, QAccessibleInterface**) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::text(QAccessible::Text, int) const</primary></indexterm>QAccessibleWidget::text(QAccessible::Text, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</primary></indexterm>QAccessibleObject::setText(QAccessible::Text, int, QString const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::rect(int) const</primary></indexterm>QAccessibleWidget::rect(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::role(int) const</primary></indexterm>QAccessibleWidget::role(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::state(int) const</primary></indexterm>QAccessibleWidget::state(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleObject::userActionCount(int) const</primary></indexterm>QAccessibleObject::userActionCount(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::actionText(int, QAccessible::Text, int) const</primary></indexterm>QAccessibleWidget::actionText(int, QAccessible::Text, int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleWidget::doAction(int, int, QList&lt;QVariant&gt; const&)</primary></indexterm>QAccessibleWidget::doAction(int, int, QList&lt;QVariant&gt; const&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleWidget  class
is described by <XREF LINKEND="rtti-562">
</PARA>
<!--classdata-->
<TABLE ID="rtti-562">
<TITLE>typeinfo for QAccessibleWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAccessibleObject</primary></indexterm>vtable for QAccessibleObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleWidget</primary></indexterm>typeinfo name for QAccessibleWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessibleFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessibleFactoryInterface class
is described by <XREF LINKEND="cls-563-0">
</PARA>
<!--classdata-->
<TABLE id="cls-563-0">
<TITLE>Primary vtable for QAccessibleFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessibleFactoryInterface</primary></indexterm>typeinfo for QAccessibleFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleFactoryInterface::~QAccessibleFactoryInterface()</primary></indexterm>QAccessibleFactoryInterface::~QAccessibleFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessibleFactoryInterface::~QAccessibleFactoryInterface()</primary></indexterm>QAccessibleFactoryInterface::~QAccessibleFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessibleFactoryInterface  class
is described by <XREF LINKEND="rtti-564">
</PARA>
<!--classdata-->
<TABLE ID="rtti-564">
<TITLE>typeinfo for QAccessibleFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessibleFactoryInterface</primary></indexterm>typeinfo name for QAccessibleFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAccessiblePlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAccessiblePlugin class
is described by <XREF LINKEND="cls-565-0">
</PARA>
<!--classdata-->
<TABLE id="cls-565-0">
<TITLE>Primary vtable for QAccessiblePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAccessiblePlugin</primary></indexterm>typeinfo for QAccessiblePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessiblePlugin::metaObject() const</primary></indexterm>QAccessiblePlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessiblePlugin::qt_metacast(char const*)</primary></indexterm>QAccessiblePlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessiblePlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAccessiblePlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessiblePlugin::~QAccessiblePlugin()</primary></indexterm>QAccessiblePlugin::~QAccessiblePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAccessiblePlugin::~QAccessiblePlugin()</primary></indexterm>QAccessiblePlugin::~QAccessiblePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAccessiblePlugin::~QAccessiblePlugin()</primary></indexterm>non-virtual thunk to QAccessiblePlugin::~QAccessiblePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAccessiblePlugin::~QAccessiblePlugin()</primary></indexterm>non-virtual thunk to QAccessiblePlugin::~QAccessiblePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAccessiblePlugin  class
is described by <XREF LINKEND="rtti-566">
</PARA>
<!--classdata-->
<TABLE ID="rtti-566">
<TITLE>typeinfo for QAccessiblePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAccessiblePlugin</primary></indexterm>typeinfo name for QAccessiblePlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QClipboard</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QClipboard class
is described by <XREF LINKEND="cls-567-0">
</PARA>
<!--classdata-->
<TABLE id="cls-567-0">
<TITLE>Primary vtable for QClipboard</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QClipboard</primary></indexterm>typeinfo for QClipboard</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::metaObject() const</primary></indexterm>QClipboard::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::qt_metacast(char const*)</primary></indexterm>QClipboard::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QClipboard::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::event(QEvent*)</primary></indexterm>QClipboard::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QClipboard::connectNotify(char const*)</primary></indexterm>QClipboard::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QClipboard  class
is described by <XREF LINKEND="rtti-568">
</PARA>
<!--classdata-->
<TABLE ID="rtti-568">
<TITLE>typeinfo for QClipboard</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QClipboard</primary></indexterm>typeinfo name for QClipboard</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAction</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAction class
is described by <XREF LINKEND="cls-569-0">
</PARA>
<!--classdata-->
<TABLE id="cls-569-0">
<TITLE>Primary vtable for QAction</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAction</primary></indexterm>typeinfo for QAction</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::metaObject() const</primary></indexterm>QAction::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::qt_metacast(char const*)</primary></indexterm>QAction::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAction::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::~QAction()</primary></indexterm>QAction::~QAction()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::~QAction()</primary></indexterm>QAction::~QAction()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::event(QEvent*)</primary></indexterm>QAction::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAction  class
is described by <XREF LINKEND="rtti-570">
</PARA>
<!--classdata-->
<TABLE ID="rtti-570">
<TITLE>typeinfo for QAction</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAction</primary></indexterm>typeinfo name for QAction</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolButton class
is described by <XREF LINKEND="cls-571-0">
</PARA>
<!--classdata-->
<TABLE id="cls-571-0">
<TITLE>Primary vtable for QToolButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolButton</primary></indexterm>typeinfo for QToolButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::metaObject() const</primary></indexterm>QToolButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::qt_metacast(char const*)</primary></indexterm>QToolButton::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QToolButton::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::~QToolButton()</primary></indexterm>QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::~QToolButton()</primary></indexterm>QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::event(QEvent*)</primary></indexterm>QToolButton::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::timerEvent(QTimerEvent*)</primary></indexterm>QToolButton::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::sizeHint() const</primary></indexterm>QToolButton::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::minimumSizeHint() const</primary></indexterm>QToolButton::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QToolButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::enterEvent(QEvent*)</primary></indexterm>QToolButton::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::leaveEvent(QEvent*)</primary></indexterm>QToolButton::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::paintEvent(QPaintEvent*)</primary></indexterm>QToolButton::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::actionEvent(QActionEvent*)</primary></indexterm>QToolButton::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::changeEvent(QEvent*)</primary></indexterm>QToolButton::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::hitButton(QPoint const&) const</primary></indexterm>QAbstractButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::checkStateSet()</primary></indexterm>QAbstractButton::checkStateSet()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolButton::nextCheckState()</primary></indexterm>QToolButton::nextCheckState()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolButton::~QToolButton()</primary></indexterm>non-virtual thunk to QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolButton::~QToolButton()</primary></indexterm>non-virtual thunk to QToolButton::~QToolButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QToolButton  class
is described by <XREF LINKEND="rtti-572">
</PARA>
<!--classdata-->
<TABLE ID="rtti-572">
<TITLE>typeinfo for QToolButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolButton</primary></indexterm>typeinfo name for QToolButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDesktopWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDesktopWidget class
is described by <XREF LINKEND="cls-573-0">
</PARA>
<!--classdata-->
<TABLE id="cls-573-0">
<TITLE>Primary vtable for QDesktopWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDesktopWidget</primary></indexterm>typeinfo for QDesktopWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::metaObject() const</primary></indexterm>QDesktopWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::qt_metacast(char const*)</primary></indexterm>QDesktopWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDesktopWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::~QDesktopWidget()</primary></indexterm>QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::~QDesktopWidget()</primary></indexterm>QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::event(QEvent*)</primary></indexterm>QWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDesktopWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QDesktopWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</primary></indexterm>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</primary></indexterm>non-virtual thunk to QDesktopWidget::~QDesktopWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDesktopWidget  class
is described by <XREF LINKEND="rtti-574">
</PARA>
<!--classdata-->
<TABLE ID="rtti-574">
<TITLE>typeinfo for QDesktopWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDesktopWidget</primary></indexterm>typeinfo name for QDesktopWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLayoutItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLayoutItem class
is described by <XREF LINKEND="cls-575-0">
</PARA>
<!--classdata-->
<TABLE id="cls-575-0">
<TITLE>Primary vtable for QLayoutItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLayoutItem</primary></indexterm>typeinfo for QLayoutItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::~QLayoutItem()</primary></indexterm>QLayoutItem::~QLayoutItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::~QLayoutItem()</primary></indexterm>QLayoutItem::~QLayoutItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::hasHeightForWidth() const</primary></indexterm>QLayoutItem::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::heightForWidth(int) const</primary></indexterm>QLayoutItem::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::minimumHeightForWidth(int) const</primary></indexterm>QLayoutItem::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::invalidate()</primary></indexterm>QLayoutItem::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::layout()</primary></indexterm>QLayoutItem::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLayoutItem  class
is described by <XREF LINKEND="rtti-576">
</PARA>
<!--classdata-->
<TABLE ID="rtti-576">
<TITLE>typeinfo for QLayoutItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLayoutItem</primary></indexterm>typeinfo name for QLayoutItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSpacerItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSpacerItem class
is described by <XREF LINKEND="cls-577-0">
</PARA>
<!--classdata-->
<TABLE id="cls-577-0">
<TITLE>Primary vtable for QSpacerItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSpacerItem</primary></indexterm>typeinfo for QSpacerItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::~QSpacerItem()</primary></indexterm>QSpacerItem::~QSpacerItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::~QSpacerItem()</primary></indexterm>QSpacerItem::~QSpacerItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::sizeHint() const</primary></indexterm>QSpacerItem::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::minimumSize() const</primary></indexterm>QSpacerItem::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::maximumSize() const</primary></indexterm>QSpacerItem::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::expandingDirections() const</primary></indexterm>QSpacerItem::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::setGeometry(QRect const&)</primary></indexterm>QSpacerItem::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::geometry() const</primary></indexterm>QSpacerItem::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::isEmpty() const</primary></indexterm>QSpacerItem::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::hasHeightForWidth() const</primary></indexterm>QLayoutItem::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::heightForWidth(int) const</primary></indexterm>QLayoutItem::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::minimumHeightForWidth(int) const</primary></indexterm>QLayoutItem::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::invalidate()</primary></indexterm>QLayoutItem::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::layout()</primary></indexterm>QLayoutItem::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpacerItem::spacerItem()</primary></indexterm>QSpacerItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSpacerItem  class
is described by <XREF LINKEND="rtti-578">
</PARA>
<!--classdata-->
<TABLE ID="rtti-578">
<TITLE>typeinfo for QSpacerItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QLayoutItem</primary></indexterm>vtable for QLayoutItem</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSpacerItem</primary></indexterm>typeinfo name for QSpacerItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWidgetItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWidgetItem class
is described by <XREF LINKEND="cls-579-0">
</PARA>
<!--classdata-->
<TABLE id="cls-579-0">
<TITLE>Primary vtable for QWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWidgetItem</primary></indexterm>typeinfo for QWidgetItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::~QWidgetItem()</primary></indexterm>QWidgetItem::~QWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::~QWidgetItem()</primary></indexterm>QWidgetItem::~QWidgetItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::sizeHint() const</primary></indexterm>QWidgetItem::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::minimumSize() const</primary></indexterm>QWidgetItem::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::maximumSize() const</primary></indexterm>QWidgetItem::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::expandingDirections() const</primary></indexterm>QWidgetItem::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::setGeometry(QRect const&)</primary></indexterm>QWidgetItem::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::geometry() const</primary></indexterm>QWidgetItem::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::isEmpty() const</primary></indexterm>QWidgetItem::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::hasHeightForWidth() const</primary></indexterm>QWidgetItem::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::heightForWidth(int) const</primary></indexterm>QWidgetItem::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::minimumHeightForWidth(int) const</primary></indexterm>QLayoutItem::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::invalidate()</primary></indexterm>QLayoutItem::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidgetItem::widget()</primary></indexterm>QWidgetItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::layout()</primary></indexterm>QLayoutItem::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWidgetItem  class
is described by <XREF LINKEND="rtti-580">
</PARA>
<!--classdata-->
<TABLE ID="rtti-580">
<TITLE>typeinfo for QWidgetItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QLayoutItem</primary></indexterm>vtable for QLayoutItem</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWidgetItem</primary></indexterm>typeinfo name for QWidgetItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGridLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGridLayout class
is described by <XREF LINKEND="cls-581-0">
</PARA>
<!--classdata-->
<TABLE id="cls-581-0">
<TITLE>Primary vtable for QGridLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGridLayout</primary></indexterm>typeinfo for QGridLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::metaObject() const</primary></indexterm>QGridLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::qt_metacast(char const*)</primary></indexterm>QGridLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QGridLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::~QGridLayout()</primary></indexterm>QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::~QGridLayout()</primary></indexterm>QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::invalidate()</primary></indexterm>QGridLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::addItem(QLayoutItem*)</primary></indexterm>QGridLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::expandingDirections() const</primary></indexterm>QGridLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::minimumSize() const</primary></indexterm>QGridLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::maximumSize() const</primary></indexterm>QGridLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::setGeometry(QRect const&)</primary></indexterm>QGridLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::itemAt(int) const</primary></indexterm>QGridLayout::itemAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::takeAt(int)</primary></indexterm>QGridLayout::takeAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::count() const</primary></indexterm>QGridLayout::count() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::sizeHint() const</primary></indexterm>QGridLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::hasHeightForWidth() const</primary></indexterm>QGridLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::heightForWidth(int) const</primary></indexterm>QGridLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGridLayout::minimumHeightForWidth(int) const</primary></indexterm>QGridLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::~QGridLayout()</primary></indexterm>non-virtual thunk to QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::~QGridLayout()</primary></indexterm>non-virtual thunk to QGridLayout::~QGridLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QGridLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QGridLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QGridLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QGridLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QGridLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QGridLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QGridLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::minimumHeightForWidth(int) const</primary></indexterm>non-virtual thunk to QGridLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGridLayout::invalidate()</primary></indexterm>non-virtual thunk to QGridLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QGridLayout  class
is described by <XREF LINKEND="rtti-582">
</PARA>
<!--classdata-->
<TABLE ID="rtti-582">
<TITLE>typeinfo for QGridLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QLayout</primary></indexterm>vtable for QLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGridLayout</primary></indexterm>typeinfo name for QGridLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QBoxLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QBoxLayout class
is described by <XREF LINKEND="cls-583-0">
</PARA>
<!--classdata-->
<TABLE id="cls-583-0">
<TITLE>Primary vtable for QBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QBoxLayout</primary></indexterm>typeinfo for QBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::metaObject() const</primary></indexterm>QBoxLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::qt_metacast(char const*)</primary></indexterm>QBoxLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::~QBoxLayout()</primary></indexterm>QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::~QBoxLayout()</primary></indexterm>QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::invalidate()</primary></indexterm>QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::addItem(QLayoutItem*)</primary></indexterm>QBoxLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::expandingDirections() const</primary></indexterm>QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumSize() const</primary></indexterm>QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::maximumSize() const</primary></indexterm>QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::setGeometry(QRect const&)</primary></indexterm>QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::itemAt(int) const</primary></indexterm>QBoxLayout::itemAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::takeAt(int)</primary></indexterm>QBoxLayout::takeAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::count() const</primary></indexterm>QBoxLayout::count() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::sizeHint() const</primary></indexterm>QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::hasHeightForWidth() const</primary></indexterm>QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::heightForWidth(int) const</primary></indexterm>QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::~QBoxLayout()</primary></indexterm>non-virtual thunk to QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::~QBoxLayout()</primary></indexterm>non-virtual thunk to QBoxLayout::~QBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::invalidate()</primary></indexterm>non-virtual thunk to QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QBoxLayout  class
is described by <XREF LINKEND="rtti-584">
</PARA>
<!--classdata-->
<TABLE ID="rtti-584">
<TITLE>typeinfo for QBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QLayout</primary></indexterm>vtable for QLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QBoxLayout</primary></indexterm>typeinfo name for QBoxLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QHBoxLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QHBoxLayout class
is described by <XREF LINKEND="cls-585-0">
</PARA>
<!--classdata-->
<TABLE id="cls-585-0">
<TITLE>Primary vtable for QHBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QHBoxLayout</primary></indexterm>typeinfo for QHBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::metaObject() const</primary></indexterm>QHBoxLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::qt_metacast(char const*)</primary></indexterm>QHBoxLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QHBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::~QHBoxLayout()</primary></indexterm>QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QHBoxLayout::~QHBoxLayout()</primary></indexterm>QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::invalidate()</primary></indexterm>QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::addItem(QLayoutItem*)</primary></indexterm>QBoxLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::expandingDirections() const</primary></indexterm>QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumSize() const</primary></indexterm>QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::maximumSize() const</primary></indexterm>QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::setGeometry(QRect const&)</primary></indexterm>QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::itemAt(int) const</primary></indexterm>QBoxLayout::itemAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::takeAt(int)</primary></indexterm>QBoxLayout::takeAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::count() const</primary></indexterm>QBoxLayout::count() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::sizeHint() const</primary></indexterm>QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::hasHeightForWidth() const</primary></indexterm>QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::heightForWidth(int) const</primary></indexterm>QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</primary></indexterm>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</primary></indexterm>non-virtual thunk to QHBoxLayout::~QHBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::invalidate()</primary></indexterm>non-virtual thunk to QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QHBoxLayout  class
is described by <XREF LINKEND="rtti-586">
</PARA>
<!--classdata-->
<TABLE ID="rtti-586">
<TITLE>typeinfo for QHBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QBoxLayout</primary></indexterm>vtable for QBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QHBoxLayout</primary></indexterm>typeinfo name for QHBoxLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QVBoxLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QVBoxLayout class
is described by <XREF LINKEND="cls-587-0">
</PARA>
<!--classdata-->
<TABLE id="cls-587-0">
<TITLE>Primary vtable for QVBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QVBoxLayout</primary></indexterm>typeinfo for QVBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::metaObject() const</primary></indexterm>QVBoxLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::qt_metacast(char const*)</primary></indexterm>QVBoxLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QVBoxLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::~QVBoxLayout()</primary></indexterm>QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QVBoxLayout::~QVBoxLayout()</primary></indexterm>QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::invalidate()</primary></indexterm>QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::addItem(QLayoutItem*)</primary></indexterm>QBoxLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::expandingDirections() const</primary></indexterm>QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumSize() const</primary></indexterm>QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::maximumSize() const</primary></indexterm>QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::setGeometry(QRect const&)</primary></indexterm>QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::itemAt(int) const</primary></indexterm>QBoxLayout::itemAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::takeAt(int)</primary></indexterm>QBoxLayout::takeAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::count() const</primary></indexterm>QBoxLayout::count() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::sizeHint() const</primary></indexterm>QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::hasHeightForWidth() const</primary></indexterm>QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::heightForWidth(int) const</primary></indexterm>QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</primary></indexterm>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</primary></indexterm>non-virtual thunk to QVBoxLayout::~QVBoxLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QBoxLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QBoxLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QBoxLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QBoxLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</primary></indexterm>non-virtual thunk to QBoxLayout::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::heightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</primary></indexterm>non-virtual thunk to QBoxLayout::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QBoxLayout::invalidate()</primary></indexterm>non-virtual thunk to QBoxLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QVBoxLayout  class
is described by <XREF LINKEND="rtti-588">
</PARA>
<!--classdata-->
<TABLE ID="rtti-588">
<TITLE>typeinfo for QVBoxLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QBoxLayout</primary></indexterm>vtable for QBoxLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QVBoxLayout</primary></indexterm>typeinfo name for QVBoxLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QShortcut</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QShortcut class
is described by <XREF LINKEND="cls-589-0">
</PARA>
<!--classdata-->
<TABLE id="cls-589-0">
<TITLE>Primary vtable for QShortcut</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QShortcut</primary></indexterm>typeinfo for QShortcut</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::metaObject() const</primary></indexterm>QShortcut::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::qt_metacast(char const*)</primary></indexterm>QShortcut::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QShortcut::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::~QShortcut()</primary></indexterm>QShortcut::~QShortcut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::~QShortcut()</primary></indexterm>QShortcut::~QShortcut()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QShortcut::event(QEvent*)</primary></indexterm>QShortcut::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QShortcut  class
is described by <XREF LINKEND="rtti-590">
</PARA>
<!--classdata-->
<TABLE ID="rtti-590">
<TITLE>typeinfo for QShortcut</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QShortcut</primary></indexterm>typeinfo name for QShortcut</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSessionManager</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSessionManager class
is described by <XREF LINKEND="cls-591-0">
</PARA>
<!--classdata-->
<TABLE id="cls-591-0">
<TITLE>Primary vtable for QSessionManager</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSessionManager</primary></indexterm>typeinfo for QSessionManager</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSessionManager::metaObject() const</primary></indexterm>QSessionManager::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSessionManager::qt_metacast(char const*)</primary></indexterm>QSessionManager::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSessionManager::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSessionManager::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSessionManager  class
is described by <XREF LINKEND="rtti-592">
</PARA>
<!--classdata-->
<TABLE ID="rtti-592">
<TITLE>typeinfo for QSessionManager</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSessionManager</primary></indexterm>typeinfo name for QSessionManager</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QApplication</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QApplication class
is described by <XREF LINKEND="cls-593-0">
</PARA>
<!--classdata-->
<TABLE id="cls-593-0">
<TITLE>Primary vtable for QApplication</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QApplication</primary></indexterm>typeinfo for QApplication</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::metaObject() const</primary></indexterm>QApplication::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::qt_metacast(char const*)</primary></indexterm>QApplication::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QApplication::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::~QApplication()</primary></indexterm>QApplication::~QApplication()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::~QApplication()</primary></indexterm>QApplication::~QApplication()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::event(QEvent*)</primary></indexterm>QApplication::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::notify(QObject*, QEvent*)</primary></indexterm>QApplication::notify(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::compressEvent(QEvent*, QObject*, QPostEventList*)</primary></indexterm>QApplication::compressEvent(QEvent*, QObject*, QPostEventList*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::x11EventFilter(_XEvent*)</primary></indexterm>QApplication::x11EventFilter(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::x11ClientMessage(QWidget*, _XEvent*, bool)</primary></indexterm>QApplication::x11ClientMessage(QWidget*, _XEvent*, bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::commitData(QSessionManager&)</primary></indexterm>QApplication::commitData(QSessionManager&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QApplication::saveState(QSessionManager&)</primary></indexterm>QApplication::saveState(QSessionManager&)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QApplication  class
is described by <XREF LINKEND="rtti-594">
</PARA>
<!--classdata-->
<TABLE ID="rtti-594">
<TITLE>typeinfo for QApplication</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QCoreApplication</primary></indexterm>vtable for QCoreApplication</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QApplication</primary></indexterm>typeinfo name for QApplication</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QActionGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QActionGroup class
is described by <XREF LINKEND="cls-595-0">
</PARA>
<!--classdata-->
<TABLE id="cls-595-0">
<TITLE>Primary vtable for QActionGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QActionGroup</primary></indexterm>typeinfo for QActionGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionGroup::metaObject() const</primary></indexterm>QActionGroup::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionGroup::qt_metacast(char const*)</primary></indexterm>QActionGroup::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionGroup::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QActionGroup::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionGroup::~QActionGroup()</primary></indexterm>QActionGroup::~QActionGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QActionGroup::~QActionGroup()</primary></indexterm>QActionGroup::~QActionGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QActionGroup  class
is described by <XREF LINKEND="rtti-596">
</PARA>
<!--classdata-->
<TABLE ID="rtti-596">
<TITLE>typeinfo for QActionGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QActionGroup</primary></indexterm>typeinfo name for QActionGroup</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSound</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSound class
is described by <XREF LINKEND="cls-597-0">
</PARA>
<!--classdata-->
<TABLE id="cls-597-0">
<TITLE>Primary vtable for QSound</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSound</primary></indexterm>typeinfo for QSound</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSound::metaObject() const</primary></indexterm>QSound::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSound::qt_metacast(char const*)</primary></indexterm>QSound::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSound::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSound::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSound::~QSound()</primary></indexterm>QSound::~QSound()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSound::~QSound()</primary></indexterm>QSound::~QSound()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSound  class
is described by <XREF LINKEND="rtti-598">
</PARA>
<!--classdata-->
<TABLE ID="rtti-598">
<TITLE>typeinfo for QSound</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSound</primary></indexterm>typeinfo name for QSound</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStackedLayout</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStackedLayout class
is described by <XREF LINKEND="cls-599-0">
</PARA>
<!--classdata-->
<TABLE id="cls-599-0">
<TITLE>Primary vtable for QStackedLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStackedLayout</primary></indexterm>typeinfo for QStackedLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::metaObject() const</primary></indexterm>QStackedLayout::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::qt_metacast(char const*)</primary></indexterm>QStackedLayout::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStackedLayout::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::~QStackedLayout()</primary></indexterm>QStackedLayout::~QStackedLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::~QStackedLayout()</primary></indexterm>QStackedLayout::~QStackedLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::childEvent(QChildEvent*)</primary></indexterm>QLayout::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::invalidate()</primary></indexterm>QLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::geometry() const</primary></indexterm>QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::addItem(QLayoutItem*)</primary></indexterm>QStackedLayout::addItem(QLayoutItem*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::expandingDirections() const</primary></indexterm>QLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::minimumSize() const</primary></indexterm>QStackedLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::maximumSize() const</primary></indexterm>QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::setGeometry(QRect const&)</primary></indexterm>QStackedLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::itemAt(int) const</primary></indexterm>QStackedLayout::itemAt(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::takeAt(int)</primary></indexterm>QStackedLayout::takeAt(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::indexOf(QWidget*) const</primary></indexterm>QLayout::indexOf(QWidget*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::count() const</primary></indexterm>QStackedLayout::count() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::isEmpty() const</primary></indexterm>QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayout::layout()</primary></indexterm>QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedLayout::sizeHint() const</primary></indexterm>QStackedLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedLayout::~QStackedLayout()</primary></indexterm>non-virtual thunk to QStackedLayout::~QStackedLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedLayout::~QStackedLayout()</primary></indexterm>non-virtual thunk to QStackedLayout::~QStackedLayout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedLayout::sizeHint() const</primary></indexterm>non-virtual thunk to QStackedLayout::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedLayout::minimumSize() const</primary></indexterm>non-virtual thunk to QStackedLayout::minimumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::maximumSize() const</primary></indexterm>non-virtual thunk to QLayout::maximumSize() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::expandingDirections() const</primary></indexterm>non-virtual thunk to QLayout::expandingDirections() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedLayout::setGeometry(QRect const&)</primary></indexterm>non-virtual thunk to QStackedLayout::setGeometry(QRect const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::geometry() const</primary></indexterm>non-virtual thunk to QLayout::geometry() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::isEmpty() const</primary></indexterm>non-virtual thunk to QLayout::isEmpty() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::hasHeightForWidth() const</primary></indexterm>QLayoutItem::hasHeightForWidth() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::heightForWidth(int) const</primary></indexterm>QLayoutItem::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::minimumHeightForWidth(int) const</primary></indexterm>QLayoutItem::minimumHeightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::invalidate()</primary></indexterm>non-virtual thunk to QLayout::invalidate()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::widget()</primary></indexterm>QLayoutItem::widget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLayout::layout()</primary></indexterm>non-virtual thunk to QLayout::layout()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLayoutItem::spacerItem()</primary></indexterm>QLayoutItem::spacerItem()</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStackedLayout  class
is described by <XREF LINKEND="rtti-600">
</PARA>
<!--classdata-->
<TABLE ID="rtti-600">
<TITLE>typeinfo for QStackedLayout</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QLayout</primary></indexterm>vtable for QLayout</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStackedLayout</primary></indexterm>typeinfo name for QStackedLayout</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCommonStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCommonStyle class
is described by <XREF LINKEND="cls-601-0">
</PARA>
<!--classdata-->
<TABLE id="cls-601-0">
<TITLE>Primary vtable for QCommonStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCommonStyle</primary></indexterm>typeinfo for QCommonStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::metaObject() const</primary></indexterm>QCommonStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::qt_metacast(char const*)</primary></indexterm>QCommonStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QCommonStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::~QCommonStyle()</primary></indexterm>QCommonStyle::~QCommonStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::~QCommonStyle()</primary></indexterm>QCommonStyle::~QCommonStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QWidget*)</primary></indexterm>QStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::unpolish(QWidget*)</primary></indexterm>QStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QApplication*)</primary></indexterm>QStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::unpolish(QApplication*)</primary></indexterm>QStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::polish(QPalette&)</primary></indexterm>QStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::standardPalette() const</primary></indexterm>QStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QCommonStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QCommonStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</primary></indexterm>QCommonStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</primary></indexterm>QCommonStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</primary></indexterm>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</primary></indexterm>QCommonStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</primary></indexterm>QCommonStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</primary></indexterm>QCommonStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</primary></indexterm>QCommonStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</primary></indexterm>QCommonStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</primary></indexterm>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QCommonStyle  class
is described by <XREF LINKEND="rtti-602">
</PARA>
<!--classdata-->
<TABLE ID="rtti-602">
<TITLE>typeinfo for QCommonStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QStyle</primary></indexterm>vtable for QStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCommonStyle</primary></indexterm>typeinfo name for QCommonStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMotifStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMotifStyle class
is described by <XREF LINKEND="cls-603-0">
</PARA>
<!--classdata-->
<TABLE id="cls-603-0">
<TITLE>Primary vtable for QMotifStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMotifStyle</primary></indexterm>typeinfo for QMotifStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::metaObject() const</primary></indexterm>QMotifStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::qt_metacast(char const*)</primary></indexterm>QMotifStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMotifStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::~QMotifStyle()</primary></indexterm>QMotifStyle::~QMotifStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::~QMotifStyle()</primary></indexterm>QMotifStyle::~QMotifStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::event(QEvent*)</primary></indexterm>QMotifStyle::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::eventFilter(QObject*, QEvent*)</primary></indexterm>QMotifStyle::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::timerEvent(QTimerEvent*)</primary></indexterm>QMotifStyle::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QWidget*)</primary></indexterm>QMotifStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::unpolish(QWidget*)</primary></indexterm>QMotifStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QApplication*)</primary></indexterm>QMotifStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::unpolish(QApplication*)</primary></indexterm>QMotifStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QPalette&)</primary></indexterm>QMotifStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::standardPalette() const</primary></indexterm>QMotifStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QMotifStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QMotifStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</primary></indexterm>QMotifStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</primary></indexterm>QMotifStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</primary></indexterm>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</primary></indexterm>QMotifStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</primary></indexterm>QMotifStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</primary></indexterm>QMotifStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</primary></indexterm>QMotifStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</primary></indexterm>QMotifStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</primary></indexterm>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMotifStyle  class
is described by <XREF LINKEND="rtti-604">
</PARA>
<!--classdata-->
<TABLE ID="rtti-604">
<TITLE>typeinfo for QMotifStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QCommonStyle</primary></indexterm>vtable for QCommonStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMotifStyle</primary></indexterm>typeinfo name for QMotifStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStyleFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStyleFactoryInterface class
is described by <XREF LINKEND="cls-605-0">
</PARA>
<!--classdata-->
<TABLE id="cls-605-0">
<TITLE>Primary vtable for QStyleFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStyleFactoryInterface</primary></indexterm>typeinfo for QStyleFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyleFactoryInterface::~QStyleFactoryInterface()</primary></indexterm>QStyleFactoryInterface::~QStyleFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyleFactoryInterface::~QStyleFactoryInterface()</primary></indexterm>QStyleFactoryInterface::~QStyleFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStyleFactoryInterface  class
is described by <XREF LINKEND="rtti-606">
</PARA>
<!--classdata-->
<TABLE ID="rtti-606">
<TITLE>typeinfo for QStyleFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStyleFactoryInterface</primary></indexterm>typeinfo name for QStyleFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStylePlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStylePlugin class
is described by <XREF LINKEND="cls-607-0">
</PARA>
<!--classdata-->
<TABLE id="cls-607-0">
<TITLE>Primary vtable for QStylePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStylePlugin</primary></indexterm>typeinfo for QStylePlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStylePlugin::metaObject() const</primary></indexterm>QStylePlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStylePlugin::qt_metacast(char const*)</primary></indexterm>QStylePlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStylePlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStylePlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStylePlugin::~QStylePlugin()</primary></indexterm>QStylePlugin::~QStylePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStylePlugin::~QStylePlugin()</primary></indexterm>QStylePlugin::~QStylePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStylePlugin::~QStylePlugin()</primary></indexterm>non-virtual thunk to QStylePlugin::~QStylePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStylePlugin::~QStylePlugin()</primary></indexterm>non-virtual thunk to QStylePlugin::~QStylePlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStylePlugin  class
is described by <XREF LINKEND="rtti-608">
</PARA>
<!--classdata-->
<TABLE ID="rtti-608">
<TITLE>typeinfo for QStylePlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStylePlugin</primary></indexterm>typeinfo name for QStylePlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWindowsStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWindowsStyle class
is described by <XREF LINKEND="cls-609-0">
</PARA>
<!--classdata-->
<TABLE id="cls-609-0">
<TITLE>Primary vtable for QWindowsStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWindowsStyle</primary></indexterm>typeinfo for QWindowsStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::metaObject() const</primary></indexterm>QWindowsStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::qt_metacast(char const*)</primary></indexterm>QWindowsStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QWindowsStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::~QWindowsStyle()</primary></indexterm>QWindowsStyle::~QWindowsStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::~QWindowsStyle()</primary></indexterm>QWindowsStyle::~QWindowsStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::eventFilter(QObject*, QEvent*)</primary></indexterm>QWindowsStyle::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::timerEvent(QTimerEvent*)</primary></indexterm>QWindowsStyle::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::polish(QWidget*)</primary></indexterm>QWindowsStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::unpolish(QWidget*)</primary></indexterm>QWindowsStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::polish(QApplication*)</primary></indexterm>QWindowsStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::unpolish(QApplication*)</primary></indexterm>QWindowsStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::polish(QPalette&)</primary></indexterm>QWindowsStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::standardPalette() const</primary></indexterm>QStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QWindowsStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QWindowsStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</primary></indexterm>QWindowsStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</primary></indexterm>QWindowsStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</primary></indexterm>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</primary></indexterm>QCommonStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</primary></indexterm>QWindowsStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</primary></indexterm>QWindowsStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</primary></indexterm>QWindowsStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</primary></indexterm>QWindowsStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</primary></indexterm>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWindowsStyle  class
is described by <XREF LINKEND="rtti-610">
</PARA>
<!--classdata-->
<TABLE ID="rtti-610">
<TITLE>typeinfo for QWindowsStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QCommonStyle</primary></indexterm>vtable for QCommonStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWindowsStyle</primary></indexterm>typeinfo name for QWindowsStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCDEStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCDEStyle class
is described by <XREF LINKEND="cls-611-0">
</PARA>
<!--classdata-->
<TABLE id="cls-611-0">
<TITLE>Primary vtable for QCDEStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCDEStyle</primary></indexterm>typeinfo for QCDEStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::metaObject() const</primary></indexterm>QCDEStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::qt_metacast(char const*)</primary></indexterm>QCDEStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QCDEStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::~QCDEStyle()</primary></indexterm>QCDEStyle::~QCDEStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::~QCDEStyle()</primary></indexterm>QCDEStyle::~QCDEStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::event(QEvent*)</primary></indexterm>QMotifStyle::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::eventFilter(QObject*, QEvent*)</primary></indexterm>QMotifStyle::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::timerEvent(QTimerEvent*)</primary></indexterm>QMotifStyle::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QWidget*)</primary></indexterm>QMotifStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::unpolish(QWidget*)</primary></indexterm>QMotifStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QApplication*)</primary></indexterm>QMotifStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::unpolish(QApplication*)</primary></indexterm>QMotifStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::polish(QPalette&)</primary></indexterm>QMotifStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::standardPalette() const</primary></indexterm>QCDEStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QCDEStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QCDEStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</primary></indexterm>QMotifStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</primary></indexterm>QMotifStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</primary></indexterm>QCommonStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</primary></indexterm>QMotifStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCDEStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</primary></indexterm>QCDEStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</primary></indexterm>QMotifStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</primary></indexterm>QMotifStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMotifStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</primary></indexterm>QMotifStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</primary></indexterm>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QCDEStyle  class
is described by <XREF LINKEND="rtti-612">
</PARA>
<!--classdata-->
<TABLE ID="rtti-612">
<TITLE>typeinfo for QCDEStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QMotifStyle</primary></indexterm>vtable for QMotifStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCDEStyle</primary></indexterm>typeinfo name for QCDEStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPlastiqueStyle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPlastiqueStyle class
is described by <XREF LINKEND="cls-613-0">
</PARA>
<!--classdata-->
<TABLE id="cls-613-0">
<TITLE>Primary vtable for QPlastiqueStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPlastiqueStyle</primary></indexterm>typeinfo for QPlastiqueStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::metaObject() const</primary></indexterm>QPlastiqueStyle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::qt_metacast(char const*)</primary></indexterm>QPlastiqueStyle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QPlastiqueStyle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::~QPlastiqueStyle()</primary></indexterm>QPlastiqueStyle::~QPlastiqueStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::~QPlastiqueStyle()</primary></indexterm>QPlastiqueStyle::~QPlastiqueStyle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::eventFilter(QObject*, QEvent*)</primary></indexterm>QPlastiqueStyle::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::timerEvent(QTimerEvent*)</primary></indexterm>QPlastiqueStyle::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::polish(QWidget*)</primary></indexterm>QPlastiqueStyle::polish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::unpolish(QWidget*)</primary></indexterm>QPlastiqueStyle::unpolish(QWidget*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::polish(QApplication*)</primary></indexterm>QPlastiqueStyle::polish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::unpolish(QApplication*)</primary></indexterm>QPlastiqueStyle::unpolish(QApplication*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::polish(QPalette&)</primary></indexterm>QPlastiqueStyle::polish(QPalette&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</primary></indexterm>QStyle::itemTextRect(QFontMetrics const&, QRect const&, int, bool, QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::itemPixmapRect(QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</primary></indexterm>QStyle::drawItemText(QPainter*, QRect const&, int, QPalette const&, bool, QString const&, QPalette::ColorRole) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</primary></indexterm>QStyle::drawItemPixmap(QPainter*, QRect const&, int, QPixmap const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::standardPalette() const</primary></indexterm>QPlastiqueStyle::standardPalette() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QPlastiqueStyle::drawPrimitive(QStyle::PrimitiveElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</primary></indexterm>QPlastiqueStyle::drawControl(QStyle::ControlElement, QStyleOption const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</primary></indexterm>QPlastiqueStyle::subElementRect(QStyle::SubElement, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</primary></indexterm>QPlastiqueStyle::drawComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPainter*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</primary></indexterm>QPlastiqueStyle::hitTestComplexControl(QStyle::ComplexControl, QStyleOptionComplex const*, QPoint const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</primary></indexterm>QPlastiqueStyle::subControlRect(QStyle::ComplexControl, QStyleOptionComplex const*, QStyle::SubControl, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</primary></indexterm>QPlastiqueStyle::pixelMetric(QStyle::PixelMetric, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</primary></indexterm>QPlastiqueStyle::sizeFromContents(QStyle::ContentsType, QStyleOption const*, QSize const&, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPlastiqueStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</primary></indexterm>QPlastiqueStyle::styleHint(QStyle::StyleHint, QStyleOption const*, QWidget const*, QStyleHintReturn*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWindowsStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</primary></indexterm>QWindowsStyle::standardPixmap(QStyle::StandardPixmap, QStyleOption const*, QWidget const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</primary></indexterm>QCommonStyle::generatedIconPixmap(QIcon::Mode, QPixmap const&, QStyleOption const*) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPlastiqueStyle  class
is described by <XREF LINKEND="rtti-614">
</PARA>
<!--classdata-->
<TABLE ID="rtti-614">
<TITLE>typeinfo for QPlastiqueStyle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWindowsStyle</primary></indexterm>vtable for QWindowsStyle</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPlastiqueStyle</primary></indexterm>typeinfo name for QPlastiqueStyle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputContextFactoryInterface</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputContextFactoryInterface class
is described by <XREF LINKEND="cls-615-0">
</PARA>
<!--classdata-->
<TABLE id="cls-615-0">
<TITLE>Primary vtable for QInputContextFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputContextFactoryInterface</primary></indexterm>typeinfo for QInputContextFactoryInterface</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextFactoryInterface::~QInputContextFactoryInterface()</primary></indexterm>QInputContextFactoryInterface::~QInputContextFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextFactoryInterface::~QInputContextFactoryInterface()</primary></indexterm>QInputContextFactoryInterface::~QInputContextFactoryInterface()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputContextFactoryInterface  class
is described by <XREF LINKEND="rtti-616">
</PARA>
<!--classdata-->
<TABLE ID="rtti-616">
<TITLE>typeinfo for QInputContextFactoryInterface</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputContextFactoryInterface</primary></indexterm>typeinfo name for QInputContextFactoryInterface</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QInputContextPlugin</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QInputContextPlugin class
is described by <XREF LINKEND="cls-617-0">
</PARA>
<!--classdata-->
<TABLE id="cls-617-0">
<TITLE>Primary vtable for QInputContextPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QInputContextPlugin</primary></indexterm>typeinfo for QInputContextPlugin</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextPlugin::metaObject() const</primary></indexterm>QInputContextPlugin::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextPlugin::qt_metacast(char const*)</primary></indexterm>QInputContextPlugin::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextPlugin::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QInputContextPlugin::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextPlugin::~QInputContextPlugin()</primary></indexterm>QInputContextPlugin::~QInputContextPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QInputContextPlugin::~QInputContextPlugin()</primary></indexterm>QInputContextPlugin::~QInputContextPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QInputContextPlugin::~QInputContextPlugin()</primary></indexterm>non-virtual thunk to QInputContextPlugin::~QInputContextPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QInputContextPlugin::~QInputContextPlugin()</primary></indexterm>non-virtual thunk to QInputContextPlugin::~QInputContextPlugin()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QInputContextPlugin  class
is described by <XREF LINKEND="rtti-618">
</PARA>
<!--classdata-->
<TABLE ID="rtti-618">
<TITLE>typeinfo for QInputContextPlugin</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QInputContextPlugin</primary></indexterm>typeinfo name for QInputContextPlugin</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QAbstractButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QAbstractButton class
is described by <XREF LINKEND="cls-619-0">
</PARA>
<!--classdata-->
<TABLE id="cls-619-0">
<TITLE>Primary vtable for QAbstractButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QAbstractButton</primary></indexterm>typeinfo for QAbstractButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::metaObject() const</primary></indexterm>QAbstractButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::qt_metacast(char const*)</primary></indexterm>QAbstractButton::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAbstractButton::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::~QAbstractButton()</primary></indexterm>QAbstractButton::~QAbstractButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::~QAbstractButton()</primary></indexterm>QAbstractButton::~QAbstractButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::event(QEvent*)</primary></indexterm>QAbstractButton::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractButton::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::changeEvent(QEvent*)</primary></indexterm>QAbstractButton::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::hitButton(QPoint const&) const</primary></indexterm>QAbstractButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::checkStateSet()</primary></indexterm>QAbstractButton::checkStateSet()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::nextCheckState()</primary></indexterm>QAbstractButton::nextCheckState()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractButton::~QAbstractButton()</primary></indexterm>non-virtual thunk to QAbstractButton::~QAbstractButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QAbstractButton::~QAbstractButton()</primary></indexterm>non-virtual thunk to QAbstractButton::~QAbstractButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QAbstractButton  class
is described by <XREF LINKEND="rtti-620">
</PARA>
<!--classdata-->
<TABLE ID="rtti-620">
<TITLE>typeinfo for QAbstractButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QAbstractButton</primary></indexterm>typeinfo name for QAbstractButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QButtonGroup</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QButtonGroup class
is described by <XREF LINKEND="cls-621-0">
</PARA>
<!--classdata-->
<TABLE id="cls-621-0">
<TITLE>Primary vtable for QButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QButtonGroup</primary></indexterm>typeinfo for QButtonGroup</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::metaObject() const</primary></indexterm>QButtonGroup::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::qt_metacast(char const*)</primary></indexterm>QButtonGroup::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QButtonGroup::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::~QButtonGroup()</primary></indexterm>QButtonGroup::~QButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QButtonGroup::~QButtonGroup()</primary></indexterm>QButtonGroup::~QButtonGroup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::event(QEvent*)</primary></indexterm>QObject::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QButtonGroup  class
is described by <XREF LINKEND="rtti-622">
</PARA>
<!--classdata-->
<TABLE ID="rtti-622">
<TITLE>typeinfo for QButtonGroup</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QObject</primary></indexterm>vtable for QObject</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QButtonGroup</primary></indexterm>typeinfo name for QButtonGroup</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QCheckBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QCheckBox class
is described by <XREF LINKEND="cls-623-0">
</PARA>
<!--classdata-->
<TABLE id="cls-623-0">
<TITLE>Primary vtable for QCheckBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QCheckBox</primary></indexterm>typeinfo for QCheckBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::metaObject() const</primary></indexterm>QCheckBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::qt_metacast(char const*)</primary></indexterm>QCheckBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QCheckBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::~QCheckBox()</primary></indexterm>QCheckBox::~QCheckBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::~QCheckBox()</primary></indexterm>QCheckBox::~QCheckBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::event(QEvent*)</primary></indexterm>QCheckBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractButton::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::sizeHint() const</primary></indexterm>QCheckBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QCheckBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::paintEvent(QPaintEvent*)</primary></indexterm>QCheckBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::changeEvent(QEvent*)</primary></indexterm>QAbstractButton::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::hitButton(QPoint const&) const</primary></indexterm>QCheckBox::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::checkStateSet()</primary></indexterm>QCheckBox::checkStateSet()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QCheckBox::nextCheckState()</primary></indexterm>QCheckBox::nextCheckState()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QCheckBox  class
is described by <XREF LINKEND="rtti-624">
</PARA>
<!--classdata-->
<TABLE ID="rtti-624">
<TITLE>typeinfo for QCheckBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractButton</primary></indexterm>vtable for QAbstractButton</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QCheckBox</primary></indexterm>typeinfo name for QCheckBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMenuItem</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMenuItem class
is described by <XREF LINKEND="cls-625-0">
</PARA>
<!--classdata-->
<TABLE id="cls-625-0">
<TITLE>Primary vtable for QMenuItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenuItem</primary></indexterm>typeinfo for QMenuItem</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::metaObject() const</primary></indexterm>QAction::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::qt_metacast(char const*)</primary></indexterm>QAction::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QAction::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuItem::~QMenuItem()</primary></indexterm>QMenuItem::~QMenuItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuItem::~QMenuItem()</primary></indexterm>QMenuItem::~QMenuItem()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAction::event(QEvent*)</primary></indexterm>QAction::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMenuItem  class
is described by <XREF LINKEND="rtti-626">
</PARA>
<!--classdata-->
<TABLE ID="rtti-626">
<TITLE>typeinfo for QMenuItem</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAction</primary></indexterm>vtable for QAction</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMenuItem</primary></indexterm>typeinfo name for QMenuItem</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QWorkspace</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QWorkspace class
is described by <XREF LINKEND="cls-627-0">
</PARA>
<!--classdata-->
<TABLE id="cls-627-0">
<TITLE>Primary vtable for QWorkspace</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QWorkspace</primary></indexterm>typeinfo for QWorkspace</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::metaObject() const</primary></indexterm>QWorkspace::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::qt_metacast(char const*)</primary></indexterm>QWorkspace::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QWorkspace::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::~QWorkspace()</primary></indexterm>QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::~QWorkspace()</primary></indexterm>QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::event(QEvent*)</primary></indexterm>QWorkspace::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::eventFilter(QObject*, QEvent*)</primary></indexterm>QWorkspace::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::childEvent(QChildEvent*)</primary></indexterm>QWorkspace::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::sizeHint() const</primary></indexterm>QWorkspace::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::wheelEvent(QWheelEvent*)</primary></indexterm>QWorkspace::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::paintEvent(QPaintEvent*)</primary></indexterm>QWorkspace::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::resizeEvent(QResizeEvent*)</primary></indexterm>QWorkspace::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::showEvent(QShowEvent*)</primary></indexterm>QWorkspace::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::hideEvent(QHideEvent*)</primary></indexterm>QWorkspace::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWorkspace::changeEvent(QEvent*)</primary></indexterm>QWorkspace::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWorkspace::~QWorkspace()</primary></indexterm>non-virtual thunk to QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWorkspace::~QWorkspace()</primary></indexterm>non-virtual thunk to QWorkspace::~QWorkspace()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QWorkspace  class
is described by <XREF LINKEND="rtti-628">
</PARA>
<!--classdata-->
<TABLE ID="rtti-628">
<TITLE>typeinfo for QWorkspace</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QWorkspace</primary></indexterm>typeinfo name for QWorkspace</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSpinBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSpinBox class
is described by <XREF LINKEND="cls-629-0">
</PARA>
<!--classdata-->
<TABLE id="cls-629-0">
<TITLE>Primary vtable for QSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSpinBox</primary></indexterm>typeinfo for QSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::metaObject() const</primary></indexterm>QSpinBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::qt_metacast(char const*)</primary></indexterm>QSpinBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSpinBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::~QSpinBox()</primary></indexterm>QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::~QSpinBox()</primary></indexterm>QSpinBox::~QSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::event(QEvent*)</primary></indexterm>QSpinBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::sizeHint() const</primary></indexterm>QAbstractSpinBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSpinBox::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::validate(QString&, int&) const</primary></indexterm>QSpinBox::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::fixup(QString&) const</primary></indexterm>QSpinBox::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepBy(int)</primary></indexterm>QAbstractSpinBox::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::clear()</primary></indexterm>QAbstractSpinBox::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepEnabled() const</primary></indexterm>QAbstractSpinBox::stepEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::valueFromText(QString const&) const</primary></indexterm>QSpinBox::valueFromText(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSpinBox::textFromValue(int) const</primary></indexterm>QSpinBox::textFromValue(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSpinBox  class
is described by <XREF LINKEND="rtti-630">
</PARA>
<!--classdata-->
<TABLE ID="rtti-630">
<TITLE>typeinfo for QSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractSpinBox</primary></indexterm>vtable for QAbstractSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSpinBox</primary></indexterm>typeinfo name for QSpinBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDoubleSpinBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDoubleSpinBox class
is described by <XREF LINKEND="cls-631-0">
</PARA>
<!--classdata-->
<TABLE id="cls-631-0">
<TITLE>Primary vtable for QDoubleSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDoubleSpinBox</primary></indexterm>typeinfo for QDoubleSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::metaObject() const</primary></indexterm>QDoubleSpinBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::qt_metacast(char const*)</primary></indexterm>QDoubleSpinBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDoubleSpinBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::~QDoubleSpinBox()</primary></indexterm>QDoubleSpinBox::~QDoubleSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::~QDoubleSpinBox()</primary></indexterm>QDoubleSpinBox::~QDoubleSpinBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::event(QEvent*)</primary></indexterm>QAbstractSpinBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::sizeHint() const</primary></indexterm>QAbstractSpinBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSpinBox::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::validate(QString&, int&) const</primary></indexterm>QDoubleSpinBox::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::fixup(QString&) const</primary></indexterm>QDoubleSpinBox::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepBy(int)</primary></indexterm>QAbstractSpinBox::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::clear()</primary></indexterm>QAbstractSpinBox::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::stepEnabled() const</primary></indexterm>QAbstractSpinBox::stepEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::valueFromText(QString const&) const</primary></indexterm>QDoubleSpinBox::valueFromText(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDoubleSpinBox::textFromValue(double) const</primary></indexterm>QDoubleSpinBox::textFromValue(double) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDoubleSpinBox  class
is described by <XREF LINKEND="rtti-632">
</PARA>
<!--classdata-->
<TABLE ID="rtti-632">
<TITLE>typeinfo for QDoubleSpinBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractSpinBox</primary></indexterm>vtable for QAbstractSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDoubleSpinBox</primary></indexterm>typeinfo name for QDoubleSpinBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLCDNumber</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLCDNumber class
is described by <XREF LINKEND="cls-633-0">
</PARA>
<!--classdata-->
<TABLE id="cls-633-0">
<TITLE>Primary vtable for QLCDNumber</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLCDNumber</primary></indexterm>typeinfo for QLCDNumber</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::metaObject() const</primary></indexterm>QLCDNumber::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::qt_metacast(char const*)</primary></indexterm>QLCDNumber::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QLCDNumber::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::~QLCDNumber()</primary></indexterm>QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::~QLCDNumber()</primary></indexterm>QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::event(QEvent*)</primary></indexterm>QLCDNumber::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::sizeHint() const</primary></indexterm>QLCDNumber::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLCDNumber::paintEvent(QPaintEvent*)</primary></indexterm>QLCDNumber::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLCDNumber::~QLCDNumber()</primary></indexterm>non-virtual thunk to QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLCDNumber::~QLCDNumber()</primary></indexterm>non-virtual thunk to QLCDNumber::~QLCDNumber()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLCDNumber  class
is described by <XREF LINKEND="rtti-634">
</PARA>
<!--classdata-->
<TABLE ID="rtti-634">
<TITLE>typeinfo for QLCDNumber</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QFrame</primary></indexterm>vtable for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLCDNumber</primary></indexterm>typeinfo name for QLCDNumber</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStackedWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStackedWidget class
is described by <XREF LINKEND="cls-635-0">
</PARA>
<!--classdata-->
<TABLE id="cls-635-0">
<TITLE>Primary vtable for QStackedWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStackedWidget</primary></indexterm>typeinfo for QStackedWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::metaObject() const</primary></indexterm>QStackedWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::qt_metacast(char const*)</primary></indexterm>QStackedWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStackedWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::~QStackedWidget()</primary></indexterm>QStackedWidget::~QStackedWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::~QStackedWidget()</primary></indexterm>QStackedWidget::~QStackedWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStackedWidget::event(QEvent*)</primary></indexterm>QStackedWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::sizeHint() const</primary></indexterm>QFrame::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedWidget::~QStackedWidget()</primary></indexterm>non-virtual thunk to QStackedWidget::~QStackedWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStackedWidget::~QStackedWidget()</primary></indexterm>non-virtual thunk to QStackedWidget::~QStackedWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStackedWidget  class
is described by <XREF LINKEND="rtti-636">
</PARA>
<!--classdata-->
<TABLE ID="rtti-636">
<TITLE>typeinfo for QStackedWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QFrame</primary></indexterm>vtable for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStackedWidget</primary></indexterm>typeinfo name for QStackedWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QPushButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QPushButton class
is described by <XREF LINKEND="cls-637-0">
</PARA>
<!--classdata-->
<TABLE id="cls-637-0">
<TITLE>Primary vtable for QPushButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QPushButton</primary></indexterm>typeinfo for QPushButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::metaObject() const</primary></indexterm>QPushButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::qt_metacast(char const*)</primary></indexterm>QPushButton::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QPushButton::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::~QPushButton()</primary></indexterm>QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::~QPushButton()</primary></indexterm>QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::event(QEvent*)</primary></indexterm>QPushButton::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractButton::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::sizeHint() const</primary></indexterm>QPushButton::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QPushButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::focusInEvent(QFocusEvent*)</primary></indexterm>QPushButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QPushButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QPushButton::paintEvent(QPaintEvent*)</primary></indexterm>QPushButton::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::changeEvent(QEvent*)</primary></indexterm>QAbstractButton::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::hitButton(QPoint const&) const</primary></indexterm>QAbstractButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::checkStateSet()</primary></indexterm>QAbstractButton::checkStateSet()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::nextCheckState()</primary></indexterm>QAbstractButton::nextCheckState()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPushButton::~QPushButton()</primary></indexterm>non-virtual thunk to QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QPushButton::~QPushButton()</primary></indexterm>non-virtual thunk to QPushButton::~QPushButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QPushButton  class
is described by <XREF LINKEND="rtti-638">
</PARA>
<!--classdata-->
<TABLE ID="rtti-638">
<TITLE>typeinfo for QPushButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractButton</primary></indexterm>vtable for QAbstractButton</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QPushButton</primary></indexterm>typeinfo name for QPushButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSplashScreen</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSplashScreen class
is described by <XREF LINKEND="cls-639-0">
</PARA>
<!--classdata-->
<TABLE id="cls-639-0">
<TITLE>Primary vtable for QSplashScreen</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplashScreen</primary></indexterm>typeinfo for QSplashScreen</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::metaObject() const</primary></indexterm>QSplashScreen::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::qt_metacast(char const*)</primary></indexterm>QSplashScreen::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSplashScreen::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::~QSplashScreen()</primary></indexterm>QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::~QSplashScreen()</primary></indexterm>QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::event(QEvent*)</primary></indexterm>QSplashScreen::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::mousePressEvent(QMouseEvent*)</primary></indexterm>QSplashScreen::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplashScreen::drawContents(QPainter*)</primary></indexterm>QSplashScreen::drawContents(QPainter*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplashScreen::~QSplashScreen()</primary></indexterm>non-virtual thunk to QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplashScreen::~QSplashScreen()</primary></indexterm>non-virtual thunk to QSplashScreen::~QSplashScreen()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSplashScreen  class
is described by <XREF LINKEND="rtti-640">
</PARA>
<!--classdata-->
<TABLE ID="rtti-640">
<TITLE>typeinfo for QSplashScreen</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSplashScreen</primary></indexterm>typeinfo name for QSplashScreen</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDateTimeEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDateTimeEdit class
is described by <XREF LINKEND="cls-641-0">
</PARA>
<!--classdata-->
<TABLE id="cls-641-0">
<TITLE>Primary vtable for QDateTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateTimeEdit</primary></indexterm>typeinfo for QDateTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::metaObject() const</primary></indexterm>QDateTimeEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::qt_metacast(char const*)</primary></indexterm>QDateTimeEdit::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDateTimeEdit::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::~QDateTimeEdit()</primary></indexterm>QDateTimeEdit::~QDateTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::~QDateTimeEdit()</primary></indexterm>QDateTimeEdit::~QDateTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::event(QEvent*)</primary></indexterm>QDateTimeEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::sizeHint() const</primary></indexterm>QDateTimeEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::wheelEvent(QWheelEvent*)</primary></indexterm>QDateTimeEdit::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QDateTimeEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QDateTimeEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusNextPrevChild(bool)</primary></indexterm>QDateTimeEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::validate(QString&, int&) const</primary></indexterm>QDateTimeEdit::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::fixup(QString&) const</primary></indexterm>QDateTimeEdit::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepBy(int)</primary></indexterm>QDateTimeEdit::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::clear()</primary></indexterm>QDateTimeEdit::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepEnabled() const</primary></indexterm>QDateTimeEdit::stepEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::dateTimeFromText(QString const&) const</primary></indexterm>QDateTimeEdit::dateTimeFromText(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::textFromDateTime(QDateTime const&) const</primary></indexterm>QDateTimeEdit::textFromDateTime(QDateTime const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDateTimeEdit  class
is described by <XREF LINKEND="rtti-642">
</PARA>
<!--classdata-->
<TABLE ID="rtti-642">
<TITLE>typeinfo for QDateTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractSpinBox</primary></indexterm>vtable for QAbstractSpinBox</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDateTimeEdit</primary></indexterm>typeinfo name for QDateTimeEdit</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTimeEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTimeEdit class
is described by <XREF LINKEND="cls-643-0">
</PARA>
<!--classdata-->
<TABLE id="cls-643-0">
<TITLE>Primary vtable for QTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTimeEdit</primary></indexterm>typeinfo for QTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::metaObject() const</primary></indexterm>QTimeEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::qt_metacast(char const*)</primary></indexterm>QTimeEdit::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTimeEdit::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::~QTimeEdit()</primary></indexterm>QTimeEdit::~QTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTimeEdit::~QTimeEdit()</primary></indexterm>QTimeEdit::~QTimeEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::event(QEvent*)</primary></indexterm>QDateTimeEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::sizeHint() const</primary></indexterm>QDateTimeEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::wheelEvent(QWheelEvent*)</primary></indexterm>QDateTimeEdit::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QDateTimeEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QDateTimeEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusNextPrevChild(bool)</primary></indexterm>QDateTimeEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::validate(QString&, int&) const</primary></indexterm>QDateTimeEdit::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::fixup(QString&) const</primary></indexterm>QDateTimeEdit::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepBy(int)</primary></indexterm>QDateTimeEdit::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::clear()</primary></indexterm>QDateTimeEdit::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepEnabled() const</primary></indexterm>QDateTimeEdit::stepEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::dateTimeFromText(QString const&) const</primary></indexterm>QDateTimeEdit::dateTimeFromText(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::textFromDateTime(QDateTime const&) const</primary></indexterm>QDateTimeEdit::textFromDateTime(QDateTime const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTimeEdit  class
is described by <XREF LINKEND="rtti-644">
</PARA>
<!--classdata-->
<TABLE ID="rtti-644">
<TITLE>typeinfo for QTimeEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDateTimeEdit</primary></indexterm>vtable for QDateTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTimeEdit</primary></indexterm>typeinfo name for QTimeEdit</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDateEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDateEdit class
is described by <XREF LINKEND="cls-645-0">
</PARA>
<!--classdata-->
<TABLE id="cls-645-0">
<TITLE>Primary vtable for QDateEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDateEdit</primary></indexterm>typeinfo for QDateEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::metaObject() const</primary></indexterm>QDateEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::qt_metacast(char const*)</primary></indexterm>QDateEdit::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDateEdit::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::~QDateEdit()</primary></indexterm>QDateEdit::~QDateEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateEdit::~QDateEdit()</primary></indexterm>QDateEdit::~QDateEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::event(QEvent*)</primary></indexterm>QDateTimeEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSpinBox::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::sizeHint() const</primary></indexterm>QDateTimeEdit::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::minimumSizeHint() const</primary></indexterm>QAbstractSpinBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractSpinBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::wheelEvent(QWheelEvent*)</primary></indexterm>QDateTimeEdit::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QDateTimeEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractSpinBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QDateTimeEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractSpinBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractSpinBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::resizeEvent(QResizeEvent*)</primary></indexterm>QAbstractSpinBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::closeEvent(QCloseEvent*)</primary></indexterm>QAbstractSpinBox::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractSpinBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::showEvent(QShowEvent*)</primary></indexterm>QAbstractSpinBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::hideEvent(QHideEvent*)</primary></indexterm>QAbstractSpinBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSpinBox::changeEvent(QEvent*)</primary></indexterm>QAbstractSpinBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::focusNextPrevChild(bool)</primary></indexterm>QDateTimeEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::validate(QString&, int&) const</primary></indexterm>QDateTimeEdit::validate(QString&, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::fixup(QString&) const</primary></indexterm>QDateTimeEdit::fixup(QString&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepBy(int)</primary></indexterm>QDateTimeEdit::stepBy(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::clear()</primary></indexterm>QDateTimeEdit::clear()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::stepEnabled() const</primary></indexterm>QDateTimeEdit::stepEnabled() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::dateTimeFromText(QString const&) const</primary></indexterm>QDateTimeEdit::dateTimeFromText(QString const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDateTimeEdit::textFromDateTime(QDateTime const&) const</primary></indexterm>QDateTimeEdit::textFromDateTime(QDateTime const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDateEdit  class
is described by <XREF LINKEND="rtti-646">
</PARA>
<!--classdata-->
<TABLE ID="rtti-646">
<TITLE>typeinfo for QDateEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QDateTimeEdit</primary></indexterm>vtable for QDateTimeEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDateEdit</primary></indexterm>typeinfo name for QDateEdit</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QLabel</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QLabel class
is described by <XREF LINKEND="cls-647-0">
</PARA>
<!--classdata-->
<TABLE id="cls-647-0">
<TITLE>Primary vtable for QLabel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QLabel</primary></indexterm>typeinfo for QLabel</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::metaObject() const</primary></indexterm>QLabel::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::qt_metacast(char const*)</primary></indexterm>QLabel::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QLabel::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::~QLabel()</primary></indexterm>QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::~QLabel()</primary></indexterm>QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::event(QEvent*)</primary></indexterm>QLabel::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::sizeHint() const</primary></indexterm>QLabel::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::minimumSizeHint() const</primary></indexterm>QLabel::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::heightForWidth(int) const</primary></indexterm>QLabel::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::paintEvent(QPaintEvent*)</primary></indexterm>QLabel::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QLabel::changeEvent(QEvent*)</primary></indexterm>QLabel::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLabel::~QLabel()</primary></indexterm>non-virtual thunk to QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QLabel::~QLabel()</primary></indexterm>non-virtual thunk to QLabel::~QLabel()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QLabel  class
is described by <XREF LINKEND="rtti-648">
</PARA>
<!--classdata-->
<TABLE ID="rtti-648">
<TITLE>typeinfo for QLabel</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QFrame</primary></indexterm>vtable for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QLabel</primary></indexterm>typeinfo name for QLabel</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDockWidget</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDockWidget class
is described by <XREF LINKEND="cls-649-0">
</PARA>
<!--classdata-->
<TABLE id="cls-649-0">
<TITLE>Primary vtable for QDockWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDockWidget</primary></indexterm>typeinfo for QDockWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::metaObject() const</primary></indexterm>QDockWidget::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::qt_metacast(char const*)</primary></indexterm>QDockWidget::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDockWidget::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::~QDockWidget()</primary></indexterm>QDockWidget::~QDockWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::~QDockWidget()</primary></indexterm>QDockWidget::~QDockWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::event(QEvent*)</primary></indexterm>QDockWidget::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::paintEvent(QPaintEvent*)</primary></indexterm>QDockWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::closeEvent(QCloseEvent*)</primary></indexterm>QDockWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDockWidget::changeEvent(QEvent*)</primary></indexterm>QDockWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockWidget::~QDockWidget()</primary></indexterm>non-virtual thunk to QDockWidget::~QDockWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDockWidget::~QDockWidget()</primary></indexterm>non-virtual thunk to QDockWidget::~QDockWidget()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDockWidget  class
is described by <XREF LINKEND="rtti-650">
</PARA>
<!--classdata-->
<TABLE ID="rtti-650">
<TITLE>typeinfo for QDockWidget</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDockWidget</primary></indexterm>typeinfo name for QDockWidget</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QGroupBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QGroupBox class
is described by <XREF LINKEND="cls-651-0">
</PARA>
<!--classdata-->
<TABLE id="cls-651-0">
<TITLE>Primary vtable for QGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QGroupBox</primary></indexterm>typeinfo for QGroupBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::metaObject() const</primary></indexterm>QGroupBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::qt_metacast(char const*)</primary></indexterm>QGroupBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QGroupBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::~QGroupBox()</primary></indexterm>QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::~QGroupBox()</primary></indexterm>QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::event(QEvent*)</primary></indexterm>QGroupBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::childEvent(QChildEvent*)</primary></indexterm>QGroupBox::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::minimumSizeHint() const</primary></indexterm>QGroupBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QGroupBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QGroupBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QGroupBox::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::focusInEvent(QFocusEvent*)</primary></indexterm>QGroupBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::paintEvent(QPaintEvent*)</primary></indexterm>QGroupBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::resizeEvent(QResizeEvent*)</primary></indexterm>QGroupBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QGroupBox::changeEvent(QEvent*)</primary></indexterm>QGroupBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGroupBox::~QGroupBox()</primary></indexterm>non-virtual thunk to QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QGroupBox::~QGroupBox()</primary></indexterm>non-virtual thunk to QGroupBox::~QGroupBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QGroupBox  class
is described by <XREF LINKEND="rtti-652">
</PARA>
<!--classdata-->
<TABLE ID="rtti-652">
<TITLE>typeinfo for QGroupBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QGroupBox</primary></indexterm>typeinfo name for QGroupBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMainWindow</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMainWindow class
is described by <XREF LINKEND="cls-653-0">
</PARA>
<!--classdata-->
<TABLE id="cls-653-0">
<TITLE>Primary vtable for QMainWindow</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMainWindow</primary></indexterm>typeinfo for QMainWindow</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::metaObject() const</primary></indexterm>QMainWindow::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::qt_metacast(char const*)</primary></indexterm>QMainWindow::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMainWindow::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::~QMainWindow()</primary></indexterm>QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::~QMainWindow()</primary></indexterm>QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::event(QEvent*)</primary></indexterm>QMainWindow::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEvent(QPaintEvent*)</primary></indexterm>QWidget::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QMainWindow::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMainWindow::createPopupMenu()</primary></indexterm>QMainWindow::createPopupMenu()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMainWindow::~QMainWindow()</primary></indexterm>non-virtual thunk to QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMainWindow::~QMainWindow()</primary></indexterm>non-virtual thunk to QMainWindow::~QMainWindow()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMainWindow  class
is described by <XREF LINKEND="rtti-654">
</PARA>
<!--classdata-->
<TABLE ID="rtti-654">
<TITLE>typeinfo for QMainWindow</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMainWindow</primary></indexterm>typeinfo name for QMainWindow</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QMenuBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QMenuBar class
is described by <XREF LINKEND="cls-655-0">
</PARA>
<!--classdata-->
<TABLE id="cls-655-0">
<TITLE>Primary vtable for QMenuBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QMenuBar</primary></indexterm>typeinfo for QMenuBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::metaObject() const</primary></indexterm>QMenuBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::qt_metacast(char const*)</primary></indexterm>QMenuBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QMenuBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::~QMenuBar()</primary></indexterm>QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::~QMenuBar()</primary></indexterm>QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::event(QEvent*)</primary></indexterm>QMenuBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::eventFilter(QObject*, QEvent*)</primary></indexterm>QMenuBar::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::sizeHint() const</primary></indexterm>QMenuBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::minimumSizeHint() const</primary></indexterm>QMenuBar::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::heightForWidth(int) const</primary></indexterm>QMenuBar::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::mousePressEvent(QMouseEvent*)</primary></indexterm>QMenuBar::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QMenuBar::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QMenuBar::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::keyPressEvent(QKeyEvent*)</primary></indexterm>QMenuBar::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::focusInEvent(QFocusEvent*)</primary></indexterm>QMenuBar::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::focusOutEvent(QFocusEvent*)</primary></indexterm>QMenuBar::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::leaveEvent(QEvent*)</primary></indexterm>QMenuBar::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::paintEvent(QPaintEvent*)</primary></indexterm>QMenuBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::resizeEvent(QResizeEvent*)</primary></indexterm>QMenuBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::actionEvent(QActionEvent*)</primary></indexterm>QMenuBar::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QMenuBar::changeEvent(QEvent*)</primary></indexterm>QMenuBar::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::~QMenuBar()</primary></indexterm>non-virtual thunk to QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QMenuBar::~QMenuBar()</primary></indexterm>non-virtual thunk to QMenuBar::~QMenuBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QMenuBar  class
is described by <XREF LINKEND="rtti-656">
</PARA>
<!--classdata-->
<TABLE ID="rtti-656">
<TITLE>typeinfo for QMenuBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QMenuBar</primary></indexterm>typeinfo name for QMenuBar</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QStatusBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QStatusBar class
is described by <XREF LINKEND="cls-657-0">
</PARA>
<!--classdata-->
<TABLE id="cls-657-0">
<TITLE>Primary vtable for QStatusBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QStatusBar</primary></indexterm>typeinfo for QStatusBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::metaObject() const</primary></indexterm>QStatusBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::qt_metacast(char const*)</primary></indexterm>QStatusBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QStatusBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::~QStatusBar()</primary></indexterm>QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::~QStatusBar()</primary></indexterm>QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::event(QEvent*)</primary></indexterm>QStatusBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::paintEvent(QPaintEvent*)</primary></indexterm>QStatusBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QStatusBar::resizeEvent(QResizeEvent*)</primary></indexterm>QStatusBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStatusBar::~QStatusBar()</primary></indexterm>non-virtual thunk to QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QStatusBar::~QStatusBar()</primary></indexterm>non-virtual thunk to QStatusBar::~QStatusBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QStatusBar  class
is described by <XREF LINKEND="rtti-658">
</PARA>
<!--classdata-->
<TABLE ID="rtti-658">
<TITLE>typeinfo for QStatusBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QStatusBar</primary></indexterm>typeinfo name for QStatusBar</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolBar class
is described by <XREF LINKEND="cls-659-0">
</PARA>
<!--classdata-->
<TABLE id="cls-659-0">
<TITLE>Primary vtable for QToolBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBar</primary></indexterm>typeinfo for QToolBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::metaObject() const</primary></indexterm>QToolBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::qt_metacast(char const*)</primary></indexterm>QToolBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QToolBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::~QToolBar()</primary></indexterm>QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::~QToolBar()</primary></indexterm>QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::event(QEvent*)</primary></indexterm>QToolBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::childEvent(QChildEvent*)</primary></indexterm>QToolBar::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::paintEvent(QPaintEvent*)</primary></indexterm>QToolBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::resizeEvent(QResizeEvent*)</primary></indexterm>QToolBar::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::actionEvent(QActionEvent*)</primary></indexterm>QToolBar::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBar::changeEvent(QEvent*)</primary></indexterm>QToolBar::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBar::~QToolBar()</primary></indexterm>non-virtual thunk to QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBar::~QToolBar()</primary></indexterm>non-virtual thunk to QToolBar::~QToolBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QToolBar  class
is described by <XREF LINKEND="rtti-660">
</PARA>
<!--classdata-->
<TABLE ID="rtti-660">
<TITLE>typeinfo for QToolBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolBar</primary></indexterm>typeinfo name for QToolBar</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextEdit</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextEdit class
is described by <XREF LINKEND="cls-661-0">
</PARA>
<!--classdata-->
<TABLE id="cls-661-0">
<TITLE>Primary vtable for QTextEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextEdit</primary></indexterm>typeinfo for QTextEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::metaObject() const</primary></indexterm>QTextEdit::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::qt_metacast(char const*)</primary></indexterm>QTextEdit::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextEdit::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::~QTextEdit()</primary></indexterm>QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::~QTextEdit()</primary></indexterm>QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::event(QEvent*)</primary></indexterm>QTextEdit::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::timerEvent(QTimerEvent*)</primary></indexterm>QTextEdit::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::mousePressEvent(QMouseEvent*)</primary></indexterm>QTextEdit::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTextEdit::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTextEdit::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QTextEdit::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::wheelEvent(QWheelEvent*)</primary></indexterm>QTextEdit::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::keyPressEvent(QKeyEvent*)</primary></indexterm>QTextEdit::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QTextEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusOutEvent(QFocusEvent*)</primary></indexterm>QTextEdit::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::paintEvent(QPaintEvent*)</primary></indexterm>QTextEdit::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QTextEdit::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QTextEdit::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QTextEdit::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QTextEdit::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dropEvent(QDropEvent*)</primary></indexterm>QTextEdit::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::showEvent(QShowEvent*)</primary></indexterm>QTextEdit::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::changeEvent(QEvent*)</primary></indexterm>QTextEdit::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QTextEdit::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QTextEdit::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusNextPrevChild(bool)</primary></indexterm>QTextEdit::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::viewportEvent(QEvent*)</primary></indexterm>QAbstractScrollArea::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollContentsBy(int, int)</primary></indexterm>QTextEdit::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::loadResource(int, QUrl const&)</primary></indexterm>QTextEdit::loadResource(int, QUrl const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createMimeDataFromSelection() const</primary></indexterm>QTextEdit::createMimeDataFromSelection() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::canInsertFromMimeData(QMimeData const*) const</primary></indexterm>QTextEdit::canInsertFromMimeData(QMimeData const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insertFromMimeData(QMimeData const*)</primary></indexterm>QTextEdit::insertFromMimeData(QMimeData const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextEdit::~QTextEdit()</primary></indexterm>non-virtual thunk to QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextEdit::~QTextEdit()</primary></indexterm>non-virtual thunk to QTextEdit::~QTextEdit()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextEdit  class
is described by <XREF LINKEND="rtti-662">
</PARA>
<!--classdata-->
<TABLE ID="rtti-662">
<TITLE>typeinfo for QTextEdit</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractScrollArea</primary></indexterm>vtable for QAbstractScrollArea</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextEdit</primary></indexterm>typeinfo name for QTextEdit</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QProgressBar</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QProgressBar class
is described by <XREF LINKEND="cls-663-0">
</PARA>
<!--classdata-->
<TABLE id="cls-663-0">
<TITLE>Primary vtable for QProgressBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QProgressBar</primary></indexterm>typeinfo for QProgressBar</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::metaObject() const</primary></indexterm>QProgressBar::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::qt_metacast(char const*)</primary></indexterm>QProgressBar::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QProgressBar::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::~QProgressBar()</primary></indexterm>QProgressBar::~QProgressBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::~QProgressBar()</primary></indexterm>QProgressBar::~QProgressBar()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::event(QEvent*)</primary></indexterm>QProgressBar::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::sizeHint() const</primary></indexterm>QProgressBar::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::minimumSizeHint() const</primary></indexterm>QProgressBar::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::paintEvent(QPaintEvent*)</primary></indexterm>QProgressBar::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QProgressBar::text() const</primary></indexterm>QProgressBar::text() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QProgressBar  class
is described by <XREF LINKEND="rtti-664">
</PARA>
<!--classdata-->
<TABLE ID="rtti-664">
<TITLE>typeinfo for QProgressBar</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QProgressBar</primary></indexterm>typeinfo name for QProgressBar</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSizeGrip</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSizeGrip class
is described by <XREF LINKEND="cls-665-0">
</PARA>
<!--classdata-->
<TABLE id="cls-665-0">
<TITLE>Primary vtable for QSizeGrip</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSizeGrip</primary></indexterm>typeinfo for QSizeGrip</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::metaObject() const</primary></indexterm>QSizeGrip::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::qt_metacast(char const*)</primary></indexterm>QSizeGrip::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSizeGrip::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::~QSizeGrip()</primary></indexterm>QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::~QSizeGrip()</primary></indexterm>QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::event(QEvent*)</primary></indexterm>QSizeGrip::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::eventFilter(QObject*, QEvent*)</primary></indexterm>QSizeGrip::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::setVisible(bool)</primary></indexterm>QSizeGrip::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::sizeHint() const</primary></indexterm>QSizeGrip::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::mousePressEvent(QMouseEvent*)</primary></indexterm>QSizeGrip::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QSizeGrip::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSizeGrip::paintEvent(QPaintEvent*)</primary></indexterm>QSizeGrip::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSizeGrip::~QSizeGrip()</primary></indexterm>non-virtual thunk to QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSizeGrip::~QSizeGrip()</primary></indexterm>non-virtual thunk to QSizeGrip::~QSizeGrip()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSizeGrip  class
is described by <XREF LINKEND="rtti-666">
</PARA>
<!--classdata-->
<TABLE ID="rtti-666">
<TITLE>typeinfo for QSizeGrip</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSizeGrip</primary></indexterm>typeinfo name for QSizeGrip</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QTextBrowser</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QTextBrowser class
is described by <XREF LINKEND="cls-667-0">
</PARA>
<!--classdata-->
<TABLE id="cls-667-0">
<TITLE>Primary vtable for QTextBrowser</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QTextBrowser</primary></indexterm>typeinfo for QTextBrowser</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::metaObject() const</primary></indexterm>QTextBrowser::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::qt_metacast(char const*)</primary></indexterm>QTextBrowser::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QTextBrowser::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::~QTextBrowser()</primary></indexterm>QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::~QTextBrowser()</primary></indexterm>QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::event(QEvent*)</primary></indexterm>QTextBrowser::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::timerEvent(QTimerEvent*)</primary></indexterm>QTextEdit::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::sizeHint() const</primary></indexterm>QAbstractScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::mousePressEvent(QMouseEvent*)</primary></indexterm>QTextBrowser::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QTextBrowser::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QTextEdit::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QTextBrowser::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::wheelEvent(QWheelEvent*)</primary></indexterm>QTextEdit::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::keyPressEvent(QKeyEvent*)</primary></indexterm>QTextBrowser::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::focusInEvent(QFocusEvent*)</primary></indexterm>QTextEdit::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::focusOutEvent(QFocusEvent*)</primary></indexterm>QTextBrowser::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::paintEvent(QPaintEvent*)</primary></indexterm>QTextBrowser::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::resizeEvent(QResizeEvent*)</primary></indexterm>QTextEdit::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QTextEdit::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QTextEdit::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QTextEdit::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QTextEdit::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::dropEvent(QDropEvent*)</primary></indexterm>QTextEdit::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::showEvent(QShowEvent*)</primary></indexterm>QTextEdit::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::changeEvent(QEvent*)</primary></indexterm>QTextEdit::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QTextEdit::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QTextEdit::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::focusNextPrevChild(bool)</primary></indexterm>QTextBrowser::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::viewportEvent(QEvent*)</primary></indexterm>QAbstractScrollArea::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::scrollContentsBy(int, int)</primary></indexterm>QTextEdit::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::loadResource(int, QUrl const&)</primary></indexterm>QTextBrowser::loadResource(int, QUrl const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::createMimeDataFromSelection() const</primary></indexterm>QTextEdit::createMimeDataFromSelection() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::canInsertFromMimeData(QMimeData const*) const</primary></indexterm>QTextEdit::canInsertFromMimeData(QMimeData const*) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextEdit::insertFromMimeData(QMimeData const*)</primary></indexterm>QTextEdit::insertFromMimeData(QMimeData const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::setSource(QUrl const&)</primary></indexterm>QTextBrowser::setSource(QUrl const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::backward()</primary></indexterm>QTextBrowser::backward()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;62&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::forward()</primary></indexterm>QTextBrowser::forward()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;63&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::home()</primary></indexterm>QTextBrowser::home()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;64&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QTextBrowser::reload()</primary></indexterm>QTextBrowser::reload()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;65&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextBrowser::~QTextBrowser()</primary></indexterm>non-virtual thunk to QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;66&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QTextBrowser::~QTextBrowser()</primary></indexterm>non-virtual thunk to QTextBrowser::~QTextBrowser()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;67&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;68&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;69&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QTextBrowser  class
is described by <XREF LINKEND="rtti-668">
</PARA>
<!--classdata-->
<TABLE ID="rtti-668">
<TITLE>typeinfo for QTextBrowser</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QTextEdit</primary></indexterm>vtable for QTextEdit</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QTextBrowser</primary></indexterm>typeinfo name for QTextBrowser</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QScrollArea</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QScrollArea class
is described by <XREF LINKEND="cls-669-0">
</PARA>
<!--classdata-->
<TABLE id="cls-669-0">
<TITLE>Primary vtable for QScrollArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QScrollArea</primary></indexterm>typeinfo for QScrollArea</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::metaObject() const</primary></indexterm>QScrollArea::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::qt_metacast(char const*)</primary></indexterm>QScrollArea::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QScrollArea::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::~QScrollArea()</primary></indexterm>QScrollArea::~QScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::~QScrollArea()</primary></indexterm>QScrollArea::~QScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::event(QEvent*)</primary></indexterm>QScrollArea::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::eventFilter(QObject*, QEvent*)</primary></indexterm>QScrollArea::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::sizeHint() const</primary></indexterm>QScrollArea::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::minimumSizeHint() const</primary></indexterm>QAbstractScrollArea::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QAbstractScrollArea::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractScrollArea::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractScrollArea::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::paintEvent(QPaintEvent*)</primary></indexterm>QAbstractScrollArea::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::resizeEvent(QResizeEvent*)</primary></indexterm>QScrollArea::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QAbstractScrollArea::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QAbstractScrollArea::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QAbstractScrollArea::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QAbstractScrollArea::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::dropEvent(QDropEvent*)</primary></indexterm>QAbstractScrollArea::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::changeEvent(QEvent*)</primary></indexterm>QFrame::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::focusNextPrevChild(bool)</primary></indexterm>QScrollArea::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractScrollArea::viewportEvent(QEvent*)</primary></indexterm>QAbstractScrollArea::viewportEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QScrollArea::scrollContentsBy(int, int)</primary></indexterm>QScrollArea::scrollContentsBy(int, int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollArea::~QScrollArea()</primary></indexterm>non-virtual thunk to QScrollArea::~QScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QScrollArea::~QScrollArea()</primary></indexterm>non-virtual thunk to QScrollArea::~QScrollArea()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QScrollArea  class
is described by <XREF LINKEND="rtti-670">
</PARA>
<!--classdata-->
<TABLE ID="rtti-670">
<TITLE>typeinfo for QScrollArea</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractScrollArea</primary></indexterm>vtable for QAbstractScrollArea</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QScrollArea</primary></indexterm>typeinfo name for QScrollArea</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QComboBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QComboBox class
is described by <XREF LINKEND="cls-671-0">
</PARA>
<!--classdata-->
<TABLE id="cls-671-0">
<TITLE>Primary vtable for QComboBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QComboBox</primary></indexterm>typeinfo for QComboBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::metaObject() const</primary></indexterm>QComboBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::qt_metacast(char const*)</primary></indexterm>QComboBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QComboBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::~QComboBox()</primary></indexterm>QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::~QComboBox()</primary></indexterm>QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::event(QEvent*)</primary></indexterm>QComboBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::sizeHint() const</primary></indexterm>QComboBox::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::minimumSizeHint() const</primary></indexterm>QComboBox::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::mousePressEvent(QMouseEvent*)</primary></indexterm>QComboBox::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QComboBox::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::wheelEvent(QWheelEvent*)</primary></indexterm>QComboBox::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::keyPressEvent(QKeyEvent*)</primary></indexterm>QComboBox::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QComboBox::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::focusInEvent(QFocusEvent*)</primary></indexterm>QComboBox::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::focusOutEvent(QFocusEvent*)</primary></indexterm>QComboBox::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::paintEvent(QPaintEvent*)</primary></indexterm>QComboBox::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::resizeEvent(QResizeEvent*)</primary></indexterm>QComboBox::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QComboBox::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::showEvent(QShowEvent*)</primary></indexterm>QComboBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::hideEvent(QHideEvent*)</primary></indexterm>QComboBox::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::changeEvent(QEvent*)</primary></indexterm>QComboBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QComboBox::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QComboBox::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::showPopup()</primary></indexterm>QComboBox::showPopup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QComboBox::hidePopup()</primary></indexterm>QComboBox::hidePopup()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QComboBox::~QComboBox()</primary></indexterm>non-virtual thunk to QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QComboBox::~QComboBox()</primary></indexterm>non-virtual thunk to QComboBox::~QComboBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QComboBox  class
is described by <XREF LINKEND="rtti-672">
</PARA>
<!--classdata-->
<TABLE ID="rtti-672">
<TITLE>typeinfo for QComboBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QComboBox</primary></indexterm>typeinfo name for QComboBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QRadioButton</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QRadioButton class
is described by <XREF LINKEND="cls-673-0">
</PARA>
<!--classdata-->
<TABLE id="cls-673-0">
<TITLE>Primary vtable for QRadioButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QRadioButton</primary></indexterm>typeinfo for QRadioButton</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::metaObject() const</primary></indexterm>QRadioButton::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::qt_metacast(char const*)</primary></indexterm>QRadioButton::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QRadioButton::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::~QRadioButton()</primary></indexterm>QRadioButton::~QRadioButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::~QRadioButton()</primary></indexterm>QRadioButton::~QRadioButton()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::event(QEvent*)</primary></indexterm>QRadioButton::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractButton::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::sizeHint() const</primary></indexterm>QRadioButton::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mousePressEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QAbstractButton::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QRadioButton::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QAbstractButton::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusInEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::focusOutEvent(QFocusEvent*)</primary></indexterm>QAbstractButton::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::paintEvent(QPaintEvent*)</primary></indexterm>QRadioButton::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::changeEvent(QEvent*)</primary></indexterm>QAbstractButton::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QRadioButton::hitButton(QPoint const&) const</primary></indexterm>QRadioButton::hitButton(QPoint const&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::checkStateSet()</primary></indexterm>QAbstractButton::checkStateSet()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractButton::nextCheckState()</primary></indexterm>QAbstractButton::nextCheckState()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;61&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QRadioButton  class
is described by <XREF LINKEND="rtti-674">
</PARA>
<!--classdata-->
<TABLE ID="rtti-674">
<TITLE>typeinfo for QRadioButton</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractButton</primary></indexterm>vtable for QAbstractButton</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QRadioButton</primary></indexterm>typeinfo name for QRadioButton</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QFocusFrame</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QFocusFrame class
is described by <XREF LINKEND="cls-675-0">
</PARA>
<!--classdata-->
<TABLE id="cls-675-0">
<TITLE>Primary vtable for QFocusFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QFocusFrame</primary></indexterm>typeinfo for QFocusFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::metaObject() const</primary></indexterm>QFocusFrame::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::qt_metacast(char const*)</primary></indexterm>QFocusFrame::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QFocusFrame::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::~QFocusFrame()</primary></indexterm>QFocusFrame::~QFocusFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::~QFocusFrame()</primary></indexterm>QFocusFrame::~QFocusFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::event(QEvent*)</primary></indexterm>QFocusFrame::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::eventFilter(QObject*, QEvent*)</primary></indexterm>QFocusFrame::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::sizeHint() const</primary></indexterm>QWidget::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFocusFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFocusFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFocusFrame::~QFocusFrame()</primary></indexterm>non-virtual thunk to QFocusFrame::~QFocusFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QFocusFrame::~QFocusFrame()</primary></indexterm>non-virtual thunk to QFocusFrame::~QFocusFrame()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QFocusFrame  class
is described by <XREF LINKEND="rtti-676">
</PARA>
<!--classdata-->
<TABLE ID="rtti-676">
<TITLE>typeinfo for QFocusFrame</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QFocusFrame</primary></indexterm>typeinfo name for QFocusFrame</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QToolBox</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QToolBox class
is described by <XREF LINKEND="cls-677-0">
</PARA>
<!--classdata-->
<TABLE id="cls-677-0">
<TITLE>Primary vtable for QToolBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QToolBox</primary></indexterm>typeinfo for QToolBox</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::metaObject() const</primary></indexterm>QToolBox::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::qt_metacast(char const*)</primary></indexterm>QToolBox::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QToolBox::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::~QToolBox()</primary></indexterm>QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::~QToolBox()</primary></indexterm>QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::event(QEvent*)</primary></indexterm>QToolBox::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::sizeHint() const</primary></indexterm>QFrame::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::showEvent(QShowEvent*)</primary></indexterm>QToolBox::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::changeEvent(QEvent*)</primary></indexterm>QToolBox::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::itemInserted(int)</primary></indexterm>QToolBox::itemInserted(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QToolBox::itemRemoved(int)</primary></indexterm>QToolBox::itemRemoved(int)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBox::~QToolBox()</primary></indexterm>non-virtual thunk to QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QToolBox::~QToolBox()</primary></indexterm>non-virtual thunk to QToolBox::~QToolBox()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;60&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QToolBox  class
is described by <XREF LINKEND="rtti-678">
</PARA>
<!--classdata-->
<TABLE ID="rtti-678">
<TITLE>typeinfo for QToolBox</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QFrame</primary></indexterm>vtable for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QToolBox</primary></indexterm>typeinfo name for QToolBox</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSplitter</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSplitter class
is described by <XREF LINKEND="cls-679-0">
</PARA>
<!--classdata-->
<TABLE id="cls-679-0">
<TITLE>Primary vtable for QSplitter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplitter</primary></indexterm>typeinfo for QSplitter</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::metaObject() const</primary></indexterm>QSplitter::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::qt_metacast(char const*)</primary></indexterm>QSplitter::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSplitter::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::~QSplitter()</primary></indexterm>QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::~QSplitter()</primary></indexterm>QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::event(QEvent*)</primary></indexterm>QSplitter::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::childEvent(QChildEvent*)</primary></indexterm>QSplitter::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::sizeHint() const</primary></indexterm>QSplitter::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::minimumSizeHint() const</primary></indexterm>QSplitter::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mousePressEvent(QMouseEvent*)</primary></indexterm>QWidget::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QFrame::paintEvent(QPaintEvent*)</primary></indexterm>QFrame::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::resizeEvent(QResizeEvent*)</primary></indexterm>QSplitter::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::changeEvent(QEvent*)</primary></indexterm>QSplitter::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitter::createHandle()</primary></indexterm>QSplitter::createHandle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplitter::~QSplitter()</primary></indexterm>non-virtual thunk to QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QSplitter::~QSplitter()</primary></indexterm>non-virtual thunk to QSplitter::~QSplitter()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSplitter  class
is described by <XREF LINKEND="rtti-680">
</PARA>
<!--classdata-->
<TABLE ID="rtti-680">
<TITLE>typeinfo for QSplitter</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QFrame</primary></indexterm>vtable for QFrame</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSplitter</primary></indexterm>typeinfo name for QSplitter</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QSplitterHandle</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QSplitterHandle class
is described by <XREF LINKEND="cls-681-0">
</PARA>
<!--classdata-->
<TABLE id="cls-681-0">
<TITLE>Primary vtable for QSplitterHandle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QSplitterHandle</primary></indexterm>typeinfo for QSplitterHandle</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::metaObject() const</primary></indexterm>QSplitterHandle::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::qt_metacast(char const*)</primary></indexterm>QSplitterHandle::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QSplitterHandle::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::~QSplitterHandle()</primary></indexterm>QSplitterHandle::~QSplitterHandle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::~QSplitterHandle()</primary></indexterm>QSplitterHandle::~QSplitterHandle()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::event(QEvent*)</primary></indexterm>QSplitterHandle::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::timerEvent(QTimerEvent*)</primary></indexterm>QObject::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::sizeHint() const</primary></indexterm>QSplitterHandle::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::minimumSizeHint() const</primary></indexterm>QWidget::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::mousePressEvent(QMouseEvent*)</primary></indexterm>QSplitterHandle::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QSplitterHandle::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QSplitterHandle::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::wheelEvent(QWheelEvent*)</primary></indexterm>QWidget::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyPressEvent(QKeyEvent*)</primary></indexterm>QWidget::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QSplitterHandle::paintEvent(QPaintEvent*)</primary></indexterm>QSplitterHandle::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::resizeEvent(QResizeEvent*)</primary></indexterm>QWidget::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::changeEvent(QEvent*)</primary></indexterm>QWidget::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QSplitterHandle  class
is described by <XREF LINKEND="rtti-682">
</PARA>
<!--classdata-->
<TABLE ID="rtti-682">
<TITLE>typeinfo for QSplitterHandle</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QWidget</primary></indexterm>vtable for QWidget</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QSplitterHandle</primary></indexterm>typeinfo name for QSplitterHandle</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Class data for QDial</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the QDial class
is described by <XREF LINKEND="cls-683-0">
</PARA>
<!--classdata-->
<TABLE id="cls-683-0">
<TITLE>Primary vtable for QDial</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>Virtual Base Offset</ENTRY>
<ENTRY>0</ENTRY>
</ROW>
<ROW>
<ENTRY>RTTI</ENTRY>
<ENTRY><indexterm><primary>typeinfo for QDial</primary></indexterm>typeinfo for QDial</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::metaObject() const</primary></indexterm>QDial::metaObject() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::qt_metacast(char const*)</primary></indexterm>QDial::qt_metacast(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::qt_metacall(QMetaObject::Call, int, void**)</primary></indexterm>QDial::qt_metacall(QMetaObject::Call, int, void**)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::~QDial()</primary></indexterm>QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::~QDial()</primary></indexterm>QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::event(QEvent*)</primary></indexterm>QDial::event(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::eventFilter(QObject*, QEvent*)</primary></indexterm>QObject::eventFilter(QObject*, QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::timerEvent(QTimerEvent*)</primary></indexterm>QAbstractSlider::timerEvent(QTimerEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::childEvent(QChildEvent*)</primary></indexterm>QObject::childEvent(QChildEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::customEvent(QEvent*)</primary></indexterm>QObject::customEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::connectNotify(char const*)</primary></indexterm>QObject::connectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QObject::disconnectNotify(char const*)</primary></indexterm>QObject::disconnectNotify(char const*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::devType() const</primary></indexterm>QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::setVisible(bool)</primary></indexterm>QWidget::setVisible(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;14&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::sizeHint() const</primary></indexterm>QDial::sizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;15&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::minimumSizeHint() const</primary></indexterm>QDial::minimumSizeHint() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;16&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::heightForWidth(int) const</primary></indexterm>QWidget::heightForWidth(int) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;17&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paintEngine() const</primary></indexterm>QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;18&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::mousePressEvent(QMouseEvent*)</primary></indexterm>QDial::mousePressEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;19&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::mouseReleaseEvent(QMouseEvent*)</primary></indexterm>QDial::mouseReleaseEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;20&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::mouseDoubleClickEvent(QMouseEvent*)</primary></indexterm>QWidget::mouseDoubleClickEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;21&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::mouseMoveEvent(QMouseEvent*)</primary></indexterm>QDial::mouseMoveEvent(QMouseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;22&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::wheelEvent(QWheelEvent*)</primary></indexterm>QAbstractSlider::wheelEvent(QWheelEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;23&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::keyPressEvent(QKeyEvent*)</primary></indexterm>QAbstractSlider::keyPressEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;24&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::keyReleaseEvent(QKeyEvent*)</primary></indexterm>QWidget::keyReleaseEvent(QKeyEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;25&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusInEvent(QFocusEvent*)</primary></indexterm>QWidget::focusInEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;26&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusOutEvent(QFocusEvent*)</primary></indexterm>QWidget::focusOutEvent(QFocusEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;27&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enterEvent(QEvent*)</primary></indexterm>QWidget::enterEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;28&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::leaveEvent(QEvent*)</primary></indexterm>QWidget::leaveEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;29&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::paintEvent(QPaintEvent*)</primary></indexterm>QDial::paintEvent(QPaintEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;30&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::moveEvent(QMoveEvent*)</primary></indexterm>QWidget::moveEvent(QMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;31&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::resizeEvent(QResizeEvent*)</primary></indexterm>QDial::resizeEvent(QResizeEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;32&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::closeEvent(QCloseEvent*)</primary></indexterm>QWidget::closeEvent(QCloseEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;33&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::contextMenuEvent(QContextMenuEvent*)</primary></indexterm>QWidget::contextMenuEvent(QContextMenuEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;34&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::tabletEvent(QTabletEvent*)</primary></indexterm>QWidget::tabletEvent(QTabletEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;35&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::actionEvent(QActionEvent*)</primary></indexterm>QWidget::actionEvent(QActionEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;36&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragEnterEvent(QDragEnterEvent*)</primary></indexterm>QWidget::dragEnterEvent(QDragEnterEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;37&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragMoveEvent(QDragMoveEvent*)</primary></indexterm>QWidget::dragMoveEvent(QDragMoveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;38&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dragLeaveEvent(QDragLeaveEvent*)</primary></indexterm>QWidget::dragLeaveEvent(QDragLeaveEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;39&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::dropEvent(QDropEvent*)</primary></indexterm>QWidget::dropEvent(QDropEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;40&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::showEvent(QShowEvent*)</primary></indexterm>QWidget::showEvent(QShowEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;41&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::hideEvent(QHideEvent*)</primary></indexterm>QWidget::hideEvent(QHideEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;42&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::x11Event(_XEvent*)</primary></indexterm>QWidget::x11Event(_XEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;43&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QAbstractSlider::changeEvent(QEvent*)</primary></indexterm>QAbstractSlider::changeEvent(QEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;44&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;45&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodEvent(QInputMethodEvent*)</primary></indexterm>QWidget::inputMethodEvent(QInputMethodEvent*)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;46&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</primary></indexterm>QWidget::inputMethodQuery(Qt::InputMethodQuery) const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;47&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::focusNextPrevChild(bool)</primary></indexterm>QWidget::focusNextPrevChild(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;48&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::styleChange(QStyle&)</primary></indexterm>QWidget::styleChange(QStyle&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;49&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::enabledChange(bool)</primary></indexterm>QWidget::enabledChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;50&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::paletteChange(QPalette const&)</primary></indexterm>QWidget::paletteChange(QPalette const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;51&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::fontChange(QFont const&)</primary></indexterm>QWidget::fontChange(QFont const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;52&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::windowActivationChange(bool)</primary></indexterm>QWidget::windowActivationChange(bool)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;53&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QWidget::languageChange()</primary></indexterm>QWidget::languageChange()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;54&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>QDial::sliderChange(QAbstractSlider::SliderChange)</primary></indexterm>QDial::sliderChange(QAbstractSlider::SliderChange)</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;55&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDial::~QDial()</primary></indexterm>non-virtual thunk to QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;56&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QDial::~QDial()</primary></indexterm>non-virtual thunk to QDial::~QDial()</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;57&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::devType() const</primary></indexterm>non-virtual thunk to QWidget::devType() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;58&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::paintEngine() const</primary></indexterm>non-virtual thunk to QWidget::paintEngine() const</ENTRY>
</ROW>
<ROW>
<ENTRY>vfunc&lsqb;59&rsqb;:</ENTRY>
<ENTRY><indexterm><primary>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</primary></indexterm>non-virtual thunk to QWidget::metric(QPaintDevice::PaintDeviceMetric) const</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The Run Time Type Information for the QDial  class
is described by <XREF LINKEND="rtti-684">
</PARA>
<!--classdata-->
<TABLE ID="rtti-684">
<TITLE>typeinfo for QDial</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Base Vtable</ENTRY>
<ENTRY><indexterm><primary>vtable for QAbstractSlider</primary></indexterm>vtable for QAbstractSlider</ENTRY>
</ROW>
<ROW>
<ENTRY>Name</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for QDial</primary></indexterm>typeinfo name for QDial</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>


<SECT3>
<TITLE>Interfaces for QtGui</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for QtGui specified in <XREF linkend="tbl-libQtGui-qtg-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libQtGui-qtg-ints">
<TITLE>libQtGui - QtGui Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_Z10qDrawArrowP8QPainterN2Qt9ArrowTypeENS1_8GUIStyleEbiiiiRK8QPaletteb</primary></indexterm>_Z10qDrawArrowP8QPainterN2Qt9ArrowTypeENS1_8GUIStyleEbiiiiRK8QPaletteb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Z13qDrawWinPanelP8QPainterRK5QRectRK8QPalettebPK6QBrush</primary></indexterm>_Z13qDrawWinPanelP8QPainterRK5QRectRK8QPalettebPK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Z13qDrawWinPanelP8QPainteriiiiRK8QPalettebPK6QBrush</primary></indexterm>_Z13qDrawWinPanelP8QPainteriiiiRK8QPalettebPK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Z14qDrawPlainRectP8QPainterRK5QRectRK6QColoriPK6QBrush</primary></indexterm>_Z14qDrawPlainRectP8QPainterRK5QRectRK6QColoriPK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Z14qDrawPlainRectP8QPainteriiiiRK6QColoriPK6QBrush</primary></indexterm>_Z14qDrawPlainRectP8QPainteriiiiRK6QColoriPK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Z14qDrawShadeLineP8QPainterRK6QPointS3_RK8QPalettebii</primary></indexterm>_Z14qDrawShadeLineP8QPainterRK6QPointS3_RK8QPalettebii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Z14qDrawShadeLineP8QPainteriiiiRK8QPalettebii</primary></indexterm>_Z14qDrawShadeLineP8QPainteriiiiRK8QPalettebii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Z14qDrawShadeRectP8QPainterRK5QRectRK8QPalettebiiPK6QBrush</primary></indexterm>_Z14qDrawShadeRectP8QPainterRK5QRectRK8QPalettebiiPK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Z14qDrawShadeRectP8QPainteriiiiRK8QPalettebiiPK6QBrush</primary></indexterm>_Z14qDrawShadeRectP8QPainteriiiiRK8QPalettebiiPK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Z14qDrawWinButtonP8QPainterRK5QRectRK8QPalettebPK6QBrush</primary></indexterm>_Z14qDrawWinButtonP8QPainterRK5QRectRK8QPalettebPK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Z14qDrawWinButtonP8QPainteriiiiRK8QPalettebPK6QBrush</primary></indexterm>_Z14qDrawWinButtonP8QPainteriiiiRK8QPalettebPK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Z15qDrawShadePanelP8QPainterRK5QRectRK8QPalettebiPK6QBrush</primary></indexterm>_Z15qDrawShadePanelP8QPainterRK5QRectRK8QPalettebiPK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Z15qDrawShadePanelP8QPainteriiiiRK8QPalettebiPK6QBrush</primary></indexterm>_Z15qDrawShadePanelP8QPainteriiiiRK8QPalettebiPK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Z6bitBltP12QPaintDeviceRK6QPointPKS_RK5QRectb</primary></indexterm>_Z6bitBltP12QPaintDeviceRK6QPointPKS_RK5QRectb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Z6bitBltP12QPaintDeviceiiPK6QImageiiiii</primary></indexterm>_Z6bitBltP12QPaintDeviceiiPK6QImageiiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Z6bitBltP12QPaintDeviceiiPKS_iiiib</primary></indexterm>_Z6bitBltP12QPaintDeviceiiPKS_iiiib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Z6bitBltP6QImageiiPKS_iiii6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_Z6bitBltP6QImageiiPKS_iiii6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Z7copyBltP7QPixmapiiPKS_iiii</primary></indexterm>_Z7copyBltP7QPixmapiiPKS_iiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Z9qDrawItemP8QPainterN2Qt8GUIStyleEiiiiiRK8QPalettebPK7QPixmapRK7QStringiPK6QColor</primary></indexterm>_Z9qDrawItemP8QPainterN2Qt8GUIStyleEiiiiiRK8QPalettebPK7QPixmapRK7QStringiPK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Z9qItemRectP8QPainterN2Qt8GUIStyleEiiiiibPK7QPixmapRK7QStringi</primary></indexterm>_Z9qItemRectP8QPainterN2Qt8GUIStyleEiiiiibPK7QPixmapRK7QStringi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayout10addSpacingEi</primary></indexterm>_ZN10QBoxLayout10addSpacingEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayout10addStretchEi</primary></indexterm>_ZN10QBoxLayout10addStretchEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayout10insertItemEiP11QLayoutItem</primary></indexterm>_ZN10QBoxLayout10insertItemEiP11QLayoutItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayout10invalidateEv</primary></indexterm>_ZN10QBoxLayout10invalidateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayout11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QBoxLayout11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayout11qt_metacastEPKc</primary></indexterm>_ZN10QBoxLayout11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayout11setGeometryERK5QRect</primary></indexterm>_ZN10QBoxLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayout12insertLayoutEiP7QLayouti</primary></indexterm>_ZN10QBoxLayout12insertLayoutEiP7QLayouti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayout12insertWidgetEiP7QWidgeti6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN10QBoxLayout12insertWidgetEiP7QWidgeti6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayout12setDirectionENS_9DirectionE</primary></indexterm>_ZN10QBoxLayout12setDirectionENS_9DirectionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayout13insertSpacingEii</primary></indexterm>_ZN10QBoxLayout13insertSpacingEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayout13insertStretchEii</primary></indexterm>_ZN10QBoxLayout13insertStretchEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayout16setStretchFactorEP7QLayouti</primary></indexterm>_ZN10QBoxLayout16setStretchFactorEP7QLayouti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayout16setStretchFactorEP7QWidgeti</primary></indexterm>_ZN10QBoxLayout16setStretchFactorEP7QWidgeti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayout6takeAtEi</primary></indexterm>_ZN10QBoxLayout6takeAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayout7addItemEP11QLayoutItem</primary></indexterm>_ZN10QBoxLayout7addItemEP11QLayoutItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayout8addStrutEi</primary></indexterm>_ZN10QBoxLayout8addStrutEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayout9addLayoutEP7QLayouti</primary></indexterm>_ZN10QBoxLayout9addLayoutEP7QLayouti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayout9addWidgetEP7QWidgeti6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN10QBoxLayout9addWidgetEP7QWidgeti6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayoutC1ENS_9DirectionEP7QWidget</primary></indexterm>_ZN10QBoxLayoutC1ENS_9DirectionEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayoutC1ENS_9DirectionEiPKc</primary></indexterm>_ZN10QBoxLayoutC1ENS_9DirectionEiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayoutC1EP7QLayoutNS_9DirectionEiPKc</primary></indexterm>_ZN10QBoxLayoutC1EP7QLayoutNS_9DirectionEiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayoutC1EP7QWidgetNS_9DirectionEiiPKc</primary></indexterm>_ZN10QBoxLayoutC1EP7QWidgetNS_9DirectionEiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayoutC2ENS_9DirectionEP7QWidget</primary></indexterm>_ZN10QBoxLayoutC2ENS_9DirectionEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayoutC2ENS_9DirectionEiPKc</primary></indexterm>_ZN10QBoxLayoutC2ENS_9DirectionEiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayoutC2EP7QLayoutNS_9DirectionEiPKc</primary></indexterm>_ZN10QBoxLayoutC2EP7QLayoutNS_9DirectionEiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayoutC2EP7QWidgetNS_9DirectionEiiPKc</primary></indexterm>_ZN10QBoxLayoutC2EP7QWidgetNS_9DirectionEiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayoutD0Ev</primary></indexterm>_ZN10QBoxLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayoutD1Ev</primary></indexterm>_ZN10QBoxLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QBoxLayoutD2Ev</primary></indexterm>_ZN10QBoxLayoutD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QClipboard11dataChangedEv</primary></indexterm>_ZN10QClipboard11dataChangedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QClipboard11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QClipboard11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QClipboard11qt_metacastEPKc</primary></indexterm>_ZN10QClipboard11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QClipboard11setMimeDataEP9QMimeDataNS_4ModeE</primary></indexterm>_ZN10QClipboard11setMimeDataEP9QMimeDataNS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QClipboard13connectNotifyEPKc</primary></indexterm>_ZN10QClipboard13connectNotifyEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QClipboard16selectionChangedEv</primary></indexterm>_ZN10QClipboard16selectionChangedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QClipboard5clearENS_4ModeE</primary></indexterm>_ZN10QClipboard5clearENS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QClipboard5eventEP6QEvent</primary></indexterm>_ZN10QClipboard5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QClipboard7setDataEP11QMimeSourceNS_4ModeE</primary></indexterm>_ZN10QClipboard7setDataEP11QMimeSourceNS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QClipboard7setTextERK7QStringNS_4ModeE</primary></indexterm>_ZN10QClipboard7setTextERK7QStringNS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QClipboard8setImageERK6QImageNS_4ModeE</primary></indexterm>_ZN10QClipboard8setImageERK6QImageNS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QClipboard9setPixmapERK7QPixmapNS_4ModeE</primary></indexterm>_ZN10QClipboard9setPixmapERK7QPixmapNS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QDropEvent13setDropActionEN2Qt10DropActionE</primary></indexterm>_ZN10QDropEvent13setDropActionEN2Qt10DropActionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QDropEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE</primary></indexterm>_ZN10QDropEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QDropEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE</primary></indexterm>_ZN10QDropEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QDropEventD0Ev</primary></indexterm>_ZN10QDropEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QDropEventD1Ev</primary></indexterm>_ZN10QDropEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QDropEventD2Ev</primary></indexterm>_ZN10QDropEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QHelpEventC1EN6QEvent4TypeERK6QPointS4_</primary></indexterm>_ZN10QHelpEventC1EN6QEvent4TypeERK6QPointS4_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QHelpEventC2EN6QEvent4TypeERK6QPointS4_</primary></indexterm>_ZN10QHelpEventC2EN6QEvent4TypeERK6QPointS4_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QHelpEventD0Ev</primary></indexterm>_ZN10QHelpEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QHelpEventD1Ev</primary></indexterm>_ZN10QHelpEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QHelpEventD2Ev</primary></indexterm>_ZN10QHelpEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QHideEventC1Ev</primary></indexterm>_ZN10QHideEventC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QHideEventC2Ev</primary></indexterm>_ZN10QHideEventC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QHideEventD0Ev</primary></indexterm>_ZN10QHideEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QHideEventD1Ev</primary></indexterm>_ZN10QHideEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QHideEventD2Ev</primary></indexterm>_ZN10QHideEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumber10paintEventEP11QPaintEvent</primary></indexterm>_ZN10QLCDNumber10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumber10setBinModeEv</primary></indexterm>_ZN10QLCDNumber10setBinModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumber10setDecModeEv</primary></indexterm>_ZN10QLCDNumber10setDecModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumber10setHexModeEv</primary></indexterm>_ZN10QLCDNumber10setHexModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumber10setOctModeEv</primary></indexterm>_ZN10QLCDNumber10setOctModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumber11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QLCDNumber11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumber11qt_metacastEPKc</primary></indexterm>_ZN10QLCDNumber11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumber12setNumDigitsEi</primary></indexterm>_ZN10QLCDNumber12setNumDigitsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumber15setSegmentStyleENS_12SegmentStyleE</primary></indexterm>_ZN10QLCDNumber15setSegmentStyleENS_12SegmentStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumber20setSmallDecimalPointEb</primary></indexterm>_ZN10QLCDNumber20setSmallDecimalPointEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumber5eventEP6QEvent</primary></indexterm>_ZN10QLCDNumber5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumber7displayERK7QString</primary></indexterm>_ZN10QLCDNumber7displayERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumber7displayEd</primary></indexterm>_ZN10QLCDNumber7displayEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumber7displayEi</primary></indexterm>_ZN10QLCDNumber7displayEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumber7setModeENS_4ModeE</primary></indexterm>_ZN10QLCDNumber7setModeENS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumber8overflowEv</primary></indexterm>_ZN10QLCDNumber8overflowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumberC1EP7QWidget</primary></indexterm>_ZN10QLCDNumberC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumberC1EP7QWidgetPKc</primary></indexterm>_ZN10QLCDNumberC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumberC1EjP7QWidget</primary></indexterm>_ZN10QLCDNumberC1EjP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumberC1EjP7QWidgetPKc</primary></indexterm>_ZN10QLCDNumberC1EjP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumberC2EP7QWidget</primary></indexterm>_ZN10QLCDNumberC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumberC2EP7QWidgetPKc</primary></indexterm>_ZN10QLCDNumberC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumberC2EjP7QWidget</primary></indexterm>_ZN10QLCDNumberC2EjP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumberC2EjP7QWidgetPKc</primary></indexterm>_ZN10QLCDNumberC2EjP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumberD0Ev</primary></indexterm>_ZN10QLCDNumberD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QLCDNumberD1Ev</primary></indexterm>_ZN10QLCDNumberD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumberD2Ev</primary></indexterm>_ZN10QLCDNumberD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QMoveEventC1ERK6QPointS2_</primary></indexterm>_ZN10QMoveEventC1ERK6QPointS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QMoveEventC2ERK6QPointS2_</primary></indexterm>_ZN10QMoveEventC2ERK6QPointS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QMoveEventD0Ev</primary></indexterm>_ZN10QMoveEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QMoveEventD1Ev</primary></indexterm>_ZN10QMoveEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QMoveEventD2Ev</primary></indexterm>_ZN10QMoveEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIO10setPictureERK8QPicture</primary></indexterm>_ZN10QPictureIO10setPictureERK8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIO10setQualityEi</primary></indexterm>_ZN10QPictureIO10setQualityEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIO11setFileNameERK7QString</primary></indexterm>_ZN10QPictureIO11setFileNameERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIO11setIODeviceEP9QIODevice</primary></indexterm>_ZN10QPictureIO11setIODeviceEP9QIODevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIO12inputFormatsEv</primary></indexterm>_ZN10QPictureIO12inputFormatsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIO13outputFormatsEv</primary></indexterm>_ZN10QPictureIO13outputFormatsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIO13pictureFormatEP9QIODevice</primary></indexterm>_ZN10QPictureIO13pictureFormatEP9QIODevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIO13pictureFormatERK7QString</primary></indexterm>_ZN10QPictureIO13pictureFormatERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIO13setParametersEPKc</primary></indexterm>_ZN10QPictureIO13setParametersEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIO14setDescriptionERK7QString</primary></indexterm>_ZN10QPictureIO14setDescriptionERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIO15defineIOHandlerEPKcS1_S1_PFvPS_ES4_</primary></indexterm>_ZN10QPictureIO15defineIOHandlerEPKcS1_S1_PFvPS_ES4_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIO4readEv</primary></indexterm>_ZN10QPictureIO4readEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIO5writeEv</primary></indexterm>_ZN10QPictureIO5writeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIO8setGammaEf</primary></indexterm>_ZN10QPictureIO8setGammaEf <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIO9setFormatEPKc</primary></indexterm>_ZN10QPictureIO9setFormatEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIO9setStatusEi</primary></indexterm>_ZN10QPictureIO9setStatusEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIOC1EP9QIODevicePKc</primary></indexterm>_ZN10QPictureIOC1EP9QIODevicePKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIOC1ERK7QStringPKc</primary></indexterm>_ZN10QPictureIOC1ERK7QStringPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIOC1Ev</primary></indexterm>_ZN10QPictureIOC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIOC2EP9QIODevicePKc</primary></indexterm>_ZN10QPictureIOC2EP9QIODevicePKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIOC2ERK7QStringPKc</primary></indexterm>_ZN10QPictureIOC2ERK7QStringPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIOC2Ev</primary></indexterm>_ZN10QPictureIOC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QPictureIOD1Ev</primary></indexterm>_ZN10QPictureIOD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QPictureIOD2Ev</primary></indexterm>_ZN10QPictureIOD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBar10paintEventEP11QPaintEvent</primary></indexterm>_ZN10QScrollBar10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBar11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QScrollBar11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBar11qt_metacastEPKc</primary></indexterm>_ZN10QScrollBar11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBar12sliderChangeEN15QAbstractSlider12SliderChangeE</primary></indexterm>_ZN10QScrollBar12sliderChangeEN15QAbstractSlider12SliderChangeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBar14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN10QScrollBar14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBar15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN10QScrollBar15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBar16contextMenuEventEP17QContextMenuEvent</primary></indexterm>_ZN10QScrollBar16contextMenuEventEP17QContextMenuEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBar17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN10QScrollBar17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBar5eventEP6QEvent</primary></indexterm>_ZN10QScrollBar5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBar9hideEventEP10QHideEvent</primary></indexterm>_ZN10QScrollBar9hideEventEP10QHideEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBarC1EN2Qt11OrientationEP7QWidget</primary></indexterm>_ZN10QScrollBarC1EN2Qt11OrientationEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBarC1EN2Qt11OrientationEP7QWidgetPKc</primary></indexterm>_ZN10QScrollBarC1EN2Qt11OrientationEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBarC1EP7QWidget</primary></indexterm>_ZN10QScrollBarC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBarC1EP7QWidgetPKc</primary></indexterm>_ZN10QScrollBarC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBarC1EiiiiiN2Qt11OrientationEP7QWidgetPKc</primary></indexterm>_ZN10QScrollBarC1EiiiiiN2Qt11OrientationEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBarC2EN2Qt11OrientationEP7QWidget</primary></indexterm>_ZN10QScrollBarC2EN2Qt11OrientationEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBarC2EN2Qt11OrientationEP7QWidgetPKc</primary></indexterm>_ZN10QScrollBarC2EN2Qt11OrientationEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBarC2EP7QWidget</primary></indexterm>_ZN10QScrollBarC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBarC2EP7QWidgetPKc</primary></indexterm>_ZN10QScrollBarC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBarC2EiiiiiN2Qt11OrientationEP7QWidgetPKc</primary></indexterm>_ZN10QScrollBarC2EiiiiiN2Qt11OrientationEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBarD0Ev</primary></indexterm>_ZN10QScrollBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBarD1Ev</primary></indexterm>_ZN10QScrollBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QScrollBarD2Ev</primary></indexterm>_ZN10QScrollBarD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QShowEventC1Ev</primary></indexterm>_ZN10QShowEventC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QShowEventC2Ev</primary></indexterm>_ZN10QShowEventC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QShowEventD0Ev</primary></indexterm>_ZN10QShowEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QShowEventD1Ev</primary></indexterm>_ZN10QShowEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QShowEventD2Ev</primary></indexterm>_ZN10QShowEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBar10hideOrShowEv</primary></indexterm>_ZN10QStatusBar10hideOrShowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QStatusBar10paintEventEP11QPaintEvent</primary></indexterm>_ZN10QStatusBar10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBar11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QStatusBar11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QStatusBar11qt_metacastEPKc</primary></indexterm>_ZN10QStatusBar11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBar11resizeEventEP12QResizeEvent</primary></indexterm>_ZN10QStatusBar11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QStatusBar11showMessageERK7QStringi</primary></indexterm>_ZN10QStatusBar11showMessageERK7QStringi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBar12clearMessageEv</primary></indexterm>_ZN10QStatusBar12clearMessageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QStatusBar12removeWidgetEP7QWidget</primary></indexterm>_ZN10QStatusBar12removeWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBar14messageChangedERK7QString</primary></indexterm>_ZN10QStatusBar14messageChangedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QStatusBar18addPermanentWidgetEP7QWidgeti</primary></indexterm>_ZN10QStatusBar18addPermanentWidgetEP7QWidgeti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBar18setSizeGripEnabledEb</primary></indexterm>_ZN10QStatusBar18setSizeGripEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QStatusBar5eventEP6QEvent</primary></indexterm>_ZN10QStatusBar5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBar8reformatEv</primary></indexterm>_ZN10QStatusBar8reformatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QStatusBar9addWidgetEP7QWidgeti</primary></indexterm>_ZN10QStatusBar9addWidgetEP7QWidgeti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBarC1EP7QWidget</primary></indexterm>_ZN10QStatusBarC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QStatusBarC1EP7QWidgetPKc</primary></indexterm>_ZN10QStatusBarC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBarC2EP7QWidget</primary></indexterm>_ZN10QStatusBarC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QStatusBarC2EP7QWidgetPKc</primary></indexterm>_ZN10QStatusBarC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBarD0Ev</primary></indexterm>_ZN10QStatusBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QStatusBarD1Ev</primary></indexterm>_ZN10QStatusBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBarD2Ev</primary></indexterm>_ZN10QStatusBarD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget10paintEventEP11QPaintEvent</primary></indexterm>_ZN10QTabWidget10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget10setTabIconEiRK5QIcon</primary></indexterm>_ZN10QTabWidget10setTabIconEiRK5QIcon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget10setTabTextEiRK7QString</primary></indexterm>_ZN10QTabWidget10setTabTextEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget10tabRemovedEi</primary></indexterm>_ZN10QTabWidget10tabRemovedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget11changeEventEP6QEvent</primary></indexterm>_ZN10QTabWidget11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QTabWidget11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget11qt_metacastEPKc</primary></indexterm>_ZN10QTabWidget11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget11resizeEventEP12QResizeEvent</primary></indexterm>_ZN10QTabWidget11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget11setTabShapeENS_8TabShapeE</primary></indexterm>_ZN10QTabWidget11setTabShapeENS_8TabShapeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget11tabInsertedEi</primary></indexterm>_ZN10QTabWidget11tabInsertedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN10QTabWidget13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget13setTabEnabledEib</primary></indexterm>_ZN10QTabWidget13setTabEnabledEib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget13setTabToolTipEiRK7QString</primary></indexterm>_ZN10QTabWidget13setTabToolTipEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget14currentChangedEP7QWidget</primary></indexterm>_ZN10QTabWidget14currentChangedEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget14currentChangedEi</primary></indexterm>_ZN10QTabWidget14currentChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget14setTabPositionENS_11TabPositionE</primary></indexterm>_ZN10QTabWidget14setTabPositionENS_11TabPositionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget15setCornerWidgetEP7QWidgetN2Qt6CornerE</primary></indexterm>_ZN10QTabWidget15setCornerWidgetEP7QWidgetN2Qt6CornerE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget15setCurrentIndexEi</primary></indexterm>_ZN10QTabWidget15setCurrentIndexEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget15setTabWhatsThisEiRK7QString</primary></indexterm>_ZN10QTabWidget15setTabWhatsThisEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget16setCurrentWidgetEP7QWidget</primary></indexterm>_ZN10QTabWidget16setCurrentWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget5eventEP6QEvent</primary></indexterm>_ZN10QTabWidget5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget6addTabEP7QWidgetRK5QIconRK7QString</primary></indexterm>_ZN10QTabWidget6addTabEP7QWidgetRK5QIconRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget6addTabEP7QWidgetRK7QString</primary></indexterm>_ZN10QTabWidget6addTabEP7QWidgetRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget9insertTabEiP7QWidgetRK5QIconRK7QString</primary></indexterm>_ZN10QTabWidget9insertTabEiP7QWidgetRK5QIconRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget9insertTabEiP7QWidgetRK7QString</primary></indexterm>_ZN10QTabWidget9insertTabEiP7QWidgetRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget9removeTabEi</primary></indexterm>_ZN10QTabWidget9removeTabEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget9setTabBarEP7QTabBar</primary></indexterm>_ZN10QTabWidget9setTabBarEP7QTabBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidget9showEventEP10QShowEvent</primary></indexterm>_ZN10QTabWidget9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidgetC1EP7QWidget</primary></indexterm>_ZN10QTabWidgetC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidgetC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN10QTabWidgetC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidgetC2EP7QWidget</primary></indexterm>_ZN10QTabWidgetC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidgetC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN10QTabWidgetC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidgetD0Ev</primary></indexterm>_ZN10QTabWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTabWidgetD1Ev</primary></indexterm>_ZN10QTabWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidgetD2Ev</primary></indexterm>_ZN10QTabWidgetD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView10hideColumnEi</primary></indexterm>_ZN10QTableView10hideColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView10moveCursorEN17QAbstractItemView12CursorActionE6QFlagsIN2Qt16KeyboardModifierEE</primary></indexterm>_ZN10QTableView10moveCursorEN17QAbstractItemView12CursorActionE6QFlagsIN2Qt16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView10paintEventEP11QPaintEvent</primary></indexterm>_ZN10QTableView10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView10rowResizedEiii</primary></indexterm>_ZN10QTableView10rowResizedEiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView10showColumnEi</primary></indexterm>_ZN10QTableView10showColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView10timerEventEP11QTimerEvent</primary></indexterm>_ZN10QTableView10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView11columnMovedEiii</primary></indexterm>_ZN10QTableView11columnMovedEiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QTableView11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView11qt_metacastEPKc</primary></indexterm>_ZN10QTableView11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView11setShowGridEb</primary></indexterm>_ZN10QTableView11setShowGridEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView12selectColumnEi</primary></indexterm>_ZN10QTableView12selectColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView12setGridStyleEN2Qt8PenStyleE</primary></indexterm>_ZN10QTableView12setGridStyleEN2Qt8PenStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView12setRootIndexERK11QModelIndex</primary></indexterm>_ZN10QTableView12setRootIndexERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView12setRowHeightEii</primary></indexterm>_ZN10QTableView12setRowHeightEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView12setRowHiddenEib</primary></indexterm>_ZN10QTableView12setRowHiddenEib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView12setSelectionERK5QRect6QFlagsIN19QItemSelectionModel13SelectionFlagEE</primary></indexterm>_ZN10QTableView12setSelectionERK5QRect6QFlagsIN19QItemSelectionModel13SelectionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView12sortByColumnEi</primary></indexterm>_ZN10QTableView12sortByColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView13columnResizedEiii</primary></indexterm>_ZN10QTableView13columnResizedEiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView14setColumnWidthEii</primary></indexterm>_ZN10QTableView14setColumnWidthEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView15rowCountChangedEii</primary></indexterm>_ZN10QTableView15rowCountChangedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView15setColumnHiddenEib</primary></indexterm>_ZN10QTableView15setColumnHiddenEib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView16scrollContentsByEii</primary></indexterm>_ZN10QTableView16scrollContentsByEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView16updateGeometriesEv</primary></indexterm>_ZN10QTableView16updateGeometriesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView17setSelectionModelEP19QItemSelectionModel</primary></indexterm>_ZN10QTableView17setSelectionModelEP19QItemSelectionModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView17setVerticalHeaderEP11QHeaderView</primary></indexterm>_ZN10QTableView17setVerticalHeaderEP11QHeaderView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView18columnCountChangedEii</primary></indexterm>_ZN10QTableView18columnCountChangedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView19resizeRowToContentsEi</primary></indexterm>_ZN10QTableView19resizeRowToContentsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView19setHorizontalHeaderEP11QHeaderView</primary></indexterm>_ZN10QTableView19setHorizontalHeaderEP11QHeaderView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView20resizeRowsToContentsEv</primary></indexterm>_ZN10QTableView20resizeRowsToContentsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView22resizeColumnToContentsEi</primary></indexterm>_ZN10QTableView22resizeColumnToContentsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView23resizeColumnsToContentsEv</primary></indexterm>_ZN10QTableView23resizeColumnsToContentsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView23verticalScrollbarActionEi</primary></indexterm>_ZN10QTableView23verticalScrollbarActionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView25horizontalScrollbarActionEi</primary></indexterm>_ZN10QTableView25horizontalScrollbarActionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView7hideRowEi</primary></indexterm>_ZN10QTableView7hideRowEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView7showRowEi</primary></indexterm>_ZN10QTableView7showRowEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView8rowMovedEiii</primary></indexterm>_ZN10QTableView8rowMovedEiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView8scrollToERK11QModelIndexN17QAbstractItemView10ScrollHintE</primary></indexterm>_ZN10QTableView8scrollToERK11QModelIndexN17QAbstractItemView10ScrollHintE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableView8setModelEP18QAbstractItemModel</primary></indexterm>_ZN10QTableView8setModelEP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView9selectRowEi</primary></indexterm>_ZN10QTableView9selectRowEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableViewC1EP7QWidget</primary></indexterm>_ZN10QTableViewC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableViewC1ER17QTableViewPrivateP7QWidget</primary></indexterm>_ZN10QTableViewC1ER17QTableViewPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableViewC2EP7QWidget</primary></indexterm>_ZN10QTableViewC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableViewC2ER17QTableViewPrivateP7QWidget</primary></indexterm>_ZN10QTableViewC2ER17QTableViewPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableViewD0Ev</primary></indexterm>_ZN10QTableViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableViewD1Ev</primary></indexterm>_ZN10QTableViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTableViewD2Ev</primary></indexterm>_ZN10QTableViewD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextBlock11setUserDataEP18QTextBlockUserData</primary></indexterm>_ZN10QTextBlock11setUserDataEP18QTextBlockUserData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextBlock12setUserStateEi</primary></indexterm>_ZN10QTextBlock12setUserStateEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextBlock8iteratormmEv</primary></indexterm>_ZN10QTextBlock8iteratormmEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextBlock8iteratorppEv</primary></indexterm>_ZN10QTextBlock8iteratorppEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextFrame11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QTextFrame11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextFrame11qt_metacastEPKc</primary></indexterm>_ZN10QTextFrame11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextFrame13setLayoutDataEP20QTextFrameLayoutData</primary></indexterm>_ZN10QTextFrame13setLayoutDataEP20QTextFrameLayoutData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextFrame8iteratorC1ERKS0_</primary></indexterm>_ZN10QTextFrame8iteratorC1ERKS0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextFrame8iteratorC1Ev</primary></indexterm>_ZN10QTextFrame8iteratorC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextFrame8iteratorC2ERKS0_</primary></indexterm>_ZN10QTextFrame8iteratorC2ERKS0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextFrame8iteratorC2Ev</primary></indexterm>_ZN10QTextFrame8iteratorC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextFrame8iteratoraSERKS0_</primary></indexterm>_ZN10QTextFrame8iteratoraSERKS0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextFrame8iteratormmEv</primary></indexterm>_ZN10QTextFrame8iteratormmEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextFrame8iteratorppEv</primary></indexterm>_ZN10QTextFrame8iteratorppEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextFrameC1EP13QTextDocument</primary></indexterm>_ZN10QTextFrameC1EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextFrameC1ER17QTextFramePrivateP13QTextDocument</primary></indexterm>_ZN10QTextFrameC1ER17QTextFramePrivateP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextFrameC2EP13QTextDocument</primary></indexterm>_ZN10QTextFrameC2EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextFrameC2ER17QTextFramePrivateP13QTextDocument</primary></indexterm>_ZN10QTextFrameC2ER17QTextFramePrivateP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextFrameD0Ev</primary></indexterm>_ZN10QTextFrameD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextFrameD1Ev</primary></indexterm>_ZN10QTextFrameD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextFrameD2Ev</primary></indexterm>_ZN10QTextFrameD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextTable10insertRowsEii</primary></indexterm>_ZN10QTextTable10insertRowsEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextTable10mergeCellsERK11QTextCursor</primary></indexterm>_ZN10QTextTable10mergeCellsERK11QTextCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextTable10mergeCellsEiiii</primary></indexterm>_ZN10QTextTable10mergeCellsEiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextTable10removeRowsEii</primary></indexterm>_ZN10QTextTable10removeRowsEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextTable11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QTextTable11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextTable11qt_metacastEPKc</primary></indexterm>_ZN10QTextTable11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextTable13insertColumnsEii</primary></indexterm>_ZN10QTextTable13insertColumnsEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextTable13removeColumnsEii</primary></indexterm>_ZN10QTextTable13removeColumnsEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextTable6resizeEii</primary></indexterm>_ZN10QTextTable6resizeEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextTable9splitCellEiiii</primary></indexterm>_ZN10QTextTable9splitCellEiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextTableC1EP13QTextDocument</primary></indexterm>_ZN10QTextTableC1EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextTableC2EP13QTextDocument</primary></indexterm>_ZN10QTextTableC2EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextTableD0Ev</primary></indexterm>_ZN10QTextTableD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextTableD1Ev</primary></indexterm>_ZN10QTextTableD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextTableD2Ev</primary></indexterm>_ZN10QTextTableD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QValidator11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QValidator11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QValidator11qt_metacastEPKc</primary></indexterm>_ZN10QValidator11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QValidatorC1EP7QObject</primary></indexterm>_ZN10QValidatorC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QValidatorC1EP7QObjectPKc</primary></indexterm>_ZN10QValidatorC1EP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QValidatorC2EP7QObject</primary></indexterm>_ZN10QValidatorC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QValidatorC2EP7QObjectPKc</primary></indexterm>_ZN10QValidatorC2EP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QValidatorD0Ev</primary></indexterm>_ZN10QValidatorD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QValidatorD1Ev</primary></indexterm>_ZN10QValidatorD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QValidatorD2Ev</primary></indexterm>_ZN10QValidatorD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWhatsThis12createActionEP7QObject</primary></indexterm>_ZN10QWhatsThis12createActionEP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWhatsThis15inWhatsThisModeEv</primary></indexterm>_ZN10QWhatsThis15inWhatsThisModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWhatsThis15whatsThisButtonEP7QWidget</primary></indexterm>_ZN10QWhatsThis15whatsThisButtonEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWhatsThis18enterWhatsThisModeEv</primary></indexterm>_ZN10QWhatsThis18enterWhatsThisModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWhatsThis18leaveWhatsThisModeEv</primary></indexterm>_ZN10QWhatsThis18leaveWhatsThisModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWhatsThis3addEP7QWidgetRK7QString</primary></indexterm>_ZN10QWhatsThis3addEP7QWidgetRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWhatsThis6removeEP7QWidget</primary></indexterm>_ZN10QWhatsThis6removeEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWhatsThis8hideTextEv</primary></indexterm>_ZN10QWhatsThis8hideTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWhatsThis8showTextERK6QPointRK7QStringP7QWidget</primary></indexterm>_ZN10QWhatsThis8showTextERK6QPointRK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace10childEventEP11QChildEvent</primary></indexterm>_ZN10QWorkspace10childEventEP11QChildEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace10paintEventEP11QPaintEvent</primary></indexterm>_ZN10QWorkspace10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace10wheelEventEP11QWheelEvent</primary></indexterm>_ZN10QWorkspace10wheelEventEP11QWheelEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace11changeEventEP6QEvent</primary></indexterm>_ZN10QWorkspace11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace11eventFilterEP7QObjectP6QEvent</primary></indexterm>_ZN10QWorkspace11eventFilterEP7QObjectP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN10QWorkspace11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace11qt_metacastEPKc</primary></indexterm>_ZN10QWorkspace11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace11resizeEventEP12QResizeEvent</primary></indexterm>_ZN10QWorkspace11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace12arrangeIconsEv</primary></indexterm>_ZN10QWorkspace12arrangeIconsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace13setBackgroundERK6QBrush</primary></indexterm>_ZN10QWorkspace13setBackgroundERK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace15closeAllWindowsEv</primary></indexterm>_ZN10QWorkspace15closeAllWindowsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace15setActiveWindowEP7QWidget</primary></indexterm>_ZN10QWorkspace15setActiveWindowEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace15windowActivatedEP7QWidget</primary></indexterm>_ZN10QWorkspace15windowActivatedEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace17closeActiveWindowEv</primary></indexterm>_ZN10QWorkspace17closeActiveWindowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace18activateNextWindowEv</primary></indexterm>_ZN10QWorkspace18activateNextWindowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace20setScrollBarsEnabledEb</primary></indexterm>_ZN10QWorkspace20setScrollBarsEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace22activatePreviousWindowEv</primary></indexterm>_ZN10QWorkspace22activatePreviousWindowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace25setPaletteBackgroundColorERK6QColor</primary></indexterm>_ZN10QWorkspace25setPaletteBackgroundColorERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace26setPaletteBackgroundPixmapERK7QPixmap</primary></indexterm>_ZN10QWorkspace26setPaletteBackgroundPixmapERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace4tileEv</primary></indexterm>_ZN10QWorkspace4tileEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace5eventEP6QEvent</primary></indexterm>_ZN10QWorkspace5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace7cascadeEv</primary></indexterm>_ZN10QWorkspace7cascadeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace9addWindowEP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN10QWorkspace9addWindowEP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspace9hideEventEP10QHideEvent</primary></indexterm>_ZN10QWorkspace9hideEventEP10QHideEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace9showEventEP10QShowEvent</primary></indexterm>_ZN10QWorkspace9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspaceC1EP7QWidget</primary></indexterm>_ZN10QWorkspaceC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspaceC1EP7QWidgetPKc</primary></indexterm>_ZN10QWorkspaceC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspaceC2EP7QWidget</primary></indexterm>_ZN10QWorkspaceC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspaceC2EP7QWidgetPKc</primary></indexterm>_ZN10QWorkspaceC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspaceD0Ev</primary></indexterm>_ZN10QWorkspaceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspaceD1Ev</primary></indexterm>_ZN10QWorkspaceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QWorkspaceD2Ev</primary></indexterm>_ZN10QWorkspaceD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QAccessible10initializeEv</primary></indexterm>_ZN11QAccessible10initializeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QAccessible13removeFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE</primary></indexterm>_ZN11QAccessible13removeFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QAccessible13setRootObjectEP7QObject</primary></indexterm>_ZN11QAccessible13setRootObjectEP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QAccessible14installFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE</primary></indexterm>_ZN11QAccessible14installFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QAccessible19updateAccessibilityEP7QObjectiNS_5EventE</primary></indexterm>_ZN11QAccessible19updateAccessibilityEP7QObjectiNS_5EventE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QAccessible20installUpdateHandlerEPFvP7QObjectiNS_5EventEE</primary></indexterm>_ZN11QAccessible20installUpdateHandlerEPFvP7QObjectiNS_5EventEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QAccessible24installRootObjectHandlerEPFvP7QObjectE</primary></indexterm>_ZN11QAccessible24installRootObjectHandlerEPFvP7QObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QAccessible24queryAccessibleInterfaceEP7QObject</primary></indexterm>_ZN11QAccessible24queryAccessibleInterfaceEP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QAccessible7cleanupEv</primary></indexterm>_ZN11QAccessible7cleanupEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QAccessible8isActiveEv</primary></indexterm>_ZN11QAccessible8isActiveEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QCloseEventC1Ev</primary></indexterm>_ZN11QCloseEventC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QCloseEventC2Ev</primary></indexterm>_ZN11QCloseEventC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QCloseEventD0Ev</primary></indexterm>_ZN11QCloseEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QCloseEventD1Ev</primary></indexterm>_ZN11QCloseEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QCloseEventD2Ev</primary></indexterm>_ZN11QCloseEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QDockWidget10closeEventEP11QCloseEvent</primary></indexterm>_ZN11QDockWidget10closeEventEP11QCloseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QDockWidget10paintEventEP11QPaintEvent</primary></indexterm>_ZN11QDockWidget10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QDockWidget11changeEventEP6QEvent</primary></indexterm>_ZN11QDockWidget11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QDockWidget11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QDockWidget11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QDockWidget11qt_metacastEPKc</primary></indexterm>_ZN11QDockWidget11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QDockWidget11setFeaturesE6QFlagsINS_17DockWidgetFeatureEE</primary></indexterm>_ZN11QDockWidget11setFeaturesE6QFlagsINS_17DockWidgetFeatureEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QDockWidget11setFloatingEb</primary></indexterm>_ZN11QDockWidget11setFloatingEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QDockWidget15featuresChangedE6QFlagsINS_17DockWidgetFeatureEE</primary></indexterm>_ZN11QDockWidget15featuresChangedE6QFlagsINS_17DockWidgetFeatureEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QDockWidget15setAllowedAreasE6QFlagsIN2Qt14DockWidgetAreaEE</primary></indexterm>_ZN11QDockWidget15setAllowedAreasE6QFlagsIN2Qt14DockWidgetAreaEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QDockWidget15topLevelChangedEb</primary></indexterm>_ZN11QDockWidget15topLevelChangedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QDockWidget19allowedAreasChangedE6QFlagsIN2Qt14DockWidgetAreaEE</primary></indexterm>_ZN11QDockWidget19allowedAreasChangedE6QFlagsIN2Qt14DockWidgetAreaEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QDockWidget5eventEP6QEvent</primary></indexterm>_ZN11QDockWidget5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QDockWidget9setWidgetEP7QWidget</primary></indexterm>_ZN11QDockWidget9setWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QDockWidgetC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QDockWidgetC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QDockWidgetC1ERK7QStringP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QDockWidgetC1ERK7QStringP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QDockWidgetC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QDockWidgetC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QDockWidgetC2ERK7QStringP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QDockWidgetC2ERK7QStringP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QDockWidgetD0Ev</primary></indexterm>_ZN11QDockWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QDockWidgetD1Ev</primary></indexterm>_ZN11QDockWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QDockWidgetD2Ev</primary></indexterm>_ZN11QDockWidgetD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog10selectFileERK7QString</primary></indexterm>_ZN11QFileDialog10selectFileERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog10setFiltersERK11QStringList</primary></indexterm>_ZN11QFileDialog10setFiltersERK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog10setHistoryERK11QStringList</primary></indexterm>_ZN11QFileDialog10setHistoryERK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QFileDialog11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog11qt_metacastEPKc</primary></indexterm>_ZN11QFileDialog11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog11setFileModeENS_8FileModeE</primary></indexterm>_ZN11QFileDialog11setFileModeENS_8FileModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog11setReadOnlyEb</primary></indexterm>_ZN11QFileDialog11setReadOnlyEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog11setViewModeENS_8ViewModeE</primary></indexterm>_ZN11QFileDialog11setViewModeENS_8ViewModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog12selectFilterERK7QString</primary></indexterm>_ZN11QFileDialog12selectFilterERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog12setDirectoryERK7QString</primary></indexterm>_ZN11QFileDialog12setDirectoryERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog12setLabelTextENS_11DialogLabelERK7QString</primary></indexterm>_ZN11QFileDialog12setLabelTextENS_11DialogLabelERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog13filesSelectedERK11QStringList</primary></indexterm>_ZN11QFileDialog13filesSelectedERK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog13setAcceptModeENS_10AcceptModeE</primary></indexterm>_ZN11QFileDialog13setAcceptModeENS_10AcceptModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog14currentChangedERK7QString</primary></indexterm>_ZN11QFileDialog14currentChangedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog15getOpenFileNameEP7QWidgetRK7QStringS4_S4_PS2_6QFlagsINS_6OptionEE</primary></indexterm>_ZN11QFileDialog15getOpenFileNameEP7QWidgetRK7QStringS4_S4_PS2_6QFlagsINS_6OptionEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog15getSaveFileNameEP7QWidgetRK7QStringS4_S4_PS2_6QFlagsINS_6OptionEE</primary></indexterm>_ZN11QFileDialog15getSaveFileNameEP7QWidgetRK7QStringS4_S4_PS2_6QFlagsINS_6OptionEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog15setIconProviderEP17QFileIconProvider</primary></indexterm>_ZN11QFileDialog15setIconProviderEP17QFileIconProvider <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog15setItemDelegateEP21QAbstractItemDelegate</primary></indexterm>_ZN11QFileDialog15setItemDelegateEP21QAbstractItemDelegate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog16getOpenFileNamesEP7QWidgetRK7QStringS4_S4_PS2_6QFlagsINS_6OptionEE</primary></indexterm>_ZN11QFileDialog16getOpenFileNamesEP7QWidgetRK7QStringS4_S4_PS2_6QFlagsINS_6OptionEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog16setDefaultSuffixERK7QString</primary></indexterm>_ZN11QFileDialog16setDefaultSuffixERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog18setResolveSymlinksEb</primary></indexterm>_ZN11QFileDialog18setResolveSymlinksEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog19setConfirmOverwriteEb</primary></indexterm>_ZN11QFileDialog19setConfirmOverwriteEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog20getExistingDirectoryEP7QWidgetRK7QStringS4_6QFlagsINS_6OptionEE</primary></indexterm>_ZN11QFileDialog20getExistingDirectoryEP7QWidgetRK7QStringS4_6QFlagsINS_6OptionEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog4doneEi</primary></indexterm>_ZN11QFileDialog4doneEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialog6acceptEv</primary></indexterm>_ZN11QFileDialog6acceptEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog9setFilterERK7QString</primary></indexterm>_ZN11QFileDialog9setFilterERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialogC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QFileDialogC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialogC1EP7QWidgetRK7QStringS4_S4_</primary></indexterm>_ZN11QFileDialogC1EP7QWidgetRK7QStringS4_S4_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialogC1ERK15QFileDialogArgs</primary></indexterm>_ZN11QFileDialogC1ERK15QFileDialogArgs <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialogC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QFileDialogC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialogC2EP7QWidgetRK7QStringS4_S4_</primary></indexterm>_ZN11QFileDialogC2EP7QWidgetRK7QStringS4_S4_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialogC2ERK15QFileDialogArgs</primary></indexterm>_ZN11QFileDialogC2ERK15QFileDialogArgs <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialogD0Ev</primary></indexterm>_ZN11QFileDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialogD1Ev</primary></indexterm>_ZN11QFileDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFileDialogD2Ev</primary></indexterm>_ZN11QFileDialogD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFocusEvent6reasonEv</primary></indexterm>_ZN11QFocusEvent6reasonEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFocusEventC1EN6QEvent4TypeEN2Qt11FocusReasonE</primary></indexterm>_ZN11QFocusEventC1EN6QEvent4TypeEN2Qt11FocusReasonE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFocusEventC2EN6QEvent4TypeEN2Qt11FocusReasonE</primary></indexterm>_ZN11QFocusEventC2EN6QEvent4TypeEN2Qt11FocusReasonE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFocusEventD0Ev</primary></indexterm>_ZN11QFocusEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFocusEventD1Ev</primary></indexterm>_ZN11QFocusEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFocusEventD2Ev</primary></indexterm>_ZN11QFocusEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFocusFrame10paintEventEP11QPaintEvent</primary></indexterm>_ZN11QFocusFrame10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFocusFrame11eventFilterEP7QObjectP6QEvent</primary></indexterm>_ZN11QFocusFrame11eventFilterEP7QObjectP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFocusFrame11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QFocusFrame11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFocusFrame11qt_metacastEPKc</primary></indexterm>_ZN11QFocusFrame11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFocusFrame5eventEP6QEvent</primary></indexterm>_ZN11QFocusFrame5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFocusFrame9setWidgetEP7QWidget</primary></indexterm>_ZN11QFocusFrame9setWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFocusFrameC1EP7QWidget</primary></indexterm>_ZN11QFocusFrameC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFocusFrameC2EP7QWidget</primary></indexterm>_ZN11QFocusFrameC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFocusFrameD0Ev</primary></indexterm>_ZN11QFocusFrameD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFocusFrameD1Ev</primary></indexterm>_ZN11QFocusFrameD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFocusFrameD2Ev</primary></indexterm>_ZN11QFocusFrameD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFontDialog11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QFontDialog11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFontDialog11qt_metacastEPKc</primary></indexterm>_ZN11QFontDialog11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFontDialog7getFontEPbP7QWidget</primary></indexterm>_ZN11QFontDialog7getFontEPbP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFontDialog7getFontEPbRK5QFontP7QWidget</primary></indexterm>_ZN11QFontDialog7getFontEPbRK5QFontP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayout10findWidgetEP7QWidgetPiS2_</primary></indexterm>_ZN11QGridLayout10findWidgetEP7QWidgetPiS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayout10invalidateEv</primary></indexterm>_ZN11QGridLayout10invalidateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayout11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QGridLayout11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayout11qt_metacastEPKc</primary></indexterm>_ZN11QGridLayout11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayout11setGeometryERK5QRect</primary></indexterm>_ZN11QGridLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayout13setRowStretchEii</primary></indexterm>_ZN11QGridLayout13setRowStretchEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayout15getItemPositionEiPiS0_S0_S0_</primary></indexterm>_ZN11QGridLayout15getItemPositionEiPiS0_S0_S0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayout15setOriginCornerEN2Qt6CornerE</primary></indexterm>_ZN11QGridLayout15setOriginCornerEN2Qt6CornerE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayout16setColumnStretchEii</primary></indexterm>_ZN11QGridLayout16setColumnStretchEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayout19setRowMinimumHeightEii</primary></indexterm>_ZN11QGridLayout19setRowMinimumHeightEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayout21setColumnMinimumWidthEii</primary></indexterm>_ZN11QGridLayout21setColumnMinimumWidthEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayout21setDefaultPositioningEiN2Qt11OrientationE</primary></indexterm>_ZN11QGridLayout21setDefaultPositioningEiN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayout6expandEii</primary></indexterm>_ZN11QGridLayout6expandEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayout6takeAtEi</primary></indexterm>_ZN11QGridLayout6takeAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayout7addItemEP11QLayoutItem</primary></indexterm>_ZN11QGridLayout7addItemEP11QLayoutItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayout7addItemEP11QLayoutItemiiii6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN11QGridLayout7addItemEP11QLayoutItemiiii6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayout9addLayoutEP7QLayoutii6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN11QGridLayout9addLayoutEP7QLayoutii6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayout9addLayoutEP7QLayoutiiii6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN11QGridLayout9addLayoutEP7QLayoutiiii6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayout9addWidgetEP7QWidgetii6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN11QGridLayout9addWidgetEP7QWidgetii6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayout9addWidgetEP7QWidgetiiii6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN11QGridLayout9addWidgetEP7QWidgetiiii6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayoutC1EP7QLayoutiiiPKc</primary></indexterm>_ZN11QGridLayoutC1EP7QLayoutiiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayoutC1EP7QWidget</primary></indexterm>_ZN11QGridLayoutC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayoutC1EP7QWidgetiiiiPKc</primary></indexterm>_ZN11QGridLayoutC1EP7QWidgetiiiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayoutC1EiiiPKc</primary></indexterm>_ZN11QGridLayoutC1EiiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayoutC1Ev</primary></indexterm>_ZN11QGridLayoutC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayoutC2EP7QLayoutiiiPKc</primary></indexterm>_ZN11QGridLayoutC2EP7QLayoutiiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayoutC2EP7QWidget</primary></indexterm>_ZN11QGridLayoutC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayoutC2EP7QWidgetiiiiPKc</primary></indexterm>_ZN11QGridLayoutC2EP7QWidgetiiiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayoutC2EiiiPKc</primary></indexterm>_ZN11QGridLayoutC2EiiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayoutC2Ev</primary></indexterm>_ZN11QGridLayoutC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayoutD0Ev</primary></indexterm>_ZN11QGridLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QGridLayoutD1Ev</primary></indexterm>_ZN11QGridLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayoutD2Ev</primary></indexterm>_ZN11QGridLayoutD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHBoxLayout11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QHBoxLayout11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHBoxLayout11qt_metacastEPKc</primary></indexterm>_ZN11QHBoxLayout11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutC1EP7QLayoutiPKc</primary></indexterm>_ZN11QHBoxLayoutC1EP7QLayoutiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutC1EP7QWidget</primary></indexterm>_ZN11QHBoxLayoutC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutC1EP7QWidgetiiPKc</primary></indexterm>_ZN11QHBoxLayoutC1EP7QWidgetiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutC1EiPKc</primary></indexterm>_ZN11QHBoxLayoutC1EiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutC1Ev</primary></indexterm>_ZN11QHBoxLayoutC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutC2EP7QLayoutiPKc</primary></indexterm>_ZN11QHBoxLayoutC2EP7QLayoutiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutC2EP7QWidget</primary></indexterm>_ZN11QHBoxLayoutC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutC2EP7QWidgetiiPKc</primary></indexterm>_ZN11QHBoxLayoutC2EP7QWidgetiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutC2EiPKc</primary></indexterm>_ZN11QHBoxLayoutC2EiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutC2Ev</primary></indexterm>_ZN11QHBoxLayoutC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutD0Ev</primary></indexterm>_ZN11QHBoxLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutD1Ev</primary></indexterm>_ZN11QHBoxLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHBoxLayoutD2Ev</primary></indexterm>_ZN11QHBoxLayoutD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView10initializeEv</primary></indexterm>_ZN11QHeaderView10initializeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView10moveCursorEN17QAbstractItemView12CursorActionE6QFlagsIN2Qt16KeyboardModifierEE</primary></indexterm>_ZN11QHeaderView10moveCursorEN17QAbstractItemView12CursorActionE6QFlagsIN2Qt16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView10paintEventEP11QPaintEvent</primary></indexterm>_ZN11QHeaderView10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView10setMovableEb</primary></indexterm>_ZN11QHeaderView10setMovableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView11dataChangedERK11QModelIndexS2_</primary></indexterm>_ZN11QHeaderView11dataChangedERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView11moveSectionEii</primary></indexterm>_ZN11QHeaderView11moveSectionEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QHeaderView11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView11qt_metacastEPKc</primary></indexterm>_ZN11QHeaderView11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView12rowsInsertedERK11QModelIndexii</primary></indexterm>_ZN11QHeaderView12rowsInsertedERK11QModelIndexii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView12sectionMovedEiii</primary></indexterm>_ZN11QHeaderView12sectionMovedEiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView12setClickableEb</primary></indexterm>_ZN11QHeaderView12setClickableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView12setSelectionERK5QRect6QFlagsIN19QItemSelectionModel13SelectionFlagEE</primary></indexterm>_ZN11QHeaderView12setSelectionERK5QRect6QFlagsIN19QItemSelectionModel13SelectionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView13doItemsLayoutEv</primary></indexterm>_ZN11QHeaderView13doItemsLayoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView13resizeSectionEii</primary></indexterm>_ZN11QHeaderView13resizeSectionEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView13setResizeModeENS_10ResizeModeE</primary></indexterm>_ZN11QHeaderView13setResizeModeENS_10ResizeModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView13setResizeModeEiNS_10ResizeModeE</primary></indexterm>_ZN11QHeaderView13setResizeModeEiNS_10ResizeModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView13updateSectionEi</primary></indexterm>_ZN11QHeaderView13updateSectionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView13viewportEventEP6QEvent</primary></indexterm>_ZN11QHeaderView13viewportEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView14currentChangedERK11QModelIndexS2_</primary></indexterm>_ZN11QHeaderView14currentChangedERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN11QHeaderView14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView14resizeSectionsENS_10ResizeModeE</primary></indexterm>_ZN11QHeaderView14resizeSectionsENS_10ResizeModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView14resizeSectionsEv</primary></indexterm>_ZN11QHeaderView14resizeSectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView14sectionClickedEi</primary></indexterm>_ZN11QHeaderView14sectionClickedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView14sectionPressedEi</primary></indexterm>_ZN11QHeaderView14sectionPressedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView14sectionResizedEiii</primary></indexterm>_ZN11QHeaderView14sectionResizedEiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN11QHeaderView15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView16scrollContentsByEii</primary></indexterm>_ZN11QHeaderView16scrollContentsByEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView16sectionsInsertedERK11QModelIndexii</primary></indexterm>_ZN11QHeaderView16sectionsInsertedERK11QModelIndexii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView16setSectionHiddenEib</primary></indexterm>_ZN11QHeaderView16setSectionHiddenEib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView16setSortIndicatorEiN2Qt9SortOrderE</primary></indexterm>_ZN11QHeaderView16setSortIndicatorEiN2Qt9SortOrderE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView16updateGeometriesEv</primary></indexterm>_ZN11QHeaderView16updateGeometriesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView17headerDataChangedEN2Qt11OrientationEii</primary></indexterm>_ZN11QHeaderView17headerDataChangedEN2Qt11OrientationEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN11QHeaderView17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView17sectionAutoResizeEiNS_10ResizeModeE</primary></indexterm>_ZN11QHeaderView17sectionAutoResizeEiNS_10ResizeModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView18initializeSectionsEii</primary></indexterm>_ZN11QHeaderView18initializeSectionsEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView18initializeSectionsEv</primary></indexterm>_ZN11QHeaderView18initializeSectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView19sectionCountChangedEii</primary></indexterm>_ZN11QHeaderView19sectionCountChangedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView19setDefaultAlignmentE6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN11QHeaderView19setDefaultAlignmentE6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView20sectionDoubleClickedEi</primary></indexterm>_ZN11QHeaderView20sectionDoubleClickedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView20setHighlightSectionsEb</primary></indexterm>_ZN11QHeaderView20setHighlightSectionsEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView21mouseDoubleClickEventEP11QMouseEvent</primary></indexterm>_ZN11QHeaderView21mouseDoubleClickEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView21setDefaultSectionSizeEi</primary></indexterm>_ZN11QHeaderView21setDefaultSectionSizeEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView21setSortIndicatorShownEb</primary></indexterm>_ZN11QHeaderView21setSortIndicatorShownEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView21setStretchLastSectionEb</primary></indexterm>_ZN11QHeaderView21setStretchLastSectionEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView24sectionsAboutToBeRemovedERK11QModelIndexii</primary></indexterm>_ZN11QHeaderView24sectionsAboutToBeRemovedERK11QModelIndexii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView26sectionHandleDoubleClickedEi</primary></indexterm>_ZN11QHeaderView26sectionHandleDoubleClickedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView5eventEP6QEvent</primary></indexterm>_ZN11QHeaderView5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView8scrollToERK11QModelIndexN17QAbstractItemView10ScrollHintE</primary></indexterm>_ZN11QHeaderView8scrollToERK11QModelIndexN17QAbstractItemView10ScrollHintE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView8setModelEP18QAbstractItemModel</primary></indexterm>_ZN11QHeaderView8setModelEP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderView9setOffsetEi</primary></indexterm>_ZN11QHeaderView9setOffsetEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderViewC1EN2Qt11OrientationEP7QWidget</primary></indexterm>_ZN11QHeaderViewC1EN2Qt11OrientationEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderViewC1ER18QHeaderViewPrivateN2Qt11OrientationEP7QWidget</primary></indexterm>_ZN11QHeaderViewC1ER18QHeaderViewPrivateN2Qt11OrientationEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderViewC2EN2Qt11OrientationEP7QWidget</primary></indexterm>_ZN11QHeaderViewC2EN2Qt11OrientationEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderViewC2ER18QHeaderViewPrivateN2Qt11OrientationEP7QWidget</primary></indexterm>_ZN11QHeaderViewC2ER18QHeaderViewPrivateN2Qt11OrientationEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderViewD0Ev</primary></indexterm>_ZN11QHeaderViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHeaderViewD1Ev</primary></indexterm>_ZN11QHeaderViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderViewD2Ev</primary></indexterm>_ZN11QHeaderViewD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHoverEventC1EN6QEvent4TypeERK6QPointS4_</primary></indexterm>_ZN11QHoverEventC1EN6QEvent4TypeERK6QPointS4_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHoverEventC2EN6QEvent4TypeERK6QPointS4_</primary></indexterm>_ZN11QHoverEventC2EN6QEvent4TypeERK6QPointS4_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHoverEventD0Ev</primary></indexterm>_ZN11QHoverEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHoverEventD1Ev</primary></indexterm>_ZN11QHoverEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHoverEventD2Ev</primary></indexterm>_ZN11QHoverEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QIconEngine10actualSizeERK5QSizeN5QIcon4ModeENS3_5StateE</primary></indexterm>_ZN11QIconEngine10actualSizeERK5QSizeN5QIcon4ModeENS3_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QIconEngine6pixmapERK5QSizeN5QIcon4ModeENS3_5StateE</primary></indexterm>_ZN11QIconEngine6pixmapERK5QSizeN5QIcon4ModeENS3_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QIconEngine7addFileERK7QStringRK5QSizeN5QIcon4ModeENS6_5StateE</primary></indexterm>_ZN11QIconEngine7addFileERK7QStringRK5QSizeN5QIcon4ModeENS6_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QIconEngine9addPixmapERK7QPixmapN5QIcon4ModeENS3_5StateE</primary></indexterm>_ZN11QIconEngine9addPixmapERK7QPixmapN5QIcon4ModeENS3_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QIconEngineD0Ev</primary></indexterm>_ZN11QIconEngineD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QIconEngineD1Ev</primary></indexterm>_ZN11QIconEngineD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QIconEngineD2Ev</primary></indexterm>_ZN11QIconEngineD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QInputEventC1EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE</primary></indexterm>_ZN11QInputEventC1EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QInputEventC2EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE</primary></indexterm>_ZN11QInputEventC2EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QInputEventD0Ev</primary></indexterm>_ZN11QInputEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QInputEventD1Ev</primary></indexterm>_ZN11QInputEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QInputEventD2Ev</primary></indexterm>_ZN11QInputEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QLayoutItem10invalidateEv</primary></indexterm>_ZN11QLayoutItem10invalidateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QLayoutItem10spacerItemEv</primary></indexterm>_ZN11QLayoutItem10spacerItemEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QLayoutItem12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN11QLayoutItem12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QLayoutItem6layoutEv</primary></indexterm>_ZN11QLayoutItem6layoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QLayoutItem6widgetEv</primary></indexterm>_ZN11QLayoutItem6widgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QLayoutItemD0Ev</primary></indexterm>_ZN11QLayoutItemD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QLayoutItemD1Ev</primary></indexterm>_ZN11QLayoutItemD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QLayoutItemD2Ev</primary></indexterm>_ZN11QLayoutItemD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget10insertItemEiP15QListWidgetItem</primary></indexterm>_ZN11QListWidget10insertItemEiP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget10insertItemEiRK7QString</primary></indexterm>_ZN11QListWidget10insertItemEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget11insertItemsEiRK11QStringList</primary></indexterm>_ZN11QListWidget11insertItemsEiRK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget11itemChangedEP15QListWidgetItem</primary></indexterm>_ZN11QListWidget11itemChangedEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget11itemClickedEP15QListWidgetItem</primary></indexterm>_ZN11QListWidget11itemClickedEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget11itemEnteredEP15QListWidgetItem</primary></indexterm>_ZN11QListWidget11itemEnteredEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget11itemPressedEP15QListWidgetItem</primary></indexterm>_ZN11QListWidget11itemPressedEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QListWidget11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget11qt_metacastEPKc</primary></indexterm>_ZN11QListWidget11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget12dropMimeDataEiPK9QMimeDataN2Qt10DropActionE</primary></indexterm>_ZN11QListWidget12dropMimeDataEiPK9QMimeDataN2Qt10DropActionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget12scrollToItemEPK15QListWidgetItemN17QAbstractItemView10ScrollHintE</primary></indexterm>_ZN11QListWidget12scrollToItemEPK15QListWidgetItemN17QAbstractItemView10ScrollHintE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget13itemActivatedEP15QListWidgetItem</primary></indexterm>_ZN11QListWidget13itemActivatedEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget13setCurrentRowEi</primary></indexterm>_ZN11QListWidget13setCurrentRowEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget13setItemHiddenEPK15QListWidgetItemb</primary></indexterm>_ZN11QListWidget13setItemHiddenEPK15QListWidgetItemb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget13setItemWidgetEP15QListWidgetItemP7QWidget</primary></indexterm>_ZN11QListWidget13setItemWidgetEP15QListWidgetItemP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget14setCurrentItemEP15QListWidgetItem</primary></indexterm>_ZN11QListWidget14setCurrentItemEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget15setItemSelectedEPK15QListWidgetItemb</primary></indexterm>_ZN11QListWidget15setItemSelectedEPK15QListWidgetItemb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget17currentRowChangedEi</primary></indexterm>_ZN11QListWidget17currentRowChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget17itemDoubleClickedEP15QListWidgetItem</primary></indexterm>_ZN11QListWidget17itemDoubleClickedEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget18currentItemChangedEP15QListWidgetItemS1_</primary></indexterm>_ZN11QListWidget18currentItemChangedEP15QListWidgetItemS1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget18currentTextChangedERK7QString</primary></indexterm>_ZN11QListWidget18currentTextChangedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget20itemSelectionChangedEv</primary></indexterm>_ZN11QListWidget20itemSelectionChangedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget20openPersistentEditorEP15QListWidgetItem</primary></indexterm>_ZN11QListWidget20openPersistentEditorEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget21closePersistentEditorEP15QListWidgetItem</primary></indexterm>_ZN11QListWidget21closePersistentEditorEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget5clearEv</primary></indexterm>_ZN11QListWidget5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget5eventEP6QEvent</primary></indexterm>_ZN11QListWidget5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget8editItemEP15QListWidgetItem</primary></indexterm>_ZN11QListWidget8editItemEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget8setModelEP18QAbstractItemModel</primary></indexterm>_ZN11QListWidget8setModelEP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidget8takeItemEi</primary></indexterm>_ZN11QListWidget8takeItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget9sortItemsEN2Qt9SortOrderE</primary></indexterm>_ZN11QListWidget9sortItemsEN2Qt9SortOrderE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidgetC1EP7QWidget</primary></indexterm>_ZN11QListWidgetC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidgetC2EP7QWidget</primary></indexterm>_ZN11QListWidgetC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidgetD0Ev</primary></indexterm>_ZN11QListWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidgetD1Ev</primary></indexterm>_ZN11QListWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QListWidgetD2Ev</primary></indexterm>_ZN11QListWidgetD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow10addToolBarEN2Qt11ToolBarAreaEP8QToolBar</primary></indexterm>_ZN11QMainWindow10addToolBarEN2Qt11ToolBarAreaEP8QToolBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow10addToolBarEP8QToolBar</primary></indexterm>_ZN11QMainWindow10addToolBarEP8QToolBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow10addToolBarERK7QString</primary></indexterm>_ZN11QMainWindow10addToolBarERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow10setMenuBarEP8QMenuBar</primary></indexterm>_ZN11QMainWindow10setMenuBarEP8QMenuBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QMainWindow11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow11qt_metacastEPKc</primary></indexterm>_ZN11QMainWindow11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow11setIconSizeERK5QSize</primary></indexterm>_ZN11QMainWindow11setIconSizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow12restoreStateERK10QByteArrayi</primary></indexterm>_ZN11QMainWindow12restoreStateERK10QByteArrayi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow12setStatusBarEP10QStatusBar</primary></indexterm>_ZN11QMainWindow12setStatusBarEP10QStatusBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow13addDockWidgetEN2Qt14DockWidgetAreaEP11QDockWidget</primary></indexterm>_ZN11QMainWindow13addDockWidgetEN2Qt14DockWidgetAreaEP11QDockWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow13addDockWidgetEN2Qt14DockWidgetAreaEP11QDockWidgetNS0_11OrientationE</primary></indexterm>_ZN11QMainWindow13addDockWidgetEN2Qt14DockWidgetAreaEP11QDockWidgetNS0_11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow13insertToolBarEP8QToolBarS1_</primary></indexterm>_ZN11QMainWindow13insertToolBarEP8QToolBarS1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow13removeToolBarEP8QToolBar</primary></indexterm>_ZN11QMainWindow13removeToolBarEP8QToolBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow15addToolBarBreakEN2Qt11ToolBarAreaE</primary></indexterm>_ZN11QMainWindow15addToolBarBreakEN2Qt11ToolBarAreaE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow15createPopupMenuEv</primary></indexterm>_ZN11QMainWindow15createPopupMenuEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow15iconSizeChangedERK5QSize</primary></indexterm>_ZN11QMainWindow15iconSizeChangedERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow15splitDockWidgetEP11QDockWidgetS1_N2Qt11OrientationE</primary></indexterm>_ZN11QMainWindow15splitDockWidgetEP11QDockWidgetS1_N2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow16contextMenuEventEP17QContextMenuEvent</primary></indexterm>_ZN11QMainWindow16contextMenuEventEP17QContextMenuEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow16removeDockWidgetEP11QDockWidget</primary></indexterm>_ZN11QMainWindow16removeDockWidgetEP11QDockWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow16setCentralWidgetEP7QWidget</primary></indexterm>_ZN11QMainWindow16setCentralWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow18insertToolBarBreakEP8QToolBar</primary></indexterm>_ZN11QMainWindow18insertToolBarBreakEP8QToolBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow18setToolButtonStyleEN2Qt15ToolButtonStyleE</primary></indexterm>_ZN11QMainWindow18setToolButtonStyleEN2Qt15ToolButtonStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow22toolButtonStyleChangedEN2Qt15ToolButtonStyleE</primary></indexterm>_ZN11QMainWindow22toolButtonStyleChangedEN2Qt15ToolButtonStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow5eventEP6QEvent</primary></indexterm>_ZN11QMainWindow5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindow9setCornerEN2Qt6CornerENS0_14DockWidgetAreaE</primary></indexterm>_ZN11QMainWindow9setCornerEN2Qt6CornerENS0_14DockWidgetAreaE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindowC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QMainWindowC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindowC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QMainWindowC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindowC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QMainWindowC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindowC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QMainWindowC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindowD0Ev</primary></indexterm>_ZN11QMainWindowD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMainWindowD1Ev</primary></indexterm>_ZN11QMainWindowD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindowD2Ev</primary></indexterm>_ZN11QMainWindowD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox10closeEventEP11QCloseEvent</primary></indexterm>_ZN11QMessageBox10closeEventEP11QCloseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox11changeEventEP6QEvent</primary></indexterm>_ZN11QMessageBox11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox11informationEP7QWidgetRK7QStringS4_S4_S4_S4_ii</primary></indexterm>_ZN11QMessageBox11informationEP7QWidgetRK7QStringS4_S4_S4_S4_ii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox11informationEP7QWidgetRK7QStringS4_iii</primary></indexterm>_ZN11QMessageBox11informationEP7QWidgetRK7QStringS4_iii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QMessageBox11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox11qt_metacastEPKc</primary></indexterm>_ZN11QMessageBox11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox11resizeEventEP12QResizeEvent</primary></indexterm>_ZN11QMessageBox11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox12standardIconENS_4IconE</primary></indexterm>_ZN11QMessageBox12standardIconENS_4IconE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox12standardIconENS_4IconEN2Qt8GUIStyleE</primary></indexterm>_ZN11QMessageBox12standardIconENS_4IconEN2Qt8GUIStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN11QMessageBox13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox13setButtonTextEiRK7QString</primary></indexterm>_ZN11QMessageBox13setButtonTextEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox13setIconPixmapERK7QPixmap</primary></indexterm>_ZN11QMessageBox13setIconPixmapERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox13setTextFormatEN2Qt10TextFormatE</primary></indexterm>_ZN11QMessageBox13setTextFormatEN2Qt10TextFormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox5aboutEP7QWidgetRK7QStringS4_</primary></indexterm>_ZN11QMessageBox5aboutEP7QWidgetRK7QStringS4_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox7aboutQtEP7QWidgetRK7QString</primary></indexterm>_ZN11QMessageBox7aboutQtEP7QWidgetRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox7setIconENS_4IconE</primary></indexterm>_ZN11QMessageBox7setIconENS_4IconE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox7setTextERK7QString</primary></indexterm>_ZN11QMessageBox7setTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox7warningEP7QWidgetRK7QStringS4_S4_S4_S4_ii</primary></indexterm>_ZN11QMessageBox7warningEP7QWidgetRK7QStringS4_S4_S4_S4_ii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox7warningEP7QWidgetRK7QStringS4_iii</primary></indexterm>_ZN11QMessageBox7warningEP7QWidgetRK7QStringS4_iii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox8criticalEP7QWidgetRK7QStringS4_S4_S4_S4_ii</primary></indexterm>_ZN11QMessageBox8criticalEP7QWidgetRK7QStringS4_S4_S4_S4_ii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox8criticalEP7QWidgetRK7QStringS4_iii</primary></indexterm>_ZN11QMessageBox8criticalEP7QWidgetRK7QStringS4_iii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox8questionEP7QWidgetRK7QStringS4_S4_S4_S4_ii</primary></indexterm>_ZN11QMessageBox8questionEP7QWidgetRK7QStringS4_S4_S4_S4_ii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox8questionEP7QWidgetRK7QStringS4_iii</primary></indexterm>_ZN11QMessageBox8questionEP7QWidgetRK7QStringS4_iii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBox9showEventEP10QShowEvent</primary></indexterm>_ZN11QMessageBox9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBoxC1EP7QWidget</primary></indexterm>_ZN11QMessageBoxC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBoxC1EP7QWidgetPKc</primary></indexterm>_ZN11QMessageBoxC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBoxC1ERK7QStringS2_NS_4IconEiiiP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QMessageBoxC1ERK7QStringS2_NS_4IconEiiiP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBoxC1ERK7QStringS2_NS_4IconEiiiP7QWidgetPKcb6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QMessageBoxC1ERK7QStringS2_NS_4IconEiiiP7QWidgetPKcb6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBoxC2EP7QWidget</primary></indexterm>_ZN11QMessageBoxC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBoxC2EP7QWidgetPKc</primary></indexterm>_ZN11QMessageBoxC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBoxC2ERK7QStringS2_NS_4IconEiiiP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QMessageBoxC2ERK7QStringS2_NS_4IconEiiiP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBoxC2ERK7QStringS2_NS_4IconEiiiP7QWidgetPKcb6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN11QMessageBoxC2ERK7QStringS2_NS_4IconEiiiP7QWidgetPKcb6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBoxD0Ev</primary></indexterm>_ZN11QMessageBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMessageBoxD1Ev</primary></indexterm>_ZN11QMessageBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBoxD2Ev</primary></indexterm>_ZN11QMessageBoxD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMimeSourceD0Ev</primary></indexterm>_ZN11QMimeSourceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMimeSourceD1Ev</primary></indexterm>_ZN11QMimeSourceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMimeSourceD2Ev</primary></indexterm>_ZN11QMimeSourceD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMotifStyle10timerEventEP11QTimerEvent</primary></indexterm>_ZN11QMotifStyle10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMotifStyle11eventFilterEP7QObjectP6QEvent</primary></indexterm>_ZN11QMotifStyle11eventFilterEP7QObjectP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMotifStyle11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QMotifStyle11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMotifStyle11qt_metacastEPKc</primary></indexterm>_ZN11QMotifStyle11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMotifStyle21setUseHighlightColorsEb</primary></indexterm>_ZN11QMotifStyle21setUseHighlightColorsEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMotifStyle5eventEP6QEvent</primary></indexterm>_ZN11QMotifStyle5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMotifStyle6polishEP12QApplication</primary></indexterm>_ZN11QMotifStyle6polishEP12QApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMotifStyle6polishEP7QWidget</primary></indexterm>_ZN11QMotifStyle6polishEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMotifStyle6polishER8QPalette</primary></indexterm>_ZN11QMotifStyle6polishER8QPalette <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMotifStyle8unpolishEP12QApplication</primary></indexterm>_ZN11QMotifStyle8unpolishEP12QApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMotifStyle8unpolishEP7QWidget</primary></indexterm>_ZN11QMotifStyle8unpolishEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMotifStyleC1ER18QMotifStylePrivateb</primary></indexterm>_ZN11QMotifStyleC1ER18QMotifStylePrivateb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMotifStyleC1Eb</primary></indexterm>_ZN11QMotifStyleC1Eb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMotifStyleC2ER18QMotifStylePrivateb</primary></indexterm>_ZN11QMotifStyleC2ER18QMotifStylePrivateb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMotifStyleC2Eb</primary></indexterm>_ZN11QMotifStyleC2Eb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMotifStyleD0Ev</primary></indexterm>_ZN11QMotifStyleD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMotifStyleD1Ev</primary></indexterm>_ZN11QMotifStyleD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMotifStyleD2Ev</primary></indexterm>_ZN11QMotifStyleD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMouseEventC1EN6QEvent4TypeERK6QPointN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE</primary></indexterm>_ZN11QMouseEventC1EN6QEvent4TypeERK6QPointN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMouseEventC1EN6QEvent4TypeERK6QPointS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE</primary></indexterm>_ZN11QMouseEventC1EN6QEvent4TypeERK6QPointS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMouseEventC1EN6QEvent4TypeERK6QPointS4_ii</primary></indexterm>_ZN11QMouseEventC1EN6QEvent4TypeERK6QPointS4_ii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMouseEventC1EN6QEvent4TypeERK6QPointii</primary></indexterm>_ZN11QMouseEventC1EN6QEvent4TypeERK6QPointii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMouseEventC2EN6QEvent4TypeERK6QPointN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE</primary></indexterm>_ZN11QMouseEventC2EN6QEvent4TypeERK6QPointN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMouseEventC2EN6QEvent4TypeERK6QPointS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE</primary></indexterm>_ZN11QMouseEventC2EN6QEvent4TypeERK6QPointS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMouseEventC2EN6QEvent4TypeERK6QPointS4_ii</primary></indexterm>_ZN11QMouseEventC2EN6QEvent4TypeERK6QPointS4_ii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMouseEventC2EN6QEvent4TypeERK6QPointii</primary></indexterm>_ZN11QMouseEventC2EN6QEvent4TypeERK6QPointii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMouseEventD0Ev</primary></indexterm>_ZN11QMouseEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMouseEventD1Ev</primary></indexterm>_ZN11QMouseEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMouseEventD2Ev</primary></indexterm>_ZN11QMouseEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPaintEventC1ERK5QRect</primary></indexterm>_ZN11QPaintEventC1ERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPaintEventC1ERK7QRegion</primary></indexterm>_ZN11QPaintEventC1ERK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPaintEventC1ERK7QRegionRK5QRect</primary></indexterm>_ZN11QPaintEventC1ERK7QRegionRK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPaintEventC2ERK5QRect</primary></indexterm>_ZN11QPaintEventC2ERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPaintEventC2ERK7QRegion</primary></indexterm>_ZN11QPaintEventC2ERK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPaintEventC2ERK7QRegionRK5QRect</primary></indexterm>_ZN11QPaintEventC2ERK7QRegionRK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPaintEventD0Ev</primary></indexterm>_ZN11QPaintEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPaintEventD1Ev</primary></indexterm>_ZN11QPaintEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPaintEventD2Ev</primary></indexterm>_ZN11QPaintEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QProxyModel10insertRowsEiiRK11QModelIndex</primary></indexterm>_ZN11QProxyModel10insertRowsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QProxyModel11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QProxyModel11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QProxyModel11qt_metacastEPKc</primary></indexterm>_ZN11QProxyModel11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QProxyModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex</primary></indexterm>_ZN11QProxyModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QProxyModel13insertColumnsEiiRK11QModelIndex</primary></indexterm>_ZN11QProxyModel13insertColumnsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QProxyModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti</primary></indexterm>_ZN11QProxyModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QProxyModel4sortEiN2Qt9SortOrderE</primary></indexterm>_ZN11QProxyModel4sortEiN2Qt9SortOrderE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QProxyModel6revertEv</primary></indexterm>_ZN11QProxyModel6revertEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QProxyModel6submitEv</primary></indexterm>_ZN11QProxyModel6submitEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QProxyModel7setDataERK11QModelIndexRK8QVarianti</primary></indexterm>_ZN11QProxyModel7setDataERK11QModelIndexRK8QVarianti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QProxyModel8setModelEP18QAbstractItemModel</primary></indexterm>_ZN11QProxyModel8setModelEP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QProxyModel9fetchMoreERK11QModelIndex</primary></indexterm>_ZN11QProxyModel9fetchMoreERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QProxyModelC1EP7QObject</primary></indexterm>_ZN11QProxyModelC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QProxyModelC1ER18QProxyModelPrivateP7QObject</primary></indexterm>_ZN11QProxyModelC1ER18QProxyModelPrivateP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QProxyModelC2EP7QObject</primary></indexterm>_ZN11QProxyModelC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QProxyModelC2ER18QProxyModelPrivateP7QObject</primary></indexterm>_ZN11QProxyModelC2ER18QProxyModelPrivateP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QProxyModelD0Ev</primary></indexterm>_ZN11QProxyModelD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QProxyModelD1Ev</primary></indexterm>_ZN11QProxyModelD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QProxyModelD2Ev</primary></indexterm>_ZN11QProxyModelD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButton10paintEventEP11QPaintEvent</primary></indexterm>_ZN11QPushButton10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButton10setDefaultEb</primary></indexterm>_ZN11QPushButton10setDefaultEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButton11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QPushButton11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButton11qt_metacastEPKc</primary></indexterm>_ZN11QPushButton11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButton12focusInEventEP11QFocusEvent</primary></indexterm>_ZN11QPushButton12focusInEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButton13focusOutEventEP11QFocusEvent</primary></indexterm>_ZN11QPushButton13focusOutEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButton13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN11QPushButton13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButton14setAutoDefaultEb</primary></indexterm>_ZN11QPushButton14setAutoDefaultEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButton5eventEP6QEvent</primary></indexterm>_ZN11QPushButton5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButton7setFlatEb</primary></indexterm>_ZN11QPushButton7setFlatEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButton7setMenuEP5QMenu</primary></indexterm>_ZN11QPushButton7setMenuEP5QMenu <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButton8showMenuEv</primary></indexterm>_ZN11QPushButton8showMenuEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButtonC1EP7QWidget</primary></indexterm>_ZN11QPushButtonC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButtonC1EP7QWidgetPKc</primary></indexterm>_ZN11QPushButtonC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButtonC1ERK5QIconRK7QStringP7QWidget</primary></indexterm>_ZN11QPushButtonC1ERK5QIconRK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButtonC1ERK5QIconRK7QStringP7QWidgetPKc</primary></indexterm>_ZN11QPushButtonC1ERK5QIconRK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButtonC1ERK7QStringP7QWidget</primary></indexterm>_ZN11QPushButtonC1ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButtonC1ERK7QStringP7QWidgetPKc</primary></indexterm>_ZN11QPushButtonC1ERK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButtonC2EP7QWidget</primary></indexterm>_ZN11QPushButtonC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButtonC2EP7QWidgetPKc</primary></indexterm>_ZN11QPushButtonC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButtonC2ERK5QIconRK7QStringP7QWidget</primary></indexterm>_ZN11QPushButtonC2ERK5QIconRK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButtonC2ERK5QIconRK7QStringP7QWidgetPKc</primary></indexterm>_ZN11QPushButtonC2ERK5QIconRK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButtonC2ERK7QStringP7QWidget</primary></indexterm>_ZN11QPushButtonC2ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButtonC2ERK7QStringP7QWidgetPKc</primary></indexterm>_ZN11QPushButtonC2ERK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButtonD0Ev</primary></indexterm>_ZN11QPushButtonD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QPushButtonD1Ev</primary></indexterm>_ZN11QPushButtonD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButtonD2Ev</primary></indexterm>_ZN11QPushButtonD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QRubberBand10paintEventEP11QPaintEvent</primary></indexterm>_ZN11QRubberBand10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QRubberBand11changeEventEP6QEvent</primary></indexterm>_ZN11QRubberBand11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QRubberBand11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QRubberBand11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QRubberBand11qt_metacastEPKc</primary></indexterm>_ZN11QRubberBand11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QRubberBand11resizeEventEP12QResizeEvent</primary></indexterm>_ZN11QRubberBand11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QRubberBand11setGeometryERK5QRect</primary></indexterm>_ZN11QRubberBand11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QRubberBand5eventEP6QEvent</primary></indexterm>_ZN11QRubberBand5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QRubberBand9moveEventEP10QMoveEvent</primary></indexterm>_ZN11QRubberBand9moveEventEP10QMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QRubberBand9showEventEP10QShowEvent</primary></indexterm>_ZN11QRubberBand9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QRubberBandC1ENS_5ShapeEP7QWidget</primary></indexterm>_ZN11QRubberBandC1ENS_5ShapeEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QRubberBandC2ENS_5ShapeEP7QWidget</primary></indexterm>_ZN11QRubberBandC2ENS_5ShapeEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QRubberBandD0Ev</primary></indexterm>_ZN11QRubberBandD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QRubberBandD1Ev</primary></indexterm>_ZN11QRubberBandD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QRubberBandD2Ev</primary></indexterm>_ZN11QRubberBandD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QScrollArea10takeWidgetEv</primary></indexterm>_ZN11QScrollArea10takeWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QScrollArea11eventFilterEP7QObjectP6QEvent</primary></indexterm>_ZN11QScrollArea11eventFilterEP7QObjectP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QScrollArea11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QScrollArea11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QScrollArea11qt_metacastEPKc</primary></indexterm>_ZN11QScrollArea11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QScrollArea11resizeEventEP12QResizeEvent</primary></indexterm>_ZN11QScrollArea11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QScrollArea13ensureVisibleEiiii</primary></indexterm>_ZN11QScrollArea13ensureVisibleEiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QScrollArea16scrollContentsByEii</primary></indexterm>_ZN11QScrollArea16scrollContentsByEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QScrollArea18focusNextPrevChildEb</primary></indexterm>_ZN11QScrollArea18focusNextPrevChildEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QScrollArea18setWidgetResizableEb</primary></indexterm>_ZN11QScrollArea18setWidgetResizableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QScrollArea5eventEP6QEvent</primary></indexterm>_ZN11QScrollArea5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QScrollArea9setWidgetEP7QWidget</primary></indexterm>_ZN11QScrollArea9setWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QScrollAreaC1EP7QWidget</primary></indexterm>_ZN11QScrollAreaC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QScrollAreaC2EP7QWidget</primary></indexterm>_ZN11QScrollAreaC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QScrollAreaD0Ev</primary></indexterm>_ZN11QScrollAreaD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QScrollAreaD1Ev</primary></indexterm>_ZN11QScrollAreaD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QScrollAreaD2Ev</primary></indexterm>_ZN11QScrollAreaD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QSpacerItem10changeSizeEiiN11QSizePolicy6PolicyES1_</primary></indexterm>_ZN11QSpacerItem10changeSizeEiiN11QSizePolicy6PolicyES1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QSpacerItem10spacerItemEv</primary></indexterm>_ZN11QSpacerItem10spacerItemEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QSpacerItem11setGeometryERK5QRect</primary></indexterm>_ZN11QSpacerItem11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QSpacerItemD0Ev</primary></indexterm>_ZN11QSpacerItemD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QSpacerItemD1Ev</primary></indexterm>_ZN11QSpacerItemD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor10createListEN15QTextListFormat5StyleE</primary></indexterm>_ZN11QTextCursor10createListEN15QTextListFormat5StyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor10createListERK15QTextListFormat</primary></indexterm>_ZN11QTextCursor10createListERK15QTextListFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor10deleteCharEv</primary></indexterm>_ZN11QTextCursor10deleteCharEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor10insertListEN15QTextListFormat5StyleE</primary></indexterm>_ZN11QTextCursor10insertListEN15QTextListFormat5StyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor10insertListERK15QTextListFormat</primary></indexterm>_ZN11QTextCursor10insertListERK15QTextListFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor10insertTextERK7QString</primary></indexterm>_ZN11QTextCursor10insertTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor10insertTextERK7QStringRK15QTextCharFormat</primary></indexterm>_ZN11QTextCursor10insertTextERK7QStringRK15QTextCharFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor11insertBlockERK16QTextBlockFormat</primary></indexterm>_ZN11QTextCursor11insertBlockERK16QTextBlockFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor11insertBlockERK16QTextBlockFormatRK15QTextCharFormat</primary></indexterm>_ZN11QTextCursor11insertBlockERK16QTextBlockFormatRK15QTextCharFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor11insertBlockEv</primary></indexterm>_ZN11QTextCursor11insertBlockEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor11insertFrameERK16QTextFrameFormat</primary></indexterm>_ZN11QTextCursor11insertFrameERK16QTextFrameFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor11insertImageERK16QTextImageFormat</primary></indexterm>_ZN11QTextCursor11insertImageERK16QTextImageFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor11insertImageERK7QString</primary></indexterm>_ZN11QTextCursor11insertImageERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor11insertTableEii</primary></indexterm>_ZN11QTextCursor11insertTableEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor11insertTableEiiRK16QTextTableFormat</primary></indexterm>_ZN11QTextCursor11insertTableEiiRK16QTextTableFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor11setPositionEiNS_8MoveModeE</primary></indexterm>_ZN11QTextCursor11setPositionEiNS_8MoveModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor12endEditBlockEv</primary></indexterm>_ZN11QTextCursor12endEditBlockEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor12movePositionENS_13MoveOperationENS_8MoveModeEi</primary></indexterm>_ZN11QTextCursor12movePositionENS_13MoveOperationENS_8MoveModeEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor13setCharFormatERK15QTextCharFormat</primary></indexterm>_ZN11QTextCursor13setCharFormatERK15QTextCharFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor14beginEditBlockEv</primary></indexterm>_ZN11QTextCursor14beginEditBlockEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor14clearSelectionEv</primary></indexterm>_ZN11QTextCursor14clearSelectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor14insertFragmentERK21QTextDocumentFragment</primary></indexterm>_ZN11QTextCursor14insertFragmentERK21QTextDocumentFragment <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor14setBlockFormatERK16QTextBlockFormat</primary></indexterm>_ZN11QTextCursor14setBlockFormatERK16QTextBlockFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor15mergeCharFormatERK15QTextCharFormat</primary></indexterm>_ZN11QTextCursor15mergeCharFormatERK15QTextCharFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor16mergeBlockFormatERK16QTextBlockFormat</primary></indexterm>_ZN11QTextCursor16mergeBlockFormatERK16QTextBlockFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor18deletePreviousCharEv</primary></indexterm>_ZN11QTextCursor18deletePreviousCharEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor18removeSelectedTextEv</primary></indexterm>_ZN11QTextCursor18removeSelectedTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor18setBlockCharFormatERK15QTextCharFormat</primary></indexterm>_ZN11QTextCursor18setBlockCharFormatERK15QTextCharFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor20mergeBlockCharFormatERK15QTextCharFormat</primary></indexterm>_ZN11QTextCursor20mergeBlockCharFormatERK15QTextCharFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursor21joinPreviousEditBlockEv</primary></indexterm>_ZN11QTextCursor21joinPreviousEditBlockEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursor6selectENS_13SelectionTypeE</primary></indexterm>_ZN11QTextCursor6selectENS_13SelectionTypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursorC1EP10QTextFrame</primary></indexterm>_ZN11QTextCursorC1EP10QTextFrame <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursorC1EP13QTextDocument</primary></indexterm>_ZN11QTextCursorC1EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursorC1EP18QTextCursorPrivate</primary></indexterm>_ZN11QTextCursorC1EP18QTextCursorPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursorC1EP20QTextDocumentPrivatei</primary></indexterm>_ZN11QTextCursorC1EP20QTextDocumentPrivatei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursorC1ERK10QTextBlock</primary></indexterm>_ZN11QTextCursorC1ERK10QTextBlock <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursorC1ERKS_</primary></indexterm>_ZN11QTextCursorC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursorC1Ev</primary></indexterm>_ZN11QTextCursorC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursorC2EP10QTextFrame</primary></indexterm>_ZN11QTextCursorC2EP10QTextFrame <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursorC2EP13QTextDocument</primary></indexterm>_ZN11QTextCursorC2EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursorC2EP18QTextCursorPrivate</primary></indexterm>_ZN11QTextCursorC2EP18QTextCursorPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursorC2EP20QTextDocumentPrivatei</primary></indexterm>_ZN11QTextCursorC2EP20QTextDocumentPrivatei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursorC2ERK10QTextBlock</primary></indexterm>_ZN11QTextCursorC2ERK10QTextBlock <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursorC2ERKS_</primary></indexterm>_ZN11QTextCursorC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursorC2Ev</primary></indexterm>_ZN11QTextCursorC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursorD1Ev</primary></indexterm>_ZN11QTextCursorD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextCursorD2Ev</primary></indexterm>_ZN11QTextCursorD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextCursoraSERKS_</primary></indexterm>_ZN11QTextCursoraSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextFormat11setPropertyEiRK7QVectorI11QTextLengthE</primary></indexterm>_ZN11QTextFormat11setPropertyEiRK7QVectorI11QTextLengthE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextFormat11setPropertyEiRK8QVariant</primary></indexterm>_ZN11QTextFormat11setPropertyEiRK8QVariant <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextFormat13clearPropertyEi</primary></indexterm>_ZN11QTextFormat13clearPropertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextFormat14setObjectIndexEi</primary></indexterm>_ZN11QTextFormat14setObjectIndexEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextFormat5mergeERKS_</primary></indexterm>_ZN11QTextFormat5mergeERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextFormatC1ERKS_</primary></indexterm>_ZN11QTextFormatC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextFormatC1Ei</primary></indexterm>_ZN11QTextFormatC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextFormatC1Ev</primary></indexterm>_ZN11QTextFormatC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextFormatC2ERKS_</primary></indexterm>_ZN11QTextFormatC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextFormatC2Ei</primary></indexterm>_ZN11QTextFormatC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextFormatC2Ev</primary></indexterm>_ZN11QTextFormatC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextFormatD1Ev</primary></indexterm>_ZN11QTextFormatD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextFormatD2Ev</primary></indexterm>_ZN11QTextFormatD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextFormataSERKS_</primary></indexterm>_ZN11QTextFormataSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextLayout10createLineEv</primary></indexterm>_ZN11QTextLayout10createLineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextLayout11beginLayoutEv</primary></indexterm>_ZN11QTextLayout11beginLayoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextLayout11setPositionERK7QPointF</primary></indexterm>_ZN11QTextLayout11setPositionERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextLayout13setTextOptionERK11QTextOption</primary></indexterm>_ZN11QTextLayout13setTextOptionERK11QTextOption <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextLayout14setPreeditAreaEiRK7QString</primary></indexterm>_ZN11QTextLayout14setPreeditAreaEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextLayout15setCacheEnabledEb</primary></indexterm>_ZN11QTextLayout15setCacheEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextLayout20setAdditionalFormatsERK5QListINS_11FormatRangeEE</primary></indexterm>_ZN11QTextLayout20setAdditionalFormatsERK5QListINS_11FormatRangeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextLayout22clearAdditionalFormatsEv</primary></indexterm>_ZN11QTextLayout22clearAdditionalFormatsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextLayout7setFontERK5QFont</primary></indexterm>_ZN11QTextLayout7setFontERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextLayout7setTextERK7QString</primary></indexterm>_ZN11QTextLayout7setTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextLayout9endLayoutEv</primary></indexterm>_ZN11QTextLayout9endLayoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextLayoutC1ERK10QTextBlock</primary></indexterm>_ZN11QTextLayoutC1ERK10QTextBlock <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextLayoutC1ERK7QString</primary></indexterm>_ZN11QTextLayoutC1ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextLayoutC1ERK7QStringRK5QFontP12QPaintDevice</primary></indexterm>_ZN11QTextLayoutC1ERK7QStringRK5QFontP12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextLayoutC1Ev</primary></indexterm>_ZN11QTextLayoutC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextLayoutC2ERK10QTextBlock</primary></indexterm>_ZN11QTextLayoutC2ERK10QTextBlock <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextLayoutC2ERK7QString</primary></indexterm>_ZN11QTextLayoutC2ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextLayoutC2ERK7QStringRK5QFontP12QPaintDevice</primary></indexterm>_ZN11QTextLayoutC2ERK7QStringRK5QFontP12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextLayoutC2Ev</primary></indexterm>_ZN11QTextLayoutC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextLayoutD1Ev</primary></indexterm>_ZN11QTextLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextLayoutD2Ev</primary></indexterm>_ZN11QTextLayoutD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextObject11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QTextObject11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextObject11qt_metacastEPKc</primary></indexterm>_ZN11QTextObject11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextObject9setFormatERK11QTextFormat</primary></indexterm>_ZN11QTextObject9setFormatERK11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextObjectC1EP13QTextDocument</primary></indexterm>_ZN11QTextObjectC1EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextObjectC1ER18QTextObjectPrivateP13QTextDocument</primary></indexterm>_ZN11QTextObjectC1ER18QTextObjectPrivateP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextObjectC2EP13QTextDocument</primary></indexterm>_ZN11QTextObjectC2EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextObjectC2ER18QTextObjectPrivateP13QTextDocument</primary></indexterm>_ZN11QTextObjectC2ER18QTextObjectPrivateP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextObjectD0Ev</primary></indexterm>_ZN11QTextObjectD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextObjectD1Ev</primary></indexterm>_ZN11QTextObjectD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextObjectD2Ev</primary></indexterm>_ZN11QTextObjectD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextOption11setTabArrayE5QListIdE</primary></indexterm>_ZN11QTextOption11setTabArrayE5QListIdE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextOptionC1E6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN11QTextOptionC1E6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextOptionC1ERKS_</primary></indexterm>_ZN11QTextOptionC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextOptionC1Ev</primary></indexterm>_ZN11QTextOptionC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextOptionC2E6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN11QTextOptionC2E6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextOptionC2ERKS_</primary></indexterm>_ZN11QTextOptionC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextOptionC2Ev</primary></indexterm>_ZN11QTextOptionC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextOptionD1Ev</primary></indexterm>_ZN11QTextOptionD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextOptionD2Ev</primary></indexterm>_ZN11QTextOptionD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextOptionaSERKS_</primary></indexterm>_ZN11QTextOptionaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton10enterEventEP6QEvent</primary></indexterm>_ZN11QToolButton10enterEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton10leaveEventEP6QEvent</primary></indexterm>_ZN11QToolButton10leaveEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton10paintEventEP11QPaintEvent</primary></indexterm>_ZN11QToolButton10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton10setIconSetERK5QIconb</primary></indexterm>_ZN11QToolButton10setIconSetERK5QIconb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton10timerEventEP11QTimerEvent</primary></indexterm>_ZN11QToolButton10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton11actionEventEP12QActionEvent</primary></indexterm>_ZN11QToolButton11actionEventEP12QActionEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton11changeEventEP6QEvent</primary></indexterm>_ZN11QToolButton11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QToolButton11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton11qt_metacastEPKc</primary></indexterm>_ZN11QToolButton11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton12setArrowTypeEN2Qt9ArrowTypeE</primary></indexterm>_ZN11QToolButton12setArrowTypeEN2Qt9ArrowTypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton12setAutoRaiseEb</primary></indexterm>_ZN11QToolButton12setAutoRaiseEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton12setOnIconSetERK5QIcon</primary></indexterm>_ZN11QToolButton12setOnIconSetERK5QIcon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton12setPopupModeENS_19ToolButtonPopupModeE</primary></indexterm>_ZN11QToolButton12setPopupModeENS_19ToolButtonPopupModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton13setOffIconSetERK5QIcon</primary></indexterm>_ZN11QToolButton13setOffIconSetERK5QIcon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton13setPopupDelayEi</primary></indexterm>_ZN11QToolButton13setPopupDelayEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton14nextCheckStateEv</primary></indexterm>_ZN11QToolButton14nextCheckStateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN11QToolButton15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton16setDefaultActionEP7QAction</primary></indexterm>_ZN11QToolButton16setDefaultActionEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton18setToolButtonStyleEN2Qt15ToolButtonStyleE</primary></indexterm>_ZN11QToolButton18setToolButtonStyleEN2Qt15ToolButtonStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton5eventEP6QEvent</primary></indexterm>_ZN11QToolButton5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton7setMenuEP5QMenu</primary></indexterm>_ZN11QToolButton7setMenuEP5QMenu <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton8showMenuEv</primary></indexterm>_ZN11QToolButton8showMenuEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButton9triggeredEP7QAction</primary></indexterm>_ZN11QToolButton9triggeredEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButtonC1EN2Qt9ArrowTypeEP7QWidgetPKc</primary></indexterm>_ZN11QToolButtonC1EN2Qt9ArrowTypeEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButtonC1EP7QWidget</primary></indexterm>_ZN11QToolButtonC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButtonC1EP7QWidgetPKc</primary></indexterm>_ZN11QToolButtonC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButtonC1ER18QToolButtonPrivateP7QWidget</primary></indexterm>_ZN11QToolButtonC1ER18QToolButtonPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButtonC1ERK5QIconRK7QStringS5_P7QObjectPKcP7QWidgetS9_</primary></indexterm>_ZN11QToolButtonC1ERK5QIconRK7QStringS5_P7QObjectPKcP7QWidgetS9_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButtonC2EN2Qt9ArrowTypeEP7QWidgetPKc</primary></indexterm>_ZN11QToolButtonC2EN2Qt9ArrowTypeEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButtonC2EP7QWidget</primary></indexterm>_ZN11QToolButtonC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButtonC2EP7QWidgetPKc</primary></indexterm>_ZN11QToolButtonC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButtonC2ER18QToolButtonPrivateP7QWidget</primary></indexterm>_ZN11QToolButtonC2ER18QToolButtonPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButtonC2ERK5QIconRK7QStringS5_P7QObjectPKcP7QWidgetS9_</primary></indexterm>_ZN11QToolButtonC2ERK5QIconRK7QStringS5_P7QObjectPKcP7QWidgetS9_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButtonD0Ev</primary></indexterm>_ZN11QToolButtonD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QToolButtonD1Ev</primary></indexterm>_ZN11QToolButtonD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButtonD2Ev</primary></indexterm>_ZN11QToolButtonD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget10expandItemEPK15QTreeWidgetItem</primary></indexterm>_ZN11QTreeWidget10expandItemEPK15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget11itemChangedEP15QTreeWidgetItemi</primary></indexterm>_ZN11QTreeWidget11itemChangedEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget11itemClickedEP15QTreeWidgetItemi</primary></indexterm>_ZN11QTreeWidget11itemClickedEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget11itemEnteredEP15QTreeWidgetItemi</primary></indexterm>_ZN11QTreeWidget11itemEnteredEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget11itemPressedEP15QTreeWidgetItemi</primary></indexterm>_ZN11QTreeWidget11itemPressedEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QTreeWidget11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget11qt_metacastEPKc</primary></indexterm>_ZN11QTreeWidget11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget12collapseItemEPK15QTreeWidgetItem</primary></indexterm>_ZN11QTreeWidget12collapseItemEPK15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget12dropMimeDataEP15QTreeWidgetItemiPK9QMimeDataN2Qt10DropActionE</primary></indexterm>_ZN11QTreeWidget12dropMimeDataEP15QTreeWidgetItemiPK9QMimeDataN2Qt10DropActionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget12itemExpandedEP15QTreeWidgetItem</primary></indexterm>_ZN11QTreeWidget12itemExpandedEP15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget12scrollToItemEPK15QTreeWidgetItemN17QAbstractItemView10ScrollHintE</primary></indexterm>_ZN11QTreeWidget12scrollToItemEPK15QTreeWidgetItemN17QAbstractItemView10ScrollHintE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget13itemActivatedEP15QTreeWidgetItemi</primary></indexterm>_ZN11QTreeWidget13itemActivatedEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget13itemCollapsedEP15QTreeWidgetItem</primary></indexterm>_ZN11QTreeWidget13itemCollapsedEP15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget13setHeaderItemEP15QTreeWidgetItem</primary></indexterm>_ZN11QTreeWidget13setHeaderItemEP15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget13setItemHiddenEPK15QTreeWidgetItemb</primary></indexterm>_ZN11QTreeWidget13setItemHiddenEPK15QTreeWidgetItemb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget13setItemWidgetEP15QTreeWidgetItemiP7QWidget</primary></indexterm>_ZN11QTreeWidget13setItemWidgetEP15QTreeWidgetItemiP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget14setColumnCountEi</primary></indexterm>_ZN11QTreeWidget14setColumnCountEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget14setCurrentItemEP15QTreeWidgetItem</primary></indexterm>_ZN11QTreeWidget14setCurrentItemEP15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget14setCurrentItemEP15QTreeWidgetItemi</primary></indexterm>_ZN11QTreeWidget14setCurrentItemEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget15addTopLevelItemEP15QTreeWidgetItem</primary></indexterm>_ZN11QTreeWidget15addTopLevelItemEP15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget15setHeaderLabelsERK11QStringList</primary></indexterm>_ZN11QTreeWidget15setHeaderLabelsERK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget15setItemExpandedEPK15QTreeWidgetItemb</primary></indexterm>_ZN11QTreeWidget15setItemExpandedEPK15QTreeWidgetItemb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget15setItemSelectedEPK15QTreeWidgetItemb</primary></indexterm>_ZN11QTreeWidget15setItemSelectedEPK15QTreeWidgetItemb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget16addTopLevelItemsERK5QListIP15QTreeWidgetItemE</primary></indexterm>_ZN11QTreeWidget16addTopLevelItemsERK5QListIP15QTreeWidgetItemE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget16takeTopLevelItemEi</primary></indexterm>_ZN11QTreeWidget16takeTopLevelItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget17itemDoubleClickedEP15QTreeWidgetItemi</primary></indexterm>_ZN11QTreeWidget17itemDoubleClickedEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget17setSortingEnabledEb</primary></indexterm>_ZN11QTreeWidget17setSortingEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget18currentItemChangedEP15QTreeWidgetItemS1_</primary></indexterm>_ZN11QTreeWidget18currentItemChangedEP15QTreeWidgetItemS1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget18insertTopLevelItemEiP15QTreeWidgetItem</primary></indexterm>_ZN11QTreeWidget18insertTopLevelItemEiP15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget19indexOfTopLevelItemEP15QTreeWidgetItem</primary></indexterm>_ZN11QTreeWidget19indexOfTopLevelItemEP15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget19insertTopLevelItemsEiRK5QListIP15QTreeWidgetItemE</primary></indexterm>_ZN11QTreeWidget19insertTopLevelItemsEiRK5QListIP15QTreeWidgetItemE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget20itemSelectionChangedEv</primary></indexterm>_ZN11QTreeWidget20itemSelectionChangedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget20openPersistentEditorEP15QTreeWidgetItemi</primary></indexterm>_ZN11QTreeWidget20openPersistentEditorEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget21closePersistentEditorEP15QTreeWidgetItemi</primary></indexterm>_ZN11QTreeWidget21closePersistentEditorEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget5clearEv</primary></indexterm>_ZN11QTreeWidget5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget5eventEP6QEvent</primary></indexterm>_ZN11QTreeWidget5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget8editItemEP15QTreeWidgetItemi</primary></indexterm>_ZN11QTreeWidget8editItemEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidget8setModelEP18QAbstractItemModel</primary></indexterm>_ZN11QTreeWidget8setModelEP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget9sortItemsEiN2Qt9SortOrderE</primary></indexterm>_ZN11QTreeWidget9sortItemsEiN2Qt9SortOrderE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidgetC1EP7QWidget</primary></indexterm>_ZN11QTreeWidgetC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidgetC2EP7QWidget</primary></indexterm>_ZN11QTreeWidgetC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidgetD0Ev</primary></indexterm>_ZN11QTreeWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidgetD1Ev</primary></indexterm>_ZN11QTreeWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTreeWidgetD2Ev</primary></indexterm>_ZN11QTreeWidgetD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QVBoxLayout11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN11QVBoxLayout11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QVBoxLayout11qt_metacastEPKc</primary></indexterm>_ZN11QVBoxLayout11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutC1EP7QLayoutiPKc</primary></indexterm>_ZN11QVBoxLayoutC1EP7QLayoutiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutC1EP7QWidget</primary></indexterm>_ZN11QVBoxLayoutC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutC1EP7QWidgetiiPKc</primary></indexterm>_ZN11QVBoxLayoutC1EP7QWidgetiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutC1EiPKc</primary></indexterm>_ZN11QVBoxLayoutC1EiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutC1Ev</primary></indexterm>_ZN11QVBoxLayoutC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutC2EP7QLayoutiPKc</primary></indexterm>_ZN11QVBoxLayoutC2EP7QLayoutiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutC2EP7QWidget</primary></indexterm>_ZN11QVBoxLayoutC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutC2EP7QWidgetiiPKc</primary></indexterm>_ZN11QVBoxLayoutC2EP7QWidgetiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutC2EiPKc</primary></indexterm>_ZN11QVBoxLayoutC2EiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutC2Ev</primary></indexterm>_ZN11QVBoxLayoutC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutD0Ev</primary></indexterm>_ZN11QVBoxLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutD1Ev</primary></indexterm>_ZN11QVBoxLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QVBoxLayoutD2Ev</primary></indexterm>_ZN11QVBoxLayoutD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QWheelEventC1ERK6QPointS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE</primary></indexterm>_ZN11QWheelEventC1ERK6QPointS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QWheelEventC1ERK6QPointS2_iiN2Qt11OrientationE</primary></indexterm>_ZN11QWheelEventC1ERK6QPointS2_iiN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QWheelEventC1ERK6QPointi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE</primary></indexterm>_ZN11QWheelEventC1ERK6QPointi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QWheelEventC1ERK6QPointiiN2Qt11OrientationE</primary></indexterm>_ZN11QWheelEventC1ERK6QPointiiN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QWheelEventC2ERK6QPointS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE</primary></indexterm>_ZN11QWheelEventC2ERK6QPointS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QWheelEventC2ERK6QPointS2_iiN2Qt11OrientationE</primary></indexterm>_ZN11QWheelEventC2ERK6QPointS2_iiN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QWheelEventC2ERK6QPointi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE</primary></indexterm>_ZN11QWheelEventC2ERK6QPointi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QWheelEventC2ERK6QPointiiN2Qt11OrientationE</primary></indexterm>_ZN11QWheelEventC2ERK6QPointiiN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QWheelEventD0Ev</primary></indexterm>_ZN11QWheelEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QWheelEventD1Ev</primary></indexterm>_ZN11QWheelEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QWheelEventD2Ev</primary></indexterm>_ZN11QWheelEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QWidgetItem11setGeometryERK5QRect</primary></indexterm>_ZN11QWidgetItem11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QWidgetItem6widgetEv</primary></indexterm>_ZN11QWidgetItem6widgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QWidgetItemD0Ev</primary></indexterm>_ZN11QWidgetItemD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QWidgetItemD1Ev</primary></indexterm>_ZN11QWidgetItemD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionEventC1EiP7QActionS1_</primary></indexterm>_ZN12QActionEventC1EiP7QActionS1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QActionEventC2EiP7QActionS1_</primary></indexterm>_ZN12QActionEventC2EiP7QActionS1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionEventD0Ev</primary></indexterm>_ZN12QActionEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QActionEventD1Ev</primary></indexterm>_ZN12QActionEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionEventD2Ev</primary></indexterm>_ZN12QActionEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QActionGroup10setEnabledEb</primary></indexterm>_ZN12QActionGroup10setEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionGroup10setVisibleEb</primary></indexterm>_ZN12QActionGroup10setVisibleEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QActionGroup11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QActionGroup11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionGroup11qt_metacastEPKc</primary></indexterm>_ZN12QActionGroup11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QActionGroup12removeActionEP7QAction</primary></indexterm>_ZN12QActionGroup12removeActionEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionGroup12setExclusiveEb</primary></indexterm>_ZN12QActionGroup12setExclusiveEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QActionGroup7hoveredEP7QAction</primary></indexterm>_ZN12QActionGroup7hoveredEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionGroup8selectedEP7QAction</primary></indexterm>_ZN12QActionGroup8selectedEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QActionGroup9addActionEP7QAction</primary></indexterm>_ZN12QActionGroup9addActionEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionGroup9addActionERK5QIconRK7QString</primary></indexterm>_ZN12QActionGroup9addActionERK5QIconRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QActionGroup9addActionERK7QString</primary></indexterm>_ZN12QActionGroup9addActionERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionGroup9triggeredEP7QAction</primary></indexterm>_ZN12QActionGroup9triggeredEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QActionGroupC1EP7QObject</primary></indexterm>_ZN12QActionGroupC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionGroupC2EP7QObject</primary></indexterm>_ZN12QActionGroupC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QActionGroupD0Ev</primary></indexterm>_ZN12QActionGroupD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionGroupD1Ev</primary></indexterm>_ZN12QActionGroupD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QActionGroupD2Ev</primary></indexterm>_ZN12QActionGroupD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication10allWidgetsEv</primary></indexterm>_ZN12QApplication10allWidgetsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication10commitDataER15QSessionManager</primary></indexterm>_ZN12QApplication10commitDataER15QSessionManager <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication10mainWidgetEv</primary></indexterm>_ZN12QApplication10mainWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication10setPaletteERK8QPalettePKc</primary></indexterm>_ZN12QApplication10setPaletteERK8QPalettePKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication10topLevelAtERK6QPoint</primary></indexterm>_ZN12QApplication10topLevelAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication10windowIconEv</primary></indexterm>_ZN12QApplication10windowIconEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication11focusWidgetEv</primary></indexterm>_ZN12QApplication11focusWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication11fontMetricsEv</primary></indexterm>_ZN12QApplication11fontMetricsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication11globalStrutEv</primary></indexterm>_ZN12QApplication11globalStrutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QApplication11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication11qt_metacastEPKc</primary></indexterm>_ZN12QApplication11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication12activeWindowEv</primary></indexterm>_ZN12QApplication12activeWindowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication12focusChangedEP7QWidgetS1_</primary></indexterm>_ZN12QApplication12focusChangedEP7QWidgetS1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication12mouseButtonsEv</primary></indexterm>_ZN12QApplication12mouseButtonsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication12setColorSpecEi</primary></indexterm>_ZN12QApplication12setColorSpecEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication13compressEventEP6QEventP7QObjectP14QPostEventList</primary></indexterm>_ZN12QApplication13compressEventEP6QEventP7QObjectP14QPostEventList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication13setMainWidgetEP7QWidget</primary></indexterm>_ZN12QApplication13setMainWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication13setWindowIconERK5QIcon</primary></indexterm>_ZN12QApplication13setWindowIconERK5QIcon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication13startDragTimeEv</primary></indexterm>_ZN12QApplication13startDragTimeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication14overrideCursorEv</primary></indexterm>_ZN12QApplication14overrideCursorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication14setGlobalStrutERK5QSize</primary></indexterm>_ZN12QApplication14setGlobalStrutERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication14x11EventFilterEP7_XEvent</primary></indexterm>_ZN12QApplication14x11EventFilterEP7_XEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication15closeAllWindowsEv</primary></indexterm>_ZN12QApplication15closeAllWindowsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication15cursorFlashTimeEv</primary></indexterm>_ZN12QApplication15cursorFlashTimeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication15isEffectEnabledEN2Qt8UIEffectE</primary></indexterm>_ZN12QApplication15isEffectEnabledEN2Qt8UIEffectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication15layoutDirectionEv</primary></indexterm>_ZN12QApplication15layoutDirectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication15setActiveWindowEP7QWidget</primary></indexterm>_ZN12QApplication15setActiveWindowEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication15setInputContextEP13QInputContext</primary></indexterm>_ZN12QApplication15setInputContextEP13QInputContext <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication15topLevelWidgetsEv</primary></indexterm>_ZN12QApplication15topLevelWidgetsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication15x11ProcessEventEP7_XEvent</primary></indexterm>_ZN12QApplication15x11ProcessEventEP7_XEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication16lastWindowClosedEv</primary></indexterm>_ZN12QApplication16lastWindowClosedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication16setEffectEnabledEN2Qt8UIEffectEb</primary></indexterm>_ZN12QApplication16setEffectEnabledEN2Qt8UIEffectEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication16setStartDragTimeEi</primary></indexterm>_ZN12QApplication16setStartDragTimeEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication16wheelScrollLinesEv</primary></indexterm>_ZN12QApplication16wheelScrollLinesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication16x11ClientMessageEP7QWidgetP7_XEventb</primary></indexterm>_ZN12QApplication16x11ClientMessageEP7QWidgetP7_XEventb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication17activeModalWidgetEv</primary></indexterm>_ZN12QApplication17activeModalWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication17activePopupWidgetEv</primary></indexterm>_ZN12QApplication17activePopupWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication17keyboardModifiersEv</primary></indexterm>_ZN12QApplication17keyboardModifiersEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication17setOverrideCursorERK7QCursor</primary></indexterm>_ZN12QApplication17setOverrideCursorERK7QCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication17startDragDistanceEv</primary></indexterm>_ZN12QApplication17startDragDistanceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication18setCursorFlashTimeEi</primary></indexterm>_ZN12QApplication18setCursorFlashTimeEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication18setLayoutDirectionEN2Qt15LayoutDirectionE</primary></indexterm>_ZN12QApplication18setLayoutDirectionEN2Qt15LayoutDirectionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication19doubleClickIntervalEv</primary></indexterm>_ZN12QApplication19doubleClickIntervalEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication19horizontalAlignmentE6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN12QApplication19horizontalAlignmentE6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication19setWheelScrollLinesEi</primary></indexterm>_ZN12QApplication19setWheelScrollLinesEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication20changeOverrideCursorERK7QCursor</primary></indexterm>_ZN12QApplication20changeOverrideCursorERK7QCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication20desktopSettingsAwareEv</primary></indexterm>_ZN12QApplication20desktopSettingsAwareEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication20setStartDragDistanceEi</primary></indexterm>_ZN12QApplication20setStartDragDistanceEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication21keyboardInputIntervalEv</primary></indexterm>_ZN12QApplication21keyboardInputIntervalEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication21restoreOverrideCursorEv</primary></indexterm>_ZN12QApplication21restoreOverrideCursorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication22quitOnLastWindowClosedEv</primary></indexterm>_ZN12QApplication22quitOnLastWindowClosedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication22setDoubleClickIntervalEi</primary></indexterm>_ZN12QApplication22setDoubleClickIntervalEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication23setDesktopSettingsAwareEb</primary></indexterm>_ZN12QApplication23setDesktopSettingsAwareEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication24setKeyboardInputIntervalEi</primary></indexterm>_ZN12QApplication24setKeyboardInputIntervalEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication25setQuitOnLastWindowClosedEb</primary></indexterm>_ZN12QApplication25setQuitOnLastWindowClosedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication4beepEv</primary></indexterm>_ZN12QApplication4beepEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication4execEv</primary></indexterm>_ZN12QApplication4execEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication4fontEPK7QWidget</primary></indexterm>_ZN12QApplication4fontEPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication4typeEv</primary></indexterm>_ZN12QApplication4typeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication5eventEP6QEvent</primary></indexterm>_ZN12QApplication5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication5styleEv</primary></indexterm>_ZN12QApplication5styleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication5syncXEv</primary></indexterm>_ZN12QApplication5syncXEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication6notifyEP7QObjectP6QEvent</primary></indexterm>_ZN12QApplication6notifyEP7QObjectP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication7aboutQtEv</primary></indexterm>_ZN12QApplication7aboutQtEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication7desktopEv</primary></indexterm>_ZN12QApplication7desktopEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication7paletteEPK7QWidget</primary></indexterm>_ZN12QApplication7paletteEPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication7paletteEPKc</primary></indexterm>_ZN12QApplication7paletteEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication7paletteEv</primary></indexterm>_ZN12QApplication7paletteEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication7setFontERK5QFontPKc</primary></indexterm>_ZN12QApplication7setFontERK5QFontPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication8setStyleEP6QStyle</primary></indexterm>_ZN12QApplication8setStyleEP6QStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication8setStyleERK7QString</primary></indexterm>_ZN12QApplication8setStyleERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication8widgetAtERK6QPoint</primary></indexterm>_ZN12QApplication8widgetAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication9clipboardEv</primary></indexterm>_ZN12QApplication9clipboardEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication9colorSpecEv</primary></indexterm>_ZN12QApplication9colorSpecEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplication9saveStateER15QSessionManager</primary></indexterm>_ZN12QApplication9saveStateER15QSessionManager <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplicationC1EP9_XDisplayRiPPcmm</primary></indexterm>_ZN12QApplicationC1EP9_XDisplayRiPPcmm <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplicationC1EP9_XDisplaymm</primary></indexterm>_ZN12QApplicationC1EP9_XDisplaymm <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplicationC1ERiPPc</primary></indexterm>_ZN12QApplicationC1ERiPPc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplicationC1ERiPPcNS_4TypeE</primary></indexterm>_ZN12QApplicationC1ERiPPcNS_4TypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplicationC1ERiPPcb</primary></indexterm>_ZN12QApplicationC1ERiPPcb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplicationC2EP9_XDisplayRiPPcmm</primary></indexterm>_ZN12QApplicationC2EP9_XDisplayRiPPcmm <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplicationC2EP9_XDisplaymm</primary></indexterm>_ZN12QApplicationC2EP9_XDisplaymm <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplicationC2ERiPPc</primary></indexterm>_ZN12QApplicationC2ERiPPc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplicationC2ERiPPcNS_4TypeE</primary></indexterm>_ZN12QApplicationC2ERiPPcNS_4TypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplicationC2ERiPPcb</primary></indexterm>_ZN12QApplicationC2ERiPPcb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplicationD0Ev</primary></indexterm>_ZN12QApplicationD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QApplicationD1Ev</primary></indexterm>_ZN12QApplicationD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplicationD2Ev</primary></indexterm>_ZN12QApplicationD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QButtonGroup11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QButtonGroup11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QButtonGroup11qt_metacastEPKc</primary></indexterm>_ZN12QButtonGroup11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QButtonGroup12removeButtonEP15QAbstractButton</primary></indexterm>_ZN12QButtonGroup12removeButtonEP15QAbstractButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QButtonGroup12setExclusiveEb</primary></indexterm>_ZN12QButtonGroup12setExclusiveEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QButtonGroup13buttonClickedEP15QAbstractButton</primary></indexterm>_ZN12QButtonGroup13buttonClickedEP15QAbstractButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QButtonGroup13buttonClickedEi</primary></indexterm>_ZN12QButtonGroup13buttonClickedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QButtonGroup5setIdEP15QAbstractButtoni</primary></indexterm>_ZN12QButtonGroup5setIdEP15QAbstractButtoni <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QButtonGroup9addButtonEP15QAbstractButton</primary></indexterm>_ZN12QButtonGroup9addButtonEP15QAbstractButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QButtonGroup9addButtonEP15QAbstractButtoni</primary></indexterm>_ZN12QButtonGroup9addButtonEP15QAbstractButtoni <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QButtonGroupC1EP7QObject</primary></indexterm>_ZN12QButtonGroupC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QButtonGroupC2EP7QObject</primary></indexterm>_ZN12QButtonGroupC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QButtonGroupD0Ev</primary></indexterm>_ZN12QButtonGroupD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QButtonGroupD1Ev</primary></indexterm>_ZN12QButtonGroupD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QButtonGroupD2Ev</primary></indexterm>_ZN12QButtonGroupD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QColorDialog11customColorEi</primary></indexterm>_ZN12QColorDialog11customColorEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QColorDialog11customCountEv</primary></indexterm>_ZN12QColorDialog11customCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QColorDialog11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QColorDialog11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QColorDialog11qt_metacastEPKc</primary></indexterm>_ZN12QColorDialog11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QColorDialog14setCustomColorEij</primary></indexterm>_ZN12QColorDialog14setCustomColorEij <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QColorDialog16setStandardColorEij</primary></indexterm>_ZN12QColorDialog16setStandardColorEij <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QColorDialog7getRgbaEjPbP7QWidget</primary></indexterm>_ZN12QColorDialog7getRgbaEjPbP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QColorDialog8getColorERK6QColorP7QWidget</primary></indexterm>_ZN12QColorDialog8getColorERK6QColorP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QCommonStyle11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QCommonStyle11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QCommonStyle11qt_metacastEPKc</primary></indexterm>_ZN12QCommonStyle11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QCommonStyleC1ER19QCommonStylePrivate</primary></indexterm>_ZN12QCommonStyleC1ER19QCommonStylePrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QCommonStyleC1Ev</primary></indexterm>_ZN12QCommonStyleC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QCommonStyleC2ER19QCommonStylePrivate</primary></indexterm>_ZN12QCommonStyleC2ER19QCommonStylePrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QCommonStyleC2Ev</primary></indexterm>_ZN12QCommonStyleC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QCommonStyleD0Ev</primary></indexterm>_ZN12QCommonStyleD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QCommonStyleD1Ev</primary></indexterm>_ZN12QCommonStyleD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QCommonStyleD2Ev</primary></indexterm>_ZN12QCommonStyleD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QFontMetricsC1ERK5QFont</primary></indexterm>_ZN12QFontMetricsC1ERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QFontMetricsC1ERK5QFontP12QPaintDevice</primary></indexterm>_ZN12QFontMetricsC1ERK5QFontP12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QFontMetricsC1ERKS_</primary></indexterm>_ZN12QFontMetricsC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QFontMetricsC2ERK5QFont</primary></indexterm>_ZN12QFontMetricsC2ERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QFontMetricsC2ERK5QFontP12QPaintDevice</primary></indexterm>_ZN12QFontMetricsC2ERK5QFontP12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QFontMetricsC2ERKS_</primary></indexterm>_ZN12QFontMetricsC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QFontMetricsD1Ev</primary></indexterm>_ZN12QFontMetricsD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QFontMetricsD2Ev</primary></indexterm>_ZN12QFontMetricsD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QFontMetricsaSERKS_</primary></indexterm>_ZN12QFontMetricsaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QFontMetricseqERKS_</primary></indexterm>_ZN12QFontMetricseqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageReader11imageFormatEP9QIODevice</primary></indexterm>_ZN12QImageReader11imageFormatEP9QIODevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageReader11imageFormatERK7QString</primary></indexterm>_ZN12QImageReader11imageFormatERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageReader11jumpToImageEi</primary></indexterm>_ZN12QImageReader11jumpToImageEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageReader11setClipRectERK5QRect</primary></indexterm>_ZN12QImageReader11setClipRectERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageReader11setFileNameERK7QString</primary></indexterm>_ZN12QImageReader11setFileNameERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageReader13setScaledSizeERK5QSize</primary></indexterm>_ZN12QImageReader13setScaledSizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageReader15jumpToNextImageEv</primary></indexterm>_ZN12QImageReader15jumpToNextImageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageReader17setScaledClipRectERK5QRect</primary></indexterm>_ZN12QImageReader17setScaledClipRectERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageReader18setBackgroundColorERK6QColor</primary></indexterm>_ZN12QImageReader18setBackgroundColorERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageReader21supportedImageFormatsEv</primary></indexterm>_ZN12QImageReader21supportedImageFormatsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageReader4readEv</primary></indexterm>_ZN12QImageReader4readEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageReader9setDeviceEP9QIODevice</primary></indexterm>_ZN12QImageReader9setDeviceEP9QIODevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageReader9setFormatERK10QByteArray</primary></indexterm>_ZN12QImageReader9setFormatERK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageReaderC1EP9QIODeviceRK10QByteArray</primary></indexterm>_ZN12QImageReaderC1EP9QIODeviceRK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageReaderC1ERK7QStringRK10QByteArray</primary></indexterm>_ZN12QImageReaderC1ERK7QStringRK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageReaderC1Ev</primary></indexterm>_ZN12QImageReaderC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageReaderC2EP9QIODeviceRK10QByteArray</primary></indexterm>_ZN12QImageReaderC2EP9QIODeviceRK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageReaderC2ERK7QStringRK10QByteArray</primary></indexterm>_ZN12QImageReaderC2ERK7QStringRK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageReaderC2Ev</primary></indexterm>_ZN12QImageReaderC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageReaderD1Ev</primary></indexterm>_ZN12QImageReaderD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageReaderD2Ev</primary></indexterm>_ZN12QImageReaderD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageWriter10setQualityEi</primary></indexterm>_ZN12QImageWriter10setQualityEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageWriter11setFileNameERK7QString</primary></indexterm>_ZN12QImageWriter11setFileNameERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageWriter14setDescriptionERK7QString</primary></indexterm>_ZN12QImageWriter14setDescriptionERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageWriter21supportedImageFormatsEv</primary></indexterm>_ZN12QImageWriter21supportedImageFormatsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageWriter5writeERK6QImage</primary></indexterm>_ZN12QImageWriter5writeERK6QImage <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageWriter7setTextERK7QStringS2_</primary></indexterm>_ZN12QImageWriter7setTextERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageWriter8setGammaEf</primary></indexterm>_ZN12QImageWriter8setGammaEf <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageWriter9setDeviceEP9QIODevice</primary></indexterm>_ZN12QImageWriter9setDeviceEP9QIODevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageWriter9setFormatERK10QByteArray</primary></indexterm>_ZN12QImageWriter9setFormatERK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageWriterC1EP9QIODeviceRK10QByteArray</primary></indexterm>_ZN12QImageWriterC1EP9QIODeviceRK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageWriterC1ERK7QStringRK10QByteArray</primary></indexterm>_ZN12QImageWriterC1ERK7QStringRK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageWriterC1Ev</primary></indexterm>_ZN12QImageWriterC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageWriterC2EP9QIODeviceRK10QByteArray</primary></indexterm>_ZN12QImageWriterC2EP9QIODeviceRK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageWriterC2ERK7QStringRK10QByteArray</primary></indexterm>_ZN12QImageWriterC2ERK7QStringRK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageWriterC2Ev</primary></indexterm>_ZN12QImageWriterC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QImageWriterD1Ev</primary></indexterm>_ZN12QImageWriterD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QImageWriterD2Ev</primary></indexterm>_ZN12QImageWriterD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QInputDialog10getIntegerEP7QWidgetRK7QStringS4_iiiiPb6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN12QInputDialog10getIntegerEP7QWidgetRK7QStringS4_iiiiPb6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QInputDialog11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QInputDialog11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QInputDialog11qt_metacastEPKc</primary></indexterm>_ZN12QInputDialog11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QInputDialog7getItemEP7QWidgetRK7QStringS4_RK11QStringListibPb6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN12QInputDialog7getItemEP7QWidgetRK7QStringS4_RK11QStringListibPb6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QInputDialog7getTextEP7QWidgetRK7QStringS4_N9QLineEdit8EchoModeES4_Pb6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN12QInputDialog7getTextEP7QWidgetRK7QStringS4_N9QLineEdit8EchoModeES4_Pb6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QInputDialog9getDoubleEP7QWidgetRK7QStringS4_dddiPb6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN12QInputDialog9getDoubleEP7QWidgetRK7QStringS4_dddiPb6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QKeySequence10fromStringERK7QStringNS_14SequenceFormatE</primary></indexterm>_ZN12QKeySequence10fromStringERK7QStringNS_14SequenceFormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QKeySequence8mnemonicERK7QString</primary></indexterm>_ZN12QKeySequence8mnemonicERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QKeySequenceC1ERK7QString</primary></indexterm>_ZN12QKeySequenceC1ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QKeySequenceC1ERKS_</primary></indexterm>_ZN12QKeySequenceC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QKeySequenceC1Eiiii</primary></indexterm>_ZN12QKeySequenceC1Eiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QKeySequenceC1Ev</primary></indexterm>_ZN12QKeySequenceC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QKeySequenceC2ERK7QString</primary></indexterm>_ZN12QKeySequenceC2ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QKeySequenceC2ERKS_</primary></indexterm>_ZN12QKeySequenceC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QKeySequenceC2Eiiii</primary></indexterm>_ZN12QKeySequenceC2Eiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QKeySequenceC2Ev</primary></indexterm>_ZN12QKeySequenceC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QKeySequenceD1Ev</primary></indexterm>_ZN12QKeySequenceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QKeySequenceD2Ev</primary></indexterm>_ZN12QKeySequenceD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QKeySequenceaSERKS_</primary></indexterm>_ZN12QKeySequenceaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintDevice10x11AppDpiXEi</primary></indexterm>_ZN12QPaintDevice10x11AppDpiXEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintDevice10x11AppDpiYEi</primary></indexterm>_ZN12QPaintDevice10x11AppDpiYEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintDevice11x11AppCellsEi</primary></indexterm>_ZN12QPaintDevice11x11AppCellsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintDevice11x11AppDepthEi</primary></indexterm>_ZN12QPaintDevice11x11AppDepthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintDevice12x11AppScreenEv</primary></indexterm>_ZN12QPaintDevice12x11AppScreenEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintDevice12x11AppVisualEi</primary></indexterm>_ZN12QPaintDevice12x11AppVisualEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintDevice13x11AppDisplayEv</primary></indexterm>_ZN12QPaintDevice13x11AppDisplayEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintDevice13x11SetAppDpiXEii</primary></indexterm>_ZN12QPaintDevice13x11SetAppDpiXEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintDevice13x11SetAppDpiYEii</primary></indexterm>_ZN12QPaintDevice13x11SetAppDpiYEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintDevice14x11AppColormapEi</primary></indexterm>_ZN12QPaintDevice14x11AppColormapEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintDevice16x11AppRootWindowEi</primary></indexterm>_ZN12QPaintDevice16x11AppRootWindowEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintDevice19x11AppDefaultVisualEi</primary></indexterm>_ZN12QPaintDevice19x11AppDefaultVisualEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintDevice21x11AppDefaultColormapEi</primary></indexterm>_ZN12QPaintDevice21x11AppDefaultColormapEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintDeviceC1Ev</primary></indexterm>_ZN12QPaintDeviceC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintDeviceC2Ev</primary></indexterm>_ZN12QPaintDeviceC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintDeviceD0Ev</primary></indexterm>_ZN12QPaintDeviceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintDeviceD1Ev</primary></indexterm>_ZN12QPaintDeviceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintDeviceD2Ev</primary></indexterm>_ZN12QPaintDeviceD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngine10drawPointsEPK6QPointi</primary></indexterm>_ZN12QPaintEngine10drawPointsEPK6QPointi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngine10drawPointsEPK7QPointFi</primary></indexterm>_ZN12QPaintEngine10drawPointsEPK7QPointFi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngine11drawEllipseERK5QRect</primary></indexterm>_ZN12QPaintEngine11drawEllipseERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngine11drawEllipseERK6QRectF</primary></indexterm>_ZN12QPaintEngine11drawEllipseERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeE</primary></indexterm>_ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngine11drawPolygonEPK7QPointFiNS_15PolygonDrawModeE</primary></indexterm>_ZN12QPaintEngine11drawPolygonEPK7QPointFiNS_15PolygonDrawModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngine12drawTextItemERK7QPointFRK9QTextItem</primary></indexterm>_ZN12QPaintEngine12drawTextItemERK7QPointFRK9QTextItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngine13setSystemClipERK7QRegion</primary></indexterm>_ZN12QPaintEngine13setSystemClipERK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngine13setSystemRectERK5QRect</primary></indexterm>_ZN12QPaintEngine13setSystemRectERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngine14setPaintDeviceEP12QPaintDevice</primary></indexterm>_ZN12QPaintEngine14setPaintDeviceEP12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF</primary></indexterm>_ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngine8drawPathERK12QPainterPath</primary></indexterm>_ZN12QPaintEngine8drawPathERK12QPainterPath <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngine9drawLinesEPK5QLinei</primary></indexterm>_ZN12QPaintEngine9drawLinesEPK5QLinei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngine9drawLinesEPK6QLineFi</primary></indexterm>_ZN12QPaintEngine9drawLinesEPK6QLineFi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngine9drawRectsEPK5QRecti</primary></indexterm>_ZN12QPaintEngine9drawRectsEPK5QRecti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngine9drawRectsEPK6QRectFi</primary></indexterm>_ZN12QPaintEngine9drawRectsEPK6QRectFi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngineC1E6QFlagsINS_18PaintEngineFeatureEE</primary></indexterm>_ZN12QPaintEngineC1E6QFlagsINS_18PaintEngineFeatureEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngineC1ER19QPaintEnginePrivate6QFlagsINS_18PaintEngineFeatureEE</primary></indexterm>_ZN12QPaintEngineC1ER19QPaintEnginePrivate6QFlagsINS_18PaintEngineFeatureEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngineC2E6QFlagsINS_18PaintEngineFeatureEE</primary></indexterm>_ZN12QPaintEngineC2E6QFlagsINS_18PaintEngineFeatureEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngineC2ER19QPaintEnginePrivate6QFlagsINS_18PaintEngineFeatureEE</primary></indexterm>_ZN12QPaintEngineC2ER19QPaintEnginePrivate6QFlagsINS_18PaintEngineFeatureEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngineD0Ev</primary></indexterm>_ZN12QPaintEngineD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPaintEngineD1Ev</primary></indexterm>_ZN12QPaintEngineD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPaintEngineD2Ev</primary></indexterm>_ZN12QPaintEngineD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPath10addEllipseERK6QRectF</primary></indexterm>_ZN12QPainterPath10addEllipseERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPainterPath10addPolygonERK9QPolygonF</primary></indexterm>_ZN12QPainterPath10addPolygonERK9QPolygonF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPath11connectPathERKS_</primary></indexterm>_ZN12QPainterPath11connectPathERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE</primary></indexterm>_ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPath12closeSubpathEv</primary></indexterm>_ZN12QPainterPath12closeSubpathEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPainterPath5arcToERK6QRectFdd</primary></indexterm>_ZN12QPainterPath5arcToERK6QRectFdd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPath6lineToERK7QPointF</primary></indexterm>_ZN12QPainterPath6lineToERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPainterPath6moveToERK7QPointF</primary></indexterm>_ZN12QPainterPath6moveToERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPath6quadToERK7QPointFS2_</primary></indexterm>_ZN12QPainterPath6quadToERK7QPointFS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPainterPath7addPathERKS_</primary></indexterm>_ZN12QPainterPath7addPathERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPath7addRectERK6QRectF</primary></indexterm>_ZN12QPainterPath7addRectERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPainterPath7addTextERK7QPointFRK5QFontRK7QString</primary></indexterm>_ZN12QPainterPath7addTextERK7QPointFRK5QFontRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPath7cubicToERK7QPointFS2_S2_</primary></indexterm>_ZN12QPainterPath7cubicToERK7QPointFS2_S2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPainterPath9addRegionERK7QRegion</primary></indexterm>_ZN12QPainterPath9addRegionERK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPathC1ERK7QPointF</primary></indexterm>_ZN12QPainterPathC1ERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPainterPathC1ERKS_</primary></indexterm>_ZN12QPainterPathC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPathC1Ev</primary></indexterm>_ZN12QPainterPathC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPainterPathC2ERK7QPointF</primary></indexterm>_ZN12QPainterPathC2ERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPathC2ERKS_</primary></indexterm>_ZN12QPainterPathC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPainterPathC2Ev</primary></indexterm>_ZN12QPainterPathC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPathD1Ev</primary></indexterm>_ZN12QPainterPathD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPainterPathD2Ev</primary></indexterm>_ZN12QPainterPathD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPainterPathaSERKS_</primary></indexterm>_ZN12QPainterPathaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPixmapCache10cacheLimitEv</primary></indexterm>_ZN12QPixmapCache10cacheLimitEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPixmapCache13setCacheLimitEi</primary></indexterm>_ZN12QPixmapCache13setCacheLimitEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPixmapCache4findERK7QString</primary></indexterm>_ZN12QPixmapCache4findERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPixmapCache4findERK7QStringR7QPixmap</primary></indexterm>_ZN12QPixmapCache4findERK7QStringR7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPixmapCache5clearEv</primary></indexterm>_ZN12QPixmapCache5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPixmapCache6insertERK7QStringRK7QPixmap</primary></indexterm>_ZN12QPixmapCache6insertERK7QStringRK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPixmapCache6removeERK7QString</primary></indexterm>_ZN12QPixmapCache6removeERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPrintDialog10setPrinterEP8QPrinterb</primary></indexterm>_ZN12QPrintDialog10setPrinterEP8QPrinterb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPrintDialog11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QPrintDialog11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPrintDialog11qt_metacastEPKc</primary></indexterm>_ZN12QPrintDialog11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPrintDialog4execEv</primary></indexterm>_ZN12QPrintDialog4execEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPrintDialog9addButtonEP11QPushButton</primary></indexterm>_ZN12QPrintDialog9addButtonEP11QPushButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPrintDialogC1EP8QPrinterP7QWidget</primary></indexterm>_ZN12QPrintDialogC1EP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPrintDialogC2EP8QPrinterP7QWidget</primary></indexterm>_ZN12QPrintDialogC2EP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPrintDialogD0Ev</primary></indexterm>_ZN12QPrintDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPrintDialogD1Ev</primary></indexterm>_ZN12QPrintDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QPrintDialogD2Ev</primary></indexterm>_ZN12QPrintDialogD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QProgressBar10paintEventEP11QPaintEvent</primary></indexterm>_ZN12QProgressBar10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QProgressBar10setMaximumEi</primary></indexterm>_ZN12QProgressBar10setMaximumEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QProgressBar10setMinimumEi</primary></indexterm>_ZN12QProgressBar10setMinimumEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QProgressBar11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QProgressBar11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QProgressBar11qt_metacastEPKc</primary></indexterm>_ZN12QProgressBar11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QProgressBar12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN12QProgressBar12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QProgressBar12valueChangedEi</primary></indexterm>_ZN12QProgressBar12valueChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QProgressBar13textDirectionEv</primary></indexterm>_ZN12QProgressBar13textDirectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QProgressBar14setOrientationEN2Qt11OrientationE</primary></indexterm>_ZN12QProgressBar14setOrientationEN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QProgressBar14setTextVisibleEb</primary></indexterm>_ZN12QProgressBar14setTextVisibleEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QProgressBar16setTextDirectionENS_9DirectionE</primary></indexterm>_ZN12QProgressBar16setTextDirectionENS_9DirectionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QProgressBar18invertedAppearanceEv</primary></indexterm>_ZN12QProgressBar18invertedAppearanceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QProgressBar21setInvertedAppearanceEb</primary></indexterm>_ZN12QProgressBar21setInvertedAppearanceEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QProgressBar5eventEP6QEvent</primary></indexterm>_ZN12QProgressBar5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QProgressBar5resetEv</primary></indexterm>_ZN12QProgressBar5resetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QProgressBar8setRangeEii</primary></indexterm>_ZN12QProgressBar8setRangeEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QProgressBar8setValueEi</primary></indexterm>_ZN12QProgressBar8setValueEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QProgressBarC1EP7QWidget</primary></indexterm>_ZN12QProgressBarC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QProgressBarC2EP7QWidget</primary></indexterm>_ZN12QProgressBarC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QProgressBarD0Ev</primary></indexterm>_ZN12QProgressBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QProgressBarD1Ev</primary></indexterm>_ZN12QProgressBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QRadioButton10paintEventEP11QPaintEvent</primary></indexterm>_ZN12QRadioButton10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QRadioButton11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QRadioButton11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QRadioButton11qt_metacastEPKc</primary></indexterm>_ZN12QRadioButton11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QRadioButton14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN12QRadioButton14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QRadioButton5eventEP6QEvent</primary></indexterm>_ZN12QRadioButton5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QRadioButtonC1EP7QWidget</primary></indexterm>_ZN12QRadioButtonC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QRadioButtonC1EP7QWidgetPKc</primary></indexterm>_ZN12QRadioButtonC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QRadioButtonC1ERK7QStringP7QWidget</primary></indexterm>_ZN12QRadioButtonC1ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QRadioButtonC1ERK7QStringP7QWidgetPKc</primary></indexterm>_ZN12QRadioButtonC1ERK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QRadioButtonC2EP7QWidget</primary></indexterm>_ZN12QRadioButtonC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QRadioButtonC2EP7QWidgetPKc</primary></indexterm>_ZN12QRadioButtonC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QRadioButtonC2ERK7QStringP7QWidget</primary></indexterm>_ZN12QRadioButtonC2ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QRadioButtonC2ERK7QStringP7QWidgetPKc</primary></indexterm>_ZN12QRadioButtonC2ERK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QRadioButtonD0Ev</primary></indexterm>_ZN12QRadioButtonD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QRadioButtonD1Ev</primary></indexterm>_ZN12QRadioButtonD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QResizeEventC1ERK5QSizeS2_</primary></indexterm>_ZN12QResizeEventC1ERK5QSizeS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QResizeEventC2ERK5QSizeS2_</primary></indexterm>_ZN12QResizeEventC2ERK5QSizeS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QResizeEventD0Ev</primary></indexterm>_ZN12QResizeEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QResizeEventD1Ev</primary></indexterm>_ZN12QResizeEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QResizeEventD2Ev</primary></indexterm>_ZN12QResizeEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QStyleOption4initEPK7QWidget</primary></indexterm>_ZN12QStyleOption4initEPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QStyleOptionC1ERKS_</primary></indexterm>_ZN12QStyleOptionC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QStyleOptionC1Eii</primary></indexterm>_ZN12QStyleOptionC1Eii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QStyleOptionC2ERKS_</primary></indexterm>_ZN12QStyleOptionC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QStyleOptionC2Eii</primary></indexterm>_ZN12QStyleOptionC2Eii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QStyleOptionD1Ev</primary></indexterm>_ZN12QStyleOptionD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QStyleOptionD2Ev</primary></indexterm>_ZN12QStyleOptionD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QStyleOptionaSERKS_</primary></indexterm>_ZN12QStyleOptionaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QStylePlugin11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QStylePlugin11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QStylePlugin11qt_metacastEPKc</primary></indexterm>_ZN12QStylePlugin11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QStylePluginC1EP7QObject</primary></indexterm>_ZN12QStylePluginC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QStylePluginC2EP7QObject</primary></indexterm>_ZN12QStylePluginC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QStylePluginD0Ev</primary></indexterm>_ZN12QStylePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QStylePluginD1Ev</primary></indexterm>_ZN12QStylePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QStylePluginD2Ev</primary></indexterm>_ZN12QStylePluginD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget11cellChangedEii</primary></indexterm>_ZN12QTableWidget11cellChangedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget11cellClickedEii</primary></indexterm>_ZN12QTableWidget11cellClickedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget11cellEnteredEii</primary></indexterm>_ZN12QTableWidget11cellEnteredEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget11cellPressedEii</primary></indexterm>_ZN12QTableWidget11cellPressedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget11itemChangedEP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget11itemChangedEP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget11itemClickedEP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget11itemClickedEP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget11itemEnteredEP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget11itemEnteredEP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget11itemPressedEP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget11itemPressedEP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QTableWidget11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget11qt_metacastEPKc</primary></indexterm>_ZN12QTableWidget11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget11setRowCountEi</primary></indexterm>_ZN12QTableWidget11setRowCountEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget12dropMimeDataEiiPK9QMimeDataN2Qt10DropActionE</primary></indexterm>_ZN12QTableWidget12dropMimeDataEiiPK9QMimeDataN2Qt10DropActionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget12insertColumnEi</primary></indexterm>_ZN12QTableWidget12insertColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget12removeColumnEi</primary></indexterm>_ZN12QTableWidget12removeColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget12scrollToItemEPK16QTableWidgetItemN17QAbstractItemView10ScrollHintE</primary></indexterm>_ZN12QTableWidget12scrollToItemEPK16QTableWidgetItemN17QAbstractItemView10ScrollHintE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget13cellActivatedEii</primary></indexterm>_ZN12QTableWidget13cellActivatedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget13itemActivatedEP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget13itemActivatedEP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget13selectedItemsEv</primary></indexterm>_ZN12QTableWidget13selectedItemsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget13setCellWidgetEiiP7QWidget</primary></indexterm>_ZN12QTableWidget13setCellWidgetEiiP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget14setColumnCountEi</primary></indexterm>_ZN12QTableWidget14setColumnCountEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget14setCurrentCellEii</primary></indexterm>_ZN12QTableWidget14setCurrentCellEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget14setCurrentItemEP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget14setCurrentItemEP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget15setItemSelectedEPK16QTableWidgetItemb</primary></indexterm>_ZN12QTableWidget15setItemSelectedEPK16QTableWidgetItemb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget16setItemPrototypeEPK16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget16setItemPrototypeEPK16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget16setRangeSelectedERK26QTableWidgetSelectionRangeb</primary></indexterm>_ZN12QTableWidget16setRangeSelectedERK26QTableWidgetSelectionRangeb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget17cellDoubleClickedEii</primary></indexterm>_ZN12QTableWidget17cellDoubleClickedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget17itemDoubleClickedEP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget17itemDoubleClickedEP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget17setSortingEnabledEb</primary></indexterm>_ZN12QTableWidget17setSortingEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget18currentCellChangedEiiii</primary></indexterm>_ZN12QTableWidget18currentCellChangedEiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget18currentItemChangedEP16QTableWidgetItemS1_</primary></indexterm>_ZN12QTableWidget18currentItemChangedEP16QTableWidgetItemS1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget20itemSelectionChangedEv</primary></indexterm>_ZN12QTableWidget20itemSelectionChangedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget20openPersistentEditorEP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget20openPersistentEditorEP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget21closePersistentEditorEP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget21closePersistentEditorEP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget21setVerticalHeaderItemEiP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget21setVerticalHeaderItemEiP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget22takeVerticalHeaderItemEi</primary></indexterm>_ZN12QTableWidget22takeVerticalHeaderItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget23setHorizontalHeaderItemEiP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget23setHorizontalHeaderItemEiP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget23setVerticalHeaderLabelsERK11QStringList</primary></indexterm>_ZN12QTableWidget23setVerticalHeaderLabelsERK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget24takeHorizontalHeaderItemEi</primary></indexterm>_ZN12QTableWidget24takeHorizontalHeaderItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget25setHorizontalHeaderLabelsERK11QStringList</primary></indexterm>_ZN12QTableWidget25setHorizontalHeaderLabelsERK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget5clearEv</primary></indexterm>_ZN12QTableWidget5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget5eventEP6QEvent</primary></indexterm>_ZN12QTableWidget5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget7setItemEiiP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget7setItemEiiP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget8editItemEP16QTableWidgetItem</primary></indexterm>_ZN12QTableWidget8editItemEP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget8setModelEP18QAbstractItemModel</primary></indexterm>_ZN12QTableWidget8setModelEP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget8takeItemEii</primary></indexterm>_ZN12QTableWidget8takeItemEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget9insertRowEi</primary></indexterm>_ZN12QTableWidget9insertRowEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget9removeRowEi</primary></indexterm>_ZN12QTableWidget9removeRowEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidget9sortItemsEiN2Qt9SortOrderE</primary></indexterm>_ZN12QTableWidget9sortItemsEiN2Qt9SortOrderE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidgetC1EP7QWidget</primary></indexterm>_ZN12QTableWidgetC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidgetC1EiiP7QWidget</primary></indexterm>_ZN12QTableWidgetC1EiiP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidgetC2EP7QWidget</primary></indexterm>_ZN12QTableWidgetC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidgetC2EiiP7QWidget</primary></indexterm>_ZN12QTableWidgetC2EiiP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidgetD0Ev</primary></indexterm>_ZN12QTableWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTableWidgetD1Ev</primary></indexterm>_ZN12QTableWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidgetD2Ev</primary></indexterm>_ZN12QTableWidgetD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTabletEventC1EN6QEvent4TypeERK6QPointS4_RK7QPointFiidiiddi6QFlagsIN2Qt16KeyboardModifierEEx</primary></indexterm>_ZN12QTabletEventC1EN6QEvent4TypeERK6QPointS4_RK7QPointFiidiiddi6QFlagsIN2Qt16KeyboardModifierEEx <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTabletEventC2EN6QEvent4TypeERK6QPointS4_RK7QPointFiidiiddi6QFlagsIN2Qt16KeyboardModifierEEx</primary></indexterm>_ZN12QTabletEventC2EN6QEvent4TypeERK6QPointS4_RK7QPointFiidiiddi6QFlagsIN2Qt16KeyboardModifierEEx <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTabletEventD0Ev</primary></indexterm>_ZN12QTabletEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTabletEventD1Ev</primary></indexterm>_ZN12QTabletEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTabletEventD2Ev</primary></indexterm>_ZN12QTabletEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser10paintEventEP11QPaintEvent</primary></indexterm>_ZN12QTextBrowser10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser11highlightedERK4QUrl</primary></indexterm>_ZN12QTextBrowser11highlightedERK4QUrl <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser11highlightedERK7QString</primary></indexterm>_ZN12QTextBrowser11highlightedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN12QTextBrowser11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser11qt_metacastEPKc</primary></indexterm>_ZN12QTextBrowser11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser12loadResourceEiRK4QUrl</primary></indexterm>_ZN12QTextBrowser12loadResourceEiRK4QUrl <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser13anchorClickedERK4QUrl</primary></indexterm>_ZN12QTextBrowser13anchorClickedERK4QUrl <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser13focusOutEventEP11QFocusEvent</primary></indexterm>_ZN12QTextBrowser13focusOutEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN12QTextBrowser13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser13sourceChangedERK4QUrl</primary></indexterm>_ZN12QTextBrowser13sourceChangedERK4QUrl <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN12QTextBrowser14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser14setSearchPathsERK11QStringList</primary></indexterm>_ZN12QTextBrowser14setSearchPathsERK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN12QTextBrowser15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser16forwardAvailableEb</primary></indexterm>_ZN12QTextBrowser16forwardAvailableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser17backwardAvailableEb</primary></indexterm>_ZN12QTextBrowser17backwardAvailableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN12QTextBrowser17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser18focusNextPrevChildEb</primary></indexterm>_ZN12QTextBrowser18focusNextPrevChildEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser4homeEv</primary></indexterm>_ZN12QTextBrowser4homeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser5eventEP6QEvent</primary></indexterm>_ZN12QTextBrowser5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser6reloadEv</primary></indexterm>_ZN12QTextBrowser6reloadEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser7forwardEv</primary></indexterm>_ZN12QTextBrowser7forwardEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser8backwardEv</primary></indexterm>_ZN12QTextBrowser8backwardEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowser9setSourceERK4QUrl</primary></indexterm>_ZN12QTextBrowser9setSourceERK4QUrl <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowserC1EP7QWidget</primary></indexterm>_ZN12QTextBrowserC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowserC1EP7QWidgetPKc</primary></indexterm>_ZN12QTextBrowserC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowserC2EP7QWidget</primary></indexterm>_ZN12QTextBrowserC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowserC2EP7QWidgetPKc</primary></indexterm>_ZN12QTextBrowserC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowserD0Ev</primary></indexterm>_ZN12QTextBrowserD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTextBrowserD1Ev</primary></indexterm>_ZN12QTextBrowserD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowserD2Ev</primary></indexterm>_ZN12QTextBrowserD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit10wheelEventEP11QWheelEvent</primary></indexterm>_ZN13QDateTimeEdit10wheelEventEP11QWheelEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit11dateChangedERK5QDate</primary></indexterm>_ZN13QDateTimeEdit11dateChangedERK5QDate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN13QDateTimeEdit11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit11qt_metacastEPKc</primary></indexterm>_ZN13QDateTimeEdit11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit11setDateTimeERK9QDateTime</primary></indexterm>_ZN13QDateTimeEdit11setDateTimeERK9QDateTime <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit11timeChangedERK5QTime</primary></indexterm>_ZN13QDateTimeEdit11timeChangedERK5QTime <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit12focusInEventEP11QFocusEvent</primary></indexterm>_ZN13QDateTimeEdit12focusInEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit12setDateRangeERK5QDateS2_</primary></indexterm>_ZN13QDateTimeEdit12setDateRangeERK5QDateS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit12setTimeRangeERK5QTimeS2_</primary></indexterm>_ZN13QDateTimeEdit12setTimeRangeERK5QTimeS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN13QDateTimeEdit13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit14setMaximumDateERK5QDate</primary></indexterm>_ZN13QDateTimeEdit14setMaximumDateERK5QDate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit14setMaximumTimeERK5QTime</primary></indexterm>_ZN13QDateTimeEdit14setMaximumTimeERK5QTime <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit14setMinimumDateERK5QDate</primary></indexterm>_ZN13QDateTimeEdit14setMinimumDateERK5QDate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit14setMinimumTimeERK5QTime</primary></indexterm>_ZN13QDateTimeEdit14setMinimumTimeERK5QTime <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit15dateTimeChangedERK9QDateTime</primary></indexterm>_ZN13QDateTimeEdit15dateTimeChangedERK9QDateTime <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit16clearMaximumDateEv</primary></indexterm>_ZN13QDateTimeEdit16clearMaximumDateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit16clearMaximumTimeEv</primary></indexterm>_ZN13QDateTimeEdit16clearMaximumTimeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit16clearMinimumDateEv</primary></indexterm>_ZN13QDateTimeEdit16clearMinimumDateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit16clearMinimumTimeEv</primary></indexterm>_ZN13QDateTimeEdit16clearMinimumTimeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit16setDisplayFormatERK7QString</primary></indexterm>_ZN13QDateTimeEdit16setDisplayFormatERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit17setCurrentSectionENS_7SectionE</primary></indexterm>_ZN13QDateTimeEdit17setCurrentSectionENS_7SectionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit18focusNextPrevChildEb</primary></indexterm>_ZN13QDateTimeEdit18focusNextPrevChildEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit5clearEv</primary></indexterm>_ZN13QDateTimeEdit5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit5eventEP6QEvent</primary></indexterm>_ZN13QDateTimeEdit5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit6stepByEi</primary></indexterm>_ZN13QDateTimeEdit6stepByEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit7setDateERK5QDate</primary></indexterm>_ZN13QDateTimeEdit7setDateERK5QDate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit7setTimeERK5QTime</primary></indexterm>_ZN13QDateTimeEdit7setTimeERK5QTime <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEditC1EP7QWidget</primary></indexterm>_ZN13QDateTimeEditC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEditC1ERK5QDateP7QWidget</primary></indexterm>_ZN13QDateTimeEditC1ERK5QDateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEditC1ERK5QTimeP7QWidget</primary></indexterm>_ZN13QDateTimeEditC1ERK5QTimeP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEditC1ERK9QDateTimeP7QWidget</primary></indexterm>_ZN13QDateTimeEditC1ERK9QDateTimeP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEditC2EP7QWidget</primary></indexterm>_ZN13QDateTimeEditC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEditC2ERK5QDateP7QWidget</primary></indexterm>_ZN13QDateTimeEditC2ERK5QDateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEditC2ERK5QTimeP7QWidget</primary></indexterm>_ZN13QDateTimeEditC2ERK5QTimeP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEditC2ERK9QDateTimeP7QWidget</primary></indexterm>_ZN13QDateTimeEditC2ERK9QDateTimeP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QDateTimeEditD0Ev</primary></indexterm>_ZN13QDateTimeEditD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEditD1Ev</primary></indexterm>_ZN13QDateTimeEditD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QErrorMessage11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN13QErrorMessage11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QErrorMessage11qt_metacastEPKc</primary></indexterm>_ZN13QErrorMessage11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QErrorMessage11showMessageERK7QString</primary></indexterm>_ZN13QErrorMessage11showMessageERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QErrorMessage4doneEi</primary></indexterm>_ZN13QErrorMessage4doneEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QErrorMessage9qtHandlerEv</primary></indexterm>_ZN13QErrorMessage9qtHandlerEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QErrorMessageC1EP7QWidget</primary></indexterm>_ZN13QErrorMessageC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QErrorMessageC2EP7QWidget</primary></indexterm>_ZN13QErrorMessageC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QErrorMessageD0Ev</primary></indexterm>_ZN13QErrorMessageD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QErrorMessageD1Ev</primary></indexterm>_ZN13QErrorMessageD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QErrorMessageD2Ev</primary></indexterm>_ZN13QErrorMessageD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QFontDatabase10pointSizesERK7QStringS2_</primary></indexterm>_ZN13QFontDatabase10pointSizesERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QFontDatabase11smoothSizesERK7QStringS2_</primary></indexterm>_ZN13QFontDatabase11smoothSizesERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QFontDatabase11styleStringERK5QFont</primary></indexterm>_ZN13QFontDatabase11styleStringERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QFontDatabase11styleStringERK9QFontInfo</primary></indexterm>_ZN13QFontDatabase11styleStringERK9QFontInfo <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QFontDatabase13standardSizesEv</primary></indexterm>_ZN13QFontDatabase13standardSizesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QFontDatabase17writingSystemNameENS_13WritingSystemE</primary></indexterm>_ZN13QFontDatabase17writingSystemNameENS_13WritingSystemE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QFontDatabase19writingSystemSampleENS_13WritingSystemE</primary></indexterm>_ZN13QFontDatabase19writingSystemSampleENS_13WritingSystemE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QFontDatabaseC1Ev</primary></indexterm>_ZN13QFontDatabaseC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QFontDatabaseC2Ev</primary></indexterm>_ZN13QFontDatabaseC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QFontMetricsFC1ERK5QFont</primary></indexterm>_ZN13QFontMetricsFC1ERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QFontMetricsFC1ERK5QFontP12QPaintDevice</primary></indexterm>_ZN13QFontMetricsFC1ERK5QFontP12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QFontMetricsFC1ERKS_</primary></indexterm>_ZN13QFontMetricsFC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QFontMetricsFC2ERK5QFont</primary></indexterm>_ZN13QFontMetricsFC2ERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QFontMetricsFC2ERK5QFontP12QPaintDevice</primary></indexterm>_ZN13QFontMetricsFC2ERK5QFontP12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QFontMetricsFC2ERKS_</primary></indexterm>_ZN13QFontMetricsFC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QFontMetricsFD1Ev</primary></indexterm>_ZN13QFontMetricsFD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QFontMetricsFD2Ev</primary></indexterm>_ZN13QFontMetricsFD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QFontMetricsFaSERKS_</primary></indexterm>_ZN13QFontMetricsFaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QFontMetricsFeqERKS_</primary></indexterm>_ZN13QFontMetricsFeqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QInputContext11filterEventEPK6QEvent</primary></indexterm>_ZN13QInputContext11filterEventEPK6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QInputContext11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN13QInputContext11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QInputContext11qt_metacastEPKc</primary></indexterm>_ZN13QInputContext11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QInputContext12mouseHandlerEiP11QMouseEvent</primary></indexterm>_ZN13QInputContext12mouseHandlerEiP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QInputContext14setFocusWidgetEP7QWidget</primary></indexterm>_ZN13QInputContext14setFocusWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QInputContext14x11FilterEventEP7QWidgetP7_XEvent</primary></indexterm>_ZN13QInputContext14x11FilterEventEP7QWidgetP7_XEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QInputContext15widgetDestroyedEP7QWidget</primary></indexterm>_ZN13QInputContext15widgetDestroyedEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QInputContext6updateEv</primary></indexterm>_ZN13QInputContext6updateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QInputContext7actionsEv</primary></indexterm>_ZN13QInputContext7actionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QInputContext9sendEventERK17QInputMethodEvent</primary></indexterm>_ZN13QInputContext9sendEventERK17QInputMethodEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QInputContextC1EP7QObject</primary></indexterm>_ZN13QInputContextC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QInputContextC2EP7QObject</primary></indexterm>_ZN13QInputContextC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QInputContextD0Ev</primary></indexterm>_ZN13QInputContextD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QInputContextD1Ev</primary></indexterm>_ZN13QInputContextD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QInputContextD2Ev</primary></indexterm>_ZN13QInputContextD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QIntValidator11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN13QIntValidator11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QIntValidator11qt_metacastEPKc</primary></indexterm>_ZN13QIntValidator11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QIntValidator6setTopEi</primary></indexterm>_ZN13QIntValidator6setTopEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QIntValidator8setRangeEii</primary></indexterm>_ZN13QIntValidator8setRangeEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QIntValidator9setBottomEi</primary></indexterm>_ZN13QIntValidator9setBottomEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QIntValidatorC1EP7QObject</primary></indexterm>_ZN13QIntValidatorC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QIntValidatorC1EP7QObjectPKc</primary></indexterm>_ZN13QIntValidatorC1EP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QIntValidatorC1EiiP7QObject</primary></indexterm>_ZN13QIntValidatorC1EiiP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QIntValidatorC1EiiP7QObjectPKc</primary></indexterm>_ZN13QIntValidatorC1EiiP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QIntValidatorC2EP7QObject</primary></indexterm>_ZN13QIntValidatorC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QIntValidatorC2EP7QObjectPKc</primary></indexterm>_ZN13QIntValidatorC2EP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QIntValidatorC2EiiP7QObject</primary></indexterm>_ZN13QIntValidatorC2EiiP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QIntValidatorC2EiiP7QObjectPKc</primary></indexterm>_ZN13QIntValidatorC2EiiP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QIntValidatorD0Ev</primary></indexterm>_ZN13QIntValidatorD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QIntValidatorD1Ev</primary></indexterm>_ZN13QIntValidatorD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QIntValidatorD2Ev</primary></indexterm>_ZN13QIntValidatorD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QItemDelegate11editorEventEP6QEventP18QAbstractItemModelRK20QStyleOptionViewItemRK11QModelIndex</primary></indexterm>_ZN13QItemDelegate11editorEventEP6QEventP18QAbstractItemModelRK20QStyleOptionViewItemRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QItemDelegate11eventFilterEP7QObjectP6QEvent</primary></indexterm>_ZN13QItemDelegate11eventFilterEP7QObjectP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QItemDelegate11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN13QItemDelegate11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QItemDelegate11qt_metacastEPKc</primary></indexterm>_ZN13QItemDelegate11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QItemDelegate20setItemEditorFactoryEP18QItemEditorFactory</primary></indexterm>_ZN13QItemDelegate20setItemEditorFactoryEP18QItemEditorFactory <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QItemDelegateC1EP7QObject</primary></indexterm>_ZN13QItemDelegateC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QItemDelegateC2EP7QObject</primary></indexterm>_ZN13QItemDelegateC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QItemDelegateD0Ev</primary></indexterm>_ZN13QItemDelegateD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QItemDelegateD1Ev</primary></indexterm>_ZN13QItemDelegateD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QItemDelegateD2Ev</primary></indexterm>_ZN13QItemDelegateD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QSplashScreen11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN13QSplashScreen11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QSplashScreen11qt_metacastEPKc</primary></indexterm>_ZN13QSplashScreen11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QSplashScreen11showMessageERK7QStringiRK6QColor</primary></indexterm>_ZN13QSplashScreen11showMessageERK7QStringiRK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QSplashScreen12clearMessageEv</primary></indexterm>_ZN13QSplashScreen12clearMessageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QSplashScreen12drawContentsEP8QPainter</primary></indexterm>_ZN13QSplashScreen12drawContentsEP8QPainter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QSplashScreen14messageChangedERK7QString</primary></indexterm>_ZN13QSplashScreen14messageChangedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QSplashScreen15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN13QSplashScreen15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QSplashScreen5eventEP6QEvent</primary></indexterm>_ZN13QSplashScreen5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QSplashScreen6finishEP7QWidget</primary></indexterm>_ZN13QSplashScreen6finishEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QSplashScreen7repaintEv</primary></indexterm>_ZN13QSplashScreen7repaintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QSplashScreen9setPixmapERK7QPixmap</primary></indexterm>_ZN13QSplashScreen9setPixmapERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QSplashScreenC1EP7QWidgetRK7QPixmap6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN13QSplashScreenC1EP7QWidgetRK7QPixmap6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QSplashScreenC1ERK7QPixmap6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN13QSplashScreenC1ERK7QPixmap6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QSplashScreenC2EP7QWidgetRK7QPixmap6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN13QSplashScreenC2EP7QWidgetRK7QPixmap6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QSplashScreenC2ERK7QPixmap6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN13QSplashScreenC2ERK7QPixmap6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QSplashScreenD0Ev</primary></indexterm>_ZN13QSplashScreenD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QSplashScreenD1Ev</primary></indexterm>_ZN13QSplashScreenD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QSplashScreenD2Ev</primary></indexterm>_ZN13QSplashScreenD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QStyleFactory4keysEv</primary></indexterm>_ZN13QStyleFactory4keysEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QStyleFactory6createERK7QString</primary></indexterm>_ZN13QStyleFactory6createERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument11addResourceEiRK4QUrlRK8QVariant</primary></indexterm>_ZN13QTextDocument11addResourceEiRK4QUrlRK8QVariant <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN13QTextDocument11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument11qt_metacastEPKc</primary></indexterm>_ZN13QTextDocument11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument11setModifiedEb</primary></indexterm>_ZN13QTextDocument11setModifiedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument11setPageSizeERK6QSizeF</primary></indexterm>_ZN13QTextDocument11setPageSizeERK6QSizeF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument12createObjectERK11QTextFormat</primary></indexterm>_ZN13QTextDocument12createObjectERK11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument12loadResourceEiRK4QUrl</primary></indexterm>_ZN13QTextDocument12loadResourceEiRK4QUrl <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument12setPlainTextERK7QString</primary></indexterm>_ZN13QTextDocument12setPlainTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument13redoAvailableEb</primary></indexterm>_ZN13QTextDocument13redoAvailableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument13undoAvailableEb</primary></indexterm>_ZN13QTextDocument13undoAvailableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument14appendUndoItemEP17QAbstractUndoItem</primary></indexterm>_ZN13QTextDocument14appendUndoItemEP17QAbstractUndoItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument14contentsChangeEiii</primary></indexterm>_ZN13QTextDocument14contentsChangeEiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument14setDefaultFontERK5QFont</primary></indexterm>_ZN13QTextDocument14setDefaultFontERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument15contentsChangedEv</primary></indexterm>_ZN13QTextDocument15contentsChangedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument17markContentsDirtyEii</primary></indexterm>_ZN13QTextDocument17markContentsDirtyEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument17setDocumentLayoutEP27QAbstractTextDocumentLayout</primary></indexterm>_ZN13QTextDocument17setDocumentLayoutEP27QAbstractTextDocumentLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument18setMetaInformationENS_15MetaInformationERK7QString</primary></indexterm>_ZN13QTextDocument18setMetaInformationENS_15MetaInformationERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument18setUndoRedoEnabledEb</primary></indexterm>_ZN13QTextDocument18setUndoRedoEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument19modificationChangedEb</primary></indexterm>_ZN13QTextDocument19modificationChangedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument19setUseDesignMetricsEb</primary></indexterm>_ZN13QTextDocument19setUseDesignMetricsEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument21cursorPositionChangedERK11QTextCursor</primary></indexterm>_ZN13QTextDocument21cursorPositionChangedERK11QTextCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument4redoEv</primary></indexterm>_ZN13QTextDocument4redoEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument4undoEv</primary></indexterm>_ZN13QTextDocument4undoEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument5clearEv</primary></indexterm>_ZN13QTextDocument5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocument7setHtmlERK7QString</primary></indexterm>_ZN13QTextDocument7setHtmlERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocumentC1EP7QObject</primary></indexterm>_ZN13QTextDocumentC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocumentC1ERK7QStringP7QObject</primary></indexterm>_ZN13QTextDocumentC1ERK7QStringP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocumentC2EP7QObject</primary></indexterm>_ZN13QTextDocumentC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocumentC2ERK7QStringP7QObject</primary></indexterm>_ZN13QTextDocumentC2ERK7QStringP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocumentD0Ev</primary></indexterm>_ZN13QTextDocumentD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QTextDocumentD1Ev</primary></indexterm>_ZN13QTextDocumentD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocumentD2Ev</primary></indexterm>_ZN13QTextDocumentD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QWindowsStyle10timerEventEP11QTimerEvent</primary></indexterm>_ZN13QWindowsStyle10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QWindowsStyle11eventFilterEP7QObjectP6QEvent</primary></indexterm>_ZN13QWindowsStyle11eventFilterEP7QObjectP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QWindowsStyle11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN13QWindowsStyle11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QWindowsStyle11qt_metacastEPKc</primary></indexterm>_ZN13QWindowsStyle11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QWindowsStyle6polishEP12QApplication</primary></indexterm>_ZN13QWindowsStyle6polishEP12QApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QWindowsStyle6polishEP7QWidget</primary></indexterm>_ZN13QWindowsStyle6polishEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QWindowsStyle6polishER8QPalette</primary></indexterm>_ZN13QWindowsStyle6polishER8QPalette <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QWindowsStyle8unpolishEP12QApplication</primary></indexterm>_ZN13QWindowsStyle8unpolishEP12QApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QWindowsStyle8unpolishEP7QWidget</primary></indexterm>_ZN13QWindowsStyle8unpolishEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QWindowsStyleC1ER20QWindowsStylePrivate</primary></indexterm>_ZN13QWindowsStyleC1ER20QWindowsStylePrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QWindowsStyleC1Ev</primary></indexterm>_ZN13QWindowsStyleC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QWindowsStyleC2ER20QWindowsStylePrivate</primary></indexterm>_ZN13QWindowsStyleC2ER20QWindowsStylePrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QWindowsStyleC2Ev</primary></indexterm>_ZN13QWindowsStyleC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QWindowsStyleD0Ev</primary></indexterm>_ZN13QWindowsStyleD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QWindowsStyleD1Ev</primary></indexterm>_ZN13QWindowsStyleD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QWindowsStyleD2Ev</primary></indexterm>_ZN13QWindowsStyleD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDesktopWidget11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN14QDesktopWidget11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDesktopWidget11qt_metacastEPKc</primary></indexterm>_ZN14QDesktopWidget11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDesktopWidget11resizeEventEP12QResizeEvent</primary></indexterm>_ZN14QDesktopWidget11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDesktopWidget15workAreaResizedEi</primary></indexterm>_ZN14QDesktopWidget15workAreaResizedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDesktopWidget6screenEi</primary></indexterm>_ZN14QDesktopWidget6screenEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDesktopWidget7resizedEi</primary></indexterm>_ZN14QDesktopWidget7resizedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDesktopWidgetC1Ev</primary></indexterm>_ZN14QDesktopWidgetC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDesktopWidgetC2Ev</primary></indexterm>_ZN14QDesktopWidgetC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDesktopWidgetD0Ev</primary></indexterm>_ZN14QDesktopWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDesktopWidgetD1Ev</primary></indexterm>_ZN14QDesktopWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDesktopWidgetD2Ev</primary></indexterm>_ZN14QDesktopWidgetD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox10setMaximumEd</primary></indexterm>_ZN14QDoubleSpinBox10setMaximumEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox10setMinimumEd</primary></indexterm>_ZN14QDoubleSpinBox10setMinimumEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN14QDoubleSpinBox11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox11qt_metacastEPKc</primary></indexterm>_ZN14QDoubleSpinBox11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox11setDecimalsEi</primary></indexterm>_ZN14QDoubleSpinBox11setDecimalsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox12valueChangedERK7QString</primary></indexterm>_ZN14QDoubleSpinBox12valueChangedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox12valueChangedEd</primary></indexterm>_ZN14QDoubleSpinBox12valueChangedEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox13setSingleStepEd</primary></indexterm>_ZN14QDoubleSpinBox13setSingleStepEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox8setRangeEdd</primary></indexterm>_ZN14QDoubleSpinBox8setRangeEdd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox8setValueEd</primary></indexterm>_ZN14QDoubleSpinBox8setValueEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox9setPrefixERK7QString</primary></indexterm>_ZN14QDoubleSpinBox9setPrefixERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox9setSuffixERK7QString</primary></indexterm>_ZN14QDoubleSpinBox9setSuffixERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBoxC1EP7QWidget</primary></indexterm>_ZN14QDoubleSpinBoxC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBoxC2EP7QWidget</primary></indexterm>_ZN14QDoubleSpinBoxC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBoxD0Ev</primary></indexterm>_ZN14QDoubleSpinBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBoxD1Ev</primary></indexterm>_ZN14QDoubleSpinBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDragMoveEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE</primary></indexterm>_ZN14QDragMoveEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDragMoveEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE</primary></indexterm>_ZN14QDragMoveEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDragMoveEventD0Ev</primary></indexterm>_ZN14QDragMoveEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDragMoveEventD1Ev</primary></indexterm>_ZN14QDragMoveEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDragMoveEventD2Ev</primary></indexterm>_ZN14QDragMoveEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QFileOpenEventC1ERK7QString</primary></indexterm>_ZN14QFileOpenEventC1ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QFileOpenEventC2ERK7QString</primary></indexterm>_ZN14QFileOpenEventC2ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QFileOpenEventD0Ev</primary></indexterm>_ZN14QFileOpenEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QFileOpenEventD1Ev</primary></indexterm>_ZN14QFileOpenEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QFileOpenEventD2Ev</primary></indexterm>_ZN14QFileOpenEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QIconDragEventC1Ev</primary></indexterm>_ZN14QIconDragEventC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QIconDragEventC2Ev</primary></indexterm>_ZN14QIconDragEventC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QIconDragEventD0Ev</primary></indexterm>_ZN14QIconDragEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QIconDragEventD1Ev</primary></indexterm>_ZN14QIconDragEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QIconDragEventD2Ev</primary></indexterm>_ZN14QIconDragEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QImageIOPlugin11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN14QImageIOPlugin11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QImageIOPlugin11qt_metacastEPKc</primary></indexterm>_ZN14QImageIOPlugin11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QImageIOPluginC1EP7QObject</primary></indexterm>_ZN14QImageIOPluginC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QImageIOPluginC2EP7QObject</primary></indexterm>_ZN14QImageIOPluginC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QImageIOPluginD0Ev</primary></indexterm>_ZN14QImageIOPluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QImageIOPluginD1Ev</primary></indexterm>_ZN14QImageIOPluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QImageIOPluginD2Ev</primary></indexterm>_ZN14QImageIOPluginD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QItemSelection5mergeERKS_6QFlagsIN19QItemSelectionModel13SelectionFlagEE</primary></indexterm>_ZN14QItemSelection5mergeERKS_6QFlagsIN19QItemSelectionModel13SelectionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QItemSelection5splitERK19QItemSelectionRangeS2_PS_</primary></indexterm>_ZN14QItemSelection5splitERK19QItemSelectionRangeS2_PS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QItemSelection6selectERK11QModelIndexS2_</primary></indexterm>_ZN14QItemSelection6selectERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QItemSelectionC1ERK11QModelIndexS2_</primary></indexterm>_ZN14QItemSelectionC1ERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QItemSelectionC2ERK11QModelIndexS2_</primary></indexterm>_ZN14QItemSelectionC2ERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QShortcutEventC1ERK12QKeySequenceib</primary></indexterm>_ZN14QShortcutEventC1ERK12QKeySequenceib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QShortcutEventC2ERK12QKeySequenceib</primary></indexterm>_ZN14QShortcutEventC2ERK12QKeySequenceib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QShortcutEventD0Ev</primary></indexterm>_ZN14QShortcutEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QShortcutEventD1Ev</primary></indexterm>_ZN14QShortcutEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QShortcutEventD2Ev</primary></indexterm>_ZN14QShortcutEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedLayout11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN14QStackedLayout11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedLayout11qt_metacastEPKc</primary></indexterm>_ZN14QStackedLayout11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedLayout11setGeometryERK5QRect</primary></indexterm>_ZN14QStackedLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedLayout12insertWidgetEiP7QWidget</primary></indexterm>_ZN14QStackedLayout12insertWidgetEiP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedLayout13widgetRemovedEi</primary></indexterm>_ZN14QStackedLayout13widgetRemovedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedLayout14currentChangedEi</primary></indexterm>_ZN14QStackedLayout14currentChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedLayout15setCurrentIndexEi</primary></indexterm>_ZN14QStackedLayout15setCurrentIndexEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedLayout16setCurrentWidgetEP7QWidget</primary></indexterm>_ZN14QStackedLayout16setCurrentWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedLayout6takeAtEi</primary></indexterm>_ZN14QStackedLayout6takeAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedLayout7addItemEP11QLayoutItem</primary></indexterm>_ZN14QStackedLayout7addItemEP11QLayoutItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedLayout9addWidgetEP7QWidget</primary></indexterm>_ZN14QStackedLayout9addWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedLayoutC1EP7QLayout</primary></indexterm>_ZN14QStackedLayoutC1EP7QLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedLayoutC1EP7QWidget</primary></indexterm>_ZN14QStackedLayoutC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedLayoutC1Ev</primary></indexterm>_ZN14QStackedLayoutC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedLayoutC2EP7QLayout</primary></indexterm>_ZN14QStackedLayoutC2EP7QLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedLayoutC2EP7QWidget</primary></indexterm>_ZN14QStackedLayoutC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedLayoutC2Ev</primary></indexterm>_ZN14QStackedLayoutC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedLayoutD0Ev</primary></indexterm>_ZN14QStackedLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedLayoutD1Ev</primary></indexterm>_ZN14QStackedLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedLayoutD2Ev</primary></indexterm>_ZN14QStackedLayoutD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedWidget11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN14QStackedWidget11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedWidget11qt_metacastEPKc</primary></indexterm>_ZN14QStackedWidget11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedWidget12insertWidgetEiP7QWidget</primary></indexterm>_ZN14QStackedWidget12insertWidgetEiP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedWidget12removeWidgetEP7QWidget</primary></indexterm>_ZN14QStackedWidget12removeWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedWidget13widgetRemovedEi</primary></indexterm>_ZN14QStackedWidget13widgetRemovedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedWidget14currentChangedEi</primary></indexterm>_ZN14QStackedWidget14currentChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedWidget15setCurrentIndexEi</primary></indexterm>_ZN14QStackedWidget15setCurrentIndexEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedWidget16setCurrentWidgetEP7QWidget</primary></indexterm>_ZN14QStackedWidget16setCurrentWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedWidget5eventEP6QEvent</primary></indexterm>_ZN14QStackedWidget5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedWidget9addWidgetEP7QWidget</primary></indexterm>_ZN14QStackedWidget9addWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedWidgetC1EP7QWidget</primary></indexterm>_ZN14QStackedWidgetC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedWidgetC2EP7QWidget</primary></indexterm>_ZN14QStackedWidgetC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedWidgetD0Ev</primary></indexterm>_ZN14QStackedWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedWidgetD1Ev</primary></indexterm>_ZN14QStackedWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedWidgetD2Ev</primary></indexterm>_ZN14QStackedWidgetD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton10setCheckedEb</primary></indexterm>_ZN15QAbstractButton10setCheckedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton10timerEventEP11QTimerEvent</primary></indexterm>_ZN15QAbstractButton10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton11changeEventEP6QEvent</primary></indexterm>_ZN15QAbstractButton11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN15QAbstractButton11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton11qt_metacastEPKc</primary></indexterm>_ZN15QAbstractButton11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton11setIconSizeERK5QSize</primary></indexterm>_ZN15QAbstractButton11setIconSizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton11setShortcutERK12QKeySequence</primary></indexterm>_ZN15QAbstractButton11setShortcutERK12QKeySequence <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton12animateClickEi</primary></indexterm>_ZN15QAbstractButton12animateClickEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton12focusInEventEP11QFocusEvent</primary></indexterm>_ZN15QAbstractButton12focusInEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton12setCheckableEb</primary></indexterm>_ZN15QAbstractButton12setCheckableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton13checkStateSetEv</primary></indexterm>_ZN15QAbstractButton13checkStateSetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton13focusOutEventEP11QFocusEvent</primary></indexterm>_ZN15QAbstractButton13focusOutEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN15QAbstractButton13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton13setAutoRepeatEb</primary></indexterm>_ZN15QAbstractButton13setAutoRepeatEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN15QAbstractButton14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton14nextCheckStateEv</primary></indexterm>_ZN15QAbstractButton14nextCheckStateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton15keyReleaseEventEP9QKeyEvent</primary></indexterm>_ZN15QAbstractButton15keyReleaseEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN15QAbstractButton15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton16setAutoExclusiveEb</primary></indexterm>_ZN15QAbstractButton16setAutoExclusiveEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN15QAbstractButton17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton5clickEv</primary></indexterm>_ZN15QAbstractButton5clickEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton5eventEP6QEvent</primary></indexterm>_ZN15QAbstractButton5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton6toggleEv</primary></indexterm>_ZN15QAbstractButton6toggleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton7clickedEb</primary></indexterm>_ZN15QAbstractButton7clickedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton7pressedEv</primary></indexterm>_ZN15QAbstractButton7pressedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton7setDownEb</primary></indexterm>_ZN15QAbstractButton7setDownEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton7setIconERK5QIcon</primary></indexterm>_ZN15QAbstractButton7setIconERK5QIcon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton7setTextERK7QString</primary></indexterm>_ZN15QAbstractButton7setTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton7toggledEb</primary></indexterm>_ZN15QAbstractButton7toggledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButton8releasedEv</primary></indexterm>_ZN15QAbstractButton8releasedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButtonC1EP7QWidget</primary></indexterm>_ZN15QAbstractButtonC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButtonC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN15QAbstractButtonC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButtonC1ER22QAbstractButtonPrivateP7QWidget</primary></indexterm>_ZN15QAbstractButtonC1ER22QAbstractButtonPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButtonC2EP7QWidget</primary></indexterm>_ZN15QAbstractButtonC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButtonC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN15QAbstractButtonC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButtonC2ER22QAbstractButtonPrivateP7QWidget</primary></indexterm>_ZN15QAbstractButtonC2ER22QAbstractButtonPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButtonD0Ev</primary></indexterm>_ZN15QAbstractButtonD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractButtonD1Ev</primary></indexterm>_ZN15QAbstractButtonD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButtonD2Ev</primary></indexterm>_ZN15QAbstractButtonD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider10setMaximumEi</primary></indexterm>_ZN15QAbstractSlider10setMaximumEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider10setMinimumEi</primary></indexterm>_ZN15QAbstractSlider10setMinimumEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider10timerEventEP11QTimerEvent</primary></indexterm>_ZN15QAbstractSlider10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider10wheelEventEP11QWheelEvent</primary></indexterm>_ZN15QAbstractSlider10wheelEventEP11QWheelEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider11changeEventEP6QEvent</primary></indexterm>_ZN15QAbstractSlider11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN15QAbstractSlider11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider11qt_metacastEPKc</primary></indexterm>_ZN15QAbstractSlider11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider11setPageStepEi</primary></indexterm>_ZN15QAbstractSlider11setPageStepEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider11setTrackingEb</primary></indexterm>_ZN15QAbstractSlider11setTrackingEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider11sliderMovedEi</primary></indexterm>_ZN15QAbstractSlider11sliderMovedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider12rangeChangedEii</primary></indexterm>_ZN15QAbstractSlider12rangeChangedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider12sliderChangeENS_12SliderChangeE</primary></indexterm>_ZN15QAbstractSlider12sliderChangeENS_12SliderChangeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider12valueChangedEi</primary></indexterm>_ZN15QAbstractSlider12valueChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN15QAbstractSlider13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider13setSingleStepEi</primary></indexterm>_ZN15QAbstractSlider13setSingleStepEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider13setSliderDownEb</primary></indexterm>_ZN15QAbstractSlider13setSliderDownEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider13sliderPressedEv</primary></indexterm>_ZN15QAbstractSlider13sliderPressedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider13triggerActionENS_12SliderActionE</primary></indexterm>_ZN15QAbstractSlider13triggerActionENS_12SliderActionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider14setOrientationEN2Qt11OrientationE</primary></indexterm>_ZN15QAbstractSlider14setOrientationEN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider14sliderReleasedEv</primary></indexterm>_ZN15QAbstractSlider14sliderReleasedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider15actionTriggeredEi</primary></indexterm>_ZN15QAbstractSlider15actionTriggeredEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider15setRepeatActionENS_12SliderActionEii</primary></indexterm>_ZN15QAbstractSlider15setRepeatActionENS_12SliderActionEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider17setSliderPositionEi</primary></indexterm>_ZN15QAbstractSlider17setSliderPositionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider19setInvertedControlsEb</primary></indexterm>_ZN15QAbstractSlider19setInvertedControlsEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider21setInvertedAppearanceEb</primary></indexterm>_ZN15QAbstractSlider21setInvertedAppearanceEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider5eventEP6QEvent</primary></indexterm>_ZN15QAbstractSlider5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider8setRangeEii</primary></indexterm>_ZN15QAbstractSlider8setRangeEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider8setValueEi</primary></indexterm>_ZN15QAbstractSlider8setValueEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSliderC1EP7QWidget</primary></indexterm>_ZN15QAbstractSliderC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSliderC1ER22QAbstractSliderPrivateP7QWidget</primary></indexterm>_ZN15QAbstractSliderC1ER22QAbstractSliderPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSliderC2EP7QWidget</primary></indexterm>_ZN15QAbstractSliderC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSliderC2ER22QAbstractSliderPrivateP7QWidget</primary></indexterm>_ZN15QAbstractSliderC2ER22QAbstractSliderPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSliderD0Ev</primary></indexterm>_ZN15QAbstractSliderD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractSliderD1Ev</primary></indexterm>_ZN15QAbstractSliderD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSliderD2Ev</primary></indexterm>_ZN15QAbstractSliderD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QClipboardEventC1EP13QEventPrivate</primary></indexterm>_ZN15QClipboardEventC1EP13QEventPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QClipboardEventC2EP13QEventPrivate</primary></indexterm>_ZN15QClipboardEventC2EP13QEventPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QClipboardEventD0Ev</primary></indexterm>_ZN15QClipboardEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QClipboardEventD1Ev</primary></indexterm>_ZN15QClipboardEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QClipboardEventD2Ev</primary></indexterm>_ZN15QClipboardEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QDragEnterEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE</primary></indexterm>_ZN15QDragEnterEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QDragEnterEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE</primary></indexterm>_ZN15QDragEnterEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QDragEnterEventD0Ev</primary></indexterm>_ZN15QDragEnterEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QDragEnterEventD1Ev</primary></indexterm>_ZN15QDragEnterEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QDragEnterEventD2Ev</primary></indexterm>_ZN15QDragEnterEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QDragLeaveEventC1Ev</primary></indexterm>_ZN15QDragLeaveEventC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QDragLeaveEventC2Ev</primary></indexterm>_ZN15QDragLeaveEventC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QDragLeaveEventD0Ev</primary></indexterm>_ZN15QDragLeaveEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QDragLeaveEventD1Ev</primary></indexterm>_ZN15QDragLeaveEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QDragLeaveEventD2Ev</primary></indexterm>_ZN15QDragLeaveEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QImageIOHandler11jumpToImageEi</primary></indexterm>_ZN15QImageIOHandler11jumpToImageEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QImageIOHandler15jumpToNextImageEv</primary></indexterm>_ZN15QImageIOHandler15jumpToNextImageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QImageIOHandler5writeERK6QImage</primary></indexterm>_ZN15QImageIOHandler5writeERK6QImage <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QImageIOHandler9setDeviceEP9QIODevice</primary></indexterm>_ZN15QImageIOHandler9setDeviceEP9QIODevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QImageIOHandler9setFormatERK10QByteArray</primary></indexterm>_ZN15QImageIOHandler9setFormatERK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QImageIOHandler9setOptionENS_11ImageOptionERK8QVariant</primary></indexterm>_ZN15QImageIOHandler9setOptionENS_11ImageOptionERK8QVariant <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QImageIOHandlerC1ER22QImageIOHandlerPrivate</primary></indexterm>_ZN15QImageIOHandlerC1ER22QImageIOHandlerPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QImageIOHandlerC1Ev</primary></indexterm>_ZN15QImageIOHandlerC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QImageIOHandlerC2ER22QImageIOHandlerPrivate</primary></indexterm>_ZN15QImageIOHandlerC2ER22QImageIOHandlerPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QImageIOHandlerC2Ev</primary></indexterm>_ZN15QImageIOHandlerC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QImageIOHandlerD0Ev</primary></indexterm>_ZN15QImageIOHandlerD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QImageIOHandlerD1Ev</primary></indexterm>_ZN15QImageIOHandlerD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QImageIOHandlerD2Ev</primary></indexterm>_ZN15QImageIOHandlerD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QLinearGradientC1ERK7QPointFS2_</primary></indexterm>_ZN15QLinearGradientC1ERK7QPointFS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QLinearGradientC1Edddd</primary></indexterm>_ZN15QLinearGradientC1Edddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QLinearGradientC2ERK7QPointFS2_</primary></indexterm>_ZN15QLinearGradientC2ERK7QPointFS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QLinearGradientC2Edddd</primary></indexterm>_ZN15QLinearGradientC2Edddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QListWidgetItem4readER11QDataStream</primary></indexterm>_ZN15QListWidgetItem4readER11QDataStream <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QListWidgetItem7setDataEiRK8QVariant</primary></indexterm>_ZN15QListWidgetItem7setDataEiRK8QVariant <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemC1EP11QListWidgeti</primary></indexterm>_ZN15QListWidgetItemC1EP11QListWidgeti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemC1ERK5QIconRK7QStringP11QListWidgeti</primary></indexterm>_ZN15QListWidgetItemC1ERK5QIconRK7QStringP11QListWidgeti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemC1ERK7QStringP11QListWidgeti</primary></indexterm>_ZN15QListWidgetItemC1ERK7QStringP11QListWidgeti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemC1ERKS_</primary></indexterm>_ZN15QListWidgetItemC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemC2EP11QListWidgeti</primary></indexterm>_ZN15QListWidgetItemC2EP11QListWidgeti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemC2ERK5QIconRK7QStringP11QListWidgeti</primary></indexterm>_ZN15QListWidgetItemC2ERK5QIconRK7QStringP11QListWidgeti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemC2ERK7QStringP11QListWidgeti</primary></indexterm>_ZN15QListWidgetItemC2ERK7QStringP11QListWidgeti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemC2ERKS_</primary></indexterm>_ZN15QListWidgetItemC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemD0Ev</primary></indexterm>_ZN15QListWidgetItemD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemD1Ev</primary></indexterm>_ZN15QListWidgetItemD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemD2Ev</primary></indexterm>_ZN15QListWidgetItemD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QListWidgetItemaSERKS_</primary></indexterm>_ZN15QListWidgetItemaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyle10timerEventEP11QTimerEvent</primary></indexterm>_ZN15QPlastiqueStyle10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyle11eventFilterEP7QObjectP6QEvent</primary></indexterm>_ZN15QPlastiqueStyle11eventFilterEP7QObjectP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyle11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN15QPlastiqueStyle11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyle11qt_metacastEPKc</primary></indexterm>_ZN15QPlastiqueStyle11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyle6polishEP12QApplication</primary></indexterm>_ZN15QPlastiqueStyle6polishEP12QApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyle6polishEP7QWidget</primary></indexterm>_ZN15QPlastiqueStyle6polishEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyle6polishER8QPalette</primary></indexterm>_ZN15QPlastiqueStyle6polishER8QPalette <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyle8unpolishEP12QApplication</primary></indexterm>_ZN15QPlastiqueStyle8unpolishEP12QApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyle8unpolishEP7QWidget</primary></indexterm>_ZN15QPlastiqueStyle8unpolishEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyleC1Ev</primary></indexterm>_ZN15QPlastiqueStyleC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyleC2Ev</primary></indexterm>_ZN15QPlastiqueStyleC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyleD0Ev</primary></indexterm>_ZN15QPlastiqueStyleD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyleD1Ev</primary></indexterm>_ZN15QPlastiqueStyleD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyleD2Ev</primary></indexterm>_ZN15QPlastiqueStyleD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialog10closeEventEP11QCloseEvent</primary></indexterm>_ZN15QProgressDialog10closeEventEP11QCloseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog10setMaximumEi</primary></indexterm>_ZN15QProgressDialog10setMaximumEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialog10setMinimumEi</primary></indexterm>_ZN15QProgressDialog10setMinimumEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog11changeEventEP6QEvent</primary></indexterm>_ZN15QProgressDialog11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialog11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN15QProgressDialog11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog11qt_metacastEPKc</primary></indexterm>_ZN15QProgressDialog11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialog11resizeEventEP12QResizeEvent</primary></indexterm>_ZN15QProgressDialog11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog12setAutoCloseEb</primary></indexterm>_ZN15QProgressDialog12setAutoCloseEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialog12setAutoResetEb</primary></indexterm>_ZN15QProgressDialog12setAutoResetEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog12setLabelTextERK7QString</primary></indexterm>_ZN15QProgressDialog12setLabelTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialog15setCancelButtonEP11QPushButton</primary></indexterm>_ZN15QProgressDialog15setCancelButtonEP11QPushButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog18setMinimumDurationEi</primary></indexterm>_ZN15QProgressDialog18setMinimumDurationEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialog19setCancelButtonTextERK7QString</primary></indexterm>_ZN15QProgressDialog19setCancelButtonTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog5resetEv</primary></indexterm>_ZN15QProgressDialog5resetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialog6cancelEv</primary></indexterm>_ZN15QProgressDialog6cancelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog6setBarEP12QProgressBar</primary></indexterm>_ZN15QProgressDialog6setBarEP12QProgressBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialog8canceledEv</primary></indexterm>_ZN15QProgressDialog8canceledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog8setLabelEP6QLabel</primary></indexterm>_ZN15QProgressDialog8setLabelEP6QLabel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialog8setRangeEii</primary></indexterm>_ZN15QProgressDialog8setRangeEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog8setValueEi</primary></indexterm>_ZN15QProgressDialog8setValueEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialog9forceShowEv</primary></indexterm>_ZN15QProgressDialog9forceShowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog9showEventEP10QShowEvent</primary></indexterm>_ZN15QProgressDialog9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialogC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN15QProgressDialogC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialogC1ERK7QStringS2_iiP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN15QProgressDialogC1ERK7QStringS2_iiP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialogC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN15QProgressDialogC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialogC2ERK7QStringS2_iiP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN15QProgressDialogC2ERK7QStringS2_iiP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialogD0Ev</primary></indexterm>_ZN15QProgressDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialogD1Ev</primary></indexterm>_ZN15QProgressDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QProgressDialogD2Ev</primary></indexterm>_ZN15QProgressDialogD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QRadialGradientC1ERK7QPointFdS2_</primary></indexterm>_ZN15QRadialGradientC1ERK7QPointFdS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QRadialGradientC1Eddddd</primary></indexterm>_ZN15QRadialGradientC1Eddddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QRadialGradientC2ERK7QPointFdS2_</primary></indexterm>_ZN15QRadialGradientC2ERK7QPointFdS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QRadialGradientC2Eddddd</primary></indexterm>_ZN15QRadialGradientC2Eddddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSessionManager11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN15QSessionManager11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSessionManager11qt_metacastEPKc</primary></indexterm>_ZN15QSessionManager11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSessionManager13requestPhase2Ev</primary></indexterm>_ZN15QSessionManager13requestPhase2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSessionManager14setRestartHintENS_11RestartHintE</primary></indexterm>_ZN15QSessionManager14setRestartHintENS_11RestartHintE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSessionManager17allowsInteractionEv</primary></indexterm>_ZN15QSessionManager17allowsInteractionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSessionManager17setDiscardCommandERK11QStringList</primary></indexterm>_ZN15QSessionManager17setDiscardCommandERK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSessionManager17setRestartCommandERK11QStringList</primary></indexterm>_ZN15QSessionManager17setRestartCommandERK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSessionManager18setManagerPropertyERK7QStringRK11QStringList</primary></indexterm>_ZN15QSessionManager18setManagerPropertyERK7QStringRK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSessionManager18setManagerPropertyERK7QStringS2_</primary></indexterm>_ZN15QSessionManager18setManagerPropertyERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSessionManager22allowsErrorInteractionEv</primary></indexterm>_ZN15QSessionManager22allowsErrorInteractionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSessionManager6cancelEv</primary></indexterm>_ZN15QSessionManager6cancelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSessionManager7releaseEv</primary></indexterm>_ZN15QSessionManager7releaseEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSplitterHandle10paintEventEP11QPaintEvent</primary></indexterm>_ZN15QSplitterHandle10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSplitterHandle11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN15QSplitterHandle11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSplitterHandle11qt_metacastEPKc</primary></indexterm>_ZN15QSplitterHandle11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSplitterHandle12moveSplitterEi</primary></indexterm>_ZN15QSplitterHandle12moveSplitterEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSplitterHandle14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN15QSplitterHandle14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSplitterHandle14setOrientationEN2Qt11OrientationE</primary></indexterm>_ZN15QSplitterHandle14setOrientationEN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSplitterHandle15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN15QSplitterHandle15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSplitterHandle17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN15QSplitterHandle17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSplitterHandle20closestLegalPositionEi</primary></indexterm>_ZN15QSplitterHandle20closestLegalPositionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSplitterHandle5eventEP6QEvent</primary></indexterm>_ZN15QSplitterHandle5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSplitterHandleC1EN2Qt11OrientationEP9QSplitter</primary></indexterm>_ZN15QSplitterHandleC1EN2Qt11OrientationEP9QSplitter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSplitterHandleC2EN2Qt11OrientationEP9QSplitter</primary></indexterm>_ZN15QSplitterHandleC2EN2Qt11OrientationEP9QSplitter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSplitterHandleD0Ev</primary></indexterm>_ZN15QSplitterHandleD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSplitterHandleD1Ev</primary></indexterm>_ZN15QSplitterHandleD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QStatusTipEventC1ERK7QString</primary></indexterm>_ZN15QStatusTipEventC1ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QStatusTipEventC2ERK7QString</primary></indexterm>_ZN15QStatusTipEventC2ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QStatusTipEventD0Ev</primary></indexterm>_ZN15QStatusTipEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QStatusTipEventD1Ev</primary></indexterm>_ZN15QStatusTipEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QStatusTipEventD2Ev</primary></indexterm>_ZN15QStatusTipEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QStyleOptionTabC1Ei</primary></indexterm>_ZN15QStyleOptionTabC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QStyleOptionTabC1Ev</primary></indexterm>_ZN15QStyleOptionTabC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QStyleOptionTabC2Ei</primary></indexterm>_ZN15QStyleOptionTabC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QStyleOptionTabC2Ev</primary></indexterm>_ZN15QStyleOptionTabC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroup11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN15QTextBlockGroup11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroup11qt_metacastEPKc</primary></indexterm>_ZN15QTextBlockGroup11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroup12blockRemovedERK10QTextBlock</primary></indexterm>_ZN15QTextBlockGroup12blockRemovedERK10QTextBlock <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroup13blockInsertedERK10QTextBlock</primary></indexterm>_ZN15QTextBlockGroup13blockInsertedERK10QTextBlock <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroup18blockFormatChangedERK10QTextBlock</primary></indexterm>_ZN15QTextBlockGroup18blockFormatChangedERK10QTextBlock <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroupC1EP13QTextDocument</primary></indexterm>_ZN15QTextBlockGroupC1EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroupC1ER22QTextBlockGroupPrivateP13QTextDocument</primary></indexterm>_ZN15QTextBlockGroupC1ER22QTextBlockGroupPrivateP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroupC2EP13QTextDocument</primary></indexterm>_ZN15QTextBlockGroupC2EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroupC2ER22QTextBlockGroupPrivateP13QTextDocument</primary></indexterm>_ZN15QTextBlockGroupC2ER22QTextBlockGroupPrivateP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroupD0Ev</primary></indexterm>_ZN15QTextBlockGroupD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroupD1Ev</primary></indexterm>_ZN15QTextBlockGroupD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroupD2Ev</primary></indexterm>_ZN15QTextBlockGroupD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTextCharFormat7setFontERK5QFont</primary></indexterm>_ZN15QTextCharFormat7setFontERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTextCharFormatC1Ev</primary></indexterm>_ZN15QTextCharFormatC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTextCharFormatC2Ev</primary></indexterm>_ZN15QTextCharFormatC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTextListFormatC1Ev</primary></indexterm>_ZN15QTextListFormatC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTextListFormatC2Ev</primary></indexterm>_ZN15QTextListFormatC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItem11addChildrenERK5QListIPS_E</primary></indexterm>_ZN15QTreeWidgetItem11addChildrenERK5QListIPS_E <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItem11insertChildEiPS_</primary></indexterm>_ZN15QTreeWidgetItem11insertChildEiPS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItem12takeChildrenEv</primary></indexterm>_ZN15QTreeWidgetItem12takeChildrenEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItem14insertChildrenEiRK5QListIPS_E</primary></indexterm>_ZN15QTreeWidgetItem14insertChildrenEiRK5QListIPS_E <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItem4readER11QDataStream</primary></indexterm>_ZN15QTreeWidgetItem4readER11QDataStream <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItem7setDataEiiRK8QVariant</primary></indexterm>_ZN15QTreeWidgetItem7setDataEiiRK8QVariant <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItem8addChildEPS_</primary></indexterm>_ZN15QTreeWidgetItem8addChildEPS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItem9takeChildEi</primary></indexterm>_ZN15QTreeWidgetItem9takeChildEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC1EP11QTreeWidgetPS_i</primary></indexterm>_ZN15QTreeWidgetItemC1EP11QTreeWidgetPS_i <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC1EP11QTreeWidgetRK11QStringListi</primary></indexterm>_ZN15QTreeWidgetItemC1EP11QTreeWidgetRK11QStringListi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC1EP11QTreeWidgeti</primary></indexterm>_ZN15QTreeWidgetItemC1EP11QTreeWidgeti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC1EPS_RK11QStringListi</primary></indexterm>_ZN15QTreeWidgetItemC1EPS_RK11QStringListi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC1EPS_S0_i</primary></indexterm>_ZN15QTreeWidgetItemC1EPS_S0_i <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC1EPS_i</primary></indexterm>_ZN15QTreeWidgetItemC1EPS_i <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC1ERK11QStringListi</primary></indexterm>_ZN15QTreeWidgetItemC1ERK11QStringListi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC1ERKS_</primary></indexterm>_ZN15QTreeWidgetItemC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC1Ei</primary></indexterm>_ZN15QTreeWidgetItemC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC2EP11QTreeWidgetPS_i</primary></indexterm>_ZN15QTreeWidgetItemC2EP11QTreeWidgetPS_i <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC2EP11QTreeWidgetRK11QStringListi</primary></indexterm>_ZN15QTreeWidgetItemC2EP11QTreeWidgetRK11QStringListi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC2EP11QTreeWidgeti</primary></indexterm>_ZN15QTreeWidgetItemC2EP11QTreeWidgeti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC2EPS_RK11QStringListi</primary></indexterm>_ZN15QTreeWidgetItemC2EPS_RK11QStringListi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC2EPS_S0_i</primary></indexterm>_ZN15QTreeWidgetItemC2EPS_S0_i <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC2EPS_i</primary></indexterm>_ZN15QTreeWidgetItemC2EPS_i <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC2ERK11QStringListi</primary></indexterm>_ZN15QTreeWidgetItemC2ERK11QStringListi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC2ERKS_</primary></indexterm>_ZN15QTreeWidgetItemC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemC2Ei</primary></indexterm>_ZN15QTreeWidgetItemC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemD0Ev</primary></indexterm>_ZN15QTreeWidgetItemD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemD1Ev</primary></indexterm>_ZN15QTreeWidgetItemD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemD2Ev</primary></indexterm>_ZN15QTreeWidgetItemD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTreeWidgetItemaSERKS_</primary></indexterm>_ZN15QTreeWidgetItemaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox10closeEventEP11QCloseEvent</primary></indexterm>_ZN16QAbstractSpinBox10closeEventEP11QCloseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox10paintEventEP11QPaintEvent</primary></indexterm>_ZN16QAbstractSpinBox10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox10timerEventEP11QTimerEvent</primary></indexterm>_ZN16QAbstractSpinBox10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox10wheelEventEP11QWheelEvent</primary></indexterm>_ZN16QAbstractSpinBox10wheelEventEP11QWheelEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox11changeEventEP6QEvent</primary></indexterm>_ZN16QAbstractSpinBox11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN16QAbstractSpinBox11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox11qt_metacastEPKc</primary></indexterm>_ZN16QAbstractSpinBox11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox11resizeEventEP12QResizeEvent</primary></indexterm>_ZN16QAbstractSpinBox11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox11setLineEditEP9QLineEdit</primary></indexterm>_ZN16QAbstractSpinBox11setLineEditEP9QLineEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox11setReadOnlyEb</primary></indexterm>_ZN16QAbstractSpinBox11setReadOnlyEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox11setWrappingEb</primary></indexterm>_ZN16QAbstractSpinBox11setWrappingEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox12focusInEventEP11QFocusEvent</primary></indexterm>_ZN16QAbstractSpinBox12focusInEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN16QAbstractSpinBox12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox13focusOutEventEP11QFocusEvent</primary></indexterm>_ZN16QAbstractSpinBox13focusOutEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox13interpretTextEv</primary></indexterm>_ZN16QAbstractSpinBox13interpretTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN16QAbstractSpinBox13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN16QAbstractSpinBox14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox15editingFinishedEv</primary></indexterm>_ZN16QAbstractSpinBox15editingFinishedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox15keyReleaseEventEP9QKeyEvent</primary></indexterm>_ZN16QAbstractSpinBox15keyReleaseEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN16QAbstractSpinBox15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox16contextMenuEventEP17QContextMenuEvent</primary></indexterm>_ZN16QAbstractSpinBox16contextMenuEventEP17QContextMenuEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox16setButtonSymbolsENS_13ButtonSymbolsE</primary></indexterm>_ZN16QAbstractSpinBox16setButtonSymbolsENS_13ButtonSymbolsE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN16QAbstractSpinBox17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox19setSpecialValueTextERK7QString</primary></indexterm>_ZN16QAbstractSpinBox19setSpecialValueTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox5clearEv</primary></indexterm>_ZN16QAbstractSpinBox5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox5eventEP6QEvent</primary></indexterm>_ZN16QAbstractSpinBox5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox6stepByEi</primary></indexterm>_ZN16QAbstractSpinBox6stepByEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox6stepUpEv</primary></indexterm>_ZN16QAbstractSpinBox6stepUpEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox8setFrameEb</primary></indexterm>_ZN16QAbstractSpinBox8setFrameEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox8stepDownEv</primary></indexterm>_ZN16QAbstractSpinBox8stepDownEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox9hideEventEP10QHideEvent</primary></indexterm>_ZN16QAbstractSpinBox9hideEventEP10QHideEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox9selectAllEv</primary></indexterm>_ZN16QAbstractSpinBox9selectAllEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox9showEventEP10QShowEvent</primary></indexterm>_ZN16QAbstractSpinBox9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBoxC1EP7QWidget</primary></indexterm>_ZN16QAbstractSpinBoxC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBoxC1ER23QAbstractSpinBoxPrivateP7QWidget</primary></indexterm>_ZN16QAbstractSpinBoxC1ER23QAbstractSpinBoxPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBoxC2EP7QWidget</primary></indexterm>_ZN16QAbstractSpinBoxC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBoxC2ER23QAbstractSpinBoxPrivateP7QWidget</primary></indexterm>_ZN16QAbstractSpinBoxC2ER23QAbstractSpinBoxPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBoxD0Ev</primary></indexterm>_ZN16QAbstractSpinBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBoxD1Ev</primary></indexterm>_ZN16QAbstractSpinBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBoxD2Ev</primary></indexterm>_ZN16QAbstractSpinBoxD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QConicalGradientC1ERK7QPointFd</primary></indexterm>_ZN16QConicalGradientC1ERK7QPointFd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QConicalGradientC1Eddd</primary></indexterm>_ZN16QConicalGradientC1Eddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QConicalGradientC2ERK7QPointFd</primary></indexterm>_ZN16QConicalGradientC2ERK7QPointFd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QConicalGradientC2Eddd</primary></indexterm>_ZN16QConicalGradientC2Eddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QDoubleValidator11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN16QDoubleValidator11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QDoubleValidator11qt_metacastEPKc</primary></indexterm>_ZN16QDoubleValidator11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QDoubleValidator11setDecimalsEi</primary></indexterm>_ZN16QDoubleValidator11setDecimalsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QDoubleValidator6setTopEd</primary></indexterm>_ZN16QDoubleValidator6setTopEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QDoubleValidator8setRangeEddi</primary></indexterm>_ZN16QDoubleValidator8setRangeEddi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QDoubleValidator9setBottomEd</primary></indexterm>_ZN16QDoubleValidator9setBottomEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QDoubleValidatorC1EP7QObject</primary></indexterm>_ZN16QDoubleValidatorC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QDoubleValidatorC1EP7QObjectPKc</primary></indexterm>_ZN16QDoubleValidatorC1EP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QDoubleValidatorC1EddiP7QObject</primary></indexterm>_ZN16QDoubleValidatorC1EddiP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QDoubleValidatorC1EddiP7QObjectPKc</primary></indexterm>_ZN16QDoubleValidatorC1EddiP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QDoubleValidatorC2EP7QObject</primary></indexterm>_ZN16QDoubleValidatorC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QDoubleValidatorC2EP7QObjectPKc</primary></indexterm>_ZN16QDoubleValidatorC2EP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QDoubleValidatorC2EddiP7QObject</primary></indexterm>_ZN16QDoubleValidatorC2EddiP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QDoubleValidatorC2EddiP7QObjectPKc</primary></indexterm>_ZN16QDoubleValidatorC2EddiP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QDoubleValidatorD0Ev</primary></indexterm>_ZN16QDoubleValidatorD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QDoubleValidatorD1Ev</primary></indexterm>_ZN16QDoubleValidatorD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QDoubleValidatorD2Ev</primary></indexterm>_ZN16QDoubleValidatorD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QPageSetupDialog4execEv</primary></indexterm>_ZN16QPageSetupDialog4execEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QPageSetupDialogC1EP8QPrinterP7QWidget</primary></indexterm>_ZN16QPageSetupDialogC1EP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QPageSetupDialogC2EP8QPrinterP7QWidget</primary></indexterm>_ZN16QPageSetupDialogC2EP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QPageSetupDialogD0Ev</primary></indexterm>_ZN16QPageSetupDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QPageSetupDialogD1Ev</primary></indexterm>_ZN16QPageSetupDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QRegExpValidator11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN16QRegExpValidator11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QRegExpValidator11qt_metacastEPKc</primary></indexterm>_ZN16QRegExpValidator11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QRegExpValidator9setRegExpERK7QRegExp</primary></indexterm>_ZN16QRegExpValidator9setRegExpERK7QRegExp <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QRegExpValidatorC1EP7QObject</primary></indexterm>_ZN16QRegExpValidatorC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QRegExpValidatorC1EP7QObjectPKc</primary></indexterm>_ZN16QRegExpValidatorC1EP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QRegExpValidatorC1ERK7QRegExpP7QObject</primary></indexterm>_ZN16QRegExpValidatorC1ERK7QRegExpP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QRegExpValidatorC1ERK7QRegExpP7QObjectPKc</primary></indexterm>_ZN16QRegExpValidatorC1ERK7QRegExpP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QRegExpValidatorC2EP7QObject</primary></indexterm>_ZN16QRegExpValidatorC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QRegExpValidatorC2EP7QObjectPKc</primary></indexterm>_ZN16QRegExpValidatorC2EP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QRegExpValidatorC2ERK7QRegExpP7QObject</primary></indexterm>_ZN16QRegExpValidatorC2ERK7QRegExpP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QRegExpValidatorC2ERK7QRegExpP7QObjectPKc</primary></indexterm>_ZN16QRegExpValidatorC2ERK7QRegExpP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QRegExpValidatorD0Ev</primary></indexterm>_ZN16QRegExpValidatorD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QRegExpValidatorD1Ev</primary></indexterm>_ZN16QRegExpValidatorD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QRegExpValidatorD2Ev</primary></indexterm>_ZN16QRegExpValidatorD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QStringListModel10insertRowsEiiRK11QModelIndex</primary></indexterm>_ZN16QStringListModel10insertRowsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QStringListModel10removeRowsEiiRK11QModelIndex</primary></indexterm>_ZN16QStringListModel10removeRowsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QStringListModel11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN16QStringListModel11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QStringListModel11qt_metacastEPKc</primary></indexterm>_ZN16QStringListModel11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QStringListModel13setStringListERK11QStringList</primary></indexterm>_ZN16QStringListModel13setStringListERK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QStringListModel4sortEiN2Qt9SortOrderE</primary></indexterm>_ZN16QStringListModel4sortEiN2Qt9SortOrderE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QStringListModel7setDataERK11QModelIndexRK8QVarianti</primary></indexterm>_ZN16QStringListModel7setDataERK11QModelIndexRK8QVarianti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QStringListModelC1EP7QObject</primary></indexterm>_ZN16QStringListModelC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QStringListModelC1ERK11QStringListP7QObject</primary></indexterm>_ZN16QStringListModelC1ERK11QStringListP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QStringListModelC2EP7QObject</primary></indexterm>_ZN16QStringListModelC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QStringListModelC2ERK11QStringListP7QObject</primary></indexterm>_ZN16QStringListModelC2ERK11QStringListP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QStringListModelD0Ev</primary></indexterm>_ZN16QStringListModelD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QStringListModelD1Ev</primary></indexterm>_ZN16QStringListModelD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QStyleHintReturnC1Eii</primary></indexterm>_ZN16QStyleHintReturnC1Eii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QStyleHintReturnC2Eii</primary></indexterm>_ZN16QStyleHintReturnC2Eii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QStyleHintReturnD1Ev</primary></indexterm>_ZN16QStyleHintReturnD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QStyleHintReturnD2Ev</primary></indexterm>_ZN16QStyleHintReturnD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItem4readER11QDataStream</primary></indexterm>_ZN16QTableWidgetItem4readER11QDataStream <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItem7setDataEiRK8QVariant</primary></indexterm>_ZN16QTableWidgetItem7setDataEiRK8QVariant <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItemC1ERK7QStringi</primary></indexterm>_ZN16QTableWidgetItemC1ERK7QStringi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItemC1ERKS_</primary></indexterm>_ZN16QTableWidgetItemC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItemC1Ei</primary></indexterm>_ZN16QTableWidgetItemC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItemC2ERK7QStringi</primary></indexterm>_ZN16QTableWidgetItemC2ERK7QStringi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItemC2ERKS_</primary></indexterm>_ZN16QTableWidgetItemC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItemC2Ei</primary></indexterm>_ZN16QTableWidgetItemC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItemD0Ev</primary></indexterm>_ZN16QTableWidgetItemD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItemD1Ev</primary></indexterm>_ZN16QTableWidgetItemD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItemD2Ev</primary></indexterm>_ZN16QTableWidgetItemD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QTableWidgetItemaSERKS_</primary></indexterm>_ZN16QTableWidgetItemaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QTextBlockFormatC1Ev</primary></indexterm>_ZN16QTextBlockFormatC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QTextBlockFormatC2Ev</primary></indexterm>_ZN16QTextBlockFormatC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QTextFrameFormatC1Ev</primary></indexterm>_ZN16QTextFrameFormatC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QTextFrameFormatC2Ev</primary></indexterm>_ZN16QTextFrameFormatC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QTextImageFormatC1Ev</primary></indexterm>_ZN16QTextImageFormatC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QTextImageFormatC2Ev</primary></indexterm>_ZN16QTextImageFormatC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QTextTableFormatC1Ev</primary></indexterm>_ZN16QTextTableFormatC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QTextTableFormatC2Ev</primary></indexterm>_ZN16QTextTableFormatC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView10commitDataEP7QWidget</primary></indexterm>_ZN17QAbstractItemView10commitDataEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView10timerEventEP11QTimerEvent</primary></indexterm>_ZN17QAbstractItemView10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView11closeEditorEP7QWidgetN21QAbstractItemDelegate11EndEditHintE</primary></indexterm>_ZN17QAbstractItemView11closeEditorEP7QWidgetN21QAbstractItemDelegate11EndEditHintE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView11dataChangedERK11QModelIndexS2_</primary></indexterm>_ZN17QAbstractItemView11dataChangedERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN17QAbstractItemView11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView11qt_metacastEPKc</primary></indexterm>_ZN17QAbstractItemView11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView11resizeEventEP12QResizeEvent</primary></indexterm>_ZN17QAbstractItemView11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView11scrollToTopEv</primary></indexterm>_ZN17QAbstractItemView11scrollToTopEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView11setIconSizeERK5QSize</primary></indexterm>_ZN17QAbstractItemView11setIconSizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView12doAutoScrollEv</primary></indexterm>_ZN17QAbstractItemView12doAutoScrollEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView12focusInEventEP11QFocusEvent</primary></indexterm>_ZN17QAbstractItemView12focusInEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView12rowsInsertedERK11QModelIndexii</primary></indexterm>_ZN17QAbstractItemView12rowsInsertedERK11QModelIndexii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView12setRootIndexERK11QModelIndex</primary></indexterm>_ZN17QAbstractItemView12setRootIndexERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView13doItemsLayoutEv</primary></indexterm>_ZN17QAbstractItemView13doItemsLayoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView13doubleClickedERK11QModelIndex</primary></indexterm>_ZN17QAbstractItemView13doubleClickedERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView13dragMoveEventEP14QDragMoveEvent</primary></indexterm>_ZN17QAbstractItemView13dragMoveEventEP14QDragMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView13focusOutEventEP11QFocusEvent</primary></indexterm>_ZN17QAbstractItemView13focusOutEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN17QAbstractItemView13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView13setAutoScrollEb</primary></indexterm>_ZN17QAbstractItemView13setAutoScrollEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView13viewportEventEP6QEvent</primary></indexterm>_ZN17QAbstractItemView13viewportEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView14clearSelectionEv</primary></indexterm>_ZN17QAbstractItemView14clearSelectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView14currentChangedERK11QModelIndexS2_</primary></indexterm>_ZN17QAbstractItemView14currentChangedERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView14dragEnterEventEP15QDragEnterEvent</primary></indexterm>_ZN17QAbstractItemView14dragEnterEventEP15QDragEnterEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView14dragLeaveEventEP15QDragLeaveEvent</primary></indexterm>_ZN17QAbstractItemView14dragLeaveEventEP15QDragLeaveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView14keyboardSearchERK7QString</primary></indexterm>_ZN17QAbstractItemView14keyboardSearchERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN17QAbstractItemView14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView14scrollToBottomEv</primary></indexterm>_ZN17QAbstractItemView14scrollToBottomEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView14setDirtyRegionERK7QRegion</primary></indexterm>_ZN17QAbstractItemView14setDirtyRegionERK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView14setDragEnabledEb</primary></indexterm>_ZN17QAbstractItemView14setDragEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView14setIndexWidgetERK11QModelIndexP7QWidget</primary></indexterm>_ZN17QAbstractItemView14setIndexWidgetERK11QModelIndexP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView14stopAutoScrollEv</primary></indexterm>_ZN17QAbstractItemView14stopAutoScrollEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView15editorDestroyedEP7QObject</primary></indexterm>_ZN17QAbstractItemView15editorDestroyedEP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN17QAbstractItemView15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView15setCurrentIndexERK11QModelIndex</primary></indexterm>_ZN17QAbstractItemView15setCurrentIndexERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView15setEditTriggersE6QFlagsINS_11EditTriggerEE</primary></indexterm>_ZN17QAbstractItemView15setEditTriggersE6QFlagsINS_11EditTriggerEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView15setItemDelegateEP21QAbstractItemDelegate</primary></indexterm>_ZN17QAbstractItemView15setItemDelegateEP21QAbstractItemDelegate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView15startAutoScrollEv</primary></indexterm>_ZN17QAbstractItemView15startAutoScrollEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView15viewportEnteredEv</primary></indexterm>_ZN17QAbstractItemView15viewportEnteredEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView16selectionChangedERK14QItemSelectionS2_</primary></indexterm>_ZN17QAbstractItemView16selectionChangedERK14QItemSelectionS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView16setSelectionModeENS_13SelectionModeE</primary></indexterm>_ZN17QAbstractItemView16setSelectionModeENS_13SelectionModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView16setTextElideModeEN2Qt13TextElideModeE</primary></indexterm>_ZN17QAbstractItemView16setTextElideModeEN2Qt13TextElideModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView16updateEditorDataEv</primary></indexterm>_ZN17QAbstractItemView16updateEditorDataEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView16updateGeometriesEv</primary></indexterm>_ZN17QAbstractItemView16updateGeometriesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN17QAbstractItemView17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView17scrollDirtyRegionEii</primary></indexterm>_ZN17QAbstractItemView17scrollDirtyRegionEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView17setSelectionModelEP19QItemSelectionModel</primary></indexterm>_ZN17QAbstractItemView17setSelectionModelEP19QItemSelectionModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView19setTabKeyNavigationEb</primary></indexterm>_ZN17QAbstractItemView19setTabKeyNavigationEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView20openPersistentEditorERK11QModelIndex</primary></indexterm>_ZN17QAbstractItemView20openPersistentEditorERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView20rowsAboutToBeRemovedERK11QModelIndexii</primary></indexterm>_ZN17QAbstractItemView20rowsAboutToBeRemovedERK11QModelIndexii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView20setSelectionBehaviorENS_17SelectionBehaviorE</primary></indexterm>_ZN17QAbstractItemView20setSelectionBehaviorENS_17SelectionBehaviorE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView21closePersistentEditorERK11QModelIndex</primary></indexterm>_ZN17QAbstractItemView21closePersistentEditorERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView21mouseDoubleClickEventEP11QMouseEvent</primary></indexterm>_ZN17QAbstractItemView21mouseDoubleClickEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView21setDropIndicatorShownEb</primary></indexterm>_ZN17QAbstractItemView21setDropIndicatorShownEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView22updateEditorGeometriesEv</primary></indexterm>_ZN17QAbstractItemView22updateEditorGeometriesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView23setAlternatingRowColorsEb</primary></indexterm>_ZN17QAbstractItemView23setAlternatingRowColorsEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView23setVerticalStepsPerItemEi</primary></indexterm>_ZN17QAbstractItemView23setVerticalStepsPerItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView23verticalScrollbarActionEi</primary></indexterm>_ZN17QAbstractItemView23verticalScrollbarActionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView25executeDelayedItemsLayoutEv</primary></indexterm>_ZN17QAbstractItemView25executeDelayedItemsLayoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView25horizontalScrollbarActionEi</primary></indexterm>_ZN17QAbstractItemView25horizontalScrollbarActionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView25setHorizontalStepsPerItemEi</primary></indexterm>_ZN17QAbstractItemView25setHorizontalStepsPerItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView26scheduleDelayedItemsLayoutEv</primary></indexterm>_ZN17QAbstractItemView26scheduleDelayedItemsLayoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView29verticalScrollbarValueChangedEi</primary></indexterm>_ZN17QAbstractItemView29verticalScrollbarValueChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView31horizontalScrollbarValueChangedEi</primary></indexterm>_ZN17QAbstractItemView31horizontalScrollbarValueChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView4editERK11QModelIndex</primary></indexterm>_ZN17QAbstractItemView4editERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView4editERK11QModelIndexNS_11EditTriggerEP6QEvent</primary></indexterm>_ZN17QAbstractItemView4editERK11QModelIndexNS_11EditTriggerEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView5eventEP6QEvent</primary></indexterm>_ZN17QAbstractItemView5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView5resetEv</primary></indexterm>_ZN17QAbstractItemView5resetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView7clickedERK11QModelIndex</primary></indexterm>_ZN17QAbstractItemView7clickedERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView7enteredERK11QModelIndex</primary></indexterm>_ZN17QAbstractItemView7enteredERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView7pressedERK11QModelIndex</primary></indexterm>_ZN17QAbstractItemView7pressedERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView8setModelEP18QAbstractItemModel</primary></indexterm>_ZN17QAbstractItemView8setModelEP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView8setStateENS_5StateE</primary></indexterm>_ZN17QAbstractItemView8setStateENS_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView9activatedERK11QModelIndex</primary></indexterm>_ZN17QAbstractItemView9activatedERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView9dropEventEP10QDropEvent</primary></indexterm>_ZN17QAbstractItemView9dropEventEP10QDropEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView9selectAllEv</primary></indexterm>_ZN17QAbstractItemView9selectAllEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView9startDragE6QFlagsIN2Qt10DropActionEE</primary></indexterm>_ZN17QAbstractItemView9startDragE6QFlagsIN2Qt10DropActionEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemViewC1EP7QWidget</primary></indexterm>_ZN17QAbstractItemViewC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemViewC1ER24QAbstractItemViewPrivateP7QWidget</primary></indexterm>_ZN17QAbstractItemViewC1ER24QAbstractItemViewPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemViewC2EP7QWidget</primary></indexterm>_ZN17QAbstractItemViewC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemViewC2ER24QAbstractItemViewPrivateP7QWidget</primary></indexterm>_ZN17QAbstractItemViewC2ER24QAbstractItemViewPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemViewD0Ev</primary></indexterm>_ZN17QAbstractItemViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemViewD1Ev</primary></indexterm>_ZN17QAbstractItemViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAbstractItemViewD2Ev</primary></indexterm>_ZN17QAbstractItemViewD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessibleObject7setTextEN11QAccessible4TextEiRK7QString</primary></indexterm>_ZN17QAccessibleObject7setTextEN11QAccessible4TextEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessibleObject8doActionEiiRK5QListI8QVariantE</primary></indexterm>_ZN17QAccessibleObject8doActionEiiRK5QListI8QVariantE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessibleObjectC1EP7QObject</primary></indexterm>_ZN17QAccessibleObjectC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessibleObjectC2EP7QObject</primary></indexterm>_ZN17QAccessibleObjectC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessibleObjectD0Ev</primary></indexterm>_ZN17QAccessibleObjectD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessibleObjectD1Ev</primary></indexterm>_ZN17QAccessibleObjectD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessibleObjectD2Ev</primary></indexterm>_ZN17QAccessibleObjectD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessiblePlugin11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN17QAccessiblePlugin11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessiblePlugin11qt_metacastEPKc</primary></indexterm>_ZN17QAccessiblePlugin11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessiblePluginC1EP7QObject</primary></indexterm>_ZN17QAccessiblePluginC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessiblePluginC2EP7QObject</primary></indexterm>_ZN17QAccessiblePluginC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessiblePluginD0Ev</primary></indexterm>_ZN17QAccessiblePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessiblePluginD1Ev</primary></indexterm>_ZN17QAccessiblePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessiblePluginD2Ev</primary></indexterm>_ZN17QAccessiblePluginD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessibleWidget14setAcceleratorERK7QString</primary></indexterm>_ZN17QAccessibleWidget14setAcceleratorERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessibleWidget14setDescriptionERK7QString</primary></indexterm>_ZN17QAccessibleWidget14setDescriptionERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessibleWidget20addControllingSignalERK7QString</primary></indexterm>_ZN17QAccessibleWidget20addControllingSignalERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessibleWidget7setHelpERK7QString</primary></indexterm>_ZN17QAccessibleWidget7setHelpERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessibleWidget8doActionEiiRK5QListI8QVariantE</primary></indexterm>_ZN17QAccessibleWidget8doActionEiiRK5QListI8QVariantE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessibleWidget8setValueERK7QString</primary></indexterm>_ZN17QAccessibleWidget8setValueERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessibleWidgetC1EP7QWidgetN11QAccessible4RoleERK7QString</primary></indexterm>_ZN17QAccessibleWidgetC1EP7QWidgetN11QAccessible4RoleERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessibleWidgetC2EP7QWidgetN11QAccessible4RoleERK7QString</primary></indexterm>_ZN17QAccessibleWidgetC2EP7QWidgetN11QAccessible4RoleERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessibleWidgetD0Ev</primary></indexterm>_ZN17QAccessibleWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessibleWidgetD1Ev</primary></indexterm>_ZN17QAccessibleWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAccessibleWidgetD2Ev</primary></indexterm>_ZN17QAccessibleWidgetD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QContextMenuEventC1ENS_6ReasonERK6QPoint</primary></indexterm>_ZN17QContextMenuEventC1ENS_6ReasonERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_</primary></indexterm>_ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_i</primary></indexterm>_ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_i <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QContextMenuEventC1ENS_6ReasonERK6QPointi</primary></indexterm>_ZN17QContextMenuEventC1ENS_6ReasonERK6QPointi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QContextMenuEventC2ENS_6ReasonERK6QPoint</primary></indexterm>_ZN17QContextMenuEventC2ENS_6ReasonERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_</primary></indexterm>_ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_i</primary></indexterm>_ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_i <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QContextMenuEventC2ENS_6ReasonERK6QPointi</primary></indexterm>_ZN17QContextMenuEventC2ENS_6ReasonERK6QPointi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QContextMenuEventD0Ev</primary></indexterm>_ZN17QContextMenuEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QContextMenuEventD1Ev</primary></indexterm>_ZN17QContextMenuEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QContextMenuEventD2Ev</primary></indexterm>_ZN17QContextMenuEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QFileIconProviderC1Ev</primary></indexterm>_ZN17QFileIconProviderC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QFileIconProviderC2Ev</primary></indexterm>_ZN17QFileIconProviderC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QFileIconProviderD0Ev</primary></indexterm>_ZN17QFileIconProviderD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QFileIconProviderD1Ev</primary></indexterm>_ZN17QFileIconProviderD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QFileIconProviderD2Ev</primary></indexterm>_ZN17QFileIconProviderD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QIconEnginePlugin11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN17QIconEnginePlugin11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QIconEnginePlugin11qt_metacastEPKc</primary></indexterm>_ZN17QIconEnginePlugin11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QIconEnginePluginC1EP7QObject</primary></indexterm>_ZN17QIconEnginePluginC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QIconEnginePluginC2EP7QObject</primary></indexterm>_ZN17QIconEnginePluginC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QIconEnginePluginD0Ev</primary></indexterm>_ZN17QIconEnginePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QIconEnginePluginD1Ev</primary></indexterm>_ZN17QIconEnginePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QIconEnginePluginD2Ev</primary></indexterm>_ZN17QIconEnginePluginD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QInputMethodEvent15setCommitStringERK7QStringii</primary></indexterm>_ZN17QInputMethodEvent15setCommitStringERK7QStringii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QInputMethodEventC1ERK7QStringRK5QListINS_9AttributeEE</primary></indexterm>_ZN17QInputMethodEventC1ERK7QStringRK5QListINS_9AttributeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QInputMethodEventC1ERKS_</primary></indexterm>_ZN17QInputMethodEventC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QInputMethodEventC1Ev</primary></indexterm>_ZN17QInputMethodEventC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QInputMethodEventC2ERK7QStringRK5QListINS_9AttributeEE</primary></indexterm>_ZN17QInputMethodEventC2ERK7QStringRK5QListINS_9AttributeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QInputMethodEventC2ERKS_</primary></indexterm>_ZN17QInputMethodEventC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QInputMethodEventC2Ev</primary></indexterm>_ZN17QInputMethodEventC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QInputMethodEventD0Ev</primary></indexterm>_ZN17QInputMethodEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QInputMethodEventD1Ev</primary></indexterm>_ZN17QInputMethodEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QStyleOptionFrameC1Ei</primary></indexterm>_ZN17QStyleOptionFrameC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QStyleOptionFrameC1Ev</primary></indexterm>_ZN17QStyleOptionFrameC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QStyleOptionFrameC2Ei</primary></indexterm>_ZN17QStyleOptionFrameC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QStyleOptionFrameC2Ev</primary></indexterm>_ZN17QStyleOptionFrameC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QStyleOptionTabV2C1ERK15QStyleOptionTab</primary></indexterm>_ZN17QStyleOptionTabV2C1ERK15QStyleOptionTab <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QStyleOptionTabV2C1Ei</primary></indexterm>_ZN17QStyleOptionTabV2C1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QStyleOptionTabV2C1Ev</primary></indexterm>_ZN17QStyleOptionTabV2C1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QStyleOptionTabV2C2ERK15QStyleOptionTab</primary></indexterm>_ZN17QStyleOptionTabV2C2ERK15QStyleOptionTab <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QStyleOptionTabV2C2Ei</primary></indexterm>_ZN17QStyleOptionTabV2C2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QStyleOptionTabV2C2Ev</primary></indexterm>_ZN17QStyleOptionTabV2C2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QStyleOptionTabV2aSERK15QStyleOptionTab</primary></indexterm>_ZN17QStyleOptionTabV2aSERK15QStyleOptionTab <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QTextInlineObject10setDescentEd</primary></indexterm>_ZN17QTextInlineObject10setDescentEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QTextInlineObject8setWidthEd</primary></indexterm>_ZN17QTextInlineObject8setWidthEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QTextInlineObject9setAscentEd</primary></indexterm>_ZN17QTextInlineObject9setAscentEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QDragResponseEventC1Eb</primary></indexterm>_ZN18QDragResponseEventC1Eb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QDragResponseEventC2Eb</primary></indexterm>_ZN18QDragResponseEventC2Eb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QDragResponseEventD0Ev</primary></indexterm>_ZN18QDragResponseEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QDragResponseEventD1Ev</primary></indexterm>_ZN18QDragResponseEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QDragResponseEventD2Ev</primary></indexterm>_ZN18QDragResponseEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QItemEditorFactory14defaultFactoryEv</primary></indexterm>_ZN18QItemEditorFactory14defaultFactoryEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QItemEditorFactory14registerEditorEN8QVariant4TypeEP22QItemEditorCreatorBase</primary></indexterm>_ZN18QItemEditorFactory14registerEditorEN8QVariant4TypeEP22QItemEditorCreatorBase <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QItemEditorFactory17setDefaultFactoryEPS_</primary></indexterm>_ZN18QItemEditorFactory17setDefaultFactoryEPS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QItemEditorFactoryD0Ev</primary></indexterm>_ZN18QItemEditorFactoryD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QItemEditorFactoryD1Ev</primary></indexterm>_ZN18QItemEditorFactoryD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QItemEditorFactoryD2Ev</primary></indexterm>_ZN18QItemEditorFactoryD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStandardItemModel10insertRowsEiiRK11QModelIndex</primary></indexterm>_ZN18QStandardItemModel10insertRowsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStandardItemModel10removeRowsEiiRK11QModelIndex</primary></indexterm>_ZN18QStandardItemModel10removeRowsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStandardItemModel11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN18QStandardItemModel11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStandardItemModel11qt_metacastEPKc</primary></indexterm>_ZN18QStandardItemModel11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStandardItemModel13insertColumnsEiiRK11QModelIndex</primary></indexterm>_ZN18QStandardItemModel13insertColumnsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStandardItemModel13removeColumnsEiiRK11QModelIndex</primary></indexterm>_ZN18QStandardItemModel13removeColumnsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStandardItemModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti</primary></indexterm>_ZN18QStandardItemModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStandardItemModel5clearEv</primary></indexterm>_ZN18QStandardItemModel5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStandardItemModel7setDataERK11QModelIndexRK8QVarianti</primary></indexterm>_ZN18QStandardItemModel7setDataERK11QModelIndexRK8QVarianti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStandardItemModelC1EP7QObject</primary></indexterm>_ZN18QStandardItemModelC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStandardItemModelC1EiiP7QObject</primary></indexterm>_ZN18QStandardItemModelC1EiiP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStandardItemModelC2EP7QObject</primary></indexterm>_ZN18QStandardItemModelC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStandardItemModelC2EiiP7QObject</primary></indexterm>_ZN18QStandardItemModelC2EiiP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStandardItemModelD0Ev</primary></indexterm>_ZN18QStandardItemModelD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStandardItemModelD1Ev</primary></indexterm>_ZN18QStandardItemModelD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStandardItemModelD2Ev</primary></indexterm>_ZN18QStandardItemModelD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStyleOptionButtonC1Ei</primary></indexterm>_ZN18QStyleOptionButtonC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStyleOptionButtonC1Ev</primary></indexterm>_ZN18QStyleOptionButtonC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStyleOptionButtonC2Ei</primary></indexterm>_ZN18QStyleOptionButtonC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStyleOptionButtonC2Ev</primary></indexterm>_ZN18QStyleOptionButtonC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStyleOptionHeaderC1Ei</primary></indexterm>_ZN18QStyleOptionHeaderC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStyleOptionHeaderC1Ev</primary></indexterm>_ZN18QStyleOptionHeaderC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStyleOptionHeaderC2Ei</primary></indexterm>_ZN18QStyleOptionHeaderC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStyleOptionHeaderC2Ev</primary></indexterm>_ZN18QStyleOptionHeaderC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStyleOptionSliderC1Ei</primary></indexterm>_ZN18QStyleOptionSliderC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStyleOptionSliderC1Ev</primary></indexterm>_ZN18QStyleOptionSliderC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QStyleOptionSliderC2Ei</primary></indexterm>_ZN18QStyleOptionSliderC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStyleOptionSliderC2Ev</primary></indexterm>_ZN18QStyleOptionSliderC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighter11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN18QSyntaxHighlighter11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighter11qt_metacastEPKc</primary></indexterm>_ZN18QSyntaxHighlighter11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighter11setDocumentEP13QTextDocument</primary></indexterm>_ZN18QSyntaxHighlighter11setDocumentEP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighter20setCurrentBlockStateEi</primary></indexterm>_ZN18QSyntaxHighlighter20setCurrentBlockStateEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighter23setCurrentBlockUserDataEP18QTextBlockUserData</primary></indexterm>_ZN18QSyntaxHighlighter23setCurrentBlockUserDataEP18QTextBlockUserData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighter9setFormatEiiRK15QTextCharFormat</primary></indexterm>_ZN18QSyntaxHighlighter9setFormatEiiRK15QTextCharFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighter9setFormatEiiRK5QFont</primary></indexterm>_ZN18QSyntaxHighlighter9setFormatEiiRK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighter9setFormatEiiRK6QColor</primary></indexterm>_ZN18QSyntaxHighlighter9setFormatEiiRK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighterC1EP13QTextDocument</primary></indexterm>_ZN18QSyntaxHighlighterC1EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighterC1EP7QObject</primary></indexterm>_ZN18QSyntaxHighlighterC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighterC1EP9QTextEdit</primary></indexterm>_ZN18QSyntaxHighlighterC1EP9QTextEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighterC2EP13QTextDocument</primary></indexterm>_ZN18QSyntaxHighlighterC2EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighterC2EP7QObject</primary></indexterm>_ZN18QSyntaxHighlighterC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighterC2EP9QTextEdit</primary></indexterm>_ZN18QSyntaxHighlighterC2EP9QTextEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighterD0Ev</primary></indexterm>_ZN18QSyntaxHighlighterD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighterD1Ev</primary></indexterm>_ZN18QSyntaxHighlighterD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighterD2Ev</primary></indexterm>_ZN18QSyntaxHighlighterD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QTextBlockUserDataD0Ev</primary></indexterm>_ZN18QTextBlockUserDataD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QTextBlockUserDataD1Ev</primary></indexterm>_ZN18QTextBlockUserDataD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QTextBlockUserDataD2Ev</primary></indexterm>_ZN18QTextBlockUserDataD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModel11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN19QAbstractProxyModel11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModel11qt_metacastEPKc</primary></indexterm>_ZN19QAbstractProxyModel11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModel14setSourceModelEP18QAbstractItemModel</primary></indexterm>_ZN19QAbstractProxyModel14setSourceModelEP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModel6revertEv</primary></indexterm>_ZN19QAbstractProxyModel6revertEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModel6submitEv</primary></indexterm>_ZN19QAbstractProxyModel6submitEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModelC1EP7QObject</primary></indexterm>_ZN19QAbstractProxyModelC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModelC1ER26QAbstractProxyModelPrivateP7QObject</primary></indexterm>_ZN19QAbstractProxyModelC1ER26QAbstractProxyModelPrivateP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModelC2EP7QObject</primary></indexterm>_ZN19QAbstractProxyModelC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModelC2ER26QAbstractProxyModelPrivateP7QObject</primary></indexterm>_ZN19QAbstractProxyModelC2ER26QAbstractProxyModelPrivateP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModelD0Ev</primary></indexterm>_ZN19QAbstractProxyModelD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModelD1Ev</primary></indexterm>_ZN19QAbstractProxyModelD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModelD2Ev</primary></indexterm>_ZN19QAbstractProxyModelD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea10paintEventEP11QPaintEvent</primary></indexterm>_ZN19QAbstractScrollArea10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea10wheelEventEP11QWheelEvent</primary></indexterm>_ZN19QAbstractScrollArea10wheelEventEP11QWheelEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN19QAbstractScrollArea11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea11qt_metacastEPKc</primary></indexterm>_ZN19QAbstractScrollArea11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea11resizeEventEP12QResizeEvent</primary></indexterm>_ZN19QAbstractScrollArea11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea13dragMoveEventEP14QDragMoveEvent</primary></indexterm>_ZN19QAbstractScrollArea13dragMoveEventEP14QDragMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN19QAbstractScrollArea13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea13viewportEventEP6QEvent</primary></indexterm>_ZN19QAbstractScrollArea13viewportEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea14dragEnterEventEP15QDragEnterEvent</primary></indexterm>_ZN19QAbstractScrollArea14dragEnterEventEP15QDragEnterEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea14dragLeaveEventEP15QDragLeaveEvent</primary></indexterm>_ZN19QAbstractScrollArea14dragLeaveEventEP15QDragLeaveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN19QAbstractScrollArea14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN19QAbstractScrollArea15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea16contextMenuEventEP17QContextMenuEvent</primary></indexterm>_ZN19QAbstractScrollArea16contextMenuEventEP17QContextMenuEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea16scrollContentsByEii</primary></indexterm>_ZN19QAbstractScrollArea16scrollContentsByEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN19QAbstractScrollArea17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea18setViewportMarginsEiiii</primary></indexterm>_ZN19QAbstractScrollArea18setViewportMarginsEiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea21mouseDoubleClickEventEP11QMouseEvent</primary></indexterm>_ZN19QAbstractScrollArea21mouseDoubleClickEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea26setVerticalScrollBarPolicyEN2Qt15ScrollBarPolicyE</primary></indexterm>_ZN19QAbstractScrollArea26setVerticalScrollBarPolicyEN2Qt15ScrollBarPolicyE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea28setHorizontalScrollBarPolicyEN2Qt15ScrollBarPolicyE</primary></indexterm>_ZN19QAbstractScrollArea28setHorizontalScrollBarPolicyEN2Qt15ScrollBarPolicyE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea5eventEP6QEvent</primary></indexterm>_ZN19QAbstractScrollArea5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea9dropEventEP10QDropEvent</primary></indexterm>_ZN19QAbstractScrollArea9dropEventEP10QDropEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollAreaC1EP7QWidget</primary></indexterm>_ZN19QAbstractScrollAreaC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollAreaC1ER26QAbstractScrollAreaPrivateP7QWidget</primary></indexterm>_ZN19QAbstractScrollAreaC1ER26QAbstractScrollAreaPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollAreaC2EP7QWidget</primary></indexterm>_ZN19QAbstractScrollAreaC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollAreaC2ER26QAbstractScrollAreaPrivateP7QWidget</primary></indexterm>_ZN19QAbstractScrollAreaC2ER26QAbstractScrollAreaPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollAreaD0Ev</primary></indexterm>_ZN19QAbstractScrollAreaD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollAreaD1Ev</primary></indexterm>_ZN19QAbstractScrollAreaD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollAreaD2Ev</primary></indexterm>_ZN19QAbstractScrollAreaD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QInputContextPlugin11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN19QInputContextPlugin11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QInputContextPlugin11qt_metacastEPKc</primary></indexterm>_ZN19QInputContextPlugin11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QInputContextPluginC1EP7QObject</primary></indexterm>_ZN19QInputContextPluginC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QInputContextPluginC2EP7QObject</primary></indexterm>_ZN19QInputContextPluginC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QInputContextPluginD0Ev</primary></indexterm>_ZN19QInputContextPluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QInputContextPluginD1Ev</primary></indexterm>_ZN19QInputContextPluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QInputContextPluginD2Ev</primary></indexterm>_ZN19QInputContextPluginD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN19QItemSelectionModel11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel11qt_metacastEPKc</primary></indexterm>_ZN19QItemSelectionModel11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel14currentChangedERK11QModelIndexS2_</primary></indexterm>_ZN19QItemSelectionModel14currentChangedERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel15setCurrentIndexERK11QModelIndex6QFlagsINS_13SelectionFlagEE</primary></indexterm>_ZN19QItemSelectionModel15setCurrentIndexERK11QModelIndex6QFlagsINS_13SelectionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel16selectionChangedERK14QItemSelectionS2_</primary></indexterm>_ZN19QItemSelectionModel16selectionChangedERK14QItemSelectionS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel17currentRowChangedERK11QModelIndexS2_</primary></indexterm>_ZN19QItemSelectionModel17currentRowChangedERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel20currentColumnChangedERK11QModelIndexS2_</primary></indexterm>_ZN19QItemSelectionModel20currentColumnChangedERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel20emitSelectionChangedERK14QItemSelectionS2_</primary></indexterm>_ZN19QItemSelectionModel20emitSelectionChangedERK14QItemSelectionS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel5clearEv</primary></indexterm>_ZN19QItemSelectionModel5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel5resetEv</primary></indexterm>_ZN19QItemSelectionModel5resetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel6selectERK11QModelIndex6QFlagsINS_13SelectionFlagEE</primary></indexterm>_ZN19QItemSelectionModel6selectERK11QModelIndex6QFlagsINS_13SelectionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel6selectERK14QItemSelection6QFlagsINS_13SelectionFlagEE</primary></indexterm>_ZN19QItemSelectionModel6selectERK14QItemSelection6QFlagsINS_13SelectionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModelC1EP18QAbstractItemModel</primary></indexterm>_ZN19QItemSelectionModelC1EP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModelC1EP18QAbstractItemModelP7QObject</primary></indexterm>_ZN19QItemSelectionModelC1EP18QAbstractItemModelP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModelC1ER26QItemSelectionModelPrivateP18QAbstractItemModel</primary></indexterm>_ZN19QItemSelectionModelC1ER26QItemSelectionModelPrivateP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModelC2EP18QAbstractItemModel</primary></indexterm>_ZN19QItemSelectionModelC2EP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModelC2EP18QAbstractItemModelP7QObject</primary></indexterm>_ZN19QItemSelectionModelC2EP18QAbstractItemModelP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModelC2ER26QItemSelectionModelPrivateP18QAbstractItemModel</primary></indexterm>_ZN19QItemSelectionModelC2ER26QItemSelectionModelPrivateP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModelD0Ev</primary></indexterm>_ZN19QItemSelectionModelD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModelD1Ev</primary></indexterm>_ZN19QItemSelectionModelD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModelD2Ev</primary></indexterm>_ZN19QItemSelectionModelD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QPainterPathStroker11setCapStyleEN2Qt11PenCapStyleE</primary></indexterm>_ZN19QPainterPathStroker11setCapStyleEN2Qt11PenCapStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QPainterPathStroker12setJoinStyleEN2Qt12PenJoinStyleE</primary></indexterm>_ZN19QPainterPathStroker12setJoinStyleEN2Qt12PenJoinStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QPainterPathStroker13setMiterLimitEd</primary></indexterm>_ZN19QPainterPathStroker13setMiterLimitEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QPainterPathStroker14setDashPatternEN2Qt8PenStyleE</primary></indexterm>_ZN19QPainterPathStroker14setDashPatternEN2Qt8PenStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QPainterPathStroker14setDashPatternERK7QVectorIdE</primary></indexterm>_ZN19QPainterPathStroker14setDashPatternERK7QVectorIdE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QPainterPathStroker17setCurveThresholdEd</primary></indexterm>_ZN19QPainterPathStroker17setCurveThresholdEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QPainterPathStroker8setWidthEd</primary></indexterm>_ZN19QPainterPathStroker8setWidthEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QPainterPathStrokerC1Ev</primary></indexterm>_ZN19QPainterPathStrokerC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QPainterPathStrokerC2Ev</primary></indexterm>_ZN19QPainterPathStrokerC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QPainterPathStrokerD1Ev</primary></indexterm>_ZN19QPainterPathStrokerD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QPainterPathStrokerD2Ev</primary></indexterm>_ZN19QPainterPathStrokerD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QStyleOptionComplexC1Eii</primary></indexterm>_ZN19QStyleOptionComplexC1Eii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QStyleOptionComplexC2Eii</primary></indexterm>_ZN19QStyleOptionComplexC2Eii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QStyleOptionFrameV2C1ERK17QStyleOptionFrame</primary></indexterm>_ZN19QStyleOptionFrameV2C1ERK17QStyleOptionFrame <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QStyleOptionFrameV2C1Ei</primary></indexterm>_ZN19QStyleOptionFrameV2C1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QStyleOptionFrameV2C1Ev</primary></indexterm>_ZN19QStyleOptionFrameV2C1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QStyleOptionFrameV2C2ERK17QStyleOptionFrame</primary></indexterm>_ZN19QStyleOptionFrameV2C2ERK17QStyleOptionFrame <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QStyleOptionFrameV2C2Ei</primary></indexterm>_ZN19QStyleOptionFrameV2C2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QStyleOptionFrameV2C2Ev</primary></indexterm>_ZN19QStyleOptionFrameV2C2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QStyleOptionFrameV2aSERK17QStyleOptionFrame</primary></indexterm>_ZN19QStyleOptionFrameV2aSERK17QStyleOptionFrame <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QStyleOptionSpinBoxC1Ei</primary></indexterm>_ZN19QStyleOptionSpinBoxC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QStyleOptionSpinBoxC1Ev</primary></indexterm>_ZN19QStyleOptionSpinBoxC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QStyleOptionSpinBoxC2Ei</primary></indexterm>_ZN19QStyleOptionSpinBoxC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QStyleOptionSpinBoxC2Ev</primary></indexterm>_ZN19QStyleOptionSpinBoxC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QStyleOptionToolBarC1Ei</primary></indexterm>_ZN19QStyleOptionToolBarC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QStyleOptionToolBarC1Ev</primary></indexterm>_ZN19QStyleOptionToolBarC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QStyleOptionToolBarC2Ei</primary></indexterm>_ZN19QStyleOptionToolBarC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QStyleOptionToolBarC2Ev</primary></indexterm>_ZN19QStyleOptionToolBarC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QStyleOptionToolBoxC1Ei</primary></indexterm>_ZN19QStyleOptionToolBoxC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QStyleOptionToolBoxC1Ev</primary></indexterm>_ZN19QStyleOptionToolBoxC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QStyleOptionToolBoxC2Ei</primary></indexterm>_ZN19QStyleOptionToolBoxC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QStyleOptionToolBoxC2Ev</primary></indexterm>_ZN19QStyleOptionToolBoxC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QToolBarChangeEventC1Eb</primary></indexterm>_ZN19QToolBarChangeEventC1Eb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QToolBarChangeEventC2Eb</primary></indexterm>_ZN19QToolBarChangeEventC2Eb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QToolBarChangeEventD0Ev</primary></indexterm>_ZN19QToolBarChangeEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QToolBarChangeEventD1Ev</primary></indexterm>_ZN19QToolBarChangeEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QToolBarChangeEventD2Ev</primary></indexterm>_ZN19QToolBarChangeEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QAbstractPrintDialog13setPrintRangeENS_10PrintRangeE</primary></indexterm>_ZN20QAbstractPrintDialog13setPrintRangeENS_10PrintRangeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QAbstractPrintDialog16addEnabledOptionENS_17PrintDialogOptionE</primary></indexterm>_ZN20QAbstractPrintDialog16addEnabledOptionENS_17PrintDialogOptionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QAbstractPrintDialog17setEnabledOptionsE6QFlagsINS_17PrintDialogOptionEE</primary></indexterm>_ZN20QAbstractPrintDialog17setEnabledOptionsE6QFlagsINS_17PrintDialogOptionEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QAbstractPrintDialog9setFromToEii</primary></indexterm>_ZN20QAbstractPrintDialog9setFromToEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QAbstractPrintDialog9setMinMaxEii</primary></indexterm>_ZN20QAbstractPrintDialog9setMinMaxEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QAbstractPrintDialogC1EP8QPrinterP7QWidget</primary></indexterm>_ZN20QAbstractPrintDialogC1EP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QAbstractPrintDialogC1ER27QAbstractPrintDialogPrivateP8QPrinterP7QWidget</primary></indexterm>_ZN20QAbstractPrintDialogC1ER27QAbstractPrintDialogPrivateP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QAbstractPrintDialogC2EP8QPrinterP7QWidget</primary></indexterm>_ZN20QAbstractPrintDialogC2EP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QAbstractPrintDialogC2ER27QAbstractPrintDialogPrivateP8QPrinterP7QWidget</primary></indexterm>_ZN20QAbstractPrintDialogC2ER27QAbstractPrintDialogPrivateP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QAbstractPrintDialogD0Ev</primary></indexterm>_ZN20QAbstractPrintDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QAbstractPrintDialogD1Ev</primary></indexterm>_ZN20QAbstractPrintDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QInputContextFactory11descriptionERK7QString</primary></indexterm>_ZN20QInputContextFactory11descriptionERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QInputContextFactory11displayNameERK7QString</primary></indexterm>_ZN20QInputContextFactory11displayNameERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QInputContextFactory4keysEv</primary></indexterm>_ZN20QInputContextFactory4keysEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QInputContextFactory6createERK7QStringP7QObject</primary></indexterm>_ZN20QInputContextFactory6createERK7QStringP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QInputContextFactory9languagesERK7QString</primary></indexterm>_ZN20QInputContextFactory9languagesERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QMenubarUpdatedEventC1EP8QMenuBar</primary></indexterm>_ZN20QMenubarUpdatedEventC1EP8QMenuBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QMenubarUpdatedEventC2EP8QMenuBar</primary></indexterm>_ZN20QMenubarUpdatedEventC2EP8QMenuBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QMenubarUpdatedEventD0Ev</primary></indexterm>_ZN20QMenubarUpdatedEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QMenubarUpdatedEventD1Ev</primary></indexterm>_ZN20QMenubarUpdatedEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture</primary></indexterm>_ZN20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QPictureFormatPlugin11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN20QPictureFormatPlugin11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QPictureFormatPlugin11qt_metacastEPKc</primary></indexterm>_ZN20QPictureFormatPlugin11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture</primary></indexterm>_ZN20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QPictureFormatPluginC1EP7QObject</primary></indexterm>_ZN20QPictureFormatPluginC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QPictureFormatPluginC2EP7QObject</primary></indexterm>_ZN20QPictureFormatPluginC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QPictureFormatPluginD0Ev</primary></indexterm>_ZN20QPictureFormatPluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QPictureFormatPluginD1Ev</primary></indexterm>_ZN20QPictureFormatPluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QPictureFormatPluginD2Ev</primary></indexterm>_ZN20QPictureFormatPluginD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QStyleHintReturnMaskC1Ev</primary></indexterm>_ZN20QStyleHintReturnMaskC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QStyleHintReturnMaskC2Ev</primary></indexterm>_ZN20QStyleHintReturnMaskC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QStyleOptionComboBoxC1Ei</primary></indexterm>_ZN20QStyleOptionComboBoxC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QStyleOptionComboBoxC1Ev</primary></indexterm>_ZN20QStyleOptionComboBoxC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QStyleOptionComboBoxC2Ei</primary></indexterm>_ZN20QStyleOptionComboBoxC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QStyleOptionComboBoxC2Ev</primary></indexterm>_ZN20QStyleOptionComboBoxC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QStyleOptionGroupBoxC1Ei</primary></indexterm>_ZN20QStyleOptionGroupBoxC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QStyleOptionGroupBoxC1Ev</primary></indexterm>_ZN20QStyleOptionGroupBoxC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QStyleOptionGroupBoxC2Ei</primary></indexterm>_ZN20QStyleOptionGroupBoxC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QStyleOptionGroupBoxC2Ev</primary></indexterm>_ZN20QStyleOptionGroupBoxC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QStyleOptionMenuItemC1Ei</primary></indexterm>_ZN20QStyleOptionMenuItemC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QStyleOptionMenuItemC1Ev</primary></indexterm>_ZN20QStyleOptionMenuItemC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QStyleOptionMenuItemC2Ei</primary></indexterm>_ZN20QStyleOptionMenuItemC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QStyleOptionMenuItemC2Ev</primary></indexterm>_ZN20QStyleOptionMenuItemC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QStyleOptionTitleBarC1Ei</primary></indexterm>_ZN20QStyleOptionTitleBarC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QStyleOptionTitleBarC1Ev</primary></indexterm>_ZN20QStyleOptionTitleBarC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QStyleOptionTitleBarC2Ei</primary></indexterm>_ZN20QStyleOptionTitleBarC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QStyleOptionTitleBarC2Ev</primary></indexterm>_ZN20QStyleOptionTitleBarC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QStyleOptionViewItemC1Ei</primary></indexterm>_ZN20QStyleOptionViewItemC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QStyleOptionViewItemC1Ev</primary></indexterm>_ZN20QStyleOptionViewItemC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QStyleOptionViewItemC2Ei</primary></indexterm>_ZN20QStyleOptionViewItemC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QStyleOptionViewItemC2Ev</primary></indexterm>_ZN20QStyleOptionViewItemC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QTextFrameLayoutDataD0Ev</primary></indexterm>_ZN20QTextFrameLayoutDataD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QTextFrameLayoutDataD1Ev</primary></indexterm>_ZN20QTextFrameLayoutDataD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN20QTextFrameLayoutDataD2Ev</primary></indexterm>_ZN20QTextFrameLayoutDataD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegate10commitDataEP7QWidget</primary></indexterm>_ZN21QAbstractItemDelegate10commitDataEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegate10elidedTextERK12QFontMetricsiN2Qt13TextElideModeERK7QString</primary></indexterm>_ZN21QAbstractItemDelegate10elidedTextERK12QFontMetricsiN2Qt13TextElideModeERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegate11closeEditorEP7QWidgetNS_11EndEditHintE</primary></indexterm>_ZN21QAbstractItemDelegate11closeEditorEP7QWidgetNS_11EndEditHintE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegate11editorEventEP6QEventP18QAbstractItemModelRK20QStyleOptionViewItemRK11QModelIndex</primary></indexterm>_ZN21QAbstractItemDelegate11editorEventEP6QEventP18QAbstractItemModelRK20QStyleOptionViewItemRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegate11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN21QAbstractItemDelegate11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegate11qt_metacastEPKc</primary></indexterm>_ZN21QAbstractItemDelegate11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegateC1EP7QObject</primary></indexterm>_ZN21QAbstractItemDelegateC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegateC1ER14QObjectPrivateP7QObject</primary></indexterm>_ZN21QAbstractItemDelegateC1ER14QObjectPrivateP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegateC2EP7QObject</primary></indexterm>_ZN21QAbstractItemDelegateC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegateC2ER14QObjectPrivateP7QObject</primary></indexterm>_ZN21QAbstractItemDelegateC2ER14QObjectPrivateP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegateD0Ev</primary></indexterm>_ZN21QAbstractItemDelegateD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegateD1Ev</primary></indexterm>_ZN21QAbstractItemDelegateD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegateD2Ev</primary></indexterm>_ZN21QAbstractItemDelegateD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel10insertRowsEiiRK11QModelIndex</primary></indexterm>_ZN21QSortFilterProxyModel10insertRowsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel10removeRowsEiiRK11QModelIndex</primary></indexterm>_ZN21QSortFilterProxyModel10removeRowsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN21QSortFilterProxyModel11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel11qt_metacastEPKc</primary></indexterm>_ZN21QSortFilterProxyModel11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex</primary></indexterm>_ZN21QSortFilterProxyModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel13insertColumnsEiiRK11QModelIndex</primary></indexterm>_ZN21QSortFilterProxyModel13insertColumnsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel13removeColumnsEiiRK11QModelIndex</primary></indexterm>_ZN21QSortFilterProxyModel13removeColumnsEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti</primary></indexterm>_ZN21QSortFilterProxyModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel14setSourceModelEP18QAbstractItemModel</primary></indexterm>_ZN21QSortFilterProxyModel14setSourceModelEP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel15setFilterRegExpERK7QRegExp</primary></indexterm>_ZN21QSortFilterProxyModel15setFilterRegExpERK7QRegExp <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel15setFilterRegExpERK7QString</primary></indexterm>_ZN21QSortFilterProxyModel15setFilterRegExpERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel17setFilterWildcardERK7QString</primary></indexterm>_ZN21QSortFilterProxyModel17setFilterWildcardERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel18setFilterKeyColumnEi</primary></indexterm>_ZN21QSortFilterProxyModel18setFilterKeyColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel20setFilterFixedStringERK7QString</primary></indexterm>_ZN21QSortFilterProxyModel20setFilterFixedStringERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel24setFilterCaseSensitivityEN2Qt15CaseSensitivityE</primary></indexterm>_ZN21QSortFilterProxyModel24setFilterCaseSensitivityEN2Qt15CaseSensitivityE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel4sortEiN2Qt9SortOrderE</primary></indexterm>_ZN21QSortFilterProxyModel4sortEiN2Qt9SortOrderE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel5clearEv</primary></indexterm>_ZN21QSortFilterProxyModel5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel7setDataERK11QModelIndexRK8QVarianti</primary></indexterm>_ZN21QSortFilterProxyModel7setDataERK11QModelIndexRK8QVarianti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel9fetchMoreERK11QModelIndex</primary></indexterm>_ZN21QSortFilterProxyModel9fetchMoreERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModelC1EP7QObject</primary></indexterm>_ZN21QSortFilterProxyModelC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModelC2EP7QObject</primary></indexterm>_ZN21QSortFilterProxyModelC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModelD0Ev</primary></indexterm>_ZN21QSortFilterProxyModelD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModelD1Ev</primary></indexterm>_ZN21QSortFilterProxyModelD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModelD2Ev</primary></indexterm>_ZN21QSortFilterProxyModelD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QStyleOptionFocusRectC1Ei</primary></indexterm>_ZN21QStyleOptionFocusRectC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QStyleOptionFocusRectC1Ev</primary></indexterm>_ZN21QStyleOptionFocusRectC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QStyleOptionFocusRectC2Ei</primary></indexterm>_ZN21QStyleOptionFocusRectC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QStyleOptionFocusRectC2Ev</primary></indexterm>_ZN21QStyleOptionFocusRectC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragment13fromPlainTextERK7QString</primary></indexterm>_ZN21QTextDocumentFragment13fromPlainTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragment8fromHtmlERK7QString</primary></indexterm>_ZN21QTextDocumentFragment8fromHtmlERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragmentC1EPK13QTextDocument</primary></indexterm>_ZN21QTextDocumentFragmentC1EPK13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragmentC1ERK11QTextCursor</primary></indexterm>_ZN21QTextDocumentFragmentC1ERK11QTextCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragmentC1ERKS_</primary></indexterm>_ZN21QTextDocumentFragmentC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragmentC1Ev</primary></indexterm>_ZN21QTextDocumentFragmentC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragmentC2EPK13QTextDocument</primary></indexterm>_ZN21QTextDocumentFragmentC2EPK13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragmentC2ERK11QTextCursor</primary></indexterm>_ZN21QTextDocumentFragmentC2ERK11QTextCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragmentC2ERKS_</primary></indexterm>_ZN21QTextDocumentFragmentC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragmentC2Ev</primary></indexterm>_ZN21QTextDocumentFragmentC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragmentD1Ev</primary></indexterm>_ZN21QTextDocumentFragmentD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragmentD2Ev</primary></indexterm>_ZN21QTextDocumentFragmentD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QTextDocumentFragmentaSERKS_</primary></indexterm>_ZN21QTextDocumentFragmentaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QAccessibleApplication8doActionEiiRK5QListI8QVariantE</primary></indexterm>_ZN22QAccessibleApplication8doActionEiiRK5QListI8QVariantE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QAccessibleApplicationC1Ev</primary></indexterm>_ZN22QAccessibleApplicationC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QAccessibleApplicationC2Ev</primary></indexterm>_ZN22QAccessibleApplicationC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QAccessibleApplicationD0Ev</primary></indexterm>_ZN22QAccessibleApplicationD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QAccessibleApplicationD1Ev</primary></indexterm>_ZN22QAccessibleApplicationD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QStyleFactoryInterfaceD0Ev</primary></indexterm>_ZN22QStyleFactoryInterfaceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QStyleFactoryInterfaceD1Ev</primary></indexterm>_ZN22QStyleFactoryInterfaceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QStyleOptionDockWidgetC1Ei</primary></indexterm>_ZN22QStyleOptionDockWidgetC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QStyleOptionDockWidgetC1Ev</primary></indexterm>_ZN22QStyleOptionDockWidgetC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QStyleOptionDockWidgetC2Ei</primary></indexterm>_ZN22QStyleOptionDockWidgetC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QStyleOptionDockWidgetC2Ev</primary></indexterm>_ZN22QStyleOptionDockWidgetC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QStyleOptionQ3ListViewC1Ei</primary></indexterm>_ZN22QStyleOptionQ3ListViewC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QStyleOptionQ3ListViewC1Ev</primary></indexterm>_ZN22QStyleOptionQ3ListViewC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QStyleOptionQ3ListViewC2Ei</primary></indexterm>_ZN22QStyleOptionQ3ListViewC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QStyleOptionQ3ListViewC2Ev</primary></indexterm>_ZN22QStyleOptionQ3ListViewC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QStyleOptionRubberBandC1Ei</primary></indexterm>_ZN22QStyleOptionRubberBandC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QStyleOptionRubberBandC1Ev</primary></indexterm>_ZN22QStyleOptionRubberBandC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QStyleOptionRubberBandC2Ei</primary></indexterm>_ZN22QStyleOptionRubberBandC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QStyleOptionRubberBandC2Ev</primary></indexterm>_ZN22QStyleOptionRubberBandC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QStyleOptionTabBarBaseC1Ei</primary></indexterm>_ZN22QStyleOptionTabBarBaseC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QStyleOptionTabBarBaseC1Ev</primary></indexterm>_ZN22QStyleOptionTabBarBaseC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QStyleOptionTabBarBaseC2Ei</primary></indexterm>_ZN22QStyleOptionTabBarBaseC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QStyleOptionTabBarBaseC2Ev</primary></indexterm>_ZN22QStyleOptionTabBarBaseC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QStyleOptionToolButtonC1Ei</primary></indexterm>_ZN22QStyleOptionToolButtonC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QStyleOptionToolButtonC1Ev</primary></indexterm>_ZN22QStyleOptionToolButtonC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QStyleOptionToolButtonC2Ei</primary></indexterm>_ZN22QStyleOptionToolButtonC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QStyleOptionToolButtonC2Ev</primary></indexterm>_ZN22QStyleOptionToolButtonC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QWhatsThisClickedEventC1ERK7QString</primary></indexterm>_ZN22QWhatsThisClickedEventC1ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QWhatsThisClickedEventC2ERK7QString</primary></indexterm>_ZN22QWhatsThisClickedEventC2ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QWhatsThisClickedEventD0Ev</primary></indexterm>_ZN22QWhatsThisClickedEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN22QWhatsThisClickedEventD1Ev</primary></indexterm>_ZN22QWhatsThisClickedEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN22QWhatsThisClickedEventD2Ev</primary></indexterm>_ZN22QWhatsThisClickedEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QAccessibleBridgePlugin11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN23QAccessibleBridgePlugin11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QAccessibleBridgePlugin11qt_metacastEPKc</primary></indexterm>_ZN23QAccessibleBridgePlugin11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QAccessibleBridgePluginC1EP7QObject</primary></indexterm>_ZN23QAccessibleBridgePluginC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QAccessibleBridgePluginC2EP7QObject</primary></indexterm>_ZN23QAccessibleBridgePluginC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QAccessibleBridgePluginD0Ev</primary></indexterm>_ZN23QAccessibleBridgePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QAccessibleBridgePluginD1Ev</primary></indexterm>_ZN23QAccessibleBridgePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QAccessibleBridgePluginD2Ev</primary></indexterm>_ZN23QAccessibleBridgePluginD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QPictureFormatInterfaceD0Ev</primary></indexterm>_ZN23QPictureFormatInterfaceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QPictureFormatInterfaceD1Ev</primary></indexterm>_ZN23QPictureFormatInterfaceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QStyleOptionProgressBarC1Ei</primary></indexterm>_ZN23QStyleOptionProgressBarC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QStyleOptionProgressBarC1Ev</primary></indexterm>_ZN23QStyleOptionProgressBarC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QStyleOptionProgressBarC2Ei</primary></indexterm>_ZN23QStyleOptionProgressBarC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QStyleOptionProgressBarC2Ev</primary></indexterm>_ZN23QStyleOptionProgressBarC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QTreeWidgetItemIteratorC1EP11QTreeWidget6QFlagsINS_12IteratorFlagEE</primary></indexterm>_ZN23QTreeWidgetItemIteratorC1EP11QTreeWidget6QFlagsINS_12IteratorFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QTreeWidgetItemIteratorC1EP15QTreeWidgetItem6QFlagsINS_12IteratorFlagEE</primary></indexterm>_ZN23QTreeWidgetItemIteratorC1EP15QTreeWidgetItem6QFlagsINS_12IteratorFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QTreeWidgetItemIteratorC1ERKS_</primary></indexterm>_ZN23QTreeWidgetItemIteratorC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QTreeWidgetItemIteratorC2EP11QTreeWidget6QFlagsINS_12IteratorFlagEE</primary></indexterm>_ZN23QTreeWidgetItemIteratorC2EP11QTreeWidget6QFlagsINS_12IteratorFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QTreeWidgetItemIteratorC2EP15QTreeWidgetItem6QFlagsINS_12IteratorFlagEE</primary></indexterm>_ZN23QTreeWidgetItemIteratorC2EP15QTreeWidgetItem6QFlagsINS_12IteratorFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QTreeWidgetItemIteratorC2ERKS_</primary></indexterm>_ZN23QTreeWidgetItemIteratorC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QTreeWidgetItemIteratorD1Ev</primary></indexterm>_ZN23QTreeWidgetItemIteratorD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QTreeWidgetItemIteratorD2Ev</primary></indexterm>_ZN23QTreeWidgetItemIteratorD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QTreeWidgetItemIteratoraSERKS_</primary></indexterm>_ZN23QTreeWidgetItemIteratoraSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QTreeWidgetItemIteratormmEv</primary></indexterm>_ZN23QTreeWidgetItemIteratormmEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QTreeWidgetItemIteratorppEv</primary></indexterm>_ZN23QTreeWidgetItemIteratorppEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QWindowStateChangeEventC1E6QFlagsIN2Qt11WindowStateEE</primary></indexterm>_ZN23QWindowStateChangeEventC1E6QFlagsIN2Qt11WindowStateEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QWindowStateChangeEventC1E6QFlagsIN2Qt11WindowStateEEb</primary></indexterm>_ZN23QWindowStateChangeEventC1E6QFlagsIN2Qt11WindowStateEEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QWindowStateChangeEventC2E6QFlagsIN2Qt11WindowStateEE</primary></indexterm>_ZN23QWindowStateChangeEventC2E6QFlagsIN2Qt11WindowStateEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QWindowStateChangeEventC2E6QFlagsIN2Qt11WindowStateEEb</primary></indexterm>_ZN23QWindowStateChangeEventC2E6QFlagsIN2Qt11WindowStateEEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QWindowStateChangeEventD0Ev</primary></indexterm>_ZN23QWindowStateChangeEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QWindowStateChangeEventD1Ev</primary></indexterm>_ZN23QWindowStateChangeEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN23QWindowStateChangeEventD2Ev</primary></indexterm>_ZN23QWindowStateChangeEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QAbstractPageSetupDialog7printerEv</primary></indexterm>_ZN24QAbstractPageSetupDialog7printerEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QAbstractPageSetupDialogC1EP8QPrinterP7QWidget</primary></indexterm>_ZN24QAbstractPageSetupDialogC1EP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QAbstractPageSetupDialogC1ER31QAbstractPageSetupDialogPrivateP8QPrinterP7QWidget</primary></indexterm>_ZN24QAbstractPageSetupDialogC1ER31QAbstractPageSetupDialogPrivateP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QAbstractPageSetupDialogC2EP8QPrinterP7QWidget</primary></indexterm>_ZN24QAbstractPageSetupDialogC2EP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QAbstractPageSetupDialogC2ER31QAbstractPageSetupDialogPrivateP8QPrinterP7QWidget</primary></indexterm>_ZN24QAbstractPageSetupDialogC2ER31QAbstractPageSetupDialogPrivateP8QPrinterP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QAbstractPageSetupDialogD0Ev</primary></indexterm>_ZN24QAbstractPageSetupDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QAbstractPageSetupDialogD1Ev</primary></indexterm>_ZN24QAbstractPageSetupDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QStyleOptionQ3DockWindowC1Ei</primary></indexterm>_ZN24QStyleOptionQ3DockWindowC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QStyleOptionQ3DockWindowC1Ev</primary></indexterm>_ZN24QStyleOptionQ3DockWindowC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN24QStyleOptionQ3DockWindowC2Ei</primary></indexterm>_ZN24QStyleOptionQ3DockWindowC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN24QStyleOptionQ3DockWindowC2Ev</primary></indexterm>_ZN24QStyleOptionQ3DockWindowC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN25QStyleOptionProgressBarV2C1ERK23QStyleOptionProgressBar</primary></indexterm>_ZN25QStyleOptionProgressBarV2C1ERK23QStyleOptionProgressBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN25QStyleOptionProgressBarV2C1ERKS_</primary></indexterm>_ZN25QStyleOptionProgressBarV2C1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN25QStyleOptionProgressBarV2C1Ei</primary></indexterm>_ZN25QStyleOptionProgressBarV2C1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN25QStyleOptionProgressBarV2C1Ev</primary></indexterm>_ZN25QStyleOptionProgressBarV2C1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN25QStyleOptionProgressBarV2C2ERK23QStyleOptionProgressBar</primary></indexterm>_ZN25QStyleOptionProgressBarV2C2ERK23QStyleOptionProgressBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN25QStyleOptionProgressBarV2C2ERKS_</primary></indexterm>_ZN25QStyleOptionProgressBarV2C2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN25QStyleOptionProgressBarV2C2Ei</primary></indexterm>_ZN25QStyleOptionProgressBarV2C2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN25QStyleOptionProgressBarV2C2Ev</primary></indexterm>_ZN25QStyleOptionProgressBarV2C2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN25QStyleOptionProgressBarV2aSERK23QStyleOptionProgressBar</primary></indexterm>_ZN25QStyleOptionProgressBarV2aSERK23QStyleOptionProgressBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN26QStyleOptionQ3ListViewItemC1Ei</primary></indexterm>_ZN26QStyleOptionQ3ListViewItemC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN26QStyleOptionQ3ListViewItemC1Ev</primary></indexterm>_ZN26QStyleOptionQ3ListViewItemC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN26QStyleOptionQ3ListViewItemC2Ei</primary></indexterm>_ZN26QStyleOptionQ3ListViewItemC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN26QStyleOptionQ3ListViewItemC2Ev</primary></indexterm>_ZN26QStyleOptionQ3ListViewItemC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN26QStyleOptionTabWidgetFrameC1Ei</primary></indexterm>_ZN26QStyleOptionTabWidgetFrameC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN26QStyleOptionTabWidgetFrameC1Ev</primary></indexterm>_ZN26QStyleOptionTabWidgetFrameC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN26QStyleOptionTabWidgetFrameC2Ei</primary></indexterm>_ZN26QStyleOptionTabWidgetFrameC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN26QStyleOptionTabWidgetFrameC2Ev</primary></indexterm>_ZN26QStyleOptionTabWidgetFrameC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN26QTableWidgetSelectionRangeC1ERKS_</primary></indexterm>_ZN26QTableWidgetSelectionRangeC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN26QTableWidgetSelectionRangeC1Eiiii</primary></indexterm>_ZN26QTableWidgetSelectionRangeC1Eiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN26QTableWidgetSelectionRangeC1Ev</primary></indexterm>_ZN26QTableWidgetSelectionRangeC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN26QTableWidgetSelectionRangeC2ERKS_</primary></indexterm>_ZN26QTableWidgetSelectionRangeC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN26QTableWidgetSelectionRangeC2Eiiii</primary></indexterm>_ZN26QTableWidgetSelectionRangeC2Eiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN26QTableWidgetSelectionRangeC2Ev</primary></indexterm>_ZN26QTableWidgetSelectionRangeC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN26QTableWidgetSelectionRangeD1Ev</primary></indexterm>_ZN26QTableWidgetSelectionRangeD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN26QTableWidgetSelectionRangeD2Ev</primary></indexterm>_ZN26QTableWidgetSelectionRangeD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout11formatIndexEi</primary></indexterm>_ZN27QAbstractTextDocumentLayout11formatIndexEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN27QAbstractTextDocumentLayout11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout11qt_metacastEPKc</primary></indexterm>_ZN27QAbstractTextDocumentLayout11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout14setPaintDeviceEP12QPaintDevice</primary></indexterm>_ZN27QAbstractTextDocumentLayout14setPaintDeviceEP12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout15registerHandlerEiP7QObject</primary></indexterm>_ZN27QAbstractTextDocumentLayout15registerHandlerEiP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout16drawInlineObjectEP8QPainterRK6QRectF17QTextInlineObjectiRK11QTextFormat</primary></indexterm>_ZN27QAbstractTextDocumentLayout16drawInlineObjectEP8QPainterRK6QRectF17QTextInlineObjectiRK11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout16pageCountChangedEi</primary></indexterm>_ZN27QAbstractTextDocumentLayout16pageCountChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout18resizeInlineObjectE17QTextInlineObjectiRK11QTextFormat</primary></indexterm>_ZN27QAbstractTextDocumentLayout18resizeInlineObjectE17QTextInlineObjectiRK11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout19documentSizeChangedERK6QSizeF</primary></indexterm>_ZN27QAbstractTextDocumentLayout19documentSizeChangedERK6QSizeF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout20positionInlineObjectE17QTextInlineObjectiRK11QTextFormat</primary></indexterm>_ZN27QAbstractTextDocumentLayout20positionInlineObjectE17QTextInlineObjectiRK11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout6formatEi</primary></indexterm>_ZN27QAbstractTextDocumentLayout6formatEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout6updateERK6QRectF</primary></indexterm>_ZN27QAbstractTextDocumentLayout6updateERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayoutC1EP13QTextDocument</primary></indexterm>_ZN27QAbstractTextDocumentLayoutC1EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayoutC1ER34QAbstractTextDocumentLayoutPrivateP13QTextDocument</primary></indexterm>_ZN27QAbstractTextDocumentLayoutC1ER34QAbstractTextDocumentLayoutPrivateP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayoutC2EP13QTextDocument</primary></indexterm>_ZN27QAbstractTextDocumentLayoutC2EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayoutC2ER34QAbstractTextDocumentLayoutPrivateP13QTextDocument</primary></indexterm>_ZN27QAbstractTextDocumentLayoutC2ER34QAbstractTextDocumentLayoutPrivateP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayoutD0Ev</primary></indexterm>_ZN27QAbstractTextDocumentLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayoutD1Ev</primary></indexterm>_ZN27QAbstractTextDocumentLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayoutD2Ev</primary></indexterm>_ZN27QAbstractTextDocumentLayoutD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QAccessibleFactoryInterfaceD0Ev</primary></indexterm>_ZN27QAccessibleFactoryInterfaceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QAccessibleFactoryInterfaceD1Ev</primary></indexterm>_ZN27QAccessibleFactoryInterfaceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QIconEngineFactoryInterfaceD0Ev</primary></indexterm>_ZN27QIconEngineFactoryInterfaceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN27QIconEngineFactoryInterfaceD1Ev</primary></indexterm>_ZN27QIconEngineFactoryInterfaceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN29QInputContextFactoryInterfaceD0Ev</primary></indexterm>_ZN29QInputContextFactoryInterfaceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN29QInputContextFactoryInterfaceD1Ev</primary></indexterm>_ZN29QInputContextFactoryInterfaceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN2Qt12codecForHtmlERK10QByteArray</primary></indexterm>_ZN2Qt12codecForHtmlERK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN2Qt15mightBeRichTextERK7QString</primary></indexterm>_ZN2Qt15mightBeRichTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN2Qt20convertFromPlainTextERK7QStringNS_14WhiteSpaceModeE</primary></indexterm>_ZN2Qt20convertFromPlainTextERK7QStringNS_14WhiteSpaceModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN2Qt6escapeERK7QString</primary></indexterm>_ZN2Qt6escapeERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN31QImageIOHandlerFactoryInterfaceD0Ev</primary></indexterm>_ZN31QImageIOHandlerFactoryInterfaceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN31QImageIOHandlerFactoryInterfaceD1Ev</primary></indexterm>_ZN31QImageIOHandlerFactoryInterfaceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN33QAccessibleBridgeFactoryInterfaceD0Ev</primary></indexterm>_ZN33QAccessibleBridgeFactoryInterfaceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN33QAccessibleBridgeFactoryInterfaceD1Ev</primary></indexterm>_ZN33QAccessibleBridgeFactoryInterfaceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPen10isDetachedEv</primary></indexterm>_ZN4QPen10isDetachedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN4QPen11setCapStyleEN2Qt11PenCapStyleE</primary></indexterm>_ZN4QPen11setCapStyleEN2Qt11PenCapStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE</primary></indexterm>_ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN4QPen13setMiterLimitEd</primary></indexterm>_ZN4QPen13setMiterLimitEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPen14setDashPatternERK7QVectorIdE</primary></indexterm>_ZN4QPen14setDashPatternERK7QVectorIdE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN4QPen8setBrushERK6QBrush</primary></indexterm>_ZN4QPen8setBrushERK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPen8setColorERK6QColor</primary></indexterm>_ZN4QPen8setColorERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN4QPen8setStyleEN2Qt8PenStyleE</primary></indexterm>_ZN4QPen8setStyleEN2Qt8PenStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPen8setWidthEi</primary></indexterm>_ZN4QPen8setWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN4QPen9setWidthFEd</primary></indexterm>_ZN4QPen9setWidthFEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPenC1EN2Qt8PenStyleE</primary></indexterm>_ZN4QPenC1EN2Qt8PenStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE</primary></indexterm>_ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPenC1ERK6QColor</primary></indexterm>_ZN4QPenC1ERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN4QPenC1ERKS_</primary></indexterm>_ZN4QPenC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPenC1Ev</primary></indexterm>_ZN4QPenC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN4QPenC2EN2Qt8PenStyleE</primary></indexterm>_ZN4QPenC2EN2Qt8PenStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPenC2ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE</primary></indexterm>_ZN4QPenC2ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN4QPenC2ERK6QColor</primary></indexterm>_ZN4QPenC2ERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPenC2ERKS_</primary></indexterm>_ZN4QPenC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN4QPenC2Ev</primary></indexterm>_ZN4QPenC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPenD1Ev</primary></indexterm>_ZN4QPenD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN4QPenD2Ev</primary></indexterm>_ZN4QPenD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN4QPenaSERKS_</primary></indexterm>_ZN4QPenaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDial10paintEventEP11QPaintEvent</primary></indexterm>_ZN5QDial10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDial11dialPressedEv</primary></indexterm>_ZN5QDial11dialPressedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDial11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN5QDial11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDial11qt_metacastEPKc</primary></indexterm>_ZN5QDial11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDial11resizeEventEP12QResizeEvent</primary></indexterm>_ZN5QDial11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDial11setWrappingEb</primary></indexterm>_ZN5QDial11setWrappingEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDial12dialReleasedEv</primary></indexterm>_ZN5QDial12dialReleasedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDial12sliderChangeEN15QAbstractSlider12SliderChangeE</primary></indexterm>_ZN5QDial12sliderChangeEN15QAbstractSlider12SliderChangeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDial14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN5QDial14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDial14setNotchTargetEd</primary></indexterm>_ZN5QDial14setNotchTargetEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDial15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN5QDial15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDial17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN5QDial17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDial17setNotchesVisibleEb</primary></indexterm>_ZN5QDial17setNotchesVisibleEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDial5eventEP6QEvent</primary></indexterm>_ZN5QDial5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDial9dialMovedEi</primary></indexterm>_ZN5QDial9dialMovedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDialC1EP7QWidget</primary></indexterm>_ZN5QDialC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDialC1EP7QWidgetPKc</primary></indexterm>_ZN5QDialC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDialC1EiiiiP7QWidgetPKc</primary></indexterm>_ZN5QDialC1EiiiiP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDialC2EP7QWidget</primary></indexterm>_ZN5QDialC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDialC2EP7QWidgetPKc</primary></indexterm>_ZN5QDialC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDialC2EiiiiP7QWidgetPKc</primary></indexterm>_ZN5QDialC2EiiiiP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDialD0Ev</primary></indexterm>_ZN5QDialD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDialD1Ev</primary></indexterm>_ZN5QDialD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDialD2Ev</primary></indexterm>_ZN5QDialD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDrag10setHotSpotERK6QPoint</primary></indexterm>_ZN5QDrag10setHotSpotERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDrag11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN5QDrag11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDrag11qt_metacastEPKc</primary></indexterm>_ZN5QDrag11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDrag11setMimeDataEP9QMimeData</primary></indexterm>_ZN5QDrag11setMimeDataEP9QMimeData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDrag13actionChangedEN2Qt10DropActionE</primary></indexterm>_ZN5QDrag13actionChangedEN2Qt10DropActionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDrag13setDragCursorERK7QPixmapN2Qt10DropActionE</primary></indexterm>_ZN5QDrag13setDragCursorERK7QPixmapN2Qt10DropActionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDrag13targetChangedEP7QWidget</primary></indexterm>_ZN5QDrag13targetChangedEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDrag5startE6QFlagsIN2Qt10DropActionEE</primary></indexterm>_ZN5QDrag5startE6QFlagsIN2Qt10DropActionEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDrag9setPixmapERK7QPixmap</primary></indexterm>_ZN5QDrag9setPixmapERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDragC1EP7QWidget</primary></indexterm>_ZN5QDragC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDragC2EP7QWidget</primary></indexterm>_ZN5QDragC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDragD0Ev</primary></indexterm>_ZN5QDragD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDragD1Ev</primary></indexterm>_ZN5QDragD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDragD2Ev</primary></indexterm>_ZN5QDragD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont10fromStringERK7QString</primary></indexterm>_ZN5QFont10fromStringERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont10initializeEv</primary></indexterm>_ZN5QFont10initializeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont10setKerningEb</primary></indexterm>_ZN5QFont10setKerningEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont10setRawModeEb</primary></indexterm>_ZN5QFont10setRawModeEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont10setRawNameERK7QString</primary></indexterm>_ZN5QFont10setRawNameERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont10setStretchEi</primary></indexterm>_ZN5QFont10setStretchEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont10substituteERK7QString</primary></indexterm>_ZN5QFont10substituteERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont11defaultFontEv</primary></indexterm>_ZN5QFont11defaultFontEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont11setOverlineEb</primary></indexterm>_ZN5QFont11setOverlineEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont11substitutesERK7QString</primary></indexterm>_ZN5QFont11substitutesERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont12setPixelSizeEi</primary></indexterm>_ZN5QFont12setPixelSizeEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont12setPointSizeEi</primary></indexterm>_ZN5QFont12setPointSizeEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont12setStrikeOutEb</primary></indexterm>_ZN5QFont12setStrikeOutEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont12setStyleHintENS_9StyleHintENS_13StyleStrategyE</primary></indexterm>_ZN5QFont12setStyleHintENS_9StyleHintENS_13StyleStrategyE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont12setUnderlineEb</primary></indexterm>_ZN5QFont12setUnderlineEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont13setFixedPitchEb</primary></indexterm>_ZN5QFont13setFixedPitchEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont13setPointSizeFEd</primary></indexterm>_ZN5QFont13setPointSizeFEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont13substitutionsEv</primary></indexterm>_ZN5QFont13substitutionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont14setDefaultFontERKS_</primary></indexterm>_ZN5QFont14setDefaultFontERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont15cacheStatisticsEv</primary></indexterm>_ZN5QFont15cacheStatisticsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont16setStyleStrategyENS_13StyleStrategyE</primary></indexterm>_ZN5QFont16setStyleStrategyENS_13StyleStrategyE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont17setPixelSizeFloatEd</primary></indexterm>_ZN5QFont17setPixelSizeFloatEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont18insertSubstitutionERK7QStringS2_</primary></indexterm>_ZN5QFont18insertSubstitutionERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont18removeSubstitutionERK7QString</primary></indexterm>_ZN5QFont18removeSubstitutionERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont19insertSubstitutionsERK7QStringRK11QStringList</primary></indexterm>_ZN5QFont19insertSubstitutionsERK7QStringRK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont7cleanupEv</primary></indexterm>_ZN5QFont7cleanupEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont8setStyleENS_5StyleE</primary></indexterm>_ZN5QFont8setStyleENS_5StyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFont9setFamilyERK7QString</primary></indexterm>_ZN5QFont9setFamilyERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFont9setWeightEi</primary></indexterm>_ZN5QFont9setWeightEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFontC1ERK7QStringiib</primary></indexterm>_ZN5QFontC1ERK7QStringiib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFontC1ERKS_</primary></indexterm>_ZN5QFontC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFontC1ERKS_P12QPaintDevice</primary></indexterm>_ZN5QFontC1ERKS_P12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFontC1Ev</primary></indexterm>_ZN5QFontC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFontC2ERK7QStringiib</primary></indexterm>_ZN5QFontC2ERK7QStringiib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFontC2ERKS_</primary></indexterm>_ZN5QFontC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFontC2ERKS_P12QPaintDevice</primary></indexterm>_ZN5QFontC2ERKS_P12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFontC2Ev</primary></indexterm>_ZN5QFontC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFontD1Ev</primary></indexterm>_ZN5QFontD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QFontD2Ev</primary></indexterm>_ZN5QFontD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QFontaSERKS_</primary></indexterm>_ZN5QFontaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QIcon10pixmapSizeENS_4SizeE</primary></indexterm>_ZN5QIcon10pixmapSizeENS_4SizeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QIcon13setPixmapSizeENS_4SizeERK5QSize</primary></indexterm>_ZN5QIcon13setPixmapSizeENS_4SizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QIcon7addFileERK7QStringRK5QSizeNS_4ModeENS_5StateE</primary></indexterm>_ZN5QIcon7addFileERK7QStringRK5QSizeNS_4ModeENS_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QIcon9addPixmapERK7QPixmapNS_4ModeENS_5StateE</primary></indexterm>_ZN5QIcon9addPixmapERK7QPixmapNS_4ModeENS_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QIconC1EP11QIconEngine</primary></indexterm>_ZN5QIconC1EP11QIconEngine <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QIconC1ERK7QPixmap</primary></indexterm>_ZN5QIconC1ERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QIconC1ERK7QString</primary></indexterm>_ZN5QIconC1ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QIconC1ERKS_</primary></indexterm>_ZN5QIconC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QIconC1Ev</primary></indexterm>_ZN5QIconC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QIconC2EP11QIconEngine</primary></indexterm>_ZN5QIconC2EP11QIconEngine <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QIconC2ERK7QPixmap</primary></indexterm>_ZN5QIconC2ERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QIconC2ERK7QString</primary></indexterm>_ZN5QIconC2ERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QIconC2ERKS_</primary></indexterm>_ZN5QIconC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QIconC2Ev</primary></indexterm>_ZN5QIconC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QIconD1Ev</primary></indexterm>_ZN5QIconD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QIconD2Ev</primary></indexterm>_ZN5QIconD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QIconaSERKS_</primary></indexterm>_ZN5QIconaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu10enterEventEP6QEvent</primary></indexterm>_ZN5QMenu10enterEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu10insertItemEP9QMenuItemii</primary></indexterm>_ZN5QMenu10insertItemEP9QMenuItemii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu10insertMenuEP7QActionPS_</primary></indexterm>_ZN5QMenu10insertMenuEP7QActionPS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu10leaveEventEP6QEvent</primary></indexterm>_ZN5QMenu10leaveEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu10paintEventEP11QPaintEvent</primary></indexterm>_ZN5QMenu10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu10timerEventEP11QTimerEvent</primary></indexterm>_ZN5QMenu10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu10wheelEventEP11QWheelEvent</primary></indexterm>_ZN5QMenu10wheelEventEP11QWheelEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu11aboutToHideEv</primary></indexterm>_ZN5QMenu11aboutToHideEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu11aboutToShowEv</primary></indexterm>_ZN5QMenu11aboutToShowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu11actionEventEP12QActionEvent</primary></indexterm>_ZN5QMenu11actionEventEP12QActionEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu11changeEventEP6QEvent</primary></indexterm>_ZN5QMenu11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu11highlightedEi</primary></indexterm>_ZN5QMenu11highlightedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN5QMenu11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu11qt_metacastEPKc</primary></indexterm>_ZN5QMenu11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu12addSeparatorEv</primary></indexterm>_ZN5QMenu12addSeparatorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN5QMenu13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN5QMenu14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu14setNoReplayForEP7QWidget</primary></indexterm>_ZN5QMenu14setNoReplayForEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu15hideTearOffMenuEv</primary></indexterm>_ZN5QMenu15hideTearOffMenuEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu15insertSeparatorEP7QAction</primary></indexterm>_ZN5QMenu15insertSeparatorEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu15insertSeparatorEi</primary></indexterm>_ZN5QMenu15insertSeparatorEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN5QMenu15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu15setActiveActionEP7QAction</primary></indexterm>_ZN5QMenu15setActiveActionEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu16setDefaultActionEP7QAction</primary></indexterm>_ZN5QMenu16setDefaultActionEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu16setItemParameterEii</primary></indexterm>_ZN5QMenu16setItemParameterEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN5QMenu17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu17setTearOffEnabledEb</primary></indexterm>_ZN5QMenu17setTearOffEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu4execE5QListIP7QActionERK6QPointS2_</primary></indexterm>_ZN5QMenu4execE5QListIP7QActionERK6QPointS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu4execERK6QPointP7QAction</primary></indexterm>_ZN5QMenu4execERK6QPointP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu4execEv</primary></indexterm>_ZN5QMenu4execEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu5clearEv</primary></indexterm>_ZN5QMenu5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu5eventEP6QEvent</primary></indexterm>_ZN5QMenu5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu5popupERK6QPointP7QAction</primary></indexterm>_ZN5QMenu5popupERK6QPointP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu5setIdEii</primary></indexterm>_ZN5QMenu5setIdEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu7addMenuEPS_</primary></indexterm>_ZN5QMenu7addMenuEPS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu7addMenuERK5QIconRK7QString</primary></indexterm>_ZN5QMenu7addMenuERK5QIconRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu7addMenuERK7QString</primary></indexterm>_ZN5QMenu7addMenuERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu7hoveredEP7QAction</primary></indexterm>_ZN5QMenu7hoveredEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu7setIconERK5QIcon</primary></indexterm>_ZN5QMenu7setIconERK5QIcon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu8setTitleERK7QString</primary></indexterm>_ZN5QMenu8setTitleERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu9activatedEi</primary></indexterm>_ZN5QMenu9activatedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu9addActionERK5QIconRK7QString</primary></indexterm>_ZN5QMenu9addActionERK5QIconRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu9addActionERK5QIconRK7QStringPK7QObjectPKcRK12QKeySequence</primary></indexterm>_ZN5QMenu9addActionERK5QIconRK7QStringPK7QObjectPKcRK12QKeySequence <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu9addActionERK7QString</primary></indexterm>_ZN5QMenu9addActionERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu9addActionERK7QStringPK7QObjectPKcRK12QKeySequence</primary></indexterm>_ZN5QMenu9addActionERK7QStringPK7QObjectPKcRK12QKeySequence <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu9findPopupEPS_Pi</primary></indexterm>_ZN5QMenu9findPopupEPS_Pi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenu9hideEventEP10QHideEvent</primary></indexterm>_ZN5QMenu9hideEventEP10QHideEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu9triggeredEP7QAction</primary></indexterm>_ZN5QMenu9triggeredEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenuC1EP7QWidget</primary></indexterm>_ZN5QMenuC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenuC1ERK7QStringP7QWidget</primary></indexterm>_ZN5QMenuC1ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenuC2EP7QWidget</primary></indexterm>_ZN5QMenuC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenuC2ERK7QStringP7QWidget</primary></indexterm>_ZN5QMenuC2ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenuD0Ev</primary></indexterm>_ZN5QMenuD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenuD1Ev</primary></indexterm>_ZN5QMenuD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QMenuD2Ev</primary></indexterm>_ZN5QMenuD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrush10setTextureERK7QPixmap</primary></indexterm>_ZN6QBrush10setTextureERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrush8setColorERK6QColor</primary></indexterm>_ZN6QBrush8setColorERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrush8setStyleEN2Qt10BrushStyleE</primary></indexterm>_ZN6QBrush8setStyleEN2Qt10BrushStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrushC1EN2Qt10BrushStyleE</primary></indexterm>_ZN6QBrushC1EN2Qt10BrushStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE</primary></indexterm>_ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrushC1EN2Qt11GlobalColorERK7QPixmap</primary></indexterm>_ZN6QBrushC1EN2Qt11GlobalColorERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE</primary></indexterm>_ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrushC1ERK6QColorRK7QPixmap</primary></indexterm>_ZN6QBrushC1ERK6QColorRK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrushC1ERK7QPixmap</primary></indexterm>_ZN6QBrushC1ERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrushC1ERK9QGradient</primary></indexterm>_ZN6QBrushC1ERK9QGradient <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrushC1ERKS_</primary></indexterm>_ZN6QBrushC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrushC1Ev</primary></indexterm>_ZN6QBrushC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrushC2EN2Qt10BrushStyleE</primary></indexterm>_ZN6QBrushC2EN2Qt10BrushStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrushC2EN2Qt11GlobalColorENS0_10BrushStyleE</primary></indexterm>_ZN6QBrushC2EN2Qt11GlobalColorENS0_10BrushStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrushC2EN2Qt11GlobalColorERK7QPixmap</primary></indexterm>_ZN6QBrushC2EN2Qt11GlobalColorERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrushC2ERK6QColorN2Qt10BrushStyleE</primary></indexterm>_ZN6QBrushC2ERK6QColorN2Qt10BrushStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrushC2ERK6QColorRK7QPixmap</primary></indexterm>_ZN6QBrushC2ERK6QColorRK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrushC2ERK7QPixmap</primary></indexterm>_ZN6QBrushC2ERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrushC2ERK9QGradient</primary></indexterm>_ZN6QBrushC2ERK9QGradient <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrushC2ERKS_</primary></indexterm>_ZN6QBrushC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrushC2Ev</primary></indexterm>_ZN6QBrushC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrushD1Ev</primary></indexterm>_ZN6QBrushD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QBrushD2Ev</primary></indexterm>_ZN6QBrushD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QBrushaSERKS_</primary></indexterm>_ZN6QBrushaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor10colorNamesEv</primary></indexterm>_ZN6QColor10colorNamesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor10invalidateEv</primary></indexterm>_ZN6QColor10invalidateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor13setNamedColorERK7QString</primary></indexterm>_ZN6QColor13setNamedColorERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor6setHsvEiiii</primary></indexterm>_ZN6QColor6setHsvEiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor6setRedEi</primary></indexterm>_ZN6QColor6setRedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor6setRgbEiiii</primary></indexterm>_ZN6QColor6setRgbEiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor6setRgbEj</primary></indexterm>_ZN6QColor6setRgbEj <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor7fromHsvEiiii</primary></indexterm>_ZN6QColor7fromHsvEiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor7fromRgbEiiii</primary></indexterm>_ZN6QColor7fromRgbEiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor7fromRgbEj</primary></indexterm>_ZN6QColor7fromRgbEj <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor7getCmykEPiS0_S0_S0_S0_</primary></indexterm>_ZN6QColor7getCmykEPiS0_S0_S0_S0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor7setBlueEi</primary></indexterm>_ZN6QColor7setBlueEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor7setCmykEiiiii</primary></indexterm>_ZN6QColor7setCmykEiiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor7setHsvFEdddd</primary></indexterm>_ZN6QColor7setHsvFEdddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor7setRedFEd</primary></indexterm>_ZN6QColor7setRedFEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor7setRgbFEdddd</primary></indexterm>_ZN6QColor7setRgbFEdddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor7setRgbaEj</primary></indexterm>_ZN6QColor7setRgbaEj <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor8fromCmykEiiiii</primary></indexterm>_ZN6QColor8fromCmykEiiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor8fromHsvFEdddd</primary></indexterm>_ZN6QColor8fromHsvFEdddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor8fromRgbFEdddd</primary></indexterm>_ZN6QColor8fromRgbFEdddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor8fromRgbaEj</primary></indexterm>_ZN6QColor8fromRgbaEj <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor8getCmykFEPdS0_S0_S0_S0_</primary></indexterm>_ZN6QColor8getCmykFEPdS0_S0_S0_S0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor8setAlphaEi</primary></indexterm>_ZN6QColor8setAlphaEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor8setBlueFEd</primary></indexterm>_ZN6QColor8setBlueFEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor8setCmykFEddddd</primary></indexterm>_ZN6QColor8setCmykFEddddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor8setGreenEi</primary></indexterm>_ZN6QColor8setGreenEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor9fromCmykFEddddd</primary></indexterm>_ZN6QColor9fromCmykFEddddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColor9setAlphaFEd</primary></indexterm>_ZN6QColor9setAlphaFEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColor9setGreenFEd</primary></indexterm>_ZN6QColor9setGreenFEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColorC1EN2Qt11GlobalColorE</primary></indexterm>_ZN6QColorC1EN2Qt11GlobalColorE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColorC1Ej</primary></indexterm>_ZN6QColorC1Ej <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColorC2EN2Qt11GlobalColorE</primary></indexterm>_ZN6QColorC2EN2Qt11GlobalColorE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColorC2Ej</primary></indexterm>_ZN6QColorC2Ej <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QColoraSEN2Qt11GlobalColorE</primary></indexterm>_ZN6QColoraSEN2Qt11GlobalColorE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QColoraSERKS_</primary></indexterm>_ZN6QColoraSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrame10paintEventEP11QPaintEvent</primary></indexterm>_ZN6QFrame10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QFrame11changeEventEP6QEvent</primary></indexterm>_ZN6QFrame11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrame11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN6QFrame11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QFrame11qt_metacastEPKc</primary></indexterm>_ZN6QFrame11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrame12setFrameRectERK5QRect</primary></indexterm>_ZN6QFrame12setFrameRectERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QFrame12setLineWidthEi</primary></indexterm>_ZN6QFrame12setLineWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrame13setFrameShapeENS_5ShapeE</primary></indexterm>_ZN6QFrame13setFrameShapeENS_5ShapeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QFrame13setFrameStyleEi</primary></indexterm>_ZN6QFrame13setFrameStyleEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrame14setFrameShadowENS_6ShadowE</primary></indexterm>_ZN6QFrame14setFrameShadowENS_6ShadowE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QFrame15setMidLineWidthEi</primary></indexterm>_ZN6QFrame15setMidLineWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrame5eventEP6QEvent</primary></indexterm>_ZN6QFrame5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QFrame9drawFrameEP8QPainter</primary></indexterm>_ZN6QFrame9drawFrameEP8QPainter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrameC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QFrameC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QFrameC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QFrameC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrameC1ER13QFramePrivateP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QFrameC1ER13QFramePrivateP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QFrameC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QFrameC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrameC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QFrameC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QFrameC2ER13QFramePrivateP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QFrameC2ER13QFramePrivateP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrameD0Ev</primary></indexterm>_ZN6QFrameD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QFrameD1Ev</primary></indexterm>_ZN6QFrameD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrameD2Ev</primary></indexterm>_ZN6QFrameD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage10trueMatrixERK7QMatrixii</primary></indexterm>_ZN6QImage10trueMatrixERK7QMatrixii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage12invertPixelsENS_10InvertModeE</primary></indexterm>_ZN6QImage12invertPixelsENS_10InvertModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage12loadFromDataEPKhiPKc</primary></indexterm>_ZN6QImage12loadFromDataEPKhiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage12setNumColorsEi</primary></indexterm>_ZN6QImage12setNumColorsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage13setColorTableE7QVectorIjE</primary></indexterm>_ZN6QImage13setColorTableE7QVectorIjE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage14setAlphaBufferEb</primary></indexterm>_ZN6QImage14setAlphaBufferEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage15setAlphaChannelERKS_</primary></indexterm>_ZN6QImage15setAlphaChannelERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage16setDotsPerMeterXEi</primary></indexterm>_ZN6QImage16setDotsPerMeterXEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage16setDotsPerMeterYEi</primary></indexterm>_ZN6QImage16setDotsPerMeterYEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage4bitsEv</primary></indexterm>_ZN6QImage4bitsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage4fillEj</primary></indexterm>_ZN6QImage4fillEj <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage4loadEP9QIODevicePKc</primary></indexterm>_ZN6QImage4loadEP9QIODevicePKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage4loadERK7QStringPKc</primary></indexterm>_ZN6QImage4loadERK7QStringPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage6createERK5QSizeiiNS_6EndianE</primary></indexterm>_ZN6QImage6createERK5QSizeiiNS_6EndianE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage6createEiiiiNS_6EndianE</primary></indexterm>_ZN6QImage6createEiiiiNS_6EndianE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage6detachEv</primary></indexterm>_ZN6QImage6detachEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage7setTextEPKcS1_RK7QString</primary></indexterm>_ZN6QImage7setTextEPKcS1_RK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage7setTextERK7QStringS2_</primary></indexterm>_ZN6QImage7setTextERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage8fromDataEPKhiPKc</primary></indexterm>_ZN6QImage8fromDataEPKhiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage8scanLineEi</primary></indexterm>_ZN6QImage8scanLineEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage8setColorEij</primary></indexterm>_ZN6QImage8setColorEij <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage8setPixelEiij</primary></indexterm>_ZN6QImage8setPixelEiij <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImage9jumpTableEv</primary></indexterm>_ZN6QImage9jumpTableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImage9setOffsetERK6QPoint</primary></indexterm>_ZN6QImage9setOffsetERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageC1EPKPKc</primary></indexterm>_ZN6QImageC1EPKPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageC1EPKcS1_</primary></indexterm>_ZN6QImageC1EPKcS1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageC1EPhiiNS_6FormatE</primary></indexterm>_ZN6QImageC1EPhiiNS_6FormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageC1EPhiiiPKjiNS_6EndianE</primary></indexterm>_ZN6QImageC1EPhiiiPKjiNS_6EndianE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageC1ERK5QSizeNS_6FormatE</primary></indexterm>_ZN6QImageC1ERK5QSizeNS_6FormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageC1ERK5QSizeiiNS_6EndianE</primary></indexterm>_ZN6QImageC1ERK5QSizeiiNS_6EndianE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageC1ERK7QStringPKc</primary></indexterm>_ZN6QImageC1ERK7QStringPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageC1ERKS_</primary></indexterm>_ZN6QImageC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageC1EiiNS_6FormatE</primary></indexterm>_ZN6QImageC1EiiNS_6FormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageC1EiiiiNS_6EndianE</primary></indexterm>_ZN6QImageC1EiiiiNS_6EndianE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageC1Ev</primary></indexterm>_ZN6QImageC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageC2EPKPKc</primary></indexterm>_ZN6QImageC2EPKPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageC2EPKcS1_</primary></indexterm>_ZN6QImageC2EPKcS1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageC2EPhiiNS_6FormatE</primary></indexterm>_ZN6QImageC2EPhiiNS_6FormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageC2EPhiiiPKjiNS_6EndianE</primary></indexterm>_ZN6QImageC2EPhiiiPKjiNS_6EndianE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageC2ERK5QSizeNS_6FormatE</primary></indexterm>_ZN6QImageC2ERK5QSizeNS_6FormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageC2ERK5QSizeiiNS_6EndianE</primary></indexterm>_ZN6QImageC2ERK5QSizeiiNS_6EndianE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageC2ERK7QStringPKc</primary></indexterm>_ZN6QImageC2ERK7QStringPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageC2ERKS_</primary></indexterm>_ZN6QImageC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageC2EiiNS_6FormatE</primary></indexterm>_ZN6QImageC2EiiNS_6FormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageC2EiiiiNS_6EndianE</primary></indexterm>_ZN6QImageC2EiiiiNS_6EndianE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageC2Ev</primary></indexterm>_ZN6QImageC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageD0Ev</primary></indexterm>_ZN6QImageD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageD1Ev</primary></indexterm>_ZN6QImageD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QImageD2Ev</primary></indexterm>_ZN6QImageD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QImageaSERKS_</primary></indexterm>_ZN6QImageaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabel10paintEventEP11QPaintEvent</primary></indexterm>_ZN6QLabel10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabel10setPictureERK8QPicture</primary></indexterm>_ZN6QLabel10setPictureERK8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabel11changeEventEP6QEvent</primary></indexterm>_ZN6QLabel11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabel11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN6QLabel11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabel11qt_metacastEPKc</primary></indexterm>_ZN6QLabel11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabel11setWordWrapEb</primary></indexterm>_ZN6QLabel11setWordWrapEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabel12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN6QLabel12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabel12setAlignmentEi</primary></indexterm>_ZN6QLabel12setAlignmentEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabel13setTextFormatEN2Qt10TextFormatE</primary></indexterm>_ZN6QLabel13setTextFormatEN2Qt10TextFormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabel17setScaledContentsEb</primary></indexterm>_ZN6QLabel17setScaledContentsEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabel5clearEv</primary></indexterm>_ZN6QLabel5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabel5eventEP6QEvent</primary></indexterm>_ZN6QLabel5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabel6setNumEd</primary></indexterm>_ZN6QLabel6setNumEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabel6setNumEi</primary></indexterm>_ZN6QLabel6setNumEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabel7setTextERK7QString</primary></indexterm>_ZN6QLabel7setTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabel8setBuddyEP7QWidget</primary></indexterm>_ZN6QLabel8setBuddyEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabel8setMovieEP6QMovie</primary></indexterm>_ZN6QLabel8setMovieEP6QMovie <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabel9setIndentEi</primary></indexterm>_ZN6QLabel9setIndentEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabel9setMarginEi</primary></indexterm>_ZN6QLabel9setMarginEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabel9setPixmapERK7QPixmap</primary></indexterm>_ZN6QLabel9setPixmapERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabelC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QLabelC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabelC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QLabelC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabelC1EP7QWidgetRK7QStringS1_PKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QLabelC1EP7QWidgetRK7QStringS1_PKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabelC1ERK7QStringP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QLabelC1ERK7QStringP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabelC1ERK7QStringP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QLabelC1ERK7QStringP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabelC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QLabelC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabelC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QLabelC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabelC2EP7QWidgetRK7QStringS1_PKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QLabelC2EP7QWidgetRK7QStringS1_PKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabelC2ERK7QStringP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QLabelC2ERK7QStringP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabelC2ERK7QStringP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN6QLabelC2ERK7QStringP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabelD0Ev</primary></indexterm>_ZN6QLabelD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QLabelD1Ev</primary></indexterm>_ZN6QLabelD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabelD2Ev</primary></indexterm>_ZN6QLabelD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie10scaledSizeEv</primary></indexterm>_ZN6QMovie10scaledSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie11jumpToFrameEi</primary></indexterm>_ZN6QMovie11jumpToFrameEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN6QMovie11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie11qt_metacastEPKc</primary></indexterm>_ZN6QMovie11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie11setFileNameERK7QString</primary></indexterm>_ZN6QMovie11setFileNameERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie12frameChangedEi</primary></indexterm>_ZN6QMovie12frameChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie12setCacheModeENS_9CacheModeE</primary></indexterm>_ZN6QMovie12setCacheModeENS_9CacheModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie12stateChangedENS_10MovieStateE</primary></indexterm>_ZN6QMovie12stateChangedENS_10MovieStateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie13setScaledSizeERK5QSize</primary></indexterm>_ZN6QMovie13setScaledSizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie15jumpToNextFrameEv</primary></indexterm>_ZN6QMovie15jumpToNextFrameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie16supportedFormatsEv</primary></indexterm>_ZN6QMovie16supportedFormatsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie18setBackgroundColorERK6QColor</primary></indexterm>_ZN6QMovie18setBackgroundColorERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie4stopEv</primary></indexterm>_ZN6QMovie4stopEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie5errorEN12QImageReader16ImageReaderErrorE</primary></indexterm>_ZN6QMovie5errorEN12QImageReader16ImageReaderErrorE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie5startEv</primary></indexterm>_ZN6QMovie5startEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie7resizedERK5QSize</primary></indexterm>_ZN6QMovie7resizedERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie7startedEv</primary></indexterm>_ZN6QMovie7startedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie7updatedERK5QRect</primary></indexterm>_ZN6QMovie7updatedERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie8finishedEv</primary></indexterm>_ZN6QMovie8finishedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie8setSpeedEi</primary></indexterm>_ZN6QMovie8setSpeedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie9cacheModeEv</primary></indexterm>_ZN6QMovie9cacheModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie9setDeviceEP9QIODevice</primary></indexterm>_ZN6QMovie9setDeviceEP9QIODevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie9setFormatERK10QByteArray</primary></indexterm>_ZN6QMovie9setFormatERK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovie9setPausedEb</primary></indexterm>_ZN6QMovie9setPausedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovieC1EP7QObject</primary></indexterm>_ZN6QMovieC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovieC1EP9QIODeviceRK10QByteArrayP7QObject</primary></indexterm>_ZN6QMovieC1EP9QIODeviceRK10QByteArrayP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovieC1ERK7QStringRK10QByteArrayP7QObject</primary></indexterm>_ZN6QMovieC1ERK7QStringRK10QByteArrayP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovieC2EP7QObject</primary></indexterm>_ZN6QMovieC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovieC2EP9QIODeviceRK10QByteArrayP7QObject</primary></indexterm>_ZN6QMovieC2EP9QIODeviceRK10QByteArrayP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovieC2ERK7QStringRK10QByteArrayP7QObject</primary></indexterm>_ZN6QMovieC2ERK7QStringRK10QByteArrayP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovieD0Ev</primary></indexterm>_ZN6QMovieD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QMovieD1Ev</primary></indexterm>_ZN6QMovieD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovieD2Ev</primary></indexterm>_ZN6QMovieD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QSound11isAvailableEv</primary></indexterm>_ZN6QSound11isAvailableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QSound11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN6QSound11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QSound11qt_metacastEPKc</primary></indexterm>_ZN6QSound11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QSound4playERK7QString</primary></indexterm>_ZN6QSound4playERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QSound4playEv</primary></indexterm>_ZN6QSound4playEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QSound4stopEv</primary></indexterm>_ZN6QSound4stopEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QSound8setLoopsEi</primary></indexterm>_ZN6QSound8setLoopsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QSoundC1ERK7QStringP7QObject</primary></indexterm>_ZN6QSoundC1ERK7QStringP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QSoundC1ERK7QStringP7QObjectPKc</primary></indexterm>_ZN6QSoundC1ERK7QStringP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QSoundC2ERK7QStringP7QObject</primary></indexterm>_ZN6QSoundC2ERK7QStringP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QSoundC2ERK7QStringP7QObjectPKc</primary></indexterm>_ZN6QSoundC2ERK7QStringP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QSoundD0Ev</primary></indexterm>_ZN6QSoundD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QSoundD1Ev</primary></indexterm>_ZN6QSoundD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QSoundD2Ev</primary></indexterm>_ZN6QSoundD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QStyle10visualRectEN2Qt15LayoutDirectionERK5QRectS4_</primary></indexterm>_ZN6QStyle10visualRectEN2Qt15LayoutDirectionERK5QRectS4_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QStyle11alignedRectEN2Qt15LayoutDirectionE6QFlagsINS0_13AlignmentFlagEERK5QSizeRK5QRect</primary></indexterm>_ZN6QStyle11alignedRectEN2Qt15LayoutDirectionE6QFlagsINS0_13AlignmentFlagEERK5QSizeRK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QStyle11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN6QStyle11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QStyle11qt_metacastEPKc</primary></indexterm>_ZN6QStyle11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QStyle15visualAlignmentEN2Qt15LayoutDirectionE6QFlagsINS0_13AlignmentFlagEE</primary></indexterm>_ZN6QStyle15visualAlignmentEN2Qt15LayoutDirectionE6QFlagsINS0_13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QStyle23sliderPositionFromValueEiiiib</primary></indexterm>_ZN6QStyle23sliderPositionFromValueEiiiib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QStyle23sliderValueFromPositionEiiiib</primary></indexterm>_ZN6QStyle23sliderValueFromPositionEiiiib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QStyle6polishEP12QApplication</primary></indexterm>_ZN6QStyle6polishEP12QApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QStyle6polishEP7QWidget</primary></indexterm>_ZN6QStyle6polishEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QStyle6polishER8QPalette</primary></indexterm>_ZN6QStyle6polishER8QPalette <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QStyle8unpolishEP12QApplication</primary></indexterm>_ZN6QStyle8unpolishEP12QApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QStyle8unpolishEP7QWidget</primary></indexterm>_ZN6QStyle8unpolishEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QStyle9visualPosEN2Qt15LayoutDirectionERK5QRectRK6QPoint</primary></indexterm>_ZN6QStyle9visualPosEN2Qt15LayoutDirectionERK5QRectRK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QStyleC1ER13QStylePrivate</primary></indexterm>_ZN6QStyleC1ER13QStylePrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QStyleC1Ev</primary></indexterm>_ZN6QStyleC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QStyleC2ER13QStylePrivate</primary></indexterm>_ZN6QStyleC2ER13QStylePrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QStyleC2Ev</primary></indexterm>_ZN6QStyleC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QStyleD0Ev</primary></indexterm>_ZN6QStyleD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QStyleD1Ev</primary></indexterm>_ZN6QStyleD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QStyleD2Ev</primary></indexterm>_ZN6QStyleD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction10setCheckedEb</primary></indexterm>_ZN7QAction10setCheckedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction10setEnabledEb</primary></indexterm>_ZN7QAction10setEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction10setToolTipERK7QString</primary></indexterm>_ZN7QAction10setToolTipERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction10setVisibleEb</primary></indexterm>_ZN7QAction10setVisibleEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN7QAction11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction11qt_metacastEPKc</primary></indexterm>_ZN7QAction11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction11setIconTextERK7QString</primary></indexterm>_ZN7QAction11setIconTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction11setShortcutERK12QKeySequence</primary></indexterm>_ZN7QAction11setShortcutERK12QKeySequence <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction12setCheckableEb</primary></indexterm>_ZN7QAction12setCheckableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction12setSeparatorEb</primary></indexterm>_ZN7QAction12setSeparatorEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction12setStatusTipERK7QString</primary></indexterm>_ZN7QAction12setStatusTipERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction12setWhatsThisERK7QString</primary></indexterm>_ZN7QAction12setWhatsThisERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction14setActionGroupEP12QActionGroup</primary></indexterm>_ZN7QAction14setActionGroupEP12QActionGroup <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction14showStatusTextEP7QWidget</primary></indexterm>_ZN7QAction14showStatusTextEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction18setShortcutContextEN2Qt15ShortcutContextE</primary></indexterm>_ZN7QAction18setShortcutContextEN2Qt15ShortcutContextE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction5eventEP6QEvent</primary></indexterm>_ZN7QAction5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction6toggleEv</primary></indexterm>_ZN7QAction6toggleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction7changedEv</primary></indexterm>_ZN7QAction7changedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction7hoveredEv</primary></indexterm>_ZN7QAction7hoveredEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction7setDataERK8QVariant</primary></indexterm>_ZN7QAction7setDataERK8QVariant <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction7setFontERK5QFont</primary></indexterm>_ZN7QAction7setFontERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction7setIconERK5QIcon</primary></indexterm>_ZN7QAction7setIconERK5QIcon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction7setMenuEP5QMenu</primary></indexterm>_ZN7QAction7setMenuEP5QMenu <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction7setTextERK7QString</primary></indexterm>_ZN7QAction7setTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction7toggledEb</primary></indexterm>_ZN7QAction7toggledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction8activateENS_11ActionEventE</primary></indexterm>_ZN7QAction8activateENS_11ActionEventE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction9activatedEi</primary></indexterm>_ZN7QAction9activatedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QAction9triggeredEb</primary></indexterm>_ZN7QAction9triggeredEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QActionC1EP7QObject</primary></indexterm>_ZN7QActionC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QActionC1EP7QObjectPKc</primary></indexterm>_ZN7QActionC1EP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QActionC1ERK5QIconRK7QStringP7QObject</primary></indexterm>_ZN7QActionC1ERK5QIconRK7QStringP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QActionC1ERK5QIconRK7QStringRK12QKeySequenceP7QObjectPKc</primary></indexterm>_ZN7QActionC1ERK5QIconRK7QStringRK12QKeySequenceP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QActionC1ERK7QStringP7QObject</primary></indexterm>_ZN7QActionC1ERK7QStringP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QActionC1ERK7QStringRK12QKeySequenceP7QObjectPKc</primary></indexterm>_ZN7QActionC1ERK7QStringRK12QKeySequenceP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QActionC2EP7QObject</primary></indexterm>_ZN7QActionC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QActionC2EP7QObjectPKc</primary></indexterm>_ZN7QActionC2EP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QActionC2ERK5QIconRK7QStringP7QObject</primary></indexterm>_ZN7QActionC2ERK5QIconRK7QStringP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QActionC2ERK5QIconRK7QStringRK12QKeySequenceP7QObjectPKc</primary></indexterm>_ZN7QActionC2ERK5QIconRK7QStringRK12QKeySequenceP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QActionC2ERK7QStringP7QObject</primary></indexterm>_ZN7QActionC2ERK7QStringP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QActionC2ERK7QStringRK12QKeySequenceP7QObjectPKc</primary></indexterm>_ZN7QActionC2ERK7QStringRK12QKeySequenceP7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QActionD0Ev</primary></indexterm>_ZN7QActionD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QActionD1Ev</primary></indexterm>_ZN7QActionD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QActionD2Ev</primary></indexterm>_ZN7QActionD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QBitmap8fromDataERK5QSizePKhN6QImage6FormatE</primary></indexterm>_ZN7QBitmap8fromDataERK5QSizePKhN6QImage6FormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QBitmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZN7QBitmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QBitmapC1ERK5QSize</primary></indexterm>_ZN7QBitmapC1ERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QBitmapC1ERK5QSizePKhb</primary></indexterm>_ZN7QBitmapC1ERK5QSizePKhb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QBitmapC1ERK7QPixmap</primary></indexterm>_ZN7QBitmapC1ERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QBitmapC1ERK7QStringPKc</primary></indexterm>_ZN7QBitmapC1ERK7QStringPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QBitmapC1Eii</primary></indexterm>_ZN7QBitmapC1Eii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QBitmapC1EiiPKhb</primary></indexterm>_ZN7QBitmapC1EiiPKhb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QBitmapC1Ev</primary></indexterm>_ZN7QBitmapC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QBitmapC2ERK5QSize</primary></indexterm>_ZN7QBitmapC2ERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QBitmapC2ERK5QSizePKhb</primary></indexterm>_ZN7QBitmapC2ERK5QSizePKhb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QBitmapC2ERK7QPixmap</primary></indexterm>_ZN7QBitmapC2ERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QBitmapC2ERK7QStringPKc</primary></indexterm>_ZN7QBitmapC2ERK7QStringPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QBitmapC2Eii</primary></indexterm>_ZN7QBitmapC2Eii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QBitmapC2EiiPKhb</primary></indexterm>_ZN7QBitmapC2EiiPKhb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QBitmapC2Ev</primary></indexterm>_ZN7QBitmapC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QBitmapD0Ev</primary></indexterm>_ZN7QBitmapD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QBitmapD1Ev</primary></indexterm>_ZN7QBitmapD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QBitmapD2Ev</primary></indexterm>_ZN7QBitmapD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QBitmapaSERK7QPixmap</primary></indexterm>_ZN7QBitmapaSERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QCursor3posEv</primary></indexterm>_ZN7QCursor3posEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QCursor6setPosEii</primary></indexterm>_ZN7QCursor6setPosEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QCursor8setShapeEN2Qt11CursorShapeE</primary></indexterm>_ZN7QCursor8setShapeEN2Qt11CursorShapeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QCursor9x11ScreenEv</primary></indexterm>_ZN7QCursor9x11ScreenEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QCursorC1EN2Qt11CursorShapeE</primary></indexterm>_ZN7QCursorC1EN2Qt11CursorShapeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QCursorC1ERK7QBitmapS2_ii</primary></indexterm>_ZN7QCursorC1ERK7QBitmapS2_ii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QCursorC1ERK7QPixmapii</primary></indexterm>_ZN7QCursorC1ERK7QPixmapii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QCursorC1ERKS_</primary></indexterm>_ZN7QCursorC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QCursorC1Em</primary></indexterm>_ZN7QCursorC1Em <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QCursorC1Ev</primary></indexterm>_ZN7QCursorC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QCursorC2EN2Qt11CursorShapeE</primary></indexterm>_ZN7QCursorC2EN2Qt11CursorShapeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QCursorC2ERK7QBitmapS2_ii</primary></indexterm>_ZN7QCursorC2ERK7QBitmapS2_ii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QCursorC2ERK7QPixmapii</primary></indexterm>_ZN7QCursorC2ERK7QPixmapii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QCursorC2ERKS_</primary></indexterm>_ZN7QCursorC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QCursorC2Em</primary></indexterm>_ZN7QCursorC2Em <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QCursorC2Ev</primary></indexterm>_ZN7QCursorC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QCursorD1Ev</primary></indexterm>_ZN7QCursorD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QCursorD2Ev</primary></indexterm>_ZN7QCursorD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QCursoraSERKS_</primary></indexterm>_ZN7QCursoraSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog10closeEventEP11QCloseEvent</primary></indexterm>_ZN7QDialog10closeEventEP11QCloseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog10setVisibleEb</primary></indexterm>_ZN7QDialog10setVisibleEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog11eventFilterEP7QObjectP6QEvent</primary></indexterm>_ZN7QDialog11eventFilterEP7QObjectP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN7QDialog11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog11qt_metacastEPKc</primary></indexterm>_ZN7QDialog11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog11resizeEventEP12QResizeEvent</primary></indexterm>_ZN7QDialog11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog12setExtensionEP7QWidget</primary></indexterm>_ZN7QDialog12setExtensionEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN7QDialog13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog13showExtensionEb</primary></indexterm>_ZN7QDialog13showExtensionEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog14adjustPositionEP7QWidget</primary></indexterm>_ZN7QDialog14adjustPositionEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog14setOrientationEN2Qt11OrientationE</primary></indexterm>_ZN7QDialog14setOrientationEN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog16contextMenuEventEP17QContextMenuEvent</primary></indexterm>_ZN7QDialog16contextMenuEventEP17QContextMenuEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog18setSizeGripEnabledEb</primary></indexterm>_ZN7QDialog18setSizeGripEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog4doneEi</primary></indexterm>_ZN7QDialog4doneEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog4execEv</primary></indexterm>_ZN7QDialog4execEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog6acceptEv</primary></indexterm>_ZN7QDialog6acceptEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog6rejectEv</primary></indexterm>_ZN7QDialog6rejectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog8acceptedEv</primary></indexterm>_ZN7QDialog8acceptedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog8finishedEi</primary></indexterm>_ZN7QDialog8finishedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog8rejectedEv</primary></indexterm>_ZN7QDialog8rejectedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog8setModalEb</primary></indexterm>_ZN7QDialog8setModalEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog9setResultEi</primary></indexterm>_ZN7QDialog9setResultEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialog9showEventEP10QShowEvent</primary></indexterm>_ZN7QDialog9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialogC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QDialogC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialogC1EP7QWidgetPKcb6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QDialogC1EP7QWidgetPKcb6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialogC1ER14QDialogPrivateP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QDialogC1ER14QDialogPrivateP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialogC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QDialogC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialogC2EP7QWidgetPKcb6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QDialogC2EP7QWidgetPKcb6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialogC2ER14QDialogPrivateP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QDialogC2ER14QDialogPrivateP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialogD0Ev</primary></indexterm>_ZN7QDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QDialogD1Ev</primary></indexterm>_ZN7QDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialogD2Ev</primary></indexterm>_ZN7QDialogD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout10childEventEP11QChildEvent</primary></indexterm>_ZN7QLayout10childEventEP11QChildEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout10invalidateEv</primary></indexterm>_ZN7QLayout10invalidateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout10removeItemEP11QLayoutItem</primary></indexterm>_ZN7QLayout10removeItemEP11QLayoutItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout10setAutoAddEb</primary></indexterm>_ZN7QLayout10setAutoAddEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout10setEnabledEb</primary></indexterm>_ZN7QLayout10setEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout10setMenuBarEP7QWidget</primary></indexterm>_ZN7QLayout10setMenuBarEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout10setSpacingEi</primary></indexterm>_ZN7QLayout10setSpacingEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN7QLayout11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout11qt_metacastEPKc</primary></indexterm>_ZN7QLayout11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout11setGeometryERK5QRect</primary></indexterm>_ZN7QLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout11widgetEventEP6QEvent</primary></indexterm>_ZN7QLayout11widgetEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout12removeWidgetEP7QWidget</primary></indexterm>_ZN7QLayout12removeWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout12setAlignmentEP7QWidget6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN7QLayout12setAlignmentEP7QWidget6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout12setAlignmentEPS_6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN7QLayout12setAlignmentEPS_6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout14addChildLayoutEPS_</primary></indexterm>_ZN7QLayout14addChildLayoutEPS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout14addChildWidgetEP7QWidget</primary></indexterm>_ZN7QLayout14addChildWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout14deleteAllItemsEv</primary></indexterm>_ZN7QLayout14deleteAllItemsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout17setSizeConstraintENS_14SizeConstraintE</primary></indexterm>_ZN7QLayout17setSizeConstraintENS_14SizeConstraintE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout21closestAcceptableSizeEPK7QWidgetRK5QSize</primary></indexterm>_ZN7QLayout21closestAcceptableSizeEPK7QWidgetRK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout6freezeEii</primary></indexterm>_ZN7QLayout6freezeEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout6layoutEv</primary></indexterm>_ZN7QLayout6layoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout6updateEv</primary></indexterm>_ZN7QLayout6updateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout8activateEv</primary></indexterm>_ZN7QLayout8activateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayout9addWidgetEP7QWidget</primary></indexterm>_ZN7QLayout9addWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout9setMarginEi</primary></indexterm>_ZN7QLayout9setMarginEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayoutC1EP7QWidget</primary></indexterm>_ZN7QLayoutC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayoutC1EP7QWidgetiiPKc</primary></indexterm>_ZN7QLayoutC1EP7QWidgetiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayoutC1EPS_iPKc</primary></indexterm>_ZN7QLayoutC1EPS_iPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayoutC1ER14QLayoutPrivatePS_P7QWidget</primary></indexterm>_ZN7QLayoutC1ER14QLayoutPrivatePS_P7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayoutC1EiPKc</primary></indexterm>_ZN7QLayoutC1EiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayoutC1Ev</primary></indexterm>_ZN7QLayoutC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayoutC2EP7QWidget</primary></indexterm>_ZN7QLayoutC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayoutC2EP7QWidgetiiPKc</primary></indexterm>_ZN7QLayoutC2EP7QWidgetiiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayoutC2EPS_iPKc</primary></indexterm>_ZN7QLayoutC2EPS_iPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayoutC2ER14QLayoutPrivatePS_P7QWidget</primary></indexterm>_ZN7QLayoutC2ER14QLayoutPrivatePS_P7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayoutC2EiPKc</primary></indexterm>_ZN7QLayoutC2EiPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayoutC2Ev</primary></indexterm>_ZN7QLayoutC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayoutD0Ev</primary></indexterm>_ZN7QLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayoutD1Ev</primary></indexterm>_ZN7QLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QLayoutD2Ev</primary></indexterm>_ZN7QLayoutD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QMatrix5resetEv</primary></indexterm>_ZN7QMatrix5resetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QMatrix5scaleEdd</primary></indexterm>_ZN7QMatrix5scaleEdd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QMatrix5shearEdd</primary></indexterm>_ZN7QMatrix5shearEdd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QMatrix6rotateEd</primary></indexterm>_ZN7QMatrix6rotateEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QMatrix9setMatrixEdddddd</primary></indexterm>_ZN7QMatrix9setMatrixEdddddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QMatrix9translateEdd</primary></indexterm>_ZN7QMatrix9translateEdd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QMatrixC1ERKS_</primary></indexterm>_ZN7QMatrixC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QMatrixC1Edddddd</primary></indexterm>_ZN7QMatrixC1Edddddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QMatrixC1Ev</primary></indexterm>_ZN7QMatrixC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QMatrixC2ERKS_</primary></indexterm>_ZN7QMatrixC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QMatrixC2Edddddd</primary></indexterm>_ZN7QMatrixC2Edddddd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QMatrixC2Ev</primary></indexterm>_ZN7QMatrixC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QMatrixaSERKS_</primary></indexterm>_ZN7QMatrixaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QMatrixmLERKS_</primary></indexterm>_ZN7QMatrixmLERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmap10grabWidgetEP7QWidgetRK5QRect</primary></indexterm>_ZN7QPixmap10grabWidgetEP7QWidgetRK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmap10grabWindowEmiiii</primary></indexterm>_ZN7QPixmap10grabWindowEmiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmap10trueMatrixERK7QMatrixii</primary></indexterm>_ZN7QPixmap10trueMatrixERK7QMatrixii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmap12defaultDepthEv</primary></indexterm>_ZN7QPixmap12defaultDepthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmap12loadFromDataEPKhjPKc6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZN7QPixmap12loadFromDataEPKhjPKc6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmap12loadFromDataEPKhjPKcNS_9ColorModeE</primary></indexterm>_ZN7QPixmap12loadFromDataEPKhjPKcNS_9ColorModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmap12x11SetScreenEi</primary></indexterm>_ZN7QPixmap12x11SetScreenEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmap15setAlphaChannelERKS_</primary></indexterm>_ZN7QPixmap15setAlphaChannelERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmap16convertFromImageERK6QImageNS_9ColorModeE</primary></indexterm>_ZN7QPixmap16convertFromImageERK6QImageNS_9ColorModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmap19x11SetDefaultScreenEi</primary></indexterm>_ZN7QPixmap19x11SetDefaultScreenEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmap4fillEPK7QWidgetRK6QPoint</primary></indexterm>_ZN7QPixmap4fillEPK7QWidgetRK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmap4fillERK6QColor</primary></indexterm>_ZN7QPixmap4fillERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmap4loadERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZN7QPixmap4loadERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmap4loadERK7QStringPKcNS_9ColorModeE</primary></indexterm>_ZN7QPixmap4loadERK7QStringPKcNS_9ColorModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmap6detachEv</primary></indexterm>_ZN7QPixmap6detachEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmap7setMaskERK7QBitmap</primary></indexterm>_ZN7QPixmap7setMaskERK7QBitmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZN7QPixmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmapC1EPKPKc</primary></indexterm>_ZN7QPixmapC1EPKPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmapC1ERK5QSize</primary></indexterm>_ZN7QPixmapC1ERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmapC1ERK6QImage</primary></indexterm>_ZN7QPixmapC1ERK6QImage <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmapC1ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZN7QPixmapC1ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmapC1ERK7QStringPKcNS_9ColorModeE</primary></indexterm>_ZN7QPixmapC1ERK7QStringPKcNS_9ColorModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmapC1ERKS_</primary></indexterm>_ZN7QPixmapC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmapC1Eii</primary></indexterm>_ZN7QPixmapC1Eii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmapC1Ev</primary></indexterm>_ZN7QPixmapC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmapC2EPKPKc</primary></indexterm>_ZN7QPixmapC2EPKPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmapC2ERK5QSize</primary></indexterm>_ZN7QPixmapC2ERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmapC2ERK6QImage</primary></indexterm>_ZN7QPixmapC2ERK6QImage <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmapC2ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZN7QPixmapC2ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmapC2ERK7QStringPKcNS_9ColorModeE</primary></indexterm>_ZN7QPixmapC2ERK7QStringPKcNS_9ColorModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmapC2ERKS_</primary></indexterm>_ZN7QPixmapC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmapC2Eii</primary></indexterm>_ZN7QPixmapC2Eii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmapC2Ev</primary></indexterm>_ZN7QPixmapC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmapD0Ev</primary></indexterm>_ZN7QPixmapD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmapD1Ev</primary></indexterm>_ZN7QPixmapD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmapD2Ev</primary></indexterm>_ZN7QPixmapD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QPixmapaSERK6QImage</primary></indexterm>_ZN7QPixmapaSERK6QImage <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QPixmapaSERKS_</primary></indexterm>_ZN7QPixmapaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegion8setRectsEPK5QRecti</primary></indexterm>_ZN7QRegion8setRectsEPK5QRecti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegion9translateEii</primary></indexterm>_ZN7QRegion9translateEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegionC1ERK5QRectNS_10RegionTypeE</primary></indexterm>_ZN7QRegionC1ERK5QRectNS_10RegionTypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegionC1ERK7QBitmap</primary></indexterm>_ZN7QRegionC1ERK7QBitmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegionC1ERK8QPolygonN2Qt8FillRuleE</primary></indexterm>_ZN7QRegionC1ERK8QPolygonN2Qt8FillRuleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegionC1ERK8QPolygonb</primary></indexterm>_ZN7QRegionC1ERK8QPolygonb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegionC1ERKS_</primary></indexterm>_ZN7QRegionC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegionC1EiiiiNS_10RegionTypeE</primary></indexterm>_ZN7QRegionC1EiiiiNS_10RegionTypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegionC1Ev</primary></indexterm>_ZN7QRegionC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegionC2ERK5QRectNS_10RegionTypeE</primary></indexterm>_ZN7QRegionC2ERK5QRectNS_10RegionTypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegionC2ERK7QBitmap</primary></indexterm>_ZN7QRegionC2ERK7QBitmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegionC2ERK8QPolygonN2Qt8FillRuleE</primary></indexterm>_ZN7QRegionC2ERK8QPolygonN2Qt8FillRuleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegionC2ERK8QPolygonb</primary></indexterm>_ZN7QRegionC2ERK8QPolygonb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegionC2ERKS_</primary></indexterm>_ZN7QRegionC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegionC2EiiiiNS_10RegionTypeE</primary></indexterm>_ZN7QRegionC2EiiiiNS_10RegionTypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegionC2Ev</primary></indexterm>_ZN7QRegionC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegionD1Ev</primary></indexterm>_ZN7QRegionD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegionD2Ev</primary></indexterm>_ZN7QRegionD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegionaNERKS_</primary></indexterm>_ZN7QRegionaNERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegionaSERKS_</primary></indexterm>_ZN7QRegionaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegioneOERKS_</primary></indexterm>_ZN7QRegioneOERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegionmIERKS_</primary></indexterm>_ZN7QRegionmIERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QRegionoRERKS_</primary></indexterm>_ZN7QRegionoRERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QRegionpLERKS_</primary></indexterm>_ZN7QRegionpLERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QSlider10paintEventEP11QPaintEvent</primary></indexterm>_ZN7QSlider10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSlider11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN7QSlider11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QSlider11qt_metacastEPKc</primary></indexterm>_ZN7QSlider11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSlider14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN7QSlider14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QSlider15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN7QSlider15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSlider15setTickIntervalEi</primary></indexterm>_ZN7QSlider15setTickIntervalEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QSlider15setTickPositionENS_12TickPositionE</primary></indexterm>_ZN7QSlider15setTickPositionENS_12TickPositionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSlider17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN7QSlider17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QSlider5eventEP6QEvent</primary></indexterm>_ZN7QSlider5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSliderC1EN2Qt11OrientationEP7QWidget</primary></indexterm>_ZN7QSliderC1EN2Qt11OrientationEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QSliderC1EN2Qt11OrientationEP7QWidgetPKc</primary></indexterm>_ZN7QSliderC1EN2Qt11OrientationEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSliderC1EP7QWidget</primary></indexterm>_ZN7QSliderC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QSliderC1EP7QWidgetPKc</primary></indexterm>_ZN7QSliderC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSliderC1EiiiiN2Qt11OrientationEP7QWidgetPKc</primary></indexterm>_ZN7QSliderC1EiiiiN2Qt11OrientationEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QSliderC2EN2Qt11OrientationEP7QWidget</primary></indexterm>_ZN7QSliderC2EN2Qt11OrientationEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSliderC2EN2Qt11OrientationEP7QWidgetPKc</primary></indexterm>_ZN7QSliderC2EN2Qt11OrientationEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QSliderC2EP7QWidget</primary></indexterm>_ZN7QSliderC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSliderC2EP7QWidgetPKc</primary></indexterm>_ZN7QSliderC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QSliderC2EiiiiN2Qt11OrientationEP7QWidgetPKc</primary></indexterm>_ZN7QSliderC2EiiiiN2Qt11OrientationEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSliderD0Ev</primary></indexterm>_ZN7QSliderD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QSliderD1Ev</primary></indexterm>_ZN7QSliderD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSliderD2Ev</primary></indexterm>_ZN7QSliderD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar10paintEventEP11QPaintEvent</primary></indexterm>_ZN7QTabBar10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar10setTabDataEiRK8QVariant</primary></indexterm>_ZN7QTabBar10setTabDataEiRK8QVariant <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar10setTabIconEiRK5QIcon</primary></indexterm>_ZN7QTabBar10setTabIconEiRK5QIcon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar10setTabTextEiRK7QString</primary></indexterm>_ZN7QTabBar10setTabTextEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar10tabRemovedEi</primary></indexterm>_ZN7QTabBar10tabRemovedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar11changeEventEP6QEvent</primary></indexterm>_ZN7QTabBar11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN7QTabBar11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar11qt_metacastEPKc</primary></indexterm>_ZN7QTabBar11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar11resizeEventEP12QResizeEvent</primary></indexterm>_ZN7QTabBar11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar11setDrawBaseEb</primary></indexterm>_ZN7QTabBar11setDrawBaseEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar11setIconSizeERK5QSize</primary></indexterm>_ZN7QTabBar11setIconSizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar11tabInsertedEi</primary></indexterm>_ZN7QTabBar11tabInsertedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN7QTabBar13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar13setTabEnabledEib</primary></indexterm>_ZN7QTabBar13setTabEnabledEib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar13setTabToolTipEiRK7QString</primary></indexterm>_ZN7QTabBar13setTabToolTipEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar14currentChangedEi</primary></indexterm>_ZN7QTabBar14currentChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN7QTabBar14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN7QTabBar15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar15setCurrentIndexEi</primary></indexterm>_ZN7QTabBar15setCurrentIndexEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar15setTabTextColorEiRK6QColor</primary></indexterm>_ZN7QTabBar15setTabTextColorEiRK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar15setTabWhatsThisEiRK7QString</primary></indexterm>_ZN7QTabBar15setTabWhatsThisEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar15tabLayoutChangeEv</primary></indexterm>_ZN7QTabBar15tabLayoutChangeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN7QTabBar17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar5eventEP6QEvent</primary></indexterm>_ZN7QTabBar5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar6addTabERK5QIconRK7QString</primary></indexterm>_ZN7QTabBar6addTabERK5QIconRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar6addTabERK7QString</primary></indexterm>_ZN7QTabBar6addTabERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar8selectedEi</primary></indexterm>_ZN7QTabBar8selectedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar8setShapeENS_5ShapeE</primary></indexterm>_ZN7QTabBar8setShapeENS_5ShapeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar9insertTabEiRK5QIconRK7QString</primary></indexterm>_ZN7QTabBar9insertTabEiRK5QIconRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar9insertTabEiRK7QString</primary></indexterm>_ZN7QTabBar9insertTabEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar9removeTabEi</primary></indexterm>_ZN7QTabBar9removeTabEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBar9showEventEP10QShowEvent</primary></indexterm>_ZN7QTabBar9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBarC1EP7QWidget</primary></indexterm>_ZN7QTabBarC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBarC2EP7QWidget</primary></indexterm>_ZN7QTabBarC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBarD0Ev</primary></indexterm>_ZN7QTabBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QTabBarD1Ev</primary></indexterm>_ZN7QTabBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBarD2Ev</primary></indexterm>_ZN7QTabBarD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget10addActionsE5QListIP7QActionE</primary></indexterm>_ZN7QWidget10addActionsE5QListIP7QActionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget10adjustSizeEv</primary></indexterm>_ZN7QWidget10adjustSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget10clearFocusEv</primary></indexterm>_ZN7QWidget10clearFocusEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget10closeEventEP11QCloseEvent</primary></indexterm>_ZN7QWidget10closeEventEP11QCloseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget10enterEventEP6QEvent</primary></indexterm>_ZN7QWidget10enterEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget10fontChangeERK5QFont</primary></indexterm>_ZN7QWidget10fontChangeERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget10leaveEventEP6QEvent</primary></indexterm>_ZN7QWidget10leaveEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget10paintEventEP11QPaintEvent</primary></indexterm>_ZN7QWidget10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget10setEnabledEb</primary></indexterm>_ZN7QWidget10setEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget10setPaletteERK8QPalette</primary></indexterm>_ZN7QWidget10setPaletteERK8QPalette <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget10setToolTipERK7QString</primary></indexterm>_ZN7QWidget10setToolTipERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget10setVisibleEb</primary></indexterm>_ZN7QWidget10setVisibleEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget10showNormalEv</primary></indexterm>_ZN7QWidget10showNormalEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget10stackUnderEPS_</primary></indexterm>_ZN7QWidget10stackUnderEPS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget10wheelEventEP11QWheelEvent</primary></indexterm>_ZN7QWidget10wheelEventEP11QWheelEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget11actionEventEP12QActionEvent</primary></indexterm>_ZN7QWidget11actionEventEP12QActionEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget11changeEventEP6QEvent</primary></indexterm>_ZN7QWidget11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN7QWidget11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget11qt_metacastEPKc</primary></indexterm>_ZN7QWidget11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget11resizeEventEP12QResizeEvent</primary></indexterm>_ZN7QWidget11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget11setBaseSizeEii</primary></indexterm>_ZN7QWidget11setBaseSizeEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget11setDisabledEb</primary></indexterm>_ZN7QWidget11setDisabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget11setGeometryERK5QRect</primary></indexterm>_ZN7QWidget11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget11setTabOrderEPS_S0_</primary></indexterm>_ZN7QWidget11setTabOrderEPS_S0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget11styleChangeER6QStyle</primary></indexterm>_ZN7QWidget11styleChangeER6QStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget11tabletEventEP12QTabletEvent</primary></indexterm>_ZN7QWidget11tabletEventEP12QTabletEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget11unsetCursorEv</primary></indexterm>_ZN7QWidget11unsetCursorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget12focusInEventEP11QFocusEvent</primary></indexterm>_ZN7QWidget12focusInEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget12grabKeyboardEv</primary></indexterm>_ZN7QWidget12grabKeyboardEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget12grabShortcutERK12QKeySequenceN2Qt15ShortcutContextE</primary></indexterm>_ZN7QWidget12grabShortcutERK12QKeySequenceN2Qt15ShortcutContextE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget12inputContextEv</primary></indexterm>_ZN7QWidget12inputContextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget12insertActionEP7QActionS1_</primary></indexterm>_ZN7QWidget12insertActionEP7QActionS1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget12mouseGrabberEv</primary></indexterm>_ZN7QWidget12mouseGrabberEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget12releaseMouseEv</primary></indexterm>_ZN7QWidget12releaseMouseEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget12removeActionEP7QAction</primary></indexterm>_ZN7QWidget12removeActionEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget12setAttributeEN2Qt15WidgetAttributeEb</primary></indexterm>_ZN7QWidget12setAttributeEN2Qt15WidgetAttributeEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget12setFixedSizeERK5QSize</primary></indexterm>_ZN7QWidget12setFixedSizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget12setFixedSizeEii</primary></indexterm>_ZN7QWidget12setFixedSizeEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget12setStatusTipERK7QString</primary></indexterm>_ZN7QWidget12setStatusTipERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget12setWhatsThisERK7QString</primary></indexterm>_ZN7QWidget12setWhatsThisERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget13dragMoveEventEP14QDragMoveEvent</primary></indexterm>_ZN7QWidget13dragMoveEventEP14QDragMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget13enabledChangeEb</primary></indexterm>_ZN7QWidget13enabledChangeEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget13focusOutEventEP11QFocusEvent</primary></indexterm>_ZN7QWidget13focusOutEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget13insertActionsEP7QAction5QListIS1_E</primary></indexterm>_ZN7QWidget13insertActionsEP7QAction5QListIS1_E <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN7QWidget13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget13paletteChangeERK8QPalette</primary></indexterm>_ZN7QWidget13paletteChangeERK8QPalette <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget13setFixedWidthEi</primary></indexterm>_ZN7QWidget13setFixedWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget13setFocusProxyEPS_</primary></indexterm>_ZN7QWidget13setFocusProxyEPS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget13setSizePolicyE11QSizePolicy</primary></indexterm>_ZN7QWidget13setSizePolicyE11QSizePolicy <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget13setWindowIconERK5QIcon</primary></indexterm>_ZN7QWidget13setWindowIconERK5QIcon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget13setWindowRoleERK7QString</primary></indexterm>_ZN7QWidget13setWindowRoleERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget13showMaximizedEv</primary></indexterm>_ZN7QWidget13showMaximizedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget13showMinimizedEv</primary></indexterm>_ZN7QWidget13showMinimizedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget14activateWindowEv</primary></indexterm>_ZN7QWidget14activateWindowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget14dragEnterEventEP15QDragEnterEvent</primary></indexterm>_ZN7QWidget14dragEnterEventEP15QDragEnterEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget14dragLeaveEventEP15QDragLeaveEvent</primary></indexterm>_ZN7QWidget14dragLeaveEventEP15QDragLeaveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget14languageChangeEv</primary></indexterm>_ZN7QWidget14languageChangeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN7QWidget14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget14setAcceptDropsEb</primary></indexterm>_ZN7QWidget14setAcceptDropsEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget14setFixedHeightEi</primary></indexterm>_ZN7QWidget14setFixedHeightEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget14setFocusPolicyEN2Qt11FocusPolicyE</primary></indexterm>_ZN7QWidget14setFocusPolicyEN2Qt11FocusPolicyE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget14setMaximumSizeEii</primary></indexterm>_ZN7QWidget14setMaximumSizeEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget14setMinimumSizeEii</primary></indexterm>_ZN7QWidget14setMinimumSizeEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget14setWindowFlagsE6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QWidget14setWindowFlagsE6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget14setWindowStateE6QFlagsIN2Qt11WindowStateEE</primary></indexterm>_ZN7QWidget14setWindowStateE6QFlagsIN2Qt11WindowStateEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget14setWindowTitleERK7QString</primary></indexterm>_ZN7QWidget14setWindowTitleERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget14showFullScreenEv</primary></indexterm>_ZN7QWidget14showFullScreenEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget14updateGeometryEv</primary></indexterm>_ZN7QWidget14updateGeometryEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget15keyReleaseEventEP9QKeyEvent</primary></indexterm>_ZN7QWidget15keyReleaseEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget15keyboardGrabberEv</primary></indexterm>_ZN7QWidget15keyboardGrabberEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN7QWidget15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget15releaseKeyboardEv</primary></indexterm>_ZN7QWidget15releaseKeyboardEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget15releaseShortcutEi</primary></indexterm>_ZN7QWidget15releaseShortcutEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget15setInputContextEP13QInputContext</primary></indexterm>_ZN7QWidget15setInputContextEP13QInputContext <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget15setMaximumWidthEi</primary></indexterm>_ZN7QWidget15setMaximumWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget15setMinimumWidthEi</primary></indexterm>_ZN7QWidget15setMinimumWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget16contextMenuEventEP17QContextMenuEvent</primary></indexterm>_ZN7QWidget16contextMenuEventEP17QContextMenuEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget16inputMethodEventEP17QInputMethodEvent</primary></indexterm>_ZN7QWidget16inputMethodEventEP17QInputMethodEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget16setMaximumHeightEi</primary></indexterm>_ZN7QWidget16setMaximumHeightEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget16setMinimumHeightEi</primary></indexterm>_ZN7QWidget16setMinimumHeightEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget16setSizeIncrementEii</primary></indexterm>_ZN7QWidget16setSizeIncrementEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget16setWindowOpacityEd</primary></indexterm>_ZN7QWidget16setWindowOpacityEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget16updateMicroFocusEv</primary></indexterm>_ZN7QWidget16updateMicroFocusEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN7QWidget17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget17resetInputContextEv</primary></indexterm>_ZN7QWidget17resetInputContextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget17setAccessibleNameERK7QString</primary></indexterm>_ZN7QWidget17setAccessibleNameERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget17setBackgroundModeEN2Qt14BackgroundModeES1_</primary></indexterm>_ZN7QWidget17setBackgroundModeEN2Qt14BackgroundModeES1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget17setBackgroundRoleEN8QPalette9ColorRoleE</primary></indexterm>_ZN7QWidget17setBackgroundRoleEN8QPalette9ColorRoleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget17setForegroundRoleEN8QPalette9ColorRoleE</primary></indexterm>_ZN7QWidget17setForegroundRoleEN8QPalette9ColorRoleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget17setUpdatesEnabledEb</primary></indexterm>_ZN7QWidget17setUpdatesEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget17setWindowIconTextERK7QString</primary></indexterm>_ZN7QWidget17setWindowIconTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget17setWindowModalityEN2Qt14WindowModalityE</primary></indexterm>_ZN7QWidget17setWindowModalityEN2Qt14WindowModalityE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget17setWindowModifiedEb</primary></indexterm>_ZN7QWidget17setWindowModifiedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget18focusNextPrevChildEb</primary></indexterm>_ZN7QWidget18focusNextPrevChildEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget18setContentsMarginsEiiii</primary></indexterm>_ZN7QWidget18setContentsMarginsEiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget18setLayoutDirectionEN2Qt15LayoutDirectionE</primary></indexterm>_ZN7QWidget18setLayoutDirectionEN2Qt15LayoutDirectionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget18setShortcutEnabledEib</primary></indexterm>_ZN7QWidget18setShortcutEnabledEib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget19overrideWindowFlagsE6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QWidget19overrideWindowFlagsE6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget19overrideWindowStateE6QFlagsIN2Qt11WindowStateEE</primary></indexterm>_ZN7QWidget19overrideWindowStateE6QFlagsIN2Qt11WindowStateEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget20setContextMenuPolicyEN2Qt17ContextMenuPolicyE</primary></indexterm>_ZN7QWidget20setContextMenuPolicyEN2Qt17ContextMenuPolicyE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget20unsetLayoutDirectionEv</primary></indexterm>_ZN7QWidget20unsetLayoutDirectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget21mouseDoubleClickEventEP11QMouseEvent</primary></indexterm>_ZN7QWidget21mouseDoubleClickEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget21setAutoFillBackgroundEb</primary></indexterm>_ZN7QWidget21setAutoFillBackgroundEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget22windowActivationChangeEb</primary></indexterm>_ZN7QWidget22windowActivationChangeEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget24setAccessibleDescriptionERK7QString</primary></indexterm>_ZN7QWidget24setAccessibleDescriptionERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget26customContextMenuRequestedERK6QPoint</primary></indexterm>_ZN7QWidget26customContextMenuRequestedERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget4findEm</primary></indexterm>_ZN7QWidget4findEm <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget4moveERK6QPoint</primary></indexterm>_ZN7QWidget4moveERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget5closeEb</primary></indexterm>_ZN7QWidget5closeEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget5closeEv</primary></indexterm>_ZN7QWidget5closeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget5eraseERK7QRegion</primary></indexterm>_ZN7QWidget5eraseERK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget5eventEP6QEvent</primary></indexterm>_ZN7QWidget5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget5lowerEv</primary></indexterm>_ZN7QWidget5lowerEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget5raiseEv</primary></indexterm>_ZN7QWidget5raiseEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget6createEmbb</primary></indexterm>_ZN7QWidget6createEmbb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget6resizeERK5QSize</primary></indexterm>_ZN7QWidget6resizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget6scrollEii</primary></indexterm>_ZN7QWidget6scrollEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget6scrollEiiRK5QRect</primary></indexterm>_ZN7QWidget6scrollEiiRK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget6updateERK5QRect</primary></indexterm>_ZN7QWidget6updateERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget6updateERK7QRegion</primary></indexterm>_ZN7QWidget6updateERK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget6updateEv</primary></indexterm>_ZN7QWidget6updateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget7destroyEbb</primary></indexterm>_ZN7QWidget7destroyEbb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget7repaintERK5QRect</primary></indexterm>_ZN7QWidget7repaintERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget7repaintERK7QRegion</primary></indexterm>_ZN7QWidget7repaintERK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget7repaintEiiii</primary></indexterm>_ZN7QWidget7repaintEiiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget7repaintEv</primary></indexterm>_ZN7QWidget7repaintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget7setFontERK5QFont</primary></indexterm>_ZN7QWidget7setFontERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget7setIconERK7QPixmap</primary></indexterm>_ZN7QWidget7setIconERK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget7setMaskERK7QBitmap</primary></indexterm>_ZN7QWidget7setMaskERK7QBitmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget7setMaskERK7QRegion</primary></indexterm>_ZN7QWidget7setMaskERK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget7wmapperEv</primary></indexterm>_ZN7QWidget7wmapperEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget8setFocusEN2Qt11FocusReasonE</primary></indexterm>_ZN7QWidget8setFocusEN2Qt11FocusReasonE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget8setStyleEP6QStyle</primary></indexterm>_ZN7QWidget8setStyleEP6QStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget8setStyleERK7QString</primary></indexterm>_ZN7QWidget8setStyleERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget8x11EventEP7_XEvent</primary></indexterm>_ZN7QWidget8x11EventEP7_XEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget9addActionEP7QAction</primary></indexterm>_ZN7QWidget9addActionEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget9clearMaskEv</primary></indexterm>_ZN7QWidget9clearMaskEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget9dropEventEP10QDropEvent</primary></indexterm>_ZN7QWidget9dropEventEP10QDropEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget9grabMouseERK7QCursor</primary></indexterm>_ZN7QWidget9grabMouseERK7QCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget9grabMouseEv</primary></indexterm>_ZN7QWidget9grabMouseEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget9hideEventEP10QHideEvent</primary></indexterm>_ZN7QWidget9hideEventEP10QHideEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget9moveEventEP10QMoveEvent</primary></indexterm>_ZN7QWidget9moveEventEP10QMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget9setCursorERK7QCursor</primary></indexterm>_ZN7QWidget9setCursorERK7QCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget9setLayoutEP7QLayout</primary></indexterm>_ZN7QWidget9setLayoutEP7QLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget9setParentEPS_</primary></indexterm>_ZN7QWidget9setParentEPS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidget9setParentEPS_6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QWidget9setParentEPS_6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget9showEventEP10QShowEvent</primary></indexterm>_ZN7QWidget9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidgetC1EPS_6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QWidgetC1EPS_6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidgetC1EPS_PKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QWidgetC1EPS_PKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidgetC1ER14QWidgetPrivatePS_6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QWidgetC1ER14QWidgetPrivatePS_6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidgetC2EPS_6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QWidgetC2EPS_6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidgetC2EPS_PKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QWidgetC2EPS_PKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidgetC2ER14QWidgetPrivatePS_6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN7QWidgetC2ER14QWidgetPrivatePS_6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidgetD0Ev</primary></indexterm>_ZN7QWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidgetD1Ev</primary></indexterm>_ZN7QWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QWidgetD2Ev</primary></indexterm>_ZN7QWidgetD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar10insertMenuEP7QActionP5QMenu</primary></indexterm>_ZN8QMenuBar10insertMenuEP7QActionP5QMenu <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar10leaveEventEP6QEvent</primary></indexterm>_ZN8QMenuBar10leaveEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar10paintEventEP11QPaintEvent</primary></indexterm>_ZN8QMenuBar10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar11actionEventEP12QActionEvent</primary></indexterm>_ZN8QMenuBar11actionEventEP12QActionEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar11changeEventEP6QEvent</primary></indexterm>_ZN8QMenuBar11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar11eventFilterEP7QObjectP6QEvent</primary></indexterm>_ZN8QMenuBar11eventFilterEP7QObjectP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar11highlightedEi</primary></indexterm>_ZN8QMenuBar11highlightedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN8QMenuBar11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar11qt_metacastEPKc</primary></indexterm>_ZN8QMenuBar11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar11resizeEventEP12QResizeEvent</primary></indexterm>_ZN8QMenuBar11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar12addSeparatorEv</primary></indexterm>_ZN8QMenuBar12addSeparatorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar12focusInEventEP11QFocusEvent</primary></indexterm>_ZN8QMenuBar12focusInEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar12setDefaultUpEb</primary></indexterm>_ZN8QMenuBar12setDefaultUpEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar13focusOutEventEP11QFocusEvent</primary></indexterm>_ZN8QMenuBar13focusOutEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN8QMenuBar13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN8QMenuBar14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar15insertSeparatorEi</primary></indexterm>_ZN8QMenuBar15insertSeparatorEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN8QMenuBar15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar15setActiveActionEP7QAction</primary></indexterm>_ZN8QMenuBar15setActiveActionEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar15setAutoGeometryEb</primary></indexterm>_ZN8QMenuBar15setAutoGeometryEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar15setCornerWidgetEP7QWidgetN2Qt6CornerE</primary></indexterm>_ZN8QMenuBar15setCornerWidgetEP7QWidgetN2Qt6CornerE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar16setItemParameterEii</primary></indexterm>_ZN8QMenuBar16setItemParameterEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN8QMenuBar17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar5clearEv</primary></indexterm>_ZN8QMenuBar5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar5eventEP6QEvent</primary></indexterm>_ZN8QMenuBar5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar7addMenuEP5QMenu</primary></indexterm>_ZN8QMenuBar7addMenuEP5QMenu <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar7addMenuERK5QIconRK7QString</primary></indexterm>_ZN8QMenuBar7addMenuERK5QIconRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar7addMenuERK7QString</primary></indexterm>_ZN8QMenuBar7addMenuERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar7hoveredEP7QAction</primary></indexterm>_ZN8QMenuBar7hoveredEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar9activatedEi</primary></indexterm>_ZN8QMenuBar9activatedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar9addActionERK7QString</primary></indexterm>_ZN8QMenuBar9addActionERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar9addActionERK7QStringPK7QObjectPKc</primary></indexterm>_ZN8QMenuBar9addActionERK7QStringPK7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBar9triggeredEP7QAction</primary></indexterm>_ZN8QMenuBar9triggeredEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBarC1EP7QWidget</primary></indexterm>_ZN8QMenuBarC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBarC1EP7QWidgetPKc</primary></indexterm>_ZN8QMenuBarC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBarC2EP7QWidget</primary></indexterm>_ZN8QMenuBarC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBarC2EP7QWidgetPKc</primary></indexterm>_ZN8QMenuBarC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBarD0Ev</primary></indexterm>_ZN8QMenuBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QMenuBarD1Ev</primary></indexterm>_ZN8QMenuBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBarD2Ev</primary></indexterm>_ZN8QMenuBarD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter10drawPixmapERK6QRectFRK7QPixmapS2_</primary></indexterm>_ZN8QPainter10drawPixmapERK6QRectFRK7QPixmapS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter10drawPointsEPK6QPointi</primary></indexterm>_ZN8QPainter10drawPointsEPK6QPointi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter10drawPointsEPK7QPointFi</primary></indexterm>_ZN8QPainter10drawPointsEPK7QPointFi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter10redirectedEPK12QPaintDeviceP6QPoint</primary></indexterm>_ZN8QPainter10redirectedEPK12QPaintDeviceP6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter10strokePathERK12QPainterPathRK4QPen</primary></indexterm>_ZN8QPainter10strokePathERK12QPainterPathRK4QPen <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter11drawEllipseERK5QRect</primary></indexterm>_ZN8QPainter11drawEllipseERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter11drawEllipseERK6QRectF</primary></indexterm>_ZN8QPainter11drawEllipseERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter11drawPictureERK7QPointFRK8QPicture</primary></indexterm>_ZN8QPainter11drawPictureERK7QPointFRK8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter11drawPolygonEPK6QPointiN2Qt8FillRuleE</primary></indexterm>_ZN8QPainter11drawPolygonEPK6QPointiN2Qt8FillRuleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE</primary></indexterm>_ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter11resetMatrixEv</primary></indexterm>_ZN8QPainter11resetMatrixEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter11setClipPathERK12QPainterPathN2Qt13ClipOperationE</primary></indexterm>_ZN8QPainter11setClipPathERK12QPainterPathN2Qt13ClipOperationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter11setClipRectERK6QRectFN2Qt13ClipOperationE</primary></indexterm>_ZN8QPainter11setClipRectERK6QRectFN2Qt13ClipOperationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter11setClippingEb</primary></indexterm>_ZN8QPainter11setClippingEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter11setViewportERK5QRect</primary></indexterm>_ZN8QPainter11setViewportERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter12boundingRectERK5QRectiRK7QString</primary></indexterm>_ZN8QPainter12boundingRectERK5QRectiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter12boundingRectERK6QRectFRK7QStringRK11QTextOption</primary></indexterm>_ZN8QPainter12boundingRectERK6QRectFRK7QStringRK11QTextOption <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter12boundingRectERK6QRectFiRK7QString</primary></indexterm>_ZN8QPainter12boundingRectERK6QRectFiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter12drawPolylineEPK6QPointi</primary></indexterm>_ZN8QPainter12drawPolylineEPK6QPointi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter12drawPolylineEPK7QPointFi</primary></indexterm>_ZN8QPainter12drawPolylineEPK7QPointFi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter12drawTextItemERK7QPointFRK9QTextItem</primary></indexterm>_ZN8QPainter12drawTextItemERK7QPointFRK9QTextItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter13drawRoundRectERK6QRectFii</primary></indexterm>_ZN8QPainter13drawRoundRectERK6QRectFii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter13setBackgroundERK6QBrush</primary></indexterm>_ZN8QPainter13setBackgroundERK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter13setClipRegionERK7QRegionN2Qt13ClipOperationE</primary></indexterm>_ZN8QPainter13setClipRegionERK7QRegionN2Qt13ClipOperationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter13setRedirectedEPK12QPaintDevicePS0_RK6QPoint</primary></indexterm>_ZN8QPainter13setRedirectedEPK12QPaintDevicePS0_RK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter13setRenderHintENS_10RenderHintEb</primary></indexterm>_ZN8QPainter13setRenderHintENS_10RenderHintEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter14setBrushOriginERK7QPointF</primary></indexterm>_ZN8QPainter14setBrushOriginERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter15drawCubicBezierERK8QPolygoni</primary></indexterm>_ZN8QPainter15drawCubicBezierERK8QPolygoni <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF</primary></indexterm>_ZN8QPainter15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter16drawLineSegmentsERK8QPolygonii</primary></indexterm>_ZN8QPainter16drawLineSegmentsERK8QPolygonii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter16setMatrixEnabledEb</primary></indexterm>_ZN8QPainter16setMatrixEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter17drawConvexPolygonEPK6QPointi</primary></indexterm>_ZN8QPainter17drawConvexPolygonEPK6QPointi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter17drawConvexPolygonEPK7QPointFi</primary></indexterm>_ZN8QPainter17drawConvexPolygonEPK7QPointFi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter17restoreRedirectedEPK12QPaintDevice</primary></indexterm>_ZN8QPainter17restoreRedirectedEPK12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter17setBackgroundModeEN2Qt6BGModeE</primary></indexterm>_ZN8QPainter17setBackgroundModeEN2Qt6BGModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter18setCompositionModeENS_15CompositionModeE</primary></indexterm>_ZN8QPainter18setCompositionModeENS_15CompositionModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter18setLayoutDirectionEN2Qt15LayoutDirectionE</primary></indexterm>_ZN8QPainter18setLayoutDirectionEN2Qt15LayoutDirectionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter23setViewTransformEnabledEb</primary></indexterm>_ZN8QPainter23setViewTransformEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter3endEv</primary></indexterm>_ZN8QPainter3endEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter4saveEv</primary></indexterm>_ZN8QPainter4saveEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter5beginEP12QPaintDevice</primary></indexterm>_ZN8QPainter5beginEP12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter5scaleEdd</primary></indexterm>_ZN8QPainter5scaleEdd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter5shearEdd</primary></indexterm>_ZN8QPainter5shearEdd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter6rotateEd</primary></indexterm>_ZN8QPainter6rotateEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter6setPenEN2Qt8PenStyleE</primary></indexterm>_ZN8QPainter6setPenEN2Qt8PenStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter6setPenERK4QPen</primary></indexterm>_ZN8QPainter6setPenERK4QPen <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter6setPenERK6QColor</primary></indexterm>_ZN8QPainter6setPenERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter7drawArcERK6QRectFii</primary></indexterm>_ZN8QPainter7drawArcERK6QRectFii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter7drawPieERK6QRectFii</primary></indexterm>_ZN8QPainter7drawPieERK6QRectFii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter7restoreEv</primary></indexterm>_ZN8QPainter7restoreEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter7setFontERK5QFont</primary></indexterm>_ZN8QPainter7setFontERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter8drawPathERK12QPainterPath</primary></indexterm>_ZN8QPainter8drawPathERK12QPainterPath <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter8drawTextERK5QRectiRK7QStringPS0_</primary></indexterm>_ZN8QPainter8drawTextERK5QRectiRK7QStringPS0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter8drawTextERK6QRectFRK7QStringRK11QTextOption</primary></indexterm>_ZN8QPainter8drawTextERK6QRectFRK7QStringRK11QTextOption <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter8drawTextERK6QRectFiRK7QStringPS0_</primary></indexterm>_ZN8QPainter8drawTextERK6QRectFiRK7QStringPS0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter8drawTextERK7QPointFRK7QString</primary></indexterm>_ZN8QPainter8drawTextERK7QPointFRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter8fillPathERK12QPainterPathRK6QBrush</primary></indexterm>_ZN8QPainter8fillPathERK12QPainterPathRK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter8fillRectERK5QRectRK6QBrush</primary></indexterm>_ZN8QPainter8fillRectERK5QRectRK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter8fillRectERK6QRectFRK6QBrush</primary></indexterm>_ZN8QPainter8fillRectERK6QRectFRK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter8initFromEPK7QWidget</primary></indexterm>_ZN8QPainter8initFromEPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter8setBrushEN2Qt10BrushStyleE</primary></indexterm>_ZN8QPainter8setBrushEN2Qt10BrushStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter8setBrushERK6QBrush</primary></indexterm>_ZN8QPainter8setBrushERK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter9drawChordERK6QRectFii</primary></indexterm>_ZN8QPainter9drawChordERK6QRectFii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZN8QPainter9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter9drawLinesEPK5QLinei</primary></indexterm>_ZN8QPainter9drawLinesEPK5QLinei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter9drawLinesEPK6QLineFi</primary></indexterm>_ZN8QPainter9drawLinesEPK6QLineFi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter9drawLinesEPK6QPointi</primary></indexterm>_ZN8QPainter9drawLinesEPK6QPointi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter9drawLinesEPK7QPointFi</primary></indexterm>_ZN8QPainter9drawLinesEPK7QPointFi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter9drawRectsEPK5QRecti</primary></indexterm>_ZN8QPainter9drawRectsEPK5QRecti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter9drawRectsEPK6QRectFi</primary></indexterm>_ZN8QPainter9drawRectsEPK6QRectFi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter9eraseRectERK6QRectF</primary></indexterm>_ZN8QPainter9eraseRectERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter9setMatrixERK7QMatrixb</primary></indexterm>_ZN8QPainter9setMatrixERK7QMatrixb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainter9setWindowERK5QRect</primary></indexterm>_ZN8QPainter9setWindowERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainter9translateERK7QPointF</primary></indexterm>_ZN8QPainter9translateERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainterC1EP12QPaintDevice</primary></indexterm>_ZN8QPainterC1EP12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainterC1Ev</primary></indexterm>_ZN8QPainterC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainterC2EP12QPaintDevice</primary></indexterm>_ZN8QPainterC2EP12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainterC2Ev</primary></indexterm>_ZN8QPainterC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPainterD1Ev</primary></indexterm>_ZN8QPainterD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPainterD2Ev</primary></indexterm>_ZN8QPainterD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPalette13setColorGroupENS_10ColorGroupERK6QBrushS3_S3_S3_S3_S3_S3_S3_S3_</primary></indexterm>_ZN8QPalette13setColorGroupENS_10ColorGroupERK6QBrushS3_S3_S3_S3_S3_S3_S3_S3_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPalette8setBrushENS_10ColorGroupENS_9ColorRoleERK6QBrush</primary></indexterm>_ZN8QPalette8setBrushENS_10ColorGroupENS_9ColorRoleERK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPaletteC1EN2Qt11GlobalColorE</primary></indexterm>_ZN8QPaletteC1EN2Qt11GlobalColorE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPaletteC1ERK11QColorGroupS2_S2_</primary></indexterm>_ZN8QPaletteC1ERK11QColorGroupS2_S2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPaletteC1ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_</primary></indexterm>_ZN8QPaletteC1ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPaletteC1ERK6QColor</primary></indexterm>_ZN8QPaletteC1ERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPaletteC1ERK6QColorS2_</primary></indexterm>_ZN8QPaletteC1ERK6QColorS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPaletteC1ERK6QColorS2_S2_S2_S2_S2_S2_</primary></indexterm>_ZN8QPaletteC1ERK6QColorS2_S2_S2_S2_S2_S2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPaletteC1ERKS_</primary></indexterm>_ZN8QPaletteC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPaletteC1Ev</primary></indexterm>_ZN8QPaletteC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPaletteC2EN2Qt11GlobalColorE</primary></indexterm>_ZN8QPaletteC2EN2Qt11GlobalColorE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPaletteC2ERK11QColorGroupS2_S2_</primary></indexterm>_ZN8QPaletteC2ERK11QColorGroupS2_S2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPaletteC2ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_</primary></indexterm>_ZN8QPaletteC2ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPaletteC2ERK6QColor</primary></indexterm>_ZN8QPaletteC2ERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPaletteC2ERK6QColorS2_</primary></indexterm>_ZN8QPaletteC2ERK6QColorS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPaletteC2ERK6QColorS2_S2_S2_S2_S2_S2_</primary></indexterm>_ZN8QPaletteC2ERK6QColorS2_S2_S2_S2_S2_S2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPaletteC2ERKS_</primary></indexterm>_ZN8QPaletteC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPaletteC2Ev</primary></indexterm>_ZN8QPaletteC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPaletteD1Ev</primary></indexterm>_ZN8QPaletteD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPaletteD2Ev</primary></indexterm>_ZN8QPaletteD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPaletteaSERKS_</primary></indexterm>_ZN8QPaletteaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPicture12inputFormatsEv</primary></indexterm>_ZN8QPicture12inputFormatsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPicture13outputFormatsEv</primary></indexterm>_ZN8QPicture13outputFormatsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPicture13pictureFormatERK7QString</primary></indexterm>_ZN8QPicture13pictureFormatERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPicture15inputFormatListEv</primary></indexterm>_ZN8QPicture15inputFormatListEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPicture15setBoundingRectERK5QRect</primary></indexterm>_ZN8QPicture15setBoundingRectERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPicture16outputFormatListEv</primary></indexterm>_ZN8QPicture16outputFormatListEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPicture4loadEP9QIODevicePKc</primary></indexterm>_ZN8QPicture4loadEP9QIODevicePKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPicture4loadERK7QStringPKc</primary></indexterm>_ZN8QPicture4loadERK7QStringPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPicture4playEP8QPainter</primary></indexterm>_ZN8QPicture4playEP8QPainter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPicture4saveEP9QIODevicePKc</primary></indexterm>_ZN8QPicture4saveEP9QIODevicePKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPicture4saveERK7QStringPKc</primary></indexterm>_ZN8QPicture4saveERK7QStringPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPicture6detachEv</primary></indexterm>_ZN8QPicture6detachEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPicture7setDataEPKcj</primary></indexterm>_ZN8QPicture7setDataEPKcj <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPictureC1ER15QPicturePrivate</primary></indexterm>_ZN8QPictureC1ER15QPicturePrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPictureC1ERKS_</primary></indexterm>_ZN8QPictureC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPictureC1Ei</primary></indexterm>_ZN8QPictureC1Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPictureC2ER15QPicturePrivate</primary></indexterm>_ZN8QPictureC2ER15QPicturePrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPictureC2ERKS_</primary></indexterm>_ZN8QPictureC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPictureC2Ei</primary></indexterm>_ZN8QPictureC2Ei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPictureD0Ev</primary></indexterm>_ZN8QPictureD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPictureD1Ev</primary></indexterm>_ZN8QPictureD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPictureD2Ev</primary></indexterm>_ZN8QPictureD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPictureaSERKS_</primary></indexterm>_ZN8QPictureaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPolygon9putPointsEiiPKi</primary></indexterm>_ZN8QPolygon9putPointsEiiPKi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPolygon9putPointsEiiRKS_i</primary></indexterm>_ZN8QPolygon9putPointsEiiRKS_i <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPolygon9putPointsEiiiiz</primary></indexterm>_ZN8QPolygon9putPointsEiiiiz <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPolygon9setPointsEiPKi</primary></indexterm>_ZN8QPolygon9setPointsEiPKi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPolygon9setPointsEiiiz</primary></indexterm>_ZN8QPolygon9setPointsEiiiz <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPolygon9translateEii</primary></indexterm>_ZN8QPolygon9translateEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPolygonC1ERK5QRectb</primary></indexterm>_ZN8QPolygonC1ERK5QRectb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPolygonC1EiPKi</primary></indexterm>_ZN8QPolygonC1EiPKi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPolygonC2ERK5QRectb</primary></indexterm>_ZN8QPolygonC2ERK5QRectb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPolygonC2EiPKi</primary></indexterm>_ZN8QPolygonC2EiPKi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter10setCreatorERK7QString</primary></indexterm>_ZN8QPrinter10setCreatorERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter10setDocNameERK7QString</primary></indexterm>_ZN8QPrinter10setDocNameERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter10setEnginesEP12QPrintEngineP12QPaintEngine</primary></indexterm>_ZN8QPrinter10setEnginesEP12QPrintEngineP12QPaintEngine <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter11setFullPageEb</primary></indexterm>_ZN8QPrinter11setFullPageEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter11setPageSizeENS_8PageSizeE</primary></indexterm>_ZN8QPrinter11setPageSizeENS_8PageSizeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter12setColorModeENS_9ColorModeE</primary></indexterm>_ZN8QPrinter12setColorModeENS_9ColorModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter12setNumCopiesEi</primary></indexterm>_ZN8QPrinter12setNumCopiesEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter12setPageOrderENS_9PageOrderE</primary></indexterm>_ZN8QPrinter12setPageOrderENS_9PageOrderE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter13setPrintRangeENS_10PrintRangeE</primary></indexterm>_ZN8QPrinter13setPrintRangeENS_10PrintRangeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter13setResolutionEi</primary></indexterm>_ZN8QPrinter13setResolutionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter14setOrientationENS_11OrientationE</primary></indexterm>_ZN8QPrinter14setOrientationENS_11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter14setPaperSourceENS_11PaperSourceE</primary></indexterm>_ZN8QPrinter14setPaperSourceENS_11PaperSourceE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter14setPrinterNameERK7QString</primary></indexterm>_ZN8QPrinter14setPrinterNameERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter15setOutputFormatENS_12OutputFormatE</primary></indexterm>_ZN8QPrinter15setOutputFormatENS_12OutputFormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter15setOutputToFileEb</primary></indexterm>_ZN8QPrinter15setOutputToFileEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter15setPrintProgramERK7QString</primary></indexterm>_ZN8QPrinter15setPrintProgramERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter16setCollateCopiesEb</primary></indexterm>_ZN8QPrinter16setCollateCopiesEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter16setOptionEnabledENS_13PrinterOptionEb</primary></indexterm>_ZN8QPrinter16setOptionEnabledENS_13PrinterOptionEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter17setOutputFileNameERK7QString</primary></indexterm>_ZN8QPrinter17setOutputFileNameERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter23setCollateCopiesEnabledEb</primary></indexterm>_ZN8QPrinter23setCollateCopiesEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter23setFontEmbeddingEnabledEb</primary></indexterm>_ZN8QPrinter23setFontEmbeddingEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter25setPrinterSelectionOptionERK7QString</primary></indexterm>_ZN8QPrinter25setPrinterSelectionOptionERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter5abortEv</primary></indexterm>_ZN8QPrinter5abortEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter5setupEP7QWidget</primary></indexterm>_ZN8QPrinter5setupEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter7newPageEv</primary></indexterm>_ZN8QPrinter7newPageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinter9setFromToEii</primary></indexterm>_ZN8QPrinter9setFromToEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinter9setMinMaxEii</primary></indexterm>_ZN8QPrinter9setMinMaxEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinterC1ENS_11PrinterModeE</primary></indexterm>_ZN8QPrinterC1ENS_11PrinterModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinterC2ENS_11PrinterModeE</primary></indexterm>_ZN8QPrinterC2ENS_11PrinterModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinterD0Ev</primary></indexterm>_ZN8QPrinterD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPrinterD1Ev</primary></indexterm>_ZN8QPrinterD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QPrinterD2Ev</primary></indexterm>_ZN8QPrinterD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QSpinBox10setMaximumEi</primary></indexterm>_ZN8QSpinBox10setMaximumEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QSpinBox10setMinimumEi</primary></indexterm>_ZN8QSpinBox10setMinimumEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QSpinBox11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN8QSpinBox11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QSpinBox11qt_metacastEPKc</primary></indexterm>_ZN8QSpinBox11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QSpinBox12valueChangedERK7QString</primary></indexterm>_ZN8QSpinBox12valueChangedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QSpinBox12valueChangedEi</primary></indexterm>_ZN8QSpinBox12valueChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QSpinBox13setSingleStepEi</primary></indexterm>_ZN8QSpinBox13setSingleStepEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QSpinBox5eventEP6QEvent</primary></indexterm>_ZN8QSpinBox5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QSpinBox8setRangeEii</primary></indexterm>_ZN8QSpinBox8setRangeEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QSpinBox8setValueEi</primary></indexterm>_ZN8QSpinBox8setValueEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QSpinBox9setPrefixERK7QString</primary></indexterm>_ZN8QSpinBox9setPrefixERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QSpinBox9setSuffixERK7QString</primary></indexterm>_ZN8QSpinBox9setSuffixERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QSpinBoxC1EP7QWidget</primary></indexterm>_ZN8QSpinBoxC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QSpinBoxC1EP7QWidgetPKc</primary></indexterm>_ZN8QSpinBoxC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QSpinBoxC1EiiiP7QWidgetPKc</primary></indexterm>_ZN8QSpinBoxC1EiiiP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QSpinBoxC2EP7QWidget</primary></indexterm>_ZN8QSpinBoxC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QSpinBoxC2EP7QWidgetPKc</primary></indexterm>_ZN8QSpinBoxC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QSpinBoxC2EiiiP7QWidgetPKc</primary></indexterm>_ZN8QSpinBoxC2EiiiP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QSpinBoxD0Ev</primary></indexterm>_ZN8QSpinBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QSpinBoxD1Ev</primary></indexterm>_ZN8QSpinBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar10childEventEP11QChildEvent</primary></indexterm>_ZN8QToolBar10childEventEP11QChildEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar10paintEventEP11QPaintEvent</primary></indexterm>_ZN8QToolBar10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar10setMovableEb</primary></indexterm>_ZN8QToolBar10setMovableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar11actionEventEP12QActionEvent</primary></indexterm>_ZN8QToolBar11actionEventEP12QActionEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar11changeEventEP6QEvent</primary></indexterm>_ZN8QToolBar11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN8QToolBar11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar11qt_metacastEPKc</primary></indexterm>_ZN8QToolBar11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar11resizeEventEP12QResizeEvent</primary></indexterm>_ZN8QToolBar11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar11setIconSizeERK5QSize</primary></indexterm>_ZN8QToolBar11setIconSizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar12addSeparatorEv</primary></indexterm>_ZN8QToolBar12addSeparatorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar12insertWidgetEP7QActionP7QWidget</primary></indexterm>_ZN8QToolBar12insertWidgetEP7QActionP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar14movableChangedEb</primary></indexterm>_ZN8QToolBar14movableChangedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar14setOrientationEN2Qt11OrientationE</primary></indexterm>_ZN8QToolBar14setOrientationEN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar15actionTriggeredEP7QAction</primary></indexterm>_ZN8QToolBar15actionTriggeredEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar15iconSizeChangedERK5QSize</primary></indexterm>_ZN8QToolBar15iconSizeChangedERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar15insertSeparatorEP7QAction</primary></indexterm>_ZN8QToolBar15insertSeparatorEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar15setAllowedAreasE6QFlagsIN2Qt11ToolBarAreaEE</primary></indexterm>_ZN8QToolBar15setAllowedAreasE6QFlagsIN2Qt11ToolBarAreaEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar18orientationChangedEN2Qt11OrientationE</primary></indexterm>_ZN8QToolBar18orientationChangedEN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar18setToolButtonStyleEN2Qt15ToolButtonStyleE</primary></indexterm>_ZN8QToolBar18setToolButtonStyleEN2Qt15ToolButtonStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar19allowedAreasChangedE6QFlagsIN2Qt11ToolBarAreaEE</primary></indexterm>_ZN8QToolBar19allowedAreasChangedE6QFlagsIN2Qt11ToolBarAreaEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar22toolButtonStyleChangedEN2Qt15ToolButtonStyleE</primary></indexterm>_ZN8QToolBar22toolButtonStyleChangedEN2Qt15ToolButtonStyleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar5clearEv</primary></indexterm>_ZN8QToolBar5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar5eventEP6QEvent</primary></indexterm>_ZN8QToolBar5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar9addActionERK5QIconRK7QString</primary></indexterm>_ZN8QToolBar9addActionERK5QIconRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar9addActionERK5QIconRK7QStringPK7QObjectPKc</primary></indexterm>_ZN8QToolBar9addActionERK5QIconRK7QStringPK7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar9addActionERK7QString</primary></indexterm>_ZN8QToolBar9addActionERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar9addActionERK7QStringPK7QObjectPKc</primary></indexterm>_ZN8QToolBar9addActionERK7QStringPK7QObjectPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBar9addWidgetEP7QWidget</primary></indexterm>_ZN8QToolBar9addWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBarC1EP7QWidget</primary></indexterm>_ZN8QToolBarC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBarC1EP7QWidgetPKc</primary></indexterm>_ZN8QToolBarC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBarC1ERK7QStringP7QWidget</primary></indexterm>_ZN8QToolBarC1ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBarC2EP7QWidget</primary></indexterm>_ZN8QToolBarC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBarC2EP7QWidgetPKc</primary></indexterm>_ZN8QToolBarC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBarC2ERK7QStringP7QWidget</primary></indexterm>_ZN8QToolBarC2ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBarD0Ev</primary></indexterm>_ZN8QToolBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBarD1Ev</primary></indexterm>_ZN8QToolBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBarD2Ev</primary></indexterm>_ZN8QToolBarD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBox10insertItemEiP7QWidgetRK5QIconRK7QString</primary></indexterm>_ZN8QToolBox10insertItemEiP7QWidgetRK5QIconRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBox10removeItemEi</primary></indexterm>_ZN8QToolBox10removeItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBox11changeEventEP6QEvent</primary></indexterm>_ZN8QToolBox11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBox11itemRemovedEi</primary></indexterm>_ZN8QToolBox11itemRemovedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBox11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN8QToolBox11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBox11qt_metacastEPKc</primary></indexterm>_ZN8QToolBox11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBox11setItemIconEiRK5QIcon</primary></indexterm>_ZN8QToolBox11setItemIconEiRK5QIcon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBox11setItemTextEiRK7QString</primary></indexterm>_ZN8QToolBox11setItemTextEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBox12itemInsertedEi</primary></indexterm>_ZN8QToolBox12itemInsertedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBox14currentChangedEi</primary></indexterm>_ZN8QToolBox14currentChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBox14setItemEnabledEib</primary></indexterm>_ZN8QToolBox14setItemEnabledEib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBox14setItemToolTipEiRK7QString</primary></indexterm>_ZN8QToolBox14setItemToolTipEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBox15setCurrentIndexEi</primary></indexterm>_ZN8QToolBox15setCurrentIndexEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBox16setCurrentWidgetEP7QWidget</primary></indexterm>_ZN8QToolBox16setCurrentWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBox5eventEP6QEvent</primary></indexterm>_ZN8QToolBox5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBox9showEventEP10QShowEvent</primary></indexterm>_ZN8QToolBox9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBoxC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN8QToolBoxC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBoxC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN8QToolBoxC1EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBoxC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN8QToolBoxC2EP7QWidget6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBoxC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE</primary></indexterm>_ZN8QToolBoxC2EP7QWidgetPKc6QFlagsIN2Qt10WindowTypeEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBoxD0Ev</primary></indexterm>_ZN8QToolBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBoxD1Ev</primary></indexterm>_ZN8QToolBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBoxD2Ev</primary></indexterm>_ZN8QToolBoxD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolTip7paletteEv</primary></indexterm>_ZN8QToolTip7paletteEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolTip8showTextERK6QPointRK7QStringP7QWidget</primary></indexterm>_ZN8QToolTip8showTextERK6QPointRK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCDEStyle11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QCDEStyle11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCDEStyle11qt_metacastEPKc</primary></indexterm>_ZN9QCDEStyle11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCDEStyleC1Eb</primary></indexterm>_ZN9QCDEStyleC1Eb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCDEStyleC2Eb</primary></indexterm>_ZN9QCDEStyleC2Eb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCDEStyleD0Ev</primary></indexterm>_ZN9QCDEStyleD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCDEStyleD1Ev</primary></indexterm>_ZN9QCDEStyleD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCDEStyleD2Ev</primary></indexterm>_ZN9QCDEStyleD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCheckBox10paintEventEP11QPaintEvent</primary></indexterm>_ZN9QCheckBox10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCheckBox11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QCheckBox11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCheckBox11qt_metacastEPKc</primary></indexterm>_ZN9QCheckBox11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCheckBox11setTristateEb</primary></indexterm>_ZN9QCheckBox11setTristateEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCheckBox12stateChangedEi</primary></indexterm>_ZN9QCheckBox12stateChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCheckBox13checkStateSetEv</primary></indexterm>_ZN9QCheckBox13checkStateSetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCheckBox13setCheckStateEN2Qt10CheckStateE</primary></indexterm>_ZN9QCheckBox13setCheckStateEN2Qt10CheckStateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCheckBox14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN9QCheckBox14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCheckBox14nextCheckStateEv</primary></indexterm>_ZN9QCheckBox14nextCheckStateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCheckBox5eventEP6QEvent</primary></indexterm>_ZN9QCheckBox5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCheckBoxC1EP7QWidget</primary></indexterm>_ZN9QCheckBoxC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCheckBoxC1EP7QWidgetPKc</primary></indexterm>_ZN9QCheckBoxC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCheckBoxC1ERK7QStringP7QWidget</primary></indexterm>_ZN9QCheckBoxC1ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCheckBoxC1ERK7QStringP7QWidgetPKc</primary></indexterm>_ZN9QCheckBoxC1ERK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCheckBoxC2EP7QWidget</primary></indexterm>_ZN9QCheckBoxC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCheckBoxC2EP7QWidgetPKc</primary></indexterm>_ZN9QCheckBoxC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCheckBoxC2ERK7QStringP7QWidget</primary></indexterm>_ZN9QCheckBoxC2ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCheckBoxC2ERK7QStringP7QWidgetPKc</primary></indexterm>_ZN9QCheckBoxC2ERK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCheckBoxD0Ev</primary></indexterm>_ZN9QCheckBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCheckBoxD1Ev</primary></indexterm>_ZN9QCheckBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QColormap10initializeEv</primary></indexterm>_ZN9QColormap10initializeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QColormap7cleanupEv</primary></indexterm>_ZN9QColormap7cleanupEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QColormap8instanceEi</primary></indexterm>_ZN9QColormap8instanceEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QColormapC1ERKS_</primary></indexterm>_ZN9QColormapC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QColormapC2ERKS_</primary></indexterm>_ZN9QColormapC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QColormapD1Ev</primary></indexterm>_ZN9QColormapD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QColormapD2Ev</primary></indexterm>_ZN9QColormapD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox10insertItemEiRK5QIconRK7QStringRK8QVariant</primary></indexterm>_ZN9QComboBox10insertItemEiRK5QIconRK7QStringRK8QVariant <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox10paintEventEP11QPaintEvent</primary></indexterm>_ZN9QComboBox10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox10removeItemEi</primary></indexterm>_ZN9QComboBox10removeItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox10wheelEventEP11QWheelEvent</primary></indexterm>_ZN9QComboBox10wheelEventEP11QWheelEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox11changeEventEP6QEvent</primary></indexterm>_ZN9QComboBox11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox11highlightedERK7QString</primary></indexterm>_ZN9QComboBox11highlightedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox11highlightedEi</primary></indexterm>_ZN9QComboBox11highlightedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox11insertItemsEiRK11QStringList</primary></indexterm>_ZN9QComboBox11insertItemsEiRK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QComboBox11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox11qt_metacastEPKc</primary></indexterm>_ZN9QComboBox11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox11resizeEventEP12QResizeEvent</primary></indexterm>_ZN9QComboBox11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox11setEditTextERK7QString</primary></indexterm>_ZN9QComboBox11setEditTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox11setEditableEb</primary></indexterm>_ZN9QComboBox11setEditableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox11setIconSizeERK5QSize</primary></indexterm>_ZN9QComboBox11setIconSizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox11setItemDataEiRK8QVarianti</primary></indexterm>_ZN9QComboBox11setItemDataEiRK8QVarianti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox11setItemIconEiRK5QIcon</primary></indexterm>_ZN9QComboBox11setItemIconEiRK5QIcon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox11setItemTextEiRK7QString</primary></indexterm>_ZN9QComboBox11setItemTextEiRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox11setLineEditEP9QLineEdit</primary></indexterm>_ZN9QComboBox11setLineEditEP9QLineEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox11setMaxCountEi</primary></indexterm>_ZN9QComboBox11setMaxCountEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox11textChangedERK7QString</primary></indexterm>_ZN9QComboBox11textChangedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox12focusInEventEP11QFocusEvent</primary></indexterm>_ZN9QComboBox12focusInEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox12setValidatorEPK10QValidator</primary></indexterm>_ZN9QComboBox12setValidatorEPK10QValidator <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox13clearEditTextEv</primary></indexterm>_ZN9QComboBox13clearEditTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox13focusOutEventEP11QFocusEvent</primary></indexterm>_ZN9QComboBox13focusOutEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN9QComboBox13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox14setModelColumnEi</primary></indexterm>_ZN9QComboBox14setModelColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox15editTextChangedERK7QString</primary></indexterm>_ZN9QComboBox15editTextChangedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox15keyReleaseEventEP9QKeyEvent</primary></indexterm>_ZN9QComboBox15keyReleaseEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN9QComboBox15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox15setCurrentIndexEi</primary></indexterm>_ZN9QComboBox15setCurrentIndexEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox15setInsertPolicyENS_12InsertPolicyE</primary></indexterm>_ZN9QComboBox15setInsertPolicyENS_12InsertPolicyE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox15setItemDelegateEP21QAbstractItemDelegate</primary></indexterm>_ZN9QComboBox15setItemDelegateEP21QAbstractItemDelegate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox16contextMenuEventEP17QContextMenuEvent</primary></indexterm>_ZN9QComboBox16contextMenuEventEP17QContextMenuEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox16inputMethodEventEP17QInputMethodEvent</primary></indexterm>_ZN9QComboBox16inputMethodEventEP17QInputMethodEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN9QComboBox17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox17setAutoCompletionEb</primary></indexterm>_ZN9QComboBox17setAutoCompletionEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox17setRootModelIndexERK11QModelIndex</primary></indexterm>_ZN9QComboBox17setRootModelIndexERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox18setMaxVisibleItemsEi</primary></indexterm>_ZN9QComboBox18setMaxVisibleItemsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox19currentIndexChangedERK7QString</primary></indexterm>_ZN9QComboBox19currentIndexChangedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox19currentIndexChangedEi</primary></indexterm>_ZN9QComboBox19currentIndexChangedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox19setSizeAdjustPolicyENS_16SizeAdjustPolicyE</primary></indexterm>_ZN9QComboBox19setSizeAdjustPolicyENS_16SizeAdjustPolicyE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox20setDuplicatesEnabledEb</primary></indexterm>_ZN9QComboBox20setDuplicatesEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox24setMinimumContentsLengthEi</primary></indexterm>_ZN9QComboBox24setMinimumContentsLengthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox32setAutoCompletionCaseSensitivityEN2Qt15CaseSensitivityE</primary></indexterm>_ZN9QComboBox32setAutoCompletionCaseSensitivityEN2Qt15CaseSensitivityE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox5clearEv</primary></indexterm>_ZN9QComboBox5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox5eventEP6QEvent</primary></indexterm>_ZN9QComboBox5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox7setViewEP17QAbstractItemView</primary></indexterm>_ZN9QComboBox7setViewEP17QAbstractItemView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox8setFrameEb</primary></indexterm>_ZN9QComboBox8setFrameEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox8setModelEP18QAbstractItemModel</primary></indexterm>_ZN9QComboBox8setModelEP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox9activatedERK7QString</primary></indexterm>_ZN9QComboBox9activatedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox9activatedEi</primary></indexterm>_ZN9QComboBox9activatedEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox9hideEventEP10QHideEvent</primary></indexterm>_ZN9QComboBox9hideEventEP10QHideEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox9hidePopupEv</primary></indexterm>_ZN9QComboBox9hidePopupEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBox9showEventEP10QShowEvent</primary></indexterm>_ZN9QComboBox9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox9showPopupEv</primary></indexterm>_ZN9QComboBox9showPopupEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBoxC1EP7QWidget</primary></indexterm>_ZN9QComboBoxC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBoxC1EP7QWidgetPKc</primary></indexterm>_ZN9QComboBoxC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBoxC1EbP7QWidgetPKc</primary></indexterm>_ZN9QComboBoxC1EbP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBoxC2EP7QWidget</primary></indexterm>_ZN9QComboBoxC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBoxC2EP7QWidgetPKc</primary></indexterm>_ZN9QComboBoxC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBoxC2EbP7QWidgetPKc</primary></indexterm>_ZN9QComboBoxC2EbP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBoxD0Ev</primary></indexterm>_ZN9QComboBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBoxD1Ev</primary></indexterm>_ZN9QComboBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QComboBoxD2Ev</primary></indexterm>_ZN9QComboBoxD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDateEdit11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QDateEdit11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDateEdit11qt_metacastEPKc</primary></indexterm>_ZN9QDateEdit11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDateEditC1EP7QWidget</primary></indexterm>_ZN9QDateEditC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDateEditC1ERK5QDateP7QWidget</primary></indexterm>_ZN9QDateEditC1ERK5QDateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDateEditC2EP7QWidget</primary></indexterm>_ZN9QDateEditC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDateEditC2ERK5QDateP7QWidget</primary></indexterm>_ZN9QDateEditC2ERK5QDateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDateEditD0Ev</primary></indexterm>_ZN9QDateEditD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDateEditD1Ev</primary></indexterm>_ZN9QDateEditD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModel10setSortingE6QFlagsIN4QDir8SortFlagEE</primary></indexterm>_ZN9QDirModel10setSortingE6QFlagsIN4QDir8SortFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModel11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QDirModel11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModel11qt_metacastEPKc</primary></indexterm>_ZN9QDirModel11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModel11setReadOnlyEb</primary></indexterm>_ZN9QDirModel11setReadOnlyEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex</primary></indexterm>_ZN9QDirModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModel14setNameFiltersERK11QStringList</primary></indexterm>_ZN9QDirModel14setNameFiltersERK11QStringList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModel15setIconProviderEP17QFileIconProvider</primary></indexterm>_ZN9QDirModel15setIconProviderEP17QFileIconProvider <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModel17setLazyChildCountEb</primary></indexterm>_ZN9QDirModel17setLazyChildCountEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModel18setResolveSymlinksEb</primary></indexterm>_ZN9QDirModel18setResolveSymlinksEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModel4sortEiN2Qt9SortOrderE</primary></indexterm>_ZN9QDirModel4sortEiN2Qt9SortOrderE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModel5mkdirERK11QModelIndexRK7QString</primary></indexterm>_ZN9QDirModel5mkdirERK11QModelIndexRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModel5rmdirERK11QModelIndex</primary></indexterm>_ZN9QDirModel5rmdirERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModel6removeERK11QModelIndex</primary></indexterm>_ZN9QDirModel6removeERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModel7refreshERK11QModelIndex</primary></indexterm>_ZN9QDirModel7refreshERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModel7setDataERK11QModelIndexRK8QVarianti</primary></indexterm>_ZN9QDirModel7setDataERK11QModelIndexRK8QVarianti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModel9setFilterE6QFlagsIN4QDir6FilterEE</primary></indexterm>_ZN9QDirModel9setFilterE6QFlagsIN4QDir6FilterEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModelC1EP7QObject</primary></indexterm>_ZN9QDirModelC1EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModelC1ER16QDirModelPrivateP7QObject</primary></indexterm>_ZN9QDirModelC1ER16QDirModelPrivateP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModelC1ERK11QStringList6QFlagsIN4QDir6FilterEES3_INS4_8SortFlagEEP7QObject</primary></indexterm>_ZN9QDirModelC1ERK11QStringList6QFlagsIN4QDir6FilterEES3_INS4_8SortFlagEEP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModelC2EP7QObject</primary></indexterm>_ZN9QDirModelC2EP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModelC2ER16QDirModelPrivateP7QObject</primary></indexterm>_ZN9QDirModelC2ER16QDirModelPrivateP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModelC2ERK11QStringList6QFlagsIN4QDir6FilterEES3_INS4_8SortFlagEEP7QObject</primary></indexterm>_ZN9QDirModelC2ERK11QStringList6QFlagsIN4QDir6FilterEES3_INS4_8SortFlagEEP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModelD0Ev</primary></indexterm>_ZN9QDirModelD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDirModelD1Ev</primary></indexterm>_ZN9QDirModelD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModelD2Ev</primary></indexterm>_ZN9QDirModelD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QFontInfoC1ERK5QFont</primary></indexterm>_ZN9QFontInfoC1ERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QFontInfoC1ERKS_</primary></indexterm>_ZN9QFontInfoC1ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QFontInfoC2ERK5QFont</primary></indexterm>_ZN9QFontInfoC2ERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QFontInfoC2ERKS_</primary></indexterm>_ZN9QFontInfoC2ERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QFontInfoD1Ev</primary></indexterm>_ZN9QFontInfoD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QFontInfoD2Ev</primary></indexterm>_ZN9QFontInfoD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QFontInfoaSERKS_</primary></indexterm>_ZN9QFontInfoaSERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGradient10setColorAtEdRK6QColor</primary></indexterm>_ZN9QGradient10setColorAtEdRK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE</primary></indexterm>_ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGradientC1Ev</primary></indexterm>_ZN9QGradientC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGradientC2Ev</primary></indexterm>_ZN9QGradientC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGradienteqERKS_</primary></indexterm>_ZN9QGradienteqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBox10childEventEP11QChildEvent</primary></indexterm>_ZN9QGroupBox10childEventEP11QChildEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBox10paintEventEP11QPaintEvent</primary></indexterm>_ZN9QGroupBox10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBox10setCheckedEb</primary></indexterm>_ZN9QGroupBox10setCheckedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBox11changeEventEP6QEvent</primary></indexterm>_ZN9QGroupBox11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBox11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QGroupBox11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBox11qt_metacastEPKc</primary></indexterm>_ZN9QGroupBox11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBox11resizeEventEP12QResizeEvent</primary></indexterm>_ZN9QGroupBox11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBox12focusInEventEP11QFocusEvent</primary></indexterm>_ZN9QGroupBox12focusInEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBox12setAlignmentEi</primary></indexterm>_ZN9QGroupBox12setAlignmentEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBox12setCheckableEb</primary></indexterm>_ZN9QGroupBox12setCheckableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBox14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN9QGroupBox14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBox15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN9QGroupBox15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBox17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN9QGroupBox17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBox5eventEP6QEvent</primary></indexterm>_ZN9QGroupBox5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBox7setFlatEb</primary></indexterm>_ZN9QGroupBox7setFlatEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBox7toggledEb</primary></indexterm>_ZN9QGroupBox7toggledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBox8setTitleERK7QString</primary></indexterm>_ZN9QGroupBox8setTitleERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBoxC1EP7QWidget</primary></indexterm>_ZN9QGroupBoxC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBoxC1EP7QWidgetPKc</primary></indexterm>_ZN9QGroupBoxC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBoxC1ERK7QStringP7QWidget</primary></indexterm>_ZN9QGroupBoxC1ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBoxC1ERK7QStringP7QWidgetPKc</primary></indexterm>_ZN9QGroupBoxC1ERK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBoxC2EP7QWidget</primary></indexterm>_ZN9QGroupBoxC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBoxC2EP7QWidgetPKc</primary></indexterm>_ZN9QGroupBoxC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBoxC2ERK7QStringP7QWidget</primary></indexterm>_ZN9QGroupBoxC2ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBoxC2ERK7QStringP7QWidgetPKc</primary></indexterm>_ZN9QGroupBoxC2ERK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBoxD0Ev</primary></indexterm>_ZN9QGroupBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBoxD1Ev</primary></indexterm>_ZN9QGroupBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QGroupBoxD2Ev</primary></indexterm>_ZN9QGroupBoxD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt</primary></indexterm>_ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt</primary></indexterm>_ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QKeyEventD0Ev</primary></indexterm>_ZN9QKeyEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QKeyEventD1Ev</primary></indexterm>_ZN9QKeyEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QKeyEventD2Ev</primary></indexterm>_ZN9QKeyEventD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit10paintEventEP11QPaintEvent</primary></indexterm>_ZN9QLineEdit10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit10textEditedERK7QString</primary></indexterm>_ZN9QLineEdit10textEditedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit11changeEventEP6QEvent</primary></indexterm>_ZN9QLineEdit11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QLineEdit11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit11qt_metacastEPKc</primary></indexterm>_ZN9QLineEdit11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit11setEchoModeENS_8EchoModeE</primary></indexterm>_ZN9QLineEdit11setEchoModeENS_8EchoModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit11setModifiedEb</primary></indexterm>_ZN9QLineEdit11setModifiedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit11setReadOnlyEb</primary></indexterm>_ZN9QLineEdit11setReadOnlyEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit11textChangedERK7QString</primary></indexterm>_ZN9QLineEdit11textChangedERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit12focusInEventEP11QFocusEvent</primary></indexterm>_ZN9QLineEdit12focusInEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit12getSelectionEPiS0_</primary></indexterm>_ZN9QLineEdit12getSelectionEPiS0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN9QLineEdit12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit12setInputMaskERK7QString</primary></indexterm>_ZN9QLineEdit12setInputMaskERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit12setMaxLengthEi</primary></indexterm>_ZN9QLineEdit12setMaxLengthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit12setSelectionEii</primary></indexterm>_ZN9QLineEdit12setSelectionEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit12setValidatorEPK10QValidator</primary></indexterm>_ZN9QLineEdit12setValidatorEPK10QValidator <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit13cursorForwardEbi</primary></indexterm>_ZN9QLineEdit13cursorForwardEbi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit13dragMoveEventEP14QDragMoveEvent</primary></indexterm>_ZN9QLineEdit13dragMoveEventEP14QDragMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit13focusOutEventEP11QFocusEvent</primary></indexterm>_ZN9QLineEdit13focusOutEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN9QLineEdit13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit13returnPressedEv</primary></indexterm>_ZN9QLineEdit13returnPressedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit14cursorBackwardEbi</primary></indexterm>_ZN9QLineEdit14cursorBackwardEbi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit14dragEnterEventEP15QDragEnterEvent</primary></indexterm>_ZN9QLineEdit14dragEnterEventEP15QDragEnterEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit14dragLeaveEventEP15QDragLeaveEvent</primary></indexterm>_ZN9QLineEdit14dragLeaveEventEP15QDragLeaveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN9QLineEdit14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit14setDragEnabledEb</primary></indexterm>_ZN9QLineEdit14setDragEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit14validateAndSetERK7QStringiii</primary></indexterm>_ZN9QLineEdit14validateAndSetERK7QStringiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit15editingFinishedEv</primary></indexterm>_ZN9QLineEdit15editingFinishedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN9QLineEdit15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit16contextMenuEventEP17QContextMenuEvent</primary></indexterm>_ZN9QLineEdit16contextMenuEventEP17QContextMenuEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit16cursorPositionAtERK6QPoint</primary></indexterm>_ZN9QLineEdit16cursorPositionAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit16inputMethodEventEP17QInputMethodEvent</primary></indexterm>_ZN9QLineEdit16inputMethodEventEP17QInputMethodEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit16selectionChangedEv</primary></indexterm>_ZN9QLineEdit16selectionChangedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit17cursorWordForwardEb</primary></indexterm>_ZN9QLineEdit17cursorWordForwardEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN9QLineEdit17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit17setCursorPositionEi</primary></indexterm>_ZN9QLineEdit17setCursorPositionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit18cursorWordBackwardEb</primary></indexterm>_ZN9QLineEdit18cursorWordBackwardEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit21cursorPositionChangedEii</primary></indexterm>_ZN9QLineEdit21cursorPositionChangedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit21mouseDoubleClickEventEP11QMouseEvent</primary></indexterm>_ZN9QLineEdit21mouseDoubleClickEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit25createStandardContextMenuEv</primary></indexterm>_ZN9QLineEdit25createStandardContextMenuEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit3cutEv</primary></indexterm>_ZN9QLineEdit3cutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit3delEv</primary></indexterm>_ZN9QLineEdit3delEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit3endEb</primary></indexterm>_ZN9QLineEdit3endEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit4homeEb</primary></indexterm>_ZN9QLineEdit4homeEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit4redoEv</primary></indexterm>_ZN9QLineEdit4redoEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit4undoEv</primary></indexterm>_ZN9QLineEdit4undoEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit5clearEv</primary></indexterm>_ZN9QLineEdit5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit5eventEP6QEvent</primary></indexterm>_ZN9QLineEdit5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit5pasteEv</primary></indexterm>_ZN9QLineEdit5pasteEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit6insertERK7QString</primary></indexterm>_ZN9QLineEdit6insertERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit7setTextERK7QString</primary></indexterm>_ZN9QLineEdit7setTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit8deselectEv</primary></indexterm>_ZN9QLineEdit8deselectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit8setFrameEb</primary></indexterm>_ZN9QLineEdit8setFrameEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit9backspaceEv</primary></indexterm>_ZN9QLineEdit9backspaceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit9dropEventEP10QDropEvent</primary></indexterm>_ZN9QLineEdit9dropEventEP10QDropEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit9lostFocusEv</primary></indexterm>_ZN9QLineEdit9lostFocusEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit9selectAllEv</primary></indexterm>_ZN9QLineEdit9selectAllEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEdit9setEditedEb</primary></indexterm>_ZN9QLineEdit9setEditedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEditC1EP7QWidget</primary></indexterm>_ZN9QLineEditC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEditC1EP7QWidgetPKc</primary></indexterm>_ZN9QLineEditC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEditC1ERK7QStringP7QWidget</primary></indexterm>_ZN9QLineEditC1ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEditC1ERK7QStringP7QWidgetPKc</primary></indexterm>_ZN9QLineEditC1ERK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEditC1ERK7QStringS2_P7QWidgetPKc</primary></indexterm>_ZN9QLineEditC1ERK7QStringS2_P7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEditC2EP7QWidget</primary></indexterm>_ZN9QLineEditC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEditC2EP7QWidgetPKc</primary></indexterm>_ZN9QLineEditC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEditC2ERK7QStringP7QWidget</primary></indexterm>_ZN9QLineEditC2ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEditC2ERK7QStringP7QWidgetPKc</primary></indexterm>_ZN9QLineEditC2ERK7QStringP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEditC2ERK7QStringS2_P7QWidgetPKc</primary></indexterm>_ZN9QLineEditC2ERK7QStringS2_P7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEditD0Ev</primary></indexterm>_ZN9QLineEditD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QLineEditD1Ev</primary></indexterm>_ZN9QLineEditD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEditD2Ev</primary></indexterm>_ZN9QLineEditD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView10moveCursorEN17QAbstractItemView12CursorActionE6QFlagsIN2Qt16KeyboardModifierEE</primary></indexterm>_ZN9QListView10moveCursorEN17QAbstractItemView12CursorActionE6QFlagsIN2Qt16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView10paintEventEP11QPaintEvent</primary></indexterm>_ZN9QListView10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView10setSpacingEi</primary></indexterm>_ZN9QListView10setSpacingEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView10timerEventEP11QTimerEvent</primary></indexterm>_ZN9QListView10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView11dataChangedERK11QModelIndexS2_</primary></indexterm>_ZN9QListView11dataChangedERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QListView11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView11qt_metacastEPKc</primary></indexterm>_ZN9QListView11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView11resizeEventEP12QResizeEvent</primary></indexterm>_ZN9QListView11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView11setGridSizeERK5QSize</primary></indexterm>_ZN9QListView11setGridSizeERK5QSize <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView11setMovementENS_8MovementE</primary></indexterm>_ZN9QListView11setMovementENS_8MovementE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView11setViewModeENS_8ViewModeE</primary></indexterm>_ZN9QListView11setViewModeENS_8ViewModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView11setWrappingEb</primary></indexterm>_ZN9QListView11setWrappingEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView12internalDragE6QFlagsIN2Qt10DropActionEE</primary></indexterm>_ZN9QListView12internalDragE6QFlagsIN2Qt10DropActionEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView12internalDropEP10QDropEvent</primary></indexterm>_ZN9QListView12internalDropEP10QDropEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView12rowsInsertedERK11QModelIndexii</primary></indexterm>_ZN9QListView12rowsInsertedERK11QModelIndexii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView12setRootIndexERK11QModelIndex</primary></indexterm>_ZN9QListView12setRootIndexERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView12setRowHiddenEib</primary></indexterm>_ZN9QListView12setRowHiddenEib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView12setSelectionERK5QRect6QFlagsIN19QItemSelectionModel13SelectionFlagEE</primary></indexterm>_ZN9QListView12setSelectionERK5QRect6QFlagsIN19QItemSelectionModel13SelectionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView13doItemsLayoutEv</primary></indexterm>_ZN9QListView13doItemsLayoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView13dragMoveEventEP14QDragMoveEvent</primary></indexterm>_ZN9QListView13dragMoveEventEP14QDragMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView13setLayoutModeENS_10LayoutModeE</primary></indexterm>_ZN9QListView13setLayoutModeENS_10LayoutModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView13setResizeModeENS_10ResizeModeE</primary></indexterm>_ZN9QListView13setResizeModeENS_10ResizeModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView14dragLeaveEventEP15QDragLeaveEvent</primary></indexterm>_ZN9QListView14dragLeaveEventEP15QDragLeaveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN9QListView14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView14resizeContentsEii</primary></indexterm>_ZN9QListView14resizeContentsEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView14setModelColumnEi</primary></indexterm>_ZN9QListView14setModelColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView16scrollContentsByEii</primary></indexterm>_ZN9QListView16scrollContentsByEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView16updateGeometriesEv</primary></indexterm>_ZN9QListView16updateGeometriesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN9QListView17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView18clearPropertyFlagsEv</primary></indexterm>_ZN9QListView18clearPropertyFlagsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView19setPositionForIndexERK6QPointRK11QModelIndex</primary></indexterm>_ZN9QListView19setPositionForIndexERK6QPointRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView19setUniformItemSizesEb</primary></indexterm>_ZN9QListView19setUniformItemSizesEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView20rowsAboutToBeRemovedERK11QModelIndexii</primary></indexterm>_ZN9QListView20rowsAboutToBeRemovedERK11QModelIndexii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView5eventEP6QEvent</primary></indexterm>_ZN9QListView5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView5resetEv</primary></indexterm>_ZN9QListView5resetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView7setFlowENS_4FlowE</primary></indexterm>_ZN9QListView7setFlowENS_4FlowE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView8scrollToERK11QModelIndexN17QAbstractItemView10ScrollHintE</primary></indexterm>_ZN9QListView8scrollToERK11QModelIndexN17QAbstractItemView10ScrollHintE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListView9dropEventEP10QDropEvent</primary></indexterm>_ZN9QListView9dropEventEP10QDropEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView9startDragE6QFlagsIN2Qt10DropActionEE</primary></indexterm>_ZN9QListView9startDragE6QFlagsIN2Qt10DropActionEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListViewC1EP7QWidget</primary></indexterm>_ZN9QListViewC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListViewC1ER16QListViewPrivateP7QWidget</primary></indexterm>_ZN9QListViewC1ER16QListViewPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListViewC2EP7QWidget</primary></indexterm>_ZN9QListViewC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListViewC2ER16QListViewPrivateP7QWidget</primary></indexterm>_ZN9QListViewC2ER16QListViewPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListViewD0Ev</primary></indexterm>_ZN9QListViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListViewD1Ev</primary></indexterm>_ZN9QListViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QListViewD2Ev</primary></indexterm>_ZN9QListViewD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QMenuItemC1Ev</primary></indexterm>_ZN9QMenuItemC1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QMenuItemC2Ev</primary></indexterm>_ZN9QMenuItemC2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QMenuItemD0Ev</primary></indexterm>_ZN9QMenuItemD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QMenuItemD1Ev</primary></indexterm>_ZN9QMenuItemD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QPolygonF9translateERK7QPointF</primary></indexterm>_ZN9QPolygonF9translateERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QPolygonFC1ERK6QRectF</primary></indexterm>_ZN9QPolygonFC1ERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QPolygonFC1ERK8QPolygon</primary></indexterm>_ZN9QPolygonFC1ERK8QPolygon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QPolygonFC2ERK6QRectF</primary></indexterm>_ZN9QPolygonFC2ERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QPolygonFC2ERK8QPolygon</primary></indexterm>_ZN9QPolygonFC2ERK8QPolygon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QShortcut10setContextEN2Qt15ShortcutContextE</primary></indexterm>_ZN9QShortcut10setContextEN2Qt15ShortcutContextE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QShortcut10setEnabledEb</primary></indexterm>_ZN9QShortcut10setEnabledEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QShortcut11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QShortcut11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QShortcut11qt_metacastEPKc</primary></indexterm>_ZN9QShortcut11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QShortcut12setWhatsThisERK7QString</primary></indexterm>_ZN9QShortcut12setWhatsThisERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QShortcut20activatedAmbiguouslyEv</primary></indexterm>_ZN9QShortcut20activatedAmbiguouslyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QShortcut5eventEP6QEvent</primary></indexterm>_ZN9QShortcut5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QShortcut6setKeyERK12QKeySequence</primary></indexterm>_ZN9QShortcut6setKeyERK12QKeySequence <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QShortcut7contextEv</primary></indexterm>_ZN9QShortcut7contextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QShortcut9activatedEv</primary></indexterm>_ZN9QShortcut9activatedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QShortcutC1EP7QWidget</primary></indexterm>_ZN9QShortcutC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QShortcutC1ERK12QKeySequenceP7QWidgetPKcS6_N2Qt15ShortcutContextE</primary></indexterm>_ZN9QShortcutC1ERK12QKeySequenceP7QWidgetPKcS6_N2Qt15ShortcutContextE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QShortcutC2EP7QWidget</primary></indexterm>_ZN9QShortcutC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QShortcutC2ERK12QKeySequenceP7QWidgetPKcS6_N2Qt15ShortcutContextE</primary></indexterm>_ZN9QShortcutC2ERK12QKeySequenceP7QWidgetPKcS6_N2Qt15ShortcutContextE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QShortcutD0Ev</primary></indexterm>_ZN9QShortcutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QShortcutD1Ev</primary></indexterm>_ZN9QShortcutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QShortcutD2Ev</primary></indexterm>_ZN9QShortcutD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSizeGrip10paintEventEP11QPaintEvent</primary></indexterm>_ZN9QSizeGrip10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSizeGrip10setVisibleEb</primary></indexterm>_ZN9QSizeGrip10setVisibleEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSizeGrip11eventFilterEP7QObjectP6QEvent</primary></indexterm>_ZN9QSizeGrip11eventFilterEP7QObjectP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSizeGrip11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QSizeGrip11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSizeGrip11qt_metacastEPKc</primary></indexterm>_ZN9QSizeGrip11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSizeGrip14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN9QSizeGrip14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSizeGrip15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN9QSizeGrip15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSizeGrip5eventEP6QEvent</primary></indexterm>_ZN9QSizeGrip5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSizeGripC1EP7QWidget</primary></indexterm>_ZN9QSizeGripC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSizeGripC1EP7QWidgetPKc</primary></indexterm>_ZN9QSizeGripC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSizeGripC2EP7QWidget</primary></indexterm>_ZN9QSizeGripC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSizeGripC2EP7QWidgetPKc</primary></indexterm>_ZN9QSizeGripC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSizeGripD0Ev</primary></indexterm>_ZN9QSizeGripD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSizeGripD1Ev</primary></indexterm>_ZN9QSizeGripD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSizeGripD2Ev</primary></indexterm>_ZN9QSizeGripD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter10childEventEP11QChildEvent</primary></indexterm>_ZN9QSplitter10childEventEP11QChildEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitter11changeEventEP6QEvent</primary></indexterm>_ZN9QSplitter11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QSplitter11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitter11qt_metacastEPKc</primary></indexterm>_ZN9QSplitter11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter11resizeEventEP12QResizeEvent</primary></indexterm>_ZN9QSplitter11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitter12createHandleEv</primary></indexterm>_ZN9QSplitter12createHandleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter12insertWidgetEiP7QWidget</primary></indexterm>_ZN9QSplitter12insertWidgetEiP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitter12moveSplitterEii</primary></indexterm>_ZN9QSplitter12moveSplitterEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter12restoreStateERK10QByteArray</primary></indexterm>_ZN9QSplitter12restoreStateERK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitter13setResizeModeEP7QWidgetNS_10ResizeModeE</primary></indexterm>_ZN9QSplitter13setResizeModeEP7QWidgetNS_10ResizeModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter13setRubberBandEi</primary></indexterm>_ZN9QSplitter13setRubberBandEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitter13splitterMovedEii</primary></indexterm>_ZN9QSplitter13splitterMovedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter14setCollapsibleEib</primary></indexterm>_ZN9QSplitter14setCollapsibleEib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitter14setHandleWidthEi</primary></indexterm>_ZN9QSplitter14setHandleWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter14setOrientationEN2Qt11OrientationE</primary></indexterm>_ZN9QSplitter14setOrientationEN2Qt11OrientationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitter15setOpaqueResizeEb</primary></indexterm>_ZN9QSplitter15setOpaqueResizeEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter16setStretchFactorEii</primary></indexterm>_ZN9QSplitter16setStretchFactorEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitter20closestLegalPositionEii</primary></indexterm>_ZN9QSplitter20closestLegalPositionEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter22setChildrenCollapsibleEb</primary></indexterm>_ZN9QSplitter22setChildrenCollapsibleEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitter5eventEP6QEvent</primary></indexterm>_ZN9QSplitter5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter7refreshEv</primary></indexterm>_ZN9QSplitter7refreshEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitter8setSizesERK5QListIiE</primary></indexterm>_ZN9QSplitter8setSizesERK5QListIiE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter9addWidgetEP7QWidget</primary></indexterm>_ZN9QSplitter9addWidgetEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitterC1EN2Qt11OrientationEP7QWidget</primary></indexterm>_ZN9QSplitterC1EN2Qt11OrientationEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitterC1EN2Qt11OrientationEP7QWidgetPKc</primary></indexterm>_ZN9QSplitterC1EN2Qt11OrientationEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitterC1EP7QWidget</primary></indexterm>_ZN9QSplitterC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitterC1EP7QWidgetPKc</primary></indexterm>_ZN9QSplitterC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitterC2EN2Qt11OrientationEP7QWidget</primary></indexterm>_ZN9QSplitterC2EN2Qt11OrientationEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitterC2EN2Qt11OrientationEP7QWidgetPKc</primary></indexterm>_ZN9QSplitterC2EN2Qt11OrientationEP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitterC2EP7QWidget</primary></indexterm>_ZN9QSplitterC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitterC2EP7QWidgetPKc</primary></indexterm>_ZN9QSplitterC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitterD0Ev</primary></indexterm>_ZN9QSplitterD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitterD1Ev</primary></indexterm>_ZN9QSplitterD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSplitterD2Ev</primary></indexterm>_ZN9QSplitterD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit10insertHtmlERK7QString</primary></indexterm>_ZN9QTextEdit10insertHtmlERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit10moveCursorENS_12CursorActionEN11QTextCursor8MoveModeE</primary></indexterm>_ZN9QTextEdit10moveCursorENS_12CursorActionEN11QTextCursor8MoveModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit10paintEventEP11QPaintEvent</primary></indexterm>_ZN9QTextEdit10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit10timerEventEP11QTimerEvent</primary></indexterm>_ZN9QTextEdit10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit10wheelEventEP11QWheelEvent</primary></indexterm>_ZN9QTextEdit10wheelEventEP11QWheelEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit11changeEventEP6QEvent</primary></indexterm>_ZN9QTextEdit11changeEventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QTextEdit11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit11qt_metacastEPKc</primary></indexterm>_ZN9QTextEdit11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit11resizeEventEP12QResizeEvent</primary></indexterm>_ZN9QTextEdit11resizeEventEP12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit11setDocumentEP13QTextDocument</primary></indexterm>_ZN9QTextEdit11setDocumentEP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit11setReadOnlyEb</primary></indexterm>_ZN9QTextEdit11setReadOnlyEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit11textChangedEv</primary></indexterm>_ZN9QTextEdit11textChangedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit12focusInEventEP11QFocusEvent</primary></indexterm>_ZN9QTextEdit12focusInEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit12loadResourceEiRK4QUrl</primary></indexterm>_ZN9QTextEdit12loadResourceEiRK4QUrl <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE</primary></indexterm>_ZN9QTextEdit12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit12setPlainTextERK7QString</primary></indexterm>_ZN9QTextEdit12setPlainTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit12setTextColorERK6QColor</primary></indexterm>_ZN9QTextEdit12setTextColorERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit13copyAvailableEb</primary></indexterm>_ZN9QTextEdit13copyAvailableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit13dragMoveEventEP14QDragMoveEvent</primary></indexterm>_ZN9QTextEdit13dragMoveEventEP14QDragMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit13focusOutEventEP11QFocusEvent</primary></indexterm>_ZN9QTextEdit13focusOutEventEP11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit13keyPressEventEP9QKeyEvent</primary></indexterm>_ZN9QTextEdit13keyPressEventEP9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit13redoAvailableEb</primary></indexterm>_ZN9QTextEdit13redoAvailableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit13setFontFamilyERK7QString</primary></indexterm>_ZN9QTextEdit13setFontFamilyERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit13setFontItalicEb</primary></indexterm>_ZN9QTextEdit13setFontItalicEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit13setFontWeightEi</primary></indexterm>_ZN9QTextEdit13setFontWeightEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit13setTextCursorERK11QTextCursor</primary></indexterm>_ZN9QTextEdit13setTextCursorERK11QTextCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit13setTextFormatEN2Qt10TextFormatE</primary></indexterm>_ZN9QTextEdit13setTextFormatEN2Qt10TextFormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit13undoAvailableEb</primary></indexterm>_ZN9QTextEdit13undoAvailableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit14dragEnterEventEP15QDragEnterEvent</primary></indexterm>_ZN9QTextEdit14dragEnterEventEP15QDragEnterEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit14dragLeaveEventEP15QDragLeaveEvent</primary></indexterm>_ZN9QTextEdit14dragLeaveEventEP15QDragLeaveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit14mouseMoveEventEP11QMouseEvent</primary></indexterm>_ZN9QTextEdit14mouseMoveEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit14scrollToAnchorERK7QString</primary></indexterm>_ZN9QTextEdit14scrollToAnchorERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit14setCurrentFontERK5QFont</primary></indexterm>_ZN9QTextEdit14setCurrentFontERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit15insertPlainTextERK7QString</primary></indexterm>_ZN9QTextEdit15insertPlainTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN9QTextEdit15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit15setLineWrapModeENS_12LineWrapModeE</primary></indexterm>_ZN9QTextEdit15setLineWrapModeENS_12LineWrapModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit15setTabStopWidthEi</primary></indexterm>_ZN9QTextEdit15setTabStopWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit15setWordWrapModeEN11QTextOption8WrapModeE</primary></indexterm>_ZN9QTextEdit15setWordWrapModeEN11QTextOption8WrapModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit16contextMenuEventEP17QContextMenuEvent</primary></indexterm>_ZN9QTextEdit16contextMenuEventEP17QContextMenuEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit16doKeyboardActionENS_14KeyboardActionE</primary></indexterm>_ZN9QTextEdit16doKeyboardActionENS_14KeyboardActionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit16inputMethodEventEP17QInputMethodEvent</primary></indexterm>_ZN9QTextEdit16inputMethodEventEP17QInputMethodEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit16scrollContentsByEii</primary></indexterm>_ZN9QTextEdit16scrollContentsByEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit16selectionChangedEv</primary></indexterm>_ZN9QTextEdit16selectionChangedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit16setFontPointSizeEd</primary></indexterm>_ZN9QTextEdit16setFontPointSizeEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit16setFontUnderlineEb</primary></indexterm>_ZN9QTextEdit16setFontUnderlineEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit16setOverwriteModeEb</primary></indexterm>_ZN9QTextEdit16setOverwriteModeEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN9QTextEdit17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit17setAcceptRichTextEb</primary></indexterm>_ZN9QTextEdit17setAcceptRichTextEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit17setAutoFormattingE6QFlagsINS_18AutoFormattingFlagEE</primary></indexterm>_ZN9QTextEdit17setAutoFormattingE6QFlagsINS_18AutoFormattingFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit18currentFontChangedERK5QFont</primary></indexterm>_ZN9QTextEdit18currentFontChangedERK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit18focusNextPrevChildEb</primary></indexterm>_ZN9QTextEdit18focusNextPrevChildEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit18insertFromMimeDataEPK9QMimeData</primary></indexterm>_ZN9QTextEdit18insertFromMimeDataEPK9QMimeData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit18setTabChangesFocusEb</primary></indexterm>_ZN9QTextEdit18setTabChangesFocusEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit19currentColorChangedERK6QColor</primary></indexterm>_ZN9QTextEdit19currentColorChangedERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit19ensureCursorVisibleEv</primary></indexterm>_ZN9QTextEdit19ensureCursorVisibleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit20setCurrentCharFormatERK15QTextCharFormat</primary></indexterm>_ZN9QTextEdit20setCurrentCharFormatERK15QTextCharFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit21cursorPositionChangedEv</primary></indexterm>_ZN9QTextEdit21cursorPositionChangedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit21mouseDoubleClickEventEP11QMouseEvent</primary></indexterm>_ZN9QTextEdit21mouseDoubleClickEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit22mergeCurrentCharFormatERK15QTextCharFormat</primary></indexterm>_ZN9QTextEdit22mergeCurrentCharFormatERK15QTextCharFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit24currentCharFormatChangedERK15QTextCharFormat</primary></indexterm>_ZN9QTextEdit24currentCharFormatChangedERK15QTextCharFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit24setLineWrapColumnOrWidthEi</primary></indexterm>_ZN9QTextEdit24setLineWrapColumnOrWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit25createStandardContextMenuEv</primary></indexterm>_ZN9QTextEdit25createStandardContextMenuEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit3cutEv</primary></indexterm>_ZN9QTextEdit3cutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit4copyEv</primary></indexterm>_ZN9QTextEdit4copyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit4findERK7QString6QFlagsIN13QTextDocument8FindFlagEE</primary></indexterm>_ZN9QTextEdit4findERK7QString6QFlagsIN13QTextDocument8FindFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit5clearEv</primary></indexterm>_ZN9QTextEdit5clearEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit5eventEP6QEvent</primary></indexterm>_ZN9QTextEdit5eventEP6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit5pasteEv</primary></indexterm>_ZN9QTextEdit5pasteEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit6appendERK7QString</primary></indexterm>_ZN9QTextEdit6appendERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit6zoomInEi</primary></indexterm>_ZN9QTextEdit6zoomInEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit7setHtmlERK7QString</primary></indexterm>_ZN9QTextEdit7setHtmlERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit7setTextERK7QString</primary></indexterm>_ZN9QTextEdit7setTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit7zoomOutEi</primary></indexterm>_ZN9QTextEdit7zoomOutEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit9dropEventEP10QDropEvent</primary></indexterm>_ZN9QTextEdit9dropEventEP10QDropEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEdit9selectAllEv</primary></indexterm>_ZN9QTextEdit9selectAllEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit9showEventEP10QShowEvent</primary></indexterm>_ZN9QTextEdit9showEventEP10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEditC1EP7QWidget</primary></indexterm>_ZN9QTextEditC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEditC1EP7QWidgetPKc</primary></indexterm>_ZN9QTextEditC1EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEditC1ER16QTextEditPrivateP7QWidget</primary></indexterm>_ZN9QTextEditC1ER16QTextEditPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEditC1ERK7QStringP7QWidget</primary></indexterm>_ZN9QTextEditC1ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEditC2EP7QWidget</primary></indexterm>_ZN9QTextEditC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEditC2EP7QWidgetPKc</primary></indexterm>_ZN9QTextEditC2EP7QWidgetPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEditC2ER16QTextEditPrivateP7QWidget</primary></indexterm>_ZN9QTextEditC2ER16QTextEditPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEditC2ERK7QStringP7QWidget</primary></indexterm>_ZN9QTextEditC2ERK7QStringP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEditD0Ev</primary></indexterm>_ZN9QTextEditD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEditD1Ev</primary></indexterm>_ZN9QTextEditD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextEditD2Ev</primary></indexterm>_ZN9QTextEditD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextLine11setPositionERK7QPointF</primary></indexterm>_ZN9QTextLine11setPositionERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextLine12setLineWidthEd</primary></indexterm>_ZN9QTextLine12setLineWidthEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextLine13setNumColumnsEi</primary></indexterm>_ZN9QTextLine13setNumColumnsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextList10removeItemEi</primary></indexterm>_ZN9QTextList10removeItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextList11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QTextList11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextList11qt_metacastEPKc</primary></indexterm>_ZN9QTextList11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextList3addERK10QTextBlock</primary></indexterm>_ZN9QTextList3addERK10QTextBlock <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextList6removeERK10QTextBlock</primary></indexterm>_ZN9QTextList6removeERK10QTextBlock <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextListC1EP13QTextDocument</primary></indexterm>_ZN9QTextListC1EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextListC2EP13QTextDocument</primary></indexterm>_ZN9QTextListC2EP13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextListD0Ev</primary></indexterm>_ZN9QTextListD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextListD1Ev</primary></indexterm>_ZN9QTextListD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextListD2Ev</primary></indexterm>_ZN9QTextListD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTimeEdit11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QTimeEdit11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTimeEdit11qt_metacastEPKc</primary></indexterm>_ZN9QTimeEdit11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTimeEditC1EP7QWidget</primary></indexterm>_ZN9QTimeEditC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTimeEditC1ERK5QTimeP7QWidget</primary></indexterm>_ZN9QTimeEditC1ERK5QTimeP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTimeEditC2EP7QWidget</primary></indexterm>_ZN9QTimeEditC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTimeEditC2ERK5QTimeP7QWidget</primary></indexterm>_ZN9QTimeEditC2ERK5QTimeP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTimeEditD0Ev</primary></indexterm>_ZN9QTimeEditD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTimeEditD1Ev</primary></indexterm>_ZN9QTimeEditD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView10hideColumnEi</primary></indexterm>_ZN9QTreeView10hideColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView10moveCursorEN17QAbstractItemView12CursorActionE6QFlagsIN2Qt16KeyboardModifierEE</primary></indexterm>_ZN9QTreeView10moveCursorEN17QAbstractItemView12CursorActionE6QFlagsIN2Qt16KeyboardModifierEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView10paintEventEP11QPaintEvent</primary></indexterm>_ZN9QTreeView10paintEventEP11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView10showColumnEi</primary></indexterm>_ZN9QTreeView10showColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView10timerEventEP11QTimerEvent</primary></indexterm>_ZN9QTreeView10timerEventEP11QTimerEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView11columnMovedEv</primary></indexterm>_ZN9QTreeView11columnMovedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView11dataChangedERK11QModelIndexS2_</primary></indexterm>_ZN9QTreeView11dataChangedERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView11qt_metacallEN11QMetaObject4CallEiPPv</primary></indexterm>_ZN9QTreeView11qt_metacallEN11QMetaObject4CallEiPPv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView11qt_metacastEPKc</primary></indexterm>_ZN9QTreeView11qt_metacastEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView11rowsRemovedERK11QModelIndexii</primary></indexterm>_ZN9QTreeView11rowsRemovedERK11QModelIndexii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView11setExpandedERK11QModelIndexb</primary></indexterm>_ZN9QTreeView11setExpandedERK11QModelIndexb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView12rowsInsertedERK11QModelIndexii</primary></indexterm>_ZN9QTreeView12rowsInsertedERK11QModelIndexii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView12setRootIndexERK11QModelIndex</primary></indexterm>_ZN9QTreeView12setRootIndexERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView12setRowHiddenEiRK11QModelIndexb</primary></indexterm>_ZN9QTreeView12setRowHiddenEiRK11QModelIndexb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView12setSelectionERK5QRect6QFlagsIN19QItemSelectionModel13SelectionFlagEE</primary></indexterm>_ZN9QTreeView12setSelectionERK5QRect6QFlagsIN19QItemSelectionModel13SelectionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView12sortByColumnEi</primary></indexterm>_ZN9QTreeView12sortByColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView13columnResizedEiii</primary></indexterm>_ZN9QTreeView13columnResizedEiii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView13doItemsLayoutEv</primary></indexterm>_ZN9QTreeView13doItemsLayoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView14keyboardSearchERK7QString</primary></indexterm>_ZN9QTreeView14keyboardSearchERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView14setIndentationEi</primary></indexterm>_ZN9QTreeView14setIndentationEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView15mousePressEventEP11QMouseEvent</primary></indexterm>_ZN9QTreeView15mousePressEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView15setColumnHiddenEib</primary></indexterm>_ZN9QTreeView15setColumnHiddenEib <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView16scrollContentsByEii</primary></indexterm>_ZN9QTreeView16scrollContentsByEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView16updateGeometriesEv</primary></indexterm>_ZN9QTreeView16updateGeometriesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView17mouseReleaseEventEP11QMouseEvent</primary></indexterm>_ZN9QTreeView17mouseReleaseEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView17setSelectionModelEP19QItemSelectionModel</primary></indexterm>_ZN9QTreeView17setSelectionModelEP19QItemSelectionModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView18columnCountChangedEii</primary></indexterm>_ZN9QTreeView18columnCountChangedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView18setItemsExpandableEb</primary></indexterm>_ZN9QTreeView18setItemsExpandableEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView18setRootIsDecoratedEb</primary></indexterm>_ZN9QTreeView18setRootIsDecoratedEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView20rowsAboutToBeRemovedERK11QModelIndexii</primary></indexterm>_ZN9QTreeView20rowsAboutToBeRemovedERK11QModelIndexii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView20setUniformRowHeightsEb</primary></indexterm>_ZN9QTreeView20setUniformRowHeightsEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView21mouseDoubleClickEventEP11QMouseEvent</primary></indexterm>_ZN9QTreeView21mouseDoubleClickEventEP11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView22resizeColumnToContentsEi</primary></indexterm>_ZN9QTreeView22resizeColumnToContentsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView25horizontalScrollbarActionEi</primary></indexterm>_ZN9QTreeView25horizontalScrollbarActionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView5resetEv</primary></indexterm>_ZN9QTreeView5resetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView6expandERK11QModelIndex</primary></indexterm>_ZN9QTreeView6expandERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView8collapseERK11QModelIndex</primary></indexterm>_ZN9QTreeView8collapseERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView8expandedERK11QModelIndex</primary></indexterm>_ZN9QTreeView8expandedERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView8reexpandEv</primary></indexterm>_ZN9QTreeView8reexpandEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView8scrollToERK11QModelIndexN17QAbstractItemView10ScrollHintE</primary></indexterm>_ZN9QTreeView8scrollToERK11QModelIndexN17QAbstractItemView10ScrollHintE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView8setModelEP18QAbstractItemModel</primary></indexterm>_ZN9QTreeView8setModelEP18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView9collapsedERK11QModelIndex</primary></indexterm>_ZN9QTreeView9collapsedERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView9selectAllEv</primary></indexterm>_ZN9QTreeView9selectAllEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeView9setHeaderEP11QHeaderView</primary></indexterm>_ZN9QTreeView9setHeaderEP11QHeaderView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeViewC1EP7QWidget</primary></indexterm>_ZN9QTreeViewC1EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeViewC1ER16QTreeViewPrivateP7QWidget</primary></indexterm>_ZN9QTreeViewC1ER16QTreeViewPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeViewC2EP7QWidget</primary></indexterm>_ZN9QTreeViewC2EP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeViewC2ER16QTreeViewPrivateP7QWidget</primary></indexterm>_ZN9QTreeViewC2ER16QTreeViewPrivateP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeViewD0Ev</primary></indexterm>_ZN9QTreeViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTreeViewD1Ev</primary></indexterm>_ZN9QTreeViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeViewD2Ev</primary></indexterm>_ZN9QTreeViewD2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QBoxLayout10metaObjectEv</primary></indexterm>_ZNK10QBoxLayout10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QBoxLayout11maximumSizeEv</primary></indexterm>_ZNK10QBoxLayout11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QBoxLayout11minimumSizeEv</primary></indexterm>_ZNK10QBoxLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QBoxLayout14heightForWidthEi</primary></indexterm>_ZNK10QBoxLayout14heightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QBoxLayout17hasHeightForWidthEv</primary></indexterm>_ZNK10QBoxLayout17hasHeightForWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QBoxLayout19expandingDirectionsEv</primary></indexterm>_ZNK10QBoxLayout19expandingDirectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QBoxLayout21minimumHeightForWidthEi</primary></indexterm>_ZNK10QBoxLayout21minimumHeightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QBoxLayout5countEv</primary></indexterm>_ZNK10QBoxLayout5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QBoxLayout6itemAtEi</primary></indexterm>_ZNK10QBoxLayout6itemAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QBoxLayout8sizeHintEv</primary></indexterm>_ZNK10QBoxLayout8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QBoxLayout9directionEv</primary></indexterm>_ZNK10QBoxLayout9directionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QClipboard10metaObjectEv</primary></indexterm>_ZNK10QClipboard10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QClipboard13ownsClipboardEv</primary></indexterm>_ZNK10QClipboard13ownsClipboardEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QClipboard13ownsSelectionEv</primary></indexterm>_ZNK10QClipboard13ownsSelectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QClipboard17supportsSelectionEv</primary></indexterm>_ZNK10QClipboard17supportsSelectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QClipboard4dataENS_4ModeE</primary></indexterm>_ZNK10QClipboard4dataENS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QClipboard4textENS_4ModeE</primary></indexterm>_ZNK10QClipboard4textENS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QClipboard4textER7QStringNS_4ModeE</primary></indexterm>_ZNK10QClipboard4textER7QStringNS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QClipboard5imageENS_4ModeE</primary></indexterm>_ZNK10QClipboard5imageENS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QClipboard6pixmapENS_4ModeE</primary></indexterm>_ZNK10QClipboard6pixmapENS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QClipboard8mimeDataENS_4ModeE</primary></indexterm>_ZNK10QClipboard8mimeDataENS_4ModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QDropEvent11encodedDataEPKc</primary></indexterm>_ZNK10QDropEvent11encodedDataEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QDropEvent6actionEv</primary></indexterm>_ZNK10QDropEvent6actionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QDropEvent6formatEi</primary></indexterm>_ZNK10QDropEvent6formatEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QDropEvent6sourceEv</primary></indexterm>_ZNK10QDropEvent6sourceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QDropEvent8providesEPKc</primary></indexterm>_ZNK10QDropEvent8providesEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QLCDNumber10metaObjectEv</primary></indexterm>_ZNK10QLCDNumber10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QLCDNumber12segmentStyleEv</primary></indexterm>_ZNK10QLCDNumber12segmentStyleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QLCDNumber13checkOverflowEd</primary></indexterm>_ZNK10QLCDNumber13checkOverflowEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QLCDNumber13checkOverflowEi</primary></indexterm>_ZNK10QLCDNumber13checkOverflowEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QLCDNumber17smallDecimalPointEv</primary></indexterm>_ZNK10QLCDNumber17smallDecimalPointEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QLCDNumber4modeEv</primary></indexterm>_ZNK10QLCDNumber4modeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QLCDNumber5valueEv</primary></indexterm>_ZNK10QLCDNumber5valueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QLCDNumber8intValueEv</primary></indexterm>_ZNK10QLCDNumber8intValueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QLCDNumber8sizeHintEv</primary></indexterm>_ZNK10QLCDNumber8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QLCDNumber9numDigitsEv</primary></indexterm>_ZNK10QLCDNumber9numDigitsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QPictureIO10parametersEv</primary></indexterm>_ZNK10QPictureIO10parametersEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QPictureIO11descriptionEv</primary></indexterm>_ZNK10QPictureIO11descriptionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QPictureIO5gammaEv</primary></indexterm>_ZNK10QPictureIO5gammaEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QPictureIO6formatEv</primary></indexterm>_ZNK10QPictureIO6formatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QPictureIO6statusEv</primary></indexterm>_ZNK10QPictureIO6statusEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QPictureIO7pictureEv</primary></indexterm>_ZNK10QPictureIO7pictureEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QPictureIO7qualityEv</primary></indexterm>_ZNK10QPictureIO7qualityEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QPictureIO8fileNameEv</primary></indexterm>_ZNK10QPictureIO8fileNameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QPictureIO8ioDeviceEv</primary></indexterm>_ZNK10QPictureIO8ioDeviceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QScrollBar10metaObjectEv</primary></indexterm>_ZNK10QScrollBar10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QScrollBar8sizeHintEv</primary></indexterm>_ZNK10QScrollBar8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QStatusBar10metaObjectEv</primary></indexterm>_ZNK10QStatusBar10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QStatusBar14currentMessageEv</primary></indexterm>_ZNK10QStatusBar14currentMessageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QStatusBar17isSizeGripEnabledEv</primary></indexterm>_ZNK10QStatusBar17isSizeGripEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTabWidget10metaObjectEv</primary></indexterm>_ZNK10QTabWidget10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTabWidget10tabToolTipEi</primary></indexterm>_ZNK10QTabWidget10tabToolTipEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTabWidget11tabPositionEv</primary></indexterm>_ZNK10QTabWidget11tabPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTabWidget12cornerWidgetEN2Qt6CornerE</primary></indexterm>_ZNK10QTabWidget12cornerWidgetEN2Qt6CornerE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTabWidget12currentIndexEv</primary></indexterm>_ZNK10QTabWidget12currentIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTabWidget12isTabEnabledEi</primary></indexterm>_ZNK10QTabWidget12isTabEnabledEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTabWidget12tabWhatsThisEi</primary></indexterm>_ZNK10QTabWidget12tabWhatsThisEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTabWidget13currentWidgetEv</primary></indexterm>_ZNK10QTabWidget13currentWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTabWidget15minimumSizeHintEv</primary></indexterm>_ZNK10QTabWidget15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTabWidget5countEv</primary></indexterm>_ZNK10QTabWidget5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTabWidget6tabBarEv</primary></indexterm>_ZNK10QTabWidget6tabBarEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTabWidget6widgetEi</primary></indexterm>_ZNK10QTabWidget6widgetEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTabWidget7indexOfEP7QWidget</primary></indexterm>_ZNK10QTabWidget7indexOfEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTabWidget7tabIconEi</primary></indexterm>_ZNK10QTabWidget7tabIconEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTabWidget7tabTextEi</primary></indexterm>_ZNK10QTabWidget7tabTextEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTabWidget8sizeHintEv</primary></indexterm>_ZNK10QTabWidget8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTabWidget8tabShapeEv</primary></indexterm>_ZNK10QTabWidget8tabShapeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView10metaObjectEv</primary></indexterm>_ZNK10QTableView10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTableView10visualRectERK11QModelIndex</primary></indexterm>_ZNK10QTableView10visualRectERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView11columnWidthEi</primary></indexterm>_ZNK10QTableView11columnWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTableView11isRowHiddenEi</primary></indexterm>_ZNK10QTableView11isRowHiddenEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView11viewOptionsEv</primary></indexterm>_ZNK10QTableView11viewOptionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTableView13isIndexHiddenERK11QModelIndex</primary></indexterm>_ZNK10QTableView13isIndexHiddenERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView14isColumnHiddenEi</primary></indexterm>_ZNK10QTableView14isColumnHiddenEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTableView14sizeHintForRowEi</primary></indexterm>_ZNK10QTableView14sizeHintForRowEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView14verticalHeaderEv</primary></indexterm>_ZNK10QTableView14verticalHeaderEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTableView14verticalOffsetEv</primary></indexterm>_ZNK10QTableView14verticalOffsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView15selectedIndexesEv</primary></indexterm>_ZNK10QTableView15selectedIndexesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTableView16horizontalHeaderEv</primary></indexterm>_ZNK10QTableView16horizontalHeaderEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView16horizontalOffsetEv</primary></indexterm>_ZNK10QTableView16horizontalOffsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTableView17sizeHintForColumnEi</primary></indexterm>_ZNK10QTableView17sizeHintForColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView19rowViewportPositionEi</primary></indexterm>_ZNK10QTableView19rowViewportPositionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTableView22columnViewportPositionEi</primary></indexterm>_ZNK10QTableView22columnViewportPositionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView24visualRegionForSelectionERK14QItemSelection</primary></indexterm>_ZNK10QTableView24visualRegionForSelectionERK14QItemSelection <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTableView5rowAtEi</primary></indexterm>_ZNK10QTableView5rowAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView7indexAtERK6QPoint</primary></indexterm>_ZNK10QTableView7indexAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTableView8columnAtEi</primary></indexterm>_ZNK10QTableView8columnAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView8showGridEv</primary></indexterm>_ZNK10QTableView8showGridEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTableView9gridStyleEv</primary></indexterm>_ZNK10QTableView9gridStyleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTableView9rowHeightEi</primary></indexterm>_ZNK10QTableView9rowHeightEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextBlock10charFormatEv</primary></indexterm>_ZNK10QTextBlock10charFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextBlock11blockFormatEv</primary></indexterm>_ZNK10QTextBlock11blockFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextBlock15charFormatIndexEv</primary></indexterm>_ZNK10QTextBlock15charFormatIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextBlock16blockFormatIndexEv</primary></indexterm>_ZNK10QTextBlock16blockFormatIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextBlock3endEv</primary></indexterm>_ZNK10QTextBlock3endEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextBlock4nextEv</primary></indexterm>_ZNK10QTextBlock4nextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextBlock4textEv</primary></indexterm>_ZNK10QTextBlock4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextBlock5beginEv</primary></indexterm>_ZNK10QTextBlock5beginEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextBlock6layoutEv</primary></indexterm>_ZNK10QTextBlock6layoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextBlock6lengthEv</primary></indexterm>_ZNK10QTextBlock6lengthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextBlock8containsEi</primary></indexterm>_ZNK10QTextBlock8containsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextBlock8documentEv</primary></indexterm>_ZNK10QTextBlock8documentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextBlock8iterator8fragmentEv</primary></indexterm>_ZNK10QTextBlock8iterator8fragmentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextBlock8positionEv</primary></indexterm>_ZNK10QTextBlock8positionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextBlock8previousEv</primary></indexterm>_ZNK10QTextBlock8previousEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextBlock8textListEv</primary></indexterm>_ZNK10QTextBlock8textListEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextBlock8userDataEv</primary></indexterm>_ZNK10QTextBlock8userDataEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextBlock9userStateEv</primary></indexterm>_ZNK10QTextBlock9userStateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextFrame10layoutDataEv</primary></indexterm>_ZNK10QTextFrame10layoutDataEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextFrame10metaObjectEv</primary></indexterm>_ZNK10QTextFrame10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextFrame11childFramesEv</primary></indexterm>_ZNK10QTextFrame11childFramesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextFrame11parentFrameEv</primary></indexterm>_ZNK10QTextFrame11parentFrameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextFrame12lastPositionEv</primary></indexterm>_ZNK10QTextFrame12lastPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextFrame13firstPositionEv</primary></indexterm>_ZNK10QTextFrame13firstPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextFrame18lastCursorPositionEv</primary></indexterm>_ZNK10QTextFrame18lastCursorPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextFrame19firstCursorPositionEv</primary></indexterm>_ZNK10QTextFrame19firstCursorPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextFrame3endEv</primary></indexterm>_ZNK10QTextFrame3endEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextFrame5beginEv</primary></indexterm>_ZNK10QTextFrame5beginEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextFrame8iterator12currentBlockEv</primary></indexterm>_ZNK10QTextFrame8iterator12currentBlockEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextFrame8iterator12currentFrameEv</primary></indexterm>_ZNK10QTextFrame8iterator12currentFrameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextTable10metaObjectEv</primary></indexterm>_ZNK10QTextTable10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextTable4rowsEv</primary></indexterm>_ZNK10QTextTable4rowsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextTable6cellAtERK11QTextCursor</primary></indexterm>_ZNK10QTextTable6cellAtERK11QTextCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextTable6cellAtEi</primary></indexterm>_ZNK10QTextTable6cellAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextTable6cellAtEii</primary></indexterm>_ZNK10QTextTable6cellAtEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextTable6rowEndERK11QTextCursor</primary></indexterm>_ZNK10QTextTable6rowEndERK11QTextCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QTextTable7columnsEv</primary></indexterm>_ZNK10QTextTable7columnsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QTextTable8rowStartERK11QTextCursor</primary></indexterm>_ZNK10QTextTable8rowStartERK11QTextCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QValidator10metaObjectEv</primary></indexterm>_ZNK10QValidator10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QValidator5fixupER7QString</primary></indexterm>_ZNK10QValidator5fixupER7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QWorkspace10backgroundEv</primary></indexterm>_ZNK10QWorkspace10backgroundEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QWorkspace10metaObjectEv</primary></indexterm>_ZNK10QWorkspace10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QWorkspace10windowListENS_11WindowOrderE</primary></indexterm>_ZNK10QWorkspace10windowListENS_11WindowOrderE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QWorkspace12activeWindowEv</primary></indexterm>_ZNK10QWorkspace12activeWindowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK10QWorkspace17scrollBarsEnabledEv</primary></indexterm>_ZNK10QWorkspace17scrollBarsEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK10QWorkspace8sizeHintEv</primary></indexterm>_ZNK10QWorkspace8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QColorGroupcv8QVariantEv</primary></indexterm>_ZNK11QColorGroupcv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QColorGroupeqERKS_</primary></indexterm>_ZNK11QColorGroupeqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QDockWidget10metaObjectEv</primary></indexterm>_ZNK11QDockWidget10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QDockWidget12allowedAreasEv</primary></indexterm>_ZNK11QDockWidget12allowedAreasEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QDockWidget16toggleViewActionEv</primary></indexterm>_ZNK11QDockWidget16toggleViewActionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QDockWidget6widgetEv</primary></indexterm>_ZNK11QDockWidget6widgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QDockWidget8featuresEv</primary></indexterm>_ZNK11QDockWidget8featuresEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QFileDialog10acceptModeEv</primary></indexterm>_ZNK11QFileDialog10acceptModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QFileDialog10isReadOnlyEv</primary></indexterm>_ZNK11QFileDialog10isReadOnlyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QFileDialog10metaObjectEv</primary></indexterm>_ZNK11QFileDialog10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QFileDialog12iconProviderEv</primary></indexterm>_ZNK11QFileDialog12iconProviderEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QFileDialog12itemDelegateEv</primary></indexterm>_ZNK11QFileDialog12itemDelegateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QFileDialog12selectedFileEv</primary></indexterm>_ZNK11QFileDialog12selectedFileEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QFileDialog13defaultSuffixEv</primary></indexterm>_ZNK11QFileDialog13defaultSuffixEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QFileDialog13selectedFilesEv</primary></indexterm>_ZNK11QFileDialog13selectedFilesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QFileDialog14selectedFilterEv</primary></indexterm>_ZNK11QFileDialog14selectedFilterEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QFileDialog15resolveSymlinksEv</primary></indexterm>_ZNK11QFileDialog15resolveSymlinksEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QFileDialog16confirmOverwriteEv</primary></indexterm>_ZNK11QFileDialog16confirmOverwriteEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QFileDialog7filtersEv</primary></indexterm>_ZNK11QFileDialog7filtersEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QFileDialog7historyEv</primary></indexterm>_ZNK11QFileDialog7historyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QFileDialog8fileModeEv</primary></indexterm>_ZNK11QFileDialog8fileModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QFileDialog8viewModeEv</primary></indexterm>_ZNK11QFileDialog8viewModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QFileDialog9directoryEv</primary></indexterm>_ZNK11QFileDialog9directoryEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QFileDialog9labelTextENS_11DialogLabelE</primary></indexterm>_ZNK11QFileDialog9labelTextENS_11DialogLabelE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QFocusFrame10metaObjectEv</primary></indexterm>_ZNK11QFocusFrame10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QFocusFrame6widgetEv</primary></indexterm>_ZNK11QFocusFrame6widgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QFontDialog10metaObjectEv</primary></indexterm>_ZNK11QFontDialog10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QGridLayout10metaObjectEv</primary></indexterm>_ZNK11QGridLayout10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QGridLayout10rowStretchEi</primary></indexterm>_ZNK11QGridLayout10rowStretchEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QGridLayout11columnCountEv</primary></indexterm>_ZNK11QGridLayout11columnCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QGridLayout11maximumSizeEv</primary></indexterm>_ZNK11QGridLayout11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QGridLayout11minimumSizeEv</primary></indexterm>_ZNK11QGridLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QGridLayout12originCornerEv</primary></indexterm>_ZNK11QGridLayout12originCornerEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QGridLayout13columnStretchEi</primary></indexterm>_ZNK11QGridLayout13columnStretchEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QGridLayout14heightForWidthEi</primary></indexterm>_ZNK11QGridLayout14heightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QGridLayout16rowMinimumHeightEi</primary></indexterm>_ZNK11QGridLayout16rowMinimumHeightEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QGridLayout17hasHeightForWidthEv</primary></indexterm>_ZNK11QGridLayout17hasHeightForWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QGridLayout18columnMinimumWidthEi</primary></indexterm>_ZNK11QGridLayout18columnMinimumWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QGridLayout19expandingDirectionsEv</primary></indexterm>_ZNK11QGridLayout19expandingDirectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QGridLayout21minimumHeightForWidthEi</primary></indexterm>_ZNK11QGridLayout21minimumHeightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QGridLayout5countEv</primary></indexterm>_ZNK11QGridLayout5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QGridLayout6itemAtEi</primary></indexterm>_ZNK11QGridLayout6itemAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QGridLayout8cellRectEii</primary></indexterm>_ZNK11QGridLayout8cellRectEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QGridLayout8rowCountEv</primary></indexterm>_ZNK11QGridLayout8rowCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QGridLayout8sizeHintEv</primary></indexterm>_ZNK11QGridLayout8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHBoxLayout10metaObjectEv</primary></indexterm>_ZNK11QHBoxLayout10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView10metaObjectEv</primary></indexterm>_ZNK11QHeaderView10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView10resizeModeEi</primary></indexterm>_ZNK11QHeaderView10resizeModeEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView10visualRectERK11QModelIndex</primary></indexterm>_ZNK11QHeaderView10visualRectERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView11isClickableEv</primary></indexterm>_ZNK11QHeaderView11isClickableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView11orientationEv</primary></indexterm>_ZNK11QHeaderView11orientationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView11sectionSizeEi</primary></indexterm>_ZNK11QHeaderView11sectionSizeEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView11visualIndexEi</primary></indexterm>_ZNK11QHeaderView11visualIndexEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView12logicalIndexEi</primary></indexterm>_ZNK11QHeaderView12logicalIndexEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView12paintSectionEP8QPainterRK5QRecti</primary></indexterm>_ZNK11QHeaderView12paintSectionEP8QPainterRK5QRecti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView13isIndexHiddenERK11QModelIndex</primary></indexterm>_ZNK11QHeaderView13isIndexHiddenERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView13sectionsMovedEv</primary></indexterm>_ZNK11QHeaderView13sectionsMovedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView13visualIndexAtEi</primary></indexterm>_ZNK11QHeaderView13visualIndexAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView14logicalIndexAtEi</primary></indexterm>_ZNK11QHeaderView14logicalIndexAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView14sectionsHiddenEv</primary></indexterm>_ZNK11QHeaderView14sectionsHiddenEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView14verticalOffsetEv</primary></indexterm>_ZNK11QHeaderView14verticalOffsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView15isSectionHiddenEi</primary></indexterm>_ZNK11QHeaderView15isSectionHiddenEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView15sectionPositionEi</primary></indexterm>_ZNK11QHeaderView15sectionPositionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView15sectionSizeHintEi</primary></indexterm>_ZNK11QHeaderView15sectionSizeHintEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView16defaultAlignmentEv</primary></indexterm>_ZNK11QHeaderView16defaultAlignmentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView16horizontalOffsetEv</primary></indexterm>_ZNK11QHeaderView16horizontalOffsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView17highlightSectionsEv</primary></indexterm>_ZNK11QHeaderView17highlightSectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView18defaultSectionSizeEv</primary></indexterm>_ZNK11QHeaderView18defaultSectionSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView18hiddenSectionCountEv</primary></indexterm>_ZNK11QHeaderView18hiddenSectionCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView18sortIndicatorOrderEv</primary></indexterm>_ZNK11QHeaderView18sortIndicatorOrderEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView18stretchLastSectionEv</primary></indexterm>_ZNK11QHeaderView18stretchLastSectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView19stretchSectionCountEv</primary></indexterm>_ZNK11QHeaderView19stretchSectionCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView20isSortIndicatorShownEv</primary></indexterm>_ZNK11QHeaderView20isSortIndicatorShownEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView20sortIndicatorSectionEv</primary></indexterm>_ZNK11QHeaderView20sortIndicatorSectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView23sectionSizeFromContentsEi</primary></indexterm>_ZNK11QHeaderView23sectionSizeFromContentsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView23sectionViewportPositionEi</primary></indexterm>_ZNK11QHeaderView23sectionViewportPositionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView24visualRegionForSelectionERK14QItemSelection</primary></indexterm>_ZNK11QHeaderView24visualRegionForSelectionERK14QItemSelection <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView5countEv</primary></indexterm>_ZNK11QHeaderView5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView6lengthEv</primary></indexterm>_ZNK11QHeaderView6lengthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView6offsetEv</primary></indexterm>_ZNK11QHeaderView6offsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView7indexAtERK6QPoint</primary></indexterm>_ZNK11QHeaderView7indexAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QHeaderView8sizeHintEv</primary></indexterm>_ZNK11QHeaderView8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QHeaderView9isMovableEv</primary></indexterm>_ZNK11QHeaderView9isMovableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QLayoutItem14heightForWidthEi</primary></indexterm>_ZNK11QLayoutItem14heightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QLayoutItem17hasHeightForWidthEv</primary></indexterm>_ZNK11QLayoutItem17hasHeightForWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QLayoutItem21minimumHeightForWidthEi</primary></indexterm>_ZNK11QLayoutItem21minimumHeightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QListWidget10currentRowEv</primary></indexterm>_ZNK11QListWidget10currentRowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QListWidget10itemWidgetEP15QListWidgetItem</primary></indexterm>_ZNK11QListWidget10itemWidgetEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QListWidget10metaObjectEv</primary></indexterm>_ZNK11QListWidget10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QListWidget11currentItemEv</primary></indexterm>_ZNK11QListWidget11currentItemEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QListWidget12isItemHiddenEPK15QListWidgetItem</primary></indexterm>_ZNK11QListWidget12isItemHiddenEPK15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QListWidget13indexFromItemEP15QListWidgetItem</primary></indexterm>_ZNK11QListWidget13indexFromItemEP15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QListWidget13itemFromIndexERK11QModelIndex</primary></indexterm>_ZNK11QListWidget13itemFromIndexERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QListWidget13selectedItemsEv</primary></indexterm>_ZNK11QListWidget13selectedItemsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QListWidget14isItemSelectedEPK15QListWidgetItem</primary></indexterm>_ZNK11QListWidget14isItemSelectedEPK15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QListWidget14visualItemRectEPK15QListWidgetItem</primary></indexterm>_ZNK11QListWidget14visualItemRectEPK15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QListWidget20supportedDropActionsEv</primary></indexterm>_ZNK11QListWidget20supportedDropActionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QListWidget3rowEPK15QListWidgetItem</primary></indexterm>_ZNK11QListWidget3rowEPK15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QListWidget4itemEi</primary></indexterm>_ZNK11QListWidget4itemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QListWidget5countEv</primary></indexterm>_ZNK11QListWidget5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QListWidget5itemsEPK9QMimeData</primary></indexterm>_ZNK11QListWidget5itemsEPK9QMimeData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QListWidget6itemAtERK6QPoint</primary></indexterm>_ZNK11QListWidget6itemAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QListWidget8mimeDataE5QListIP15QListWidgetItemE</primary></indexterm>_ZNK11QListWidget8mimeDataE5QListIP15QListWidgetItemE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QListWidget9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEE</primary></indexterm>_ZNK11QListWidget9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QListWidget9mimeTypesEv</primary></indexterm>_ZNK11QListWidget9mimeTypesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMainWindow10metaObjectEv</primary></indexterm>_ZNK11QMainWindow10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMainWindow11toolBarAreaEP8QToolBar</primary></indexterm>_ZNK11QMainWindow11toolBarAreaEP8QToolBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMainWindow13centralWidgetEv</primary></indexterm>_ZNK11QMainWindow13centralWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMainWindow14dockWidgetAreaEP11QDockWidget</primary></indexterm>_ZNK11QMainWindow14dockWidgetAreaEP11QDockWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMainWindow15toolButtonStyleEv</primary></indexterm>_ZNK11QMainWindow15toolButtonStyleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMainWindow6cornerEN2Qt6CornerE</primary></indexterm>_ZNK11QMainWindow6cornerEN2Qt6CornerE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMainWindow7menuBarEv</primary></indexterm>_ZNK11QMainWindow7menuBarEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMainWindow8iconSizeEv</primary></indexterm>_ZNK11QMainWindow8iconSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMainWindow9saveStateEi</primary></indexterm>_ZNK11QMainWindow9saveStateEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMainWindow9statusBarEv</primary></indexterm>_ZNK11QMainWindow9statusBarEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMessageBox10buttonTextEi</primary></indexterm>_ZNK11QMessageBox10buttonTextEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMessageBox10iconPixmapEv</primary></indexterm>_ZNK11QMessageBox10iconPixmapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMessageBox10metaObjectEv</primary></indexterm>_ZNK11QMessageBox10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMessageBox10textFormatEv</primary></indexterm>_ZNK11QMessageBox10textFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMessageBox4iconEv</primary></indexterm>_ZNK11QMessageBox4iconEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMessageBox4textEv</primary></indexterm>_ZNK11QMessageBox4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMessageBox8sizeHintEv</primary></indexterm>_ZNK11QMessageBox8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMimeSource8providesEPKc</primary></indexterm>_ZNK11QMimeSource8providesEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle10metaObjectEv</primary></indexterm>_ZNK11QMotifStyle10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget</primary></indexterm>_ZNK11QMotifStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle11pixelMetricEN6QStyle11PixelMetricEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK11QMotifStyle11pixelMetricEN6QStyle11PixelMetricEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget</primary></indexterm>_ZNK11QMotifStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle14standardPixmapEN6QStyle14StandardPixmapEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK11QMotifStyle14standardPixmapEN6QStyle14StandardPixmapEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle14subControlRectEN6QStyle14ComplexControlEPK19QStyleOptionComplexNS0_10SubControlEPK7QWidget</primary></indexterm>_ZNK11QMotifStyle14subControlRectEN6QStyle14ComplexControlEPK19QStyleOptionComplexNS0_10SubControlEPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle14subElementRectEN6QStyle10SubElementEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK11QMotifStyle14subElementRectEN6QStyle10SubElementEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle15standardPaletteEv</primary></indexterm>_ZNK11QMotifStyle15standardPaletteEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle16sizeFromContentsEN6QStyle12ContentsTypeEPK12QStyleOptionRK5QSizePK7QWidget</primary></indexterm>_ZNK11QMotifStyle16sizeFromContentsEN6QStyle12ContentsTypeEPK12QStyleOptionRK5QSizePK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle18drawComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexP8QPainterPK7QWidget</primary></indexterm>_ZNK11QMotifStyle18drawComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle18useHighlightColorsEv</primary></indexterm>_ZNK11QMotifStyle18useHighlightColorsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QMotifStyle9styleHintEN6QStyle9StyleHintEPK12QStyleOptionPK7QWidgetP16QStyleHintReturn</primary></indexterm>_ZNK11QMotifStyle9styleHintEN6QStyle9StyleHintEPK12QStyleOptionPK7QWidgetP16QStyleHintReturn <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QProxyModel10headerDataEiN2Qt11OrientationEi</primary></indexterm>_ZNK11QProxyModel10headerDataEiN2Qt11OrientationEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QProxyModel10metaObjectEv</primary></indexterm>_ZNK11QProxyModel10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QProxyModel11columnCountERK11QModelIndex</primary></indexterm>_ZNK11QProxyModel11columnCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QProxyModel11hasChildrenERK11QModelIndex</primary></indexterm>_ZNK11QProxyModel11hasChildrenERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QProxyModel13setProxyModelERK11QModelIndex</primary></indexterm>_ZNK11QProxyModel13setProxyModelERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QProxyModel14connectToModelEPK18QAbstractItemModel</primary></indexterm>_ZNK11QProxyModel14connectToModelEPK18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QProxyModel14setSourceModelERK11QModelIndex</primary></indexterm>_ZNK11QProxyModel14setSourceModelERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QProxyModel19disconnectFromModelEPK18QAbstractItemModel</primary></indexterm>_ZNK11QProxyModel19disconnectFromModelEPK18QAbstractItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QProxyModel20supportedDropActionsEv</primary></indexterm>_ZNK11QProxyModel20supportedDropActionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QProxyModel4dataERK11QModelIndexi</primary></indexterm>_ZNK11QProxyModel4dataERK11QModelIndexi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QProxyModel4spanERK11QModelIndex</primary></indexterm>_ZNK11QProxyModel4spanERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QProxyModel5flagsERK11QModelIndex</primary></indexterm>_ZNK11QProxyModel5flagsERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QProxyModel5indexEiiRK11QModelIndex</primary></indexterm>_ZNK11QProxyModel5indexEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QProxyModel5matchERK11QModelIndexiRK8QVarianti6QFlagsIN2Qt9MatchFlagEE</primary></indexterm>_ZNK11QProxyModel5matchERK11QModelIndexiRK8QVarianti6QFlagsIN2Qt9MatchFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QProxyModel5modelEv</primary></indexterm>_ZNK11QProxyModel5modelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QProxyModel6parentERK11QModelIndex</primary></indexterm>_ZNK11QProxyModel6parentERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QProxyModel8mimeDataERK5QListI11QModelIndexE</primary></indexterm>_ZNK11QProxyModel8mimeDataERK5QListI11QModelIndexE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QProxyModel8rowCountERK11QModelIndex</primary></indexterm>_ZNK11QProxyModel8rowCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QProxyModel9mimeTypesEv</primary></indexterm>_ZNK11QProxyModel9mimeTypesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QPushButton10metaObjectEv</primary></indexterm>_ZNK11QPushButton10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QPushButton11autoDefaultEv</primary></indexterm>_ZNK11QPushButton11autoDefaultEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QPushButton4menuEv</primary></indexterm>_ZNK11QPushButton4menuEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QPushButton6isFlatEv</primary></indexterm>_ZNK11QPushButton6isFlatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QPushButton8sizeHintEv</primary></indexterm>_ZNK11QPushButton8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QPushButton9isDefaultEv</primary></indexterm>_ZNK11QPushButton9isDefaultEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QRubberBand10metaObjectEv</primary></indexterm>_ZNK11QRubberBand10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QRubberBand5shapeEv</primary></indexterm>_ZNK11QRubberBand5shapeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QScrollArea10metaObjectEv</primary></indexterm>_ZNK11QScrollArea10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QScrollArea15widgetResizableEv</primary></indexterm>_ZNK11QScrollArea15widgetResizableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QScrollArea6widgetEv</primary></indexterm>_ZNK11QScrollArea6widgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QScrollArea8sizeHintEv</primary></indexterm>_ZNK11QScrollArea8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QSizePolicycv8QVariantEv</primary></indexterm>_ZNK11QSizePolicycv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QSpacerItem11maximumSizeEv</primary></indexterm>_ZNK11QSpacerItem11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QSpacerItem11minimumSizeEv</primary></indexterm>_ZNK11QSpacerItem11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QSpacerItem19expandingDirectionsEv</primary></indexterm>_ZNK11QSpacerItem19expandingDirectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QSpacerItem7isEmptyEv</primary></indexterm>_ZNK11QSpacerItem7isEmptyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QSpacerItem8geometryEv</primary></indexterm>_ZNK11QSpacerItem8geometryEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QSpacerItem8sizeHintEv</primary></indexterm>_ZNK11QSpacerItem8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursor10atBlockEndEv</primary></indexterm>_ZNK11QTextCursor10atBlockEndEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursor10charFormatEv</primary></indexterm>_ZNK11QTextCursor10charFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursor11blockFormatEv</primary></indexterm>_ZNK11QTextCursor11blockFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursor11currentListEv</primary></indexterm>_ZNK11QTextCursor11currentListEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursor12atBlockStartEv</primary></indexterm>_ZNK11QTextCursor12atBlockStartEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursor12currentFrameEv</primary></indexterm>_ZNK11QTextCursor12currentFrameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursor12currentTableEv</primary></indexterm>_ZNK11QTextCursor12currentTableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursor12hasSelectionEv</primary></indexterm>_ZNK11QTextCursor12hasSelectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursor12selectedTextEv</primary></indexterm>_ZNK11QTextCursor12selectedTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursor12selectionEndEv</primary></indexterm>_ZNK11QTextCursor12selectionEndEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursor14selectionStartEv</primary></indexterm>_ZNK11QTextCursor14selectionStartEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursor15blockCharFormatEv</primary></indexterm>_ZNK11QTextCursor15blockCharFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursor18selectedTableCellsEPiS0_S0_S0_</primary></indexterm>_ZNK11QTextCursor18selectedTableCellsEPiS0_S0_S0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursor19hasComplexSelectionEv</primary></indexterm>_ZNK11QTextCursor19hasComplexSelectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursor5atEndEv</primary></indexterm>_ZNK11QTextCursor5atEndEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursor5blockEv</primary></indexterm>_ZNK11QTextCursor5blockEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursor6anchorEv</primary></indexterm>_ZNK11QTextCursor6anchorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursor6isNullEv</primary></indexterm>_ZNK11QTextCursor6isNullEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursor7atStartEv</primary></indexterm>_ZNK11QTextCursor7atStartEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursor8isCopyOfERKS_</primary></indexterm>_ZNK11QTextCursor8isCopyOfERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursor8positionEv</primary></indexterm>_ZNK11QTextCursor8positionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursor9selectionEv</primary></indexterm>_ZNK11QTextCursor9selectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursoreqERKS_</primary></indexterm>_ZNK11QTextCursoreqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursorgeERKS_</primary></indexterm>_ZNK11QTextCursorgeERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursorgtERKS_</primary></indexterm>_ZNK11QTextCursorgtERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursorleERKS_</primary></indexterm>_ZNK11QTextCursorleERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextCursorltERKS_</primary></indexterm>_ZNK11QTextCursorltERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextCursorneERKS_</primary></indexterm>_ZNK11QTextCursorneERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextFormat10propertiesEv</primary></indexterm>_ZNK11QTextFormat10propertiesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextFormat11hasPropertyEi</primary></indexterm>_ZNK11QTextFormat11hasPropertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextFormat11intPropertyEi</primary></indexterm>_ZNK11QTextFormat11intPropertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextFormat11objectIndexEv</primary></indexterm>_ZNK11QTextFormat11objectIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextFormat11penPropertyEi</primary></indexterm>_ZNK11QTextFormat11penPropertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextFormat12boolPropertyEi</primary></indexterm>_ZNK11QTextFormat12boolPropertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextFormat12toCharFormatEv</primary></indexterm>_ZNK11QTextFormat12toCharFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextFormat12toListFormatEv</primary></indexterm>_ZNK11QTextFormat12toListFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextFormat13brushPropertyEi</primary></indexterm>_ZNK11QTextFormat13brushPropertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextFormat13colorPropertyEi</primary></indexterm>_ZNK11QTextFormat13colorPropertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextFormat13toBlockFormatEv</primary></indexterm>_ZNK11QTextFormat13toBlockFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextFormat13toFrameFormatEv</primary></indexterm>_ZNK11QTextFormat13toFrameFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextFormat13toImageFormatEv</primary></indexterm>_ZNK11QTextFormat13toImageFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextFormat13toTableFormatEv</primary></indexterm>_ZNK11QTextFormat13toTableFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextFormat14doublePropertyEi</primary></indexterm>_ZNK11QTextFormat14doublePropertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextFormat14lengthPropertyEi</primary></indexterm>_ZNK11QTextFormat14lengthPropertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextFormat14stringPropertyEi</primary></indexterm>_ZNK11QTextFormat14stringPropertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextFormat20lengthVectorPropertyEi</primary></indexterm>_ZNK11QTextFormat20lengthVectorPropertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextFormat4typeEv</primary></indexterm>_ZNK11QTextFormat4typeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextFormat8propertyEi</primary></indexterm>_ZNK11QTextFormat8propertyEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextFormatcv8QVariantEv</primary></indexterm>_ZNK11QTextFormatcv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextFormateqERKS_</primary></indexterm>_ZNK11QTextFormateqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFi</primary></indexterm>_ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextLayout10textOptionEv</primary></indexterm>_ZNK11QTextLayout10textOptionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextLayout12boundingRectEv</primary></indexterm>_ZNK11QTextLayout12boundingRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextLayout12cacheEnabledEv</primary></indexterm>_ZNK11QTextLayout12cacheEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextLayout12maximumWidthEv</primary></indexterm>_ZNK11QTextLayout12maximumWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextLayout12minimumWidthEv</primary></indexterm>_ZNK11QTextLayout12minimumWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextLayout15preeditAreaTextEv</primary></indexterm>_ZNK11QTextLayout15preeditAreaTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextLayout17additionalFormatsEv</primary></indexterm>_ZNK11QTextLayout17additionalFormatsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextLayout18nextCursorPositionEiNS_10CursorModeE</primary></indexterm>_ZNK11QTextLayout18nextCursorPositionEiNS_10CursorModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextLayout19lineForTextPositionEi</primary></indexterm>_ZNK11QTextLayout19lineForTextPositionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextLayout19preeditAreaPositionEv</primary></indexterm>_ZNK11QTextLayout19preeditAreaPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextLayout21isValidCursorPositionEi</primary></indexterm>_ZNK11QTextLayout21isValidCursorPositionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextLayout22previousCursorPositionEiNS_10CursorModeE</primary></indexterm>_ZNK11QTextLayout22previousCursorPositionEiNS_10CursorModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextLayout4drawEP8QPainterRK7QPointFRK7QVectorINS_11FormatRangeEERK6QRectF</primary></indexterm>_ZNK11QTextLayout4drawEP8QPainterRK7QPointFRK7QVectorINS_11FormatRangeEERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextLayout4fontEv</primary></indexterm>_ZNK11QTextLayout4fontEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextLayout4textEv</primary></indexterm>_ZNK11QTextLayout4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextLayout6lineAtEi</primary></indexterm>_ZNK11QTextLayout6lineAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextLayout8positionEv</primary></indexterm>_ZNK11QTextLayout8positionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextLayout9lineCountEv</primary></indexterm>_ZNK11QTextLayout9lineCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextLengthcv8QVariantEv</primary></indexterm>_ZNK11QTextLengthcv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextObject10metaObjectEv</primary></indexterm>_ZNK11QTextObject10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextObject11formatIndexEv</primary></indexterm>_ZNK11QTextObject11formatIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextObject11objectIndexEv</primary></indexterm>_ZNK11QTextObject11objectIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextObject6formatEv</primary></indexterm>_ZNK11QTextObject6formatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextObject8documentEv</primary></indexterm>_ZNK11QTextObject8documentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTextObject9docHandleEv</primary></indexterm>_ZNK11QTextObject9docHandleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTextOption8tabArrayEv</primary></indexterm>_ZNK11QTextOption8tabArrayEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QToolButton10metaObjectEv</primary></indexterm>_ZNK11QToolButton10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QToolButton10offIconSetEv</primary></indexterm>_ZNK11QToolButton10offIconSetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QToolButton10popupDelayEv</primary></indexterm>_ZNK11QToolButton10popupDelayEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QToolButton13defaultActionEv</primary></indexterm>_ZNK11QToolButton13defaultActionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QToolButton15minimumSizeHintEv</primary></indexterm>_ZNK11QToolButton15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QToolButton15toolButtonStyleEv</primary></indexterm>_ZNK11QToolButton15toolButtonStyleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QToolButton4menuEv</primary></indexterm>_ZNK11QToolButton4menuEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QToolButton7iconSetEb</primary></indexterm>_ZNK11QToolButton7iconSetEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QToolButton8sizeHintEv</primary></indexterm>_ZNK11QToolButton8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QToolButton9arrowTypeEv</primary></indexterm>_ZNK11QToolButton9arrowTypeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QToolButton9autoRaiseEv</primary></indexterm>_ZNK11QToolButton9autoRaiseEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QToolButton9onIconSetEv</primary></indexterm>_ZNK11QToolButton9onIconSetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QToolButton9popupModeEv</primary></indexterm>_ZNK11QToolButton9popupModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget10headerItemEv</primary></indexterm>_ZNK11QTreeWidget10headerItemEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget10itemWidgetEP15QTreeWidgetItemi</primary></indexterm>_ZNK11QTreeWidget10itemWidgetEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget10metaObjectEv</primary></indexterm>_ZNK11QTreeWidget10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget10sortColumnEv</primary></indexterm>_ZNK11QTreeWidget10sortColumnEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget11columnCountEv</primary></indexterm>_ZNK11QTreeWidget11columnCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget11currentItemEv</primary></indexterm>_ZNK11QTreeWidget11currentItemEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget12isItemHiddenEPK15QTreeWidgetItem</primary></indexterm>_ZNK11QTreeWidget12isItemHiddenEPK15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget12topLevelItemEi</primary></indexterm>_ZNK11QTreeWidget12topLevelItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget13currentColumnEv</primary></indexterm>_ZNK11QTreeWidget13currentColumnEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget13indexFromItemEP15QTreeWidgetItemi</primary></indexterm>_ZNK11QTreeWidget13indexFromItemEP15QTreeWidgetItemi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget13itemFromIndexERK11QModelIndex</primary></indexterm>_ZNK11QTreeWidget13itemFromIndexERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget13selectedItemsEv</primary></indexterm>_ZNK11QTreeWidget13selectedItemsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget14isItemExpandedEPK15QTreeWidgetItem</primary></indexterm>_ZNK11QTreeWidget14isItemExpandedEPK15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget14isItemSelectedEPK15QTreeWidgetItem</primary></indexterm>_ZNK11QTreeWidget14isItemSelectedEPK15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget14visualItemRectEPK15QTreeWidgetItem</primary></indexterm>_ZNK11QTreeWidget14visualItemRectEPK15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget16isSortingEnabledEv</primary></indexterm>_ZNK11QTreeWidget16isSortingEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget17topLevelItemCountEv</primary></indexterm>_ZNK11QTreeWidget17topLevelItemCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget20supportedDropActionsEv</primary></indexterm>_ZNK11QTreeWidget20supportedDropActionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget5itemsEPK9QMimeData</primary></indexterm>_ZNK11QTreeWidget5itemsEPK9QMimeData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget6itemAtERK6QPoint</primary></indexterm>_ZNK11QTreeWidget6itemAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget8mimeDataE5QListIP15QTreeWidgetItemE</primary></indexterm>_ZNK11QTreeWidget8mimeDataE5QListIP15QTreeWidgetItemE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEEi</primary></indexterm>_ZNK11QTreeWidget9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QTreeWidget9mimeTypesEv</primary></indexterm>_ZNK11QTreeWidget9mimeTypesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QVBoxLayout10metaObjectEv</primary></indexterm>_ZNK11QVBoxLayout10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QWidgetItem11maximumSizeEv</primary></indexterm>_ZNK11QWidgetItem11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QWidgetItem11minimumSizeEv</primary></indexterm>_ZNK11QWidgetItem11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QWidgetItem14heightForWidthEi</primary></indexterm>_ZNK11QWidgetItem14heightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QWidgetItem17hasHeightForWidthEv</primary></indexterm>_ZNK11QWidgetItem17hasHeightForWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QWidgetItem19expandingDirectionsEv</primary></indexterm>_ZNK11QWidgetItem19expandingDirectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QWidgetItem7isEmptyEv</primary></indexterm>_ZNK11QWidgetItem7isEmptyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK11QWidgetItem8geometryEv</primary></indexterm>_ZNK11QWidgetItem8geometryEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK11QWidgetItem8sizeHintEv</primary></indexterm>_ZNK11QWidgetItem8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QActionGroup10metaObjectEv</primary></indexterm>_ZNK12QActionGroup10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QActionGroup11isExclusiveEv</primary></indexterm>_ZNK12QActionGroup11isExclusiveEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QActionGroup13checkedActionEv</primary></indexterm>_ZNK12QActionGroup13checkedActionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QActionGroup7actionsEv</primary></indexterm>_ZNK12QActionGroup7actionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QActionGroup9isEnabledEv</primary></indexterm>_ZNK12QActionGroup9isEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QActionGroup9isVisibleEv</primary></indexterm>_ZNK12QActionGroup9isVisibleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QApplication10metaObjectEv</primary></indexterm>_ZNK12QApplication10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QApplication10sessionKeyEv</primary></indexterm>_ZNK12QApplication10sessionKeyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QApplication12inputContextEv</primary></indexterm>_ZNK12QApplication12inputContextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QApplication17isSessionRestoredEv</primary></indexterm>_ZNK12QApplication17isSessionRestoredEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QApplication9sessionIdEv</primary></indexterm>_ZNK12QApplication9sessionIdEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QButtonGroup10metaObjectEv</primary></indexterm>_ZNK12QButtonGroup10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QButtonGroup13checkedButtonEv</primary></indexterm>_ZNK12QButtonGroup13checkedButtonEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QButtonGroup2idEP15QAbstractButton</primary></indexterm>_ZNK12QButtonGroup2idEP15QAbstractButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QButtonGroup6buttonEi</primary></indexterm>_ZNK12QButtonGroup6buttonEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QButtonGroup7buttonsEv</primary></indexterm>_ZNK12QButtonGroup7buttonsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QButtonGroup9checkedIdEv</primary></indexterm>_ZNK12QButtonGroup9checkedIdEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QButtonGroup9exclusiveEv</primary></indexterm>_ZNK12QButtonGroup9exclusiveEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QColorDialog10metaObjectEv</primary></indexterm>_ZNK12QColorDialog10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle10metaObjectEv</primary></indexterm>_ZNK12QCommonStyle10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget</primary></indexterm>_ZNK12QCommonStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle11pixelMetricEN6QStyle11PixelMetricEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK12QCommonStyle11pixelMetricEN6QStyle11PixelMetricEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget</primary></indexterm>_ZNK12QCommonStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle14standardPixmapEN6QStyle14StandardPixmapEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK12QCommonStyle14standardPixmapEN6QStyle14StandardPixmapEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle14subControlRectEN6QStyle14ComplexControlEPK19QStyleOptionComplexNS0_10SubControlEPK7QWidget</primary></indexterm>_ZNK12QCommonStyle14subControlRectEN6QStyle14ComplexControlEPK19QStyleOptionComplexNS0_10SubControlEPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle14subElementRectEN6QStyle10SubElementEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK12QCommonStyle14subElementRectEN6QStyle10SubElementEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle16sizeFromContentsEN6QStyle12ContentsTypeEPK12QStyleOptionRK5QSizePK7QWidget</primary></indexterm>_ZNK12QCommonStyle16sizeFromContentsEN6QStyle12ContentsTypeEPK12QStyleOptionRK5QSizePK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle18drawComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexP8QPainterPK7QWidget</primary></indexterm>_ZNK12QCommonStyle18drawComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle19generatedIconPixmapEN5QIcon4ModeERK7QPixmapPK12QStyleOption</primary></indexterm>_ZNK12QCommonStyle19generatedIconPixmapEN5QIcon4ModeERK7QPixmapPK12QStyleOption <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle21hitTestComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexRK6QPointPK7QWidget</primary></indexterm>_ZNK12QCommonStyle21hitTestComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexRK6QPointPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QCommonStyle9styleHintEN6QStyle9StyleHintEPK12QStyleOptionPK7QWidgetP16QStyleHintReturn</primary></indexterm>_ZNK12QCommonStyle9styleHintEN6QStyle9StyleHintEPK12QStyleOptionPK7QWidgetP16QStyleHintReturn <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics11leftBearingE5QChar</primary></indexterm>_ZNK12QFontMetrics11leftBearingE5QChar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics11lineSpacingEv</primary></indexterm>_ZNK12QFontMetrics11lineSpacingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics11overlinePosEv</primary></indexterm>_ZNK12QFontMetrics11overlinePosEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics12boundingRectE5QChar</primary></indexterm>_ZNK12QFontMetrics12boundingRectE5QChar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics12boundingRectERK5QRectiRK7QStringiPi</primary></indexterm>_ZNK12QFontMetrics12boundingRectERK5QRectiRK7QStringiPi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics12boundingRectERK7QString</primary></indexterm>_ZNK12QFontMetrics12boundingRectERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics12rightBearingE5QChar</primary></indexterm>_ZNK12QFontMetrics12rightBearingE5QChar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics12strikeOutPosEv</primary></indexterm>_ZNK12QFontMetrics12strikeOutPosEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics12underlinePosEv</primary></indexterm>_ZNK12QFontMetrics12underlinePosEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics14minLeftBearingEv</primary></indexterm>_ZNK12QFontMetrics14minLeftBearingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics15minRightBearingEv</primary></indexterm>_ZNK12QFontMetrics15minRightBearingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics4sizeEiRK7QStringiPi</primary></indexterm>_ZNK12QFontMetrics4sizeEiRK7QStringiPi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics5widthE5QChar</primary></indexterm>_ZNK12QFontMetrics5widthE5QChar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics5widthERK7QStringi</primary></indexterm>_ZNK12QFontMetrics5widthERK7QStringi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics6ascentEv</primary></indexterm>_ZNK12QFontMetrics6ascentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics6heightEv</primary></indexterm>_ZNK12QFontMetrics6heightEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics6inFontE5QChar</primary></indexterm>_ZNK12QFontMetrics6inFontE5QChar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics7descentEv</primary></indexterm>_ZNK12QFontMetrics7descentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics7leadingEv</primary></indexterm>_ZNK12QFontMetrics7leadingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics7xHeightEv</primary></indexterm>_ZNK12QFontMetrics7xHeightEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics8maxWidthEv</primary></indexterm>_ZNK12QFontMetrics8maxWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics9charWidthERK7QStringi</primary></indexterm>_ZNK12QFontMetrics9charWidthERK7QStringi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QFontMetrics9lineWidthEv</primary></indexterm>_ZNK12QFontMetrics9lineWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QFontMetricseqERKS_</primary></indexterm>_ZNK12QFontMetricseqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageReader10imageCountEv</primary></indexterm>_ZNK12QImageReader10imageCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageReader10scaledSizeEv</primary></indexterm>_ZNK12QImageReader10scaledSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageReader11errorStringEv</primary></indexterm>_ZNK12QImageReader11errorStringEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageReader14nextImageDelayEv</primary></indexterm>_ZNK12QImageReader14nextImageDelayEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageReader14scaledClipRectEv</primary></indexterm>_ZNK12QImageReader14scaledClipRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageReader15backgroundColorEv</primary></indexterm>_ZNK12QImageReader15backgroundColorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageReader16currentImageRectEv</primary></indexterm>_ZNK12QImageReader16currentImageRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageReader17supportsAnimationEv</primary></indexterm>_ZNK12QImageReader17supportsAnimationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageReader18currentImageNumberEv</primary></indexterm>_ZNK12QImageReader18currentImageNumberEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageReader4sizeEv</primary></indexterm>_ZNK12QImageReader4sizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageReader4textERK7QString</primary></indexterm>_ZNK12QImageReader4textERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageReader5errorEv</primary></indexterm>_ZNK12QImageReader5errorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageReader6deviceEv</primary></indexterm>_ZNK12QImageReader6deviceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageReader6formatEv</primary></indexterm>_ZNK12QImageReader6formatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageReader7canReadEv</primary></indexterm>_ZNK12QImageReader7canReadEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageReader8clipRectEv</primary></indexterm>_ZNK12QImageReader8clipRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageReader8fileNameEv</primary></indexterm>_ZNK12QImageReader8fileNameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageReader8textKeysEv</primary></indexterm>_ZNK12QImageReader8textKeysEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageReader9loopCountEv</primary></indexterm>_ZNK12QImageReader9loopCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageWriter11descriptionEv</primary></indexterm>_ZNK12QImageWriter11descriptionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageWriter11errorStringEv</primary></indexterm>_ZNK12QImageWriter11errorStringEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageWriter5errorEv</primary></indexterm>_ZNK12QImageWriter5errorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageWriter5gammaEv</primary></indexterm>_ZNK12QImageWriter5gammaEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageWriter6deviceEv</primary></indexterm>_ZNK12QImageWriter6deviceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageWriter6formatEv</primary></indexterm>_ZNK12QImageWriter6formatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageWriter7qualityEv</primary></indexterm>_ZNK12QImageWriter7qualityEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QImageWriter8canWriteEv</primary></indexterm>_ZNK12QImageWriter8canWriteEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QImageWriter8fileNameEv</primary></indexterm>_ZNK12QImageWriter8fileNameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QInputDialog10metaObjectEv</primary></indexterm>_ZNK12QInputDialog10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QKeySequence10isDetachedEv</primary></indexterm>_ZNK12QKeySequence10isDetachedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QKeySequence5countEv</primary></indexterm>_ZNK12QKeySequence5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QKeySequence7isEmptyEv</primary></indexterm>_ZNK12QKeySequence7isEmptyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QKeySequence7matchesERKS_</primary></indexterm>_ZNK12QKeySequence7matchesERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QKeySequence8toStringENS_14SequenceFormatE</primary></indexterm>_ZNK12QKeySequence8toStringENS_14SequenceFormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QKeySequencecv7QStringEv</primary></indexterm>_ZNK12QKeySequencecv7QStringEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QKeySequencecv8QVariantEv</primary></indexterm>_ZNK12QKeySequencecv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QKeySequencecviEv</primary></indexterm>_ZNK12QKeySequencecviEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QKeySequenceeqERKS_</primary></indexterm>_ZNK12QKeySequenceeqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QKeySequenceixEj</primary></indexterm>_ZNK12QKeySequenceixEj <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QKeySequenceltERKS_</primary></indexterm>_ZNK12QKeySequenceltERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPaintDevice10x11DisplayEv</primary></indexterm>_ZNK12QPaintDevice10x11DisplayEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPaintDevice11x11ColormapEv</primary></indexterm>_ZNK12QPaintDevice11x11ColormapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPaintDevice16x11DefaultVisualEv</primary></indexterm>_ZNK12QPaintDevice16x11DefaultVisualEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPaintDevice18x11DefaultColormapEv</primary></indexterm>_ZNK12QPaintDevice18x11DefaultColormapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPaintDevice6metricENS_17PaintDeviceMetricE</primary></indexterm>_ZNK12QPaintDevice6metricENS_17PaintDeviceMetricE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPaintDevice8x11CellsEv</primary></indexterm>_ZNK12QPaintDevice8x11CellsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPaintDevice8x11DepthEv</primary></indexterm>_ZNK12QPaintDevice8x11DepthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPaintDevice9x11ScreenEv</primary></indexterm>_ZNK12QPaintDevice9x11ScreenEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPaintDevice9x11VisualEv</primary></indexterm>_ZNK12QPaintDevice9x11VisualEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPaintEngine10systemClipEv</primary></indexterm>_ZNK12QPaintEngine10systemClipEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPaintEngine10systemRectEv</primary></indexterm>_ZNK12QPaintEngine10systemRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPaintEngine11paintDeviceEv</primary></indexterm>_ZNK12QPaintEngine11paintDeviceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPaintEngine16coordinateOffsetEv</primary></indexterm>_ZNK12QPaintEngine16coordinateOffsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPaintEngine7painterEv</primary></indexterm>_ZNK12QPaintEngine7painterEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPainterPath10intersectsERK6QRectF</primary></indexterm>_ZNK12QPainterPath10intersectsERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPainterPath10toReversedEv</primary></indexterm>_ZNK12QPainterPath10toReversedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPainterPath12boundingRectEv</primary></indexterm>_ZNK12QPainterPath12boundingRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPainterPath13toFillPolygonERK7QMatrix</primary></indexterm>_ZNK12QPainterPath13toFillPolygonERK7QMatrix <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPainterPath14toFillPolygonsERK7QMatrix</primary></indexterm>_ZNK12QPainterPath14toFillPolygonsERK7QMatrix <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPainterPath15currentPositionEv</primary></indexterm>_ZNK12QPainterPath15currentPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPainterPath16controlPointRectEv</primary></indexterm>_ZNK12QPainterPath16controlPointRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPainterPath17toSubpathPolygonsERK7QMatrix</primary></indexterm>_ZNK12QPainterPath17toSubpathPolygonsERK7QMatrix <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPainterPath8containsERK6QRectF</primary></indexterm>_ZNK12QPainterPath8containsERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPainterPath8containsERK7QPointF</primary></indexterm>_ZNK12QPainterPath8containsERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPainterPath8fillRuleEv</primary></indexterm>_ZNK12QPainterPath8fillRuleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPainterPatheqERKS_</primary></indexterm>_ZNK12QPainterPatheqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPainterPathneERKS_</primary></indexterm>_ZNK12QPainterPathneERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QPrintDialog10metaObjectEv</primary></indexterm>_ZNK12QPrintDialog10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QPrintDialog7printerEv</primary></indexterm>_ZNK12QPrintDialog7printerEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QProgressBar10metaObjectEv</primary></indexterm>_ZNK12QProgressBar10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QProgressBar11orientationEv</primary></indexterm>_ZNK12QProgressBar11orientationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QProgressBar13isTextVisibleEv</primary></indexterm>_ZNK12QProgressBar13isTextVisibleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QProgressBar15minimumSizeHintEv</primary></indexterm>_ZNK12QProgressBar15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QProgressBar4textEv</primary></indexterm>_ZNK12QProgressBar4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QProgressBar5valueEv</primary></indexterm>_ZNK12QProgressBar5valueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QProgressBar7maximumEv</primary></indexterm>_ZNK12QProgressBar7maximumEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QProgressBar7minimumEv</primary></indexterm>_ZNK12QProgressBar7minimumEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QProgressBar8sizeHintEv</primary></indexterm>_ZNK12QProgressBar8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QProgressBar9alignmentEv</primary></indexterm>_ZNK12QProgressBar9alignmentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QRadioButton10metaObjectEv</primary></indexterm>_ZNK12QRadioButton10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QRadioButton8sizeHintEv</primary></indexterm>_ZNK12QRadioButton8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QRadioButton9hitButtonERK6QPoint</primary></indexterm>_ZNK12QRadioButton9hitButtonERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QStylePlugin10metaObjectEv</primary></indexterm>_ZNK12QStylePlugin10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget10cellWidgetEii</primary></indexterm>_ZNK12QTableWidget10cellWidgetEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget10currentRowEv</primary></indexterm>_ZNK12QTableWidget10currentRowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget10metaObjectEv</primary></indexterm>_ZNK12QTableWidget10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget11columnCountEv</primary></indexterm>_ZNK12QTableWidget11columnCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget11currentItemEv</primary></indexterm>_ZNK12QTableWidget11currentItemEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget12visualColumnEi</primary></indexterm>_ZNK12QTableWidget12visualColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget13currentColumnEv</primary></indexterm>_ZNK12QTableWidget13currentColumnEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget13indexFromItemEP16QTableWidgetItem</primary></indexterm>_ZNK12QTableWidget13indexFromItemEP16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget13itemFromIndexERK11QModelIndex</primary></indexterm>_ZNK12QTableWidget13itemFromIndexERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget13itemPrototypeEv</primary></indexterm>_ZNK12QTableWidget13itemPrototypeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget14isItemSelectedEPK16QTableWidgetItem</primary></indexterm>_ZNK12QTableWidget14isItemSelectedEPK16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget14selectedRangesEv</primary></indexterm>_ZNK12QTableWidget14selectedRangesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget14visualItemRectEPK16QTableWidgetItem</primary></indexterm>_ZNK12QTableWidget14visualItemRectEPK16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget16isSortingEnabledEv</primary></indexterm>_ZNK12QTableWidget16isSortingEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget18verticalHeaderItemEi</primary></indexterm>_ZNK12QTableWidget18verticalHeaderItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget20horizontalHeaderItemEi</primary></indexterm>_ZNK12QTableWidget20horizontalHeaderItemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget20supportedDropActionsEv</primary></indexterm>_ZNK12QTableWidget20supportedDropActionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget3rowEPK16QTableWidgetItem</primary></indexterm>_ZNK12QTableWidget3rowEPK16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget4itemEii</primary></indexterm>_ZNK12QTableWidget4itemEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget5itemsEPK9QMimeData</primary></indexterm>_ZNK12QTableWidget5itemsEPK9QMimeData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget6columnEPK16QTableWidgetItem</primary></indexterm>_ZNK12QTableWidget6columnEPK16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget6itemAtERK6QPoint</primary></indexterm>_ZNK12QTableWidget6itemAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget8mimeDataE5QListIP16QTableWidgetItemE</primary></indexterm>_ZNK12QTableWidget8mimeDataE5QListIP16QTableWidgetItemE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget8rowCountEv</primary></indexterm>_ZNK12QTableWidget8rowCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEE</primary></indexterm>_ZNK12QTableWidget9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTableWidget9mimeTypesEv</primary></indexterm>_ZNK12QTableWidget9mimeTypesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTableWidget9visualRowEi</primary></indexterm>_ZNK12QTableWidget9visualRowEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTextBrowser10metaObjectEv</primary></indexterm>_ZNK12QTextBrowser10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK12QTextBrowser11searchPathsEv</primary></indexterm>_ZNK12QTextBrowser11searchPathsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK12QTextBrowser6sourceEv</primary></indexterm>_ZNK12QTextBrowser6sourceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit10metaObjectEv</primary></indexterm>_ZNK13QDateTimeEdit10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit11maximumDateEv</primary></indexterm>_ZNK13QDateTimeEdit11maximumDateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit11maximumTimeEv</primary></indexterm>_ZNK13QDateTimeEdit11maximumTimeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit11minimumDateEv</primary></indexterm>_ZNK13QDateTimeEdit11minimumDateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit11minimumTimeEv</primary></indexterm>_ZNK13QDateTimeEdit11minimumTimeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit11sectionTextENS_7SectionE</primary></indexterm>_ZNK13QDateTimeEdit11sectionTextENS_7SectionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit11stepEnabledEv</primary></indexterm>_ZNK13QDateTimeEdit11stepEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit13displayFormatEv</primary></indexterm>_ZNK13QDateTimeEdit13displayFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit14currentSectionEv</primary></indexterm>_ZNK13QDateTimeEdit14currentSectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit16dateTimeFromTextERK7QString</primary></indexterm>_ZNK13QDateTimeEdit16dateTimeFromTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit16textFromDateTimeERK9QDateTime</primary></indexterm>_ZNK13QDateTimeEdit16textFromDateTimeERK9QDateTime <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit17displayedSectionsEv</primary></indexterm>_ZNK13QDateTimeEdit17displayedSectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit4dateEv</primary></indexterm>_ZNK13QDateTimeEdit4dateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit4timeEv</primary></indexterm>_ZNK13QDateTimeEdit4timeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit5fixupER7QString</primary></indexterm>_ZNK13QDateTimeEdit5fixupER7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit8dateTimeEv</primary></indexterm>_ZNK13QDateTimeEdit8dateTimeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit8sizeHintEv</primary></indexterm>_ZNK13QDateTimeEdit8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QDateTimeEdit8validateER7QStringRi</primary></indexterm>_ZNK13QDateTimeEdit8validateER7QStringRi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QErrorMessage10metaObjectEv</primary></indexterm>_ZNK13QErrorMessage10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontDatabase10isScalableERK7QStringS2_</primary></indexterm>_ZNK13QFontDatabase10isScalableERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontDatabase12isFixedPitchERK7QStringS2_</primary></indexterm>_ZNK13QFontDatabase12isFixedPitchERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontDatabase14writingSystemsEv</primary></indexterm>_ZNK13QFontDatabase14writingSystemsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontDatabase16isBitmapScalableERK7QStringS2_</primary></indexterm>_ZNK13QFontDatabase16isBitmapScalableERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontDatabase18isSmoothlyScalableERK7QStringS2_</primary></indexterm>_ZNK13QFontDatabase18isSmoothlyScalableERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontDatabase4boldERK7QStringS2_</primary></indexterm>_ZNK13QFontDatabase4boldERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontDatabase4fontERK7QStringS2_i</primary></indexterm>_ZNK13QFontDatabase4fontERK7QStringS2_i <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontDatabase6italicERK7QStringS2_</primary></indexterm>_ZNK13QFontDatabase6italicERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontDatabase6stylesERK7QString</primary></indexterm>_ZNK13QFontDatabase6stylesERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontDatabase6weightERK7QStringS2_</primary></indexterm>_ZNK13QFontDatabase6weightERK7QStringS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontDatabase8familiesENS_13WritingSystemE</primary></indexterm>_ZNK13QFontDatabase8familiesENS_13WritingSystemE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF11leftBearingE5QChar</primary></indexterm>_ZNK13QFontMetricsF11leftBearingE5QChar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF11lineSpacingEv</primary></indexterm>_ZNK13QFontMetricsF11lineSpacingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF11overlinePosEv</primary></indexterm>_ZNK13QFontMetricsF11overlinePosEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF12boundingRectE5QChar</primary></indexterm>_ZNK13QFontMetricsF12boundingRectE5QChar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF12boundingRectERK6QRectFiRK7QStringiPi</primary></indexterm>_ZNK13QFontMetricsF12boundingRectERK6QRectFiRK7QStringiPi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF12boundingRectERK7QString</primary></indexterm>_ZNK13QFontMetricsF12boundingRectERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF12rightBearingE5QChar</primary></indexterm>_ZNK13QFontMetricsF12rightBearingE5QChar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF12strikeOutPosEv</primary></indexterm>_ZNK13QFontMetricsF12strikeOutPosEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF12underlinePosEv</primary></indexterm>_ZNK13QFontMetricsF12underlinePosEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF14minLeftBearingEv</primary></indexterm>_ZNK13QFontMetricsF14minLeftBearingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF15minRightBearingEv</primary></indexterm>_ZNK13QFontMetricsF15minRightBearingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF4sizeEiRK7QStringiPi</primary></indexterm>_ZNK13QFontMetricsF4sizeEiRK7QStringiPi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF5widthE5QChar</primary></indexterm>_ZNK13QFontMetricsF5widthE5QChar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF5widthERK7QString</primary></indexterm>_ZNK13QFontMetricsF5widthERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF6ascentEv</primary></indexterm>_ZNK13QFontMetricsF6ascentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF6heightEv</primary></indexterm>_ZNK13QFontMetricsF6heightEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF6inFontE5QChar</primary></indexterm>_ZNK13QFontMetricsF6inFontE5QChar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF7descentEv</primary></indexterm>_ZNK13QFontMetricsF7descentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF7leadingEv</primary></indexterm>_ZNK13QFontMetricsF7leadingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF7xHeightEv</primary></indexterm>_ZNK13QFontMetricsF7xHeightEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF8maxWidthEv</primary></indexterm>_ZNK13QFontMetricsF8maxWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsF9lineWidthEv</primary></indexterm>_ZNK13QFontMetricsF9lineWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QFontMetricsFeqERKS_</primary></indexterm>_ZNK13QFontMetricsFeqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QInputContext10metaObjectEv</primary></indexterm>_ZNK13QInputContext10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QInputContext11focusWidgetEv</primary></indexterm>_ZNK13QInputContext11focusWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QInputContext14standardFormatENS_14StandardFormatE</primary></indexterm>_ZNK13QInputContext14standardFormatENS_14StandardFormatE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QInputContext4fontEv</primary></indexterm>_ZNK13QInputContext4fontEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QIntValidator10metaObjectEv</primary></indexterm>_ZNK13QIntValidator10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QIntValidator8validateER7QStringRi</primary></indexterm>_ZNK13QIntValidator8validateER7QStringRi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate10decorationERK20QStyleOptionViewItemRK8QVariant</primary></indexterm>_ZNK13QItemDelegate10decorationERK20QStyleOptionViewItemRK8QVariant <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate10metaObjectEv</primary></indexterm>_ZNK13QItemDelegate10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate11drawDisplayEP8QPainterRK20QStyleOptionViewItemRK5QRectRK7QString</primary></indexterm>_ZNK13QItemDelegate11drawDisplayEP8QPainterRK20QStyleOptionViewItemRK5QRectRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate12createEditorEP7QWidgetRK20QStyleOptionViewItemRK11QModelIndex</primary></indexterm>_ZNK13QItemDelegate12createEditorEP7QWidgetRK20QStyleOptionViewItemRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate12setModelDataEP7QWidgetP18QAbstractItemModelRK11QModelIndex</primary></indexterm>_ZNK13QItemDelegate12setModelDataEP7QWidgetP18QAbstractItemModelRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate13setEditorDataEP7QWidgetRK11QModelIndex</primary></indexterm>_ZNK13QItemDelegate13setEditorDataEP7QWidgetRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate14drawDecorationEP8QPainterRK20QStyleOptionViewItemRK5QRectRK7QPixmap</primary></indexterm>_ZNK13QItemDelegate14drawDecorationEP8QPainterRK20QStyleOptionViewItemRK5QRectRK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate17itemEditorFactoryEv</primary></indexterm>_ZNK13QItemDelegate17itemEditorFactoryEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate20updateEditorGeometryEP7QWidgetRK20QStyleOptionViewItemRK11QModelIndex</primary></indexterm>_ZNK13QItemDelegate20updateEditorGeometryEP7QWidgetRK20QStyleOptionViewItemRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate5checkERK20QStyleOptionViewItemRK5QRectRK8QVariant</primary></indexterm>_ZNK13QItemDelegate5checkERK20QStyleOptionViewItemRK5QRectRK8QVariant <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate5paintEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex</primary></indexterm>_ZNK13QItemDelegate5paintEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate8doLayoutERK20QStyleOptionViewItemP5QRectS4_S4_b</primary></indexterm>_ZNK13QItemDelegate8doLayoutERK20QStyleOptionViewItemP5QRectS4_S4_b <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate8selectedERK7QPixmapRK8QPaletteb</primary></indexterm>_ZNK13QItemDelegate8selectedERK7QPixmapRK8QPaletteb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate8sizeHintERK20QStyleOptionViewItemRK11QModelIndex</primary></indexterm>_ZNK13QItemDelegate8sizeHintERK20QStyleOptionViewItemRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate9drawCheckEP8QPainterRK20QStyleOptionViewItemRK5QRectN2Qt10CheckStateE</primary></indexterm>_ZNK13QItemDelegate9drawCheckEP8QPainterRK20QStyleOptionViewItemRK5QRectN2Qt10CheckStateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QItemDelegate9drawFocusEP8QPainterRK20QStyleOptionViewItemRK5QRect</primary></indexterm>_ZNK13QItemDelegate9drawFocusEP8QPainterRK20QStyleOptionViewItemRK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QSplashScreen10metaObjectEv</primary></indexterm>_ZNK13QSplashScreen10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QSplashScreen6pixmapEv</primary></indexterm>_ZNK13QSplashScreen6pixmapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument10allFormatsEv</primary></indexterm>_ZNK13QTextDocument10allFormatsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument10isModifiedEv</primary></indexterm>_ZNK13QTextDocument10isModifiedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument10metaObjectEv</primary></indexterm>_ZNK13QTextDocument10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument11defaultFontEv</primary></indexterm>_ZNK13QTextDocument11defaultFontEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument11toPlainTextEv</primary></indexterm>_ZNK13QTextDocument11toPlainTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument14documentLayoutEv</primary></indexterm>_ZNK13QTextDocument14documentLayoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument15isRedoAvailableEv</primary></indexterm>_ZNK13QTextDocument15isRedoAvailableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument15isUndoAvailableEv</primary></indexterm>_ZNK13QTextDocument15isUndoAvailableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument15metaInformationENS_15MetaInformationE</primary></indexterm>_ZNK13QTextDocument15metaInformationENS_15MetaInformationE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument15objectForFormatERK11QTextFormat</primary></indexterm>_ZNK13QTextDocument15objectForFormatERK11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument16useDesignMetricsEv</primary></indexterm>_ZNK13QTextDocument16useDesignMetricsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument17isUndoRedoEnabledEv</primary></indexterm>_ZNK13QTextDocument17isUndoRedoEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument3endEv</primary></indexterm>_ZNK13QTextDocument3endEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument4findERK7QStringRK11QTextCursor6QFlagsINS_8FindFlagEE</primary></indexterm>_ZNK13QTextDocument4findERK7QStringRK11QTextCursor6QFlagsINS_8FindFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument4findERK7QStringi6QFlagsINS_8FindFlagEE</primary></indexterm>_ZNK13QTextDocument4findERK7QStringi6QFlagsINS_8FindFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument5beginEv</primary></indexterm>_ZNK13QTextDocument5beginEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument5cloneEP7QObject</primary></indexterm>_ZNK13QTextDocument5cloneEP7QObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument5printEP8QPrinter</primary></indexterm>_ZNK13QTextDocument5printEP8QPrinter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument6objectEi</primary></indexterm>_ZNK13QTextDocument6objectEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument6toHtmlERK10QByteArray</primary></indexterm>_ZNK13QTextDocument6toHtmlERK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument7frameAtEi</primary></indexterm>_ZNK13QTextDocument7frameAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument7isEmptyEv</primary></indexterm>_ZNK13QTextDocument7isEmptyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument8pageSizeEv</primary></indexterm>_ZNK13QTextDocument8pageSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument8resourceEiRK4QUrl</primary></indexterm>_ZNK13QTextDocument8resourceEiRK4QUrl <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument9docHandleEv</primary></indexterm>_ZNK13QTextDocument9docHandleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument9findBlockEi</primary></indexterm>_ZNK13QTextDocument9findBlockEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextDocument9pageCountEv</primary></indexterm>_ZNK13QTextDocument9pageCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextDocument9rootFrameEv</primary></indexterm>_ZNK13QTextDocument9rootFrameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextFragment10charFormatEv</primary></indexterm>_ZNK13QTextFragment10charFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextFragment15charFormatIndexEv</primary></indexterm>_ZNK13QTextFragment15charFormatIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextFragment4textEv</primary></indexterm>_ZNK13QTextFragment4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextFragment6lengthEv</primary></indexterm>_ZNK13QTextFragment6lengthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QTextFragment8containsEi</primary></indexterm>_ZNK13QTextFragment8containsEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QTextFragment8positionEv</primary></indexterm>_ZNK13QTextFragment8positionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QWindowsStyle10metaObjectEv</primary></indexterm>_ZNK13QWindowsStyle10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QWindowsStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget</primary></indexterm>_ZNK13QWindowsStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QWindowsStyle11pixelMetricEN6QStyle11PixelMetricEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK13QWindowsStyle11pixelMetricEN6QStyle11PixelMetricEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QWindowsStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget</primary></indexterm>_ZNK13QWindowsStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QWindowsStyle14standardPixmapEN6QStyle14StandardPixmapEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK13QWindowsStyle14standardPixmapEN6QStyle14StandardPixmapEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QWindowsStyle14subElementRectEN6QStyle10SubElementEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK13QWindowsStyle14subElementRectEN6QStyle10SubElementEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QWindowsStyle16sizeFromContentsEN6QStyle12ContentsTypeEPK12QStyleOptionRK5QSizePK7QWidget</primary></indexterm>_ZNK13QWindowsStyle16sizeFromContentsEN6QStyle12ContentsTypeEPK12QStyleOptionRK5QSizePK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK13QWindowsStyle18drawComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexP8QPainterPK7QWidget</primary></indexterm>_ZNK13QWindowsStyle18drawComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK13QWindowsStyle9styleHintEN6QStyle9StyleHintEPK12QStyleOptionPK7QWidgetP16QStyleHintReturn</primary></indexterm>_ZNK13QWindowsStyle9styleHintEN6QStyle9StyleHintEPK12QStyleOptionPK7QWidgetP16QStyleHintReturn <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QDesktopWidget10metaObjectEv</primary></indexterm>_ZNK14QDesktopWidget10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QDesktopWidget10numScreensEv</primary></indexterm>_ZNK14QDesktopWidget10numScreensEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QDesktopWidget12screenNumberEPK7QWidget</primary></indexterm>_ZNK14QDesktopWidget12screenNumberEPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QDesktopWidget12screenNumberERK6QPoint</primary></indexterm>_ZNK14QDesktopWidget12screenNumberERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QDesktopWidget13primaryScreenEv</primary></indexterm>_ZNK14QDesktopWidget13primaryScreenEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QDesktopWidget14screenGeometryEi</primary></indexterm>_ZNK14QDesktopWidget14screenGeometryEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QDesktopWidget16isVirtualDesktopEv</primary></indexterm>_ZNK14QDesktopWidget16isVirtualDesktopEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QDesktopWidget17availableGeometryEi</primary></indexterm>_ZNK14QDesktopWidget17availableGeometryEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox10metaObjectEv</primary></indexterm>_ZNK14QDoubleSpinBox10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox10singleStepEv</primary></indexterm>_ZNK14QDoubleSpinBox10singleStepEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox13textFromValueEd</primary></indexterm>_ZNK14QDoubleSpinBox13textFromValueEd <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox13valueFromTextERK7QString</primary></indexterm>_ZNK14QDoubleSpinBox13valueFromTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox5fixupER7QString</primary></indexterm>_ZNK14QDoubleSpinBox5fixupER7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox5valueEv</primary></indexterm>_ZNK14QDoubleSpinBox5valueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox6prefixEv</primary></indexterm>_ZNK14QDoubleSpinBox6prefixEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox6suffixEv</primary></indexterm>_ZNK14QDoubleSpinBox6suffixEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox7maximumEv</primary></indexterm>_ZNK14QDoubleSpinBox7maximumEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox7minimumEv</primary></indexterm>_ZNK14QDoubleSpinBox7minimumEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox8decimalsEv</primary></indexterm>_ZNK14QDoubleSpinBox8decimalsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox8validateER7QStringRi</primary></indexterm>_ZNK14QDoubleSpinBox8validateER7QStringRi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QDoubleSpinBox9cleanTextEv</primary></indexterm>_ZNK14QDoubleSpinBox9cleanTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QImageIOPlugin10metaObjectEv</primary></indexterm>_ZNK14QImageIOPlugin10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QItemSelection7indexesEv</primary></indexterm>_ZNK14QItemSelection7indexesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QItemSelection8containsERK11QModelIndex</primary></indexterm>_ZNK14QItemSelection8containsERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QStackedLayout10metaObjectEv</primary></indexterm>_ZNK14QStackedLayout10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QStackedLayout11minimumSizeEv</primary></indexterm>_ZNK14QStackedLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QStackedLayout12currentIndexEv</primary></indexterm>_ZNK14QStackedLayout12currentIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QStackedLayout13currentWidgetEv</primary></indexterm>_ZNK14QStackedLayout13currentWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QStackedLayout5countEv</primary></indexterm>_ZNK14QStackedLayout5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QStackedLayout6itemAtEi</primary></indexterm>_ZNK14QStackedLayout6itemAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QStackedLayout6widgetEi</primary></indexterm>_ZNK14QStackedLayout6widgetEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QStackedLayout8sizeHintEv</primary></indexterm>_ZNK14QStackedLayout8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QStackedWidget10metaObjectEv</primary></indexterm>_ZNK14QStackedWidget10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QStackedWidget12currentIndexEv</primary></indexterm>_ZNK14QStackedWidget12currentIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QStackedWidget13currentWidgetEv</primary></indexterm>_ZNK14QStackedWidget13currentWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QStackedWidget5countEv</primary></indexterm>_ZNK14QStackedWidget5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QStackedWidget6widgetEi</primary></indexterm>_ZNK14QStackedWidget6widgetEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QStackedWidget7indexOfEP7QWidget</primary></indexterm>_ZNK14QStackedWidget7indexOfEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QTextTableCell10columnSpanEv</primary></indexterm>_ZNK14QTextTableCell10columnSpanEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QTextTableCell12lastPositionEv</primary></indexterm>_ZNK14QTextTableCell12lastPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QTextTableCell13firstPositionEv</primary></indexterm>_ZNK14QTextTableCell13firstPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QTextTableCell18lastCursorPositionEv</primary></indexterm>_ZNK14QTextTableCell18lastCursorPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QTextTableCell19firstCursorPositionEv</primary></indexterm>_ZNK14QTextTableCell19firstCursorPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QTextTableCell3endEv</primary></indexterm>_ZNK14QTextTableCell3endEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QTextTableCell3rowEv</primary></indexterm>_ZNK14QTextTableCell3rowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QTextTableCell5beginEv</primary></indexterm>_ZNK14QTextTableCell5beginEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QTextTableCell6columnEv</primary></indexterm>_ZNK14QTextTableCell6columnEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK14QTextTableCell6formatEv</primary></indexterm>_ZNK14QTextTableCell6formatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK14QTextTableCell7rowSpanEv</primary></indexterm>_ZNK14QTextTableCell7rowSpanEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton10autoRepeatEv</primary></indexterm>_ZNK15QAbstractButton10autoRepeatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton10metaObjectEv</primary></indexterm>_ZNK15QAbstractButton10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton11isCheckableEv</primary></indexterm>_ZNK15QAbstractButton11isCheckableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton13autoExclusiveEv</primary></indexterm>_ZNK15QAbstractButton13autoExclusiveEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton4iconEv</primary></indexterm>_ZNK15QAbstractButton4iconEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton4textEv</primary></indexterm>_ZNK15QAbstractButton4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton5groupEv</primary></indexterm>_ZNK15QAbstractButton5groupEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton6isDownEv</primary></indexterm>_ZNK15QAbstractButton6isDownEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton7iconSetEv</primary></indexterm>_ZNK15QAbstractButton7iconSetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton8iconSizeEv</primary></indexterm>_ZNK15QAbstractButton8iconSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton8shortcutEv</primary></indexterm>_ZNK15QAbstractButton8shortcutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton9hitButtonERK6QPoint</primary></indexterm>_ZNK15QAbstractButton9hitButtonERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractButton9isCheckedEv</primary></indexterm>_ZNK15QAbstractButton9isCheckedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider10metaObjectEv</primary></indexterm>_ZNK15QAbstractSlider10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider10singleStepEv</primary></indexterm>_ZNK15QAbstractSlider10singleStepEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider11hasTrackingEv</primary></indexterm>_ZNK15QAbstractSlider11hasTrackingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider11orientationEv</primary></indexterm>_ZNK15QAbstractSlider11orientationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider12isSliderDownEv</primary></indexterm>_ZNK15QAbstractSlider12isSliderDownEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider12repeatActionEv</primary></indexterm>_ZNK15QAbstractSlider12repeatActionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider14sliderPositionEv</primary></indexterm>_ZNK15QAbstractSlider14sliderPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider16invertedControlsEv</primary></indexterm>_ZNK15QAbstractSlider16invertedControlsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider18invertedAppearanceEv</primary></indexterm>_ZNK15QAbstractSlider18invertedAppearanceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider5valueEv</primary></indexterm>_ZNK15QAbstractSlider5valueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider7maximumEv</primary></indexterm>_ZNK15QAbstractSlider7maximumEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider7minimumEv</primary></indexterm>_ZNK15QAbstractSlider7minimumEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QAbstractSlider8pageStepEv</primary></indexterm>_ZNK15QAbstractSlider8pageStepEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QImageIOHandler10imageCountEv</primary></indexterm>_ZNK15QImageIOHandler10imageCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QImageIOHandler14nextImageDelayEv</primary></indexterm>_ZNK15QImageIOHandler14nextImageDelayEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QImageIOHandler14supportsOptionENS_11ImageOptionE</primary></indexterm>_ZNK15QImageIOHandler14supportsOptionENS_11ImageOptionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QImageIOHandler16currentImageRectEv</primary></indexterm>_ZNK15QImageIOHandler16currentImageRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QImageIOHandler18currentImageNumberEv</primary></indexterm>_ZNK15QImageIOHandler18currentImageNumberEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QImageIOHandler4nameEv</primary></indexterm>_ZNK15QImageIOHandler4nameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QImageIOHandler6deviceEv</primary></indexterm>_ZNK15QImageIOHandler6deviceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QImageIOHandler6formatEv</primary></indexterm>_ZNK15QImageIOHandler6formatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QImageIOHandler6optionENS_11ImageOptionE</primary></indexterm>_ZNK15QImageIOHandler6optionENS_11ImageOptionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QImageIOHandler9loopCountEv</primary></indexterm>_ZNK15QImageIOHandler9loopCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QImageIOHandler9setFormatERK10QByteArray</primary></indexterm>_ZNK15QImageIOHandler9setFormatERK10QByteArray <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QLinearGradient5startEv</primary></indexterm>_ZNK15QLinearGradient5startEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QLinearGradient9finalStopEv</primary></indexterm>_ZNK15QLinearGradient9finalStopEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QListWidgetItem4dataEi</primary></indexterm>_ZNK15QListWidgetItem4dataEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QListWidgetItem5cloneEv</primary></indexterm>_ZNK15QListWidgetItem5cloneEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QListWidgetItem5writeER11QDataStream</primary></indexterm>_ZNK15QListWidgetItem5writeER11QDataStream <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QListWidgetItemltERKS_</primary></indexterm>_ZNK15QListWidgetItemltERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QPlastiqueStyle10metaObjectEv</primary></indexterm>_ZNK15QPlastiqueStyle10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QPlastiqueStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget</primary></indexterm>_ZNK15QPlastiqueStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QPlastiqueStyle11pixelMetricEN6QStyle11PixelMetricEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK15QPlastiqueStyle11pixelMetricEN6QStyle11PixelMetricEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QPlastiqueStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget</primary></indexterm>_ZNK15QPlastiqueStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QPlastiqueStyle14subControlRectEN6QStyle14ComplexControlEPK19QStyleOptionComplexNS0_10SubControlEPK7QWidget</primary></indexterm>_ZNK15QPlastiqueStyle14subControlRectEN6QStyle14ComplexControlEPK19QStyleOptionComplexNS0_10SubControlEPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QPlastiqueStyle14subElementRectEN6QStyle10SubElementEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK15QPlastiqueStyle14subElementRectEN6QStyle10SubElementEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QPlastiqueStyle15standardPaletteEv</primary></indexterm>_ZNK15QPlastiqueStyle15standardPaletteEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QPlastiqueStyle16sizeFromContentsEN6QStyle12ContentsTypeEPK12QStyleOptionRK5QSizePK7QWidget</primary></indexterm>_ZNK15QPlastiqueStyle16sizeFromContentsEN6QStyle12ContentsTypeEPK12QStyleOptionRK5QSizePK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QPlastiqueStyle18drawComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexP8QPainterPK7QWidget</primary></indexterm>_ZNK15QPlastiqueStyle18drawComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QPlastiqueStyle21hitTestComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexRK6QPointPK7QWidget</primary></indexterm>_ZNK15QPlastiqueStyle21hitTestComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexRK6QPointPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QPlastiqueStyle9styleHintEN6QStyle9StyleHintEPK12QStyleOptionPK7QWidgetP16QStyleHintReturn</primary></indexterm>_ZNK15QPlastiqueStyle9styleHintEN6QStyle9StyleHintEPK12QStyleOptionPK7QWidgetP16QStyleHintReturn <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QProgressDialog10metaObjectEv</primary></indexterm>_ZNK15QProgressDialog10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QProgressDialog11wasCanceledEv</primary></indexterm>_ZNK15QProgressDialog11wasCanceledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QProgressDialog15minimumDurationEv</primary></indexterm>_ZNK15QProgressDialog15minimumDurationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QProgressDialog5valueEv</primary></indexterm>_ZNK15QProgressDialog5valueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QProgressDialog7maximumEv</primary></indexterm>_ZNK15QProgressDialog7maximumEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QProgressDialog7minimumEv</primary></indexterm>_ZNK15QProgressDialog7minimumEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QProgressDialog8sizeHintEv</primary></indexterm>_ZNK15QProgressDialog8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QProgressDialog9autoCloseEv</primary></indexterm>_ZNK15QProgressDialog9autoCloseEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QProgressDialog9autoResetEv</primary></indexterm>_ZNK15QProgressDialog9autoResetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QProgressDialog9labelTextEv</primary></indexterm>_ZNK15QProgressDialog9labelTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QRadialGradient10focalPointEv</primary></indexterm>_ZNK15QRadialGradient10focalPointEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QRadialGradient6centerEv</primary></indexterm>_ZNK15QRadialGradient6centerEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QRadialGradient6radiusEv</primary></indexterm>_ZNK15QRadialGradient6radiusEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QSessionManager10metaObjectEv</primary></indexterm>_ZNK15QSessionManager10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QSessionManager10sessionKeyEv</primary></indexterm>_ZNK15QSessionManager10sessionKeyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QSessionManager11restartHintEv</primary></indexterm>_ZNK15QSessionManager11restartHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QSessionManager14discardCommandEv</primary></indexterm>_ZNK15QSessionManager14discardCommandEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QSessionManager14restartCommandEv</primary></indexterm>_ZNK15QSessionManager14restartCommandEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QSessionManager6handleEv</primary></indexterm>_ZNK15QSessionManager6handleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QSessionManager8isPhase2Ev</primary></indexterm>_ZNK15QSessionManager8isPhase2Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QSessionManager9sessionIdEv</primary></indexterm>_ZNK15QSessionManager9sessionIdEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QSplitterHandle10metaObjectEv</primary></indexterm>_ZNK15QSplitterHandle10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QSplitterHandle11orientationEv</primary></indexterm>_ZNK15QSplitterHandle11orientationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QSplitterHandle12opaqueResizeEv</primary></indexterm>_ZNK15QSplitterHandle12opaqueResizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QSplitterHandle8sizeHintEv</primary></indexterm>_ZNK15QSplitterHandle8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QSplitterHandle8splitterEv</primary></indexterm>_ZNK15QSplitterHandle8splitterEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QTextBlockGroup10metaObjectEv</primary></indexterm>_ZNK15QTextBlockGroup10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QTextBlockGroup9blockListEv</primary></indexterm>_ZNK15QTextBlockGroup9blockListEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QTextCharFormat4fontEv</primary></indexterm>_ZNK15QTextCharFormat4fontEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QTreeWidgetItem4dataEii</primary></indexterm>_ZNK15QTreeWidgetItem4dataEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QTreeWidgetItem5cloneEv</primary></indexterm>_ZNK15QTreeWidgetItem5cloneEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK15QTreeWidgetItem5writeER11QDataStream</primary></indexterm>_ZNK15QTreeWidgetItem5writeER11QDataStream <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK15QTreeWidgetItemltERKS_</primary></indexterm>_ZNK15QTreeWidgetItemltERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox10isReadOnlyEv</primary></indexterm>_ZNK16QAbstractSpinBox10isReadOnlyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox10metaObjectEv</primary></indexterm>_ZNK16QAbstractSpinBox10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox11stepEnabledEv</primary></indexterm>_ZNK16QAbstractSpinBox11stepEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox13buttonSymbolsEv</primary></indexterm>_ZNK16QAbstractSpinBox13buttonSymbolsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox15minimumSizeHintEv</primary></indexterm>_ZNK16QAbstractSpinBox15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox16specialValueTextEv</primary></indexterm>_ZNK16QAbstractSpinBox16specialValueTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox4textEv</primary></indexterm>_ZNK16QAbstractSpinBox4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox5fixupER7QString</primary></indexterm>_ZNK16QAbstractSpinBox5fixupER7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox8hasFrameEv</primary></indexterm>_ZNK16QAbstractSpinBox8hasFrameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox8lineEditEv</primary></indexterm>_ZNK16QAbstractSpinBox8lineEditEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox8sizeHintEv</primary></indexterm>_ZNK16QAbstractSpinBox8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox8validateER7QStringRi</primary></indexterm>_ZNK16QAbstractSpinBox8validateER7QStringRi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox8wrappingEv</primary></indexterm>_ZNK16QAbstractSpinBox8wrappingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QAbstractSpinBox9alignmentEv</primary></indexterm>_ZNK16QAbstractSpinBox9alignmentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QConicalGradient5angleEv</primary></indexterm>_ZNK16QConicalGradient5angleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QConicalGradient6centerEv</primary></indexterm>_ZNK16QConicalGradient6centerEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QDoubleValidator10metaObjectEv</primary></indexterm>_ZNK16QDoubleValidator10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QDoubleValidator8validateER7QStringRi</primary></indexterm>_ZNK16QDoubleValidator8validateER7QStringRi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QRegExpValidator10metaObjectEv</primary></indexterm>_ZNK16QRegExpValidator10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QRegExpValidator8validateER7QStringRi</primary></indexterm>_ZNK16QRegExpValidator8validateER7QStringRi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QStringListModel10metaObjectEv</primary></indexterm>_ZNK16QStringListModel10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QStringListModel10stringListEv</primary></indexterm>_ZNK16QStringListModel10stringListEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QStringListModel4dataERK11QModelIndexi</primary></indexterm>_ZNK16QStringListModel4dataERK11QModelIndexi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QStringListModel5flagsERK11QModelIndex</primary></indexterm>_ZNK16QStringListModel5flagsERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QStringListModel8rowCountERK11QModelIndex</primary></indexterm>_ZNK16QStringListModel8rowCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QTableWidgetItem4dataEi</primary></indexterm>_ZNK16QTableWidgetItem4dataEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QTableWidgetItem5cloneEv</primary></indexterm>_ZNK16QTableWidgetItem5cloneEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK16QTableWidgetItem5writeER11QDataStream</primary></indexterm>_ZNK16QTableWidgetItem5writeER11QDataStream <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK16QTableWidgetItemltERKS_</primary></indexterm>_ZNK16QTableWidgetItemltERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView10metaObjectEv</primary></indexterm>_ZNK17QAbstractItemView10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView11dragEnabledEv</primary></indexterm>_ZNK17QAbstractItemView11dragEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView11indexWidgetERK11QModelIndex</primary></indexterm>_ZNK17QAbstractItemView11indexWidgetERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView11viewOptionsEv</primary></indexterm>_ZNK17QAbstractItemView11viewOptionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView12currentIndexEv</primary></indexterm>_ZNK17QAbstractItemView12currentIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView12editTriggersEv</primary></indexterm>_ZNK17QAbstractItemView12editTriggersEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView12itemDelegateEv</primary></indexterm>_ZNK17QAbstractItemView12itemDelegateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView13hasAutoScrollEv</primary></indexterm>_ZNK17QAbstractItemView13hasAutoScrollEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView13selectionModeEv</primary></indexterm>_ZNK17QAbstractItemView13selectionModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView13textElideModeEv</primary></indexterm>_ZNK17QAbstractItemView13textElideModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView14selectionModelEv</primary></indexterm>_ZNK17QAbstractItemView14selectionModelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView14sizeHintForRowEi</primary></indexterm>_ZNK17QAbstractItemView14sizeHintForRowEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView15selectedIndexesEv</primary></indexterm>_ZNK17QAbstractItemView15selectedIndexesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView16selectionCommandERK11QModelIndexPK6QEvent</primary></indexterm>_ZNK17QAbstractItemView16selectionCommandERK11QModelIndexPK6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView16sizeHintForIndexERK11QModelIndex</primary></indexterm>_ZNK17QAbstractItemView16sizeHintForIndexERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView16tabKeyNavigationEv</primary></indexterm>_ZNK17QAbstractItemView16tabKeyNavigationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView17dirtyRegionOffsetEv</primary></indexterm>_ZNK17QAbstractItemView17dirtyRegionOffsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView17selectionBehaviorEv</primary></indexterm>_ZNK17QAbstractItemView17selectionBehaviorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView17showDropIndicatorEv</primary></indexterm>_ZNK17QAbstractItemView17showDropIndicatorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView17sizeHintForColumnEi</primary></indexterm>_ZNK17QAbstractItemView17sizeHintForColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView20alternatingRowColorsEv</primary></indexterm>_ZNK17QAbstractItemView20alternatingRowColorsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView20verticalStepsPerItemEv</primary></indexterm>_ZNK17QAbstractItemView20verticalStepsPerItemEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView21dropIndicatorPositionEv</primary></indexterm>_ZNK17QAbstractItemView21dropIndicatorPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView22horizontalStepsPerItemEv</primary></indexterm>_ZNK17QAbstractItemView22horizontalStepsPerItemEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView5modelEv</primary></indexterm>_ZNK17QAbstractItemView5modelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView5stateEv</primary></indexterm>_ZNK17QAbstractItemView5stateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView8iconSizeEv</primary></indexterm>_ZNK17QAbstractItemView8iconSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAbstractItemView9rootIndexEv</primary></indexterm>_ZNK17QAbstractItemView9rootIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAccessibleObject10actionTextEiN11QAccessible4TextEi</primary></indexterm>_ZNK17QAccessibleObject10actionTextEiN11QAccessible4TextEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAccessibleObject15userActionCountEi</primary></indexterm>_ZNK17QAccessibleObject15userActionCountEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAccessibleObject4rectEi</primary></indexterm>_ZNK17QAccessibleObject4rectEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAccessibleObject6objectEv</primary></indexterm>_ZNK17QAccessibleObject6objectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAccessibleObject7isValidEv</primary></indexterm>_ZNK17QAccessibleObject7isValidEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAccessiblePlugin10metaObjectEv</primary></indexterm>_ZNK17QAccessiblePlugin10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget10actionTextEiN11QAccessible4TextEi</primary></indexterm>_ZNK17QAccessibleWidget10actionTextEiN11QAccessible4TextEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget10childCountEv</primary></indexterm>_ZNK17QAccessibleWidget10childCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget10relationToEiPK20QAccessibleInterfacei</primary></indexterm>_ZNK17QAccessibleWidget10relationToEiPK20QAccessibleInterfacei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget12indexOfChildEPK20QAccessibleInterface</primary></indexterm>_ZNK17QAccessibleWidget12indexOfChildEPK20QAccessibleInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget12parentObjectEv</primary></indexterm>_ZNK17QAccessibleWidget12parentObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget4rectEi</primary></indexterm>_ZNK17QAccessibleWidget4rectEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget4roleEi</primary></indexterm>_ZNK17QAccessibleWidget4roleEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget4textEN11QAccessible4TextEi</primary></indexterm>_ZNK17QAccessibleWidget4textEN11QAccessible4TextEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget5stateEi</primary></indexterm>_ZNK17QAccessibleWidget5stateEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget6widgetEv</primary></indexterm>_ZNK17QAccessibleWidget6widgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget7childAtEii</primary></indexterm>_ZNK17QAccessibleWidget7childAtEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QAccessibleWidget8navigateEN11QAccessible12RelationFlagEiPP20QAccessibleInterface</primary></indexterm>_ZNK17QAccessibleWidget8navigateEN11QAccessible12RelationFlagEiPP20QAccessibleInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QContextMenuEvent5stateEv</primary></indexterm>_ZNK17QContextMenuEvent5stateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QFileIconProvider4iconENS_8IconTypeE</primary></indexterm>_ZNK17QFileIconProvider4iconENS_8IconTypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QFileIconProvider4iconERK9QFileInfo</primary></indexterm>_ZNK17QFileIconProvider4iconERK9QFileInfo <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QFileIconProvider4typeERK9QFileInfo</primary></indexterm>_ZNK17QFileIconProvider4typeERK9QFileInfo <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QIconEnginePlugin10metaObjectEv</primary></indexterm>_ZNK17QIconEnginePlugin10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState10clipRegionEv</primary></indexterm>_ZNK17QPaintEngineState10clipRegionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState11brushOriginEv</primary></indexterm>_ZNK17QPaintEngineState11brushOriginEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState11renderHintsEv</primary></indexterm>_ZNK17QPaintEngineState11renderHintsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState13clipOperationEv</primary></indexterm>_ZNK17QPaintEngineState13clipOperationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState13isClipEnabledEv</primary></indexterm>_ZNK17QPaintEngineState13isClipEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState14backgroundModeEv</primary></indexterm>_ZNK17QPaintEngineState14backgroundModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState15backgroundBrushEv</primary></indexterm>_ZNK17QPaintEngineState15backgroundBrushEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState15compositionModeEv</primary></indexterm>_ZNK17QPaintEngineState15compositionModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState3penEv</primary></indexterm>_ZNK17QPaintEngineState3penEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState4fontEv</primary></indexterm>_ZNK17QPaintEngineState4fontEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState5brushEv</primary></indexterm>_ZNK17QPaintEngineState5brushEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState6matrixEv</primary></indexterm>_ZNK17QPaintEngineState6matrixEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState7painterEv</primary></indexterm>_ZNK17QPaintEngineState7painterEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QPaintEngineState8clipPathEv</primary></indexterm>_ZNK17QPaintEngineState8clipPathEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QTextInlineObject11formatIndexEv</primary></indexterm>_ZNK17QTextInlineObject11formatIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QTextInlineObject12textPositionEv</primary></indexterm>_ZNK17QTextInlineObject12textPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QTextInlineObject13textDirectionEv</primary></indexterm>_ZNK17QTextInlineObject13textDirectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QTextInlineObject4rectEv</primary></indexterm>_ZNK17QTextInlineObject4rectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QTextInlineObject5widthEv</primary></indexterm>_ZNK17QTextInlineObject5widthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QTextInlineObject6ascentEv</primary></indexterm>_ZNK17QTextInlineObject6ascentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QTextInlineObject6formatEv</primary></indexterm>_ZNK17QTextInlineObject6formatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK17QTextInlineObject6heightEv</primary></indexterm>_ZNK17QTextInlineObject6heightEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK17QTextInlineObject7descentEv</primary></indexterm>_ZNK17QTextInlineObject7descentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK18QItemEditorFactory12createEditorEN8QVariant4TypeEP7QWidget</primary></indexterm>_ZNK18QItemEditorFactory12createEditorEN8QVariant4TypeEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK18QItemEditorFactory17valuePropertyNameEN8QVariant4TypeE</primary></indexterm>_ZNK18QItemEditorFactory17valuePropertyNameEN8QVariant4TypeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK18QStandardItemModel10headerDataEiN2Qt11OrientationEi</primary></indexterm>_ZNK18QStandardItemModel10headerDataEiN2Qt11OrientationEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK18QStandardItemModel10metaObjectEv</primary></indexterm>_ZNK18QStandardItemModel10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK18QStandardItemModel11columnCountERK11QModelIndex</primary></indexterm>_ZNK18QStandardItemModel11columnCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK18QStandardItemModel11hasChildrenERK11QModelIndex</primary></indexterm>_ZNK18QStandardItemModel11hasChildrenERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK18QStandardItemModel4dataERK11QModelIndexi</primary></indexterm>_ZNK18QStandardItemModel4dataERK11QModelIndexi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK18QStandardItemModel5flagsERK11QModelIndex</primary></indexterm>_ZNK18QStandardItemModel5flagsERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK18QStandardItemModel5indexEiiRK11QModelIndex</primary></indexterm>_ZNK18QStandardItemModel5indexEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK18QStandardItemModel6parentERK11QModelIndex</primary></indexterm>_ZNK18QStandardItemModel6parentERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK18QStandardItemModel8rowCountERK11QModelIndex</primary></indexterm>_ZNK18QStandardItemModel8rowCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK18QSyntaxHighlighter10metaObjectEv</primary></indexterm>_ZNK18QSyntaxHighlighter10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK18QSyntaxHighlighter17currentBlockStateEv</primary></indexterm>_ZNK18QSyntaxHighlighter17currentBlockStateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK18QSyntaxHighlighter18previousBlockStateEv</primary></indexterm>_ZNK18QSyntaxHighlighter18previousBlockStateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK18QSyntaxHighlighter20currentBlockUserDataEv</primary></indexterm>_ZNK18QSyntaxHighlighter20currentBlockUserDataEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK18QSyntaxHighlighter6formatEi</primary></indexterm>_ZNK18QSyntaxHighlighter6formatEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK18QSyntaxHighlighter8documentEv</primary></indexterm>_ZNK18QSyntaxHighlighter8documentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QAbstractProxyModel10metaObjectEv</primary></indexterm>_ZNK19QAbstractProxyModel10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QAbstractProxyModel11sourceModelEv</primary></indexterm>_ZNK19QAbstractProxyModel11sourceModelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QAbstractProxyModel20mapSelectionToSourceERK14QItemSelection</primary></indexterm>_ZNK19QAbstractProxyModel20mapSelectionToSourceERK14QItemSelection <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QAbstractProxyModel22mapSelectionFromSourceERK14QItemSelection</primary></indexterm>_ZNK19QAbstractProxyModel22mapSelectionFromSourceERK14QItemSelection <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QAbstractScrollArea10metaObjectEv</primary></indexterm>_ZNK19QAbstractScrollArea10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QAbstractScrollArea15minimumSizeHintEv</primary></indexterm>_ZNK19QAbstractScrollArea15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QAbstractScrollArea17verticalScrollBarEv</primary></indexterm>_ZNK19QAbstractScrollArea17verticalScrollBarEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QAbstractScrollArea19horizontalScrollBarEv</primary></indexterm>_ZNK19QAbstractScrollArea19horizontalScrollBarEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QAbstractScrollArea19maximumViewportSizeEv</primary></indexterm>_ZNK19QAbstractScrollArea19maximumViewportSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QAbstractScrollArea23verticalScrollBarPolicyEv</primary></indexterm>_ZNK19QAbstractScrollArea23verticalScrollBarPolicyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QAbstractScrollArea25horizontalScrollBarPolicyEv</primary></indexterm>_ZNK19QAbstractScrollArea25horizontalScrollBarPolicyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QAbstractScrollArea8sizeHintEv</primary></indexterm>_ZNK19QAbstractScrollArea8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QAbstractScrollArea8viewportEv</primary></indexterm>_ZNK19QAbstractScrollArea8viewportEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QInputContextPlugin10metaObjectEv</primary></indexterm>_ZNK19QInputContextPlugin10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionModel10isSelectedERK11QModelIndex</primary></indexterm>_ZNK19QItemSelectionModel10isSelectedERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionModel10metaObjectEv</primary></indexterm>_ZNK19QItemSelectionModel10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionModel12currentIndexEv</primary></indexterm>_ZNK19QItemSelectionModel12currentIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionModel13isRowSelectedEiRK11QModelIndex</primary></indexterm>_ZNK19QItemSelectionModel13isRowSelectedEiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionModel15selectedIndexesEv</primary></indexterm>_ZNK19QItemSelectionModel15selectedIndexesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionModel16isColumnSelectedEiRK11QModelIndex</primary></indexterm>_ZNK19QItemSelectionModel16isColumnSelectedEiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionModel22rowIntersectsSelectionEiRK11QModelIndex</primary></indexterm>_ZNK19QItemSelectionModel22rowIntersectsSelectionEiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionModel25columnIntersectsSelectionEiRK11QModelIndex</primary></indexterm>_ZNK19QItemSelectionModel25columnIntersectsSelectionEiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionModel5modelEv</primary></indexterm>_ZNK19QItemSelectionModel5modelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionModel9selectionEv</primary></indexterm>_ZNK19QItemSelectionModel9selectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionRange10intersectsERKS_</primary></indexterm>_ZNK19QItemSelectionRange10intersectsERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionRange7indexesEv</primary></indexterm>_ZNK19QItemSelectionRange7indexesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QItemSelectionRange9intersectERKS_</primary></indexterm>_ZNK19QItemSelectionRange9intersectERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QPainterPathStroker10miterLimitEv</primary></indexterm>_ZNK19QPainterPathStroker10miterLimitEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QPainterPathStroker11dashPatternEv</primary></indexterm>_ZNK19QPainterPathStroker11dashPatternEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QPainterPathStroker12createStrokeERK12QPainterPath</primary></indexterm>_ZNK19QPainterPathStroker12createStrokeERK12QPainterPath <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QPainterPathStroker14curveThresholdEv</primary></indexterm>_ZNK19QPainterPathStroker14curveThresholdEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QPainterPathStroker5widthEv</primary></indexterm>_ZNK19QPainterPathStroker5widthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK19QPainterPathStroker8capStyleEv</primary></indexterm>_ZNK19QPainterPathStroker8capStyleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK19QPainterPathStroker9joinStyleEv</primary></indexterm>_ZNK19QPainterPathStroker9joinStyleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK20QAbstractPrintDialog10printRangeEv</primary></indexterm>_ZNK20QAbstractPrintDialog10printRangeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK20QAbstractPrintDialog14enabledOptionsEv</primary></indexterm>_ZNK20QAbstractPrintDialog14enabledOptionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK20QAbstractPrintDialog15isOptionEnabledENS_17PrintDialogOptionE</primary></indexterm>_ZNK20QAbstractPrintDialog15isOptionEnabledENS_17PrintDialogOptionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK20QAbstractPrintDialog6toPageEv</primary></indexterm>_ZNK20QAbstractPrintDialog6toPageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK20QAbstractPrintDialog7maxPageEv</primary></indexterm>_ZNK20QAbstractPrintDialog7maxPageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK20QAbstractPrintDialog7minPageEv</primary></indexterm>_ZNK20QAbstractPrintDialog7minPageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK20QAbstractPrintDialog7printerEv</primary></indexterm>_ZNK20QAbstractPrintDialog7printerEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK20QAbstractPrintDialog8fromPageEv</primary></indexterm>_ZNK20QAbstractPrintDialog8fromPageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK20QPictureFormatPlugin10metaObjectEv</primary></indexterm>_ZNK20QPictureFormatPlugin10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QAbstractItemDelegate10metaObjectEv</primary></indexterm>_ZNK21QAbstractItemDelegate10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QAbstractItemDelegate12createEditorEP7QWidgetRK20QStyleOptionViewItemRK11QModelIndex</primary></indexterm>_ZNK21QAbstractItemDelegate12createEditorEP7QWidgetRK20QStyleOptionViewItemRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QAbstractItemDelegate12setModelDataEP7QWidgetP18QAbstractItemModelRK11QModelIndex</primary></indexterm>_ZNK21QAbstractItemDelegate12setModelDataEP7QWidgetP18QAbstractItemModelRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QAbstractItemDelegate13setEditorDataEP7QWidgetRK11QModelIndex</primary></indexterm>_ZNK21QAbstractItemDelegate13setEditorDataEP7QWidgetRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QAbstractItemDelegate20updateEditorGeometryEP7QWidgetRK20QStyleOptionViewItemRK11QModelIndex</primary></indexterm>_ZNK21QAbstractItemDelegate20updateEditorGeometryEP7QWidgetRK20QStyleOptionViewItemRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel10headerDataEiN2Qt11OrientationEi</primary></indexterm>_ZNK21QSortFilterProxyModel10headerDataEiN2Qt11OrientationEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel10metaObjectEv</primary></indexterm>_ZNK21QSortFilterProxyModel10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel11columnCountERK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel11columnCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel11hasChildrenERK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel11hasChildrenERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel11mapToSourceERK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel11mapToSourceERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel12canFetchMoreERK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel12canFetchMoreERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel12filterRegExpEv</primary></indexterm>_ZNK21QSortFilterProxyModel12filterRegExpEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel13mapFromSourceERK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel13mapFromSourceERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel15filterKeyColumnEv</primary></indexterm>_ZNK21QSortFilterProxyModel15filterKeyColumnEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel16filterAcceptsRowEiRK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel16filterAcceptsRowEiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel19filterAcceptsColumnEiRK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel19filterAcceptsColumnEiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel20mapSelectionToSourceERK14QItemSelection</primary></indexterm>_ZNK21QSortFilterProxyModel20mapSelectionToSourceERK14QItemSelection <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel21filterCaseSensitivityEv</primary></indexterm>_ZNK21QSortFilterProxyModel21filterCaseSensitivityEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel22mapSelectionFromSourceERK14QItemSelection</primary></indexterm>_ZNK21QSortFilterProxyModel22mapSelectionFromSourceERK14QItemSelection <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel4dataERK11QModelIndexi</primary></indexterm>_ZNK21QSortFilterProxyModel4dataERK11QModelIndexi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel4spanERK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel4spanERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel5buddyERK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel5buddyERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel5flagsERK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel5flagsERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel5indexEiiRK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel5indexEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel5matchERK11QModelIndexiRK8QVarianti6QFlagsIN2Qt9MatchFlagEE</primary></indexterm>_ZNK21QSortFilterProxyModel5matchERK11QModelIndexiRK8QVarianti6QFlagsIN2Qt9MatchFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel6parentERK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel6parentERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel8lessThanERK11QModelIndexS2_</primary></indexterm>_ZNK21QSortFilterProxyModel8lessThanERK11QModelIndexS2_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel8mimeDataERK5QListI11QModelIndexE</primary></indexterm>_ZNK21QSortFilterProxyModel8mimeDataERK5QListI11QModelIndexE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QSortFilterProxyModel8rowCountERK11QModelIndex</primary></indexterm>_ZNK21QSortFilterProxyModel8rowCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QTextDocumentFragment11toPlainTextEv</primary></indexterm>_ZNK21QTextDocumentFragment11toPlainTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK21QTextDocumentFragment6toHtmlEv</primary></indexterm>_ZNK21QTextDocumentFragment6toHtmlEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK21QTextDocumentFragment7isEmptyEv</primary></indexterm>_ZNK21QTextDocumentFragment7isEmptyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK22QAccessibleApplication10actionTextEiN11QAccessible4TextEi</primary></indexterm>_ZNK22QAccessibleApplication10actionTextEiN11QAccessible4TextEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK22QAccessibleApplication10childCountEv</primary></indexterm>_ZNK22QAccessibleApplication10childCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK22QAccessibleApplication10relationToEiPK20QAccessibleInterfacei</primary></indexterm>_ZNK22QAccessibleApplication10relationToEiPK20QAccessibleInterfacei <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK22QAccessibleApplication12indexOfChildEPK20QAccessibleInterface</primary></indexterm>_ZNK22QAccessibleApplication12indexOfChildEPK20QAccessibleInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK22QAccessibleApplication15userActionCountEi</primary></indexterm>_ZNK22QAccessibleApplication15userActionCountEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK22QAccessibleApplication4roleEi</primary></indexterm>_ZNK22QAccessibleApplication4roleEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK22QAccessibleApplication4textEN11QAccessible4TextEi</primary></indexterm>_ZNK22QAccessibleApplication4textEN11QAccessible4TextEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK22QAccessibleApplication5stateEi</primary></indexterm>_ZNK22QAccessibleApplication5stateEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK22QAccessibleApplication7childAtEii</primary></indexterm>_ZNK22QAccessibleApplication7childAtEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK22QAccessibleApplication8navigateEN11QAccessible12RelationFlagEiPP20QAccessibleInterface</primary></indexterm>_ZNK22QAccessibleApplication8navigateEN11QAccessible12RelationFlagEiPP20QAccessibleInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK23QAccessibleBridgePlugin10metaObjectEv</primary></indexterm>_ZNK23QAccessibleBridgePlugin10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK23QWindowStateChangeEvent10isOverrideEv</primary></indexterm>_ZNK23QWindowStateChangeEvent10isOverrideEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK27QAbstractTextDocumentLayout10metaObjectEv</primary></indexterm>_ZNK27QAbstractTextDocumentLayout10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK27QAbstractTextDocumentLayout11paintDeviceEv</primary></indexterm>_ZNK27QAbstractTextDocumentLayout11paintDeviceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK27QAbstractTextDocumentLayout16handlerForObjectEi</primary></indexterm>_ZNK27QAbstractTextDocumentLayout16handlerForObjectEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK27QAbstractTextDocumentLayout8anchorAtERK7QPointF</primary></indexterm>_ZNK27QAbstractTextDocumentLayout8anchorAtERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK27QAbstractTextDocumentLayout8documentEv</primary></indexterm>_ZNK27QAbstractTextDocumentLayout8documentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK4QPen10miterLimitEv</primary></indexterm>_ZNK4QPen10miterLimitEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK4QPen11dashPatternEv</primary></indexterm>_ZNK4QPen11dashPatternEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK4QPen5brushEv</primary></indexterm>_ZNK4QPen5brushEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK4QPen5colorEv</primary></indexterm>_ZNK4QPen5colorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK4QPen5styleEv</primary></indexterm>_ZNK4QPen5styleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK4QPen5widthEv</primary></indexterm>_ZNK4QPen5widthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK4QPen6widthFEv</primary></indexterm>_ZNK4QPen6widthFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK4QPen7isSolidEv</primary></indexterm>_ZNK4QPen7isSolidEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK4QPen8capStyleEv</primary></indexterm>_ZNK4QPen8capStyleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK4QPen9joinStyleEv</primary></indexterm>_ZNK4QPen9joinStyleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK4QPencv8QVariantEv</primary></indexterm>_ZNK4QPencv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK4QPeneqERKS_</primary></indexterm>_ZNK4QPeneqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QDial10metaObjectEv</primary></indexterm>_ZNK5QDial10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QDial11notchTargetEv</primary></indexterm>_ZNK5QDial11notchTargetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QDial14notchesVisibleEv</primary></indexterm>_ZNK5QDial14notchesVisibleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QDial15minimumSizeHintEv</primary></indexterm>_ZNK5QDial15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QDial8sizeHintEv</primary></indexterm>_ZNK5QDial8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QDial8wrappingEv</primary></indexterm>_ZNK5QDial8wrappingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QDial9notchSizeEv</primary></indexterm>_ZNK5QDial9notchSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QDrag10metaObjectEv</primary></indexterm>_ZNK5QDrag10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QDrag6pixmapEv</primary></indexterm>_ZNK5QDrag6pixmapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QDrag6sourceEv</primary></indexterm>_ZNK5QDrag6sourceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QDrag6targetEv</primary></indexterm>_ZNK5QDrag6targetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QDrag7hotSpotEv</primary></indexterm>_ZNK5QDrag7hotSpotEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QDrag8mimeDataEv</primary></indexterm>_ZNK5QDrag8mimeDataEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont10exactMatchEv</primary></indexterm>_ZNK5QFont10exactMatchEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont10fixedPitchEv</primary></indexterm>_ZNK5QFont10fixedPitchEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont10pointSizeFEv</primary></indexterm>_ZNK5QFont10pointSizeFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont13defaultFamilyEv</primary></indexterm>_ZNK5QFont13defaultFamilyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont13styleStrategyEv</primary></indexterm>_ZNK5QFont13styleStrategyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont14lastResortFontEv</primary></indexterm>_ZNK5QFont14lastResortFontEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont16lastResortFamilyEv</primary></indexterm>_ZNK5QFont16lastResortFamilyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont3keyEv</primary></indexterm>_ZNK5QFont3keyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont5styleEv</primary></indexterm>_ZNK5QFont5styleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont6familyEv</primary></indexterm>_ZNK5QFont6familyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont6handleEv</primary></indexterm>_ZNK5QFont6handleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont6weightEv</primary></indexterm>_ZNK5QFont6weightEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont7kerningEv</primary></indexterm>_ZNK5QFont7kerningEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont7rawModeEv</primary></indexterm>_ZNK5QFont7rawModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont7rawNameEv</primary></indexterm>_ZNK5QFont7rawNameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont7resolveERKS_</primary></indexterm>_ZNK5QFont7resolveERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont7stretchEv</primary></indexterm>_ZNK5QFont7stretchEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont8isCopyOfERKS_</primary></indexterm>_ZNK5QFont8isCopyOfERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont8overlineEv</primary></indexterm>_ZNK5QFont8overlineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont8toStringEv</primary></indexterm>_ZNK5QFont8toStringEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont9pixelSizeEv</primary></indexterm>_ZNK5QFont9pixelSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont9pointSizeEv</primary></indexterm>_ZNK5QFont9pointSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont9strikeOutEv</primary></indexterm>_ZNK5QFont9strikeOutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFont9styleHintEv</primary></indexterm>_ZNK5QFont9styleHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFont9underlineEv</primary></indexterm>_ZNK5QFont9underlineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFontcv8QVariantEv</primary></indexterm>_ZNK5QFontcv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFonteqERKS_</primary></indexterm>_ZNK5QFonteqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QFontltERKS_</primary></indexterm>_ZNK5QFontltERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QFontneERKS_</primary></indexterm>_ZNK5QFontneERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QIcon10actualSizeERK5QSizeNS_4ModeENS_5StateE</primary></indexterm>_ZNK5QIcon10actualSizeERK5QSizeNS_4ModeENS_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QIcon10isDetachedEv</primary></indexterm>_ZNK5QIcon10isDetachedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QIcon12serialNumberEv</primary></indexterm>_ZNK5QIcon12serialNumberEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QIcon5paintEP8QPainterRK5QRect6QFlagsIN2Qt13AlignmentFlagEENS_4ModeENS_5StateE</primary></indexterm>_ZNK5QIcon5paintEP8QPainterRK5QRect6QFlagsIN2Qt13AlignmentFlagEENS_4ModeENS_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QIcon6isNullEv</primary></indexterm>_ZNK5QIcon6isNullEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QIcon6pixmapENS_4SizeENS_4ModeENS_5StateE</primary></indexterm>_ZNK5QIcon6pixmapENS_4SizeENS_4ModeENS_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QIcon6pixmapENS_4SizeEbNS_5StateE</primary></indexterm>_ZNK5QIcon6pixmapENS_4SizeEbNS_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QIcon6pixmapERK5QSizeNS_4ModeENS_5StateE</primary></indexterm>_ZNK5QIcon6pixmapERK5QSizeNS_4ModeENS_5StateE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QIcon6pixmapEv</primary></indexterm>_ZNK5QIcon6pixmapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QIconcv8QVariantEv</primary></indexterm>_ZNK5QIconcv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QMenu10frameWidthEv</primary></indexterm>_ZNK5QMenu10frameWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QMenu10menuActionEv</primary></indexterm>_ZNK5QMenu10menuActionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QMenu10metaObjectEv</primary></indexterm>_ZNK5QMenu10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QMenu11columnCountEv</primary></indexterm>_ZNK5QMenu11columnCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QMenu12activeActionEv</primary></indexterm>_ZNK5QMenu12activeActionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QMenu13defaultActionEv</primary></indexterm>_ZNK5QMenu13defaultActionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QMenu13itemParameterEi</primary></indexterm>_ZNK5QMenu13itemParameterEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QMenu14actionGeometryEP7QAction</primary></indexterm>_ZNK5QMenu14actionGeometryEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QMenu16isTearOffEnabledEv</primary></indexterm>_ZNK5QMenu16isTearOffEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QMenu20isTearOffMenuVisibleEv</primary></indexterm>_ZNK5QMenu20isTearOffMenuVisibleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QMenu4iconEv</primary></indexterm>_ZNK5QMenu4iconEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QMenu5titleEv</primary></indexterm>_ZNK5QMenu5titleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK5QMenu8actionAtERK6QPoint</primary></indexterm>_ZNK5QMenu8actionAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK5QMenu8sizeHintEv</primary></indexterm>_ZNK5QMenu8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QBrush6pixmapEv</primary></indexterm>_ZNK6QBrush6pixmapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QBrush7textureEv</primary></indexterm>_ZNK6QBrush7textureEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QBrush8gradientEv</primary></indexterm>_ZNK6QBrush8gradientEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QBrush8isOpaqueEv</primary></indexterm>_ZNK6QBrush8isOpaqueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QBrushcv8QVariantEv</primary></indexterm>_ZNK6QBrushcv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QBrusheqERKS_</primary></indexterm>_ZNK6QBrusheqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor10saturationEv</primary></indexterm>_ZNK6QColor10saturationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor11saturationFEv</primary></indexterm>_ZNK6QColor11saturationFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor3hueEv</primary></indexterm>_ZNK6QColor3hueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor3redEv</primary></indexterm>_ZNK6QColor3redEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor3rgbEv</primary></indexterm>_ZNK6QColor3rgbEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor4blueEv</primary></indexterm>_ZNK6QColor4blueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor4cyanEv</primary></indexterm>_ZNK6QColor4cyanEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor4darkEi</primary></indexterm>_ZNK6QColor4darkEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor4hueFEv</primary></indexterm>_ZNK6QColor4hueFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor4nameEv</primary></indexterm>_ZNK6QColor4nameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor4redFEv</primary></indexterm>_ZNK6QColor4redFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor4rgbaEv</primary></indexterm>_ZNK6QColor4rgbaEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor5alphaEv</primary></indexterm>_ZNK6QColor5alphaEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor5blackEv</primary></indexterm>_ZNK6QColor5blackEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor5blueFEv</primary></indexterm>_ZNK6QColor5blueFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor5cyanFEv</primary></indexterm>_ZNK6QColor5cyanFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor5greenEv</primary></indexterm>_ZNK6QColor5greenEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor5lightEi</primary></indexterm>_ZNK6QColor5lightEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor5pixelEi</primary></indexterm>_ZNK6QColor5pixelEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor5toHsvEv</primary></indexterm>_ZNK6QColor5toHsvEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor5toRgbEv</primary></indexterm>_ZNK6QColor5toRgbEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor5valueEv</primary></indexterm>_ZNK6QColor5valueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor6alphaFEv</primary></indexterm>_ZNK6QColor6alphaFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor6blackFEv</primary></indexterm>_ZNK6QColor6blackFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor6getHsvEPiS0_S0_S0_</primary></indexterm>_ZNK6QColor6getHsvEPiS0_S0_S0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor6getRgbEPiS0_S0_S0_</primary></indexterm>_ZNK6QColor6getRgbEPiS0_S0_S0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor6greenFEv</primary></indexterm>_ZNK6QColor6greenFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor6toCmykEv</primary></indexterm>_ZNK6QColor6toCmykEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor6valueFEv</primary></indexterm>_ZNK6QColor6valueFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor6yellowEv</primary></indexterm>_ZNK6QColor6yellowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor7getHsvFEPdS0_S0_S0_</primary></indexterm>_ZNK6QColor7getHsvFEPdS0_S0_S0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor7getRgbFEPdS0_S0_S0_</primary></indexterm>_ZNK6QColor7getRgbFEPdS0_S0_S0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor7magentaEv</primary></indexterm>_ZNK6QColor7magentaEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor7yellowFEv</primary></indexterm>_ZNK6QColor7yellowFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColor8magentaFEv</primary></indexterm>_ZNK6QColor8magentaFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColor9convertToENS_4SpecE</primary></indexterm>_ZNK6QColor9convertToENS_4SpecE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColorcv8QVariantEv</primary></indexterm>_ZNK6QColorcv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QColoreqERKS_</primary></indexterm>_ZNK6QColoreqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QColorneERKS_</primary></indexterm>_ZNK6QColorneERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QFrame10frameShapeEv</primary></indexterm>_ZNK6QFrame10frameShapeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QFrame10frameStyleEv</primary></indexterm>_ZNK6QFrame10frameStyleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QFrame10frameWidthEv</primary></indexterm>_ZNK6QFrame10frameWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QFrame10metaObjectEv</primary></indexterm>_ZNK6QFrame10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QFrame11frameShadowEv</primary></indexterm>_ZNK6QFrame11frameShadowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QFrame12midLineWidthEv</primary></indexterm>_ZNK6QFrame12midLineWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QFrame8sizeHintEv</primary></indexterm>_ZNK6QFrame8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QFrame9frameRectEv</primary></indexterm>_ZNK6QFrame9frameRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QFrame9lineWidthEv</primary></indexterm>_ZNK6QFrame9lineWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage10colorTableEv</primary></indexterm>_ZNK6QImage10colorTableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage10isDetachedEv</primary></indexterm>_ZNK6QImage10isDetachedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage10pixelIndexEii</primary></indexterm>_ZNK6QImage10pixelIndexEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage10rgbSwappedEv</primary></indexterm>_ZNK6QImage10rgbSwappedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage11isGrayscaleEv</primary></indexterm>_ZNK6QImage11isGrayscaleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage11paintEngineEv</primary></indexterm>_ZNK6QImage11paintEngineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage11transformedERK7QMatrixN2Qt18TransformationModeE</primary></indexterm>_ZNK6QImage11transformedERK7QMatrixN2Qt18TransformationModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage12alphaChannelEv</primary></indexterm>_ZNK6QImage12alphaChannelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage12bytesPerLineEv</primary></indexterm>_ZNK6QImage12bytesPerLineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage12convertDepthEi6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZNK6QImage12convertDepthEi6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage12serialNumberEv</primary></indexterm>_ZNK6QImage12serialNumberEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage13dotsPerMeterXEv</primary></indexterm>_ZNK6QImage13dotsPerMeterXEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage13dotsPerMeterYEv</primary></indexterm>_ZNK6QImage13dotsPerMeterYEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage13scaledToWidthEiN2Qt18TransformationModeE</primary></indexterm>_ZNK6QImage13scaledToWidthEiN2Qt18TransformationModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage13textLanguagesEv</primary></indexterm>_ZNK6QImage13textLanguagesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage14hasAlphaBufferEv</primary></indexterm>_ZNK6QImage14hasAlphaBufferEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage14scaledToHeightEiN2Qt18TransformationModeE</primary></indexterm>_ZNK6QImage14scaledToHeightEiN2Qt18TransformationModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage15convertBitOrderENS_6EndianE</primary></indexterm>_ZNK6QImage15convertBitOrderENS_6EndianE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage15convertToFormatENS_6FormatE6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZNK6QImage15convertToFormatENS_6FormatE6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage15convertToFormatENS_6FormatERK7QVectorIjE6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZNK6QImage15convertToFormatENS_6FormatERK7QVectorIjE6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage15createAlphaMaskE6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZNK6QImage15createAlphaMaskE6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage15hasAlphaChannelEv</primary></indexterm>_ZNK6QImage15hasAlphaChannelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage19createHeuristicMaskEb</primary></indexterm>_ZNK6QImage19createHeuristicMaskEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage23convertDepthWithPaletteEiPji6QFlagsIN2Qt19ImageConversionFlagEE</primary></indexterm>_ZNK6QImage23convertDepthWithPaletteEiPji6QFlagsIN2Qt19ImageConversionFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage4bitsEv</primary></indexterm>_ZNK6QImage4bitsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage4copyERK5QRect</primary></indexterm>_ZNK6QImage4copyERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage4rectEv</primary></indexterm>_ZNK6QImage4rectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage4saveEP9QIODevicePKci</primary></indexterm>_ZNK6QImage4saveEP9QIODevicePKci <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage4saveERK7QStringPKci</primary></indexterm>_ZNK6QImage4saveERK7QStringPKci <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage4sizeEv</primary></indexterm>_ZNK6QImage4sizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage4textEPKcS1_</primary></indexterm>_ZNK6QImage4textEPKcS1_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage4textERK17QImageTextKeyLang</primary></indexterm>_ZNK6QImage4textERK17QImageTextKeyLang <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage4textERK7QString</primary></indexterm>_ZNK6QImage4textERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage5colorEi</primary></indexterm>_ZNK6QImage5colorEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage5depthEv</primary></indexterm>_ZNK6QImage5depthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage5pixelEii</primary></indexterm>_ZNK6QImage5pixelEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage5validEii</primary></indexterm>_ZNK6QImage5validEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage5widthEv</primary></indexterm>_ZNK6QImage5widthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage6formatEv</primary></indexterm>_ZNK6QImage6formatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage6heightEv</primary></indexterm>_ZNK6QImage6heightEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage6isNullEv</primary></indexterm>_ZNK6QImage6isNullEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage6metricEN12QPaintDevice17PaintDeviceMetricE</primary></indexterm>_ZNK6QImage6metricEN12QPaintDevice17PaintDeviceMetricE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage6offsetEv</primary></indexterm>_ZNK6QImage6offsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE</primary></indexterm>_ZNK6QImage6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage7allGrayEv</primary></indexterm>_ZNK6QImage7allGrayEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage7devTypeEv</primary></indexterm>_ZNK6QImage7devTypeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage8mirroredEbb</primary></indexterm>_ZNK6QImage8mirroredEbb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage8numBytesEv</primary></indexterm>_ZNK6QImage8numBytesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage8scanLineEi</primary></indexterm>_ZNK6QImage8scanLineEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage8textKeysEv</primary></indexterm>_ZNK6QImage8textKeysEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage8textListEv</primary></indexterm>_ZNK6QImage8textListEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImage9jumpTableEv</primary></indexterm>_ZNK6QImage9jumpTableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImage9numColorsEv</primary></indexterm>_ZNK6QImage9numColorsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImagecv8QVariantEv</primary></indexterm>_ZNK6QImagecv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QImageeqERKS_</primary></indexterm>_ZNK6QImageeqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QImageneERKS_</primary></indexterm>_ZNK6QImageneERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QLabel10metaObjectEv</primary></indexterm>_ZNK6QLabel10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QLabel10textFormatEv</primary></indexterm>_ZNK6QLabel10textFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QLabel14heightForWidthEi</primary></indexterm>_ZNK6QLabel14heightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QLabel15minimumSizeHintEv</primary></indexterm>_ZNK6QLabel15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QLabel17hasScaledContentsEv</primary></indexterm>_ZNK6QLabel17hasScaledContentsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QLabel4textEv</primary></indexterm>_ZNK6QLabel4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QLabel5buddyEv</primary></indexterm>_ZNK6QLabel5buddyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QLabel5movieEv</primary></indexterm>_ZNK6QLabel5movieEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QLabel6indentEv</primary></indexterm>_ZNK6QLabel6indentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QLabel6marginEv</primary></indexterm>_ZNK6QLabel6marginEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QLabel6pixmapEv</primary></indexterm>_ZNK6QLabel6pixmapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QLabel7pictureEv</primary></indexterm>_ZNK6QLabel7pictureEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QLabel8sizeHintEv</primary></indexterm>_ZNK6QLabel8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QLabel8wordWrapEv</primary></indexterm>_ZNK6QLabel8wordWrapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QLabel9alignmentEv</primary></indexterm>_ZNK6QLabel9alignmentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QMovie10frameCountEv</primary></indexterm>_ZNK6QMovie10frameCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QMovie10metaObjectEv</primary></indexterm>_ZNK6QMovie10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QMovie12currentImageEv</primary></indexterm>_ZNK6QMovie12currentImageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QMovie13currentPixmapEv</primary></indexterm>_ZNK6QMovie13currentPixmapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QMovie14nextFrameDelayEv</primary></indexterm>_ZNK6QMovie14nextFrameDelayEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QMovie15backgroundColorEv</primary></indexterm>_ZNK6QMovie15backgroundColorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QMovie18currentFrameNumberEv</primary></indexterm>_ZNK6QMovie18currentFrameNumberEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QMovie5speedEv</primary></indexterm>_ZNK6QMovie5speedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QMovie5stateEv</primary></indexterm>_ZNK6QMovie5stateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QMovie6deviceEv</primary></indexterm>_ZNK6QMovie6deviceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QMovie6formatEv</primary></indexterm>_ZNK6QMovie6formatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QMovie7isValidEv</primary></indexterm>_ZNK6QMovie7isValidEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QMovie8fileNameEv</primary></indexterm>_ZNK6QMovie8fileNameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QMovie9frameRectEv</primary></indexterm>_ZNK6QMovie9frameRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QMovie9loopCountEv</primary></indexterm>_ZNK6QMovie9loopCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QSound10isFinishedEv</primary></indexterm>_ZNK6QSound10isFinishedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QSound10metaObjectEv</primary></indexterm>_ZNK6QSound10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QSound14loopsRemainingEv</primary></indexterm>_ZNK6QSound14loopsRemainingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QSound5loopsEv</primary></indexterm>_ZNK6QSound5loopsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QSound8fileNameEv</primary></indexterm>_ZNK6QSound8fileNameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QStyle10metaObjectEv</primary></indexterm>_ZNK6QStyle10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QStyle12drawItemTextEP8QPainterRK5QRectiRK8QPalettebRK7QStringNS5_9ColorRoleE</primary></indexterm>_ZNK6QStyle12drawItemTextEP8QPainterRK5QRectiRK8QPalettebRK7QStringNS5_9ColorRoleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QStyle12itemTextRectERK12QFontMetricsRK5QRectibRK7QString</primary></indexterm>_ZNK6QStyle12itemTextRectERK12QFontMetricsRK5QRectibRK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QStyle12standardIconENS_14StandardPixmapEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK6QStyle12standardIconENS_14StandardPixmapEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QStyle14drawItemPixmapEP8QPainterRK5QRectiRK7QPixmap</primary></indexterm>_ZNK6QStyle14drawItemPixmapEP8QPainterRK5QRectiRK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QStyle14itemPixmapRectERK5QRectiRK7QPixmap</primary></indexterm>_ZNK6QStyle14itemPixmapRectERK5QRectiRK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK6QStyle15standardPaletteEv</primary></indexterm>_ZNK6QStyle15standardPaletteEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK6QStyle26standardIconImplementationENS_14StandardPixmapEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK6QStyle26standardIconImplementationENS_14StandardPixmapEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QAction10metaObjectEv</primary></indexterm>_ZNK7QAction10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QAction11actionGroupEv</primary></indexterm>_ZNK7QAction11actionGroupEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QAction11isCheckableEv</primary></indexterm>_ZNK7QAction11isCheckableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QAction11isSeparatorEv</primary></indexterm>_ZNK7QAction11isSeparatorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QAction12parentWidgetEv</primary></indexterm>_ZNK7QAction12parentWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QAction15shortcutContextEv</primary></indexterm>_ZNK7QAction15shortcutContextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QAction4dataEv</primary></indexterm>_ZNK7QAction4dataEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QAction4fontEv</primary></indexterm>_ZNK7QAction4fontEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QAction4iconEv</primary></indexterm>_ZNK7QAction4iconEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QAction4menuEv</primary></indexterm>_ZNK7QAction4menuEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QAction4textEv</primary></indexterm>_ZNK7QAction4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QAction7toolTipEv</primary></indexterm>_ZNK7QAction7toolTipEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QAction8iconTextEv</primary></indexterm>_ZNK7QAction8iconTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QAction8shortcutEv</primary></indexterm>_ZNK7QAction8shortcutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QAction9isCheckedEv</primary></indexterm>_ZNK7QAction9isCheckedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QAction9isEnabledEv</primary></indexterm>_ZNK7QAction9isEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QAction9isVisibleEv</primary></indexterm>_ZNK7QAction9isVisibleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QAction9statusTipEv</primary></indexterm>_ZNK7QAction9statusTipEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QAction9whatsThisEv</primary></indexterm>_ZNK7QAction9whatsThisEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QBitmap11transformedERK7QMatrix</primary></indexterm>_ZNK7QBitmap11transformedERK7QMatrix <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QBitmapcv8QVariantEv</primary></indexterm>_ZNK7QBitmapcv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QCursor4maskEv</primary></indexterm>_ZNK7QCursor4maskEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QCursor5shapeEv</primary></indexterm>_ZNK7QCursor5shapeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QCursor6bitmapEv</primary></indexterm>_ZNK7QCursor6bitmapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QCursor6handleEv</primary></indexterm>_ZNK7QCursor6handleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QCursor6pixmapEv</primary></indexterm>_ZNK7QCursor6pixmapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QCursor7hotSpotEv</primary></indexterm>_ZNK7QCursor7hotSpotEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QCursorcv8QVariantEv</primary></indexterm>_ZNK7QCursorcv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QDialog10metaObjectEv</primary></indexterm>_ZNK7QDialog10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QDialog11orientationEv</primary></indexterm>_ZNK7QDialog11orientationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QDialog15minimumSizeHintEv</primary></indexterm>_ZNK7QDialog15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QDialog17isSizeGripEnabledEv</primary></indexterm>_ZNK7QDialog17isSizeGripEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QDialog6resultEv</primary></indexterm>_ZNK7QDialog6resultEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QDialog8sizeHintEv</primary></indexterm>_ZNK7QDialog8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QDialog9extensionEv</primary></indexterm>_ZNK7QDialog9extensionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QLayout10isTopLevelEv</primary></indexterm>_ZNK7QLayout10isTopLevelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QLayout10metaObjectEv</primary></indexterm>_ZNK7QLayout10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QLayout11maximumSizeEv</primary></indexterm>_ZNK7QLayout11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QLayout11minimumSizeEv</primary></indexterm>_ZNK7QLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QLayout12parentWidgetEv</primary></indexterm>_ZNK7QLayout12parentWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QLayout13alignmentRectERK5QRect</primary></indexterm>_ZNK7QLayout13alignmentRectERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QLayout13totalSizeHintEv</primary></indexterm>_ZNK7QLayout13totalSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QLayout14sizeConstraintEv</primary></indexterm>_ZNK7QLayout14sizeConstraintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QLayout16totalMaximumSizeEv</primary></indexterm>_ZNK7QLayout16totalMaximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QLayout16totalMinimumSizeEv</primary></indexterm>_ZNK7QLayout16totalMinimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QLayout19expandingDirectionsEv</primary></indexterm>_ZNK7QLayout19expandingDirectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QLayout19totalHeightForWidthEi</primary></indexterm>_ZNK7QLayout19totalHeightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QLayout6marginEv</primary></indexterm>_ZNK7QLayout6marginEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QLayout7autoAddEv</primary></indexterm>_ZNK7QLayout7autoAddEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QLayout7indexOfEP7QWidget</primary></indexterm>_ZNK7QLayout7indexOfEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QLayout7isEmptyEv</primary></indexterm>_ZNK7QLayout7isEmptyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QLayout7menuBarEv</primary></indexterm>_ZNK7QLayout7menuBarEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QLayout7spacingEv</primary></indexterm>_ZNK7QLayout7spacingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QLayout8geometryEv</primary></indexterm>_ZNK7QLayout8geometryEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QLayout9isEnabledEv</primary></indexterm>_ZNK7QLayout9isEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QMatrix11mapToRegionERK5QRect</primary></indexterm>_ZNK7QMatrix11mapToRegionERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QMatrix12mapToPolygonERK5QRect</primary></indexterm>_ZNK7QMatrix12mapToPolygonERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QMatrix3mapERK12QPainterPath</primary></indexterm>_ZNK7QMatrix3mapERK12QPainterPath <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QMatrix3mapERK5QLine</primary></indexterm>_ZNK7QMatrix3mapERK5QLine <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QMatrix3mapERK6QLineF</primary></indexterm>_ZNK7QMatrix3mapERK6QLineF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QMatrix3mapERK6QPoint</primary></indexterm>_ZNK7QMatrix3mapERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QMatrix3mapERK7QPointF</primary></indexterm>_ZNK7QMatrix3mapERK7QPointF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QMatrix3mapERK7QRegion</primary></indexterm>_ZNK7QMatrix3mapERK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QMatrix3mapERK8QPolygon</primary></indexterm>_ZNK7QMatrix3mapERK8QPolygon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QMatrix3mapERK9QPolygonF</primary></indexterm>_ZNK7QMatrix3mapERK9QPolygonF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QMatrix3mapEddPdS0_</primary></indexterm>_ZNK7QMatrix3mapEddPdS0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QMatrix3mapEiiPiS0_</primary></indexterm>_ZNK7QMatrix3mapEiiPiS0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QMatrix7mapRectERK5QRect</primary></indexterm>_ZNK7QMatrix7mapRectERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QMatrix7mapRectERK6QRectF</primary></indexterm>_ZNK7QMatrix7mapRectERK6QRectF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QMatrix8invertedEPb</primary></indexterm>_ZNK7QMatrix8invertedEPb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QMatrixeqERKS_</primary></indexterm>_ZNK7QMatrixeqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QMatrixmlERKS_</primary></indexterm>_ZNK7QMatrixmlERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QMatrixneERKS_</primary></indexterm>_ZNK7QMatrixneERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap10isDetachedEv</primary></indexterm>_ZNK7QPixmap10isDetachedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap11paintEngineEv</primary></indexterm>_ZNK7QPixmap11paintEngineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap11transformedERK7QMatrixN2Qt18TransformationModeE</primary></indexterm>_ZNK7QPixmap11transformedERK7QMatrixN2Qt18TransformationModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap12alphaChannelEv</primary></indexterm>_ZNK7QPixmap12alphaChannelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap12serialNumberEv</primary></indexterm>_ZNK7QPixmap12serialNumberEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap13scaledToWidthEiN2Qt18TransformationModeE</primary></indexterm>_ZNK7QPixmap13scaledToWidthEiN2Qt18TransformationModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap14scaledToHeightEiN2Qt18TransformationModeE</primary></indexterm>_ZNK7QPixmap14scaledToHeightEiN2Qt18TransformationModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap15hasAlphaChannelEv</primary></indexterm>_ZNK7QPixmap15hasAlphaChannelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap16x11PictureHandleEv</primary></indexterm>_ZNK7QPixmap16x11PictureHandleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap19createHeuristicMaskEb</primary></indexterm>_ZNK7QPixmap19createHeuristicMaskEb <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap19createMaskFromColorERK6QColor</primary></indexterm>_ZNK7QPixmap19createMaskFromColorERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap4copyERK5QRect</primary></indexterm>_ZNK7QPixmap4copyERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap4maskEv</primary></indexterm>_ZNK7QPixmap4maskEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap4rectEv</primary></indexterm>_ZNK7QPixmap4rectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap4saveEP9QIODevicePKci</primary></indexterm>_ZNK7QPixmap4saveEP9QIODevicePKci <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap4saveERK7QStringPKci</primary></indexterm>_ZNK7QPixmap4saveERK7QStringPKci <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap4sizeEv</primary></indexterm>_ZNK7QPixmap4sizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap5depthEv</primary></indexterm>_ZNK7QPixmap5depthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap5widthEv</primary></indexterm>_ZNK7QPixmap5widthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap6handleEv</primary></indexterm>_ZNK7QPixmap6handleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap6heightEv</primary></indexterm>_ZNK7QPixmap6heightEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap6isNullEv</primary></indexterm>_ZNK7QPixmap6isNullEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap6metricEN12QPaintDevice17PaintDeviceMetricE</primary></indexterm>_ZNK7QPixmap6metricEN12QPaintDevice17PaintDeviceMetricE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE</primary></indexterm>_ZNK7QPixmap6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap7devTypeEv</primary></indexterm>_ZNK7QPixmap7devTypeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap7toImageEv</primary></indexterm>_ZNK7QPixmap7toImageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmap7x11InfoEv</primary></indexterm>_ZNK7QPixmap7x11InfoEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QPixmap8hasAlphaEv</primary></indexterm>_ZNK7QPixmap8hasAlphaEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QPixmapcv8QVariantEv</primary></indexterm>_ZNK7QPixmapcv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QRegion10translatedEii</primary></indexterm>_ZNK7QRegion10translatedEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QRegion12boundingRectEv</primary></indexterm>_ZNK7QRegion12boundingRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QRegion3eorERKS_</primary></indexterm>_ZNK7QRegion3eorERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QRegion5rectsEv</primary></indexterm>_ZNK7QRegion5rectsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QRegion5uniteERKS_</primary></indexterm>_ZNK7QRegion5uniteERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QRegion7isEmptyEv</primary></indexterm>_ZNK7QRegion7isEmptyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QRegion8containsERK5QRect</primary></indexterm>_ZNK7QRegion8containsERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QRegion8containsERK6QPoint</primary></indexterm>_ZNK7QRegion8containsERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QRegion8subtractERKS_</primary></indexterm>_ZNK7QRegion8subtractERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QRegion9intersectERKS_</primary></indexterm>_ZNK7QRegion9intersectERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QRegionanERKS_</primary></indexterm>_ZNK7QRegionanERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QRegioncv8QVariantEv</primary></indexterm>_ZNK7QRegioncv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QRegioneoERKS_</primary></indexterm>_ZNK7QRegioneoERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QRegioneqERKS_</primary></indexterm>_ZNK7QRegioneqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QRegionmiERKS_</primary></indexterm>_ZNK7QRegionmiERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QRegionorERKS_</primary></indexterm>_ZNK7QRegionorERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QRegionplERKS_</primary></indexterm>_ZNK7QRegionplERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QSlider10metaObjectEv</primary></indexterm>_ZNK7QSlider10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QSlider12tickIntervalEv</primary></indexterm>_ZNK7QSlider12tickIntervalEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QSlider12tickPositionEv</primary></indexterm>_ZNK7QSlider12tickPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QSlider15minimumSizeHintEv</primary></indexterm>_ZNK7QSlider15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QSlider8sizeHintEv</primary></indexterm>_ZNK7QSlider8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QTabBar10metaObjectEv</primary></indexterm>_ZNK7QTabBar10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QTabBar10tabToolTipEi</primary></indexterm>_ZNK7QTabBar10tabToolTipEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QTabBar11tabSizeHintEi</primary></indexterm>_ZNK7QTabBar11tabSizeHintEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QTabBar12currentIndexEv</primary></indexterm>_ZNK7QTabBar12currentIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QTabBar12isTabEnabledEi</primary></indexterm>_ZNK7QTabBar12isTabEnabledEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QTabBar12tabTextColorEi</primary></indexterm>_ZNK7QTabBar12tabTextColorEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QTabBar12tabWhatsThisEi</primary></indexterm>_ZNK7QTabBar12tabWhatsThisEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QTabBar15minimumSizeHintEv</primary></indexterm>_ZNK7QTabBar15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QTabBar5countEv</primary></indexterm>_ZNK7QTabBar5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QTabBar5shapeEv</primary></indexterm>_ZNK7QTabBar5shapeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QTabBar7tabDataEi</primary></indexterm>_ZNK7QTabBar7tabDataEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QTabBar7tabIconEi</primary></indexterm>_ZNK7QTabBar7tabIconEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QTabBar7tabRectEi</primary></indexterm>_ZNK7QTabBar7tabRectEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QTabBar7tabTextEi</primary></indexterm>_ZNK7QTabBar7tabTextEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QTabBar8drawBaseEv</primary></indexterm>_ZNK7QTabBar8drawBaseEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QTabBar8iconSizeEv</primary></indexterm>_ZNK7QTabBar8iconSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QTabBar8sizeHintEv</primary></indexterm>_ZNK7QTabBar8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget10focusProxyEv</primary></indexterm>_ZNK7QWidget10focusProxyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget10metaObjectEv</primary></indexterm>_ZNK7QWidget10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget10sizePolicyEv</primary></indexterm>_ZNK7QWidget10sizePolicyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget10windowIconEv</primary></indexterm>_ZNK7QWidget10windowIconEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget10windowRoleEv</primary></indexterm>_ZNK7QWidget10windowRoleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget11acceptDropsEv</primary></indexterm>_ZNK7QWidget11acceptDropsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget11focusPolicyEv</primary></indexterm>_ZNK7QWidget11focusPolicyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget11focusWidgetEv</primary></indexterm>_ZNK7QWidget11focusWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget11isEnabledToEPS_</primary></indexterm>_ZNK7QWidget11isEnabledToEPS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget11isMaximizedEv</primary></indexterm>_ZNK7QWidget11isMaximizedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget11isMinimizedEv</primary></indexterm>_ZNK7QWidget11isMinimizedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget11isVisibleToEPS_</primary></indexterm>_ZNK7QWidget11isVisibleToEPS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget11mapToGlobalERK6QPoint</primary></indexterm>_ZNK7QWidget11mapToGlobalERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget11mapToParentERK6QPoint</primary></indexterm>_ZNK7QWidget11mapToParentERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget11maximumSizeEv</primary></indexterm>_ZNK7QWidget11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget11minimumSizeEv</primary></indexterm>_ZNK7QWidget11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget11paintEngineEv</primary></indexterm>_ZNK7QWidget11paintEngineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget11visibleRectEv</primary></indexterm>_ZNK7QWidget11visibleRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget11windowStateEv</primary></indexterm>_ZNK7QWidget11windowStateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget11windowTitleEv</primary></indexterm>_ZNK7QWidget11windowTitleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget12childrenRectEv</primary></indexterm>_ZNK7QWidget12childrenRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget12contentsRectEv</primary></indexterm>_ZNK7QWidget12contentsRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget12isAncestorOfEPKS_</primary></indexterm>_ZNK7QWidget12isAncestorOfEPKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget12isFullScreenEv</primary></indexterm>_ZNK7QWidget12isFullScreenEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget13frameGeometryEv</primary></indexterm>_ZNK7QWidget13frameGeometryEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget13mapFromGlobalERK6QPoint</primary></indexterm>_ZNK7QWidget13mapFromGlobalERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget13mapFromParentERK6QPoint</primary></indexterm>_ZNK7QWidget13mapFromParentERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget13sizeIncrementEv</primary></indexterm>_ZNK7QWidget13sizeIncrementEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget13visibleRegionEv</primary></indexterm>_ZNK7QWidget13visibleRegionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget13windowOpacityEv</primary></indexterm>_ZNK7QWidget13windowOpacityEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget14accessibleNameEv</primary></indexterm>_ZNK7QWidget14accessibleNameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget14backgroundModeEv</primary></indexterm>_ZNK7QWidget14backgroundModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget14backgroundRoleEv</primary></indexterm>_ZNK7QWidget14backgroundRoleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget14childrenRegionEv</primary></indexterm>_ZNK7QWidget14childrenRegionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget14ensurePolishedEv</primary></indexterm>_ZNK7QWidget14ensurePolishedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget14foregroundRoleEv</primary></indexterm>_ZNK7QWidget14foregroundRoleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget14heightForWidthEi</primary></indexterm>_ZNK7QWidget14heightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget14isActiveWindowEv</primary></indexterm>_ZNK7QWidget14isActiveWindowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget14normalGeometryEv</primary></indexterm>_ZNK7QWidget14normalGeometryEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget14windowIconTextEv</primary></indexterm>_ZNK7QWidget14windowIconTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget14windowModalityEv</primary></indexterm>_ZNK7QWidget14windowModalityEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget15layoutDirectionEv</primary></indexterm>_ZNK7QWidget15layoutDirectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget15minimumSizeHintEv</primary></indexterm>_ZNK7QWidget15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget16inputMethodQueryEN2Qt16InputMethodQueryE</primary></indexterm>_ZNK7QWidget16inputMethodQueryEN2Qt16InputMethodQueryE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget16isWindowModifiedEv</primary></indexterm>_ZNK7QWidget16isWindowModifiedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget16nextInFocusChainEv</primary></indexterm>_ZNK7QWidget16nextInFocusChainEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget16x11PictureHandleEv</primary></indexterm>_ZNK7QWidget16x11PictureHandleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget17contextMenuPolicyEv</primary></indexterm>_ZNK7QWidget17contextMenuPolicyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget18autoFillBackgroundEv</primary></indexterm>_ZNK7QWidget18autoFillBackgroundEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget18getContentsMarginsEPiS0_S0_S0_</primary></indexterm>_ZNK7QWidget18getContentsMarginsEPiS0_S0_S0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget1xEv</primary></indexterm>_ZNK7QWidget1xEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget1yEv</primary></indexterm>_ZNK7QWidget1yEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget20testAttribute_helperEN2Qt15WidgetAttributeE</primary></indexterm>_ZNK7QWidget20testAttribute_helperEN2Qt15WidgetAttributeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget21accessibleDescriptionEv</primary></indexterm>_ZNK7QWidget21accessibleDescriptionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget3posEv</primary></indexterm>_ZNK7QWidget3posEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget4iconEv</primary></indexterm>_ZNK7QWidget4iconEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget4maskEv</primary></indexterm>_ZNK7QWidget4maskEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget5mapToEPS_RK6QPoint</primary></indexterm>_ZNK7QWidget5mapToEPS_RK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget5styleEv</primary></indexterm>_ZNK7QWidget5styleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget6cursorEv</primary></indexterm>_ZNK7QWidget6cursorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget6handleEv</primary></indexterm>_ZNK7QWidget6handleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget6layoutEv</primary></indexterm>_ZNK7QWidget6layoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE</primary></indexterm>_ZNK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget6windowEv</primary></indexterm>_ZNK7QWidget6windowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget7actionsEv</primary></indexterm>_ZNK7QWidget7actionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget7childAtERK6QPoint</primary></indexterm>_ZNK7QWidget7childAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget7devTypeEv</primary></indexterm>_ZNK7QWidget7devTypeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget7mapFromEPS_RK6QPoint</primary></indexterm>_ZNK7QWidget7mapFromEPS_RK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget7paletteEv</primary></indexterm>_ZNK7QWidget7paletteEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget7toolTipEv</primary></indexterm>_ZNK7QWidget7toolTipEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget7x11InfoEv</primary></indexterm>_ZNK7QWidget7x11InfoEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget8baseSizeEv</primary></indexterm>_ZNK7QWidget8baseSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget8hasFocusEv</primary></indexterm>_ZNK7QWidget8hasFocusEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget8sizeHintEv</primary></indexterm>_ZNK7QWidget8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget9frameSizeEv</primary></indexterm>_ZNK7QWidget9frameSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK7QWidget9statusTipEv</primary></indexterm>_ZNK7QWidget9statusTipEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK7QWidget9whatsThisEv</primary></indexterm>_ZNK7QWidget9whatsThisEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QMenuBar10frameWidthEv</primary></indexterm>_ZNK8QMenuBar10frameWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QMenuBar10metaObjectEv</primary></indexterm>_ZNK8QMenuBar10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QMenuBar11isDefaultUpEv</primary></indexterm>_ZNK8QMenuBar11isDefaultUpEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QMenuBar12activeActionEv</primary></indexterm>_ZNK8QMenuBar12activeActionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QMenuBar12autoGeometryEv</primary></indexterm>_ZNK8QMenuBar12autoGeometryEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QMenuBar12cornerWidgetEN2Qt6CornerE</primary></indexterm>_ZNK8QMenuBar12cornerWidgetEN2Qt6CornerE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QMenuBar13itemParameterEi</primary></indexterm>_ZNK8QMenuBar13itemParameterEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QMenuBar14actionGeometryEP7QAction</primary></indexterm>_ZNK8QMenuBar14actionGeometryEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QMenuBar14heightForWidthEi</primary></indexterm>_ZNK8QMenuBar14heightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QMenuBar15minimumSizeHintEv</primary></indexterm>_ZNK8QMenuBar15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QMenuBar8actionAtERK6QPoint</primary></indexterm>_ZNK8QMenuBar8actionAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QMenuBar8sizeHintEv</primary></indexterm>_ZNK8QMenuBar8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter10backgroundEv</primary></indexterm>_ZNK8QPainter10backgroundEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter10clipRegionEv</primary></indexterm>_ZNK8QPainter10clipRegionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter11brushOriginEv</primary></indexterm>_ZNK8QPainter11brushOriginEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter11fontMetricsEv</primary></indexterm>_ZNK8QPainter11fontMetricsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter11hasClippingEv</primary></indexterm>_ZNK8QPainter11hasClippingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter11paintEngineEv</primary></indexterm>_ZNK8QPainter11paintEngineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter11renderHintsEv</primary></indexterm>_ZNK8QPainter11renderHintsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter12deviceMatrixEv</primary></indexterm>_ZNK8QPainter12deviceMatrixEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter12translationXEv</primary></indexterm>_ZNK8QPainter12translationXEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter12translationYEv</primary></indexterm>_ZNK8QPainter12translationYEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter13matrixEnabledEv</primary></indexterm>_ZNK8QPainter13matrixEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter14backgroundModeEv</primary></indexterm>_ZNK8QPainter14backgroundModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter15compositionModeEv</primary></indexterm>_ZNK8QPainter15compositionModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter15layoutDirectionEv</primary></indexterm>_ZNK8QPainter15layoutDirectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter20viewTransformEnabledEv</primary></indexterm>_ZNK8QPainter20viewTransformEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter3mapEiiPiS0_</primary></indexterm>_ZNK8QPainter3mapEiiPiS0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter3penEv</primary></indexterm>_ZNK8QPainter3penEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter4fontEv</primary></indexterm>_ZNK8QPainter4fontEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter5brushEv</primary></indexterm>_ZNK8QPainter5brushEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter5xFormERK5QRect</primary></indexterm>_ZNK8QPainter5xFormERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter5xFormERK6QPoint</primary></indexterm>_ZNK8QPainter5xFormERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter5xFormERK8QPolygon</primary></indexterm>_ZNK8QPainter5xFormERK8QPolygon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter5xFormERK8QPolygonii</primary></indexterm>_ZNK8QPainter5xFormERK8QPolygonii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter6deviceEv</primary></indexterm>_ZNK8QPainter6deviceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter6matrixEv</primary></indexterm>_ZNK8QPainter6matrixEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter6windowEv</primary></indexterm>_ZNK8QPainter6windowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter8clipPathEv</primary></indexterm>_ZNK8QPainter8clipPathEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter8fontInfoEv</primary></indexterm>_ZNK8QPainter8fontInfoEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter8isActiveEv</primary></indexterm>_ZNK8QPainter8isActiveEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter8viewportEv</primary></indexterm>_ZNK8QPainter8viewportEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter8xFormDevERK5QRect</primary></indexterm>_ZNK8QPainter8xFormDevERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter8xFormDevERK6QPoint</primary></indexterm>_ZNK8QPainter8xFormDevERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPainter8xFormDevERK8QPolygon</primary></indexterm>_ZNK8QPainter8xFormDevERK8QPolygon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPainter8xFormDevERK8QPolygonii</primary></indexterm>_ZNK8QPainter8xFormDevERK8QPolygonii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPalette12serialNumberEv</primary></indexterm>_ZNK8QPalette12serialNumberEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPalette5brushENS_10ColorGroupENS_9ColorRoleE</primary></indexterm>_ZNK8QPalette5brushENS_10ColorGroupENS_9ColorRoleE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPalette7isEqualENS_10ColorGroupES0_</primary></indexterm>_ZNK8QPalette7isEqualENS_10ColorGroupES0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPalette7resolveERKS_</primary></indexterm>_ZNK8QPalette7resolveERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPalette8isCopyOfERKS_</primary></indexterm>_ZNK8QPalette8isCopyOfERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPalettecv8QVariantEv</primary></indexterm>_ZNK8QPalettecv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPaletteeqERKS_</primary></indexterm>_ZNK8QPaletteeqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPicture10isDetachedEv</primary></indexterm>_ZNK8QPicture10isDetachedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPicture11paintEngineEv</primary></indexterm>_ZNK8QPicture11paintEngineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPicture12boundingRectEv</primary></indexterm>_ZNK8QPicture12boundingRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPicture4dataEv</primary></indexterm>_ZNK8QPicture4dataEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPicture4sizeEv</primary></indexterm>_ZNK8QPicture4sizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPicture6isNullEv</primary></indexterm>_ZNK8QPicture6isNullEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPicture6metricEN12QPaintDevice17PaintDeviceMetricE</primary></indexterm>_ZNK8QPicture6metricEN12QPaintDevice17PaintDeviceMetricE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPicture7devTypeEv</primary></indexterm>_ZNK8QPicture7devTypeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPolygon12boundingRectEv</primary></indexterm>_ZNK8QPolygon12boundingRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPolygon5pointEiPiS0_</primary></indexterm>_ZNK8QPolygon5pointEiPiS0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPolygoncv8QVariantEv</primary></indexterm>_ZNK8QPolygoncv8QVariantEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter10printRangeEv</primary></indexterm>_ZNK8QPrinter10printRangeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter10resolutionEv</primary></indexterm>_ZNK8QPrinter10resolutionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter11orientationEv</primary></indexterm>_ZNK8QPrinter11orientationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter11paintEngineEv</primary></indexterm>_ZNK8QPrinter11paintEngineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter11paperSourceEv</primary></indexterm>_ZNK8QPrinter11paperSourceEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter11printEngineEv</primary></indexterm>_ZNK8QPrinter11printEngineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter11printerNameEv</primary></indexterm>_ZNK8QPrinter11printerNameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter12outputFormatEv</primary></indexterm>_ZNK8QPrinter12outputFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter12printProgramEv</primary></indexterm>_ZNK8QPrinter12printProgramEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter12printerStateEv</primary></indexterm>_ZNK8QPrinter12printerStateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter13collateCopiesEv</primary></indexterm>_ZNK8QPrinter13collateCopiesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter14outputFileNameEv</primary></indexterm>_ZNK8QPrinter14outputFileNameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter15isOptionEnabledENS_13PrinterOptionE</primary></indexterm>_ZNK8QPrinter15isOptionEnabledENS_13PrinterOptionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter20collateCopiesEnabledEv</primary></indexterm>_ZNK8QPrinter20collateCopiesEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter20fontEmbeddingEnabledEv</primary></indexterm>_ZNK8QPrinter20fontEmbeddingEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter20supportedResolutionsEv</primary></indexterm>_ZNK8QPrinter20supportedResolutionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter22printerSelectionOptionEv</primary></indexterm>_ZNK8QPrinter22printerSelectionOptionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter6metricEN12QPaintDevice17PaintDeviceMetricE</primary></indexterm>_ZNK8QPrinter6metricEN12QPaintDevice17PaintDeviceMetricE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter6toPageEv</primary></indexterm>_ZNK8QPrinter6toPageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter7creatorEv</primary></indexterm>_ZNK8QPrinter7creatorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter7devTypeEv</primary></indexterm>_ZNK8QPrinter7devTypeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter7docNameEv</primary></indexterm>_ZNK8QPrinter7docNameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter7maxPageEv</primary></indexterm>_ZNK8QPrinter7maxPageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter7minPageEv</primary></indexterm>_ZNK8QPrinter7minPageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter8fromPageEv</primary></indexterm>_ZNK8QPrinter8fromPageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter8fullPageEv</primary></indexterm>_ZNK8QPrinter8fullPageEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter8pageRectEv</primary></indexterm>_ZNK8QPrinter8pageRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter8pageSizeEv</primary></indexterm>_ZNK8QPrinter8pageSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter9colorModeEv</primary></indexterm>_ZNK8QPrinter9colorModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter9numCopiesEv</primary></indexterm>_ZNK8QPrinter9numCopiesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QPrinter9pageOrderEv</primary></indexterm>_ZNK8QPrinter9pageOrderEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QPrinter9paperRectEv</primary></indexterm>_ZNK8QPrinter9paperRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QSpinBox10metaObjectEv</primary></indexterm>_ZNK8QSpinBox10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QSpinBox10singleStepEv</primary></indexterm>_ZNK8QSpinBox10singleStepEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QSpinBox13textFromValueEi</primary></indexterm>_ZNK8QSpinBox13textFromValueEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QSpinBox13valueFromTextERK7QString</primary></indexterm>_ZNK8QSpinBox13valueFromTextERK7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QSpinBox5fixupER7QString</primary></indexterm>_ZNK8QSpinBox5fixupER7QString <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QSpinBox5valueEv</primary></indexterm>_ZNK8QSpinBox5valueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QSpinBox6prefixEv</primary></indexterm>_ZNK8QSpinBox6prefixEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QSpinBox6suffixEv</primary></indexterm>_ZNK8QSpinBox6suffixEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QSpinBox7maximumEv</primary></indexterm>_ZNK8QSpinBox7maximumEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QSpinBox7minimumEv</primary></indexterm>_ZNK8QSpinBox7minimumEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QSpinBox8validateER7QStringRi</primary></indexterm>_ZNK8QSpinBox8validateER7QStringRi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QSpinBox9cleanTextEv</primary></indexterm>_ZNK8QSpinBox9cleanTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QToolBar10metaObjectEv</primary></indexterm>_ZNK8QToolBar10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QToolBar11orientationEv</primary></indexterm>_ZNK8QToolBar11orientationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QToolBar12allowedAreasEv</primary></indexterm>_ZNK8QToolBar12allowedAreasEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QToolBar14actionGeometryEP7QAction</primary></indexterm>_ZNK8QToolBar14actionGeometryEP7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QToolBar15toolButtonStyleEv</primary></indexterm>_ZNK8QToolBar15toolButtonStyleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QToolBar16toggleViewActionEv</primary></indexterm>_ZNK8QToolBar16toggleViewActionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QToolBar8actionAtERK6QPoint</primary></indexterm>_ZNK8QToolBar8actionAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QToolBar8iconSizeEv</primary></indexterm>_ZNK8QToolBar8iconSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QToolBar9isMovableEv</primary></indexterm>_ZNK8QToolBar9isMovableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QToolBox10metaObjectEv</primary></indexterm>_ZNK8QToolBox10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QToolBox11itemToolTipEi</primary></indexterm>_ZNK8QToolBox11itemToolTipEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QToolBox12currentIndexEv</primary></indexterm>_ZNK8QToolBox12currentIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QToolBox13currentWidgetEv</primary></indexterm>_ZNK8QToolBox13currentWidgetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QToolBox13isItemEnabledEi</primary></indexterm>_ZNK8QToolBox13isItemEnabledEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QToolBox5countEv</primary></indexterm>_ZNK8QToolBox5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QToolBox6widgetEi</primary></indexterm>_ZNK8QToolBox6widgetEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QToolBox7indexOfEP7QWidget</primary></indexterm>_ZNK8QToolBox7indexOfEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK8QToolBox8itemIconEi</primary></indexterm>_ZNK8QToolBox8itemIconEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK8QToolBox8itemTextEi</primary></indexterm>_ZNK8QToolBox8itemTextEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QCDEStyle10metaObjectEv</primary></indexterm>_ZNK9QCDEStyle10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QCDEStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget</primary></indexterm>_ZNK9QCDEStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QCDEStyle11pixelMetricEN6QStyle11PixelMetricEPK12QStyleOptionPK7QWidget</primary></indexterm>_ZNK9QCDEStyle11pixelMetricEN6QStyle11PixelMetricEPK12QStyleOptionPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QCDEStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget</primary></indexterm>_ZNK9QCDEStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QCDEStyle15standardPaletteEv</primary></indexterm>_ZNK9QCDEStyle15standardPaletteEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QCheckBox10checkStateEv</primary></indexterm>_ZNK9QCheckBox10checkStateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QCheckBox10isTristateEv</primary></indexterm>_ZNK9QCheckBox10isTristateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QCheckBox10metaObjectEv</primary></indexterm>_ZNK9QCheckBox10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QCheckBox8sizeHintEv</primary></indexterm>_ZNK9QCheckBox8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QCheckBox9hitButtonERK6QPoint</primary></indexterm>_ZNK9QCheckBox9hitButtonERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QColormap4modeEv</primary></indexterm>_ZNK9QColormap4modeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QColormap4sizeEv</primary></indexterm>_ZNK9QColormap4sizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QColormap5depthEv</primary></indexterm>_ZNK9QColormap5depthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QColormap5pixelERK6QColor</primary></indexterm>_ZNK9QColormap5pixelERK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QColormap7colorAtEj</primary></indexterm>_ZNK9QColormap7colorAtEj <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QColormap8colormapEv</primary></indexterm>_ZNK9QColormap8colormapEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox10isEditableEv</primary></indexterm>_ZNK9QComboBox10isEditableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox10metaObjectEv</primary></indexterm>_ZNK9QComboBox10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox11currentTextEv</primary></indexterm>_ZNK9QComboBox11currentTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox11modelColumnEv</primary></indexterm>_ZNK9QComboBox11modelColumnEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox12currentIndexEv</primary></indexterm>_ZNK9QComboBox12currentIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox12insertPolicyEv</primary></indexterm>_ZNK9QComboBox12insertPolicyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox12itemDelegateEv</primary></indexterm>_ZNK9QComboBox12itemDelegateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox14autoCompletionEv</primary></indexterm>_ZNK9QComboBox14autoCompletionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox14rootModelIndexEv</primary></indexterm>_ZNK9QComboBox14rootModelIndexEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox15maxVisibleItemsEv</primary></indexterm>_ZNK9QComboBox15maxVisibleItemsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox15minimumSizeHintEv</primary></indexterm>_ZNK9QComboBox15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox16inputMethodQueryEN2Qt16InputMethodQueryE</primary></indexterm>_ZNK9QComboBox16inputMethodQueryEN2Qt16InputMethodQueryE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox16sizeAdjustPolicyEv</primary></indexterm>_ZNK9QComboBox16sizeAdjustPolicyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox17duplicatesEnabledEv</primary></indexterm>_ZNK9QComboBox17duplicatesEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox21minimumContentsLengthEv</primary></indexterm>_ZNK9QComboBox21minimumContentsLengthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox29autoCompletionCaseSensitivityEv</primary></indexterm>_ZNK9QComboBox29autoCompletionCaseSensitivityEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox4viewEv</primary></indexterm>_ZNK9QComboBox4viewEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox5countEv</primary></indexterm>_ZNK9QComboBox5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox5modelEv</primary></indexterm>_ZNK9QComboBox5modelEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox8findDataERK8QVarianti6QFlagsIN2Qt9MatchFlagEE</primary></indexterm>_ZNK9QComboBox8findDataERK8QVarianti6QFlagsIN2Qt9MatchFlagEE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox8hasFrameEv</primary></indexterm>_ZNK9QComboBox8hasFrameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox8iconSizeEv</primary></indexterm>_ZNK9QComboBox8iconSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox8itemDataEii</primary></indexterm>_ZNK9QComboBox8itemDataEii <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox8itemIconEi</primary></indexterm>_ZNK9QComboBox8itemIconEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox8itemTextEi</primary></indexterm>_ZNK9QComboBox8itemTextEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox8lineEditEv</primary></indexterm>_ZNK9QComboBox8lineEditEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox8maxCountEv</primary></indexterm>_ZNK9QComboBox8maxCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QComboBox8sizeHintEv</primary></indexterm>_ZNK9QComboBox8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QComboBox9validatorEv</primary></indexterm>_ZNK9QComboBox9validatorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDateEdit10metaObjectEv</primary></indexterm>_ZNK9QDateEdit10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel10headerDataEiN2Qt11OrientationEi</primary></indexterm>_ZNK9QDirModel10headerDataEiN2Qt11OrientationEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel10isReadOnlyEv</primary></indexterm>_ZNK9QDirModel10isReadOnlyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel10metaObjectEv</primary></indexterm>_ZNK9QDirModel10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel11columnCountERK11QModelIndex</primary></indexterm>_ZNK9QDirModel11columnCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel11hasChildrenERK11QModelIndex</primary></indexterm>_ZNK9QDirModel11hasChildrenERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel11nameFiltersEv</primary></indexterm>_ZNK9QDirModel11nameFiltersEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel12iconProviderEv</primary></indexterm>_ZNK9QDirModel12iconProviderEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel14lazyChildCountEv</primary></indexterm>_ZNK9QDirModel14lazyChildCountEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel15resolveSymlinksEv</primary></indexterm>_ZNK9QDirModel15resolveSymlinksEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel20supportedDropActionsEv</primary></indexterm>_ZNK9QDirModel20supportedDropActionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel4dataERK11QModelIndexi</primary></indexterm>_ZNK9QDirModel4dataERK11QModelIndexi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel5flagsERK11QModelIndex</primary></indexterm>_ZNK9QDirModel5flagsERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel5indexERK7QStringi</primary></indexterm>_ZNK9QDirModel5indexERK7QStringi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel5indexEiiRK11QModelIndex</primary></indexterm>_ZNK9QDirModel5indexEiiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel5isDirERK11QModelIndex</primary></indexterm>_ZNK9QDirModel5isDirERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel6filterEv</primary></indexterm>_ZNK9QDirModel6filterEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel6parentERK11QModelIndex</primary></indexterm>_ZNK9QDirModel6parentERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel7sortingEv</primary></indexterm>_ZNK9QDirModel7sortingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel8fileIconERK11QModelIndex</primary></indexterm>_ZNK9QDirModel8fileIconERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel8fileInfoERK11QModelIndex</primary></indexterm>_ZNK9QDirModel8fileInfoERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel8fileNameERK11QModelIndex</primary></indexterm>_ZNK9QDirModel8fileNameERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel8filePathERK11QModelIndex</primary></indexterm>_ZNK9QDirModel8filePathERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel8mimeDataERK5QListI11QModelIndexE</primary></indexterm>_ZNK9QDirModel8mimeDataERK5QListI11QModelIndexE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QDirModel8rowCountERK11QModelIndex</primary></indexterm>_ZNK9QDirModel8rowCountERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QDirModel9mimeTypesEv</primary></indexterm>_ZNK9QDirModel9mimeTypesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QFontInfo10exactMatchEv</primary></indexterm>_ZNK9QFontInfo10exactMatchEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QFontInfo10fixedPitchEv</primary></indexterm>_ZNK9QFontInfo10fixedPitchEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QFontInfo10pointSizeFEv</primary></indexterm>_ZNK9QFontInfo10pointSizeFEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QFontInfo5styleEv</primary></indexterm>_ZNK9QFontInfo5styleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QFontInfo6familyEv</primary></indexterm>_ZNK9QFontInfo6familyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QFontInfo6italicEv</primary></indexterm>_ZNK9QFontInfo6italicEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QFontInfo6weightEv</primary></indexterm>_ZNK9QFontInfo6weightEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QFontInfo7rawModeEv</primary></indexterm>_ZNK9QFontInfo7rawModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QFontInfo8overlineEv</primary></indexterm>_ZNK9QFontInfo8overlineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QFontInfo9pixelSizeEv</primary></indexterm>_ZNK9QFontInfo9pixelSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QFontInfo9pointSizeEv</primary></indexterm>_ZNK9QFontInfo9pointSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QFontInfo9strikeOutEv</primary></indexterm>_ZNK9QFontInfo9strikeOutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QFontInfo9styleHintEv</primary></indexterm>_ZNK9QFontInfo9styleHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QFontInfo9underlineEv</primary></indexterm>_ZNK9QFontInfo9underlineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QGradient5stopsEv</primary></indexterm>_ZNK9QGradient5stopsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QGradienteqERKS_</primary></indexterm>_ZNK9QGradienteqERKS_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QGroupBox10metaObjectEv</primary></indexterm>_ZNK9QGroupBox10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QGroupBox11isCheckableEv</primary></indexterm>_ZNK9QGroupBox11isCheckableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QGroupBox15minimumSizeHintEv</primary></indexterm>_ZNK9QGroupBox15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QGroupBox5titleEv</primary></indexterm>_ZNK9QGroupBox5titleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QGroupBox6isFlatEv</primary></indexterm>_ZNK9QGroupBox6isFlatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QGroupBox9alignmentEv</primary></indexterm>_ZNK9QGroupBox9alignmentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QGroupBox9isCheckedEv</primary></indexterm>_ZNK9QGroupBox9isCheckedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QKeyEvent9modifiersEv</primary></indexterm>_ZNK9QKeyEvent9modifiersEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit10isModifiedEv</primary></indexterm>_ZNK9QLineEdit10isModifiedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit10isReadOnlyEv</primary></indexterm>_ZNK9QLineEdit10isReadOnlyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit10metaObjectEv</primary></indexterm>_ZNK9QLineEdit10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit11characterAtEiP5QChar</primary></indexterm>_ZNK9QLineEdit11characterAtEiP5QChar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit11displayTextEv</primary></indexterm>_ZNK9QLineEdit11displayTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit11dragEnabledEv</primary></indexterm>_ZNK9QLineEdit11dragEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit12selectedTextEv</primary></indexterm>_ZNK9QLineEdit12selectedTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit14cursorPositionEv</primary></indexterm>_ZNK9QLineEdit14cursorPositionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit14selectionStartEv</primary></indexterm>_ZNK9QLineEdit14selectionStartEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit15hasSelectedTextEv</primary></indexterm>_ZNK9QLineEdit15hasSelectedTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit15isRedoAvailableEv</primary></indexterm>_ZNK9QLineEdit15isRedoAvailableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit15isUndoAvailableEv</primary></indexterm>_ZNK9QLineEdit15isUndoAvailableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit15minimumSizeHintEv</primary></indexterm>_ZNK9QLineEdit15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit16inputMethodQueryEN2Qt16InputMethodQueryE</primary></indexterm>_ZNK9QLineEdit16inputMethodQueryEN2Qt16InputMethodQueryE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit18hasAcceptableInputEv</primary></indexterm>_ZNK9QLineEdit18hasAcceptableInputEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit4copyEv</primary></indexterm>_ZNK9QLineEdit4copyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit4textEv</primary></indexterm>_ZNK9QLineEdit4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit6editedEv</primary></indexterm>_ZNK9QLineEdit6editedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit8echoModeEv</primary></indexterm>_ZNK9QLineEdit8echoModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit8hasFrameEv</primary></indexterm>_ZNK9QLineEdit8hasFrameEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit8sizeHintEv</primary></indexterm>_ZNK9QLineEdit8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit9alignmentEv</primary></indexterm>_ZNK9QLineEdit9alignmentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit9inputMaskEv</primary></indexterm>_ZNK9QLineEdit9inputMaskEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QLineEdit9maxLengthEv</primary></indexterm>_ZNK9QLineEdit9maxLengthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QLineEdit9validatorEv</primary></indexterm>_ZNK9QLineEdit9validatorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QListView10isWrappingEv</primary></indexterm>_ZNK9QListView10isWrappingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QListView10layoutModeEv</primary></indexterm>_ZNK9QListView10layoutModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QListView10metaObjectEv</primary></indexterm>_ZNK9QListView10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QListView10resizeModeEv</primary></indexterm>_ZNK9QListView10resizeModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QListView10visualRectERK11QModelIndex</primary></indexterm>_ZNK9QListView10visualRectERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QListView11isRowHiddenEi</primary></indexterm>_ZNK9QListView11isRowHiddenEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QListView11modelColumnEv</primary></indexterm>_ZNK9QListView11modelColumnEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QListView11viewOptionsEv</primary></indexterm>_ZNK9QListView11viewOptionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QListView12contentsSizeEv</primary></indexterm>_ZNK9QListView12contentsSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QListView12rectForIndexERK11QModelIndex</primary></indexterm>_ZNK9QListView12rectForIndexERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QListView13isIndexHiddenERK11QModelIndex</primary></indexterm>_ZNK9QListView13isIndexHiddenERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QListView14verticalOffsetEv</primary></indexterm>_ZNK9QListView14verticalOffsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QListView15selectedIndexesEv</primary></indexterm>_ZNK9QListView15selectedIndexesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QListView16horizontalOffsetEv</primary></indexterm>_ZNK9QListView16horizontalOffsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QListView16uniformItemSizesEv</primary></indexterm>_ZNK9QListView16uniformItemSizesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QListView24visualRegionForSelectionERK14QItemSelection</primary></indexterm>_ZNK9QListView24visualRegionForSelectionERK14QItemSelection <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QListView4flowEv</primary></indexterm>_ZNK9QListView4flowEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QListView7indexAtERK6QPoint</primary></indexterm>_ZNK9QListView7indexAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QListView7spacingEv</primary></indexterm>_ZNK9QListView7spacingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QListView8gridSizeEv</primary></indexterm>_ZNK9QListView8gridSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QListView8movementEv</primary></indexterm>_ZNK9QListView8movementEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QListView8viewModeEv</primary></indexterm>_ZNK9QListView8viewModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QMenuItem11signalValueEv</primary></indexterm>_ZNK9QMenuItem11signalValueEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QMenuItem2idEv</primary></indexterm>_ZNK9QMenuItem2idEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QPolygonF12boundingRectEv</primary></indexterm>_ZNK9QPolygonF12boundingRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QPolygonF9toPolygonEv</primary></indexterm>_ZNK9QPolygonF9toPolygonEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QShortcut10metaObjectEv</primary></indexterm>_ZNK9QShortcut10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QShortcut2idEv</primary></indexterm>_ZNK9QShortcut2idEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QShortcut3keyEv</primary></indexterm>_ZNK9QShortcut3keyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QShortcut9isEnabledEv</primary></indexterm>_ZNK9QShortcut9isEnabledEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QShortcut9whatsThisEv</primary></indexterm>_ZNK9QShortcut9whatsThisEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSizeGrip10metaObjectEv</primary></indexterm>_ZNK9QSizeGrip10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSizeGrip8sizeHintEv</primary></indexterm>_ZNK9QSizeGrip8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSplitter10metaObjectEv</primary></indexterm>_ZNK9QSplitter10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSplitter11handleWidthEv</primary></indexterm>_ZNK9QSplitter11handleWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSplitter11orientationEv</primary></indexterm>_ZNK9QSplitter11orientationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSplitter12opaqueResizeEv</primary></indexterm>_ZNK9QSplitter12opaqueResizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSplitter13isCollapsibleEi</primary></indexterm>_ZNK9QSplitter13isCollapsibleEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSplitter15minimumSizeHintEv</primary></indexterm>_ZNK9QSplitter15minimumSizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSplitter19childrenCollapsibleEv</primary></indexterm>_ZNK9QSplitter19childrenCollapsibleEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSplitter5countEv</primary></indexterm>_ZNK9QSplitter5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSplitter5sizesEv</primary></indexterm>_ZNK9QSplitter5sizesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSplitter6handleEi</primary></indexterm>_ZNK9QSplitter6handleEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSplitter6widgetEi</primary></indexterm>_ZNK9QSplitter6widgetEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSplitter7indexOfEP7QWidget</primary></indexterm>_ZNK9QSplitter7indexOfEP7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSplitter8getRangeEiPiS0_</primary></indexterm>_ZNK9QSplitter8getRangeEiPiS0_ <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QSplitter8sizeHintEv</primary></indexterm>_ZNK9QSplitter8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QSplitter9saveStateEv</primary></indexterm>_ZNK9QSplitter9saveStateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit10cursorRectERK11QTextCursor</primary></indexterm>_ZNK9QTextEdit10cursorRectERK11QTextCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit10cursorRectEv</primary></indexterm>_ZNK9QTextEdit10cursorRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit10fontFamilyEv</primary></indexterm>_ZNK9QTextEdit10fontFamilyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit10fontItalicEv</primary></indexterm>_ZNK9QTextEdit10fontItalicEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit10fontWeightEv</primary></indexterm>_ZNK9QTextEdit10fontWeightEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit10isReadOnlyEv</primary></indexterm>_ZNK9QTextEdit10isReadOnlyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit10metaObjectEv</primary></indexterm>_ZNK9QTextEdit10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit10textCursorEv</primary></indexterm>_ZNK9QTextEdit10textCursorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit10textFormatEv</primary></indexterm>_ZNK9QTextEdit10textFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit11currentFontEv</primary></indexterm>_ZNK9QTextEdit11currentFontEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit12lineWrapModeEv</primary></indexterm>_ZNK9QTextEdit12lineWrapModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit12tabStopWidthEv</primary></indexterm>_ZNK9QTextEdit12tabStopWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit12wordWrapModeEv</primary></indexterm>_ZNK9QTextEdit12wordWrapModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit13fontPointSizeEv</primary></indexterm>_ZNK9QTextEdit13fontPointSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit13fontUnderlineEv</primary></indexterm>_ZNK9QTextEdit13fontUnderlineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit13overwriteModeEv</primary></indexterm>_ZNK9QTextEdit13overwriteModeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit14acceptRichTextEv</primary></indexterm>_ZNK9QTextEdit14acceptRichTextEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit14autoFormattingEv</primary></indexterm>_ZNK9QTextEdit14autoFormattingEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit15tabChangesFocusEv</primary></indexterm>_ZNK9QTextEdit15tabChangesFocusEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit16inputMethodQueryEN2Qt16InputMethodQueryE</primary></indexterm>_ZNK9QTextEdit16inputMethodQueryEN2Qt16InputMethodQueryE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit17currentCharFormatEv</primary></indexterm>_ZNK9QTextEdit17currentCharFormatEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit17cursorForPositionERK6QPoint</primary></indexterm>_ZNK9QTextEdit17cursorForPositionERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit21canInsertFromMimeDataEPK9QMimeData</primary></indexterm>_ZNK9QTextEdit21canInsertFromMimeDataEPK9QMimeData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit21lineWrapColumnOrWidthEv</primary></indexterm>_ZNK9QTextEdit21lineWrapColumnOrWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit27createMimeDataFromSelectionEv</primary></indexterm>_ZNK9QTextEdit27createMimeDataFromSelectionEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit4textEv</primary></indexterm>_ZNK9QTextEdit4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit8anchorAtERK6QPoint</primary></indexterm>_ZNK9QTextEdit8anchorAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit8documentEv</primary></indexterm>_ZNK9QTextEdit8documentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextEdit9alignmentEv</primary></indexterm>_ZNK9QTextEdit9alignmentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextEdit9textColorEv</primary></indexterm>_ZNK9QTextEdit9textColorEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextItem11renderFlagsEv</primary></indexterm>_ZNK9QTextItem11renderFlagsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextItem4fontEv</primary></indexterm>_ZNK9QTextItem4fontEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextItem4textEv</primary></indexterm>_ZNK9QTextItem4textEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextItem5widthEv</primary></indexterm>_ZNK9QTextItem5widthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextItem6ascentEv</primary></indexterm>_ZNK9QTextItem6ascentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextItem7descentEv</primary></indexterm>_ZNK9QTextItem7descentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextLine10textLengthEv</primary></indexterm>_ZNK9QTextLine10textLengthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextLine15naturalTextRectEv</primary></indexterm>_ZNK9QTextLine15naturalTextRectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextLine16naturalTextWidthEv</primary></indexterm>_ZNK9QTextLine16naturalTextWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextLine1xEv</primary></indexterm>_ZNK9QTextLine1xEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextLine1yEv</primary></indexterm>_ZNK9QTextLine1yEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextLine4drawEP8QPainterRK7QPointFPKN11QTextLayout11FormatRangeE</primary></indexterm>_ZNK9QTextLine4drawEP8QPainterRK7QPointFPKN11QTextLayout11FormatRangeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextLine4rectEv</primary></indexterm>_ZNK9QTextLine4rectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextLine5widthEv</primary></indexterm>_ZNK9QTextLine5widthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextLine6ascentEv</primary></indexterm>_ZNK9QTextLine6ascentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextLine6heightEv</primary></indexterm>_ZNK9QTextLine6heightEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextLine7descentEv</primary></indexterm>_ZNK9QTextLine7descentEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextLine9cursorToXEPiNS_4EdgeE</primary></indexterm>_ZNK9QTextLine9cursorToXEPiNS_4EdgeE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextLine9textStartEv</primary></indexterm>_ZNK9QTextLine9textStartEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextLine9xToCursorEdNS_14CursorPositionE</primary></indexterm>_ZNK9QTextLine9xToCursorEdNS_14CursorPositionE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextList10itemNumberERK10QTextBlock</primary></indexterm>_ZNK9QTextList10itemNumberERK10QTextBlock <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextList10metaObjectEv</primary></indexterm>_ZNK9QTextList10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextList4itemEi</primary></indexterm>_ZNK9QTextList4itemEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTextList5countEv</primary></indexterm>_ZNK9QTextList5countEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTextList8itemTextERK10QTextBlock</primary></indexterm>_ZNK9QTextList8itemTextERK10QTextBlock <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTimeEdit10metaObjectEv</primary></indexterm>_ZNK9QTimeEdit10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView10indexAboveERK11QModelIndex</primary></indexterm>_ZNK9QTreeView10indexAboveERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView10indexBelowERK11QModelIndex</primary></indexterm>_ZNK9QTreeView10indexBelowERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView10isExpandedERK11QModelIndex</primary></indexterm>_ZNK9QTreeView10isExpandedERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView10metaObjectEv</primary></indexterm>_ZNK9QTreeView10metaObjectEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView10visualRectERK11QModelIndex</primary></indexterm>_ZNK9QTreeView10visualRectERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView11columnWidthEi</primary></indexterm>_ZNK9QTreeView11columnWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView11indentationEv</primary></indexterm>_ZNK9QTreeView11indentationEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView11isRowHiddenEiRK11QModelIndex</primary></indexterm>_ZNK9QTreeView11isRowHiddenEiRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView12drawBranchesEP8QPainterRK5QRectRK11QModelIndex</primary></indexterm>_ZNK9QTreeView12drawBranchesEP8QPainterRK5QRectRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView13isIndexHiddenERK11QModelIndex</primary></indexterm>_ZNK9QTreeView13isIndexHiddenERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView14isColumnHiddenEi</primary></indexterm>_ZNK9QTreeView14isColumnHiddenEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView14verticalOffsetEv</primary></indexterm>_ZNK9QTreeView14verticalOffsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView15itemsExpandableEv</primary></indexterm>_ZNK9QTreeView15itemsExpandableEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView15rootIsDecoratedEv</primary></indexterm>_ZNK9QTreeView15rootIsDecoratedEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView15selectedIndexesEv</primary></indexterm>_ZNK9QTreeView15selectedIndexesEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView16horizontalOffsetEv</primary></indexterm>_ZNK9QTreeView16horizontalOffsetEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView16indexRowSizeHintERK11QModelIndex</primary></indexterm>_ZNK9QTreeView16indexRowSizeHintERK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView17sizeHintForColumnEi</primary></indexterm>_ZNK9QTreeView17sizeHintForColumnEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView17uniformRowHeightsEv</primary></indexterm>_ZNK9QTreeView17uniformRowHeightsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView22columnViewportPositionEi</primary></indexterm>_ZNK9QTreeView22columnViewportPositionEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView24visualRegionForSelectionERK14QItemSelection</primary></indexterm>_ZNK9QTreeView24visualRegionForSelectionERK14QItemSelection <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView6headerEv</primary></indexterm>_ZNK9QTreeView6headerEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView7drawRowEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex</primary></indexterm>_ZNK9QTreeView7drawRowEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZNK9QTreeView7indexAtERK6QPoint</primary></indexterm>_ZNK9QTreeView7indexAtERK6QPoint <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZNK9QTreeView8columnAtEi</primary></indexterm>_ZNK9QTreeView8columnAtEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Zls6QDebugPK6QEvent</primary></indexterm>_Zls6QDebugPK6QEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Zls6QDebugRK12QKeySequence</primary></indexterm>_Zls6QDebugRK12QKeySequence <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Zls6QDebugRK19QItemSelectionRange</primary></indexterm>_Zls6QDebugRK19QItemSelectionRange <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Zls6QDebugRK4QPen</primary></indexterm>_Zls6QDebugRK4QPen <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Zls6QDebugRK6QBrush</primary></indexterm>_Zls6QDebugRK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Zls6QDebugRK6QColor</primary></indexterm>_Zls6QDebugRK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Zls6QDebugRK7QMatrix</primary></indexterm>_Zls6QDebugRK7QMatrix <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Zls6QDebugRK7QRegion</primary></indexterm>_Zls6QDebugRK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Zls6QDebugRK8QPolygon</primary></indexterm>_Zls6QDebugRK8QPolygon <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Zls6QDebugRK9QPolygonF</primary></indexterm>_Zls6QDebugRK9QPolygonF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK11QColorGroup</primary></indexterm>_ZlsR11QDataStreamRK11QColorGroup <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK11QTextFormat</primary></indexterm>_ZlsR11QDataStreamRK11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK11QTextLength</primary></indexterm>_ZlsR11QDataStreamRK11QTextLength <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK12QKeySequence</primary></indexterm>_ZlsR11QDataStreamRK12QKeySequence <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK12QPainterPath</primary></indexterm>_ZlsR11QDataStreamRK12QPainterPath <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK15QListWidgetItem</primary></indexterm>_ZlsR11QDataStreamRK15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK15QTreeWidgetItem</primary></indexterm>_ZlsR11QDataStreamRK15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK16QTableWidgetItem</primary></indexterm>_ZlsR11QDataStreamRK16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK4QPen</primary></indexterm>_ZlsR11QDataStreamRK4QPen <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK5QFont</primary></indexterm>_ZlsR11QDataStreamRK5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK6QBrush</primary></indexterm>_ZlsR11QDataStreamRK6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK6QColor</primary></indexterm>_ZlsR11QDataStreamRK6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK6QImage</primary></indexterm>_ZlsR11QDataStreamRK6QImage <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK7QCursor</primary></indexterm>_ZlsR11QDataStreamRK7QCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK7QMatrix</primary></indexterm>_ZlsR11QDataStreamRK7QMatrix <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK7QPixmap</primary></indexterm>_ZlsR11QDataStreamRK7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK7QRegion</primary></indexterm>_ZlsR11QDataStreamRK7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK8QPalette</primary></indexterm>_ZlsR11QDataStreamRK8QPalette <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK8QPicture</primary></indexterm>_ZlsR11QDataStreamRK8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZlsR11QDataStreamRK9QPolygonF</primary></indexterm>_ZlsR11QDataStreamRK9QPolygonF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZlsR11QTextStreamRK9QSplitter</primary></indexterm>_ZlsR11QTextStreamRK9QSplitter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZmlRK12QPainterPathRK7QMatrix</primary></indexterm>_ZmlRK12QPainterPathRK7QMatrix <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR11QColorGroup</primary></indexterm>_ZrsR11QDataStreamR11QColorGroup <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR11QTextFormat</primary></indexterm>_ZrsR11QDataStreamR11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR11QTextLength</primary></indexterm>_ZrsR11QDataStreamR11QTextLength <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR12QKeySequence</primary></indexterm>_ZrsR11QDataStreamR12QKeySequence <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR12QPainterPath</primary></indexterm>_ZrsR11QDataStreamR12QPainterPath <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR15QListWidgetItem</primary></indexterm>_ZrsR11QDataStreamR15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR15QTreeWidgetItem</primary></indexterm>_ZrsR11QDataStreamR15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR16QTableWidgetItem</primary></indexterm>_ZrsR11QDataStreamR16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR4QPen</primary></indexterm>_ZrsR11QDataStreamR4QPen <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR5QFont</primary></indexterm>_ZrsR11QDataStreamR5QFont <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR6QBrush</primary></indexterm>_ZrsR11QDataStreamR6QBrush <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR6QColor</primary></indexterm>_ZrsR11QDataStreamR6QColor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR6QImage</primary></indexterm>_ZrsR11QDataStreamR6QImage <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR7QCursor</primary></indexterm>_ZrsR11QDataStreamR7QCursor <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR7QMatrix</primary></indexterm>_ZrsR11QDataStreamR7QMatrix <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR7QPixmap</primary></indexterm>_ZrsR11QDataStreamR7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR7QRegion</primary></indexterm>_ZrsR11QDataStreamR7QRegion <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR8QPalette</primary></indexterm>_ZrsR11QDataStreamR8QPalette <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR8QPicture</primary></indexterm>_ZrsR11QDataStreamR8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZrsR11QDataStreamR9QPolygonF</primary></indexterm>_ZrsR11QDataStreamR9QPolygonF <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZrsR11QTextStreamR9QSplitter</primary></indexterm>_ZrsR11QTextStreamR9QSplitter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for QtGui specified in <XREF linkend="tbl-libQtGui-qtg-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libQtGui-qtg-data">
<TITLE>libQtGui - QtGui Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_ZN10QBoxLayout16staticMetaObjectE</primary></indexterm>_ZN10QBoxLayout16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QClipboard16staticMetaObjectE</primary></indexterm>_ZN10QClipboard16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QLCDNumber16staticMetaObjectE</primary></indexterm>_ZN10QLCDNumber16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QScrollBar16staticMetaObjectE</primary></indexterm>_ZN10QScrollBar16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QStatusBar16staticMetaObjectE</primary></indexterm>_ZN10QStatusBar16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTabWidget16staticMetaObjectE</primary></indexterm>_ZN10QTabWidget16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTableView16staticMetaObjectE</primary></indexterm>_ZN10QTableView16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QTextFrame16staticMetaObjectE</primary></indexterm>_ZN10QTextFrame16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QTextTable16staticMetaObjectE</primary></indexterm>_ZN10QTextTable16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN10QValidator16staticMetaObjectE</primary></indexterm>_ZN10QValidator16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN10QWorkspace16staticMetaObjectE</primary></indexterm>_ZN10QWorkspace16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QDockWidget16staticMetaObjectE</primary></indexterm>_ZN11QDockWidget16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFileDialog16staticMetaObjectE</primary></indexterm>_ZN11QFileDialog16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QFocusFrame16staticMetaObjectE</primary></indexterm>_ZN11QFocusFrame16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QFontDialog16staticMetaObjectE</primary></indexterm>_ZN11QFontDialog16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QGridLayout16staticMetaObjectE</primary></indexterm>_ZN11QGridLayout16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QHBoxLayout16staticMetaObjectE</primary></indexterm>_ZN11QHBoxLayout16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QHeaderView16staticMetaObjectE</primary></indexterm>_ZN11QHeaderView16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QListWidget16staticMetaObjectE</primary></indexterm>_ZN11QListWidget16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMainWindow16staticMetaObjectE</primary></indexterm>_ZN11QMainWindow16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QMessageBox16staticMetaObjectE</primary></indexterm>_ZN11QMessageBox16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QMotifStyle16staticMetaObjectE</primary></indexterm>_ZN11QMotifStyle16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QProxyModel16staticMetaObjectE</primary></indexterm>_ZN11QProxyModel16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QPushButton16staticMetaObjectE</primary></indexterm>_ZN11QPushButton16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QRubberBand16staticMetaObjectE</primary></indexterm>_ZN11QRubberBand16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QScrollArea16staticMetaObjectE</primary></indexterm>_ZN11QScrollArea16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QSizePolicy16staticMetaObjectE</primary></indexterm>_ZN11QSizePolicy16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QTextFormat16staticMetaObjectE</primary></indexterm>_ZN11QTextFormat16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTextObject16staticMetaObjectE</primary></indexterm>_ZN11QTextObject16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QToolButton16staticMetaObjectE</primary></indexterm>_ZN11QToolButton16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN11QTreeWidget16staticMetaObjectE</primary></indexterm>_ZN11QTreeWidget16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN11QVBoxLayout16staticMetaObjectE</primary></indexterm>_ZN11QVBoxLayout16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QActionGroup16staticMetaObjectE</primary></indexterm>_ZN12QActionGroup16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QApplication16staticMetaObjectE</primary></indexterm>_ZN12QApplication16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QButtonGroup16staticMetaObjectE</primary></indexterm>_ZN12QButtonGroup16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QColorDialog16staticMetaObjectE</primary></indexterm>_ZN12QColorDialog16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QCommonStyle16staticMetaObjectE</primary></indexterm>_ZN12QCommonStyle16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QInputDialog16staticMetaObjectE</primary></indexterm>_ZN12QInputDialog16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QPrintDialog16staticMetaObjectE</primary></indexterm>_ZN12QPrintDialog16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QProgressBar16staticMetaObjectE</primary></indexterm>_ZN12QProgressBar16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QRadioButton16staticMetaObjectE</primary></indexterm>_ZN12QRadioButton16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QStylePlugin16staticMetaObjectE</primary></indexterm>_ZN12QStylePlugin16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN12QTableWidget16staticMetaObjectE</primary></indexterm>_ZN12QTableWidget16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN12QTextBrowser16staticMetaObjectE</primary></indexterm>_ZN12QTextBrowser16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QDateTimeEdit16staticMetaObjectE</primary></indexterm>_ZN13QDateTimeEdit16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QErrorMessage16staticMetaObjectE</primary></indexterm>_ZN13QErrorMessage16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QInputContext16staticMetaObjectE</primary></indexterm>_ZN13QInputContext16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QIntValidator16staticMetaObjectE</primary></indexterm>_ZN13QIntValidator16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QItemDelegate16staticMetaObjectE</primary></indexterm>_ZN13QItemDelegate16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QSplashScreen16staticMetaObjectE</primary></indexterm>_ZN13QSplashScreen16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN13QTextDocument16staticMetaObjectE</primary></indexterm>_ZN13QTextDocument16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN13QWindowsStyle16staticMetaObjectE</primary></indexterm>_ZN13QWindowsStyle16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QDesktopWidget16staticMetaObjectE</primary></indexterm>_ZN14QDesktopWidget16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QDoubleSpinBox16staticMetaObjectE</primary></indexterm>_ZN14QDoubleSpinBox16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QImageIOPlugin16staticMetaObjectE</primary></indexterm>_ZN14QImageIOPlugin16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN14QStackedLayout16staticMetaObjectE</primary></indexterm>_ZN14QStackedLayout16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN14QStackedWidget16staticMetaObjectE</primary></indexterm>_ZN14QStackedWidget16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QAbstractButton16staticMetaObjectE</primary></indexterm>_ZN15QAbstractButton16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QAbstractSlider16staticMetaObjectE</primary></indexterm>_ZN15QAbstractSlider16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QPlastiqueStyle16staticMetaObjectE</primary></indexterm>_ZN15QPlastiqueStyle16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QProgressDialog16staticMetaObjectE</primary></indexterm>_ZN15QProgressDialog16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QSessionManager16staticMetaObjectE</primary></indexterm>_ZN15QSessionManager16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN15QSplitterHandle16staticMetaObjectE</primary></indexterm>_ZN15QSplitterHandle16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN15QTextBlockGroup16staticMetaObjectE</primary></indexterm>_ZN15QTextBlockGroup16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QAbstractSpinBox16staticMetaObjectE</primary></indexterm>_ZN16QAbstractSpinBox16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QDoubleValidator16staticMetaObjectE</primary></indexterm>_ZN16QDoubleValidator16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN16QRegExpValidator16staticMetaObjectE</primary></indexterm>_ZN16QRegExpValidator16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN16QStringListModel16staticMetaObjectE</primary></indexterm>_ZN16QStringListModel16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QAbstractItemView16staticMetaObjectE</primary></indexterm>_ZN17QAbstractItemView16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN17QAccessiblePlugin16staticMetaObjectE</primary></indexterm>_ZN17QAccessiblePlugin16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN17QIconEnginePlugin16staticMetaObjectE</primary></indexterm>_ZN17QIconEnginePlugin16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN18QStandardItemModel16staticMetaObjectE</primary></indexterm>_ZN18QStandardItemModel16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN18QSyntaxHighlighter16staticMetaObjectE</primary></indexterm>_ZN18QSyntaxHighlighter16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QAbstractProxyModel16staticMetaObjectE</primary></indexterm>_ZN19QAbstractProxyModel16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QAbstractScrollArea16staticMetaObjectE</primary></indexterm>_ZN19QAbstractScrollArea16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN19QInputContextPlugin16staticMetaObjectE</primary></indexterm>_ZN19QInputContextPlugin16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN19QItemSelectionModel16staticMetaObjectE</primary></indexterm>_ZN19QItemSelectionModel16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN20QPictureFormatPlugin16staticMetaObjectE</primary></indexterm>_ZN20QPictureFormatPlugin16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN21QAbstractItemDelegate16staticMetaObjectE</primary></indexterm>_ZN21QAbstractItemDelegate16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN21QSortFilterProxyModel16staticMetaObjectE</primary></indexterm>_ZN21QSortFilterProxyModel16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN23QAccessibleBridgePlugin16staticMetaObjectE</primary></indexterm>_ZN23QAccessibleBridgePlugin16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN27QAbstractTextDocumentLayout16staticMetaObjectE</primary></indexterm>_ZN27QAbstractTextDocumentLayout16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QDial16staticMetaObjectE</primary></indexterm>_ZN5QDial16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN5QDrag16staticMetaObjectE</primary></indexterm>_ZN5QDrag16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN5QMenu16staticMetaObjectE</primary></indexterm>_ZN5QMenu16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QFrame16staticMetaObjectE</primary></indexterm>_ZN6QFrame16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QLabel16staticMetaObjectE</primary></indexterm>_ZN6QLabel16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QMovie16staticMetaObjectE</primary></indexterm>_ZN6QMovie16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN6QSound16staticMetaObjectE</primary></indexterm>_ZN6QSound16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN6QStyle16staticMetaObjectE</primary></indexterm>_ZN6QStyle16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QAction16staticMetaObjectE</primary></indexterm>_ZN7QAction16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QDialog16staticMetaObjectE</primary></indexterm>_ZN7QDialog16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QLayout16staticMetaObjectE</primary></indexterm>_ZN7QLayout16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QSlider16staticMetaObjectE</primary></indexterm>_ZN7QSlider16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN7QTabBar16staticMetaObjectE</primary></indexterm>_ZN7QTabBar16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN7QWidget16staticMetaObjectE</primary></indexterm>_ZN7QWidget16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QMenuBar16staticMetaObjectE</primary></indexterm>_ZN8QMenuBar16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QPalette16staticMetaObjectE</primary></indexterm>_ZN8QPalette16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QSpinBox16staticMetaObjectE</primary></indexterm>_ZN8QSpinBox16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN8QToolBar16staticMetaObjectE</primary></indexterm>_ZN8QToolBar16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN8QToolBox16staticMetaObjectE</primary></indexterm>_ZN8QToolBox16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QCDEStyle16staticMetaObjectE</primary></indexterm>_ZN9QCDEStyle16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QCheckBox16staticMetaObjectE</primary></indexterm>_ZN9QCheckBox16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QComboBox16staticMetaObjectE</primary></indexterm>_ZN9QComboBox16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QDateEdit16staticMetaObjectE</primary></indexterm>_ZN9QDateEdit16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QDirModel16staticMetaObjectE</primary></indexterm>_ZN9QDirModel16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QGroupBox16staticMetaObjectE</primary></indexterm>_ZN9QGroupBox16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QLineEdit16staticMetaObjectE</primary></indexterm>_ZN9QLineEdit16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QListView16staticMetaObjectE</primary></indexterm>_ZN9QListView16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QShortcut16staticMetaObjectE</primary></indexterm>_ZN9QShortcut16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QSizeGrip16staticMetaObjectE</primary></indexterm>_ZN9QSizeGrip16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QSplitter16staticMetaObjectE</primary></indexterm>_ZN9QSplitter16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTextEdit16staticMetaObjectE</primary></indexterm>_ZN9QTextEdit16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTextList16staticMetaObjectE</primary></indexterm>_ZN9QTextList16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZN9QTimeEdit16staticMetaObjectE</primary></indexterm>_ZN9QTimeEdit16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZN9QTreeView16staticMetaObjectE</primary></indexterm>_ZN9QTreeView16staticMetaObjectE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI10QBoxLayout</primary></indexterm>_ZTI10QBoxLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI10QClipboard</primary></indexterm>_ZTI10QClipboard <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI10QDropEvent</primary></indexterm>_ZTI10QDropEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI10QHelpEvent</primary></indexterm>_ZTI10QHelpEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI10QHideEvent</primary></indexterm>_ZTI10QHideEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI10QLCDNumber</primary></indexterm>_ZTI10QLCDNumber <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI10QMoveEvent</primary></indexterm>_ZTI10QMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI10QScrollBar</primary></indexterm>_ZTI10QScrollBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI10QShowEvent</primary></indexterm>_ZTI10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI10QStatusBar</primary></indexterm>_ZTI10QStatusBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI10QTabWidget</primary></indexterm>_ZTI10QTabWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI10QTableView</primary></indexterm>_ZTI10QTableView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI10QTextFrame</primary></indexterm>_ZTI10QTextFrame <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI10QTextTable</primary></indexterm>_ZTI10QTextTable <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI10QValidator</primary></indexterm>_ZTI10QValidator <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI10QWorkspace</primary></indexterm>_ZTI10QWorkspace <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QAccessible</primary></indexterm>_ZTI11QAccessible <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QBmpHandler</primary></indexterm>_ZTI11QBmpHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QCloseEvent</primary></indexterm>_ZTI11QCloseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QDockWidget</primary></indexterm>_ZTI11QDockWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QFileDialog</primary></indexterm>_ZTI11QFileDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QFocusEvent</primary></indexterm>_ZTI11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QFocusFrame</primary></indexterm>_ZTI11QFocusFrame <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QFontDialog</primary></indexterm>_ZTI11QFontDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QGridLayout</primary></indexterm>_ZTI11QGridLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QHBoxLayout</primary></indexterm>_ZTI11QHBoxLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QHeaderView</primary></indexterm>_ZTI11QHeaderView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QHoverEvent</primary></indexterm>_ZTI11QHoverEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QIconEngine</primary></indexterm>_ZTI11QIconEngine <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QInputEvent</primary></indexterm>_ZTI11QInputEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QLayoutItem</primary></indexterm>_ZTI11QLayoutItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QListWidget</primary></indexterm>_ZTI11QListWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QMainWindow</primary></indexterm>_ZTI11QMainWindow <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QMessageBox</primary></indexterm>_ZTI11QMessageBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QMimeSource</primary></indexterm>_ZTI11QMimeSource <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QMotifStyle</primary></indexterm>_ZTI11QMotifStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QMouseEvent</primary></indexterm>_ZTI11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QPaintEvent</primary></indexterm>_ZTI11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QPngHandler</primary></indexterm>_ZTI11QPngHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QPpmHandler</primary></indexterm>_ZTI11QPpmHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QProxyModel</primary></indexterm>_ZTI11QProxyModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QPushButton</primary></indexterm>_ZTI11QPushButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QRubberBand</primary></indexterm>_ZTI11QRubberBand <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QScrollArea</primary></indexterm>_ZTI11QScrollArea <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QSpacerItem</primary></indexterm>_ZTI11QSpacerItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QStrokerOps</primary></indexterm>_ZTI11QStrokerOps <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QTextObject</primary></indexterm>_ZTI11QTextObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QToolButton</primary></indexterm>_ZTI11QToolButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QTreeWidget</primary></indexterm>_ZTI11QTreeWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QVBoxLayout</primary></indexterm>_ZTI11QVBoxLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QWheelEvent</primary></indexterm>_ZTI11QWheelEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QWidgetItem</primary></indexterm>_ZTI11QWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI11QXbmHandler</primary></indexterm>_ZTI11QXbmHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI11QXpmHandler</primary></indexterm>_ZTI11QXpmHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI12QActionEvent</primary></indexterm>_ZTI12QActionEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI12QActionGroup</primary></indexterm>_ZTI12QActionGroup <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI12QApplication</primary></indexterm>_ZTI12QApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI12QButtonGroup</primary></indexterm>_ZTI12QButtonGroup <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI12QColorDialog</primary></indexterm>_ZTI12QColorDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI12QCommonStyle</primary></indexterm>_ZTI12QCommonStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI12QDashStroker</primary></indexterm>_ZTI12QDashStroker <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI12QDragManager</primary></indexterm>_ZTI12QDragManager <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI12QInputDialog</primary></indexterm>_ZTI12QInputDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI12QPaintDevice</primary></indexterm>_ZTI12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI12QPaintEngine</primary></indexterm>_ZTI12QPaintEngine <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI12QPrintDialog</primary></indexterm>_ZTI12QPrintDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI12QPrintEngine</primary></indexterm>_ZTI12QPrintEngine <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI12QProgressBar</primary></indexterm>_ZTI12QProgressBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI12QRadioButton</primary></indexterm>_ZTI12QRadioButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI12QResizeEvent</primary></indexterm>_ZTI12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI12QStylePlugin</primary></indexterm>_ZTI12QStylePlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI12QTableWidget</primary></indexterm>_ZTI12QTableWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI12QTabletEvent</primary></indexterm>_ZTI12QTabletEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI12QTextBrowser</primary></indexterm>_ZTI12QTextBrowser <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI13QDateTimeEdit</primary></indexterm>_ZTI13QDateTimeEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI13QErrorMessage</primary></indexterm>_ZTI13QErrorMessage <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI13QFontEngineFT</primary></indexterm>_ZTI13QFontEngineFT <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI13QFramePrivate</primary></indexterm>_ZTI13QFramePrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI13QInputContext</primary></indexterm>_ZTI13QInputContext <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI13QIntValidator</primary></indexterm>_ZTI13QIntValidator <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI13QItemDelegate</primary></indexterm>_ZTI13QItemDelegate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI13QSplashScreen</primary></indexterm>_ZTI13QSplashScreen <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI13QTextDocument</primary></indexterm>_ZTI13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI13QWindowsStyle</primary></indexterm>_ZTI13QWindowsStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI14QDesktopWidget</primary></indexterm>_ZTI14QDesktopWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI14QDoubleSpinBox</primary></indexterm>_ZTI14QDoubleSpinBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI14QDragMoveEvent</primary></indexterm>_ZTI14QDragMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI14QFileOpenEvent</primary></indexterm>_ZTI14QFileOpenEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI14QIconDragEvent</primary></indexterm>_ZTI14QIconDragEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI14QImageIOPlugin</primary></indexterm>_ZTI14QImageIOPlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI14QLayoutPrivate</primary></indexterm>_ZTI14QLayoutPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI14QShortcutEvent</primary></indexterm>_ZTI14QShortcutEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI14QStackedLayout</primary></indexterm>_ZTI14QStackedLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI14QStackedWidget</primary></indexterm>_ZTI14QStackedWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI14QWidgetPrivate</primary></indexterm>_ZTI14QWidgetPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI15QAbstractButton</primary></indexterm>_ZTI15QAbstractButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI15QAbstractSlider</primary></indexterm>_ZTI15QAbstractSlider <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI15QClipboardEvent</primary></indexterm>_ZTI15QClipboardEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI15QDragEnterEvent</primary></indexterm>_ZTI15QDragEnterEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI15QDragLeaveEvent</primary></indexterm>_ZTI15QDragLeaveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI15QImageIOHandler</primary></indexterm>_ZTI15QImageIOHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI15QListWidgetItem</primary></indexterm>_ZTI15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI15QPlastiqueStyle</primary></indexterm>_ZTI15QPlastiqueStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI15QProgressDialog</primary></indexterm>_ZTI15QProgressDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI15QSessionManager</primary></indexterm>_ZTI15QSessionManager <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI15QSplitterHandle</primary></indexterm>_ZTI15QSplitterHandle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI15QStatusTipEvent</primary></indexterm>_ZTI15QStatusTipEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI15QTextBlockGroup</primary></indexterm>_ZTI15QTextBlockGroup <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI15QTreeWidgetItem</primary></indexterm>_ZTI15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI15QX11EmbedWidget</primary></indexterm>_ZTI15QX11EmbedWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI16QAbstractSpinBox</primary></indexterm>_ZTI16QAbstractSpinBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI16QDoubleValidator</primary></indexterm>_ZTI16QDoubleValidator <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI16QFontEngineMulti</primary></indexterm>_ZTI16QFontEngineMulti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI16QPageSetupDialog</primary></indexterm>_ZTI16QPageSetupDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI16QRegExpValidator</primary></indexterm>_ZTI16QRegExpValidator <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI16QStringListModel</primary></indexterm>_ZTI16QStringListModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI16QTableWidgetItem</primary></indexterm>_ZTI16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI17QAbstractItemView</primary></indexterm>_ZTI17QAbstractItemView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI17QAccessibleObject</primary></indexterm>_ZTI17QAccessibleObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI17QAccessiblePlugin</primary></indexterm>_ZTI17QAccessiblePlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI17QAccessibleWidget</primary></indexterm>_ZTI17QAccessibleWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI17QContextMenuEvent</primary></indexterm>_ZTI17QContextMenuEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI17QFileIconProvider</primary></indexterm>_ZTI17QFileIconProvider <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI17QIconEnginePlugin</primary></indexterm>_ZTI17QIconEnginePlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI17QInputMethodEvent</primary></indexterm>_ZTI17QInputMethodEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI17QTextImageHandler</primary></indexterm>_ZTI17QTextImageHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI18QDragResponseEvent</primary></indexterm>_ZTI18QDragResponseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI18QFontEngineMultiFT</primary></indexterm>_ZTI18QFontEngineMultiFT <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI18QItemEditorFactory</primary></indexterm>_ZTI18QItemEditorFactory <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI18QStandardItemModel</primary></indexterm>_ZTI18QStandardItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI18QSyntaxHighlighter</primary></indexterm>_ZTI18QSyntaxHighlighter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI18QTextBlockUserData</primary></indexterm>_ZTI18QTextBlockUserData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI18QX11EmbedContainer</primary></indexterm>_ZTI18QX11EmbedContainer <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI19QAbstractProxyModel</primary></indexterm>_ZTI19QAbstractProxyModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI19QAbstractScrollArea</primary></indexterm>_ZTI19QAbstractScrollArea <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI19QApplicationPrivate</primary></indexterm>_ZTI19QApplicationPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI19QInputContextPlugin</primary></indexterm>_ZTI19QInputContextPlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI19QItemSelectionModel</primary></indexterm>_ZTI19QItemSelectionModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI19QTextDocumentLayout</primary></indexterm>_ZTI19QTextDocumentLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI19QToolBarChangeEvent</primary></indexterm>_ZTI19QToolBarChangeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI20QAbstractPrintDialog</primary></indexterm>_ZTI20QAbstractPrintDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI20QAccessibleInterface</primary></indexterm>_ZTI20QAccessibleInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI20QMenubarUpdatedEvent</primary></indexterm>_ZTI20QMenubarUpdatedEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI20QPictureFormatPlugin</primary></indexterm>_ZTI20QPictureFormatPlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI20QTextFrameLayoutData</primary></indexterm>_ZTI20QTextFrameLayoutData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI20QTextObjectInterface</primary></indexterm>_ZTI20QTextObjectInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI20QWidgetResizeHandler</primary></indexterm>_ZTI20QWidgetResizeHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI21QAbstractItemDelegate</primary></indexterm>_ZTI21QAbstractItemDelegate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI21QSortFilterProxyModel</primary></indexterm>_ZTI21QSortFilterProxyModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI22QAccessibleApplication</primary></indexterm>_ZTI22QAccessibleApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI22QStyleFactoryInterface</primary></indexterm>_ZTI22QStyleFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI22QWhatsThisClickedEvent</primary></indexterm>_ZTI22QWhatsThisClickedEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI23QAccessibleBridgePlugin</primary></indexterm>_ZTI23QAccessibleBridgePlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI23QPictureFormatInterface</primary></indexterm>_ZTI23QPictureFormatInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI23QWindowStateChangeEvent</primary></indexterm>_ZTI23QWindowStateChangeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI24QAbstractItemViewPrivate</primary></indexterm>_ZTI24QAbstractItemViewPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI24QAbstractPageSetupDialog</primary></indexterm>_ZTI24QAbstractPageSetupDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI27QAbstractTextDocumentLayout</primary></indexterm>_ZTI27QAbstractTextDocumentLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI27QAccessibleFactoryInterface</primary></indexterm>_ZTI27QAccessibleFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI27QIconEngineFactoryInterface</primary></indexterm>_ZTI27QIconEngineFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI29QInputContextFactoryInterface</primary></indexterm>_ZTI29QInputContextFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI31QImageIOHandlerFactoryInterface</primary></indexterm>_ZTI31QImageIOHandlerFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI33QAccessibleBridgeFactoryInterface</primary></indexterm>_ZTI33QAccessibleBridgeFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI5QDial</primary></indexterm>_ZTI5QDial <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI5QDrag</primary></indexterm>_ZTI5QDrag <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI5QMenu</primary></indexterm>_ZTI5QMenu <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI6QFrame</primary></indexterm>_ZTI6QFrame <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI6QImage</primary></indexterm>_ZTI6QImage <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI6QLabel</primary></indexterm>_ZTI6QLabel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI6QMovie</primary></indexterm>_ZTI6QMovie <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI6QSound</primary></indexterm>_ZTI6QSound <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI6QStyle</primary></indexterm>_ZTI6QStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI7QAction</primary></indexterm>_ZTI7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI7QBitmap</primary></indexterm>_ZTI7QBitmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI7QDialog</primary></indexterm>_ZTI7QDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI7QLayout</primary></indexterm>_ZTI7QLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI7QPixmap</primary></indexterm>_ZTI7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI7QSlider</primary></indexterm>_ZTI7QSlider <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI7QTabBar</primary></indexterm>_ZTI7QTabBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI7QWidget</primary></indexterm>_ZTI7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI8QMenuBar</primary></indexterm>_ZTI8QMenuBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI8QPicture</primary></indexterm>_ZTI8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI8QPrinter</primary></indexterm>_ZTI8QPrinter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI8QSpinBox</primary></indexterm>_ZTI8QSpinBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI8QStroker</primary></indexterm>_ZTI8QStroker <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI8QToolBar</primary></indexterm>_ZTI8QToolBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI8QToolBox</primary></indexterm>_ZTI8QToolBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI9QCDEStyle</primary></indexterm>_ZTI9QCDEStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI9QCheckBox</primary></indexterm>_ZTI9QCheckBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI9QComboBox</primary></indexterm>_ZTI9QComboBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI9QDateEdit</primary></indexterm>_ZTI9QDateEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI9QDirModel</primary></indexterm>_ZTI9QDirModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI9QGroupBox</primary></indexterm>_ZTI9QGroupBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI9QKeyEvent</primary></indexterm>_ZTI9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI9QLineEdit</primary></indexterm>_ZTI9QLineEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI9QListView</primary></indexterm>_ZTI9QListView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI9QMenuItem</primary></indexterm>_ZTI9QMenuItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI9QShortcut</primary></indexterm>_ZTI9QShortcut <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI9QSizeGrip</primary></indexterm>_ZTI9QSizeGrip <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI9QSplitter</primary></indexterm>_ZTI9QSplitter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI9QTextEdit</primary></indexterm>_ZTI9QTextEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI9QTextList</primary></indexterm>_ZTI9QTextList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTI9QTimeEdit</primary></indexterm>_ZTI9QTimeEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTI9QTreeView</primary></indexterm>_ZTI9QTreeView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV10QBoxLayout</primary></indexterm>_ZTV10QBoxLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV10QClipboard</primary></indexterm>_ZTV10QClipboard <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV10QDropEvent</primary></indexterm>_ZTV10QDropEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV10QHelpEvent</primary></indexterm>_ZTV10QHelpEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV10QHideEvent</primary></indexterm>_ZTV10QHideEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV10QLCDNumber</primary></indexterm>_ZTV10QLCDNumber <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV10QMoveEvent</primary></indexterm>_ZTV10QMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV10QScrollBar</primary></indexterm>_ZTV10QScrollBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV10QShowEvent</primary></indexterm>_ZTV10QShowEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV10QStatusBar</primary></indexterm>_ZTV10QStatusBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV10QTabWidget</primary></indexterm>_ZTV10QTabWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV10QTableView</primary></indexterm>_ZTV10QTableView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV10QTextFrame</primary></indexterm>_ZTV10QTextFrame <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV10QTextTable</primary></indexterm>_ZTV10QTextTable <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV10QValidator</primary></indexterm>_ZTV10QValidator <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV10QWorkspace</primary></indexterm>_ZTV10QWorkspace <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QBmpHandler</primary></indexterm>_ZTV11QBmpHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QCloseEvent</primary></indexterm>_ZTV11QCloseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QDockWidget</primary></indexterm>_ZTV11QDockWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QFileDialog</primary></indexterm>_ZTV11QFileDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QFocusEvent</primary></indexterm>_ZTV11QFocusEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QFocusFrame</primary></indexterm>_ZTV11QFocusFrame <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QFontDialog</primary></indexterm>_ZTV11QFontDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QGridLayout</primary></indexterm>_ZTV11QGridLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QHBoxLayout</primary></indexterm>_ZTV11QHBoxLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QHeaderView</primary></indexterm>_ZTV11QHeaderView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QHoverEvent</primary></indexterm>_ZTV11QHoverEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QIconEngine</primary></indexterm>_ZTV11QIconEngine <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QInputEvent</primary></indexterm>_ZTV11QInputEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QLayoutItem</primary></indexterm>_ZTV11QLayoutItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QListWidget</primary></indexterm>_ZTV11QListWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QMainWindow</primary></indexterm>_ZTV11QMainWindow <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QMessageBox</primary></indexterm>_ZTV11QMessageBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QMimeSource</primary></indexterm>_ZTV11QMimeSource <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QMotifStyle</primary></indexterm>_ZTV11QMotifStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QMouseEvent</primary></indexterm>_ZTV11QMouseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QPaintEvent</primary></indexterm>_ZTV11QPaintEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QPngHandler</primary></indexterm>_ZTV11QPngHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QPpmHandler</primary></indexterm>_ZTV11QPpmHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QProxyModel</primary></indexterm>_ZTV11QProxyModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QPushButton</primary></indexterm>_ZTV11QPushButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QRubberBand</primary></indexterm>_ZTV11QRubberBand <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QScrollArea</primary></indexterm>_ZTV11QScrollArea <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QSpacerItem</primary></indexterm>_ZTV11QSpacerItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QStrokerOps</primary></indexterm>_ZTV11QStrokerOps <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QTextObject</primary></indexterm>_ZTV11QTextObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QToolButton</primary></indexterm>_ZTV11QToolButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QTreeWidget</primary></indexterm>_ZTV11QTreeWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QVBoxLayout</primary></indexterm>_ZTV11QVBoxLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QWheelEvent</primary></indexterm>_ZTV11QWheelEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QWidgetItem</primary></indexterm>_ZTV11QWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV11QXbmHandler</primary></indexterm>_ZTV11QXbmHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV11QXpmHandler</primary></indexterm>_ZTV11QXpmHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV12QActionEvent</primary></indexterm>_ZTV12QActionEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV12QActionGroup</primary></indexterm>_ZTV12QActionGroup <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV12QApplication</primary></indexterm>_ZTV12QApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV12QButtonGroup</primary></indexterm>_ZTV12QButtonGroup <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV12QColorDialog</primary></indexterm>_ZTV12QColorDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV12QCommonStyle</primary></indexterm>_ZTV12QCommonStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV12QDashStroker</primary></indexterm>_ZTV12QDashStroker <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV12QDragManager</primary></indexterm>_ZTV12QDragManager <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV12QInputDialog</primary></indexterm>_ZTV12QInputDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV12QPaintDevice</primary></indexterm>_ZTV12QPaintDevice <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV12QPaintEngine</primary></indexterm>_ZTV12QPaintEngine <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV12QPrintDialog</primary></indexterm>_ZTV12QPrintDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV12QPrintEngine</primary></indexterm>_ZTV12QPrintEngine <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV12QProgressBar</primary></indexterm>_ZTV12QProgressBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV12QRadioButton</primary></indexterm>_ZTV12QRadioButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV12QResizeEvent</primary></indexterm>_ZTV12QResizeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV12QStylePlugin</primary></indexterm>_ZTV12QStylePlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV12QTableWidget</primary></indexterm>_ZTV12QTableWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV12QTabletEvent</primary></indexterm>_ZTV12QTabletEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV12QTextBrowser</primary></indexterm>_ZTV12QTextBrowser <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV13QDateTimeEdit</primary></indexterm>_ZTV13QDateTimeEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV13QErrorMessage</primary></indexterm>_ZTV13QErrorMessage <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV13QFontEngineFT</primary></indexterm>_ZTV13QFontEngineFT <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV13QFramePrivate</primary></indexterm>_ZTV13QFramePrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV13QInputContext</primary></indexterm>_ZTV13QInputContext <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV13QIntValidator</primary></indexterm>_ZTV13QIntValidator <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV13QItemDelegate</primary></indexterm>_ZTV13QItemDelegate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV13QSplashScreen</primary></indexterm>_ZTV13QSplashScreen <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV13QTextDocument</primary></indexterm>_ZTV13QTextDocument <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV13QWindowsStyle</primary></indexterm>_ZTV13QWindowsStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV14QDesktopWidget</primary></indexterm>_ZTV14QDesktopWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV14QDoubleSpinBox</primary></indexterm>_ZTV14QDoubleSpinBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV14QDragMoveEvent</primary></indexterm>_ZTV14QDragMoveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV14QFileOpenEvent</primary></indexterm>_ZTV14QFileOpenEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV14QIconDragEvent</primary></indexterm>_ZTV14QIconDragEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV14QImageIOPlugin</primary></indexterm>_ZTV14QImageIOPlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV14QLayoutPrivate</primary></indexterm>_ZTV14QLayoutPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV14QShortcutEvent</primary></indexterm>_ZTV14QShortcutEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV14QStackedLayout</primary></indexterm>_ZTV14QStackedLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV14QStackedWidget</primary></indexterm>_ZTV14QStackedWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV14QWidgetPrivate</primary></indexterm>_ZTV14QWidgetPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV15QAbstractButton</primary></indexterm>_ZTV15QAbstractButton <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV15QAbstractSlider</primary></indexterm>_ZTV15QAbstractSlider <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV15QClipboardEvent</primary></indexterm>_ZTV15QClipboardEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV15QDragEnterEvent</primary></indexterm>_ZTV15QDragEnterEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV15QDragLeaveEvent</primary></indexterm>_ZTV15QDragLeaveEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV15QImageIOHandler</primary></indexterm>_ZTV15QImageIOHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV15QListWidgetItem</primary></indexterm>_ZTV15QListWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV15QPlastiqueStyle</primary></indexterm>_ZTV15QPlastiqueStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV15QProgressDialog</primary></indexterm>_ZTV15QProgressDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV15QSessionManager</primary></indexterm>_ZTV15QSessionManager <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV15QSplitterHandle</primary></indexterm>_ZTV15QSplitterHandle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV15QStatusTipEvent</primary></indexterm>_ZTV15QStatusTipEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV15QTextBlockGroup</primary></indexterm>_ZTV15QTextBlockGroup <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV15QTreeWidgetItem</primary></indexterm>_ZTV15QTreeWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV15QX11EmbedWidget</primary></indexterm>_ZTV15QX11EmbedWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV16QAbstractSpinBox</primary></indexterm>_ZTV16QAbstractSpinBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV16QDoubleValidator</primary></indexterm>_ZTV16QDoubleValidator <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV16QFontEngineMulti</primary></indexterm>_ZTV16QFontEngineMulti <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV16QPageSetupDialog</primary></indexterm>_ZTV16QPageSetupDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV16QRegExpValidator</primary></indexterm>_ZTV16QRegExpValidator <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV16QStringListModel</primary></indexterm>_ZTV16QStringListModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV16QTableWidgetItem</primary></indexterm>_ZTV16QTableWidgetItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV17QAbstractItemView</primary></indexterm>_ZTV17QAbstractItemView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV17QAccessibleObject</primary></indexterm>_ZTV17QAccessibleObject <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV17QAccessiblePlugin</primary></indexterm>_ZTV17QAccessiblePlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV17QAccessibleWidget</primary></indexterm>_ZTV17QAccessibleWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV17QContextMenuEvent</primary></indexterm>_ZTV17QContextMenuEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV17QFileIconProvider</primary></indexterm>_ZTV17QFileIconProvider <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV17QIconEnginePlugin</primary></indexterm>_ZTV17QIconEnginePlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV17QInputMethodEvent</primary></indexterm>_ZTV17QInputMethodEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV17QTextImageHandler</primary></indexterm>_ZTV17QTextImageHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV18QDragResponseEvent</primary></indexterm>_ZTV18QDragResponseEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV18QFontEngineMultiFT</primary></indexterm>_ZTV18QFontEngineMultiFT <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV18QItemEditorFactory</primary></indexterm>_ZTV18QItemEditorFactory <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV18QStandardItemModel</primary></indexterm>_ZTV18QStandardItemModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV18QSyntaxHighlighter</primary></indexterm>_ZTV18QSyntaxHighlighter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV18QTextBlockUserData</primary></indexterm>_ZTV18QTextBlockUserData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV18QX11EmbedContainer</primary></indexterm>_ZTV18QX11EmbedContainer <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV19QAbstractProxyModel</primary></indexterm>_ZTV19QAbstractProxyModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV19QAbstractScrollArea</primary></indexterm>_ZTV19QAbstractScrollArea <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV19QApplicationPrivate</primary></indexterm>_ZTV19QApplicationPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV19QInputContextPlugin</primary></indexterm>_ZTV19QInputContextPlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV19QItemSelectionModel</primary></indexterm>_ZTV19QItemSelectionModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV19QTextDocumentLayout</primary></indexterm>_ZTV19QTextDocumentLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV19QToolBarChangeEvent</primary></indexterm>_ZTV19QToolBarChangeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV20QAbstractPrintDialog</primary></indexterm>_ZTV20QAbstractPrintDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV20QAccessibleInterface</primary></indexterm>_ZTV20QAccessibleInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV20QMenubarUpdatedEvent</primary></indexterm>_ZTV20QMenubarUpdatedEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV20QPictureFormatPlugin</primary></indexterm>_ZTV20QPictureFormatPlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV20QTextFrameLayoutData</primary></indexterm>_ZTV20QTextFrameLayoutData <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV20QTextObjectInterface</primary></indexterm>_ZTV20QTextObjectInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV20QWidgetResizeHandler</primary></indexterm>_ZTV20QWidgetResizeHandler <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV21QAbstractItemDelegate</primary></indexterm>_ZTV21QAbstractItemDelegate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV21QSortFilterProxyModel</primary></indexterm>_ZTV21QSortFilterProxyModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV22QAccessibleApplication</primary></indexterm>_ZTV22QAccessibleApplication <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV22QStyleFactoryInterface</primary></indexterm>_ZTV22QStyleFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV22QWhatsThisClickedEvent</primary></indexterm>_ZTV22QWhatsThisClickedEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV23QAccessibleBridgePlugin</primary></indexterm>_ZTV23QAccessibleBridgePlugin <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV23QPictureFormatInterface</primary></indexterm>_ZTV23QPictureFormatInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV23QWindowStateChangeEvent</primary></indexterm>_ZTV23QWindowStateChangeEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV24QAbstractItemViewPrivate</primary></indexterm>_ZTV24QAbstractItemViewPrivate <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV24QAbstractPageSetupDialog</primary></indexterm>_ZTV24QAbstractPageSetupDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV27QAbstractTextDocumentLayout</primary></indexterm>_ZTV27QAbstractTextDocumentLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV27QAccessibleFactoryInterface</primary></indexterm>_ZTV27QAccessibleFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV27QIconEngineFactoryInterface</primary></indexterm>_ZTV27QIconEngineFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV29QInputContextFactoryInterface</primary></indexterm>_ZTV29QInputContextFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV31QImageIOHandlerFactoryInterface</primary></indexterm>_ZTV31QImageIOHandlerFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV33QAccessibleBridgeFactoryInterface</primary></indexterm>_ZTV33QAccessibleBridgeFactoryInterface <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV5QDial</primary></indexterm>_ZTV5QDial <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV5QDrag</primary></indexterm>_ZTV5QDrag <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV5QMenu</primary></indexterm>_ZTV5QMenu <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV6QFrame</primary></indexterm>_ZTV6QFrame <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV6QImage</primary></indexterm>_ZTV6QImage <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV6QLabel</primary></indexterm>_ZTV6QLabel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV6QMovie</primary></indexterm>_ZTV6QMovie <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV6QSound</primary></indexterm>_ZTV6QSound <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV6QStyle</primary></indexterm>_ZTV6QStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV7QAction</primary></indexterm>_ZTV7QAction <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV7QBitmap</primary></indexterm>_ZTV7QBitmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV7QDialog</primary></indexterm>_ZTV7QDialog <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV7QLayout</primary></indexterm>_ZTV7QLayout <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV7QPixmap</primary></indexterm>_ZTV7QPixmap <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV7QSlider</primary></indexterm>_ZTV7QSlider <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV7QTabBar</primary></indexterm>_ZTV7QTabBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV7QWidget</primary></indexterm>_ZTV7QWidget <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV8QMenuBar</primary></indexterm>_ZTV8QMenuBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV8QPicture</primary></indexterm>_ZTV8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV8QPrinter</primary></indexterm>_ZTV8QPrinter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV8QSpinBox</primary></indexterm>_ZTV8QSpinBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV8QStroker</primary></indexterm>_ZTV8QStroker <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV8QToolBar</primary></indexterm>_ZTV8QToolBar <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV8QToolBox</primary></indexterm>_ZTV8QToolBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV9QCDEStyle</primary></indexterm>_ZTV9QCDEStyle <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV9QCheckBox</primary></indexterm>_ZTV9QCheckBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV9QComboBox</primary></indexterm>_ZTV9QComboBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV9QDateEdit</primary></indexterm>_ZTV9QDateEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV9QDirModel</primary></indexterm>_ZTV9QDirModel <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV9QGroupBox</primary></indexterm>_ZTV9QGroupBox <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV9QKeyEvent</primary></indexterm>_ZTV9QKeyEvent <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV9QLineEdit</primary></indexterm>_ZTV9QLineEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV9QListView</primary></indexterm>_ZTV9QListView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV9QMenuItem</primary></indexterm>_ZTV9QMenuItem <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV9QShortcut</primary></indexterm>_ZTV9QShortcut <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV9QSizeGrip</primary></indexterm>_ZTV9QSizeGrip <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV9QSplitter</primary></indexterm>_ZTV9QSplitter <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV9QTextEdit</primary></indexterm>_ZTV9QTextEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV9QTextList</primary></indexterm>_ZTV9QTextList <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZTV9QTimeEdit</primary></indexterm>_ZTV9QTimeEdit <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZTV9QTreeView</primary></indexterm>_ZTV9QTreeView <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn12_N10QDropEventD0Ev</primary></indexterm>_ZThn12_N10QDropEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn12_N10QDropEventD1Ev</primary></indexterm>_ZThn12_N10QDropEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn12_N14QDragMoveEventD0Ev</primary></indexterm>_ZThn12_N14QDragMoveEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn12_N14QDragMoveEventD1Ev</primary></indexterm>_ZThn12_N14QDragMoveEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn12_N15QDragEnterEventD0Ev</primary></indexterm>_ZThn12_N15QDragEnterEventD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn12_N15QDragEnterEventD1Ev</primary></indexterm>_ZThn12_N15QDragEnterEventD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn12_NK10QDropEvent11encodedDataEPKc</primary></indexterm>_ZThn12_NK10QDropEvent11encodedDataEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn12_NK10QDropEvent6formatEi</primary></indexterm>_ZThn12_NK10QDropEvent6formatEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn12_NK10QDropEvent8providesEPKc</primary></indexterm>_ZThn12_NK10QDropEvent8providesEPKc <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N10QBoxLayout10invalidateEv</primary></indexterm>_ZThn8_N10QBoxLayout10invalidateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N10QBoxLayout11setGeometryERK5QRect</primary></indexterm>_ZThn8_N10QBoxLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N10QBoxLayoutD0Ev</primary></indexterm>_ZThn8_N10QBoxLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N10QBoxLayoutD1Ev</primary></indexterm>_ZThn8_N10QBoxLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N10QLCDNumberD0Ev</primary></indexterm>_ZThn8_N10QLCDNumberD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N10QLCDNumberD1Ev</primary></indexterm>_ZThn8_N10QLCDNumberD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N10QScrollBarD0Ev</primary></indexterm>_ZThn8_N10QScrollBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N10QScrollBarD1Ev</primary></indexterm>_ZThn8_N10QScrollBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N10QStatusBarD0Ev</primary></indexterm>_ZThn8_N10QStatusBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N10QStatusBarD1Ev</primary></indexterm>_ZThn8_N10QStatusBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N10QTabWidgetD0Ev</primary></indexterm>_ZThn8_N10QTabWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N10QTabWidgetD1Ev</primary></indexterm>_ZThn8_N10QTabWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N10QTableViewD0Ev</primary></indexterm>_ZThn8_N10QTableViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N10QTableViewD1Ev</primary></indexterm>_ZThn8_N10QTableViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N10QWorkspaceD0Ev</primary></indexterm>_ZThn8_N10QWorkspaceD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N10QWorkspaceD1Ev</primary></indexterm>_ZThn8_N10QWorkspaceD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QDockWidgetD0Ev</primary></indexterm>_ZThn8_N11QDockWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QDockWidgetD1Ev</primary></indexterm>_ZThn8_N11QDockWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QFileDialogD0Ev</primary></indexterm>_ZThn8_N11QFileDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QFileDialogD1Ev</primary></indexterm>_ZThn8_N11QFileDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QFocusFrameD0Ev</primary></indexterm>_ZThn8_N11QFocusFrameD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QFocusFrameD1Ev</primary></indexterm>_ZThn8_N11QFocusFrameD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QFontDialogD0Ev</primary></indexterm>_ZThn8_N11QFontDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QFontDialogD1Ev</primary></indexterm>_ZThn8_N11QFontDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QGridLayout10invalidateEv</primary></indexterm>_ZThn8_N11QGridLayout10invalidateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QGridLayout11setGeometryERK5QRect</primary></indexterm>_ZThn8_N11QGridLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QGridLayoutD0Ev</primary></indexterm>_ZThn8_N11QGridLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QGridLayoutD1Ev</primary></indexterm>_ZThn8_N11QGridLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QHBoxLayoutD0Ev</primary></indexterm>_ZThn8_N11QHBoxLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QHBoxLayoutD1Ev</primary></indexterm>_ZThn8_N11QHBoxLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QHeaderViewD0Ev</primary></indexterm>_ZThn8_N11QHeaderViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QHeaderViewD1Ev</primary></indexterm>_ZThn8_N11QHeaderViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QListWidgetD0Ev</primary></indexterm>_ZThn8_N11QListWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QListWidgetD1Ev</primary></indexterm>_ZThn8_N11QListWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QMainWindowD0Ev</primary></indexterm>_ZThn8_N11QMainWindowD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QMainWindowD1Ev</primary></indexterm>_ZThn8_N11QMainWindowD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QMessageBoxD0Ev</primary></indexterm>_ZThn8_N11QMessageBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QMessageBoxD1Ev</primary></indexterm>_ZThn8_N11QMessageBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QPushButtonD0Ev</primary></indexterm>_ZThn8_N11QPushButtonD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QPushButtonD1Ev</primary></indexterm>_ZThn8_N11QPushButtonD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QRubberBandD0Ev</primary></indexterm>_ZThn8_N11QRubberBandD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QRubberBandD1Ev</primary></indexterm>_ZThn8_N11QRubberBandD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QScrollAreaD0Ev</primary></indexterm>_ZThn8_N11QScrollAreaD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QScrollAreaD1Ev</primary></indexterm>_ZThn8_N11QScrollAreaD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QToolButtonD0Ev</primary></indexterm>_ZThn8_N11QToolButtonD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QToolButtonD1Ev</primary></indexterm>_ZThn8_N11QToolButtonD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QTreeWidgetD0Ev</primary></indexterm>_ZThn8_N11QTreeWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QTreeWidgetD1Ev</primary></indexterm>_ZThn8_N11QTreeWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N11QVBoxLayoutD0Ev</primary></indexterm>_ZThn8_N11QVBoxLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N11QVBoxLayoutD1Ev</primary></indexterm>_ZThn8_N11QVBoxLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N12QColorDialogD0Ev</primary></indexterm>_ZThn8_N12QColorDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N12QColorDialogD1Ev</primary></indexterm>_ZThn8_N12QColorDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N12QInputDialogD0Ev</primary></indexterm>_ZThn8_N12QInputDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N12QInputDialogD1Ev</primary></indexterm>_ZThn8_N12QInputDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N12QPrintDialogD0Ev</primary></indexterm>_ZThn8_N12QPrintDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N12QPrintDialogD1Ev</primary></indexterm>_ZThn8_N12QPrintDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N12QStylePluginD0Ev</primary></indexterm>_ZThn8_N12QStylePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N12QStylePluginD1Ev</primary></indexterm>_ZThn8_N12QStylePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N12QTableWidgetD0Ev</primary></indexterm>_ZThn8_N12QTableWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N12QTableWidgetD1Ev</primary></indexterm>_ZThn8_N12QTableWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N12QTextBrowserD0Ev</primary></indexterm>_ZThn8_N12QTextBrowserD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N12QTextBrowserD1Ev</primary></indexterm>_ZThn8_N12QTextBrowserD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N13QErrorMessageD0Ev</primary></indexterm>_ZThn8_N13QErrorMessageD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N13QErrorMessageD1Ev</primary></indexterm>_ZThn8_N13QErrorMessageD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N13QSplashScreenD0Ev</primary></indexterm>_ZThn8_N13QSplashScreenD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N13QSplashScreenD1Ev</primary></indexterm>_ZThn8_N13QSplashScreenD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N14QDesktopWidgetD0Ev</primary></indexterm>_ZThn8_N14QDesktopWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N14QDesktopWidgetD1Ev</primary></indexterm>_ZThn8_N14QDesktopWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N14QImageIOPluginD0Ev</primary></indexterm>_ZThn8_N14QImageIOPluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N14QImageIOPluginD1Ev</primary></indexterm>_ZThn8_N14QImageIOPluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N14QStackedLayout11setGeometryERK5QRect</primary></indexterm>_ZThn8_N14QStackedLayout11setGeometryERK5QRect <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N14QStackedLayoutD0Ev</primary></indexterm>_ZThn8_N14QStackedLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N14QStackedLayoutD1Ev</primary></indexterm>_ZThn8_N14QStackedLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N14QStackedWidgetD0Ev</primary></indexterm>_ZThn8_N14QStackedWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N14QStackedWidgetD1Ev</primary></indexterm>_ZThn8_N14QStackedWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N15QAbstractButtonD0Ev</primary></indexterm>_ZThn8_N15QAbstractButtonD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N15QAbstractButtonD1Ev</primary></indexterm>_ZThn8_N15QAbstractButtonD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N15QAbstractSliderD0Ev</primary></indexterm>_ZThn8_N15QAbstractSliderD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N15QAbstractSliderD1Ev</primary></indexterm>_ZThn8_N15QAbstractSliderD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N15QProgressDialogD0Ev</primary></indexterm>_ZThn8_N15QProgressDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N15QProgressDialogD1Ev</primary></indexterm>_ZThn8_N15QProgressDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N15QX11EmbedWidgetD0Ev</primary></indexterm>_ZThn8_N15QX11EmbedWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N15QX11EmbedWidgetD1Ev</primary></indexterm>_ZThn8_N15QX11EmbedWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N16QAbstractSpinBoxD0Ev</primary></indexterm>_ZThn8_N16QAbstractSpinBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N16QAbstractSpinBoxD1Ev</primary></indexterm>_ZThn8_N16QAbstractSpinBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N17QAbstractItemViewD0Ev</primary></indexterm>_ZThn8_N17QAbstractItemViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N17QAbstractItemViewD1Ev</primary></indexterm>_ZThn8_N17QAbstractItemViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N17QAccessiblePluginD0Ev</primary></indexterm>_ZThn8_N17QAccessiblePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N17QAccessiblePluginD1Ev</primary></indexterm>_ZThn8_N17QAccessiblePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N17QIconEnginePluginD0Ev</primary></indexterm>_ZThn8_N17QIconEnginePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N17QIconEnginePluginD1Ev</primary></indexterm>_ZThn8_N17QIconEnginePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N17QTextImageHandler10drawObjectEP8QPainterRK6QRectFP13QTextDocumentiRK11QTextFormat</primary></indexterm>_ZThn8_N17QTextImageHandler10drawObjectEP8QPainterRK6QRectFP13QTextDocumentiRK11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N17QTextImageHandler13intrinsicSizeEP13QTextDocumentiRK11QTextFormat</primary></indexterm>_ZThn8_N17QTextImageHandler13intrinsicSizeEP13QTextDocumentiRK11QTextFormat <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N18QX11EmbedContainerD0Ev</primary></indexterm>_ZThn8_N18QX11EmbedContainerD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N18QX11EmbedContainerD1Ev</primary></indexterm>_ZThn8_N18QX11EmbedContainerD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N19QAbstractScrollAreaD0Ev</primary></indexterm>_ZThn8_N19QAbstractScrollAreaD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N19QAbstractScrollAreaD1Ev</primary></indexterm>_ZThn8_N19QAbstractScrollAreaD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N19QInputContextPluginD0Ev</primary></indexterm>_ZThn8_N19QInputContextPluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N19QInputContextPluginD1Ev</primary></indexterm>_ZThn8_N19QInputContextPluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture</primary></indexterm>_ZThn8_N20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture</primary></indexterm>_ZThn8_N20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N20QPictureFormatPluginD0Ev</primary></indexterm>_ZThn8_N20QPictureFormatPluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N20QPictureFormatPluginD1Ev</primary></indexterm>_ZThn8_N20QPictureFormatPluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N23QAccessibleBridgePluginD0Ev</primary></indexterm>_ZThn8_N23QAccessibleBridgePluginD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N23QAccessibleBridgePluginD1Ev</primary></indexterm>_ZThn8_N23QAccessibleBridgePluginD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N5QDialD0Ev</primary></indexterm>_ZThn8_N5QDialD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N5QDialD1Ev</primary></indexterm>_ZThn8_N5QDialD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N5QMenuD0Ev</primary></indexterm>_ZThn8_N5QMenuD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N5QMenuD1Ev</primary></indexterm>_ZThn8_N5QMenuD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N6QFrameD0Ev</primary></indexterm>_ZThn8_N6QFrameD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N6QFrameD1Ev</primary></indexterm>_ZThn8_N6QFrameD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N6QLabelD0Ev</primary></indexterm>_ZThn8_N6QLabelD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N6QLabelD1Ev</primary></indexterm>_ZThn8_N6QLabelD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N7QDialogD0Ev</primary></indexterm>_ZThn8_N7QDialogD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N7QDialogD1Ev</primary></indexterm>_ZThn8_N7QDialogD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N7QLayout10invalidateEv</primary></indexterm>_ZThn8_N7QLayout10invalidateEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N7QLayout6layoutEv</primary></indexterm>_ZThn8_N7QLayout6layoutEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N7QLayoutD0Ev</primary></indexterm>_ZThn8_N7QLayoutD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N7QLayoutD1Ev</primary></indexterm>_ZThn8_N7QLayoutD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N7QSliderD0Ev</primary></indexterm>_ZThn8_N7QSliderD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N7QSliderD1Ev</primary></indexterm>_ZThn8_N7QSliderD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N7QTabBarD0Ev</primary></indexterm>_ZThn8_N7QTabBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N7QTabBarD1Ev</primary></indexterm>_ZThn8_N7QTabBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N7QWidgetD0Ev</primary></indexterm>_ZThn8_N7QWidgetD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N7QWidgetD1Ev</primary></indexterm>_ZThn8_N7QWidgetD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N8QMenuBarD0Ev</primary></indexterm>_ZThn8_N8QMenuBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N8QMenuBarD1Ev</primary></indexterm>_ZThn8_N8QMenuBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N8QToolBarD0Ev</primary></indexterm>_ZThn8_N8QToolBarD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N8QToolBarD1Ev</primary></indexterm>_ZThn8_N8QToolBarD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N8QToolBoxD0Ev</primary></indexterm>_ZThn8_N8QToolBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N8QToolBoxD1Ev</primary></indexterm>_ZThn8_N8QToolBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N9QComboBoxD0Ev</primary></indexterm>_ZThn8_N9QComboBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N9QComboBoxD1Ev</primary></indexterm>_ZThn8_N9QComboBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N9QGroupBoxD0Ev</primary></indexterm>_ZThn8_N9QGroupBoxD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N9QGroupBoxD1Ev</primary></indexterm>_ZThn8_N9QGroupBoxD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N9QLineEditD0Ev</primary></indexterm>_ZThn8_N9QLineEditD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N9QLineEditD1Ev</primary></indexterm>_ZThn8_N9QLineEditD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N9QListViewD0Ev</primary></indexterm>_ZThn8_N9QListViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N9QListViewD1Ev</primary></indexterm>_ZThn8_N9QListViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N9QSizeGripD0Ev</primary></indexterm>_ZThn8_N9QSizeGripD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N9QSizeGripD1Ev</primary></indexterm>_ZThn8_N9QSizeGripD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N9QSplitterD0Ev</primary></indexterm>_ZThn8_N9QSplitterD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N9QSplitterD1Ev</primary></indexterm>_ZThn8_N9QSplitterD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N9QTextEditD0Ev</primary></indexterm>_ZThn8_N9QTextEditD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N9QTextEditD1Ev</primary></indexterm>_ZThn8_N9QTextEditD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_N9QTreeViewD0Ev</primary></indexterm>_ZThn8_N9QTreeViewD0Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_N9QTreeViewD1Ev</primary></indexterm>_ZThn8_N9QTreeViewD1Ev <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK10QBoxLayout11maximumSizeEv</primary></indexterm>_ZThn8_NK10QBoxLayout11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK10QBoxLayout11minimumSizeEv</primary></indexterm>_ZThn8_NK10QBoxLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK10QBoxLayout14heightForWidthEi</primary></indexterm>_ZThn8_NK10QBoxLayout14heightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK10QBoxLayout17hasHeightForWidthEv</primary></indexterm>_ZThn8_NK10QBoxLayout17hasHeightForWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK10QBoxLayout19expandingDirectionsEv</primary></indexterm>_ZThn8_NK10QBoxLayout19expandingDirectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK10QBoxLayout21minimumHeightForWidthEi</primary></indexterm>_ZThn8_NK10QBoxLayout21minimumHeightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK10QBoxLayout8sizeHintEv</primary></indexterm>_ZThn8_NK10QBoxLayout8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK11QGridLayout11maximumSizeEv</primary></indexterm>_ZThn8_NK11QGridLayout11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK11QGridLayout11minimumSizeEv</primary></indexterm>_ZThn8_NK11QGridLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK11QGridLayout14heightForWidthEi</primary></indexterm>_ZThn8_NK11QGridLayout14heightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK11QGridLayout17hasHeightForWidthEv</primary></indexterm>_ZThn8_NK11QGridLayout17hasHeightForWidthEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK11QGridLayout19expandingDirectionsEv</primary></indexterm>_ZThn8_NK11QGridLayout19expandingDirectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK11QGridLayout21minimumHeightForWidthEi</primary></indexterm>_ZThn8_NK11QGridLayout21minimumHeightForWidthEi <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK11QGridLayout8sizeHintEv</primary></indexterm>_ZThn8_NK11QGridLayout8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK14QStackedLayout11minimumSizeEv</primary></indexterm>_ZThn8_NK14QStackedLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK14QStackedLayout8sizeHintEv</primary></indexterm>_ZThn8_NK14QStackedLayout8sizeHintEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK7QLayout11maximumSizeEv</primary></indexterm>_ZThn8_NK7QLayout11maximumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK7QLayout11minimumSizeEv</primary></indexterm>_ZThn8_NK7QLayout11minimumSizeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK7QLayout19expandingDirectionsEv</primary></indexterm>_ZThn8_NK7QLayout19expandingDirectionsEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK7QLayout7isEmptyEv</primary></indexterm>_ZThn8_NK7QLayout7isEmptyEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK7QLayout8geometryEv</primary></indexterm>_ZThn8_NK7QLayout8geometryEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK7QWidget11paintEngineEv</primary></indexterm>_ZThn8_NK7QWidget11paintEngineEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY><indexterm><primary>_ZThn8_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE</primary></indexterm>_ZThn8_NK7QWidget6metricEN12QPaintDevice17PaintDeviceMetricE <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_ZThn8_NK7QWidget7devTypeEv</primary></indexterm>_ZThn8_NK7QWidget7devTypeEv <LINK LINKEND="REFSTD.libQtGui.1">[QtGui]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libQtGui-ddefs>
<TITLE>Data Definitions for libQtGui</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libQtGui.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>QtGui/qabstractbutton.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QABSTRACTBUTTON_H
#define QABSTRACTBUTTON_H

#include &lt;QtGui/qicon.h>
#include &lt;QtGui/qkeysequence.h>
#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

class QButtonGroup;
class QAbstractButtonPrivate;

class Q_GUI_EXPORT QAbstractButton : public QWidget
{
    Q_OBJECT

    Q_PROPERTY(QString text READ text WRITE setText)
    Q_PROPERTY(QIcon icon READ icon WRITE setIcon)
    Q_PROPERTY(QSize iconSize READ iconSize WRITE setIconSize)
#ifndef QT_NO_SHORTCUT
    Q_PROPERTY(QKeySequence shortcut READ shortcut WRITE setShortcut)
#endif
    Q_PROPERTY(bool checkable READ isCheckable WRITE setCheckable)
    Q_PROPERTY(bool checked READ isChecked WRITE setChecked NOTIFY toggled USER true)
    Q_PROPERTY(bool autoRepeat READ autoRepeat WRITE setAutoRepeat)
    Q_PROPERTY(bool autoExclusive READ autoExclusive WRITE setAutoExclusive)
    Q_PROPERTY(bool down READ isDown WRITE setDown DESIGNABLE false)

public:
    explicit QAbstractButton(QWidget* parent=0);
    ~QAbstractButton();

    void setText(const QString &amp;text);
    QString text() const;

    void setIcon(const QIcon &amp;icon);
    QIcon icon() const;

    QSize iconSize() const;

#ifndef QT_NO_SHORTCUT
    void setShortcut(const QKeySequence &amp;key);
    QKeySequence shortcut() const;
#endif

    void setCheckable(bool);
    bool isCheckable() const;

    bool isChecked() const;

    void setDown(bool);
    bool isDown() const;

    void setAutoRepeat(bool);
    bool autoRepeat() const;

    void setAutoExclusive(bool);
    bool autoExclusive() const;

#ifndef QT_NO_BUTTONGROUP
    QButtonGroup *group() const;
#endif

public Q_SLOTS:
    void setIconSize(const QSize &amp;size);
    void animateClick(int msec = 100);
    void click();
    void toggle();
    void setChecked(bool);

Q_SIGNALS:
    void pressed();
    void released();
    void clicked(bool checked = false);
    void toggled(bool checked);

protected:
    virtual void paintEvent(QPaintEvent *e) = 0;
    virtual bool hitButton(const QPoint &amp;pos) const;
    virtual void checkStateSet();
    virtual void nextCheckState();

    bool event(QEvent *e);
    void keyPressEvent(QKeyEvent *e);
    void keyReleaseEvent(QKeyEvent *e);
    void mousePressEvent(QMouseEvent *e);
    void mouseReleaseEvent(QMouseEvent *e);
    void mouseMoveEvent(QMouseEvent *e);
    void focusInEvent(QFocusEvent *e);
    void focusOutEvent(QFocusEvent *e);
    void changeEvent(QEvent *e);
    void timerEvent(QTimerEvent *e);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QAbstractButton(QWidget *parent, const char *name, Qt::WFlags f=0);
    inline QT3_SUPPORT bool isOn() const { return isChecked(); }
    inline QT3_SUPPORT const QPixmap *pixmap() const { return 0; } // help styles compile
    inline QT3_SUPPORT void setPixmap( const QPixmap &amp;p ) { setIcon(QIcon(p)); }
    QT3_SUPPORT QIcon *iconSet() const;
    inline QT3_SUPPORT void setIconSet(const QIcon &amp;icon) { setIcon(icon); }
    inline QT3_SUPPORT bool isToggleButton() const { return isCheckable(); }
    inline QT3_SUPPORT void setToggleButton(bool b) { setCheckable(b); }
    inline QT3_SUPPORT void setAccel(const QKeySequence &amp;key) { setShortcut(key); }
    inline QT3_SUPPORT QKeySequence accel() const { return shortcut(); }

public Q_SLOTS:
    inline QT_MOC_COMPAT void setOn(bool b) { setChecked(b); }
#endif

protected:
    QAbstractButton(QAbstractButtonPrivate &amp;dd, QWidget* parent = 0);

private:
    Q_DECLARE_PRIVATE(QAbstractButton)
    Q_DISABLE_COPY(QAbstractButton)
    friend class QButtonGroup;
};

#endif // QABSTRACTBUTTON_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractitemdelegate.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QABSTRACTITEMDELEGATE_H
#define QABSTRACTITEMDELEGATE_H

#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qstyleoption.h>

QT_MODULE(Gui)

#ifndef QT_NO_ITEMVIEWS

class QPainter;
class QModelIndex;
class QAbstractItemModel;

class Q_GUI_EXPORT QAbstractItemDelegate : public QObject
{
    Q_OBJECT

public:

    enum EndEditHint {
        NoHint,
        EditNextItem,
        EditPreviousItem,
        SubmitModelCache,
        RevertModelCache
    };

    explicit QAbstractItemDelegate(QObject *parent = 0);
    virtual ~QAbstractItemDelegate();

    // painting
    virtual void paint(QPainter *painter,
                       const QStyleOptionViewItem &amp;option,
                       const QModelIndex &amp;index) const = 0;

    virtual QSize sizeHint(const QStyleOptionViewItem &amp;option,
                           const QModelIndex &amp;index) const = 0;

    // editing
    virtual QWidget *createEditor(QWidget *parent,
                                  const QStyleOptionViewItem &amp;option,
                                  const QModelIndex &amp;index) const;

    virtual void setEditorData(QWidget *editor, const QModelIndex &amp;index) const;

    virtual void setModelData(QWidget *editor,
                              QAbstractItemModel *model,
                              const QModelIndex &amp;index) const;

    virtual void updateEditorGeometry(QWidget *editor,
                                      const QStyleOptionViewItem &amp;option,
                                      const QModelIndex &amp;index) const;

    // for non-widget editors
    virtual bool editorEvent(QEvent *event,
                             QAbstractItemModel *model,
                             const QStyleOptionViewItem &amp;option,
                             const QModelIndex &amp;index);

    static QString elidedText(const QFontMetrics &amp;fontMetrics, int width,
                              Qt::TextElideMode mode, const QString &amp;text);
Q_SIGNALS:
    void commitData(QWidget *editor);
    void closeEditor(QWidget *editor, QAbstractItemDelegate::EndEditHint hint = NoHint);

protected:
    Q_DISABLE_COPY(QAbstractItemDelegate)
    QAbstractItemDelegate(QObjectPrivate &amp;, QObject *parent = 0);
};

#endif // QT_NO_ITEMVIEWS

#endif // QABSTRACTITEMDELEGATE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractitemview.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QABSTRACTITEMVIEW_H
#define QABSTRACTITEMVIEW_H

#include &lt;QtGui/qabstractscrollarea.h>
#include &lt;QtCore/qabstractitemmodel.h>
#include &lt;QtGui/qitemselectionmodel.h>
#include &lt;QtGui/qabstractitemdelegate.h>

QT_MODULE(Gui)

#ifndef QT_NO_ITEMVIEWS

class QMenu;
class QDrag;
class QEvent;
class QAbstractItemViewPrivate;

class Q_GUI_EXPORT QAbstractItemView : public QAbstractScrollArea
{
    Q_OBJECT
    Q_ENUMS(SelectionMode SelectionBehavior ScrollHint)
    Q_FLAGS(EditTriggers)
    Q_PROPERTY(bool autoScroll READ hasAutoScroll WRITE setAutoScroll)
    Q_PROPERTY(EditTriggers editTriggers READ editTriggers WRITE setEditTriggers)
    Q_PROPERTY(bool tabKeyNavigation READ tabKeyNavigation WRITE setTabKeyNavigation)
#ifndef QT_NO_DRAGANDDROP
    Q_PROPERTY(bool showDropIndicator READ showDropIndicator WRITE setDropIndicatorShown)
    Q_PROPERTY(bool dragEnabled READ dragEnabled WRITE setDragEnabled)
#endif
    Q_PROPERTY(bool alternatingRowColors READ alternatingRowColors WRITE setAlternatingRowColors)
    Q_PROPERTY(SelectionMode selectionMode READ selectionMode WRITE setSelectionMode)
    Q_PROPERTY(SelectionBehavior selectionBehavior READ selectionBehavior WRITE setSelectionBehavior)
    Q_PROPERTY(QSize iconSize READ iconSize WRITE setIconSize)
    Q_PROPERTY(Qt::TextElideMode textElideMode READ textElideMode WRITE setTextElideMode)

public:
    enum SelectionMode {
        NoSelection,
        SingleSelection,
        MultiSelection,
        ExtendedSelection,
        ContiguousSelection
    };

    enum SelectionBehavior {
        SelectItems,
        SelectRows,
        SelectColumns
    };

    enum ScrollHint {
        EnsureVisible,
        PositionAtTop,
        PositionAtBottom
    };

    enum EditTrigger {
        NoEditTriggers = 0,
        CurrentChanged = 1,
        DoubleClicked = 2,
        SelectedClicked = 4,
        EditKeyPressed = 8,
        AnyKeyPressed = 16,
        AllEditTriggers = 31
    };

    Q_DECLARE_FLAGS(EditTriggers, EditTrigger)

    explicit QAbstractItemView(QWidget *parent = 0);
    ~QAbstractItemView();

    virtual void setModel(QAbstractItemModel *model);
    QAbstractItemModel *model() const;

    virtual void setSelectionModel(QItemSelectionModel *selectionModel);
    QItemSelectionModel *selectionModel() const;

    void setItemDelegate(QAbstractItemDelegate *delegate);
    QAbstractItemDelegate *itemDelegate() const;

    void setSelectionMode(QAbstractItemView::SelectionMode mode);
    QAbstractItemView::SelectionMode selectionMode() const;

    void setSelectionBehavior(QAbstractItemView::SelectionBehavior behavior);
    QAbstractItemView::SelectionBehavior selectionBehavior() const;

    QModelIndex currentIndex() const;
    QModelIndex rootIndex() const;

    void setEditTriggers(EditTriggers triggers);
    EditTriggers editTriggers() const;

    void setAutoScroll(bool enable);
    bool hasAutoScroll() const;

    void setTabKeyNavigation(bool enable);
    bool tabKeyNavigation() const;

#ifndef QT_NO_DRAGANDDROP
    void setDropIndicatorShown(bool enable);
    bool showDropIndicator() const;

    void setDragEnabled(bool enable);
    bool dragEnabled() const;
#endif
    void setAlternatingRowColors(bool enable);
    bool alternatingRowColors() const;

    void setIconSize(const QSize &amp;size);
    QSize iconSize() const;

    void setTextElideMode(Qt::TextElideMode mode);
    Qt::TextElideMode textElideMode() const;

    virtual void keyboardSearch(const QString &amp;search);

    virtual QRect visualRect(const QModelIndex &amp;index) const = 0;
    virtual void scrollTo(const QModelIndex &amp;index, ScrollHint hint = EnsureVisible) = 0;
    virtual QModelIndex indexAt(const QPoint &amp;point) const = 0;

    QSize sizeHintForIndex(const QModelIndex &amp;index) const;
    virtual int sizeHintForRow(int row) const;
    virtual int sizeHintForColumn(int column) const;

    void openPersistentEditor(const QModelIndex &amp;index);
    void closePersistentEditor(const QModelIndex &amp;index);

    void setIndexWidget(const QModelIndex &amp;index, QWidget *widget);
    QWidget *indexWidget(const QModelIndex &amp;index) const;

public Q_SLOTS:
    virtual void reset();
    virtual void setRootIndex(const QModelIndex &amp;index);
    virtual void doItemsLayout();
    virtual void selectAll();
    void edit(const QModelIndex &amp;index);
    void clearSelection();
    void setCurrentIndex(const QModelIndex &amp;index);
    void scrollToTop();
    void scrollToBottom();

protected Q_SLOTS:
    virtual void dataChanged(const QModelIndex &amp;topLeft, const QModelIndex &amp;bottomRight);
    virtual void rowsInserted(const QModelIndex &amp;parent, int start, int end);
    virtual void rowsAboutToBeRemoved(const QModelIndex &amp;parent, int start, int end);
    virtual void selectionChanged(const QItemSelection &amp;selected, const QItemSelection &amp;deselected);
    virtual void currentChanged(const QModelIndex &amp;current, const QModelIndex &amp;previous);
    virtual void updateEditorData();
    virtual void updateEditorGeometries();
    virtual void updateGeometries();
    virtual void verticalScrollbarAction(int action);
    virtual void horizontalScrollbarAction(int action);
    virtual void verticalScrollbarValueChanged(int value);
    virtual void horizontalScrollbarValueChanged(int value);
    virtual void closeEditor(QWidget *editor, QAbstractItemDelegate::EndEditHint hint);
    virtual void commitData(QWidget *editor);
    virtual void editorDestroyed(QObject *editor);

Q_SIGNALS:
    void pressed(const QModelIndex &amp;index);
    void clicked(const QModelIndex &amp;index);
    void doubleClicked(const QModelIndex &amp;index);

    void activated(const QModelIndex &amp;index);
    void entered(const QModelIndex &amp;index);
    void viewportEntered();

protected:
    QAbstractItemView(QAbstractItemViewPrivate &amp;, QWidget *parent = 0);

    void setHorizontalStepsPerItem(int steps);
    int horizontalStepsPerItem() const;
    void setVerticalStepsPerItem(int steps);
    int verticalStepsPerItem() const;

    enum CursorAction { MoveUp, MoveDown, MoveLeft, MoveRight,
                        MoveHome, MoveEnd, MovePageUp, MovePageDown,
                        MoveNext, MovePrevious };
    virtual QModelIndex moveCursor(CursorAction cursorAction,
                                   Qt::KeyboardModifiers modifiers) = 0;

    virtual int horizontalOffset() const = 0;
    virtual int verticalOffset() const = 0;

    virtual bool isIndexHidden(const QModelIndex &amp;index) const = 0;

    virtual void setSelection(const QRect &amp;rect, QItemSelectionModel::SelectionFlags command) = 0;
    virtual QRegion visualRegionForSelection(const QItemSelection &amp;selection) const = 0;
    virtual QModelIndexList selectedIndexes() const;

    virtual bool edit(const QModelIndex &amp;index, EditTrigger trigger, QEvent *event);

    virtual QItemSelectionModel::SelectionFlags selectionCommand(const QModelIndex &amp;index,
                                                                 const QEvent *event = 0) const;

#ifndef QT_NO_DRAGANDDROP
    virtual void startDrag(Qt::DropActions supportedActions);
#endif

    virtual QStyleOptionViewItem viewOptions() const;

    enum State {
        NoState,
        DraggingState,
        DragSelectingState,
        EditingState,
        ExpandingState,
        CollapsingState
    };

    State state() const;
    void setState(State state);

    void scheduleDelayedItemsLayout();
    void executeDelayedItemsLayout();

    void setDirtyRegion(const QRegion &amp;region);
    void scrollDirtyRegion(int dx, int dy);
    QPoint dirtyRegionOffset() const;

    void startAutoScroll();
    void stopAutoScroll();
    void doAutoScroll();

    bool event(QEvent *event);
    bool viewportEvent(QEvent *event);
    void mousePressEvent(QMouseEvent *event);
    void mouseMoveEvent(QMouseEvent *event);
    void mouseReleaseEvent(QMouseEvent *event);
    void mouseDoubleClickEvent(QMouseEvent *event);
#ifndef QT_NO_DRAGANDDROP
    void dragEnterEvent(QDragEnterEvent *event);
    void dragMoveEvent(QDragMoveEvent *event);
    void dragLeaveEvent(QDragLeaveEvent *event);
    void dropEvent(QDropEvent *event);
#endif
    void focusInEvent(QFocusEvent *event);
    void focusOutEvent(QFocusEvent *event);
    void keyPressEvent(QKeyEvent *event);
    void resizeEvent(QResizeEvent *event);
    void timerEvent(QTimerEvent *event);

#ifndef QT_NO_DRAGANDDROP
    enum DropIndicatorPosition { OnItem, AboveItem, BelowItem, OnViewport };
    DropIndicatorPosition dropIndicatorPosition() const;
#endif

private:
    Q_DECLARE_PRIVATE(QAbstractItemView)
    Q_DISABLE_COPY(QAbstractItemView)
    Q_PRIVATE_SLOT(d_func(), void columnsAboutToBeRemoved(const QModelIndex&amp;, int, int))
    Q_PRIVATE_SLOT(d_func(), void columnsRemoved(const QModelIndex&amp;, int, int))
    Q_PRIVATE_SLOT(d_func(), void rowsRemoved(const QModelIndex&amp;, int, int))
};
Q_DECLARE_OPERATORS_FOR_FLAGS(QAbstractItemView::EditTriggers)

#endif // QT_NO_ITEMVIEWS

#endif // QABSTRACTITEMVIEW_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractpagesetupdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QABSTRACTPAGESETUPDIALOG_H
#define QABSTRACTPAGESETUPDIALOG_H

#include &lt;QtGui/qdialog.h>

QT_MODULE(Gui)

#ifndef QT_NO_PRINTDIALOG

class QAbstractPageSetupDialogPrivate;
class QPrinter;

// ### Qt 5: Remove this class
class Q_GUI_EXPORT QAbstractPageSetupDialog : public QDialog
{
    Q_DECLARE_PRIVATE(QAbstractPageSetupDialog)

public:
    explicit QAbstractPageSetupDialog(QPrinter *printer, QWidget *parent = 0);
    QAbstractPageSetupDialog(QAbstractPageSetupDialogPrivate &amp;ptr,
                             QPrinter *printer, QWidget *parent = 0);

    virtual int exec() = 0;

    QPrinter *printer();
};

#endif // QT_NO_PRINTDIALOG

#endif // QABSTRACTPAGESETUPDIALOG_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractprintdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QABSTRACTPRINTDIALOG_H
#define QABSTRACTPRINTDIALOG_H

#include &lt;QtGui/qdialog.h>

QT_MODULE(Gui)

#ifndef QT_NO_PRINTDIALOG

class QAbstractPrintDialogPrivate;
class QPrinter;

// ### Qt 5: remove this class
class Q_GUI_EXPORT QAbstractPrintDialog : public QDialog
{
    Q_DECLARE_PRIVATE(QAbstractPrintDialog)

public:
    enum PrintRange {
        AllPages,
        Selection,
        PageRange
    };

    enum PrintDialogOption {
        None                    = 0x0000,
        PrintToFile             = 0x0001,
        PrintSelection          = 0x0002,
        PrintPageRange          = 0x0004,
        PrintCollateCopies      = 0x0010
    };

    Q_DECLARE_FLAGS(PrintDialogOptions, PrintDialogOption)

    explicit QAbstractPrintDialog(QPrinter *printer, QWidget *parent = 0);

    virtual int exec() = 0;

    void addEnabledOption(PrintDialogOption option);
    void setEnabledOptions(PrintDialogOptions options);
    PrintDialogOptions enabledOptions() const;
    bool isOptionEnabled(PrintDialogOption option) const;

    void setPrintRange(PrintRange range);
    PrintRange printRange() const;

    void setMinMax(int min, int max);
    int minPage() const;
    int maxPage() const;

    void setFromTo(int fromPage, int toPage);
    int fromPage() const;
    int toPage() const;

    QPrinter *printer() const;

protected:
    QAbstractPrintDialog(QAbstractPrintDialogPrivate &amp;ptr, QPrinter *printer, QWidget *parent = 0);

private:
    Q_DISABLE_COPY(QAbstractPrintDialog)
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QAbstractPrintDialog::PrintDialogOptions)

#endif // QT_NO_PRINTDIALOG

#endif // QABSTRACTPRINTDIALOG_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractproxymodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QABSTRACTPROXYMODEL_H
#define QABSTRACTPROXYMODEL_H

#include &lt;QtCore/qabstractitemmodel.h>

QT_MODULE(Gui)

class QAbstractProxyModelPrivate;
class QItemSelection;

class Q_GUI_EXPORT QAbstractProxyModel : public QAbstractItemModel
{
    Q_OBJECT

public:
    QAbstractProxyModel(QObject *parent = 0);
    ~QAbstractProxyModel();

    virtual void setSourceModel(QAbstractItemModel *sourceModel);
    QAbstractItemModel *sourceModel() const;

    virtual QModelIndex mapToSource(const QModelIndex &amp;proxyIndex) const = 0;
    virtual QModelIndex mapFromSource(const QModelIndex &amp;sourceIndex) const = 0;

    virtual QItemSelection mapSelectionToSource(const QItemSelection &amp;selection) const;
    virtual QItemSelection mapSelectionFromSource(const QItemSelection &amp;selection) const;

    bool submit();
    void revert();

protected:
    QAbstractProxyModel(QAbstractProxyModelPrivate &amp;, QObject *parent);
    
private:
    Q_DECLARE_PRIVATE(QAbstractProxyModel)
    Q_DISABLE_COPY(QAbstractProxyModel)
};

#endif // QABSTRACTPROXYMODEL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractscrollarea.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QABSTRACTSCROLLAREA_H
#define QABSTRACTSCROLLAREA_H

#include &lt;QtGui/qframe.h>

QT_MODULE(Gui)

#ifndef QT_NO_SCROLLAREA

class QScrollBar;
class QAbstractScrollAreaPrivate;

class Q_GUI_EXPORT QAbstractScrollArea : public QFrame
{
    Q_OBJECT
    Q_PROPERTY(Qt::ScrollBarPolicy verticalScrollBarPolicy READ verticalScrollBarPolicy WRITE setVerticalScrollBarPolicy)
    Q_PROPERTY(Qt::ScrollBarPolicy horizontalScrollBarPolicy READ horizontalScrollBarPolicy WRITE setHorizontalScrollBarPolicy)

public:
    explicit QAbstractScrollArea(QWidget* parent=0);
    ~QAbstractScrollArea();

    Qt::ScrollBarPolicy verticalScrollBarPolicy() const;
    void setVerticalScrollBarPolicy(Qt::ScrollBarPolicy);
    QScrollBar *verticalScrollBar() const;

    Qt::ScrollBarPolicy horizontalScrollBarPolicy() const;
    void setHorizontalScrollBarPolicy(Qt::ScrollBarPolicy);
    QScrollBar *horizontalScrollBar() const;

    QWidget *viewport() const;
    QSize maximumViewportSize() const;

    QSize minimumSizeHint() const;

    QSize sizeHint() const;

protected:
    QAbstractScrollArea(QAbstractScrollAreaPrivate &amp;dd, QWidget *parent = 0);
    void setViewportMargins(int left, int top, int right, int bottom);

    bool event(QEvent *);
    virtual bool viewportEvent(QEvent *);

    void resizeEvent(QResizeEvent *);
    void paintEvent(QPaintEvent *);
    void mousePressEvent(QMouseEvent *);
    void mouseReleaseEvent(QMouseEvent *);
    void mouseDoubleClickEvent(QMouseEvent *);
    void mouseMoveEvent(QMouseEvent *);
#ifndef QT_NO_WHEELEVENT
    void wheelEvent(QWheelEvent *);
#endif
    void contextMenuEvent(QContextMenuEvent *);
#ifndef QT_NO_DRAGANDDROP
    void dragEnterEvent(QDragEnterEvent *);
    void dragMoveEvent(QDragMoveEvent *);
    void dragLeaveEvent(QDragLeaveEvent *);
    void dropEvent(QDropEvent *);
#endif

    void keyPressEvent(QKeyEvent *);

    virtual void scrollContentsBy(int dx, int dy);

private:
    Q_DECLARE_PRIVATE(QAbstractScrollArea)
    Q_DISABLE_COPY(QAbstractScrollArea)
    Q_PRIVATE_SLOT(d_func(), void hslide(int))
    Q_PRIVATE_SLOT(d_func(), void vslide(int))
    Q_PRIVATE_SLOT(d_func(),void showOrHideScrollBars())

};

#endif // QT_NO_SCROLLAREA

#endif // QABSTRACTSCROLLAREA_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractslider.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QABSTRACTSLIDER_H
#define QABSTRACTSLIDER_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

class QAbstractSliderPrivate;

class Q_GUI_EXPORT QAbstractSlider : public QWidget
{
    Q_OBJECT

    Q_PROPERTY(int minimum READ minimum WRITE setMinimum)
    Q_PROPERTY(int maximum READ maximum WRITE setMaximum)
    Q_PROPERTY(int singleStep READ singleStep WRITE setSingleStep)
    Q_PROPERTY(int pageStep READ pageStep WRITE setPageStep)
    Q_PROPERTY(int value READ value WRITE setValue NOTIFY valueChanged USER true)
    Q_PROPERTY(int sliderPosition READ sliderPosition WRITE setSliderPosition NOTIFY sliderMoved)
    Q_PROPERTY(bool tracking READ hasTracking WRITE setTracking)
    Q_PROPERTY(Qt::Orientation orientation READ orientation WRITE setOrientation)
    Q_PROPERTY(bool invertedAppearance READ invertedAppearance WRITE setInvertedAppearance)
    Q_PROPERTY(bool invertedControls READ invertedControls WRITE setInvertedControls)
    Q_PROPERTY(bool sliderDown READ isSliderDown WRITE setSliderDown DESIGNABLE false)

public:
    explicit QAbstractSlider(QWidget *parent=0);
    ~QAbstractSlider();

    Qt::Orientation orientation() const;

    void setMinimum(int);
    int minimum() const;

    void setMaximum(int);
    int maximum() const;

    void setRange(int min, int max);

    void setSingleStep(int);
    int singleStep() const;

    void setPageStep(int);
    int pageStep() const;

    void setTracking(bool enable);
    bool hasTracking() const;

    void setSliderDown(bool);
    bool isSliderDown() const;

    void setSliderPosition(int);
    int sliderPosition() const;

    void setInvertedAppearance(bool);
    bool invertedAppearance() const;

    void setInvertedControls(bool);
    bool invertedControls() const;

    enum SliderAction {
        SliderNoAction,
        SliderSingleStepAdd,
        SliderSingleStepSub,
        SliderPageStepAdd,
        SliderPageStepSub,
        SliderToMinimum,
        SliderToMaximum,
        SliderMove
    };

    int value() const;

    void triggerAction(SliderAction action);

public Q_SLOTS:
    void setValue(int);
    void setOrientation(Qt::Orientation);

Q_SIGNALS:
    void valueChanged(int value);

    void sliderPressed();
    void sliderMoved(int position);
    void sliderReleased();

    void rangeChanged(int min, int max);

    void actionTriggered(int action);

protected:
    bool event(QEvent *e);

    void setRepeatAction(SliderAction action, int thresholdTime = 500, int repeatTime = 50);
    SliderAction repeatAction() const;

    enum SliderChange {
        SliderRangeChange,
        SliderOrientationChange,
        SliderStepsChange,
        SliderValueChange
    };
    virtual void sliderChange(SliderChange change);

    void keyPressEvent(QKeyEvent *ev);
    void timerEvent(QTimerEvent *);
#ifndef QT_NO_WHEELEVENT
    void wheelEvent(QWheelEvent *e);
#endif
    void changeEvent(QEvent *e);

#ifdef QT3_SUPPORT
public:
    inline QT3_SUPPORT int minValue() const { return minimum(); }
    inline QT3_SUPPORT int maxValue() const { return maximum(); }
    inline QT3_SUPPORT int lineStep() const { return singleStep(); }
    inline QT3_SUPPORT void setMinValue(int v) { setMinimum(v); }
    inline QT3_SUPPORT void setMaxValue(int v) { setMaximum(v); }
    inline QT3_SUPPORT void setLineStep(int v) { setSingleStep(v); }
    inline QT3_SUPPORT void setSteps(int single, int page) { setSingleStep(single); setPageStep(page); }
    inline QT3_SUPPORT void addPage() { triggerAction(SliderPageStepAdd); }
    inline QT3_SUPPORT void subtractPage() { triggerAction(SliderPageStepSub); }
    inline QT3_SUPPORT void addLine() { triggerAction(SliderSingleStepAdd); }
    inline QT3_SUPPORT void subtractLine() { triggerAction(SliderSingleStepSub); }
#endif

protected:
    QAbstractSlider(QAbstractSliderPrivate &amp;dd, QWidget *parent=0);

private:
    Q_DISABLE_COPY(QAbstractSlider)
    Q_DECLARE_PRIVATE(QAbstractSlider)
};

#endif // QABSTRACTSLIDER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstractspinbox.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QABSTRACTSPINBOX_H
#define QABSTRACTSPINBOX_H

#include &lt;QtGui/qwidget.h>
#include &lt;QtGui/qvalidator.h>

QT_MODULE(Gui)

#ifndef QT_NO_SPINBOX

class QLineEdit;

class QAbstractSpinBoxPrivate;
class Q_GUI_EXPORT QAbstractSpinBox : public QWidget
{
    Q_OBJECT

    Q_ENUMS(ButtonSymbols)
    Q_PROPERTY(bool wrapping READ wrapping WRITE setWrapping)
    Q_PROPERTY(bool frame READ hasFrame WRITE setFrame)
    Q_PROPERTY(Qt::Alignment alignment READ alignment WRITE setAlignment)
    Q_PROPERTY(bool readOnly READ isReadOnly WRITE setReadOnly)
    Q_PROPERTY(ButtonSymbols buttonSymbols READ buttonSymbols WRITE setButtonSymbols)
    Q_PROPERTY(QString specialValueText READ specialValueText WRITE setSpecialValueText)
    Q_PROPERTY(QString text READ text)

public:
    explicit QAbstractSpinBox(QWidget *parent = 0);
    ~QAbstractSpinBox();

    enum StepEnabledFlag { StepNone = 0x00, StepUpEnabled = 0x01,
                           StepDownEnabled = 0x02 };
    Q_DECLARE_FLAGS(StepEnabled, StepEnabledFlag)

    enum ButtonSymbols { UpDownArrows, PlusMinus };

    ButtonSymbols buttonSymbols() const;
    void setButtonSymbols(ButtonSymbols bs);

    QString text() const;

    QString specialValueText() const;
    void setSpecialValueText(const QString &amp;s);

    bool wrapping() const;
    void setWrapping(bool w);

    void setReadOnly(bool r);
    bool isReadOnly() const;

    void setAlignment(Qt::Alignment flag);
    Qt::Alignment alignment() const;

    void setFrame(bool);
    bool hasFrame() const;

    QSize sizeHint() const;
    QSize minimumSizeHint() const;

    void interpretText();
    bool event(QEvent *event);

    virtual QValidator::State validate(QString &amp;input, int &amp;pos) const;
    virtual void fixup(QString &amp;input) const;

    virtual void stepBy(int steps);
public Q_SLOTS:
    void stepUp();
    void stepDown();
    void selectAll();
    virtual void clear();

protected:
    void resizeEvent(QResizeEvent *e);
    void keyPressEvent(QKeyEvent *e);
    void keyReleaseEvent(QKeyEvent *e);
    void wheelEvent(QWheelEvent *e);
    void focusInEvent(QFocusEvent *e);
    void focusOutEvent(QFocusEvent *e);
    void contextMenuEvent(QContextMenuEvent *e);
    void changeEvent(QEvent *e);
    void closeEvent(QCloseEvent *e);
    void hideEvent(QHideEvent *e);
    void mousePressEvent(QMouseEvent *e);
    void mouseReleaseEvent(QMouseEvent *e);
    void mouseMoveEvent(QMouseEvent *e);
    void timerEvent(QTimerEvent *e);
    void paintEvent(QPaintEvent *e);
    void showEvent(QShowEvent *e);

    QLineEdit *lineEdit() const;
    void setLineEdit(QLineEdit *e);

    virtual StepEnabled stepEnabled() const;
Q_SIGNALS:
    void editingFinished();
protected:
    QAbstractSpinBox(QAbstractSpinBoxPrivate &amp;dd, QWidget *parent = 0);

private:
    Q_PRIVATE_SLOT(d_func(), void editorTextChanged(const QString &amp;))
    Q_PRIVATE_SLOT(d_func(), void editorCursorPositionChanged(int, int))

    Q_DECLARE_PRIVATE(QAbstractSpinBox)
    Q_DISABLE_COPY(QAbstractSpinBox)
};
Q_DECLARE_OPERATORS_FOR_FLAGS(QAbstractSpinBox::StepEnabled)

#endif // QT_NO_SPINBOX

#endif // QABSTRACTSPINBOX_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qabstracttextdocumentlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QABSTRACTTEXTDOCUMENTLAYOUT_H
#define QABSTRACTTEXTDOCUMENTLAYOUT_H

#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qtextlayout.h>
#include &lt;QtGui/qtextdocument.h>
#include &lt;QtGui/qtextcursor.h>
#include &lt;QtGui/qpalette.h>

QT_MODULE(Gui)

class QAbstractTextDocumentLayoutPrivate;
class QTextBlock;
class QTextObjectInterface;
class QTextFrame;

class Q_GUI_EXPORT QAbstractTextDocumentLayout : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QAbstractTextDocumentLayout)

public:
    explicit QAbstractTextDocumentLayout(QTextDocument *doc);
    ~QAbstractTextDocumentLayout();

    struct Selection
    {
        QTextCursor cursor;
        QTextCharFormat format;
    };

    struct PaintContext
    {
        PaintContext()
            : cursorPosition(-1)
            {}
        int cursorPosition;
        QPalette palette;
        QRectF clip;
        QVector&lt;Selection> selections;
    };

    virtual void draw(QPainter *painter, const PaintContext &amp;context) = 0;
    virtual int hitTest(const QPointF &amp;point, Qt::HitTestAccuracy accuracy) const = 0;
    QString anchorAt(const QPointF&amp; pos) const;

    virtual int pageCount() const = 0;
    virtual QSizeF documentSize() const = 0;

    virtual QRectF frameBoundingRect(QTextFrame *frame) const = 0;
    virtual QRectF blockBoundingRect(const QTextBlock &amp;block) const = 0;

    void setPaintDevice(QPaintDevice *device);
    QPaintDevice *paintDevice() const;

    QTextDocument *document() const;

    void registerHandler(int objectType, QObject *component);
    QTextObjectInterface *handlerForObject(int objectType) const;

Q_SIGNALS:
    void update(const QRectF &amp; = QRectF(0., 0., 1000000000., 1000000000.));
    void documentSizeChanged(const QSizeF &amp;newSize);
    void pageCountChanged(int newPages);

protected:
    QAbstractTextDocumentLayout(QAbstractTextDocumentLayoutPrivate &amp;, QTextDocument *);

    virtual void documentChanged(int from, int charsRemoved, int charsAdded) = 0;

    virtual void resizeInlineObject(QTextInlineObject item, int posInDocument, const QTextFormat &amp;format);
    virtual void positionInlineObject(QTextInlineObject item, int posInDocument, const QTextFormat &amp;format);
    virtual void drawInlineObject(QPainter *painter, const QRectF &amp;rect, QTextInlineObject object, int posInDocument, const QTextFormat &amp;format);

    int formatIndex(int pos);
    QTextCharFormat format(int pos);

private:
    friend class QTextDocument;
    friend class QTextDocumentPrivate;
    friend class QTextEngine;
    friend class QTextLayout;
    friend class QTextLine;
    Q_PRIVATE_SLOT(d_func(), void handlerDestroyed(QObject *obj))
    Q_PRIVATE_SLOT(d_func(), int dynamicPageCountSlot())
    Q_PRIVATE_SLOT(d_func(), QSizeF dynamicDocumentSizeSlot())
};

class Q_GUI_EXPORT QTextObjectInterface
{
public:
    virtual ~QTextObjectInterface() {}
    virtual QSizeF intrinsicSize(QTextDocument *doc, int posInDocument, const QTextFormat &amp;format) = 0;
    virtual void drawObject(QPainter *painter, const QRectF &amp;rect, QTextDocument *doc, int posInDocument, const QTextFormat &amp;format) = 0;
};
Q_DECLARE_INTERFACE(QTextObjectInterface, "com.trolltech.Qt.QTextObjectInterface")

#endif // QABSTRACTTEXTDOCUMENTLAYOUT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaccessible.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QACCESSIBLE_H
#define QACCESSIBLE_H

#include &lt;QtCore/qglobal.h>
#include &lt;QtGui/qevent.h>
#include &lt;QtCore/qobject.h>
#include &lt;QtCore/qrect.h>
#include &lt;QtCore/qvector.h>
#include &lt;QtCore/qvariant.h>

QT_MODULE(Gui)

#ifndef QT_NO_ACCESSIBILITY

class QAccessibleInterface;

class Q_GUI_EXPORT QAccessible
{
public:
    enum Event {
        SoundPlayed          = 0x0001,
        Alert                = 0x0002,
        ForegroundChanged    = 0x0003,
        MenuStart            = 0x0004,
        MenuEnd              = 0x0005,
        PopupMenuStart       = 0x0006,
        PopupMenuEnd         = 0x0007,
        ContextHelpStart     = 0x000C,
        ContextHelpEnd       = 0x000D,
        DragDropStart        = 0x000E,
        DragDropEnd          = 0x000F,
        DialogStart          = 0x0010,
        DialogEnd            = 0x0011,
        ScrollingStart       = 0x0012,
        ScrollingEnd         = 0x0013,

        MenuCommand          = 0x0018,

        ObjectCreated        = 0x8000,
        ObjectDestroyed      = 0x8001,
        ObjectShow           = 0x8002,
        ObjectHide           = 0x8003,
        ObjectReorder        = 0x8004,
        Focus                = 0x8005,
        Selection            = 0x8006,
        SelectionAdd         = 0x8007,
        SelectionRemove      = 0x8008,
        SelectionWithin      = 0x8009,
        StateChanged         = 0x800A,
        LocationChanged      = 0x800B,
        NameChanged          = 0x800C,
        DescriptionChanged   = 0x800D,
        ValueChanged         = 0x800E,
        ParentChanged        = 0x800F,
        HelpChanged          = 0x80A0,
        DefaultActionChanged = 0x80B0,
        AcceleratorChanged   = 0x80C0
    };

    enum StateFlag {
        Normal          = 0x00000000,
        Unavailable     = 0x00000001,
        Selected        = 0x00000002,
        Focused         = 0x00000004,
        Pressed         = 0x00000008,
        Checked         = 0x00000010,
        Mixed           = 0x00000020,
        ReadOnly        = 0x00000040,
        HotTracked      = 0x00000080,
        DefaultButton   = 0x00000100,
        Expanded        = 0x00000200,
        Collapsed       = 0x00000400,
        Busy            = 0x00000800,
        // Floating        = 0x00001000,
        Marqueed        = 0x00002000,
        Animated        = 0x00004000,
        Invisible       = 0x00008000,
        Offscreen       = 0x00010000,
        Sizeable        = 0x00020000,
        Movable         = 0x00040000,
#ifdef QT3_SUPPORT
        Moveable        = Movable,
#endif
        SelfVoicing     = 0x00080000,
        Focusable       = 0x00100000,
        Selectable      = 0x00200000,
        Linked          = 0x00400000,
        Traversed       = 0x00800000,
        MultiSelectable = 0x01000000,
        ExtSelectable   = 0x02000000,
        //AlertLow        = 0x04000000,
        //AlertMedium     = 0x08000000,
        //AlertHigh       = 0x10000000,
        Protected       = 0x20000000,
        HasPopup        = 0x40000000,
        Modal           = 0x80000000
    };
    Q_DECLARE_FLAGS(State, StateFlag)

    enum Role {
        NoRole         = 0x00000000,
        TitleBar       = 0x00000001,
        MenuBar        = 0x00000002,
        ScrollBar      = 0x00000003,
        Grip           = 0x00000004,
        Sound          = 0x00000005,
        Cursor         = 0x00000006,
        Caret          = 0x00000007,
        AlertMessage   = 0x00000008,
        Window         = 0x00000009,
        Client         = 0x0000000A,
        PopupMenu      = 0x0000000B,
        MenuItem       = 0x0000000C,
        ToolTip        = 0x0000000D,
        Application    = 0x0000000E,
        Document       = 0x0000000F,
        Pane           = 0x00000010,
        Chart          = 0x00000011,
        Dialog         = 0x00000012,
        Border         = 0x00000013,
        Grouping       = 0x00000014,
        Separator      = 0x00000015,
        ToolBar        = 0x00000016,
        StatusBar      = 0x00000017,
        Table          = 0x00000018,
        ColumnHeader   = 0x00000019,
        RowHeader      = 0x0000001A,
        Column         = 0x0000001B,
        Row            = 0x0000001C,
        Cell           = 0x0000001D,
        Link           = 0x0000001E,
        HelpBalloon    = 0x0000001F,
        Assistant      = 0x00000020,
        List           = 0x00000021,
        ListItem       = 0x00000022,
        Tree           = 0x00000023,
        TreeItem       = 0x00000024,
        PageTab        = 0x00000025,
        PropertyPage   = 0x00000026,
        Indicator      = 0x00000027,
        Graphic        = 0x00000028,
        StaticText     = 0x00000029,
        EditableText   = 0x0000002A,  // Editable, selectable, etc.
        PushButton     = 0x0000002B,
        CheckBox       = 0x0000002C,
        RadioButton    = 0x0000002D,
        ComboBox       = 0x0000002E,
        // DropList       = 0x0000002F,
        ProgressBar    = 0x00000030,
        Dial           = 0x00000031,
        HotkeyField    = 0x00000032,
        Slider         = 0x00000033,
        SpinBox        = 0x00000034,
        Canvas         = 0x00000035,
        Animation      = 0x00000036,
        Equation       = 0x00000037,
        ButtonDropDown = 0x00000038,
        ButtonMenu     = 0x00000039,
        ButtonDropGrid = 0x0000003A,
        Whitespace     = 0x0000003B,
        PageTabList    = 0x0000003C,
        Clock          = 0x0000003D,
        Splitter       = 0x0000003E,
        LayeredPane    = 0x0000003F,
        UserRole       = 0x0000ffff
    };

    enum Text {
        Name         = 0,
        Description,
        Value,
        Help,
        Accelerator,
        UserText     = 0x0000ffff
    };

    enum RelationFlag {
        Unrelated     = 0x00000000,
        Self          = 0x00000001,
        Ancestor      = 0x00000002,
        Child         = 0x00000004,
        Descendent    = 0x00000008,
        Sibling       = 0x00000010,
        HierarchyMask = 0x000000ff,

        Up            = 0x00000100,
        Down          = 0x00000200,
        Left          = 0x00000400,
        Right         = 0x00000800,
        Covers        = 0x00001000,
        Covered       = 0x00002000,
        GeometryMask  = 0x0000ff00,

        FocusChild    = 0x00010000,
        Label         = 0x00020000,
        Labelled      = 0x00040000,
        Controller    = 0x00080000,
        Controlled    = 0x00100000,
        LogicalMask   = 0x00ff0000
    };
    Q_DECLARE_FLAGS(Relation, RelationFlag)

    enum Action {
        DefaultAction       = 0,
        Press               = -1,
        FirstStandardAction = Press,
        SetFocus            = -2,
        Increase            = -3,
        Decrease            = -4,
        Accept              = -5,
        Cancel	            = -6,
        Select              = -7,
        ClearSelection      = -8,
        RemoveSelection     = -9,
        ExtendSelection     = -10,
        AddToSelection      = -11,
        LastStandardAction  = AddToSelection
    };

    typedef QAccessibleInterface*(*InterfaceFactory)(const QString &amp;key, QObject*);
    typedef void(*UpdateHandler)(QObject*, int who, Event reason);
    typedef void(*RootObjectHandler)(QObject*);

    static void installFactory(InterfaceFactory);
    static void removeFactory(InterfaceFactory);
    static UpdateHandler installUpdateHandler(UpdateHandler);
    static RootObjectHandler installRootObjectHandler(RootObjectHandler);

    static QAccessibleInterface *queryAccessibleInterface(QObject *);
    static void updateAccessibility(QObject *, int who, Event reason);
    static bool isActive();
    static void setRootObject(QObject*);

    static void initialize();
    static void cleanup();

private:
    static UpdateHandler updateHandler;
    static RootObjectHandler rootObjectHandler;
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QAccessible::State)
Q_DECLARE_OPERATORS_FOR_FLAGS(QAccessible::Relation)

class Q_GUI_EXPORT QAccessibleInterface : public QAccessible
{
public:
    virtual ~QAccessibleInterface() {}
    // check for valid pointers
    virtual bool isValid() const = 0;
    virtual QObject *object() const = 0;

    // hierarchy
    virtual int childCount() const = 0;
    virtual int indexOfChild(const QAccessibleInterface *) const = 0;

    // relations
    virtual Relation relationTo(int child, const QAccessibleInterface *other,
                                int otherChild) const = 0;
    virtual int childAt(int x, int y) const = 0;

    // navigation
    virtual int navigate(RelationFlag relation, int index, QAccessibleInterface **iface) const = 0;

    // properties and state
    virtual QString text(Text t, int child) const = 0;
    virtual void setText(Text t, int child, const QString &amp;text) = 0;
    virtual QRect rect(int child) const = 0;
    virtual Role role(int child) const = 0;
    virtual State state(int child) const = 0;

    // action
    virtual int userActionCount(int child) const = 0;
    virtual QString actionText(int action, Text t, int child) const = 0;
    virtual bool doAction(int action, int child, const QVariantList &amp;params = QVariantList()) = 0;
};

#define QAccessibleInterface_iid "com.trolltech.Qt.QAccessibleInterface"
Q_DECLARE_INTERFACE(QAccessibleInterface, QAccessibleInterface_iid)


class Q_GUI_EXPORT QAccessibleEvent : public QEvent
{
public:
    inline QAccessibleEvent(Type type, int child);
    inline int child() const { return c; }
    inline QString value() const { return val; }
    inline void setValue(const QString &amp;aText) { val = aText; }

private:
    int c;
    QString val;
};

inline QAccessibleEvent::QAccessibleEvent(Type atype, int achild)
    : QEvent(atype), c(achild) {}

#endif // QT_NO_ACCESSIBILITY

#endif // QACCESSIBLE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaccessiblebridge.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QACCESSIBLEBRIDGE_H
#define QACCESSIBLEBRIDGE_H

#include &lt;QtCore/qplugin.h>
#include &lt;QtCore/qfactoryinterface.h>

QT_MODULE(Gui)

#ifndef QT_NO_ACCESSIBILITY

class QAccessibleInterface;

class QAccessibleBridge
{
public:
    virtual ~QAccessibleBridge() {}
    virtual void setRootObject(QAccessibleInterface *) = 0;
    virtual void notifyAccessibilityUpdate(int, QAccessibleInterface*, int) = 0;
};

struct Q_GUI_EXPORT QAccessibleBridgeFactoryInterface : public QFactoryInterface
{
    virtual QAccessibleBridge *create(const QString&amp; name) = 0;
};

#define QAccessibleBridgeFactoryInterface_iid "com.trolltech.Qt.QAccessibleBridgeFactoryInterface"
Q_DECLARE_INTERFACE(QAccessibleBridgeFactoryInterface, QAccessibleBridgeFactoryInterface_iid)

class Q_GUI_EXPORT QAccessibleBridgePlugin : public QObject, public QAccessibleBridgeFactoryInterface
{
    Q_OBJECT
    Q_INTERFACES(QAccessibleBridgeFactoryInterface:QFactoryInterface)
public:
    explicit QAccessibleBridgePlugin(QObject *parent = 0);
    ~QAccessibleBridgePlugin();

    virtual QStringList keys() const = 0;
    virtual QAccessibleBridge *create(const QString &amp;key) = 0;
};

#endif // QT_NO_ACCESSIBILITY

#endif // QACCESSIBLEBRIDGE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaccessibleobject.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QACCESSIBLEOBJECT_H
#define QACCESSIBLEOBJECT_H

#include &lt;QtGui/qaccessible.h>

QT_MODULE(Gui)

#ifndef QT_NO_ACCESSIBILITY

class QAccessibleObjectPrivate;
class QObject;

class Q_GUI_EXPORT QAccessibleObject : public QAccessibleInterface
{
public:
    explicit QAccessibleObject(QObject *object);

    bool isValid() const;
    QObject *object() const;

    // properties
    QRect rect(int child) const;
    void setText(Text t, int child, const QString &amp;text);

    // actions
    int userActionCount(int child) const;
    bool doAction(int action, int child, const QVariantList &amp;params);
    QString actionText(int action, Text t, int child) const;

protected:
    virtual ~QAccessibleObject();

private:
    QAccessibleObjectPrivate *d;
};

class Q_GUI_EXPORT QAccessibleApplication : public QAccessibleObject
{
public:
    QAccessibleApplication();

    // relations
    int childCount() const;
    int indexOfChild(const QAccessibleInterface*) const;
    Relation relationTo(int, const QAccessibleInterface *, int) const;

    // navigation
    int childAt(int x, int y) const;
    int navigate(RelationFlag, int, QAccessibleInterface **) const;

    // properties and state
    QString text(Text t, int child) const;
    Role role(int child) const;
    State state(int child) const;

    // actions
    int userActionCount(int child) const;
    bool doAction(int action, int child, const QVariantList &amp;params);
    QString actionText(int action, Text t, int child) const;
};

#endif // QT_NO_ACCESSIBILITY

#endif // QACCESSIBLEOBJECT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaccessibleplugin.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QACCESSIBLEPLUGIN_H
#define QACCESSIBLEPLUGIN_H

#include &lt;QtGui/qaccessible.h>
#include &lt;QtCore/qfactoryinterface.h>

QT_MODULE(Gui)

#ifndef QT_NO_ACCESSIBILITY

class QStringList;
class QAccessibleInterface;

struct Q_GUI_EXPORT QAccessibleFactoryInterface : public QAccessible, public QFactoryInterface
{
    virtual QAccessibleInterface* create(const QString &amp;key, QObject *object) = 0;
};

#define QAccessibleFactoryInterface_iid "com.trolltech.Qt.QAccessibleFactoryInterface"
Q_DECLARE_INTERFACE(QAccessibleFactoryInterface, QAccessibleFactoryInterface_iid)

class QAccessiblePluginPrivate;

class Q_GUI_EXPORT QAccessiblePlugin : public QObject, public QAccessibleFactoryInterface
{
    Q_OBJECT
    Q_INTERFACES(QAccessibleFactoryInterface:QFactoryInterface)
public:
    explicit QAccessiblePlugin(QObject *parent = 0);
    ~QAccessiblePlugin();

    virtual QStringList keys() const = 0;
    virtual QAccessibleInterface *create(const QString &amp;key, QObject *object) = 0;
};

#endif // QT_NO_ACCESSIBILITY

#endif // QACCESSIBLEPLUGIN_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaccessiblewidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QACCESSIBLEWIDGET_H
#define QACCESSIBLEWIDGET_H

#include &lt;QtGui/qaccessibleobject.h>

QT_MODULE(Gui)

#ifndef QT_NO_ACCESSIBILITY

class QAccessibleWidgetPrivate;

class Q_GUI_EXPORT QAccessibleWidget : public QAccessibleObject
{
public:
    explicit QAccessibleWidget(QWidget *o, Role r = Client, const QString&amp; name = QString());

    int childCount() const;
    int indexOfChild(const QAccessibleInterface *child) const;
    Relation relationTo(int child, const QAccessibleInterface *other, int otherChild) const;

    int childAt(int x, int y) const;
    QRect rect(int child) const;
    int navigate(RelationFlag rel, int entry, QAccessibleInterface **target) const;

    QString text(Text t, int child) const;
    Role role(int child) const;
    State state(int child) const;

    QString actionText(int action, Text t, int child) const;
    bool doAction(int action, int child, const QVariantList &amp;params);

protected:
    ~QAccessibleWidget();
    QWidget *widget() const;
    QObject *parentObject() const;

    void addControllingSignal(const QString &amp;signal);
    void setValue(const QString &amp;value);
    void setDescription(const QString &amp;desc);
    void setHelp(const QString &amp;help);
    void setAccelerator(const QString &amp;accel);

private:
    QAccessibleWidgetPrivate *d;
};

#endif // QT_NO_ACCESSIBILITY

#endif // QACCESSIBLEWIDGET_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qaction.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QACTION_H
#define QACTION_H

#include &lt;QtGui/qkeysequence.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtGui/qwidget.h>
#include &lt;QtCore/qvariant.h>
#include &lt;QtGui/qicon.h>

QT_MODULE(Gui)

#ifndef QT_NO_ACTION

class QMenu;
class QActionGroup;
class QActionPrivate;

class Q_GUI_EXPORT QAction : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QAction)

    Q_PROPERTY(bool checkable READ isCheckable WRITE setCheckable)
    Q_PROPERTY(bool checked READ isChecked WRITE setChecked NOTIFY toggled)
    Q_PROPERTY(bool enabled READ isEnabled WRITE setEnabled)
    Q_PROPERTY(QIcon icon READ icon WRITE setIcon)
    Q_PROPERTY(QString text READ text WRITE setText)
    Q_PROPERTY(QString iconText READ iconText WRITE setIconText)
    Q_PROPERTY(QString toolTip READ toolTip WRITE setToolTip)
    Q_PROPERTY(QString statusTip READ statusTip WRITE setStatusTip)
    Q_PROPERTY(QString whatsThis READ whatsThis WRITE setWhatsThis)
    Q_PROPERTY(QFont font READ font WRITE setFont)
#ifndef QT_NO_SHORTCUT
    Q_PROPERTY(QKeySequence shortcut READ shortcut WRITE setShortcut)
    Q_PROPERTY(Qt::ShortcutContext shortcutContext READ shortcutContext WRITE setShortcutContext)
#endif
    Q_PROPERTY(bool visible READ isVisible WRITE setVisible)

public:
    explicit QAction(QObject* parent);
    QAction(const QString &amp;text, QObject* parent);
    QAction(const QIcon &amp;icon, const QString &amp;text, QObject* parent);

#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QAction(QObject* parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QAction(const QString &amp;text, const QKeySequence &amp;shortcut,
                                    QObject* parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QAction(const QIcon &amp;icon, const QString &amp;text,
                                    const QKeySequence &amp;shortcut,
                                    QObject* parent, const char* name);
#endif
    ~QAction();

    void setActionGroup(QActionGroup *group);
    QActionGroup *actionGroup() const;
    void setIcon(const QIcon &amp;icon);
    QIcon icon() const;

    void setText(const QString &amp;text);
    QString text() const;

    void setIconText(const QString &amp;text);
    QString iconText() const;

    void setToolTip(const QString &amp;tip);
    QString toolTip() const;

    void setStatusTip(const QString &amp;statusTip);
    QString statusTip() const;

    void setWhatsThis(const QString &amp;what);
    QString whatsThis() const;

#ifndef QT_NO_MENU
    QMenu *menu() const;
    void setMenu(QMenu *menu);
#endif
    
    void setSeparator(bool b);
    bool isSeparator() const;

#ifndef QT_NO_SHORTCUT
    void setShortcut(const QKeySequence &amp;shortcut);
    QKeySequence shortcut() const;
    
    void setShortcutContext(Qt::ShortcutContext context);
    Qt::ShortcutContext shortcutContext() const;
#endif
    
    void setFont(const QFont &amp;font);
    QFont font() const;

    void setCheckable(bool);
    bool isCheckable() const;

    QVariant data() const;
    void setData(const QVariant &amp;var);

    bool isChecked() const;

    bool isEnabled() const;

    bool isVisible() const;

    enum ActionEvent { Trigger, Hover };
    void activate(ActionEvent event);
    bool showStatusText(QWidget *widget=0);

#ifdef QT3_SUPPORT
    inline QT3_SUPPORT void setMenuText(const QString &amp;text) { setText(text); }
    inline QT3_SUPPORT QString menuText() const { return text(); }
    inline QT3_SUPPORT bool isOn() const { return isChecked(); }
    inline QT3_SUPPORT bool isToggleAction() const { return isCheckable(); }
    inline QT3_SUPPORT void setToggleAction(bool b) { setCheckable(b); }
    inline QT3_SUPPORT void setIconSet(const QIcon &amp;i) { setIcon(i); }
    inline QT3_SUPPORT QIcon iconSet() const { return icon(); }
    inline QT3_SUPPORT bool addTo(QWidget *w) { w->addAction(this); return true; }
    inline QT3_SUPPORT bool removeFrom(QWidget *w) { w->removeAction(this); return true; }
    inline QT3_SUPPORT void setAccel(const QKeySequence &amp;shortcut) { setShortcut(shortcut); }
    inline QT3_SUPPORT QKeySequence accel() const { return shortcut(); }
#endif

    QWidget *parentWidget() const;

protected:
    bool event(QEvent *);

public Q_SLOTS:
#ifdef QT3_SUPPORT
    inline QT_MOC_COMPAT void setOn(bool b) { setChecked(b); }
#endif
    void trigger() { activate(Trigger); }
    void hover() { activate(Hover); }
    void setChecked(bool);
    void toggle();
    void setEnabled(bool);
    inline void setDisabled(bool b) { setEnabled(!b); }
    void setVisible(bool);

Q_SIGNALS:
    void changed();
    void triggered(bool checked = false);
    void hovered();
    void toggled(bool);
#ifdef QT3_SUPPORT
    QT_MOC_COMPAT void activated(int = 0);
#endif

private:
    Q_DISABLE_COPY(QAction)

#ifdef QT3_SUPPORT
    friend class QMenuItem;
#endif
    friend class QWidget;
    friend class QActionGroup;
    friend class QMenu;
    friend class QMenuBar;
    friend class QShortcutMap;
};

#include &lt;QtGui/qactiongroup.h>

#endif // QT_NO_ACTION

#endif // QACTION_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qactiongroup.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QACTIONGROUP_H
#define QACTIONGROUP_H

#include &lt;QtGui/qaction.h>

QT_MODULE(Gui)

#ifndef QT_NO_ACTION

class QActionGroupPrivate;

class Q_GUI_EXPORT QActionGroup : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QActionGroup)

    Q_PROPERTY(bool exclusive READ isExclusive WRITE setExclusive)
    Q_PROPERTY(bool enabled READ isEnabled WRITE setEnabled)
    Q_PROPERTY(bool visible READ isVisible WRITE setVisible)

public:
    explicit QActionGroup(QObject* parent);
    ~QActionGroup();

    QAction *addAction(QAction* a);
    QAction *addAction(const QString &amp;text);
    QAction *addAction(const QIcon &amp;icon, const QString &amp;text);
    void removeAction(QAction *a);
    QList&lt;QAction*> actions() const;

    QAction *checkedAction() const;
    bool isExclusive() const;
    bool isEnabled() const;
    bool isVisible() const;

#ifdef QT3_SUPPORT
    inline QT3_SUPPORT void add(QAction* a) { addAction(a); }
    inline QT3_SUPPORT void addSeparator()
    { QAction *act = new QAction(this); act->setSeparator(true); addAction(act); }
    inline QT3_SUPPORT bool addTo(QWidget *w) { w->addActions(actions()); return true; }
#endif

public Q_SLOTS:
    void setEnabled(bool);
    inline void setDisabled(bool b) { setEnabled(!b); }
    void setVisible(bool);
    void setExclusive(bool);

Q_SIGNALS:
    void triggered(QAction *);
    QT_MOC_COMPAT void selected(QAction *);
    void hovered(QAction *);

private:
    Q_DISABLE_COPY(QActionGroup)
    Q_PRIVATE_SLOT(d_func(), void actionTriggered())
    Q_PRIVATE_SLOT(d_func(), void actionChanged())
    Q_PRIVATE_SLOT(d_func(), void actionHovered())
};

#endif // QT_NO_ACTION

#endif // QACTIONGROUP_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qapplication.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QAPPLICATION_H
#define QAPPLICATION_H

#include &lt;QtCore/qcoreapplication.h>
#include &lt;QtGui/qwindowdefs.h>
#include &lt;QtCore/qpoint.h>
#include &lt;QtCore/qsize.h>
#include &lt;QtGui/qcursor.h>
#ifdef QT_INCLUDE_COMPAT
# include &lt;QtGui/qdesktopwidget.h>
#endif
#ifdef QT3_SUPPORT
# include &lt;QtGui/qwidget.h>
# include &lt;QtGui/qpalette.h>
#endif
#ifdef Q_WS_QWS
# include &lt;QtGui/qrgb.h>
# include &lt;QtGui/qtransportauth_qws.h>
#endif

QT_MODULE(Gui)

class QSessionManager;
class QDesktopWidget;
class QStyle;
class QEventLoop;
class QIcon;
template &lt;typename T> class QList;
class QInputContext;
#if defined(Q_WS_QWS)
class QDecoration;
#endif

class QApplication;
class QApplicationPrivate;
#define qApp (static_cast&lt;QApplication *>(QCoreApplication::instance()))

class Q_GUI_EXPORT QApplication : public QCoreApplication
{
    Q_OBJECT
    Q_PROPERTY(Qt::LayoutDirection layoutDirection READ layoutDirection WRITE setLayoutDirection)
    Q_PROPERTY(QIcon windowIcon READ windowIcon WRITE setWindowIcon)
    Q_PROPERTY(int cursorFlashTime READ cursorFlashTime WRITE setCursorFlashTime)
    Q_PROPERTY(int doubleClickInterval  READ doubleClickInterval WRITE setDoubleClickInterval)
    Q_PROPERTY(int keyboardInputInterval READ keyboardInputInterval WRITE setKeyboardInputInterval)
#ifndef QT_NO_WHEELEVENT
    Q_PROPERTY(int wheelScrollLines  READ wheelScrollLines WRITE setWheelScrollLines)
#endif
    Q_PROPERTY(QSize globalStrut READ globalStrut WRITE setGlobalStrut)
    Q_PROPERTY(int startDragTime  READ startDragTime WRITE setStartDragTime)
    Q_PROPERTY(int startDragDistance  READ startDragDistance WRITE setStartDragDistance)
    Q_PROPERTY(bool quitOnLastWindowClosed  READ quitOnLastWindowClosed WRITE setQuitOnLastWindowClosed)

public:
    QApplication(int &amp;argc, char **argv);
    QApplication(int &amp;argc, char **argv, bool GUIenabled);
    enum Type { Tty, GuiClient, GuiServer };
    QApplication(int &amp;argc, char **argv, Type);
#if defined(Q_WS_X11)
    QApplication(Display* dpy, Qt::HANDLE visual = 0, Qt::HANDLE cmap = 0);
    QApplication(Display *dpy, int &amp;argc, char **argv, Qt::HANDLE visual = 0, Qt::HANDLE cmap= 0);
#endif
    virtual ~QApplication();

    static Type type();

    static QStyle *style();
    static void setStyle(QStyle*);
    static QStyle *setStyle(const QString&amp;);
    enum ColorSpec { NormalColor=0, CustomColor=1, ManyColor=2 };
    static int colorSpec();
    static void setColorSpec(int);

#ifndef QT_NO_CURSOR
    static QCursor *overrideCursor();
    static void setOverrideCursor(const QCursor &amp;);
    static void changeOverrideCursor(const QCursor &amp;);
    static void restoreOverrideCursor();
#endif
    static QPalette palette();
    static QPalette palette(const QWidget *);
    static QPalette palette(const char *className);
    static void setPalette(const QPalette &amp;, const char* className = 0);
    static QFont font(const QWidget* = 0);
    static void setFont(const QFont &amp;, const char* className = 0);
    static QFontMetrics fontMetrics();

    static void setWindowIcon(const QIcon &amp;icon);
    static QIcon windowIcon();


#ifdef QT3_SUPPORT
    static QT3_SUPPORT QWidget *mainWidget();
    static QT3_SUPPORT void setMainWidget(QWidget *);
#endif

    static QWidgetList allWidgets();
    static QWidgetList topLevelWidgets();

    static QDesktopWidget *desktop();

    static QWidget *activePopupWidget();
    static QWidget *activeModalWidget();
#ifndef QT_NO_CLIPBOARD
    static QClipboard *clipboard();
#endif
    static QWidget *focusWidget();

    static QWidget *activeWindow();
    static void setActiveWindow(QWidget* act);

    static QWidget *widgetAt(const QPoint &amp;p);
    static inline QWidget *widgetAt(int x, int y) { return widgetAt(QPoint(x, y)); }
    static QWidget *topLevelAt(const QPoint &amp;p);
    static inline QWidget *topLevelAt(int x, int y)  { return topLevelAt(QPoint(x, y)); }

    static void syncX();
    static void beep();

    static Qt::KeyboardModifiers keyboardModifiers();
    static Qt::MouseButtons mouseButtons();

    static void setDesktopSettingsAware(bool);
    static bool desktopSettingsAware();

    static void setCursorFlashTime(int);
    static int cursorFlashTime();

    static void setDoubleClickInterval(int);
    static int doubleClickInterval();

    static void setKeyboardInputInterval(int);
    static int keyboardInputInterval();

#ifndef QT_NO_WHEELEVENT
    static void setWheelScrollLines(int);
    static int wheelScrollLines();
#endif
    static void setGlobalStrut(const QSize &amp;);
    static QSize globalStrut();

    static void setStartDragTime(int ms);
    static int startDragTime();
    static void setStartDragDistance(int l);
    static int startDragDistance();

    static void setLayoutDirection(Qt::LayoutDirection direction);
    static Qt::LayoutDirection layoutDirection();

    static inline bool isRightToLeft() { return layoutDirection() == Qt::RightToLeft; }
    static inline bool isLeftToRight() { return layoutDirection() == Qt::LeftToRight; }

    static bool isEffectEnabled(Qt::UIEffect);
    static void setEffectEnabled(Qt::UIEffect, bool enable = true);

#if defined(Q_WS_MAC)
    virtual bool macEventFilter(EventHandlerCallRef, EventRef);
#endif
#if defined(Q_WS_X11)
    virtual bool x11EventFilter(XEvent *);
    virtual int x11ClientMessage(QWidget*, XEvent*, bool passive_only);
    int x11ProcessEvent(XEvent*);
#endif
#if defined(Q_WS_QWS)
    virtual bool qwsEventFilter(QWSEvent *);
    int qwsProcessEvent(QWSEvent*);
    void qwsSetCustomColors(QRgb *colortable, int start, int numColors);
#ifndef QT_NO_QWS_MANAGER
    static QDecoration &amp;qwsDecoration();
    static void qwsSetDecoration(QDecoration *);
    static QDecoration *qwsSetDecoration(const QString &amp;decoration);
#endif
#endif


#if defined(Q_WS_WIN)
    void winFocus(QWidget *, bool);
    static void winMouseButtonUp();
#endif

#ifndef QT_NO_SESSIONMANAGER
    // session management
    bool isSessionRestored() const;
    QString sessionId() const;
    QString sessionKey() const;
    virtual void commitData(QSessionManager&amp; sm);
    virtual void saveState(QSessionManager&amp; sm);
#endif
    void setInputContext(QInputContext *);
    QInputContext *inputContext() const;

    static int exec();
    bool notify(QObject *, QEvent *);


    static void setQuitOnLastWindowClosed(bool quit);
    static bool quitOnLastWindowClosed();

#ifdef QT_KEYPAD_NAVIGATION
    static void setKeypadNavigationEnabled(bool);
    static bool keypadNavigationEnabled();
#endif

Q_SIGNALS:
    void lastWindowClosed();
    void focusChanged(QWidget *old, QWidget *now);

public Q_SLOTS:
    static void closeAllWindows();
    static void aboutQt();

protected:
#if defined(Q_WS_QWS)
    void setArgs(int, char **);
#endif
    bool event(QEvent *);
    bool compressEvent(QEvent *, QObject *receiver, QPostEventList *);

#ifdef QT3_SUPPORT
public:
    static inline QT3_SUPPORT void setReverseLayout(bool b) { setLayoutDirection(b?Qt::RightToLeft:Qt::LeftToRight); }
    static inline bool QT3_SUPPORT reverseLayout() { return layoutDirection() == Qt::RightToLeft; }
    static QT3_SUPPORT Qt::Alignment horizontalAlignment(Qt::Alignment align);
    typedef int ColorMode;
    enum { NormalColors = NormalColor, CustomColors = CustomColor };
    static inline QT3_SUPPORT ColorMode colorMode() { return static_cast&lt;ColorMode>(colorSpec()); }
    static inline QT3_SUPPORT void setColorMode(ColorMode mode) { setColorSpec(int(mode)); }
#if defined(Q_OS_WIN32) || defined(Q_OS_CYGWIN)
    static QT3_SUPPORT Qt::WindowsVersion winVersion() { return (Qt::WindowsVersion)QSysInfo::WindowsVersion; }
#endif
#if defined(Q_OS_MAC)
    static QT3_SUPPORT Qt::MacintoshVersion macVersion() { return (Qt::MacintoshVersion)QSysInfo::MacintoshVersion; }
#endif
    inline static  QT3_SUPPORT void setOverrideCursor(const QCursor &amp;cursor, bool replace)
        { if (replace) changeOverrideCursor(cursor); else setOverrideCursor(cursor); }
    inline static QT3_SUPPORT bool hasGlobalMouseTracking() {return true;}
    inline static QT3_SUPPORT void setGlobalMouseTracking(bool) {};
    inline static QT3_SUPPORT void flushX() { flush(); }
    static inline QT3_SUPPORT void setWinStyleHighlightColor(const QColor &amp;c) {
        QPalette p(palette());
        p.setColor(QPalette::Highlight, c);
        setPalette(p);
    }
    static inline QT3_SUPPORT const QColor &amp;winStyleHighlightColor()
        { return palette().color(QPalette::Active, QPalette::Highlight); }
    static inline QT3_SUPPORT void setPalette(const QPalette &amp;pal, bool, const char* className = 0)
        { setPalette(pal, className); };
    static inline QT3_SUPPORT void setFont(const QFont &amp;font, bool, const char* className = 0)
        { setFont(font, className); }

    static inline QT3_SUPPORT QWidget *widgetAt(int x, int y, bool child)
        { QWidget *w = widgetAt(x, y); return child ? w : (w ? w->window() : 0); }
    static inline QT3_SUPPORT QWidget *widgetAt(const QPoint &amp;p, bool child)
        { QWidget *w = widgetAt(p); return child ? w : (w ? w->window() : 0); }
#endif // QT3_SUPPORT

private:
    Q_DISABLE_COPY(QApplication)
    Q_DECLARE_PRIVATE(QApplication)

    friend class QWidget;
    friend class QWidgetPrivate;
    friend class QETWidget;
    friend class Q3AccelManager;
    friend class QTranslator;
#ifndef QT_NO_SHORTCUT
    friend class QShortcut;
#endif
    friend class QAction;

#if defined(Q_WS_QWS)
    friend class QInputContext;
    friend class QDirectPainter;
#endif
};

#endif // QAPPLICATION_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qbitmap.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QBITMAP_H
#define QBITMAP_H

#include &lt;QtGui/qpixmap.h>

QT_MODULE(Gui)

class QVariant;

class Q_GUI_EXPORT QBitmap : public QPixmap
{
public:
    QBitmap();
    QBitmap(const QPixmap &amp;);
    QBitmap(int w, int h);
    explicit QBitmap(const QSize &amp;);
    explicit QBitmap(const QString &amp;fileName, const char *format=0);
    ~QBitmap();

    QBitmap &amp;operator=(const QPixmap &amp;);
    operator QVariant() const;

    inline void clear() { fill(Qt::color0); }

    static QBitmap fromImage(const QImage &amp;image, Qt::ImageConversionFlags flags = Qt::AutoColor);
    static QBitmap fromData(const QSize &amp;size, const uchar *bits,
                            QImage::Format monoFormat = QImage::Format_MonoLSB);

    QBitmap transformed(const QMatrix &amp;) const;
#ifdef QT3_SUPPORT
    inline QT3_SUPPORT_CONSTRUCTOR QBitmap(int w, int h, bool clear);
    inline QT3_SUPPORT_CONSTRUCTOR QBitmap(const QSize &amp;, bool clear);
    QT3_SUPPORT_CONSTRUCTOR QBitmap(int w, int h, const uchar *bits, bool isXbitmap=false);
    QT3_SUPPORT_CONSTRUCTOR QBitmap(const QSize &amp;, const uchar *bits, bool isXbitmap=false);
    inline QT3_SUPPORT QBitmap xForm(const QMatrix &amp;matrix) const { return transformed(matrix); }
    QT3_SUPPORT_CONSTRUCTOR QBitmap(const QImage &amp;image) { *this = fromImage(image); }
    QT3_SUPPORT QBitmap &amp;operator=(const QImage &amp;image) { *this = fromImage(image); return *this; }
#endif
};
Q_DECLARE_SHARED(QBitmap)

#ifdef QT3_SUPPORT
inline QBitmap::QBitmap(int w, int h, bool clear)
    : QPixmap(QSize(w, h), BitmapType)
{
    if (clear) this->clear();
}

inline QBitmap::QBitmap(const QSize &amp;size, bool clear)
    : QPixmap(size, BitmapType)
{
    if (clear) this->clear();
}
#endif

#endif // QBITMAP_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qboxlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QBOXLAYOUT_H
#define QBOXLAYOUT_H

#include &lt;QtGui/qlayout.h>
#ifdef QT_INCLUDE_COMPAT
#include &lt;QtGui/qwidget.h>
#endif

#include &lt;limits.h>

QT_MODULE(Gui)

class QBoxLayoutPrivate;

class Q_GUI_EXPORT QBoxLayout : public QLayout
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QBoxLayout)
public:
    enum Direction { LeftToRight, RightToLeft, TopToBottom, BottomToTop,
                     Down = TopToBottom, Up = BottomToTop };

    explicit QBoxLayout(Direction, QWidget *parent = 0);

#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QBoxLayout(QWidget *parent, Direction, int border = 0, int spacing = -1,
                const char *name = 0);
    QT3_SUPPORT_CONSTRUCTOR  QBoxLayout(QLayout *parentLayout, Direction, int spacing = -1,
                const char *name = 0);
    QT3_SUPPORT_CONSTRUCTOR  QBoxLayout(Direction, int spacing, const char *name = 0);
#endif
    ~QBoxLayout();

    Direction direction() const;
    void setDirection(Direction);

    void addSpacing(int size);
    void addStretch(int stretch = 0);
    void addWidget(QWidget *, int stretch = 0, Qt::Alignment alignment = 0);
    void addLayout(QLayout *layout, int stretch = 0);
    void addStrut(int);
    void addItem(QLayoutItem *);

    void insertSpacing(int index, int size);
    void insertStretch(int index, int stretch = 0);
    void insertWidget(int index, QWidget *widget, int stretch = 0, Qt::Alignment alignment = 0);
    void insertLayout(int index, QLayout *layout, int stretch = 0);

    bool setStretchFactor(QWidget *w, int stretch);
    bool setStretchFactor(QLayout *l, int stretch);

    QSize sizeHint() const;
    QSize minimumSize() const;
    QSize maximumSize() const;

    bool hasHeightForWidth() const;
    int heightForWidth(int) const;
    int minimumHeightForWidth(int) const;

    Qt::Orientations expandingDirections() const;
    void invalidate();
    QLayoutItem *itemAt(int) const;
    QLayoutItem *takeAt(int);
    int count() const;
    void setGeometry(const QRect&amp;);
#ifdef QT3_SUPPORT
    inline QT3_SUPPORT int findWidget(QWidget* w) {return indexOf(w);}
#endif
protected:
    void insertItem(int index, QLayoutItem *);

private:
    Q_DISABLE_COPY(QBoxLayout)
};

class Q_GUI_EXPORT QHBoxLayout : public QBoxLayout
{
    Q_OBJECT
public:
    QHBoxLayout();
    explicit QHBoxLayout(QWidget *parent);
    ~QHBoxLayout();

#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QHBoxLayout(QWidget *parent, int border,
                 int spacing = -1, const char *name = 0);
    QT3_SUPPORT_CONSTRUCTOR QHBoxLayout(QLayout *parentLayout,
                 int spacing = -1, const char *name = 0);
    QT3_SUPPORT_CONSTRUCTOR QHBoxLayout(int spacing, const char *name = 0);
#endif

private:
    Q_DISABLE_COPY(QHBoxLayout)
};

class Q_GUI_EXPORT QVBoxLayout : public QBoxLayout
{
    Q_OBJECT
public:
    QVBoxLayout();
    explicit QVBoxLayout(QWidget *parent);
    ~QVBoxLayout();

#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QVBoxLayout(QWidget *parent, int border,
                 int spacing = -1, const char *name = 0);
    QT3_SUPPORT_CONSTRUCTOR QVBoxLayout(QLayout *parentLayout,
                 int spacing = -1, const char *name = 0);
    QT3_SUPPORT_CONSTRUCTOR QVBoxLayout(int spacing, const char *name = 0);
#endif

private:
    Q_DISABLE_COPY(QVBoxLayout)
};

#endif // QBOXLAYOUT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qbrush.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QBRUSH_H
#define QBRUSH_H

#include &lt;QtCore/qpair.h>
#include &lt;QtCore/qpoint.h>
#include &lt;QtCore/qvector.h>
#include &lt;QtGui/qcolor.h>

QT_MODULE(Gui)

struct QBrushData;
class QPixmap;
class QGradient;
class QVariant;

class Q_GUI_EXPORT QBrush
{
public:
    QBrush();
    QBrush(Qt::BrushStyle bs);
    QBrush(const QColor &amp;color, Qt::BrushStyle bs=Qt::SolidPattern);
    QBrush(Qt::GlobalColor color, Qt::BrushStyle bs=Qt::SolidPattern);

    QBrush(const QColor &amp;color, const QPixmap &amp;pixmap);
    QBrush(Qt::GlobalColor color, const QPixmap &amp;pixmap);
    QBrush(const QPixmap &amp;pixmap);

    QBrush(const QBrush &amp;brush);

    QBrush(const QGradient &amp;gradient);

    ~QBrush();
    QBrush &amp;operator=(const QBrush &amp;brush);
    operator QVariant() const;

    inline Qt::BrushStyle style() const;
    void setStyle(Qt::BrushStyle);

    QPixmap texture() const;
    void setTexture(const QPixmap &amp;pixmap);

    inline const QColor &amp;color() const;
    void setColor(const QColor &amp;color);
    inline void setColor(Qt::GlobalColor color);

    const QGradient *gradient() const;

    bool isOpaque() const;

    bool operator==(const QBrush &amp;b) const;
    inline bool operator!=(const QBrush &amp;b) const { return !(operator==(b)); }

#ifdef QT3_SUPPORT
    inline QT3_SUPPORT operator const QColor&amp;() const;
    QT3_SUPPORT QPixmap *pixmap() const;
    inline QT3_SUPPORT void setPixmap(const QPixmap &amp;pixmap) { setTexture(pixmap); }
#endif

private:
#if defined(Q_WS_X11)
    friend class QX11PaintEngine;
#endif
    friend class QPainter;
    void detach(Qt::BrushStyle newStyle);
    void init(const QColor &amp;color, Qt::BrushStyle bs);
    QBrushData *d;
    void cleanUp(QBrushData *x);
};

inline void QBrush::setColor(Qt::GlobalColor acolor)
{ setColor(QColor(acolor)); }

Q_DECLARE_TYPEINFO(QBrush, Q_MOVABLE_TYPE);

/*****************************************************************************
  QBrush stream functions
 *****************************************************************************/

#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QBrush &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QBrush &amp;);
#endif

#ifndef QT_NO_DEBUG_STREAM
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug, const QBrush &amp;);
#endif

struct QBrushData
{
    QAtomic ref;
    Qt::BrushStyle style;
    QColor color;
};

inline Qt::BrushStyle QBrush::style() const { return d->style; }
inline const QColor &amp;QBrush::color() const { return d->color; }

#ifdef QT3_SUPPORT
inline QBrush::operator const QColor&amp;() const { return d->color; }
#endif


/*******************************************************************************
 * QGradients
 */
class QGradientPrivate;

typedef QPair&lt;qreal, QColor> QGradientStop;
typedef QVector&lt;QGradientStop> QGradientStops;

class Q_GUI_EXPORT QGradient
{
public:
    enum Type {
        LinearGradient,
        RadialGradient,
        ConicalGradient,
        NoGradient
    };

    enum Spread {
        PadSpread,
        ReflectSpread,
        RepeatSpread
    };

    QGradient();

    Type type() const { return m_type; }

    inline void setSpread(Spread spread);
    Spread spread() const { return m_spread; }

    void setColorAt(qreal pos, const QColor &amp;color);

    void setStops(const QGradientStops &amp;stops);
    QGradientStops stops() const;

    bool operator==(const QGradient &amp;gradient); // 5.0 - remove me
    bool operator==(const QGradient &amp;gradient) const;


private:
    friend class QLinearGradient;
    friend class QRadialGradient;
    friend class QConicalGradient;

    Type m_type;
    Spread m_spread;
    QGradientStops m_stops;
    union {
        struct {
            qreal x1, y1, x2, y2;
        } linear;
        struct {
            qreal cx, cy, fx, fy, radius;
        } radial;
        struct {
            qreal cx, cy, angle;
        } conical;
    } m_data;
    void *dummy;
};

inline void QGradient::setSpread(Spread aspread)
{ m_spread = aspread; }

class Q_GUI_EXPORT QLinearGradient : public QGradient
{
public:
    QLinearGradient(const QPointF &amp;start, const QPointF &amp;finalStop);
    QLinearGradient(qreal xStart, qreal yStart, qreal xFinalStop, qreal yFinalStop);

    QPointF start() const;
    QPointF finalStop() const;
};


class Q_GUI_EXPORT QRadialGradient : public QGradient
{
public:
    QRadialGradient(const QPointF &amp;center, qreal radius, const QPointF &amp;focalPoint = QPointF());
    QRadialGradient(qreal cx, qreal cy, qreal radius, qreal fx=0, qreal fy=0);

    QPointF center() const;
    QPointF focalPoint() const;
    qreal radius() const;
};


class Q_GUI_EXPORT QConicalGradient : public QGradient
{
public:
    QConicalGradient(const QPointF &amp;center, qreal startAngle);
    QConicalGradient(qreal cx, qreal cy, qreal startAngle);

    QPointF center() const;
    qreal angle() const;
};

#endif // QBRUSH_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qbuttongroup.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QBUTTONGROUP_H
#define QBUTTONGROUP_H

#include &lt;QtCore/qobject.h>

QT_MODULE(Gui)

#ifndef QT_NO_BUTTONGROUP

class QAbstractButton;
class QAbstractButtonPrivate;
class QButtonGroupPrivate;

class Q_GUI_EXPORT QButtonGroup : public QObject
{
    Q_OBJECT

    Q_PROPERTY(bool exclusive READ exclusive WRITE setExclusive)
public:
    explicit QButtonGroup(QObject *parent = 0);
    ~QButtonGroup();

    void setExclusive(bool);
    bool exclusive() const;

    void addButton(QAbstractButton *);
    void addButton(QAbstractButton *, int id);
    void removeButton(QAbstractButton *);

    QList&lt;QAbstractButton*> buttons() const;

    QAbstractButton * checkedButton() const;
    // no setter on purpose!

    QAbstractButton *button(int id) const;
    void setId(QAbstractButton *button, int id);
    int id(QAbstractButton *button) const;
    int checkedId() const;

Q_SIGNALS:
    void buttonClicked(QAbstractButton *);
    void buttonClicked(int);

#ifdef QT3_SUPPORT
public:
    inline QT3_SUPPORT void insert(QAbstractButton *b) { addButton(b); }
    inline QT3_SUPPORT void remove(QAbstractButton *b) { removeButton(b); }
#endif

private:
    Q_DISABLE_COPY(QButtonGroup)
    Q_DECLARE_PRIVATE(QButtonGroup)
    friend class QAbstractButton;
    friend class QAbstractButtonPrivate;
};

#endif // QT_NO_BUTTONGROUP

#endif // QBUTTONGROUP_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcdestyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/


#ifndef QCDESTYLE_H
#define QCDESTYLE_H

#include &lt;QtGui/qmotifstyle.h>

QT_MODULE(Gui)

#if !defined(QT_NO_STYLE_CDE)

class Q_GUI_EXPORT QCDEStyle : public QMotifStyle
{
    Q_OBJECT
public:

    explicit QCDEStyle(bool useHighlightCols = false);
    virtual ~QCDEStyle();

    int pixelMetric(PixelMetric metric, const QStyleOption *option = 0,
                    const QWidget *widget = 0) const;

    void drawControl(ControlElement element, const QStyleOption *opt, QPainter *p,
                             const QWidget *w = 0) const;

    void drawPrimitive(PrimitiveElement pe, const QStyleOption *opt, QPainter *p,
                        const QWidget *w = 0) const;

    QPalette standardPalette() const;

};

#endif // QT_NO_STYLE_CDE

#endif // QCDESTYLE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcheckbox.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QCHECKBOX_H
#define QCHECKBOX_H

#include &lt;QtGui/qabstractbutton.h>

QT_MODULE(Gui)

class QCheckBoxPrivate;

class Q_GUI_EXPORT QCheckBox : public QAbstractButton
{
    Q_OBJECT

    Q_PROPERTY(bool tristate READ isTristate WRITE setTristate)

public:
    explicit QCheckBox(QWidget *parent=0);
    explicit QCheckBox(const QString &amp;text, QWidget *parent=0);


    QSize sizeHint() const;

    void setTristate(bool y = true);
    bool isTristate() const;

    Qt::CheckState checkState() const;
    void setCheckState(Qt::CheckState state);

Q_SIGNALS:
    void stateChanged(int);

protected:
    bool event(QEvent *e);
    bool hitButton(const QPoint &amp;pos) const;
    void checkStateSet();
    void nextCheckState();
    void paintEvent(QPaintEvent *);
    void mouseMoveEvent(QMouseEvent *);

#ifdef QT3_SUPPORT
public:
    enum ToggleState {
        Off =      Qt::Unchecked,
        NoChange = Qt::PartiallyChecked,
        On =       Qt::Checked
    };
    inline QT3_SUPPORT ToggleState state() const
        { return static_cast&lt;QCheckBox::ToggleState>(static_cast&lt;int>(checkState())); }
    inline QT3_SUPPORT void setState(ToggleState state)
        { setCheckState(static_cast&lt;Qt::CheckState>(static_cast&lt;int>(state))); }
    inline QT3_SUPPORT void setNoChange()
        { setCheckState(Qt::PartiallyChecked); }
    QT3_SUPPORT_CONSTRUCTOR QCheckBox(QWidget *parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QCheckBox(const QString &amp;text, QWidget *parent, const char* name);
#endif

private:
    Q_DECLARE_PRIVATE(QCheckBox)
    Q_DISABLE_COPY(QCheckBox)
};

#endif // QCHECKBOX_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qclipboard.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QCLIPBOARD_H
#define QCLIPBOARD_H

#include &lt;QtCore/qobject.h>

QT_MODULE(Gui)

#ifndef QT_NO_CLIPBOARD

class QMimeSource;
class QMimeData;
class QImage;
class QPixmap;

class QClipboardPrivate;

class Q_GUI_EXPORT QClipboard : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QClipboard)
private:
    QClipboard(QObject *parent);
    ~QClipboard();

public:
    enum Mode { Clipboard, Selection };

    void clear(Mode mode = Clipboard);

    bool supportsSelection() const;
    bool ownsSelection() const;
    bool ownsClipboard() const;

    QString text(Mode mode = Clipboard) const;
    QString text(QString&amp; subtype, Mode mode = Clipboard) const;
    void setText(const QString &amp;, Mode mode = Clipboard);

#ifdef QT3_SUPPORT
    QT3_SUPPORT QMimeSource *data(Mode mode  = Clipboard) const;
    QT3_SUPPORT void setData(QMimeSource*, Mode mode  = Clipboard);
#endif
    const QMimeData *mimeData(Mode mode = Clipboard ) const;
    void setMimeData(QMimeData *data, Mode mode = Clipboard);

    QImage image(Mode mode = Clipboard) const;
    QPixmap pixmap(Mode mode = Clipboard) const;
    void setImage(const QImage &amp;, Mode mode  = Clipboard);
    void setPixmap(const QPixmap &amp;, Mode mode  = Clipboard);

Q_SIGNALS:
    void selectionChanged();
    void dataChanged();

private Q_SLOTS:
    void ownerDestroyed();

protected:
    void connectNotify(const char *);
    bool event(QEvent *);

    friend class QApplication;
    friend class QApplicationPrivate;
    friend class QBaseApplication;
    friend class QDragManager;
    friend class QMimeSource;

private:
    Q_DISABLE_COPY(QClipboard)

#if defined(Q_WS_MAC)
    void loadScrap(bool convert);
    void saveScrap();
#endif
};

#endif // QT_NO_CLIPBOARD

#endif // QCLIPBOARD_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcolor.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QCOLOR_H
#define QCOLOR_H

#include &lt;QtGui/qrgb.h>
#include &lt;QtCore/qnamespace.h>
#include &lt;QtCore/qstringlist.h>

QT_MODULE(Gui)

class QColor;
class QColormap;
class QVariant;

#ifndef QT_NO_DEBUG_STREAM
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug, const QColor &amp;);
#endif
#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QColor &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QColor &amp;);
#endif

class Q_GUI_EXPORT QColor
{
public:
    enum Spec { Invalid, Rgb, Hsv, Cmyk };

    QColor();
    QColor(Qt::GlobalColor color);
    QColor(int r, int g, int b, int a = 255);
    QColor(QRgb rgb);
    QColor(const QString&amp; name);
    QColor(const char *name);
    QColor(const QColor &amp;color);

    bool isValid() const;

    QString name() const;
    void setNamedColor(const QString&amp; name);

    static QStringList colorNames();

    inline Spec spec() const
    { return cspec; }

    int alpha() const;
    void setAlpha(int alpha);

    qreal alphaF() const;
    void setAlphaF(qreal alpha);

    int red() const;
    int green() const;
    int blue() const;
    void setRed(int red);
    void setGreen(int green);
    void setBlue(int blue);

    qreal redF() const;
    qreal greenF() const;
    qreal blueF() const;
    void setRedF(qreal red);
    void setGreenF(qreal green);
    void setBlueF(qreal blue);

    void getRgb(int *r, int *g, int *b, int *a = 0) const;
    void setRgb(int r, int g, int b, int a = 255);

    void getRgbF(qreal *r, qreal *g, qreal *b, qreal *a = 0) const;
    void setRgbF(qreal r, qreal g, qreal b, qreal a = 1.0);

    QRgb rgba() const;
    void setRgba(QRgb rgba);

    QRgb rgb() const;
    void setRgb(QRgb rgb);

    int hue() const; // 0 &lt;= hue &lt; 360
    int saturation() const;
    int value() const;

    qreal hueF() const; // 0.0 &lt;= hueF &lt; 360.0
    qreal saturationF() const;
    qreal valueF() const;

    void getHsv(int *h, int *s, int *v, int *a = 0) const;
    void setHsv(int h, int s, int v, int a = 255);

    void getHsvF(qreal *h, qreal *s, qreal *v, qreal *a = 0) const;
    void setHsvF(qreal h, qreal s, qreal v, qreal a = 1.0);

    int cyan() const;
    int magenta() const;
    int yellow() const;
    int black() const;

    qreal cyanF() const;
    qreal magentaF() const;
    qreal yellowF() const;
    qreal blackF() const;

    void getCmyk(int *c, int *m, int *y, int *k, int *a = 0);
    void setCmyk(int c, int m, int y, int k, int a = 255);

    void getCmykF(qreal *c, qreal *m, qreal *y, qreal *k, qreal *a = 0);
    void setCmykF(qreal c, qreal m, qreal y, qreal k, qreal a = 1.0);

    QColor toRgb() const;
    QColor toHsv() const;
    QColor toCmyk() const;

    QColor convertTo(Spec colorSpec) const;

    static QColor fromRgb(QRgb rgb);
    static QColor fromRgba(QRgb rgba);

    static QColor fromRgb(int r, int g, int b, int a = 255);
    static QColor fromRgbF(qreal r, qreal g, qreal b, qreal a = 1.0);

    static QColor fromHsv(int h, int s, int v, int a = 255);
    static QColor fromHsvF(qreal h, qreal s, qreal v, qreal a = 1.0);

    static QColor fromCmyk(int c, int m, int y, int k, int a = 255);
    static QColor fromCmykF(qreal c, qreal m, qreal y, qreal k, qreal a = 1.0);

    QColor light(int f = 150) const;
    QColor dark(int f = 200) const;

    QColor &amp;operator=(const QColor &amp;);
    QColor &amp;operator=(Qt::GlobalColor color);

    bool operator==(const QColor &amp;c) const;
    bool operator!=(const QColor &amp;c) const;

    operator QVariant() const;

#ifdef QT3_SUPPORT
    inline QT3_SUPPORT_CONSTRUCTOR QColor(int x, int y, int z, Spec colorSpec)
    { if (colorSpec == Hsv) setHsv(x, y, z); else setRgb(x, y, z); }

    inline QT3_SUPPORT void rgb(int *r, int *g, int *b) const
    { getRgb(r, g, b); }
    inline QT3_SUPPORT void hsv(int *h, int *s, int *v) const
    { getHsv(h, s, v); }

    inline QT3_SUPPORT void setRgba(int r, int g, int b, int a)
    { setRgb(r, g, b, a); }
    inline QT3_SUPPORT void getRgba(int *r, int *g, int *b, int *a) const
    { getRgb(r, g, b, a); }

    QT3_SUPPORT uint pixel(int screen = -1) const;
#endif

private:
#ifndef QT3_SUPPORT
    // do not allow a spec to be used as an alpha value
    QColor(int, int, int, Spec);
#endif

    void invalidate();

    Spec cspec;
    union {
        struct {
            ushort alpha;
            ushort red;
            ushort green;
            ushort blue;
            ushort pad;
        } argb;
        struct {
            ushort alpha;
            ushort hue;
            ushort saturation;
            ushort value;
            ushort pad;
        } ahsv;
        struct {
            ushort alpha;
            ushort cyan;
            ushort magenta;
            ushort yellow;
            ushort black;
        } acmyk;
    } ct;

    friend class QColormap;
#ifndef QT_NO_DATASTREAM
    friend Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QColor &amp;);
    friend Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QColor &amp;);
#endif
};

inline QColor::QColor()
{ invalidate(); }

inline QColor::QColor(int r, int g, int b, int a)
{ setRgb(r, g, b, a); }

inline QColor::QColor(const char *aname)
{ setNamedColor(QLatin1String(aname)); }

inline QColor::QColor(const QString&amp; aname)
{ setNamedColor(aname); }

inline QColor::QColor(const QColor &amp;acolor)
    : cspec(acolor.cspec)
{ ct.argb = acolor.ct.argb; }

inline bool QColor::isValid() const
{ return cspec != Invalid; }

#endif // QCOLOR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcolordialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QCOLORDIALOG_H
#define QCOLORDIALOG_H

#include &lt;QtGui/qdialog.h>

QT_MODULE(Gui)

#ifndef QT_NO_COLORDIALOG

class QColorDialogPrivate;

class Q_GUI_EXPORT QColorDialog : public QDialog
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QColorDialog)

public:
    static QColor getColor(const QColor&amp; init = Qt::white, QWidget* parent=0);
    static QRgb getRgba(QRgb, bool* ok = 0, QWidget* parent=0);

    static int customCount();
    static QRgb customColor(int);
    static void setCustomColor(int, QRgb);
    static void setStandardColor(int, QRgb);

#ifdef QT3_SUPPORT
    static QColor getColor(const QColor&amp; init, QWidget* parent, const char* name)
        { Q_UNUSED(name); return getColor(init, parent); }
    static QRgb getRgba(QRgb rgba, bool* ok, QWidget* parent, const char* name)
        { Q_UNUSED(name); return getRgba(rgba, ok, parent); }
#endif

private:
    ~QColorDialog();
    explicit QColorDialog(QWidget* parent=0, bool modal=false);

    void setColor(const QColor&amp;);
    QColor color() const;

    bool selectColor(const QColor&amp;);

    void setSelectedAlpha(int);
    int selectedAlpha() const;

    void showCustom(bool=true);

private:
    Q_DISABLE_COPY(QColorDialog)

    Q_PRIVATE_SLOT(d_func(), void addCustom())

    Q_PRIVATE_SLOT(d_func(), void newHsv(int h, int s, int v))
    Q_PRIVATE_SLOT(d_func(), void newColorTypedIn(QRgb rgb))
    Q_PRIVATE_SLOT(d_func(), void newCustom(int, int))
    Q_PRIVATE_SLOT(d_func(), void newStandard(int, int))

    friend class QColorShower;
};

#endif // QT_NO_COLORDIALOG

#endif // QCOLORDIALOG_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcolormap.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QCOLORMAP_H
#define QCOLORMAP_H

#include &lt;QtCore/qatomic.h>
#include &lt;QtGui/qrgb.h>
#include &lt;QtCore/qvector.h>
#include &lt;QtGui/qwindowdefs.h>

QT_MODULE(Gui)

class QColor;
class QColormapPrivate;

class Q_GUI_EXPORT QColormap
{
public:
    enum Mode { Direct, Indexed, Gray };

    static void initialize();
    static void cleanup();

    static QColormap instance(int screen = -1);

    QColormap(const QColormap &amp;colormap);
    ~QColormap();

    // QColormap &amp;operator=(const QColormap &amp;colormap);

    Mode mode() const;

    int depth() const;
    int size() const;

    uint pixel(const QColor &amp;color) const;
    const QColor colorAt(uint pixel) const;

    const QVector&lt;QColor> colormap() const;

#ifdef Q_WS_WIN
    static HPALETTE hPal();
#endif

private:
    QColormap();
    QColormapPrivate *d;
};

#endif // QCOLORMAP_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcombobox.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QCOMBOBOX_H
#define QCOMBOBOX_H

#include &lt;QtGui/qwidget.h>
#include &lt;QtGui/qabstractitemdelegate.h>
#include &lt;QtCore/qabstractitemmodel.h>
#include &lt;QtCore/qvariant.h>

QT_MODULE(Gui)

#ifndef QT_NO_COMBOBOX

class QAbstractItemView;
class QLineEdit;
class QComboBoxPrivate;

class Q_GUI_EXPORT QComboBox : public QWidget
{
    Q_OBJECT

    Q_ENUMS(InsertPolicy)
    Q_ENUMS(SizeAdjustPolicy)
    Q_PROPERTY(bool editable READ isEditable WRITE setEditable)
    Q_PROPERTY(int count READ count)
    Q_PROPERTY(QString currentText READ currentText)
    Q_PROPERTY(int currentIndex READ currentIndex WRITE setCurrentIndex NOTIFY currentIndexChanged USER true)
    Q_PROPERTY(int maxVisibleItems READ maxVisibleItems WRITE setMaxVisibleItems)
    Q_PROPERTY(int maxCount READ maxCount WRITE setMaxCount)
    Q_PROPERTY(InsertPolicy insertPolicy READ insertPolicy WRITE setInsertPolicy)
    Q_PROPERTY(SizeAdjustPolicy sizeAdjustPolicy READ sizeAdjustPolicy WRITE setSizeAdjustPolicy)
    Q_PROPERTY(int minimumContentsLength READ minimumContentsLength WRITE setMinimumContentsLength)
    Q_PROPERTY(QSize iconSize READ iconSize WRITE setIconSize)
    Q_PROPERTY(bool autoCompletion READ autoCompletion WRITE setAutoCompletion)
    Q_PROPERTY(Qt::CaseSensitivity autoCompletionCaseSensitivity READ autoCompletionCaseSensitivity WRITE setAutoCompletionCaseSensitivity)
    Q_PROPERTY(bool duplicatesEnabled READ duplicatesEnabled WRITE setDuplicatesEnabled)
    Q_PROPERTY(bool frame READ hasFrame WRITE setFrame)
    Q_PROPERTY(bool modelColumn READ modelColumn WRITE setModelColumn)

public:
    explicit QComboBox(QWidget *parent = 0);
    ~QComboBox();

    int maxVisibleItems() const;
    void setMaxVisibleItems(int maxItems);

    int count() const;
    void setMaxCount(int max);
    int maxCount() const;

    bool autoCompletion() const;
    void setAutoCompletion(bool enable);

    Qt::CaseSensitivity autoCompletionCaseSensitivity() const;
    void setAutoCompletionCaseSensitivity(Qt::CaseSensitivity sensitivity);

    bool duplicatesEnabled() const;
    void setDuplicatesEnabled(bool enable);

    void setFrame(bool);
    bool hasFrame() const;

    inline int findText(const QString &amp;text,
                        Qt::MatchFlags flags = Qt::MatchExactly|Qt::MatchCaseSensitive) const
        { return findData(text, Qt::EditRole, flags); }
    int findData(const QVariant &amp;data, int role = Qt::UserRole,
                 Qt::MatchFlags flags = Qt::MatchExactly|Qt::MatchCaseSensitive) const;

    enum InsertPolicy {
        NoInsert,
        InsertAtTop,
        InsertAtCurrent,
        InsertAtBottom,
        InsertAfterCurrent,
        InsertBeforeCurrent
#if defined(QT3_SUPPORT) &amp;&amp; !defined(Q_MOC_RUN)
        ,
        NoInsertion = NoInsert,
        AtTop = InsertAtTop,
        AtCurrent = InsertAtCurrent,
        AtBottom = InsertAtBottom,
        AfterCurrent = InsertAfterCurrent,
        BeforeCurrent = InsertBeforeCurrent
#endif
    };
#ifdef QT3_SUPPORT
    typedef InsertPolicy Policy;
#endif

    InsertPolicy insertPolicy() const;
    void setInsertPolicy(InsertPolicy policy);

    enum SizeAdjustPolicy {
        AdjustToContents,
        AdjustToContentsOnFirstShow,
        AdjustToMinimumContentsLength
    };

    SizeAdjustPolicy sizeAdjustPolicy() const;
    void setSizeAdjustPolicy(SizeAdjustPolicy policy);
    int minimumContentsLength() const;
    void setMinimumContentsLength(int characters);
    QSize iconSize() const;
    void setIconSize(const QSize &amp;size);

    bool isEditable() const;
    void setEditable(bool editable);
    void setLineEdit(QLineEdit *edit);
    QLineEdit *lineEdit() const;
#ifndef QT_NO_VALIDATOR
    void setValidator(const QValidator *v);
    const QValidator *validator() const;
#endif

    QAbstractItemDelegate *itemDelegate() const;
    void setItemDelegate(QAbstractItemDelegate *delegate);

    QAbstractItemModel *model() const;
    void setModel(QAbstractItemModel *model);

    QModelIndex rootModelIndex() const;
    void setRootModelIndex(const QModelIndex &amp;index);

    int modelColumn() const;
    void setModelColumn(int visibleColumn);

    int currentIndex() const;

    QString currentText() const;

    QString itemText(int index) const;
    QIcon itemIcon(int index) const;
    QVariant itemData(int index, int role = Qt::UserRole) const;

    inline void addItem(const QString &amp;text, const QVariant &amp;userData = QVariant());
    inline void addItem(const QIcon &amp;icon, const QString &amp;text,
                        const QVariant &amp;userData = QVariant());
    inline void addItems(const QStringList &amp;texts)
        { insertItems(count(), texts); }

    inline void insertItem(int index, const QString &amp;text, const QVariant &amp;userData = QVariant());
    void insertItem(int index, const QIcon &amp;icon, const QString &amp;text,
                    const QVariant &amp;userData = QVariant());
    void insertItems(int index, const QStringList &amp;texts);

    void removeItem(int index);

    void setItemText(int index, const QString &amp;text);
    void setItemIcon(int index, const QIcon &amp;icon);
    void setItemData(int index, const QVariant &amp;value, int role = Qt::UserRole);

    QAbstractItemView *view() const;
    void setView(QAbstractItemView *itemView);

    QSize sizeHint() const;
    QSize minimumSizeHint() const;

    virtual void showPopup();
    virtual void hidePopup();

    bool event(QEvent *event);

public Q_SLOTS:
    void clear();
    void clearEditText();
    void setEditText(const QString &amp;text);
    void setCurrentIndex(int index);

Q_SIGNALS:
    void editTextChanged(const QString &amp;);
    void activated(int index);
    void activated(const QString &amp;);
    void highlighted(int index);
    void highlighted(const QString &amp;);
    void currentIndexChanged(int index);
    void currentIndexChanged(const QString &amp;);

protected:
    void focusInEvent(QFocusEvent *e);
    void focusOutEvent(QFocusEvent *e);
    void changeEvent(QEvent *e);
    void resizeEvent(QResizeEvent *e);
    void paintEvent(QPaintEvent *e);
    void showEvent(QShowEvent *e);
    void hideEvent(QHideEvent *e);
    void mousePressEvent(QMouseEvent *e);
    void mouseReleaseEvent(QMouseEvent *e);
    void keyPressEvent(QKeyEvent *e);
    void keyReleaseEvent(QKeyEvent *e);
    void wheelEvent(QWheelEvent *e);
    void contextMenuEvent(QContextMenuEvent *e);
    void inputMethodEvent(QInputMethodEvent *);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QComboBox(QWidget *parent, const char *name);
    QT3_SUPPORT_CONSTRUCTOR QComboBox(bool rw, QWidget *parent, const char *name = 0);
    inline QT3_SUPPORT int currentItem() const { return currentIndex(); }
    inline QT3_SUPPORT void setCurrentItem(int index) { setCurrentIndex(index); }
    inline QT3_SUPPORT InsertPolicy insertionPolicy() const { return insertPolicy(); }
    inline QT3_SUPPORT void setInsertionPolicy(InsertPolicy policy) { setInsertPolicy(policy); }
    inline QT3_SUPPORT bool editable() const { return isEditable(); }
    inline QT3_SUPPORT void popup() { showPopup(); }
    inline QT3_SUPPORT void setCurrentText(const QString&amp; text) {
        int i = findText(text);
        if (i != -1)
            setCurrentIndex(i);
        else if (isEditable())
            setEditText(text);
        else
            setItemText(currentIndex(), text);
    }
    inline QT3_SUPPORT QString text(int index) const { return itemText(index); }

    inline QT3_SUPPORT QPixmap pixmap(int index) const
    { return itemIcon(index).pixmap(iconSize(), isEnabled() ? QIcon::Normal : QIcon::Disabled); }
    inline QT3_SUPPORT void insertStringList(const QStringList &amp;list, int index = -1)
        { insertItems((index &lt; 0 ? count() : index), list); }
    inline QT3_SUPPORT void insertItem(const QString &amp;text, int index = -1)
        { insertItem((index &lt; 0 ? count() : index), text); }
    inline QT3_SUPPORT void insertItem(const QPixmap &amp;pix, int index = -1)
        { insertItem((index &lt; 0 ? count() : index), QIcon(pix), QString()); }
    inline QT3_SUPPORT void insertItem(const QPixmap &amp;pix, const QString &amp;text, int index = -1)
        { insertItem((index &lt; 0 ? count() : index), QIcon(pix), text); }
    inline QT3_SUPPORT void changeItem(const QString &amp;text, int index)
        { setItemText(index, text); }
    inline QT3_SUPPORT void changeItem(const QPixmap &amp;pix, int index)
        { setItemIcon(index, QIcon(pix)); }
    inline QT3_SUPPORT void changeItem(const QPixmap &amp;pix, const QString &amp;text, int index)
        { setItemIcon(index, QIcon(pix)); setItemText(index, text); }
    inline QT3_SUPPORT void clearValidator() { setValidator(0); }
    inline QT3_SUPPORT void clearEdit() { clearEditText(); }

Q_SIGNALS:
    QT_MOC_COMPAT void textChanged(const QString &amp;);
#endif

private:
    Q_DECLARE_PRIVATE(QComboBox)
    Q_DISABLE_COPY(QComboBox)
    Q_PRIVATE_SLOT(d_func(), void itemSelected(const QModelIndex &amp;item))
    Q_PRIVATE_SLOT(d_func(), void emitHighlighted(const QModelIndex &amp;))
    Q_PRIVATE_SLOT(d_func(), void emitCurrentIndexChanged(int index))
    Q_PRIVATE_SLOT(d_func(), void returnPressed())
    Q_PRIVATE_SLOT(d_func(), void complete())
    Q_PRIVATE_SLOT(d_func(), void resetButton())
    Q_PRIVATE_SLOT(d_func(), void dataChanged(const QModelIndex &amp;, const QModelIndex &amp;))
    Q_PRIVATE_SLOT(d_func(), void rowsAboutToBeInserted(const QModelIndex &amp; parent, int start, int end))
    Q_PRIVATE_SLOT(d_func(), void rowsInserted(const QModelIndex &amp; parent, int start, int end))
    Q_PRIVATE_SLOT(d_func(), void rowsAboutToBeRemoved(const QModelIndex &amp; parent, int start, int end))
    Q_PRIVATE_SLOT(d_func(), void rowsRemoved(const QModelIndex &amp; parent, int start, int end))
    Q_PRIVATE_SLOT(d_func(), void modelDestroyed())
};

inline void QComboBox::addItem(const QString &amp;atext, const QVariant &amp;auserData)
{ insertItem(count(), atext, auserData); }
inline void QComboBox::addItem(const QIcon &amp;aicon, const QString &amp;atext,
                               const QVariant &amp;auserData)
{ insertItem(count(), aicon, atext, auserData); }

inline void QComboBox::insertItem(int aindex, const QString &amp;atext,
                                  const QVariant &amp;auserData)
{ insertItem(aindex, QIcon(), atext, auserData); }

#endif // QT_NO_COMBOBOX

#endif // QCOMBOBOX_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcommonstyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QCOMMONSTYLE_H
#define QCOMMONSTYLE_H

#include &lt;QtGui/qstyle.h>

class QCommonStylePrivate;

QT_MODULE(Gui)

class Q_GUI_EXPORT QCommonStyle: public QStyle
{
    Q_OBJECT
    
public:
    QCommonStyle();
    ~QCommonStyle();

    void drawPrimitive(PrimitiveElement pe, const QStyleOption *opt, QPainter *p,
                       const QWidget *w = 0) const;
    void drawControl(ControlElement element, const QStyleOption *opt, QPainter *p,
                     const QWidget *w = 0) const;
    QRect subElementRect(SubElement r, const QStyleOption *opt, const QWidget *widget = 0) const;
    void drawComplexControl(ComplexControl cc, const QStyleOptionComplex *opt, QPainter *p,
                            const QWidget *w = 0) const;
    SubControl hitTestComplexControl(ComplexControl cc, const QStyleOptionComplex *opt,
                                     const QPoint &amp;pt, const QWidget *w = 0) const;
    QRect subControlRect(ComplexControl cc, const QStyleOptionComplex *opt, SubControl sc,
                         const QWidget *w = 0) const;
    QSize sizeFromContents(ContentsType ct, const QStyleOption *opt,
                           const QSize &amp;contentsSize, const QWidget *widget = 0) const;

    int pixelMetric(PixelMetric m, const QStyleOption *opt = 0, const QWidget *widget = 0) const;

    int styleHint(StyleHint sh, const QStyleOption *opt = 0, const QWidget *w = 0,
                  QStyleHintReturn *shret = 0) const;

    QPixmap standardPixmap(StandardPixmap sp, const QStyleOption *opt = 0,
                           const QWidget *widget = 0) const;

    QPixmap generatedIconPixmap(QIcon::Mode iconMode, const QPixmap &amp;pixmap,
                                const QStyleOption *opt) const;
protected:
    QCommonStyle(QCommonStylePrivate &amp;dd);
    
private:
    Q_DECLARE_PRIVATE(QCommonStyle)
    Q_DISABLE_COPY(QCommonStyle)
};

#endif // QCOMMONSTYLE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qcursor.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QCURSOR_H
#define QCURSOR_H

#include &lt;QtCore/qpoint.h>
#include &lt;QtGui/qwindowdefs.h>

QT_MODULE(Gui)

class QVariant;

/*
  ### The fake cursor has to go first with old qdoc.
*/
#ifdef QT_NO_CURSOR

class Q_GUI_EXPORT QCursor
{
public:
    static QPoint pos();
    static void setPos(int x, int y);
    inline static void setPos(const QPoint &amp;p) { setPos(p.x(), p.y()); }
private:
    QCursor();
};

#endif // QT_NO_CURSOR

#ifndef QT_NO_CURSOR

struct QCursorData;
class QBitmap;
class QPixmap;

#if defined(Q_WS_MAC)
void qt_mac_set_cursor(const QCursor *c, const QPoint &amp;p);
#endif

class Q_GUI_EXPORT QCursor
{
public:
    QCursor();
    QCursor(Qt::CursorShape shape);
    QCursor(const QBitmap &amp;bitmap, const QBitmap &amp;mask, int hotX=-1, int hotY=-1);
    QCursor(const QPixmap &amp;pixmap, int hotX=-1, int hotY=-1);
    QCursor(const QCursor &amp;cursor);
    ~QCursor();
    QCursor &amp;operator=(const QCursor &amp;cursor);
    operator QVariant() const;

    Qt::CursorShape shape() const;
    void setShape(Qt::CursorShape newShape);

    const QBitmap *bitmap() const;
    const QBitmap *mask() const;
    QPixmap pixmap() const;
    QPoint hotSpot() const;

    static QPoint pos();
    static void setPos(int x, int y);
    inline static void setPos(const QPoint &amp;p) { setPos(p.x(), p.y()); }

#if defined(qdoc)
    HCURSOR_or_HANDLE handle() const;
    QCursor(HCURSOR cursor);
    QCursor(Qt::HANDLE cursor);
#elif defined(Q_WS_WIN)
    HCURSOR handle() const;
    QCursor(HCURSOR cursor);
#elif defined(Q_WS_X11)
    Qt::HANDLE handle() const;
    QCursor(Qt::HANDLE cursor);
    static int x11Screen();
#elif defined(Q_WS_MAC)
    Qt::HANDLE handle() const;
#elif defined(Q_WS_QWS)
    int handle() const;
#endif
private:
    QCursorData *d;
#if defined(Q_WS_MAC)
    friend void qt_mac_set_cursor(const QCursor *c, const QPoint &amp;p);
#endif
};

#ifdef QT3_SUPPORT
// CursorShape is defined in X11/X.h
#ifdef CursorShape
#define X_CursorShape CursorShape
#undef CursorShape
#endif
typedef Qt::CursorShape QCursorShape;
#ifdef X_CursorShape
#define CursorShape X_CursorShape
#endif
#endif

/*****************************************************************************
  QCursor stream functions
 *****************************************************************************/
#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;outS, const QCursor &amp;cursor);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;inS, QCursor &amp;cursor);
#endif
#endif // QT_NO_CURSOR

#endif // QCURSOR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdatetimeedit.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QDATETIMEEDIT_H
#define QDATETIMEEDIT_H

#include &lt;QtCore/qdatetime.h>
#include &lt;QtGui/qabstractspinbox.h>

QT_MODULE(Gui)

#ifndef QT_NO_DATETIMEEDIT

class QDateTimeEditPrivate;
class Q_GUI_EXPORT QDateTimeEdit : public QAbstractSpinBox
{
    Q_OBJECT

    Q_ENUMS(Section)
    Q_FLAGS(Sections)
    Q_PROPERTY(QDateTime dateTime READ dateTime WRITE setDateTime NOTIFY dateTimeChanged USER true)
    Q_PROPERTY(QDate date READ date WRITE setDate NOTIFY dateChanged)
    Q_PROPERTY(QTime time READ time WRITE setTime NOTIFY timeChangedu)
    Q_PROPERTY(QDate maximumDate READ maximumDate WRITE setMaximumDate RESET clearMaximumDate)
    Q_PROPERTY(QDate minimumDate READ minimumDate WRITE setMinimumDate RESET clearMinimumDate)
    Q_PROPERTY(QTime maximumTime READ maximumTime WRITE setMaximumTime RESET clearMaximumTime)
    Q_PROPERTY(QTime minimumTime READ minimumTime WRITE setMinimumTime RESET clearMinimumTime)
    Q_PROPERTY(Section currentSection READ currentSection WRITE setCurrentSection)
    Q_PROPERTY(Sections displayedSections READ displayedSections)
    Q_PROPERTY(QString displayFormat READ displayFormat WRITE setDisplayFormat)

public:
    enum Section {
        NoSection = 0x0000,
        AmPmSection = 0x0001,
        MSecSection = 0x0002,
        SecondSection = 0x0004,
        MinuteSection = 0x0008,
        HourSection   = 0x0010,
        DaySection    = 0x0100,
        MonthSection  = 0x0200,
        YearSection   = 0x0400,
        TimeSections_Mask = AmPmSection|MSecSection|SecondSection|MinuteSection|HourSection,
        DateSections_Mask = DaySection|MonthSection|YearSection
    };

    Q_DECLARE_FLAGS(Sections, Section)

    explicit QDateTimeEdit(QWidget *parent = 0);
    explicit QDateTimeEdit(const QDateTime &amp;dt, QWidget *parent = 0);
    explicit QDateTimeEdit(const QDate &amp;d, QWidget *parent = 0);
    explicit QDateTimeEdit(const QTime &amp;t, QWidget *parent = 0);

    QDateTime dateTime() const;
    QDate date() const;
    QTime time() const;

    QDate minimumDate() const;
    void setMinimumDate(const QDate &amp;min);
    void clearMinimumDate();

    QDate maximumDate() const;
    void setMaximumDate(const QDate &amp;max);
    void clearMaximumDate();

    void setDateRange(const QDate &amp;min, const QDate &amp;max);

    QTime minimumTime() const;
    void setMinimumTime(const QTime &amp;min);
    void clearMinimumTime();

    QTime maximumTime() const;
    void setMaximumTime(const QTime &amp;max);
    void clearMaximumTime();

    void setTimeRange(const QTime &amp;min, const QTime &amp;max);

    Sections displayedSections() const;
    Section currentSection() const;
    void setCurrentSection(Section section);

    QString sectionText(Section s) const;

    QString displayFormat() const;
    void setDisplayFormat(const QString &amp;format);

    QSize sizeHint() const;

    virtual void clear();
    virtual void stepBy(int steps);

    bool event(QEvent *e);
Q_SIGNALS:
    void dateTimeChanged(const QDateTime &amp;date);
    void timeChanged(const QTime &amp;date);
    void dateChanged(const QDate &amp;date);

public Q_SLOTS:
    void setDateTime(const QDateTime &amp;dateTime);
    void setDate(const QDate &amp;date);
    void setTime(const QTime &amp;time);

protected:
    virtual void keyPressEvent(QKeyEvent *e);
#ifndef QT_NO_WHEELEVENT
    virtual void wheelEvent(QWheelEvent *e);
#endif
    virtual void focusInEvent(QFocusEvent *e);
    virtual bool focusNextPrevChild(bool next);
    virtual QValidator::State validate(QString &amp;input, int &amp;pos) const;
    virtual void fixup(QString &amp;input) const;

    virtual QDateTime dateTimeFromText(const QString &amp;text) const;
    virtual QString textFromDateTime(const QDateTime &amp;dt) const;
    virtual StepEnabled stepEnabled() const;

private:
    Q_DECLARE_PRIVATE(QDateTimeEdit)
    Q_DISABLE_COPY(QDateTimeEdit)
};

class Q_GUI_EXPORT QTimeEdit : public QDateTimeEdit
{
    Q_OBJECT
public:
    QTimeEdit(QWidget *parent = 0);
    QTimeEdit(const QTime &amp;t, QWidget *parent = 0);
};

class Q_GUI_EXPORT QDateEdit : public QDateTimeEdit
{
    Q_OBJECT
public:
    QDateEdit(QWidget *parent = 0);
    QDateEdit(const QDate &amp;t, QWidget *parent = 0);
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QDateTimeEdit::Sections)

#endif // QT_NO_DATETIMEEDIT

#endif // QDATETIMEEDIT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdesktopwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QDESKTOPWIDGET_H
#define QDESKTOPWIDGET_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

class QApplication;
class QDesktopWidgetPrivate;

class Q_GUI_EXPORT QDesktopWidget : public QWidget
{
    Q_OBJECT
public:
    QDesktopWidget();
    ~QDesktopWidget();

    bool isVirtualDesktop() const;

    int numScreens() const;
    int primaryScreen() const;

    int screenNumber(const QWidget *widget = 0) const;
    int screenNumber(const QPoint &amp;) const;

    QWidget *screen(int screen = -1);

    const QRect screenGeometry(int screen = -1) const;
    const QRect screenGeometry(const QWidget *widget) const
    { return screenGeometry(screenNumber(widget)); }
    const QRect screenGeometry(const QPoint &amp;point) const
    { return screenGeometry(screenNumber(point)); }

    const QRect availableGeometry(int screen = -1) const;
    const QRect availableGeometry(const QWidget *widget) const
    { return availableGeometry(screenNumber(widget)); }
    const QRect availableGeometry(const QPoint &amp;point) const
    { return availableGeometry(screenNumber(point)); }

Q_SIGNALS:
    void resized(int);
    void workAreaResized(int);

protected:
    void resizeEvent(QResizeEvent *e);

private:
    Q_DISABLE_COPY(QDesktopWidget)
    Q_DECLARE_PRIVATE(QDesktopWidget)

    friend class QApplication;
#ifdef Q_WS_QWS
    friend class QWSDisplay;
#endif
};

#endif // QDESKTOPWIDGET_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdial.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/


#ifndef QDIAL_H
#define QDIAL_H

#include &lt;QtGui/qabstractslider.h>

QT_MODULE(Gui)

#ifndef QT_NO_DIAL

class QDialPrivate;

class Q_GUI_EXPORT QDial: public QAbstractSlider
{
    Q_OBJECT

    Q_PROPERTY(bool wrapping READ wrapping WRITE setWrapping)
    Q_PROPERTY(int notchSize READ notchSize)
    Q_PROPERTY(qreal notchTarget READ notchTarget WRITE setNotchTarget)
    Q_PROPERTY(bool notchesVisible READ notchesVisible WRITE setNotchesVisible)
public:
    explicit QDial(QWidget *parent = 0);

    ~QDial();

    bool wrapping() const;

    int notchSize() const;

    void setNotchTarget(double target);
    qreal notchTarget() const;
    bool notchesVisible() const;

    QSize sizeHint() const;
    QSize minimumSizeHint() const;

public Q_SLOTS:
    void setNotchesVisible(bool visible);
    void setWrapping(bool on);

protected:
    bool event(QEvent *e);
    void resizeEvent(QResizeEvent *re);
    void paintEvent(QPaintEvent *pe);

    void mousePressEvent(QMouseEvent *me);
    void mouseReleaseEvent(QMouseEvent *me);
    void mouseMoveEvent(QMouseEvent *me);

    void sliderChange(SliderChange change);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QDial(int minValue, int maxValue, int pageStep, int value,
                                QWidget* parent = 0, const char* name = 0);
    QT3_SUPPORT_CONSTRUCTOR QDial(QWidget *parent, const char *name);

Q_SIGNALS:
    QT_MOC_COMPAT void dialPressed();
    QT_MOC_COMPAT void dialMoved(int value);
    QT_MOC_COMPAT void dialReleased();
#endif

private:
    Q_DECLARE_PRIVATE(QDial)
    Q_DISABLE_COPY(QDial)
};

#endif  // QT_NO_DIAL

#endif // QDIAL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QDIALOG_H
#define QDIALOG_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

class QPushButton;
class QDialogPrivate;

class Q_GUI_EXPORT QDialog : public QWidget
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QDialog)
    friend class QPushButton;

    Q_PROPERTY(bool sizeGripEnabled READ isSizeGripEnabled WRITE setSizeGripEnabled)
    Q_PROPERTY(bool modal READ isModal WRITE setModal)

public:
    explicit QDialog(QWidget *parent = 0, Qt::WFlags f = 0);
#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QDialog(QWidget *parent, const char *name, bool modal = false,
                                  Qt::WFlags f = 0);
#endif
    ~QDialog();

    enum DialogCode { Rejected, Accepted };

    int result() const;

    void setVisible(bool visible);

    void setOrientation(Qt::Orientation orientation);
    Qt::Orientation orientation() const;

    void setExtension(QWidget* extension);
    QWidget* extension() const;

    QSize sizeHint() const;
    QSize minimumSizeHint() const;

    void setSizeGripEnabled(bool);
    bool isSizeGripEnabled() const;

    void setModal(bool modal);
#ifdef Q_OS_TEMP
    bool event(QEvent *);
#endif

    void setResult(int r);

Q_SIGNALS:
    void finished(int result);
    void accepted();
    void rejected();

public Q_SLOTS:
    int exec();
    virtual void done(int);
    virtual void accept();
    virtual void reject();

    void showExtension(bool);

protected:
    QDialog(QDialogPrivate &amp;, QWidget *parent, Qt::WFlags f = 0);

    void keyPressEvent(QKeyEvent *);
    void closeEvent(QCloseEvent *);
    void showEvent(QShowEvent *);
    void resizeEvent(QResizeEvent *);
    void contextMenuEvent(QContextMenuEvent *);
    bool eventFilter(QObject *, QEvent *);
    void adjustPosition(QWidget*);

private:
    Q_DISABLE_COPY(QDialog)
};

#endif // QDIALOG_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdirmodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QDIRMODEL_H
#define QDIRMODEL_H

#include &lt;QtCore/qabstractitemmodel.h>
#include &lt;QtCore/qdir.h>
#include &lt;QtCore/qfileinfo.h>
#include &lt;QtGui/qicon.h>

QT_MODULE(Gui)

#ifndef QT_NO_DIRMODEL

class QDirModelPrivate;
class QFileIconProviderPrivate;

class Q_GUI_EXPORT QFileIconProvider
{
public:
    QFileIconProvider();
    virtual ~QFileIconProvider();
    enum IconType { Computer, Desktop, Trashcan, Network, Drive, Folder, File };
    virtual QIcon icon(IconType type) const;
    virtual QIcon icon(const QFileInfo &amp;info) const;
    virtual QString type(const QFileInfo &amp;info) const;

private:
    Q_DECLARE_PRIVATE(QFileIconProvider)
    QFileIconProviderPrivate *d_ptr;
};

class Q_GUI_EXPORT QDirModel : public QAbstractItemModel
{
    Q_OBJECT
    Q_PROPERTY(bool resolveSymlinks READ resolveSymlinks WRITE setResolveSymlinks)
    Q_PROPERTY(bool readOnly READ isReadOnly WRITE setReadOnly)
    Q_PROPERTY(bool lazyChildCount READ lazyChildCount WRITE setLazyChildCount)
//    Q_PROPERTY(bool ignoreHidden READ ignoreHidden WRITE setIgnoreHidden)

public:
    enum Roles {
        FileIconRole = Qt::DecorationRole,
        FilePathRole = Qt::UserRole + 1,
        FileNameRole
    };

    QDirModel(const QStringList &amp;nameFilters, QDir::Filters filters,
              QDir::SortFlags sort, QObject *parent = 0);
    explicit QDirModel(QObject *parent = 0);
    ~QDirModel();

    QModelIndex index(int row, int column, const QModelIndex &amp;parent = QModelIndex()) const;
    QModelIndex parent(const QModelIndex &amp;child) const;

    int rowCount(const QModelIndex &amp;parent) const;
    int columnCount(const QModelIndex &amp;parent) const;

    QVariant data(const QModelIndex &amp;index, int role = Qt::DisplayRole) const;
    bool setData(const QModelIndex &amp;index, const QVariant &amp;value, int role);

    QVariant headerData(int section, Qt::Orientation orientation, int role) const;

    bool hasChildren(const QModelIndex &amp;index) const;
    Qt::ItemFlags flags(const QModelIndex &amp;index) const;

    void sort(int column, Qt::SortOrder order);

    QStringList mimeTypes() const;
    QMimeData *mimeData(const QModelIndexList &amp;indexes) const;
    bool dropMimeData(const QMimeData *data, Qt::DropAction action,
                      int row, int column, const QModelIndex &amp;parent);
    Qt::DropActions supportedDropActions() const;

    // QDirModel specific API

    void setIconProvider(QFileIconProvider *provider);
    QFileIconProvider *iconProvider() const;

    void setNameFilters(const QStringList &amp;filters);
    QStringList nameFilters() const;
 
    void setFilter(QDir::Filters filters);
    QDir::Filters filter() const;

    void setSorting(QDir::SortFlags sort);
    QDir::SortFlags sorting() const;

    void setResolveSymlinks(bool enable);
    bool resolveSymlinks() const;

    void setReadOnly(bool enable);
    bool isReadOnly() const;

    void setLazyChildCount(bool enable);
    bool lazyChildCount() const;

    void refresh(const QModelIndex &amp;parent = QModelIndex());
    QModelIndex index(const QString &amp;path, int column = 0) const;

    bool isDir(const QModelIndex &amp;index) const;
    QModelIndex mkdir(const QModelIndex &amp;parent, const QString &amp;name);
    bool rmdir(const QModelIndex &amp;index);
    bool remove(const QModelIndex &amp;index);

    QString filePath(const QModelIndex &amp;index) const;
    QString fileName(const QModelIndex &amp;index) const;
    QIcon fileIcon(const QModelIndex &amp;index) const;
    QFileInfo fileInfo(const QModelIndex &amp;index) const;

#ifdef Q_NO_USING_KEYWORD
    inline QObject *parent() const { return QObject::parent(); }
#else
    using QObject::parent;
#endif

protected:
    QDirModel(QDirModelPrivate &amp;, QObject *parent = 0);

private:
    Q_DECLARE_PRIVATE(QDirModel)
    Q_DISABLE_COPY(QDirModel)
};

#endif // QT_NO_DIRMODEL

#endif // QDIRMODEL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdockwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QDOCKWIDGET_H
#define QDOCKWIDGET_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

#ifndef QT_NO_DOCKWIDGET

class QDockWidgetLayout;
class QDockWidgetPrivate;
class QMainWindow;

class Q_GUI_EXPORT QDockWidget : public QWidget
{
    Q_OBJECT

    Q_FLAGS(DockWidgetFeatures)
    Q_PROPERTY(bool floating READ isFloating WRITE setFloating)
    Q_PROPERTY(DockWidgetFeatures features READ features WRITE setFeatures NOTIFY featuresChanged)
    Q_PROPERTY(Qt::DockWidgetAreas allowedAreas READ allowedAreas
               WRITE setAllowedAreas NOTIFY allowedAreasChanged)

public:
    explicit QDockWidget(const QString &amp;title, QWidget *parent = 0, Qt::WFlags flags = 0);
    explicit QDockWidget(QWidget *parent = 0, Qt::WFlags flags = 0);
    ~QDockWidget();

    QWidget *widget() const;
    void setWidget(QWidget *widget);

    enum DockWidgetFeature {
        DockWidgetClosable    = 0x01,
        DockWidgetMovable     = 0x02,
        DockWidgetFloatable   = 0x04,

        DockWidgetFeatureMask = 0x07,
        AllDockWidgetFeatures = DockWidgetFeatureMask,
        NoDockWidgetFeatures  = 0x00,

        Reserved              = 0xff
    };
    Q_DECLARE_FLAGS(DockWidgetFeatures, DockWidgetFeature)

    void setFeatures(DockWidgetFeatures features);
    DockWidgetFeatures features() const;

    void setFloating(bool floating);
    inline bool isFloating() const { return isWindow(); }

    void setAllowedAreas(Qt::DockWidgetAreas areas);
    Qt::DockWidgetAreas allowedAreas() const;

    inline bool isAreaAllowed(Qt::DockWidgetArea area) const
    { return (allowedAreas() &amp; area) == area; }

#ifndef QT_NO_ACTION
    QAction *toggleViewAction() const;
#endif

Q_SIGNALS:
    void featuresChanged(QDockWidget::DockWidgetFeatures features);
    void topLevelChanged(bool topLevel);
    void allowedAreasChanged(Qt::DockWidgetAreas allowedAreas);

protected:
    void changeEvent(QEvent *event);
    void closeEvent(QCloseEvent *event);
    void paintEvent(QPaintEvent *event);
    bool event(QEvent *event);

private:
    Q_DECLARE_PRIVATE(QDockWidget)
    Q_DISABLE_COPY(QDockWidget)
    Q_PRIVATE_SLOT(d_func(), void toggleView(bool))
    Q_PRIVATE_SLOT(d_func(), void toggleTopLevel())
    friend class QDockWidgetLayout;
    friend class QDockWidgetItem;
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QDockWidget::DockWidgetFeatures)

#endif // QT_NO_DOCKWIDGET

#endif // QDOCKWIDGET_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdrag.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QDRAG_H
#define QDRAG_H

#include &lt;QtCore/qobject.h>

QT_MODULE(Gui)

#ifndef QT_NO_DRAGANDDROP
class QMimeData;
class QDragPrivate;
class QWidget;
class QPixmap;
class QPoint;
class QDragManager;

class Q_GUI_EXPORT QDrag : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QDrag)
public:
    explicit QDrag(QWidget *dragSource);
    ~QDrag();

    void setMimeData(QMimeData *data);
    QMimeData *mimeData() const;

    void setPixmap(const QPixmap &amp;);
    QPixmap pixmap() const;

    void setHotSpot(const QPoint &amp;hotspot);
    QPoint hotSpot() const;

    QWidget *source() const;
    QWidget *target() const;

    Qt::DropAction start(Qt::DropActions supportedActions = Qt::CopyAction);

    void setDragCursor(const QPixmap &amp;cursor, Qt::DropAction action);

Q_SIGNALS:
    void actionChanged(Qt::DropAction action);
    void targetChanged(QWidget *newTarget);

private:
#ifdef Q_WS_MAC
    friend class QWidgetPrivate;
#endif
    friend class QDragManager;
    Q_DISABLE_COPY(QDrag)
};

#endif // QT_NO_DRAGANDDROP

#endif // QDRAG_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qdrawutil.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QDRAWUTIL_H
#define QDRAWUTIL_H

#include &lt;QtCore/qnamespace.h>
#include &lt;QtCore/qstring.h> // char*->QString conversion

QT_MODULE(Gui)

class QPainter;
#ifndef QT3_SUPPORT
class QColorGroup;
#endif
class QPalette;
class QPoint;
class QColor;
class QBrush;
class QRect;
class QPixmap;

//
// Standard shade drawing
//

Q_GUI_EXPORT void qDrawShadeLine(QPainter *p, int x1, int y1, int x2, int y2,
                              const QPalette &amp;pal, bool sunken = true,
                              int lineWidth = 1, int midLineWidth = 0);

Q_GUI_EXPORT void qDrawShadeLine(QPainter *p, const QPoint &amp;p1, const QPoint &amp;p2,
                              const QPalette &amp;pal, bool sunken = true,
                              int lineWidth = 1, int midLineWidth = 0);

Q_GUI_EXPORT void qDrawShadeRect(QPainter *p, int x, int y, int w, int h,
                              const QPalette &amp;pal, bool sunken = false,
                              int lineWidth = 1, int midLineWidth = 0,
                              const QBrush *fill = 0);

Q_GUI_EXPORT void qDrawShadeRect(QPainter *p, const QRect &amp;r,
                              const QPalette &amp;pal, bool sunken = false,
                              int lineWidth = 1, int midLineWidth = 0,
                              const QBrush *fill = 0);

Q_GUI_EXPORT void qDrawShadePanel(QPainter *p, int x, int y, int w, int h,
                               const QPalette &amp;pal, bool sunken = false,
                               int lineWidth = 1, const QBrush *fill = 0);

Q_GUI_EXPORT void qDrawShadePanel(QPainter *p, const QRect &amp;r,
                               const QPalette &amp;pal, bool sunken = false,
                               int lineWidth = 1, const QBrush *fill = 0);

Q_GUI_EXPORT void qDrawWinButton(QPainter *p, int x, int y, int w, int h,
                              const QPalette &amp;pal, bool sunken = false,
                              const QBrush *fill = 0);

Q_GUI_EXPORT void qDrawWinButton(QPainter *p, const QRect &amp;r,
                              const QPalette &amp;pal, bool sunken = false,
                              const QBrush *fill = 0);

Q_GUI_EXPORT void qDrawWinPanel(QPainter *p, int x, int y, int w, int h,
                              const QPalette &amp;pal, bool sunken = false,
                             const QBrush *fill = 0);

Q_GUI_EXPORT void qDrawWinPanel(QPainter *p, const QRect &amp;r,
                              const QPalette &amp;pal, bool sunken = false,
                             const QBrush *fill = 0);

Q_GUI_EXPORT void qDrawPlainRect(QPainter *p, int x, int y, int w, int h, const QColor &amp;,
                              int lineWidth = 1, const QBrush *fill = 0);

Q_GUI_EXPORT void qDrawPlainRect(QPainter *p, const QRect &amp;r, const QColor &amp;,
                              int lineWidth = 1, const QBrush *fill = 0);


#ifdef QT3_SUPPORT
//
// Use QStyle::itemRect(), QStyle::drawItem() and QStyle::drawArrow() instead.
//
Q_GUI_EXPORT QT3_SUPPORT QRect qItemRect(QPainter *p, Qt::GUIStyle gs, int x, int y, int w, int h,
                          int flags, bool enabled,
                          const QPixmap *pixmap, const QString&amp; text, int len=-1);

Q_GUI_EXPORT QT3_SUPPORT void qDrawItem(QPainter *p, Qt::GUIStyle gs, int x, int y, int w, int h,
                         int flags, const QPalette &amp;pal, bool enabled,
                         const QPixmap *pixmap, const QString&amp; text,
                         int len=-1, const QColor* penColor = 0);

Q_GUI_EXPORT QT3_SUPPORT void qDrawArrow(QPainter *p, Qt::ArrowType type, Qt::GUIStyle style, bool down,
                          int x, int y, int w, int h,
                          const QPalette &amp;pal, bool enabled);
#endif

#endif // QDRAWUTIL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qerrormessage.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QERRORMESSAGE_H
#define QERRORMESSAGE_H

#include &lt;QtGui/qdialog.h>

QT_MODULE(Gui)

#ifndef QT_NO_ERRORMESSAGE

class QErrorMessagePrivate;

class Q_GUI_EXPORT QErrorMessage: public QDialog
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QErrorMessage)
public:
    explicit QErrorMessage(QWidget* parent = 0);
    ~QErrorMessage();

    static QErrorMessage * qtHandler();

public Q_SLOTS:
    void showMessage(const QString &amp;message);
#ifdef QT3_SUPPORT
    inline QT_MOC_COMPAT void message(const QString &amp;text) { showMessage(text); }
#endif

protected:
    void done(int);

private:
    Q_DISABLE_COPY(QErrorMessage)
};

#endif // QT_NO_ERRORMESSAGE

#endif // QERRORMESSAGE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qevent.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QEVENT_H
#define QEVENT_H

#include &lt;QtGui/qwindowdefs.h>
#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qregion.h>
#include &lt;QtCore/qnamespace.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtGui/qkeysequence.h>
#include &lt;QtCore/qcoreevent.h>
#include &lt;QtGui/qmime.h>
#include &lt;QtGui/qdrag.h>
#include &lt;QtCore/qvariant.h>

QT_MODULE(Gui)

class QAction;

class Q_GUI_EXPORT QInputEvent : public QEvent
{
public:
    QInputEvent(Type type, Qt::KeyboardModifiers modifiers = Qt::NoModifier);
    ~QInputEvent();
    inline Qt::KeyboardModifiers modifiers() const { return modState; }
protected:
    Qt::KeyboardModifiers modState;
};


class Q_GUI_EXPORT QMouseEvent : public QInputEvent
{
public:
    QMouseEvent(Type type, const QPoint &amp;pos, Qt::MouseButton button,
                Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers);
    QMouseEvent(Type type, const QPoint &amp;pos, const QPoint &amp;globalPos,
                Qt::MouseButton button, Qt::MouseButtons buttons,
                Qt::KeyboardModifiers modifiers);
    ~QMouseEvent();

    inline const QPoint &amp;pos() const { return p; }
    inline const QPoint &amp;globalPos() const { return g; }
    inline int x() const { return p.x(); }
    inline int y() const { return p.y(); }
    inline int globalX() const { return g.x(); }
    inline int globalY() const { return g.y(); }
    inline Qt::MouseButton button() const { return b; }
    inline Qt::MouseButtons buttons() const { return mouseState; }

#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QMouseEvent(Type type, const QPoint &amp;pos, Qt::ButtonState button, int state);
    QT3_SUPPORT_CONSTRUCTOR QMouseEvent(Type type, const QPoint &amp;pos, const QPoint &amp;globalPos,
                                      Qt::ButtonState button, int state);
    inline QT3_SUPPORT Qt::ButtonState state() const
    { return Qt::ButtonState((mouseState^b)|int(modifiers())); }
    inline QT3_SUPPORT Qt::ButtonState stateAfter() const
    { return Qt::ButtonState(int(mouseState)|int(modifiers())); }
#endif
protected:
    QPoint p, g;
    Qt::MouseButton b;
    Qt::MouseButtons mouseState;
};

class Q_GUI_EXPORT QHoverEvent : public QEvent
{
public:
    QHoverEvent(Type type, const QPoint &amp;pos, const QPoint &amp;oldPos);
    ~QHoverEvent();

    inline const QPoint &amp;pos() const { return p; }
    inline const QPoint &amp;oldPos() const { return op; }

protected:
    QPoint p, op;
};

#ifndef QT_NO_WHEELEVENT
class Q_GUI_EXPORT QWheelEvent : public QInputEvent
{
public:
    QWheelEvent(const QPoint &amp;pos, int delta,
                Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers,
                Qt::Orientation orient = Qt::Vertical);
    QWheelEvent(const QPoint &amp;pos, const QPoint&amp; globalPos, int delta,
                Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers,
                Qt::Orientation orient = Qt::Vertical);
    ~QWheelEvent();

    inline int delta() const { return d; }
    inline const QPoint &amp;pos() const { return p; }
    inline const QPoint &amp;globalPos()   const { return g; }
    inline int x() const { return p.x(); }
    inline int y() const { return p.y(); }
    inline int globalX() const { return g.x(); }
    inline int globalY() const { return g.y(); }

    inline Qt::MouseButtons buttons() const { return mouseState; }
    Qt::Orientation orientation() const { return o; }

#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QWheelEvent(const QPoint &amp;pos, int delta, int state,
                                      Qt::Orientation orient = Qt::Vertical);
    QT3_SUPPORT_CONSTRUCTOR QWheelEvent(const QPoint &amp;pos, const QPoint&amp; globalPos, int delta, int state,
                                      Qt::Orientation orient = Qt::Vertical);
    inline QT3_SUPPORT Qt::ButtonState state() const
    { return static_cast&lt;Qt::ButtonState>(int(buttons())|int(modifiers())); }
#endif
protected:
    QPoint p;
    QPoint g;
    int d;
    Qt::MouseButtons mouseState;
    Qt::Orientation o;
};
#endif

class Q_GUI_EXPORT QTabletEvent : public QInputEvent
{
public:
    enum TabletDevice { NoDevice, Puck, Stylus, Airbrush, FourDMouse,
                        XFreeEraser /*internal*/, RotationStylus };
    enum PointerType { UnknownPointer, Pen, Cursor, Eraser };
    QTabletEvent(Type t, const QPoint &amp;pos, const QPoint &amp;globalPos, const QPointF &amp;hiResGlobalPos,
                 int device, int pointerType, qreal pressure, int xTilt, int yTilt,
                 qreal tangentialPressure, qreal rotation, int z,
                 Qt::KeyboardModifiers keyState, qint64 uniqueID);
    ~QTabletEvent();

    inline const QPoint &amp;pos() const { return mPos; }
    inline const QPoint &amp;globalPos() const { return mGPos; }
    inline const QPointF &amp;hiResGlobalPos() const { return mHiResGlobalPos; }
    inline int x() const { return mPos.x(); }
    inline int y() const { return mPos.y(); }
    inline int globalX() const { return mGPos.x(); }
    inline int globalY() const { return mGPos.y(); }
    inline qreal hiResGlobalX() const { return mHiResGlobalPos.x(); }
    inline qreal hiResGlobalY() const { return mHiResGlobalPos.y(); }
    inline TabletDevice device() const { return TabletDevice(mDev); }
    inline PointerType pointerType() const { return PointerType(mPointerType); }
    inline qint64 uniqueId() const { return mUnique; }
    inline qreal pressure() const { return mPress; }
    inline int z() const { return mZ; }
    inline qreal tangentialPressure() const { return mTangential; }
    inline qreal rotation() const { return mRot; }
    inline int xTilt() const { return mXT; }
    inline int yTilt() const { return mYT; }

protected:
    QPoint mPos, mGPos;
    QPointF mHiResGlobalPos;
    int mDev, mPointerType, mXT, mYT, mZ;
    qreal mPress, mTangential, mRot;
    qint64 mUnique;

    // I don't know what the future holds for tablets but there could be some
    // new devices coming along, and there seem to be "holes" in the
    // OS-specific events for this.
    void *mExtra;

};


class Q_GUI_EXPORT QKeyEvent : public QInputEvent
{
public:
    QKeyEvent(Type type, int key, Qt::KeyboardModifiers modifiers,
              const QString&amp; text = QString(),
              bool autorep = false, ushort count = 1);
    ~QKeyEvent();

    int key() const { return k; }
    Qt::KeyboardModifiers modifiers() const;
    inline QString text() const { return txt; }
    inline bool isAutoRepeat() const { return autor; }
    inline int count() const { return int(c); }

#ifdef QT3_SUPPORT
    inline QT3_SUPPORT_CONSTRUCTOR QKeyEvent(Type type, int key, int /*ascii*/,
                                           int modifiers, const QString&amp; text = QString(),
                                           bool autorep = false, ushort count = 1)
        : QInputEvent(type, (Qt::KeyboardModifiers)(modifiers &amp; (int)Qt::KeyButtonMask)), txt(text), k(key),
          c(count), autor(autorep)
    {
        if (key >= Qt::Key_Back &amp;&amp; key &lt;= Qt::Key_MediaLast)
            ignore();
    }
    inline QT3_SUPPORT int ascii() const
    { return (txt.length() ? txt.unicode()->toLatin1() : 0); }
    inline QT3_SUPPORT Qt::ButtonState state() const { return Qt::ButtonState(QInputEvent::modifiers()); }
    inline QT3_SUPPORT Qt::ButtonState stateAfter() const { return Qt::ButtonState(modifiers()); }
#endif

protected:
    QString txt;
    int k;
    ushort c;
    uint autor:1;
};


class Q_GUI_EXPORT QFocusEvent : public QEvent
{
public:
    QFocusEvent(Type type, Qt::FocusReason reason=Qt::OtherFocusReason);
    ~QFocusEvent();

    inline bool gotFocus() const { return type() == FocusIn; }
    inline bool lostFocus() const { return type() == FocusOut; }

#ifdef QT3_SUPPORT
    enum Reason { Mouse=Qt::MouseFocusReason, Tab=Qt::TabFocusReason,
                  Backtab=Qt::BacktabFocusReason, MenuBar=Qt::MenuBarFocusReason,
                  ActiveWindow=Qt::ActiveWindowFocusReason, Other=Qt::OtherFocusReason,
                  Popup=Qt::PopupFocusReason, Shortcut=Qt::ShortcutFocusReason };
#endif
    Qt::FocusReason reason();

private:
    Qt::FocusReason m_reason;
};


class Q_GUI_EXPORT QPaintEvent : public QEvent
{
public:
    QPaintEvent(const QRegion&amp; paintRegion);
    QPaintEvent(const QRect &amp;paintRect);
    ~QPaintEvent();

    inline const QRect &amp;rect() const { return m_rect; }
    inline const QRegion &amp;region() const { return m_region; }

#ifdef QT3_SUPPORT
    QT_COMPAT_CONSTRUCTOR QPaintEvent(const QRegion &amp;paintRegion, const QRect &amp;paintRect);
    inline QT3_SUPPORT bool erased() const { return m_erased; }
    inline QT3_SUPPORT void setErased(bool b) { m_erased = b; }
#endif

protected:
    friend class QApplication;
    friend class QCoreApplication;
    QRect m_rect;
    QRegion m_region;
    bool m_erased;
};

class QUpdateLaterEvent : public QEvent
{
public:
    QUpdateLaterEvent(const QRegion&amp; paintRegion);
    ~QUpdateLaterEvent();

    inline const QRegion &amp;region() const { return m_region; }

protected:
    QRegion m_region;
};

class Q_GUI_EXPORT QMoveEvent : public QEvent
{
public:
    QMoveEvent(const QPoint &amp;pos, const QPoint &amp;oldPos);
    ~QMoveEvent();

    inline const QPoint &amp;pos() const { return p; }
    inline const QPoint &amp;oldPos() const { return oldp;}
protected:
    QPoint p, oldp;
    friend class QApplication;
    friend class QCoreApplication;
};


class Q_GUI_EXPORT QResizeEvent : public QEvent
{
public:
    QResizeEvent(const QSize &amp;size, const QSize &amp;oldSize);
    ~QResizeEvent();

    inline const QSize &amp;size() const { return s; }
    inline const QSize &amp;oldSize()const { return olds;}
protected:
    QSize s, olds;
    friend class QApplication;
    friend class QCoreApplication;
};


class Q_GUI_EXPORT QCloseEvent : public QEvent
{
public:
    QCloseEvent();
    ~QCloseEvent();
};


class Q_GUI_EXPORT QIconDragEvent : public QEvent
{
public:
    QIconDragEvent();
    ~QIconDragEvent();
};


class Q_GUI_EXPORT QShowEvent : public QEvent
{
public:
    QShowEvent();
    ~QShowEvent();
};


class Q_GUI_EXPORT QHideEvent : public QEvent
{
public:
    QHideEvent();
    ~QHideEvent();
};


class Q_GUI_EXPORT QContextMenuEvent : public QInputEvent
{
public:
    enum Reason { Mouse, Keyboard, Other };

    QContextMenuEvent(Reason reason, const QPoint &amp;pos, const QPoint &amp;globalPos);
    QContextMenuEvent(Reason reason, const QPoint &amp;pos);
    ~QContextMenuEvent();

    inline int x() const { return p.x(); }
    inline int y() const { return p.y(); }
    inline int globalX() const { return gp.x(); }
    inline int globalY() const { return gp.y(); }

    inline const QPoint&amp; pos() const { return p; }
    inline const QPoint&amp; globalPos() const { return gp; }

    inline Reason reason() const { return Reason(reas); }

#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QContextMenuEvent(Reason reason, const QPoint &amp;pos, const QPoint &amp;globalPos, int);
    QT3_SUPPORT_CONSTRUCTOR QContextMenuEvent(Reason reason, const QPoint &amp;pos, int);

    QT3_SUPPORT Qt::ButtonState state() const;
#endif
protected:
    QPoint p;
    QPoint gp;
    uint reas : 8;
};

class Q_GUI_EXPORT QInputMethodEvent : public QEvent
{
public:
    enum AttributeType {
       TextFormat,
       Cursor,
       Language,
       Ruby
    };
    class Attribute {
    public:
        Attribute(AttributeType t, int s, int l, QVariant val) : type(t), start(s), length(l), value(val) {}
        AttributeType type;

        int start;
        int length;
        QVariant value;
    };
    QInputMethodEvent();
    QInputMethodEvent(const QString &amp;preeditText, const QList&lt;Attribute> &amp;attributes);
    void setCommitString(const QString &amp;commitString, int replaceFrom = 0, int replaceLength = 0);

    inline const QList&lt;Attribute> &amp;attributes() const { return attrs; }
    inline const QString &amp;preeditString() const { return preedit; }

    inline const QString &amp;commitString() const { return commit; }
    inline int replacementStart() const { return replace_from; }
    inline int replacementLength() const { return replace_length; }

    QInputMethodEvent(const QInputMethodEvent &amp;other);

private:
    QString preedit;
    QList&lt;Attribute> attrs;
    QString commit;
    int replace_from;
    int replace_length;
};

#ifndef QT_NO_DRAGANDDROP

class QMimeData;

class Q_GUI_EXPORT QDropEvent : public QEvent
// QT3_SUPPORT
                              , public QMimeSource
// END QT3_SUPPORT
{
public:
    QDropEvent(const QPoint&amp; pos, Qt::DropActions actions, const QMimeData *data,
               Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Type type = Drop);
    ~QDropEvent();

    inline const QPoint &amp;pos() const { return p; }
    inline Qt::MouseButtons mouseButtons() const { return mouseState; }
    inline Qt::KeyboardModifiers keyboardModifiers() const { return modState; }

    inline Qt::DropActions possibleActions() const { return act; }
    inline Qt::DropAction proposedAction() const { return default_action; }
    inline void acceptProposedAction() { drop_action = default_action; accept(); }

    inline Qt::DropAction dropAction() const { return drop_action; }
    void setDropAction(Qt::DropAction action);

    QWidget* source() const;
    inline const QMimeData *mimeData() const { return mdata; }

// QT3_SUPPORT
    const char* format(int n = 0) const;
    QByteArray encodedData(const char*) const;
    bool provides(const char*) const;
// END QT3_SUPPORT
#ifdef QT3_SUPPORT
    inline void accept() { QEvent::accept(); }
    inline QT3_SUPPORT void accept(bool y) { setAccepted(y); }
    inline QT3_SUPPORT QByteArray data(const char* f) const { return encodedData(f); }

    enum Action { Copy, Link, Move, Private, UserAction = Private };
    QT3_SUPPORT Action action() const;
    inline QT3_SUPPORT void acceptAction(bool y = true)  { if (y) { drop_action = default_action; accept(); } }
    inline QT3_SUPPORT void setPoint(const QPoint&amp; np) { p = np; }
#endif


protected:
    friend class QApplication;
    QPoint p;
    Qt::MouseButtons mouseState;
    Qt::KeyboardModifiers modState;
    Qt::DropActions act;
    Qt::DropAction drop_action;
    Qt::DropAction default_action;
    const QMimeData *mdata;
    mutable QList&lt;QByteArray> fmts; // only used for QT3_SUPPORT
};


class Q_GUI_EXPORT QDragMoveEvent : public QDropEvent
{
public:
    QDragMoveEvent(const QPoint &amp;pos, Qt::DropActions actions, const QMimeData *data,
                   Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Type type = DragMove);
    ~QDragMoveEvent();

    inline QRect answerRect() const { return rect; }

    inline void accept() { QDropEvent::accept(); }
    inline void ignore() { QDropEvent::ignore(); }

    inline void accept(const QRect &amp; r) { accept(); rect = r; }
    inline void ignore(const QRect &amp; r) { ignore(); rect = r; }

#ifdef QT3_SUPPORT
    inline QT3_SUPPORT void accept(bool y) { setAccepted(y); }
#endif

protected:
    friend class QApplication;
    QRect rect;
};


class Q_GUI_EXPORT QDragEnterEvent : public QDragMoveEvent
{
public:
    QDragEnterEvent(const QPoint &amp;pos, Qt::DropActions actions, const QMimeData *data,
                    Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers);
    ~QDragEnterEvent();
};


/* An internal class */
class Q_GUI_EXPORT QDragResponseEvent : public QEvent
{
public:
    QDragResponseEvent(bool accepted);
    ~QDragResponseEvent();

    inline bool dragAccepted() const { return a; }
protected:
    bool a;
};


class Q_GUI_EXPORT QDragLeaveEvent : public QEvent
{
public:
    QDragLeaveEvent();
    ~QDragLeaveEvent();
};
#endif // QT_NO_DRAGANDDROP


class Q_GUI_EXPORT QHelpEvent : public QEvent
{
public:
    QHelpEvent(Type type, const QPoint &amp;pos, const QPoint &amp;globalPos);
    ~QHelpEvent();

    inline int x() const { return p.x(); }
    inline int y() const { return p.y(); }
    inline int globalX() const { return gp.x(); }
    inline int globalY() const { return gp.y(); }

    inline const QPoint&amp; pos()  const { return p; }
    inline const QPoint&amp; globalPos() const { return gp; }

private:
    QPoint p;
    QPoint gp;
};


class Q_GUI_EXPORT QStatusTipEvent : public QEvent
{
public:
    QStatusTipEvent(const QString &amp;tip);
    ~QStatusTipEvent();

    inline QString tip() const { return s; }
private:
    QString s;
};

class Q_GUI_EXPORT QWhatsThisClickedEvent : public QEvent
{
public:
    QWhatsThisClickedEvent(const QString &amp;href);
    ~QWhatsThisClickedEvent();

    inline QString href() const { return s; }
private:
    QString s;
};


class Q_GUI_EXPORT QActionEvent : public QEvent
{
    QAction *act, *bef;
public:
    QActionEvent(int type, QAction *action, QAction *before = 0);
    ~QActionEvent();

    inline QAction *action() const { return act; }
    inline QAction *before() const { return bef; }
};


class Q_GUI_EXPORT QFileOpenEvent : public QEvent
{
public:
    QFileOpenEvent(const QString &amp;file);
    ~QFileOpenEvent();

    inline QString file() const { return f; }
private:
    QString f;
};

class Q_GUI_EXPORT QToolBarChangeEvent : public QEvent
{
public:
    QToolBarChangeEvent(bool t);
    ~QToolBarChangeEvent();

    inline bool toggle() const { return tog; }
private:
    uint tog : 1;
};

class Q_GUI_EXPORT QShortcutEvent : public QEvent
{
public:
    QShortcutEvent(const QKeySequence &amp;key, int id, bool ambiguous = false);
    ~QShortcutEvent();

    inline const QKeySequence &amp;key() { return sequence; }
    inline int shortcutId() { return sid; }
    inline bool isAmbiguous() { return ambig; }
protected:
    QKeySequence sequence;
    bool ambig;
    int  sid;
};

class Q_GUI_EXPORT QClipboardEvent : public QEvent
{
public:
    QClipboardEvent(QEventPrivate *data);
    ~QClipboardEvent();

    QEventPrivate *data() { return d; };
};

class Q_GUI_EXPORT QWindowStateChangeEvent: public QEvent
{
public:
    QWindowStateChangeEvent(Qt::WindowStates aOldState);
    QWindowStateChangeEvent(Qt::WindowStates aOldState, bool isOverride);
    ~QWindowStateChangeEvent();

    inline Qt::WindowStates oldState() const { return ostate; }
    bool isOverride() const;

private:
    Qt::WindowStates ostate;
};

#ifdef QT3_SUPPORT
class QMenuBar;
class Q_GUI_EXPORT QMenubarUpdatedEvent: public QEvent
{
public:
    QMenubarUpdatedEvent(QMenuBar * const menBar);
    inline QMenuBar *menuBar() { return m_menuBar; }
private:
    QMenuBar *m_menuBar;
};
#endif

#ifndef QT_NO_DEBUG_STREAM
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug, const QEvent *);
#endif

#endif // QEVENT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfiledialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QFILEDIALOG_H
#define QFILEDIALOG_H

#include &lt;QtCore/qdir.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtGui/qdialog.h>

QT_MODULE(Gui)

#ifndef QT_NO_FILEDIALOG

class QModelIndex;
class QItemSelection;
struct QFileDialogArgs;
class QFileIconProvider;
class QFileDialogPrivate;
class QAbstractItemDelegate;

class Q_GUI_EXPORT QFileDialog : public QDialog
{
    Q_OBJECT
    Q_PROPERTY(ViewMode viewMode READ viewMode WRITE setViewMode)
    Q_PROPERTY(FileMode fileMode READ fileMode WRITE setFileMode)
    Q_PROPERTY(AcceptMode acceptMode READ acceptMode WRITE setAcceptMode)
    Q_PROPERTY(bool readOnly READ isReadOnly WRITE setReadOnly)
    Q_PROPERTY(bool resolveSymlinks READ resolveSymlinks WRITE setResolveSymlinks)
    Q_PROPERTY(bool confirmOverwrite READ confirmOverwrite WRITE setConfirmOverwrite)
    Q_PROPERTY(QString defaultSuffix READ defaultSuffix WRITE setDefaultSuffix)
    Q_ENUMS(ViewMode FileMode AcceptMode)

public:
    enum ViewMode { Detail, List };
    enum FileMode { AnyFile, ExistingFile, Directory, ExistingFiles, DirectoryOnly };
    enum AcceptMode { AcceptOpen, AcceptSave };
    enum DialogLabel { LookIn, FileName, FileType, Accept, Reject };

    enum Option {
        ShowDirsOnly = 0x01,
        DontResolveSymlinks = 0x02,
        DontConfirmOverwrite = 0x04,
        DontUseSheet = 0x08,
        DontUseNativeDialog = 0x10
    };
    Q_DECLARE_FLAGS(Options, Option)

    QFileDialog(QWidget *parent, Qt::WFlags f);
    explicit QFileDialog(QWidget *parent = 0,
                         const QString &amp;caption = QString(),
                         const QString &amp;directory = QString(),
                         const QString &amp;filter = QString());
    ~QFileDialog();

    void setDirectory(const QString &amp;directory);
    inline void setDirectory(const QDir &amp;directory);
    QDir directory() const;

    void selectFile(const QString &amp;filename);
    QStringList selectedFiles() const;

    void setFilter(const QString &amp;filter);
    void setFilters(const QStringList &amp;filters);
    QStringList filters() const;

    void selectFilter(const QString &amp;filter);
    QString selectedFilter() const;

    void setViewMode(ViewMode mode);
    ViewMode viewMode() const;

    void setFileMode(FileMode mode);
    FileMode fileMode() const;

    void setAcceptMode(AcceptMode mode);
    AcceptMode acceptMode() const;

    void setReadOnly(bool enabled);
    bool isReadOnly() const;

    void setResolveSymlinks(bool enabled);
    bool resolveSymlinks() const;

    void setConfirmOverwrite(bool enabled);
    bool confirmOverwrite() const;

    void setDefaultSuffix(const QString &amp;suffix);
    QString defaultSuffix() const;

    void setHistory(const QStringList &amp;paths);
    QStringList history() const;

    void setItemDelegate(QAbstractItemDelegate *delegate);
    QAbstractItemDelegate *itemDelegate() const;

    void setIconProvider(QFileIconProvider *provider);
    QFileIconProvider *iconProvider() const;

    void setLabelText(DialogLabel label, const QString &amp;text);
    QString labelText(DialogLabel label) const;

Q_SIGNALS:
    void filesSelected(const QStringList &amp;files);
    void currentChanged(const QString &amp;path);

public:
#ifdef QT3_SUPPORT
    typedef FileMode Mode;
    inline QT3_SUPPORT void setMode(FileMode m) { setFileMode(m); }
    inline QT3_SUPPORT FileMode mode() const { return fileMode(); }
    inline QT3_SUPPORT void setDir(const QString &amp;directory) { setDirectory(directory); }
    inline QT3_SUPPORT void setDir( const QDir &amp;directory ) { setDirectory(directory); }
    QT3_SUPPORT QString selectedFile() const;
#endif

    static QString getOpenFileName(QWidget *parent = 0,
                                   const QString &amp;caption = QString(),
                                   const QString &amp;dir = QString(),
                                   const QString &amp;filter = QString(),
                                   QString *selectedFilter = 0,
                                   Options options = 0);

    static QString getSaveFileName(QWidget *parent = 0,
                                   const QString &amp;caption = QString(),
                                   const QString &amp;dir = QString(),
                                   const QString &amp;filter = QString(),
                                   QString *selectedFilter = 0,
                                   Options options = 0);

    static QString getExistingDirectory(QWidget *parent = 0,
                                        const QString &amp;caption = QString(),
                                        const QString &amp;dir = QString(),
                                        Options options = ShowDirsOnly);

    static QStringList getOpenFileNames(QWidget *parent = 0,
                                        const QString &amp;caption = QString(),
                                        const QString &amp;dir = QString(),
                                        const QString &amp;filter = QString(),
                                        QString *selectedFilter = 0,
                                        Options options = 0);

#ifdef QT3_SUPPORT
    inline static QString QT3_SUPPORT getOpenFileName(const QString &amp;dir,
                                                    const QString &amp;filter = QString(),
                                                    QWidget *parent = 0, const char* name = 0,
                                                    const QString &amp;caption = QString(),
                                                    QString *selectedFilter = 0,
                                                    bool resolveSymlinks = true)
        { Q_UNUSED(name);
          return getOpenFileName(parent, caption, dir, filter, selectedFilter,
                                 resolveSymlinks ? Option(0) : DontResolveSymlinks); }

    inline static QString QT3_SUPPORT getSaveFileName(const QString &amp;dir,
                                                    const QString &amp;filter = QString(),
                                                    QWidget *parent = 0, const char* name = 0,
                                                    const QString &amp;caption = QString(),
                                                    QString *selectedFilter = 0,
                                                    bool resolveSymlinks = true)
        { Q_UNUSED(name);
          return getSaveFileName(parent, caption, dir, filter, selectedFilter,
                                 resolveSymlinks ? Option(0) : DontResolveSymlinks); }

    inline static QString QT3_SUPPORT getExistingDirectory(const QString &amp;dir,
                                                         QWidget *parent = 0,
                                                         const char* name = 0,
                                                         const QString &amp;caption = QString(),
                                                         bool dirOnly = true,
                                                         bool resolveSymlinks = true)
        { Q_UNUSED(name);
          return getExistingDirectory(parent, caption, dir,
                                      Options((resolveSymlinks ? Option(0) : DontResolveSymlinks)
                                      | (dirOnly ? ShowDirsOnly : Option(0)))); }

    inline static QStringList QT3_SUPPORT getOpenFileNames(const QString &amp;filter,
                                                         const QString &amp;dir = QString(),
                                                         QWidget *parent = 0,
                                                         const char* name = 0,
                                                         const QString &amp;caption = QString(),
                                                         QString *selectedFilter = 0,
                                                         bool resolveSymlinks = true)
        { Q_UNUSED(name);
          return getOpenFileNames(parent, caption, dir, filter, selectedFilter,
                                  resolveSymlinks ? Option(0) : DontResolveSymlinks); }
#endif // QT3_SUPPORT

protected:
    QFileDialog(const QFileDialogArgs &amp;args);
    void done(int result);
    void accept();

private:
    Q_DECLARE_PRIVATE(QFileDialog)
    Q_DISABLE_COPY(QFileDialog)
    Q_PRIVATE_SLOT(d_func(), void reload())
    Q_PRIVATE_SLOT(d_func(), void navigateToPrevious())
    Q_PRIVATE_SLOT(d_func(), void navigateToParent())
    Q_PRIVATE_SLOT(d_func(), void enterDirectory(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void enterDirectory(const QString &amp;path))
    Q_PRIVATE_SLOT(d_func(), void enterDirectory())
    Q_PRIVATE_SLOT(d_func(), void showList())
    Q_PRIVATE_SLOT(d_func(), void showDetails())
    Q_PRIVATE_SLOT(d_func(), void showHidden())
    Q_PRIVATE_SLOT(d_func(), void useFilter(const QString &amp;filter))
    Q_PRIVATE_SLOT(d_func(), void updateFileName(const QItemSelection &amp;selection))
    Q_PRIVATE_SLOT(d_func(), void autoCompleteFileName(const QString &amp;text))
    Q_PRIVATE_SLOT(d_func(), void autoCompleteDirectory(const QString &amp;text))
    Q_PRIVATE_SLOT(d_func(), void showContextMenu(const QPoint &amp;pos))
    Q_PRIVATE_SLOT(d_func(), void createDirectory())
    Q_PRIVATE_SLOT(d_func(), void renameCurrent())
    Q_PRIVATE_SLOT(d_func(), void deleteCurrent())
    Q_PRIVATE_SLOT(d_func(), void sortByName())
    Q_PRIVATE_SLOT(d_func(), void sortBySize())
    Q_PRIVATE_SLOT(d_func(), void sortByDate())
    Q_PRIVATE_SLOT(d_func(), void setUnsorted())
    Q_PRIVATE_SLOT(d_func(), void currentChanged(const QModelIndex &amp;index))
};

inline void QFileDialog::setDirectory(const QDir &amp;adirectory)
{ setDirectory(adirectory.absolutePath()); }

Q_DECLARE_OPERATORS_FOR_FLAGS(QFileDialog::Options)

#endif // QT_NO_FILEDIALOG

#endif // QFILEDIALOG_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfocusframe.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QFOCUSFRAME_H
#define QFOCUSFRAME_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

class QFocusFramePrivate;
class Q_GUI_EXPORT QFocusFrame : public QWidget
{
    Q_OBJECT
public:
    QFocusFrame(QWidget *parent=0);
    ~QFocusFrame();

    void setWidget(QWidget *widget);
    QWidget *widget() const;

protected:
    bool event(QEvent *e);

    bool eventFilter(QObject *, QEvent *);
    void paintEvent(QPaintEvent *);

private:
    Q_DECLARE_PRIVATE(QFocusFrame)
    Q_DISABLE_COPY(QFocusFrame)
};

#endif // QFOCUSFRAME_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfont.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QFONT_H
#define QFONT_H

#include &lt;QtGui/qwindowdefs.h>
#include &lt;QtCore/qstring.h>

QT_MODULE(Gui)

class QFontPrivate;                                     /* don't touch */
class QStringList;
class QVariant;
class Q3TextFormatCollection;

class Q_GUI_EXPORT QFont
{
public:
    enum StyleHint {
        Helvetica,  SansSerif = Helvetica,
        Times,      Serif = Times,
        Courier,    TypeWriter = Courier,
        OldEnglish, Decorative = OldEnglish,
        System,
        AnyStyle
    };

    enum StyleStrategy {
        PreferDefault    = 0x0001,
        PreferBitmap     = 0x0002,
        PreferDevice     = 0x0004,
        PreferOutline    = 0x0008,
        ForceOutline     = 0x0010,
        PreferMatch      = 0x0020,
        PreferQuality    = 0x0040,
        PreferAntialias  = 0x0080,
        NoAntialias      = 0x0100,
        OpenGLCompatible = 0x0200
    };

    enum Weight {
        Light    = 25,
        Normal   = 50,
        DemiBold = 63,
        Bold     = 75,
        Black    = 87
    };

    enum Style {
        StyleNormal,
        StyleItalic,
        StyleOblique
    };

    enum Stretch {
        UltraCondensed =  50,
        ExtraCondensed =  62,
        Condensed      =  75,
        SemiCondensed  =  87,
        Unstretched    = 100,
        SemiExpanded   = 112,
        Expanded       = 125,
        ExtraExpanded  = 150,
        UltraExpanded  = 200
    };

    QFont();
    QFont(const QString &amp;family, int pointSize = -1, int weight = -1, bool italic = false);
    QFont(const QFont &amp;, QPaintDevice *pd);
    QFont(const QFont &amp;);
    ~QFont();

    QString family() const;
    void setFamily(const QString &amp;);

    int pointSize() const;
    void setPointSize(int);
    qreal pointSizeF() const;
    void setPointSizeF(qreal);

    int pixelSize() const;
    void setPixelSize(int);

    int weight() const;
    void setWeight(int);

    inline bool bold() const;
    inline void setBold(bool);

    void setStyle(Style style);
    Style style() const;

    inline bool italic() const;
    inline void setItalic(bool b);

    bool underline() const;
    void setUnderline(bool);

    bool overline() const;
    void setOverline(bool);

    bool strikeOut() const;
    void setStrikeOut(bool);

    bool fixedPitch() const;
    void setFixedPitch(bool);

    bool kerning() const;
    void setKerning(bool);

    StyleHint styleHint() const;
    StyleStrategy styleStrategy() const;
    void setStyleHint(StyleHint, StyleStrategy = PreferDefault);
    void setStyleStrategy(StyleStrategy s);

    int stretch() const;
    void setStretch(int);

    // is raw mode still needed?
    bool rawMode() const;
    void setRawMode(bool);

    // dupicated from QFontInfo
    bool exactMatch() const;

    QFont &amp;operator=(const QFont &amp;);
    bool operator==(const QFont &amp;) const;
    bool operator!=(const QFont &amp;) const;
    bool operator&lt;(const QFont &amp;) const;
    operator QVariant() const;
    bool isCopyOf(const QFont &amp;) const;


#ifdef Q_WS_WIN
    HFONT handle() const;
#else // !Q_WS_WIN
    Qt::HANDLE handle() const;
#endif // Q_WS_WIN


    // needed for X11
    void setRawName(const QString &amp;);
    QString rawName() const;

    QString key() const;

    QString toString() const;
    bool fromString(const QString &amp;);

    static QString substitute(const QString &amp;);
    static QStringList substitutes(const QString &amp;);
    static QStringList substitutions();
    static void insertSubstitution(const QString&amp;, const QString &amp;);
    static void insertSubstitutions(const QString&amp;, const QStringList &amp;);
    static void removeSubstitution(const QString &amp;);
    static void initialize();
    static void cleanup();
#ifndef Q_WS_QWS
    static void cacheStatistics();
#endif

    QString defaultFamily() const;
    QString lastResortFamily() const;
    QString lastResortFont() const;

    QFont resolve(const QFont &amp;) const;
    inline uint resolve() const { return resolve_mask; }
    inline void resolve(uint mask) { resolve_mask = mask; }

#ifdef QT3_SUPPORT
    static QT3_SUPPORT QFont defaultFont();
    static QT3_SUPPORT void setDefaultFont(const QFont &amp;);
    QT3_SUPPORT void setPixelSizeFloat(qreal);
    QT3_SUPPORT qreal pointSizeFloat() const { return pointSizeF(); }
    QT3_SUPPORT void setPointSizeFloat(qreal size) { setPointSizeF(size); }
#endif

private:
    QFont(QFontPrivate *);

    void detach();

#if defined(Q_WS_MAC)
    void macSetFont(QPaintDevice *);
    friend class QQuickDrawPaintEngine;
#elif defined(Q_WS_X11)
    void x11SetScreen(int screen = -1);
    int x11Screen() const;
#endif

    friend class QFontMetrics;
    friend class QFontMetricsF;
    friend class QFontInfo;
    friend class QPainter;
    friend class QPSPrintEngineFont;
    friend class QApplication;
    friend class QWidget;
    friend class QWidgetPrivate;
    friend class Q3TextFormatCollection;
    friend class QTextLayout;
    friend class QTextEngine;
    friend class QTextLine;
    friend struct QScriptLine;
    friend class QGLContext;
    friend class QWin32PaintEngine;
    friend class QPainterPath;

#ifndef QT_NO_DATASTREAM
    friend Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QFont &amp;);
    friend Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QFont &amp;);
#endif

    QFontPrivate *d;
    uint resolve_mask;
};


inline bool QFont::bold() const
{ return weight() > Normal; }


inline void QFont::setBold(bool enable)
{ setWeight(enable ? Bold : Normal); }

inline bool QFont::italic() const
{
    return (style() != StyleNormal);
}

inline void QFont::setItalic(bool b) {
    setStyle(b ? StyleItalic : StyleNormal);
}


/*****************************************************************************
  QFont stream functions
 *****************************************************************************/

#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QFont &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QFont &amp;);
#endif

#endif // QFONT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfontdatabase.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QFONTDATABASE_H
#define QFONTDATABASE_H

#include &lt;QtGui/qwindowdefs.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtGui/qfont.h>
#ifdef QT3_SUPPORT
#include &lt;QtCore/qstringlist.h>
#include &lt;QtCore/qlist.h>
#endif

QT_MODULE(Gui)

class QStringList;
template &lt;class T> class QList;
struct QFontDef;
class QFontEngine;

class QFontDatabasePrivate;

class Q_GUI_EXPORT QFontDatabase
{
public:
    enum WritingSystem {
        Any,

        Latin,
        Greek,
        Cyrillic,
        Armenian,
        Hebrew,
        Arabic,
        Syriac,
        Thaana,
        Devanagari,
        Bengali,
        Gurmukhi,
        Gujarati,
        Oriya,
        Tamil,
        Telugu,
        Kannada,
        Malayalam,
        Sinhala,
        Thai,
        Lao,
        Tibetan,
        Myanmar,
        Georgian,
        Khmer,
        SimplifiedChinese,
        TraditionalChinese,
        Japanese,
        Korean,
        Vietnamese,

        Other,

        WritingSystemsCount
    };

    static QList&lt;int> standardSizes();

    QFontDatabase();

    QList&lt;WritingSystem> writingSystems() const;
    QStringList families(WritingSystem writingSystem = Any) const;
    QStringList styles(const QString &amp;family) const;
    QList&lt;int> pointSizes(const QString &amp;family, const QString &amp;style = QString());
    QList&lt;int> smoothSizes(const QString &amp;family, const QString &amp;style);
    QString styleString(const QFont &amp;font);
    QString styleString(const QFontInfo &amp;fontInfo);

    QFont font(const QString &amp;family, const QString &amp;style, int pointSize) const;

    bool isBitmapScalable(const QString &amp;family, const QString &amp;style = QString()) const;
    bool isSmoothlyScalable(const QString &amp;family, const QString &amp;style = QString()) const;
    bool isScalable(const QString &amp;family, const QString &amp;style = QString()) const;
    bool isFixedPitch(const QString &amp;family, const QString &amp;style = QString()) const;

    bool italic(const QString &amp;family, const QString &amp;style) const;
    bool bold(const QString &amp;family, const QString &amp;style) const;
    int weight(const QString &amp;family, const QString &amp;style) const;

    static QString writingSystemName(WritingSystem writingSystem);
    static QString writingSystemSample(WritingSystem writingSystem);

private:
    static void createDatabase();
    static void parseFontName(const QString &amp;name, QString &amp;foundry, QString &amp;family);
#if !defined(Q_WS_X11) &amp;&amp; !defined(Q_WS_WIN)
    static QFontEngine *findFont(int script, const QFontPrivate *fp,
                                 const QFontDef &amp;request, int force_encoding_id = -1);
#else
    static void load(const QFontPrivate *d, int script);
#endif
#ifdef Q_WS_X11
    static QFontEngine *loadXlfd(int screen, int script, const QFontDef &amp;request, int force_encoding_id = -1);
#endif
    
    friend struct QFontDef;
    friend class QFontPrivate;
    friend class QFontDialog;
    friend class QFontEngineMultiXLFD;

    QFontDatabasePrivate *d;
};

#endif // QFONTDATABASE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfontdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QFONTDIALOG_H
#define QFONTDIALOG_H

#include &lt;QtGui/qwindowdefs.h>

QT_MODULE(Gui)

#ifndef QT_NO_FONTDIALOG

#include &lt;QtGui/qdialog.h>
#include &lt;QtGui/qfont.h>

class QFontDialogPrivate;

class Q_GUI_EXPORT QFontDialog: public QDialog
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QFontDialog)

public:
    static QFont getFont(bool *ok, const QFont &amp;def, QWidget* parent=0);
    static QFont getFont(bool *ok, QWidget* parent=0);

#ifdef QT3_SUPPORT
    static QFont getFont(bool *ok, const QFont &amp;def, QWidget* parent, const char* name)
        { Q_UNUSED(name); return getFont(ok, def, parent); }
    static QFont getFont(bool *ok, QWidget* parent, const char* name)
        { Q_UNUSED(name); return getFont(ok, parent); }
#endif

private:
    static QFont getFont(bool *ok, const QFont *def, QWidget* parent=0);

    explicit QFontDialog(QWidget* parent=0, bool modal=false, Qt::WFlags f=0);
    ~QFontDialog();

    QFont font() const;
    void setFont(const QFont &amp;font);

    bool eventFilter(QObject *, QEvent *);

    void updateFamilies();
    void updateStyles();
    void updateSizes();

private:
    Q_PRIVATE_SLOT(d_func(), void sizeChanged(const QString &amp;))
    Q_PRIVATE_SLOT(d_func(), void familyHighlighted(int))
    Q_PRIVATE_SLOT(d_func(), void writingSystemHighlighted(int))
    Q_PRIVATE_SLOT(d_func(), void styleHighlighted(int))
    Q_PRIVATE_SLOT(d_func(), void sizeHighlighted(int))
    Q_PRIVATE_SLOT(d_func(), void updateSample())

    Q_DISABLE_COPY(QFontDialog)
};

#endif // QT_NO_FONTDIALOG

#endif // QFONTDIALOG_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfontinfo.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QFONTINFO_H
#define QFONTINFO_H

#include &lt;QtGui/qfont.h>

QT_MODULE(Gui)

class Q_GUI_EXPORT QFontInfo
{
public:
    QFontInfo(const QFont &amp;);
    QFontInfo(const QFontInfo &amp;);
    ~QFontInfo();

    QFontInfo &amp;operator=(const QFontInfo &amp;);

    QString family() const;
    int pixelSize() const;
    int pointSize() const;
    qreal pointSizeF() const;
    bool italic() const;
    QFont::Style style() const;
    int weight() const;
    inline bool bold() const { return weight() > QFont::Normal; }
    bool underline() const;
    bool overline() const;
    bool strikeOut() const;
    bool fixedPitch() const;
    QFont::StyleHint styleHint() const;
    bool rawMode() const;

    bool exactMatch() const;

private:
    QFontPrivate *d;
};

#endif // QFONTINFO_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qfontmetrics.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QFONTMETRICS_H
#define QFONTMETRICS_H

#include &lt;QtGui/qfont.h>
#ifndef QT_INCLUDE_COMPAT
#include &lt;QtCore/qrect.h>
#endif

QT_MODULE(Gui)

#ifdef Q_WS_QWS
class QFontEngine;
#endif

class QTextCodec;
class QRect;


class Q_GUI_EXPORT QFontMetrics
{
public:
    QFontMetrics(const QFont &amp;);
    QFontMetrics(const QFont &amp;, QPaintDevice *pd);
    QFontMetrics(const QFontMetrics &amp;);
    ~QFontMetrics();

    QFontMetrics &amp;operator=(const QFontMetrics &amp;);

    int ascent() const;
    int descent() const;
    int height() const;
    int leading() const;
    int lineSpacing() const;
    int minLeftBearing() const;
    int minRightBearing() const;
    int maxWidth() const;

    int xHeight() const;

    bool inFont(QChar) const;

    int leftBearing(QChar) const;
    int rightBearing(QChar) const;
    int width(const QString &amp;, int len = -1) const;

    int width(QChar) const;
    int charWidth(const QString &amp;str, int pos) const;

    QRect boundingRect(QChar) const;

    QRect boundingRect(const QString &amp;text) const;
    QRect boundingRect(const QRect &amp;r, int flags, const QString &amp;text, int tabstops=0, int *tabarray=0) const;
    inline QRect boundingRect(int x, int y, int w, int h, int flags, const QString &amp;text,
                              int tabstops=0, int *tabarray=0) const
        { return boundingRect(QRect(x, y, w, h), flags, text, tabstops, tabarray); }
    QSize size(int flags, const QString&amp; str, int tabstops=0, int *tabarray=0) const;

    int underlinePos() const;
    int overlinePos() const;
    int strikeOutPos() const;
    int lineWidth() const;

    bool operator==(const QFontMetrics &amp;other); // 5.0 - remove me
    bool operator==(const QFontMetrics &amp;other) const;
    inline bool operator !=(const QFontMetrics &amp;other) { return !operator==(other); }

#ifdef QT3_SUPPORT
    inline QRect boundingRect(const QString &amp;text, int len) const
        { return boundingRect(text.left(len)); }
    inline QRect boundingRect(int x, int y, int w, int h, int flags, const QString&amp; str, int len,
                              int tabstops=0, int *tabarray=0) const
        { return boundingRect(QRect(x, y, w, h), flags, str.left(len), tabstops, tabarray); }
    inline QSize size(int flags, const QString&amp; str, int len, int tabstops=0, int *tabarray=0) const
        { return size(flags, str.left(len), tabstops, tabarray); }
#endif
private:
#if defined(Q_WS_MAC)
    friend class QFontPrivate;
#endif

    QFontPrivate *d;
};


class Q_GUI_EXPORT QFontMetricsF
{
public:
    QFontMetricsF(const QFont &amp;);
    QFontMetricsF(const QFont &amp;, QPaintDevice *pd);
//    QFontMetricsF(const QFontMetrics &amp;);
    QFontMetricsF(const QFontMetricsF &amp;);
    ~QFontMetricsF();

    QFontMetricsF &amp;operator=(const QFontMetricsF &amp;);
//    QFontMetricsF &amp;operator=(const QFontMetrics &amp;);

    qreal ascent() const;
    qreal descent() const;
    qreal height() const;
    qreal leading() const;
    qreal lineSpacing() const;
    qreal minLeftBearing() const;
    qreal minRightBearing() const;
    qreal maxWidth() const;

    qreal xHeight() const;

    bool inFont(QChar) const;

    qreal leftBearing(QChar) const;
    qreal rightBearing(QChar) const;
    qreal width(const QString &amp;string) const;

    qreal width(QChar) const;

    QRectF boundingRect(const QString &amp;string) const;
    QRectF boundingRect(QChar) const;
    QRectF boundingRect(const QRectF &amp;r, int flags, const QString&amp; string, int tabstops=0, int *tabarray=0) const;
    QSizeF size(int flags, const QString&amp; str, int tabstops=0, int *tabarray=0) const;

    qreal underlinePos() const;
    qreal overlinePos() const;
    qreal strikeOutPos() const;
    qreal lineWidth() const;

    bool operator==(const QFontMetricsF &amp;other); // 5.0 - remove me
    bool operator==(const QFontMetricsF &amp;other) const;
    inline bool operator !=(const QFontMetricsF &amp;other) { return !operator==(other); } // 5.0 - remove me
    inline bool operator !=(const QFontMetricsF &amp;other) const { return !operator==(other); }

private:
    QFontPrivate *d;
};

#endif // QFONTMETRICS_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qframe.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QFRAME_H
#define QFRAME_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

class QFramePrivate;

class Q_GUI_EXPORT QFrame : public QWidget
{
    Q_OBJECT

    Q_ENUMS(Shape Shadow)
    Q_PROPERTY(Shape frameShape READ frameShape WRITE setFrameShape)
    Q_PROPERTY(Shadow frameShadow READ frameShadow WRITE setFrameShadow)
    Q_PROPERTY(int lineWidth READ lineWidth WRITE setLineWidth)
    Q_PROPERTY(int midLineWidth READ midLineWidth WRITE setMidLineWidth)
    Q_PROPERTY(int frameWidth READ frameWidth)
    Q_PROPERTY(QRect frameRect READ frameRect WRITE setFrameRect DESIGNABLE false)

public:
    explicit QFrame(QWidget* parent = 0, Qt::WFlags f = 0);
    ~QFrame();

    int frameStyle() const;
    void setFrameStyle(int);

    int frameWidth() const;

    QSize sizeHint() const;

    enum Shape {
        NoFrame  = 0, // no frame
        Box = 0x0001, // rectangular box
        Panel = 0x0002, // rectangular panel
        WinPanel = 0x0003, // rectangular panel (Windows)
        HLine = 0x0004, // horizontal line
        VLine = 0x0005, // vertical line
        StyledPanel = 0x0006 // rectangular panel depending on the GUI style

#if defined(QT3_SUPPORT) &amp;&amp; !defined(Q_MOC_RUN)
        ,PopupPanel = StyledPanel, // rectangular panel depending on the GUI style
        MenuBarPanel = StyledPanel,
        ToolBarPanel = StyledPanel,
        LineEditPanel = StyledPanel,
        TabWidgetPanel = StyledPanel,
        GroupBoxPanel = StyledPanel
#endif
    };
    enum Shadow {
        Plain = 0x0010, // plain line
        Raised = 0x0020, // raised shadow effect
        Sunken = 0x0030 // sunken shadow effect
    };

    enum {
        Shadow_Mask = 0x00f0, // mask for the shadow
        Shape_Mask = 0x000f // mask for the shape
#if defined(QT3_SUPPORT)
        ,MShadow = Shadow_Mask,
        MShape = Shape_Mask
#endif
    };

    Shape frameShape() const;
    void setFrameShape(Shape);
    Shadow frameShadow() const;
    void setFrameShadow(Shadow);

    int lineWidth() const;
    void setLineWidth(int);

    int midLineWidth() const;
    void setMidLineWidth(int);

    QRect frameRect() const;
    void setFrameRect(const QRect &amp;);

protected:
    bool event(QEvent *e);
    void paintEvent(QPaintEvent *);
    void changeEvent(QEvent *);
    void drawFrame(QPainter *);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QFrame(QWidget* parent, const char* name, Qt::WFlags f = 0);
#endif

protected:
    QFrame(QFramePrivate &amp;dd, QWidget* parent = 0, Qt::WFlags f = 0);

private:
    Q_DISABLE_COPY(QFrame)
    Q_DECLARE_PRIVATE(QFrame)
};

#endif // QFRAME_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qgridlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QGRIDLAYOUT_H
#define QGRIDLAYOUT_H

#include &lt;QtGui/qlayout.h>
#ifdef QT_INCLUDE_COMPAT
#include &lt;QtGui/qwidget.h>
#endif

#include &lt;limits.h>

QT_MODULE(Gui)

class QGridLayoutPrivate;

class Q_GUI_EXPORT QGridLayout : public QLayout
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QGridLayout)
public:
    explicit QGridLayout(QWidget *parent);
    QGridLayout();

#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QGridLayout(QWidget *parent, int nRows, int nCols = 1, int border = 0,
                                      int spacing = -1, const char *name = 0);
    QT3_SUPPORT_CONSTRUCTOR QGridLayout(int nRows, int nCols = 1, int spacing = -1, const char *name = 0);
    QT3_SUPPORT_CONSTRUCTOR QGridLayout(QLayout *parentLayout, int nRows =1, int nCols = 1, int spacing = -1,
                                      const char *name = 0);
#endif
    ~QGridLayout();

    QSize sizeHint() const;
    QSize minimumSize() const;
    QSize maximumSize() const;

    void setRowStretch(int row, int stretch);
    void setColumnStretch(int column, int stretch);
    int rowStretch(int row) const;
    int columnStretch(int column) const;

    void setRowMinimumHeight(int row, int minSize);
    void setColumnMinimumWidth(int column, int minSize);
    int rowMinimumHeight(int row) const;
    int columnMinimumWidth(int column) const;

    int columnCount() const;
    int rowCount() const;

    QRect cellRect(int row, int column) const;
#ifdef QT3_SUPPORT
    inline QT3_SUPPORT QRect cellGeometry(int row, int column) const {return cellRect(row, column);}
#endif

    bool hasHeightForWidth() const;
    int heightForWidth(int) const;
    int minimumHeightForWidth(int) const;

    Qt::Orientations expandingDirections() const;
    void invalidate();

    inline void addWidget(QWidget *w) { QLayout::addWidget(w); }
    void addWidget(QWidget *, int row, int column, Qt::Alignment = 0);
    void addWidget(QWidget *, int row, int column, int rowSpan, int columnSpan, Qt::Alignment = 0);
    void addLayout(QLayout *, int row, int column, Qt::Alignment = 0);
    void addLayout(QLayout *, int row, int column, int rowSpan, int columnSpan, Qt::Alignment = 0);

    void setOriginCorner(Qt::Corner);
    Qt::Corner originCorner() const;

#ifdef QT3_SUPPORT
    inline QT3_SUPPORT void setOrigin(Qt::Corner corner) { setOriginCorner(corner); }
    inline QT3_SUPPORT Qt::Corner origin() const { return originCorner(); }
#endif
    QLayoutItem *itemAt(int) const;
    QLayoutItem *takeAt(int);
    int count() const;
    void setGeometry(const QRect&amp;);

    void addItem(QLayoutItem *item, int row, int column, int rowSpan = 1, int columnSpan = 1, Qt::Alignment = 0);

    void setDefaultPositioning(int n, Qt::Orientation orient);
    void getItemPosition(int idx, int *row, int *column, int *rowSpan, int *columnSpan);

protected:
#ifdef QT3_SUPPORT
    QT3_SUPPORT bool findWidget(QWidget* w, int *r, int *c);
#endif
    void addItem(QLayoutItem *);

private:
    Q_DISABLE_COPY(QGridLayout)

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT void expand(int rows, int cols);
    inline QT3_SUPPORT void addRowSpacing(int row, int minsize) { addItem(new QSpacerItem(0,minsize), row, 0); }
    inline QT3_SUPPORT void addColSpacing(int col, int minsize) { addItem(new QSpacerItem(minsize,0), 0, col); }
    inline QT3_SUPPORT void addMultiCellWidget(QWidget *w, int fromRow, int toRow, int fromCol, int toCol, Qt::Alignment _align = 0)
        { addWidget(w, fromRow, fromCol, (toRow &lt; 0) ? -1 : toRow - fromRow + 1, (toCol &lt; 0) ? -1 : toCol - fromCol + 1, _align); }
    inline QT3_SUPPORT void addMultiCell(QLayoutItem *l, int fromRow, int toRow, int fromCol, int toCol, Qt::Alignment _align = 0)
        { addItem(l, fromRow, fromCol, (toRow &lt; 0) ? -1 : toRow - fromRow + 1, (toCol &lt; 0) ? -1 : toCol - fromCol + 1, _align); }
    inline QT3_SUPPORT void addMultiCellLayout(QLayout *layout, int fromRow, int toRow, int fromCol, int toCol, Qt::Alignment _align = 0)
        { addLayout(layout, fromRow, fromCol, (toRow &lt; 0) ? -1 : toRow - fromRow + 1, (toCol &lt; 0) ? -1 : toCol - fromCol + 1, _align); }

    inline QT3_SUPPORT int numRows() const { return rowCount(); }
    inline QT3_SUPPORT int numCols() const { return columnCount(); }
    inline QT3_SUPPORT void setColStretch(int col, int stretch) {setColumnStretch(col, stretch); }
    inline QT3_SUPPORT int colStretch(int col) const {return columnStretch(col); }
    inline QT3_SUPPORT void setColSpacing(int col, int minSize) { setColumnMinimumWidth(col, minSize); }
    inline QT3_SUPPORT int colSpacing(int col) const { return columnMinimumWidth(col); }
    inline QT3_SUPPORT void setRowSpacing(int row, int minSize) {setRowMinimumHeight(row, minSize); }
    inline QT3_SUPPORT int rowSpacing(int row) const {return rowMinimumHeight(row); }
#endif
};

#endif // QGRIDLAYOUT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qgroupbox.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QGROUPBOX_H
#define QGROUPBOX_H

#include &lt;QtGui/qframe.h>

QT_MODULE(Gui)

#ifndef QT_NO_GROUPBOX

class QGroupBoxPrivate;
class Q_GUI_EXPORT QGroupBox : public QWidget
{
    Q_OBJECT

    Q_PROPERTY(QString title READ title WRITE setTitle)
    Q_PROPERTY(Qt::Alignment alignment READ alignment WRITE setAlignment)
    Q_PROPERTY(bool flat READ isFlat WRITE setFlat)
    Q_PROPERTY(bool checkable READ isCheckable WRITE setCheckable)
    Q_PROPERTY(bool checked READ isChecked WRITE setChecked NOTIFY toggled USER true)
public:
    explicit QGroupBox(QWidget* parent=0);
    explicit QGroupBox(const QString &amp;title, QWidget* parent=0);
    ~QGroupBox();

    QString title() const;
    void setTitle(const QString &amp;title);

    Qt::Alignment alignment() const;
    void setAlignment(int alignment);

    QSize minimumSizeHint() const;

    bool isFlat() const;
    void setFlat(bool flat);
    bool isCheckable() const;
    void setCheckable(bool checkable);
    bool isChecked() const;

public Q_SLOTS:
    void setChecked(bool checked);

Q_SIGNALS:
    void toggled(bool);

protected:
    bool event(QEvent *event);
    void childEvent(QChildEvent *event);
    void resizeEvent(QResizeEvent *event);
    void paintEvent(QPaintEvent *event);
    void focusInEvent(QFocusEvent *event);
    void changeEvent(QEvent *event);
    void mousePressEvent(QMouseEvent *event);
    void mouseMoveEvent(QMouseEvent *event);
    void mouseReleaseEvent(QMouseEvent *event);  

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QGroupBox(QWidget* parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QGroupBox(const QString &amp;title, QWidget* parent, const char* name);
#endif

private:
    Q_DISABLE_COPY(QGroupBox)
    Q_DECLARE_PRIVATE(QGroupBox)
    Q_PRIVATE_SLOT(d_func(), void fixFocus())
    Q_PRIVATE_SLOT(d_func(), void setChildrenEnabled(bool b))
};

#endif // QT_NO_GROUPBOX

#endif // QGROUPBOX_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qheaderview.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QHEADERVIEW_H
#define QHEADERVIEW_H

#include &lt;QtGui/qabstractitemview.h>

QT_MODULE(Gui)

#ifndef QT_NO_ITEMVIEWS

class QHeaderViewPrivate;

class Q_GUI_EXPORT QHeaderView : public QAbstractItemView
{
    friend class QTableView;
    friend class QTableViewPrivate;
    Q_OBJECT
    Q_PROPERTY(bool showSortIndicator READ isSortIndicatorShown WRITE setSortIndicatorShown)
    Q_PROPERTY(bool highlightSections READ highlightSections WRITE setHighlightSections)
    Q_PROPERTY(bool stretchLastSection READ stretchLastSection WRITE setStretchLastSection)
    Q_PROPERTY(int defaultSectionSize READ defaultSectionSize WRITE setDefaultSectionSize)
    Q_PROPERTY(Qt::Alignment defaultAlignment READ defaultAlignment WRITE setDefaultAlignment)
    Q_ENUMS(ResizeMode)

public:

    enum ResizeMode
    {
        Interactive, // don't change the size (let the user decide)
        Stretch, // fill available visible space
        Custom // let somebody else do the resize
    };

    explicit QHeaderView(Qt::Orientation orientation, QWidget *parent = 0);
    virtual ~QHeaderView();

    void setModel(QAbstractItemModel *model);

    Qt::Orientation orientation() const;
    int offset() const;
    int length() const;
    QSize sizeHint() const;
    int sectionSizeHint(int logicalIndex) const;

    int visualIndexAt(int position) const;
    int logicalIndexAt(int position) const;

    inline int logicalIndexAt(int x, int y) const;
    inline int logicalIndexAt(const QPoint &amp;pos) const;

    int sectionSize(int logicalIndex) const;
    int sectionPosition(int logicalIndex) const;
    int sectionViewportPosition(int logicalIndex) const;

    void moveSection(int from, int to);
    void resizeSection(int logicalIndex, int size);
    void resizeSections(QHeaderView::ResizeMode mode);

    bool isSectionHidden(int logicalIndex) const;
    void setSectionHidden(int logicalIndex, bool hide);
    int hiddenSectionCount() const;

    inline void hideSection(int logicalIndex);
    inline void showSection(int logicalIndex);

    int count() const;
    int visualIndex(int logicalIndex) const;
    int logicalIndex(int visualIndex) const;

    void setMovable(bool movable);
    bool isMovable() const;

    void setClickable(bool clickable);
    bool isClickable() const;

    void setHighlightSections(bool highlight);
    bool highlightSections() const;

    void setResizeMode(ResizeMode mode);
    void setResizeMode(int logicalIndex, ResizeMode mode);
    ResizeMode resizeMode(int logicalIndex) const;
    int stretchSectionCount() const;

    void setSortIndicatorShown(bool show);
    bool isSortIndicatorShown() const;

    void setSortIndicator(int logicalIndex, Qt::SortOrder order);
    int sortIndicatorSection() const;
    Qt::SortOrder sortIndicatorOrder() const;

    bool stretchLastSection() const;
    void setStretchLastSection(bool stretch);

    int defaultSectionSize() const;
    void setDefaultSectionSize(int size);

    Qt::Alignment defaultAlignment() const;
    void setDefaultAlignment(Qt::Alignment alignment);

    void doItemsLayout();
    bool sectionsMoved() const;
    bool sectionsHidden() const;

public Q_SLOTS:
    void setOffset(int offset);
    void headerDataChanged(Qt::Orientation orientation, int logicalFirst, int logicalLast);

Q_SIGNALS:
    void sectionMoved(int logicalIndex, int oldVisualIndex, int newVisualIndex);
    void sectionResized(int logicalIndex, int oldSize, int newSize);
    void sectionPressed(int logicalIndex);
    void sectionClicked(int logicalIndex);
    void sectionDoubleClicked(int logicalIndex);
    void sectionCountChanged(int oldCount, int newCount);
    void sectionHandleDoubleClicked(int logicalIndex);
    void sectionAutoResize(int logicalIndex, QHeaderView::ResizeMode mode);

protected Q_SLOTS:
    void updateSection(int logicalIndex);
    void resizeSections();
    void sectionsInserted(const QModelIndex &amp;parent, int logicalFirst, int logicalLast);
    void sectionsAboutToBeRemoved(const QModelIndex &amp;parent, int logicalFirst, int logicalLast);

protected:
    QHeaderView(QHeaderViewPrivate &amp;dd, Qt::Orientation orientation, QWidget *parent = 0);
    void initialize();

    void initializeSections();
    void initializeSections(int start, int end);
    void currentChanged(const QModelIndex &amp;current, const QModelIndex &amp;old);

    bool event(QEvent *e);
    void paintEvent(QPaintEvent *e);
    void mousePressEvent(QMouseEvent *e);
    void mouseMoveEvent(QMouseEvent *e);
    void mouseReleaseEvent(QMouseEvent *e);
    void mouseDoubleClickEvent(QMouseEvent *e);
    bool viewportEvent(QEvent *e);

    virtual void paintSection(QPainter *painter, const QRect &amp;rect, int logicalIndex) const;
    virtual QSize sectionSizeFromContents(int logicalIndex) const;

    int horizontalOffset() const;
    int verticalOffset() const;
    void updateGeometries();
    void scrollContentsBy(int dx, int dy);

    void dataChanged(const QModelIndex &amp;topLeft, const QModelIndex &amp;bottomRight);
    void rowsInserted(const QModelIndex &amp;parent, int start, int end);

    QRect visualRect(const QModelIndex &amp;index) const;
    void scrollTo(const QModelIndex &amp;index, ScrollHint hint);

    QModelIndex indexAt(const QPoint &amp;p) const;
    bool isIndexHidden(const QModelIndex &amp;index) const;

    QModelIndex moveCursor(CursorAction, Qt::KeyboardModifiers);
    void setSelection(const QRect&amp;, QItemSelectionModel::SelectionFlags);
    QRegion visualRegionForSelection(const QItemSelection &amp;selection) const;

private:
    Q_PRIVATE_SLOT(d_func(), void sectionsRemoved(const QModelIndex &amp;parent, int logicalFirst, int logicalLast))
    Q_DECLARE_PRIVATE(QHeaderView)
    Q_DISABLE_COPY(QHeaderView)
};

inline int QHeaderView::logicalIndexAt(int ax, int ay) const
{ return orientation() == Qt::Horizontal ? logicalIndexAt(ax) : logicalIndexAt(ay); }

inline int QHeaderView::logicalIndexAt(const QPoint &amp;apos) const
{ return logicalIndexAt(apos.x(), apos.y()); }

inline void QHeaderView::hideSection(int alogicalIndex)
{ setSectionHidden(alogicalIndex, true); }
inline void QHeaderView::showSection(int alogicalIndex)
{ setSectionHidden(alogicalIndex, false); }

#endif // QT_NO_ITEMVIEWS

#endif // QHEADERVIEW_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qicon.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QICON_H
#define QICON_H

#include &lt;QtCore/qglobal.h>
#include &lt;QtCore/qsize.h>
#include &lt;QtGui/qpixmap.h>

QT_MODULE(Gui)

class QIconPrivate;
class QIconEngine;

class Q_GUI_EXPORT QIcon
{
public:
    enum Mode { Normal, Disabled, Active };
    enum State { On, Off };

    QIcon();
    QIcon(const QPixmap &amp;pixmap);
    QIcon(const QIcon &amp;other);
    explicit QIcon(const QString &amp;fileName); // file or resource name
    explicit QIcon(QIconEngine *engine);
    ~QIcon();
    QIcon &amp;operator=(const QIcon &amp;other);
    operator QVariant() const;

    QPixmap pixmap(const QSize &amp;size, Mode mode = Normal, State state = Off) const;
    inline QPixmap pixmap(int w, int h, Mode mode = Normal, State state = Off) const
        { return pixmap(QSize(w, h), mode, state); }
    inline QPixmap pixmap(int extent, Mode mode = Normal, State state = Off) const
        { return pixmap(QSize(extent, extent), mode, state); }

    QSize actualSize(const QSize &amp;size, Mode mode = Normal, State state = Off) const;

    void paint(QPainter *painter, const QRect &amp;rect, Qt::Alignment alignment = Qt::AlignCenter, Mode mode = Normal, State state = Off) const;
    inline void paint(QPainter *painter, int x, int y, int w, int h, Qt::Alignment alignment = Qt::AlignCenter, Mode mode = Normal, State state = Off) const
        { paint(painter, QRect(x, y, w, h), alignment, mode, state); }

    bool isNull() const;
    bool isDetached() const;

    int serialNumber() const;

    void addPixmap(const QPixmap &amp;pixmap, Mode mode = Normal, State state = Off);
    void addFile(const QString &amp;fileName, const QSize &amp;size = QSize(), Mode mode = Normal, State state = Off);

#ifdef QT3_SUPPORT
    enum Size { Small, Large, Automatic = Small };
    static QT3_SUPPORT void setPixmapSize(Size which, const QSize &amp;size);
    static QT3_SUPPORT QSize pixmapSize(Size which);
    inline QT3_SUPPORT void reset(const QPixmap &amp;pixmap, Size /*size*/) { *this = QIcon(pixmap); }
    inline QT3_SUPPORT void setPixmap(const QPixmap &amp;pixmap, Size, Mode mode = Normal, State state = Off)
        { addPixmap(pixmap, mode, state); }
    inline QT3_SUPPORT void setPixmap(const QString &amp;fileName, Size, Mode mode = Normal, State state = Off)
        { addPixmap(QPixmap(fileName), mode, state); }
    QT3_SUPPORT QPixmap pixmap(Size size, Mode mode, State state = Off) const;
    QT3_SUPPORT QPixmap pixmap(Size size, bool enabled, State state = Off) const;
    QT3_SUPPORT QPixmap pixmap() const;
#endif

    Q_DUMMY_COMPARISON_OPERATOR(QIcon)

private:
    QIconPrivate *d;
};

Q_DECLARE_SHARED(QIcon)
Q_DECLARE_TYPEINFO(QIcon, Q_MOVABLE_TYPE);

#ifdef QT3_SUPPORT
typedef QIcon QIconSet;
#endif

#endif // QICON_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qiconengine.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QICONENGINE_H
#define QICONENGINE_H

#include &lt;QtCore/qglobal.h>
#include &lt;QtGui/qicon.h>

QT_MODULE(Gui)

class Q_GUI_EXPORT QIconEngine
{
public:
    virtual ~QIconEngine();
    virtual void paint(QPainter *painter, const QRect &amp;rect, QIcon::Mode mode, QIcon::State state) = 0;
    virtual QSize actualSize(const QSize &amp;size, QIcon::Mode mode, QIcon::State state);
    virtual QPixmap pixmap(const QSize &amp;size, QIcon::Mode mode, QIcon::State state);

    virtual void addPixmap(const QPixmap &amp;pixmap, QIcon::Mode mode, QIcon::State state);
    virtual void addFile(const QString &amp;fileName, const QSize &amp;size, QIcon::Mode mode, QIcon::State state);

#if 0
    virtual int frameCount(QIcon::Mode fromMode, QIcon::State fromState, QIcon::Mode toMode, QIcon::State toState);
    virtual void paintFrame(QPainter *painter, const QRect &amp;rect, int frameNumber, QIcon::Mode fromMode, QIcon::State fromState, QIcon::Mode toMode, QIcon::State toState);
#endif
};

#endif // QICONENGINE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qiconengineplugin.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QICONENGINEPLUGIN_H
#define QICONENGINEPLUGIN_H

#include &lt;QtCore/qplugin.h>
#include &lt;QtCore/qfactoryinterface.h>

QT_MODULE(Gui)

class QIconEngine;

struct Q_GUI_EXPORT QIconEngineFactoryInterface : public QFactoryInterface
{
    virtual QIconEngine *create(const QString &amp;filename) = 0;
};

#define QIconEngineFactoryInterface_iid "com.trolltech.Qt.QIconEngineFactoryInterface"
Q_DECLARE_INTERFACE(QIconEngineFactoryInterface, QIconEngineFactoryInterface_iid)

class Q_GUI_EXPORT QIconEnginePlugin : public QObject, public QIconEngineFactoryInterface
{
    Q_OBJECT
    Q_INTERFACES(QIconEngineFactoryInterface:QFactoryInterface)
public:
    QIconEnginePlugin(QObject *parent = 0);
    ~QIconEnginePlugin();

    virtual QStringList keys() const = 0;
    virtual QIconEngine *create(const QString &amp;filename) = 0;
};

#endif // QICONENGINEPLUGIN_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qimage.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QIMAGE_H
#define QIMAGE_H

#include &lt;QtGui/qpaintdevice.h>
#include &lt;QtGui/qrgb.h>
#include &lt;QtCore/qbytearray.h>
#include &lt;QtCore/qrect.h>
#include &lt;QtCore/qstring.h>

QT_MODULE(Gui)

class QIODevice;
class QStringList;
class QMatrix;
class QVariant;
template &lt;class T> class QList;
template &lt;class T> class QVector;

struct QImageData;
class QImageDataMisc; // internal
#ifndef QT_NO_IMAGE_TEXT
class Q_GUI_EXPORT QImageTextKeyLang {
public:
    QImageTextKeyLang(const char* k, const char* l) : key(k), lang(l) { }
    QImageTextKeyLang() { }

    QByteArray key;
    QByteArray lang;

    bool operator&lt; (const QImageTextKeyLang&amp; other) const
        { return key &lt; other.key || key==other.key &amp;&amp; lang &lt; other.lang; }
    bool operator== (const QImageTextKeyLang&amp; other) const
        { return key==other.key &amp;&amp; lang==other.lang; }
};
#endif //QT_NO_IMAGE_TEXT


class Q_GUI_EXPORT QImage : public QPaintDevice
{
public:
    enum InvertMode { InvertRgb, InvertRgba };
    enum Format {
        Format_Invalid,
        Format_Mono,
        Format_MonoLSB,
        Format_Indexed8,
        Format_RGB32,
        Format_ARGB32,
        Format_ARGB32_Premultiplied
#ifdef Q_WS_QWS
        , Format_RGB16,
        Format_RGB15,
        Format_Grayscale16,
        Format_Grayscale8,
        Format_Grayscale4,
        Format_Grayscale4LSB,
        Format_Grayscale2,
        Format_Grayscale2LSB
#endif
    };

    QImage();
    QImage(const QSize &amp;size, Format format);
    QImage(int width, int height, Format format);
    QImage(uchar *data, int width, int height, Format format);

#ifndef QT_NO_IMAGEFORMAT_XPM
    explicit QImage(const char * const xpm[]);
#endif
    explicit QImage(const QString &amp;fileName, const char *format = 0);
#ifndef QT_NO_CAST_FROM_ASCII
    explicit QImage(const char *fileName, const char *format = 0);
#endif

    QImage(const QImage &amp;);
    ~QImage();

    QImage &amp;operator=(const QImage &amp;);
    bool isNull() const;

    int devType() const;

    bool operator==(const QImage &amp;) const;
    bool operator!=(const QImage &amp;) const;
    operator QVariant() const;
    void detach();
    bool isDetached() const;

    QImage copy(const QRect &amp;rect = QRect()) const;
    inline QImage copy(int x, int y, int w, int h) const
        { return copy(QRect(x, y, w, h)); }

    Format format() const;

    QImage convertToFormat(Format f, Qt::ImageConversionFlags flags = Qt::AutoColor) const;
    QImage convertToFormat(Format f, const QVector&lt;QRgb> &amp;colorTable, Qt::ImageConversionFlags flags = Qt::AutoColor) const;

    int width() const;
    int height() const;
    QSize size() const;
    QRect rect() const;

    int depth() const;
    int numColors() const;

    QRgb color(int i) const;
    void setColor(int i, QRgb c);
    void setNumColors(int);

    bool allGray() const;
    bool isGrayscale() const;

    uchar *bits();
    const uchar *bits() const;
    int numBytes() const;

    uchar *scanLine(int);
    const uchar *scanLine(int) const;
    int bytesPerLine() const;

    bool valid(int x, int y) const;
    int pixelIndex(int x, int y) const;
    QRgb pixel(int x, int y) const;
    void setPixel(int x, int y, uint index_or_rgb);

    QVector&lt;QRgb> colorTable() const;
    void setColorTable(const QVector&lt;QRgb> colors);

    void fill(uint pixel);

    bool hasAlphaChannel() const;
    void setAlphaChannel(const QImage &amp;alphaChannel);
    QImage alphaChannel() const;
    QImage createAlphaMask(Qt::ImageConversionFlags flags = Qt::AutoColor) const;
#ifndef QT_NO_IMAGE_HEURISTIC_MASK
    QImage createHeuristicMask(bool clipTight = true) const;
#endif

    inline QImage scaled(int w, int h, Qt::AspectRatioMode aspectMode = Qt::IgnoreAspectRatio,
                        Qt::TransformationMode mode = Qt::FastTransformation) const
        { return scaled(QSize(w, h), aspectMode, mode); }
    QImage scaled(const QSize &amp;s, Qt::AspectRatioMode aspectMode = Qt::IgnoreAspectRatio,
                 Qt::TransformationMode mode = Qt::FastTransformation) const;
    QImage scaledToWidth(int w, Qt::TransformationMode mode = Qt::FastTransformation) const;
    QImage scaledToHeight(int h, Qt::TransformationMode mode = Qt::FastTransformation) const;
    QImage transformed(const QMatrix &amp;matrix, Qt::TransformationMode mode = Qt::FastTransformation) const;
    static QMatrix trueMatrix(const QMatrix &amp;, int w, int h);
    QImage mirrored(bool horizontally = false, bool vertically = true) const;
    QImage rgbSwapped() const;
    void invertPixels(InvertMode = InvertRgb);


    bool load(QIODevice *device, const char* format);
    bool load(const QString &amp;fileName, const char* format=0);
    bool loadFromData(const uchar *buf, int len, const char *format = 0);
    inline bool loadFromData(const QByteArray &amp;data, const char* aformat=0)
        { return loadFromData(reinterpret_cast&lt;const uchar *>(data.constData()), data.size(), aformat); }

    bool save(const QString &amp;fileName, const char* format, int quality=-1) const;
    bool save(QIODevice *device, const char* format, int quality=-1) const;

    static QImage fromData(const uchar *data, int size, const char *format = 0);
    inline static QImage fromData(const QByteArray &amp;data, const char *format = 0)
        { return fromData(reinterpret_cast&lt;const uchar *>(data.constData()), data.size(), format); }

    int serialNumber() const;

    QPaintEngine *paintEngine() const;

    // Auxiliary data
    int dotsPerMeterX() const;
    int dotsPerMeterY() const;
    void setDotsPerMeterX(int);
    void setDotsPerMeterY(int);
    QPoint offset() const;
    void setOffset(const QPoint&amp;);
#ifndef QT_NO_IMAGE_TEXT
    QStringList textKeys() const;
    QString text(const QString &amp;key = QString()) const;
    void setText(const QString &amp;key, const QString &amp;value);

    // The following functions are obsolete as of 4.1
    QString text(const char* key, const char* lang=0) const;
    QList&lt;QImageTextKeyLang> textList() const;
    QStringList textLanguages() const;
    QString text(const QImageTextKeyLang&amp;) const;
    void setText(const char* key, const char* lang, const QString&amp;);
#endif

#ifdef QT3_SUPPORT
    enum Endian { BigEndian, LittleEndian, IgnoreEndian };
    QT3_SUPPORT_CONSTRUCTOR QImage(int width, int height, int depth, int numColors=0, Endian bitOrder=IgnoreEndian);
    QT3_SUPPORT_CONSTRUCTOR QImage(const QSize&amp;, int depth, int numColors=0, Endian bitOrder=IgnoreEndian);
    QT3_SUPPORT_CONSTRUCTOR QImage(uchar *data, int w, int h, int depth, const QRgb *colortable, int numColors, Endian bitOrder);
#ifdef Q_WS_QWS
    QT3_SUPPORT_CONSTRUCTOR QImage(uchar *data, int w, int h, int depth, int pbl, const QRgb *colortable, int numColors, Endian bitOrder);
#endif
    inline QT3_SUPPORT Endian bitOrder() const {
        Format f = format();
        return f == Format_Mono ? BigEndian : (f == Format_MonoLSB ? LittleEndian : IgnoreEndian);
    }
    QT3_SUPPORT QImage convertDepth(int, Qt::ImageConversionFlags flags = Qt::AutoColor) const;
    QT3_SUPPORT QImage convertDepthWithPalette(int, QRgb* p, int pc, Qt::ImageConversionFlags flags = Qt::AutoColor) const;
    QT3_SUPPORT QImage convertBitOrder(Endian) const;
    QT3_SUPPORT bool hasAlphaBuffer() const;
    QT3_SUPPORT void setAlphaBuffer(bool);
    QT3_SUPPORT uchar **jumpTable();
    QT3_SUPPORT const uchar * const *jumpTable() const;
    inline QT3_SUPPORT void reset() { *this = QImage(); }
    static inline QT3_SUPPORT Endian systemByteOrder()
        { return QSysInfo::ByteOrder == QSysInfo::BigEndian ? BigEndian : LittleEndian; }
    inline QT3_SUPPORT QImage swapRGB() const { return rgbSwapped(); }
    inline QT3_SUPPORT QImage mirror(bool horizontally = false, bool vertically = true) const
        { return mirrored(horizontally, vertically); }
    QT3_SUPPORT bool create(const QSize&amp;, int depth, int numColors=0, Endian bitOrder=IgnoreEndian);
    QT3_SUPPORT bool create(int width, int height, int depth, int numColors=0, Endian bitOrder=IgnoreEndian);
    inline QT3_SUPPORT QImage xForm(const QMatrix &amp;matrix) const { return transformed(matrix); }
    inline QT3_SUPPORT QImage smoothScale(int w, int h, Qt::AspectRatioMode mode = Qt::IgnoreAspectRatio) const
        { return scaled(QSize(w, h), mode, Qt::SmoothTransformation); }
    inline QImage QT3_SUPPORT smoothScale(const QSize &amp;s, Qt::AspectRatioMode mode = Qt::IgnoreAspectRatio) const
        { return scaled(s, mode, Qt::SmoothTransformation); }
    inline QT3_SUPPORT QImage scaleWidth(int w) const { return scaledToWidth(w); }
    inline QT3_SUPPORT QImage scaleHeight(int h) const { return scaledToHeight(h); }
    inline QT3_SUPPORT void invertPixels(bool invertAlpha) { invertAlpha ? invertPixels(InvertRgba) : invertPixels(InvertRgb); }
    inline QT3_SUPPORT QImage copy(int x, int y, int w, int h, Qt::ImageConversionFlags) const
        { return copy(QRect(x, y, w, h)); }
    inline QT3_SUPPORT QImage copy(const QRect &amp;rect, Qt::ImageConversionFlags) const
        { return copy(rect); }
    static QT3_SUPPORT Endian systemBitOrder();
    inline QT3_SUPPORT_CONSTRUCTOR QImage(const QByteArray &amp;data)
        { d = 0; *this = QImage::fromData(data); }
#endif

protected:
    virtual int metric(PaintDeviceMetric metric) const;

private:
#if defined(Q_WS_QWS) &amp;&amp; !defined(QT3_SUPPORT)
public:
    enum Endian { BigEndian, LittleEndian, IgnoreEndian };
private:
    QImage(uchar *data, int w, int h, int depth, int pbl, const QRgb *colortable, int numColors, Endian bitOrder);
#endif

    QImageData *d;

    friend class QPixmap;
    friend Q_GUI_EXPORT qint64 qt_image_id(const QImage &amp;image);
};

Q_DECLARE_SHARED(QImage)
Q_DECLARE_TYPEINFO(QImage, Q_MOVABLE_TYPE);

// QImage stream functions

#if !defined(QT_NO_DATASTREAM)
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QImage &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QImage &amp;);
#endif

#ifdef QT3_SUPPORT
Q_GUI_EXPORT QT3_SUPPORT void bitBlt(QImage* dst, int dx, int dy, const QImage* src,
                                     int sx=0, int sy=0, int sw=-1, int sh=-1, Qt::ImageConversionFlags flags = Qt::AutoColor);
#endif

#endif // QIMAGE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qimageiohandler.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QIMAGEIOHANDLER_H
#define QIMAGEIOHANDLER_H

#include &lt;QtCore/qplugin.h>
#include &lt;QtCore/qfactoryinterface.h>

QT_MODULE(Gui)

class QImage;
class QRect;
class QSize;
class QVariant;

class QImageIOHandlerPrivate;
class Q_GUI_EXPORT QImageIOHandler
{
    Q_DECLARE_PRIVATE(QImageIOHandler)
public:
    QImageIOHandler();
    virtual ~QImageIOHandler();

    void setDevice(QIODevice *device);
    QIODevice *device() const;

    void setFormat(const QByteArray &amp;format);
    void setFormat(const QByteArray &amp;format) const;
    QByteArray format() const;

    virtual QByteArray name() const;

    virtual bool canRead() const = 0;
    virtual bool read(QImage *image) = 0;
    virtual bool write(const QImage &amp;image);

    enum ImageOption {
        Size,
        ClipRect,
        Description,
        ScaledClipRect,
        ScaledSize,
        CompressionRatio,
        Gamma,
        Quality,
        Name,
        SubType,
        IncrementalReading,
        Endianness,
        Animation,
        BackgroundColor
    };
    virtual QVariant option(ImageOption option) const;
    virtual void setOption(ImageOption option, const QVariant &amp;value);
    virtual bool supportsOption(ImageOption option) const;

    // incremental loading
    virtual bool jumpToNextImage();
    virtual bool jumpToImage(int imageNumber);
    virtual int loopCount() const;
    virtual int imageCount() const;
    virtual int nextImageDelay() const;
    virtual int currentImageNumber() const;
    virtual QRect currentImageRect() const;

protected:
    QImageIOHandler(QImageIOHandlerPrivate &amp;dd);
    QImageIOHandlerPrivate *d_ptr;
};

struct Q_GUI_EXPORT QImageIOHandlerFactoryInterface : public QFactoryInterface
{
    virtual QImageIOHandler *create(QIODevice *device, const QByteArray &amp;format = QByteArray()) const = 0;
};

#define QImageIOHandlerFactoryInterface_iid "com.trolltech.Qt.QImageIOHandlerFactoryInterface"
Q_DECLARE_INTERFACE(QImageIOHandlerFactoryInterface, QImageIOHandlerFactoryInterface_iid)

class Q_GUI_EXPORT QImageIOPlugin : public QObject, public QImageIOHandlerFactoryInterface
{
    Q_OBJECT
    Q_INTERFACES(QImageIOHandlerFactoryInterface:QFactoryInterface)
public:
    explicit QImageIOPlugin(QObject *parent = 0);
    virtual ~QImageIOPlugin();

    enum Capability {
        CanRead = 0x1,
        CanWrite = 0x2,
        CanReadIncremental = 0x4
    };
    Q_DECLARE_FLAGS(Capabilities, Capability)

    virtual Capabilities capabilities(QIODevice *device, const QByteArray &amp;format) const = 0;
    virtual QStringList keys() const = 0;
    virtual QImageIOHandler *create(QIODevice *device, const QByteArray &amp;format = QByteArray()) const = 0;
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QImageIOPlugin::Capabilities)

#endif // QIMAGEIOHANDLER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qimagereader.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QIMAGEREADER_H
#define QIMAGEREADER_H

#include &lt;QtCore/qbytearray.h>

QT_MODULE(Gui)

class QColor;
class QIODevice;
class QImage;
class QRect;
class QSize;
class QStringList;

class QImageReaderPrivate;
class Q_GUI_EXPORT QImageReader
{
public:
    enum ImageReaderError {
        UnknownError,
        FileNotFoundError,
        DeviceError,
        UnsupportedFormatError,
        InvalidDataError
    };

    QImageReader();
    explicit QImageReader(QIODevice *device, const QByteArray &amp;format = QByteArray());
    explicit QImageReader(const QString &amp;fileName, const QByteArray &amp;format = QByteArray());
    ~QImageReader();

    void setFormat(const QByteArray &amp;format);
    QByteArray format() const;

    void setDevice(QIODevice *device);
    QIODevice *device() const;

    void setFileName(const QString &amp;fileName);
    QString fileName() const;

    QSize size() const;

    QStringList textKeys() const;
    QString text(const QString &amp;key) const;

    void setClipRect(const QRect &amp;rect);
    QRect clipRect() const;

    void setScaledSize(const QSize &amp;size);
    QSize scaledSize() const;

    void setScaledClipRect(const QRect &amp;rect);
    QRect scaledClipRect() const;

    void setBackgroundColor(const QColor &amp;color);
    QColor backgroundColor() const;

    bool supportsAnimation() const;

    bool canRead() const;
    QImage read();

    bool jumpToNextImage();
    bool jumpToImage(int imageNumber);
    int loopCount() const;
    int imageCount() const;
    int nextImageDelay() const;
    int currentImageNumber() const;
    QRect currentImageRect() const;

    ImageReaderError error() const;
    QString errorString() const;

    static QByteArray imageFormat(const QString &amp;fileName);
    static QByteArray imageFormat(QIODevice *device);
    static QList&lt;QByteArray> supportedImageFormats();

private:
    Q_DISABLE_COPY(QImageReader)
    QImageReaderPrivate *d;
};

#endif // QIMAGEREADER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qimagewriter.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QIMAGEWRITER_H
#define QIMAGEWRITER_H

#include &lt;QtCore/qbytearray.h>
#include &lt;QtCore/qlist.h>

QT_MODULE(Gui)

class QIODevice;
class QImage;

class QImageWriterPrivate;
class Q_GUI_EXPORT QImageWriter
{
public:
    enum ImageWriterError {
        UnknownError,
        DeviceError,
        UnsupportedFormatError
    };

    QImageWriter();
    explicit QImageWriter(QIODevice *device, const QByteArray &amp;format);
    explicit QImageWriter(const QString &amp;fileName, const QByteArray &amp;format = QByteArray());
    ~QImageWriter();

    void setFormat(const QByteArray &amp;format);
    QByteArray format() const;

    void setDevice(QIODevice *device);
    QIODevice *device() const;

    void setFileName(const QString &amp;fileName);
    QString fileName() const;

    void setQuality(int quality);
    int quality() const;

    void setGamma(float gamma);
    float gamma() const;

    // Obsolete as of 4.1
    void setDescription(const QString &amp;description);
    QString description() const;

    void setText(const QString &amp;key, const QString &amp;text);
    
    bool canWrite() const;
    bool write(const QImage &amp;image);

    ImageWriterError error() const;
    QString errorString() const;

    static QList&lt;QByteArray> supportedImageFormats();

private:
    Q_DISABLE_COPY(QImageWriter)
    QImageWriterPrivate *d;
};

#endif // QIMAGEWRITER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qinputcontext.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/****************************************************************************
**
** Definition of QInputContext class
**
** Copyright (C) 2003-2004 immodule for Qt Project.  All rights reserved.
**
** This file is written to contribute to Trolltech AS under their own
** licence. You may use this file under your Qt license. Following
** description is copied from their original file headers. Contact
** immodule-qt@freedesktop.org if any conditions of this licensing are
** not clear to you.
**
****************************************************************************/

#ifndef QINPUTCONTEXT_H
#define QINPUTCONTEXT_H

#include &lt;QtCore/qobject.h>
#include &lt;QtCore/qglobal.h>
#include &lt;QtGui/qevent.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtCore/qlist.h>
#include &lt;QtGui/qaction.h>

#ifndef QT_NO_IM

QT_MODULE(Gui)

class QWidget;
class QFont;
class QPopupMenu;
class QInputContextPrivate;


class Q_GUI_EXPORT QInputContext : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QInputContext)
public:
    explicit QInputContext(QObject* parent = 0);
    virtual ~QInputContext();

    virtual QString identifierName() = 0;
    virtual QString language() = 0;

    virtual void reset() = 0;
    virtual void update();

    virtual void mouseHandler( int x, QMouseEvent *event);
    virtual QFont font() const;
    virtual bool isComposing() const = 0;

    QWidget *focusWidget() const;
    virtual void setFocusWidget( QWidget *w );

    virtual void widgetDestroyed(QWidget *w);

    virtual QList&lt;QAction *> actions();

#if defined(Q_WS_X11)
    virtual bool x11FilterEvent( QWidget *keywidget, XEvent *event );
#endif // Q_WS_X11
    virtual bool filterEvent( const QEvent *event );

    void sendEvent(const QInputMethodEvent &amp;event);

    enum StandardFormat {
        PreeditFormat,
        SelectionFormat
    };
    QTextFormat standardFormat(StandardFormat s) const;
private:
    friend class QWidget;
    friend class QInputContextFactory;
    friend class QApplication;

private:   // Disabled copy constructor and operator=
    QInputContext( const QInputContext &amp; );
    QInputContext &amp;operator=( const QInputContext &amp; );

};

#endif //Q_NO_IM

#endif // QINPUTCONTEXT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qinputcontextfactory.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/****************************************************************************
**
** Definition of QInputContextFactory class
**
** Copyright (C) 2003-2004 immodule for Qt Project.  All rights reserved.
**
** This file is written to contribute to Trolltech AS under their own
** licence. You may use this file under your Qt license. Following
** description is copied from their original file headers. Contact
** immodule-qt@freedesktop.org if any conditions of this licensing are
** not clear to you.
**
****************************************************************************/

#ifndef QINPUTCONTEXTFACTORY_H
#define QINPUTCONTEXTFACTORY_H

#include &lt;QtCore/qstringlist.h>

QT_MODULE(Gui)

#ifndef QT_NO_IM

class QInputContext;
class QWidget;

class Q_GUI_EXPORT QInputContextFactory
{
public:
    static QStringList keys();
    static QInputContext *create( const QString &amp;key, QObject *parent ); // should be a toplevel widget
    static QStringList languages( const QString &amp;key );
    static QString displayName( const QString &amp;key );
    static QString description( const QString &amp;key );
};

#endif // QT_NO_IM

#endif // QINPUTCONTEXTFACTORY_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qinputcontextplugin.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/****************************************************************************
**
** Definition of QInputContextPlugin class
**
** Copyright (C) 2003-2004 immodule for Qt Project.  All rights reserved.
**
** This file is written to contribute to Trolltech AS under their own
** licence. You may use this file under your Qt license. Following
** description is copied from their original file headers. Contact
** immodule-qt@freedesktop.org if any conditions of this licensing are
** not clear to you.
**
****************************************************************************/

#ifndef QINPUTCONTEXTPLUGIN_H
#define QINPUTCONTEXTPLUGIN_H

#include &lt;QtCore/qplugin.h>
#include &lt;QtCore/qfactoryinterface.h>
#include &lt;QtCore/qstringlist.h>

QT_MODULE(Gui)

#if !defined(QT_NO_IM) &amp;&amp; !defined(QT_NO_LIBRARY)

class QInputContext;
class QInputContextPluginPrivate;

struct Q_GUI_EXPORT QInputContextFactoryInterface : public QFactoryInterface
{
    virtual QInputContext *create( const QString &amp;key ) = 0;
    virtual QStringList languages( const QString &amp;key ) = 0;
    virtual QString displayName( const QString &amp;key ) = 0;
    virtual QString description( const QString &amp;key ) = 0;
};

#define QInputContextFactoryInterface_iid "com.trolltech.Qt.QInputContextFactoryInterface"
Q_DECLARE_INTERFACE(QInputContextFactoryInterface, QInputContextFactoryInterface_iid)

class Q_GUI_EXPORT QInputContextPlugin : public QObject, public QInputContextFactoryInterface
{
    Q_OBJECT
    Q_INTERFACES(QInputContextFactoryInterface:QFactoryInterface)
public:
    explicit QInputContextPlugin(QObject *parent = 0);
    ~QInputContextPlugin();

    virtual QStringList keys() const = 0;
    virtual QInputContext *create( const QString &amp;key ) = 0;
    virtual QStringList languages( const QString &amp;key ) = 0;
    virtual QString displayName( const QString &amp;key ) = 0;
    virtual QString description( const QString &amp;key ) = 0;
};

#endif // QT_NO_IM

#endif // QINPUTCONTEXTPLUGIN_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qinputdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QINPUTDIALOG_H
#define QINPUTDIALOG_H

#include &lt;QtGui/qdialog.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtGui/qlineedit.h>

QT_MODULE(Gui)

#ifndef QT_NO_INPUTDIALOG

class QSpinBox;
class QComboBox;
class QInputDialogPrivate;

class Q_GUI_EXPORT QInputDialog : public QDialog
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QInputDialog)

private:
    enum Type { LineEdit, SpinBox, DoubleSpinBox, ComboBox, EditableComboBox };

    QInputDialog(const QString &amp;label, QWidget* parent, Type type, Qt::WFlags f);
    ~QInputDialog();

public:
    static QString getText(QWidget *parent, const QString &amp;title, const QString &amp;label,
                           QLineEdit::EchoMode echo = QLineEdit::Normal,
                           const QString &amp;text = QString(), bool *ok = 0, Qt::WFlags f = 0);
    static int getInteger(QWidget *parent, const QString &amp;title, const QString &amp;label, int value = 0,
                          int minValue = -2147483647, int maxValue = 2147483647,
                          int step = 1, bool *ok = 0, Qt::WFlags f = 0);
    static double getDouble(QWidget *parent, const QString &amp;title, const QString &amp;label, double value = 0,
                            double minValue = -2147483647, double maxValue = 2147483647,
                            int decimals = 1, bool *ok = 0, Qt::WFlags f = 0);
    static QString getItem(QWidget *parent, const QString &amp;title, const QString &amp;label, const QStringList &amp;list,
                           int current = 0, bool editable = true, bool *ok = 0,Qt::WFlags f = 0);

#ifdef QT3_SUPPORT
    inline static QT3_SUPPORT QString getText(const QString &amp;title, const QString &amp;label,
                                              QLineEdit::EchoMode echo = QLineEdit::Normal,
                                              const QString &amp;text = QString(), bool *ok = 0,
                                              QWidget *parent = 0, const char * = 0, Qt::WFlags f = 0)
        { return getText(parent, title, label, echo, text, ok, f); }
    inline static QT3_SUPPORT int getInteger(const QString &amp;title, const QString &amp;label, int value = 0,
                                             int minValue = -2147483647, int maxValue = 2147483647,
                                             int step = 1, bool *ok = 0,
                                             QWidget *parent = 0, const char * = 0, Qt::WFlags f = 0)
        { return getInteger(parent, title, label, value, minValue, maxValue, step, ok, f); }
    inline static QT3_SUPPORT double getDouble(const QString &amp;title, const QString &amp;label, double value = 0,
                                               double minValue = -2147483647, double maxValue = 2147483647,
                                               int decimals = 1, bool *ok = 0,
                                               QWidget *parent = 0, const char * = 0, Qt::WFlags f = 0)
        { return getDouble(parent, title, label, value, minValue, maxValue, decimals, ok, f); }
    inline static QT3_SUPPORT QString getItem(const QString &amp;title, const QString &amp;label, const QStringList &amp;list,
                                              int current = 0, bool editable = true, bool *ok = 0,
                                              QWidget *parent = 0, const char * = 0, Qt::WFlags f = 0)
        { return getItem(parent, title, label, list, current, editable, ok, f); }
#endif

private:
    Q_DISABLE_COPY(QInputDialog)
};

#endif // QT_NO_INPUTDIALOG

#endif // QINPUTDIALOG_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qitemdelegate.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QITEMDELEGATE_H
#define QITEMDELEGATE_H

#include &lt;QtGui/qabstractitemdelegate.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtGui/qpixmap.h>
#include &lt;QtCore/qvariant.h>

QT_MODULE(Gui)

#ifndef QT_NO_ITEMVIEWS
class QItemDelegatePrivate;
class QItemEditorFactory;

class Q_GUI_EXPORT QItemDelegate : public QAbstractItemDelegate
{
    Q_OBJECT

public:
    explicit QItemDelegate(QObject *parent = 0);
    ~QItemDelegate();

    // painting
    void paint(QPainter *painter,
               const QStyleOptionViewItem &amp;option,
               const QModelIndex &amp;index) const;
    QSize sizeHint(const QStyleOptionViewItem &amp;option,
                   const QModelIndex &amp;index) const;

    // editing
    QWidget *createEditor(QWidget *parent,
                          const QStyleOptionViewItem &amp;option,
                          const QModelIndex &amp;index) const;

    void setEditorData(QWidget *editor, const QModelIndex &amp;index) const;
    void setModelData(QWidget *editor, QAbstractItemModel *model, const QModelIndex &amp;index) const;

    void updateEditorGeometry(QWidget *editor,
                              const QStyleOptionViewItem &amp;option,
                              const QModelIndex &amp;index) const;

    // editor factory
    QItemEditorFactory *itemEditorFactory() const;
    void setItemEditorFactory(QItemEditorFactory *factory);

protected:
    virtual void drawDisplay(QPainter *painter, const QStyleOptionViewItem &amp;option,
                             const QRect &amp;rect, const QString &amp;text) const;
    virtual void drawDecoration(QPainter *painter, const QStyleOptionViewItem &amp;option,
                                const QRect &amp;rect, const QPixmap &amp;pixmap) const;
    virtual void drawFocus(QPainter *painter, const QStyleOptionViewItem &amp;option,
                           const QRect &amp;rect) const;
    virtual void drawCheck(QPainter *painter, const QStyleOptionViewItem &amp;option,
                           const QRect &amp;rect, Qt::CheckState state) const;

    void doLayout(const QStyleOptionViewItem &amp;option,
                  QRect *checkRect, QRect *iconRect, QRect *textRect, bool hint) const;
    QPixmap decoration(const QStyleOptionViewItem &amp;option, const QVariant &amp;variant) const;
    QPixmap *selected(const QPixmap &amp;pixmap, const QPalette &amp;palette, bool enabled) const;
    QRect check(const QStyleOptionViewItem &amp;option, const QRect &amp;bounding,
                const QVariant &amp;variant) const;

    bool eventFilter(QObject *object, QEvent *event);
    bool editorEvent(QEvent *event, QAbstractItemModel *model,
                     const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index);

private:
    Q_DECLARE_PRIVATE(QItemDelegate)
    Q_DISABLE_COPY(QItemDelegate)
};

#endif // QT_NO_ITEMVIEWS

#endif // QITEMDELEGATE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qitemeditorfactory.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QITEMEDITORFACTORY_H
#define QITEMEDITORFACTORY_H

#include &lt;QtCore/qbytearray.h>
#include &lt;QtCore/qhash.h>
#include &lt;QtCore/qvariant.h>

QT_MODULE(Gui)

#ifndef QT_NO_ITEMVIEWS

class QWidget;

class Q_GUI_EXPORT QItemEditorCreatorBase
{
public:
    virtual ~QItemEditorCreatorBase() {}

    virtual QWidget *createWidget(QWidget *parent) const = 0;
    virtual QByteArray valuePropertyName() const = 0;
};

template &lt;class T>
class QItemEditorCreator : public QItemEditorCreatorBase
{
public:
    inline QItemEditorCreator(const QByteArray &amp;valuePropertyName);
    inline QWidget *createWidget(QWidget *parent) const { return new T(parent); }
    inline QByteArray valuePropertyName() const { return propertyName; }

private:
    QByteArray propertyName;
};

template &lt;class T>
Q_INLINE_TEMPLATE QItemEditorCreator&lt;T>::QItemEditorCreator(const QByteArray &amp;avaluePropertyName)
    : propertyName(avaluePropertyName) {}

class Q_GUI_EXPORT QItemEditorFactory
{
public:
    inline QItemEditorFactory() {}
    virtual ~QItemEditorFactory();

    virtual QWidget *createEditor(QVariant::Type type, QWidget *parent) const;
    virtual QByteArray valuePropertyName(QVariant::Type type) const;

    void registerEditor(QVariant::Type type, QItemEditorCreatorBase *creator);

    static const QItemEditorFactory *defaultFactory();
    static void setDefaultFactory(QItemEditorFactory *factory);

private:
    QHash&lt;QVariant::Type, QItemEditorCreatorBase *> creatorMap;
};

#endif // QT_NO_ITEMVIEWS

#endif // QITEMEDITORFACTORY_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qitemselectionmodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QITEMSELECTIONMODEL_H
#define QITEMSELECTIONMODEL_H

#include &lt;QtCore/qset.h>
#include &lt;QtCore/qvector.h>
#include &lt;QtCore/qlist.h>
#include &lt;QtCore/qabstractitemmodel.h>

QT_MODULE(Gui)

#ifndef QT_NO_ITEMVIEWS

class Q_GUI_EXPORT QItemSelectionRange
{

public:
    inline QItemSelectionRange() {}
    inline QItemSelectionRange(const QItemSelectionRange &amp;other)
        : tl(other.tl), br(other.br) {}
    inline QItemSelectionRange(const QModelIndex &amp;topLeft, const QModelIndex &amp;bottomRight);
    explicit inline QItemSelectionRange(const QModelIndex &amp;index)
        { tl = index; br = tl; }

    inline int top() const { return tl.row(); }
    inline int left() const { return tl.column(); }
    inline int bottom() const { return br.row(); }
    inline int right() const { return br.column(); }
    inline int width() const { return br.column() - tl.column() + 1; }
    inline int height() const { return br.row() - tl.row() + 1; }

    inline QModelIndex topLeft() const { return QModelIndex(tl); }
    inline QModelIndex bottomRight() const { return QModelIndex(br); }
    inline QModelIndex parent() const { return tl.parent(); }
    inline const QAbstractItemModel *model() const { return tl.model(); }

    inline bool contains(const QModelIndex &amp;index) const
    {
        return (parent() == index.parent()
                &amp;&amp; tl.row() &lt;= index.row() &amp;&amp; tl.column() &lt;= index.column()
                &amp;&amp; br.row() >= index.row() &amp;&amp; br.column() >= index.column());
    }

    bool intersects(const QItemSelectionRange &amp;other) const;
    QItemSelectionRange intersect(const QItemSelectionRange &amp;other) const;

    inline bool operator==(const QItemSelectionRange &amp;other) const
        { return (tl == other.tl &amp;&amp; br == other.br); }
    inline bool operator!=(const QItemSelectionRange &amp;other) const
        { return !operator==(other); }

    inline bool isValid() const
    {
        return (tl.isValid() &amp;&amp; br.isValid() &amp;&amp; tl.parent() == br.parent()
                &amp;&amp; top() &lt;= bottom() &amp;&amp; left() &lt;= right());
    }

    QModelIndexList indexes() const;

private:
    QPersistentModelIndex tl, br;
};
Q_DECLARE_TYPEINFO(QItemSelectionRange, Q_MOVABLE_TYPE);

inline QItemSelectionRange::QItemSelectionRange(const QModelIndex &amp;atopLeft,
                                                const QModelIndex &amp;abottomRight)
{ tl = atopLeft; br = abottomRight; }

class QItemSelection;
class QItemSelectionModelPrivate;

class Q_GUI_EXPORT QItemSelectionModel : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QItemSelectionModel)
    Q_FLAGS(SelectionFlags)

public:

    enum SelectionFlag {
        NoUpdate       = 0x0000,
        Clear          = 0x0001,
        Select         = 0x0002,
        Deselect       = 0x0004,
        Toggle         = 0x0008,
        Current        = 0x0010,
        Rows           = 0x0020,
        Columns        = 0x0040,
        SelectCurrent  = Select | Current,
        ToggleCurrent  = Toggle | Current,
        ClearAndSelect = Clear | Select
    };

    Q_DECLARE_FLAGS(SelectionFlags, SelectionFlag)

    explicit QItemSelectionModel(QAbstractItemModel *model);
    explicit QItemSelectionModel(QAbstractItemModel *model, QObject *parent);
    virtual ~QItemSelectionModel();

    QModelIndex currentIndex() const;

    bool isSelected(const QModelIndex &amp;index) const;
    bool isRowSelected(int row, const QModelIndex &amp;parent) const;
    bool isColumnSelected(int column, const QModelIndex &amp;parent) const;

    bool rowIntersectsSelection(int row, const QModelIndex &amp;parent) const;
    bool columnIntersectsSelection(int column, const QModelIndex &amp;parent) const;

    QModelIndexList selectedIndexes() const;
    const QItemSelection selection() const;

    const QAbstractItemModel *model() const;

public Q_SLOTS:
    void setCurrentIndex(const QModelIndex &amp;index, QItemSelectionModel::SelectionFlags command);
    virtual void select(const QModelIndex &amp;index, QItemSelectionModel::SelectionFlags command);
    virtual void select(const QItemSelection &amp;selection, QItemSelectionModel::SelectionFlags command);
    virtual void clear();
    virtual void reset();

Q_SIGNALS:
    void selectionChanged(const QItemSelection &amp;selected, const QItemSelection &amp;deselected);
    void currentChanged(const QModelIndex &amp;current, const QModelIndex &amp;previous);
    void currentRowChanged(const QModelIndex &amp;current, const QModelIndex &amp;previous);
    void currentColumnChanged(const QModelIndex &amp;current, const QModelIndex &amp;previous);

protected:
    QItemSelectionModel(QItemSelectionModelPrivate &amp;dd, QAbstractItemModel *model);
    void emitSelectionChanged(const QItemSelection &amp;newSelection, const QItemSelection &amp;oldSelection);

private:
    Q_DISABLE_COPY(QItemSelectionModel)
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QItemSelectionModel::SelectionFlags)

// dummy implentation of qHash() necessary for instantiating QList&lt;QItemSelectionRange>::toSet() with MSVC
inline uint qHash(const QItemSelectionRange &amp;) { return 0; }

class Q_GUI_EXPORT QItemSelection : public QList&lt;QItemSelectionRange>
{
public:
    QItemSelection() {}
    QItemSelection(const QModelIndex &amp;topLeft, const QModelIndex &amp;bottomRight);
    void select(const QModelIndex &amp;topLeft, const QModelIndex &amp;bottomRight);
    bool contains(const QModelIndex &amp;index) const;
    QModelIndexList indexes() const;
    void merge(const QItemSelection &amp;other, QItemSelectionModel::SelectionFlags command);
    static void split(const QItemSelectionRange &amp;range,
                      const QItemSelectionRange &amp;other,
                      QItemSelection *result);
};

#ifndef QT_NO_DEBUG_STREAM
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug, const QItemSelectionRange &amp;);
#endif

#endif // QT_NO_ITEMVIEWS

#endif // QITEMSELECTIONMODEL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qkeysequence.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QKEYSEQUENCE_H
#define QKEYSEQUENCE_H

#include &lt;QtCore/qnamespace.h>
#include &lt;QtCore/qstring.h>

QT_MODULE(Gui)

#ifndef QT_NO_SHORTCUT

/*****************************************************************************
  QKeySequence stream functions
 *****************************************************************************/
#ifndef QT_NO_DATASTREAM
class QKeySequence;
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;in, const QKeySequence &amp;ks);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;out, QKeySequence &amp;ks);
#endif

class QVariant;
class QKeySequencePrivate;

class Q_GUI_EXPORT QKeySequence
{
public:
    QKeySequence();
    QKeySequence(const QString &amp;key);
    QKeySequence(int k1, int k2 = 0, int k3 = 0, int k4 = 0);
    QKeySequence(const QKeySequence &amp;ks);
    ~QKeySequence();

    uint count() const;
    bool isEmpty() const;

    enum SequenceMatch {
        NoMatch,
        PartialMatch,
        ExactMatch
#ifdef QT3_SUPPORT
        , Identical = ExactMatch
#endif
    };

    enum SequenceFormat {
        NativeText,
        PortableText
    };

    QString toString(SequenceFormat format = PortableText) const;
    static QKeySequence fromString(const QString &amp;str, SequenceFormat format = PortableText);

    SequenceMatch matches(const QKeySequence &amp;seq) const;
    static QKeySequence mnemonic(const QString &amp;text);

    // ### Qt 5: kill 'operator QString' - it's evil (ask Trenton or Jasmin if you need more reasons)
    operator QString() const;
    operator QVariant() const;
    operator int() const;
    int operator[](uint i) const;
    QKeySequence &amp;operator=(const QKeySequence &amp;other);
    bool operator==(const QKeySequence &amp;other) const;
    inline bool operator!= (const QKeySequence &amp;other) const
    { return !(*this == other); }
    bool operator&lt; (const QKeySequence &amp;ks) const;
    inline bool operator> (const QKeySequence &amp;other) const
    { return other &lt; *this; }
    inline bool operator&lt;= (const QKeySequence &amp;other) const
    { return !(other &lt; *this); }
    inline bool operator>= (const QKeySequence &amp;other) const
    { return !(*this &lt; other); }

    bool isDetached() const;
private:
    static int decodeString(const QString &amp;ks);
    static QString encodeString(int key);
    int assign(const QString &amp;str);
    void setKey(int key, int index);

    QKeySequencePrivate *d;

    friend Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;in, const QKeySequence &amp;ks);
    friend Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;in, QKeySequence &amp;ks);
    friend class Q3AccelManager;
    friend class QShortcutMap;
    friend class QShortcut;
};
Q_DECLARE_TYPEINFO(QKeySequence, Q_MOVABLE_TYPE);
Q_DECLARE_SHARED(QKeySequence)

#ifndef QT_NO_DEBUG_STREAM
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug, const QKeySequence &amp;);
#endif

#else

class Q_GUI_EXPORT QKeySequence
{
public:
    QKeySequence() {}
    QKeySequence(int) {}
};

#endif // QT_NO_SHORTCUT

#endif // QKEYSEQUENCE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlabel.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QLABEL_H
#define QLABEL_H

#include &lt;QtGui/qframe.h>

QT_MODULE(Gui)

class QLabelPrivate;

class Q_GUI_EXPORT QLabel : public QFrame
{
    Q_OBJECT
    Q_PROPERTY(QString text READ text WRITE setText)
    Q_PROPERTY(Qt::TextFormat textFormat READ textFormat WRITE setTextFormat)
    Q_PROPERTY(QPixmap pixmap READ pixmap WRITE setPixmap)
    Q_PROPERTY(bool scaledContents READ hasScaledContents WRITE setScaledContents)
    Q_PROPERTY(Qt::Alignment alignment READ alignment WRITE setAlignment)
    Q_PROPERTY(bool wordWrap READ wordWrap WRITE setWordWrap)
    Q_PROPERTY(int margin READ margin WRITE setMargin)
    Q_PROPERTY(int indent READ indent WRITE setIndent)

public:
    explicit QLabel(QWidget *parent=0, Qt::WFlags f=0);
    explicit QLabel(const QString &amp;text, QWidget *parent=0, Qt::WFlags f=0);
    ~QLabel();

    QString text() const;
    const QPixmap *pixmap() const;
#ifndef QT_NO_PICTURE
    const QPicture *picture() const;
#endif
#ifndef QT_NO_MOVIE
    QMovie *movie() const;
#endif

    Qt::TextFormat textFormat() const;
    void setTextFormat(Qt::TextFormat);

    Qt::Alignment alignment() const;
    void setAlignment(Qt::Alignment);

    void setWordWrap(bool on);
    bool wordWrap() const;

    int indent() const;
    void setIndent(int);

    int margin() const;
    void setMargin(int);

    bool hasScaledContents() const;
    void setScaledContents(bool);
    QSize sizeHint() const;
    QSize minimumSizeHint() const;
#ifndef QT_NO_SHORTCUT
    void setBuddy(QWidget *);
    QWidget *buddy() const;
#endif
    int heightForWidth(int) const;

public Q_SLOTS:
    void setText(const QString &amp;);
    void setPixmap(const QPixmap &amp;);
#ifndef QT_NO_PICTURE
    void setPicture(const QPicture &amp;);
#endif
#ifndef QT_NO_MOVIE
    void setMovie(QMovie *movie);
#endif
    void setNum(int);
    void setNum(double);
    void clear();

protected:
    bool event(QEvent *e);
    void paintEvent(QPaintEvent *);
    void changeEvent(QEvent *);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QLabel(QWidget *parent, const char* name, Qt::WFlags f=0);
    QT3_SUPPORT_CONSTRUCTOR QLabel(const QString &amp;text, QWidget *parent, const char* name,
           Qt::WFlags f=0);
    QT3_SUPPORT_CONSTRUCTOR QLabel(QWidget *buddy, const QString &amp;,
           QWidget *parent=0, const char* name=0, Qt::WFlags f=0);
    QT3_SUPPORT void setAlignment(int alignment);

    // don't mark the next function with QT3_SUPPORT
    inline void setAlignment(Qt::AlignmentFlag flag) { setAlignment((Qt::Alignment)flag); }
#endif

private:
    Q_DISABLE_COPY(QLabel)
    Q_DECLARE_PRIVATE(QLabel)
#ifndef QT_NO_MOVIE
    Q_PRIVATE_SLOT(d_func(), void movieUpdated(const QRect&amp;))
    Q_PRIVATE_SLOT(d_func(), void movieResized(const QSize&amp;))
#endif

    friend class QTipLabel;
};

#endif // QLABEL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QLAYOUT_H
#define QLAYOUT_H

#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qlayoutitem.h>
#include &lt;QtGui/qsizepolicy.h>
#include &lt;QtCore/qrect.h>

#include &lt;limits.h>

QT_MODULE(Gui)

class QLayout;
class QSize;

#ifdef QT3_SUPPORT
class Q_GUI_EXPORT QLayoutIterator
{
public:
    inline QT3_SUPPORT_CONSTRUCTOR QLayoutIterator(QLayout *i) : layout(i), index(0) {}
    inline QLayoutIterator(const QLayoutIterator &amp;i)
	: layout(i.layout), index(i.index) {}
    inline QLayoutIterator &amp;operator=(const QLayoutIterator &amp;i) {
        layout = i.layout;
        index = i.index;
        return *this;
    }
    inline QT3_SUPPORT QLayoutItem *operator++();
    inline QT3_SUPPORT QLayoutItem *current();
    inline QT3_SUPPORT QLayoutItem *takeCurrent();
    inline QT3_SUPPORT void deleteCurrent();

private:
    // hack to avoid deprecated warning
    friend class QLayout;
    inline QLayoutIterator(QLayout *i, bool) : layout(i), index(0) {}
    QLayout *layout;
    int index;
};
#endif

class QLayoutPrivate;

class Q_GUI_EXPORT QLayout : public QObject, public QLayoutItem
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QLayout)

    Q_ENUMS(SizeConstraint)
    Q_PROPERTY(int margin READ margin WRITE setMargin)
    Q_PROPERTY(int spacing READ spacing WRITE setSpacing)
    Q_PROPERTY(SizeConstraint sizeConstraint READ sizeConstraint WRITE setSizeConstraint)

public:
    enum SizeConstraint {
        SetDefaultConstraint,
        SetNoConstraint,
        SetMinimumSize,
        SetFixedSize,
        SetMaximumSize,
        SetMinAndMaxSize
#if defined(QT3_SUPPORT) &amp;&amp; !defined(Q_MOC_RUN)
        , Auto = SetDefaultConstraint,
        FreeResize = SetNoConstraint,
        Minimum = SetMinimumSize,
        Fixed = SetFixedSize
#endif
    };

    QLayout(QWidget *parent);
    QLayout();
    ~QLayout();

    int margin() const;
    int spacing() const;

    void setMargin(int);
    void setSpacing(int);

    bool setAlignment(QWidget *w, Qt::Alignment alignment);
    bool setAlignment(QLayout *l, Qt::Alignment alignment);
#ifdef Q_NO_USING_KEYWORD
    inline void setAlignment(Qt::Alignment alignment) { QLayoutItem::setAlignment(alignment); }
#else
    using QLayoutItem::setAlignment;
#endif

    void setSizeConstraint(SizeConstraint);
    SizeConstraint sizeConstraint() const;
#ifdef QT3_SUPPORT
    inline QT3_SUPPORT void setResizeMode(SizeConstraint s) {setSizeConstraint(s);}
    inline QT3_SUPPORT SizeConstraint resizeMode() const {return sizeConstraint();}
#endif
    void setMenuBar(QWidget *w);
    QWidget *menuBar() const;

    QWidget *parentWidget() const;

    void invalidate();
    QRect geometry() const;
    bool activate();
    void update();

    void addWidget(QWidget *w);
    virtual void addItem(QLayoutItem *) = 0;

    void removeWidget(QWidget *w);
    void removeItem(QLayoutItem *);

    Qt::Orientations expandingDirections() const;
    QSize minimumSize() const;
    QSize maximumSize() const;
    void setGeometry(const QRect&amp;) = 0;
    virtual QLayoutItem *itemAt(int index) const = 0;
    virtual QLayoutItem *takeAt(int index) = 0;
    virtual int indexOf(QWidget *) const;
    virtual int count() const = 0;
    bool isEmpty() const;

    int totalHeightForWidth(int w) const;
    QSize totalMinimumSize() const;
    QSize totalMaximumSize() const;
    QSize totalSizeHint() const;
    QLayout *layout();

    void setEnabled(bool);
    bool isEnabled() const;

#ifdef QT3_SUPPORT
    QT3_SUPPORT void freeze(int w=0, int h=0);
    QT3_SUPPORT bool isTopLevel() const;
#endif

    static QSize closestAcceptableSize(const QWidget *w, const QSize &amp;s);

protected:
    void widgetEvent(QEvent *);
    void childEvent(QChildEvent *e);
    void addChildLayout(QLayout *l);
    void addChildWidget(QWidget *w);
#ifdef QT3_SUPPORT
    QT3_SUPPORT void deleteAllItems();
#endif

    QRect alignmentRect(const QRect&amp;) const;
protected:
    QLayout(QLayoutPrivate &amp;d, QLayout*, QWidget*);

private:
    Q_DISABLE_COPY(QLayout)

    static void activateRecursiveHelper(QLayoutItem *item);

    friend class QApplicationPrivate;
    friend class QWidget;

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QLayout(QWidget *parent, int margin, int spacing = -1,
                             const char *name = 0);
    QT3_SUPPORT_CONSTRUCTOR QLayout(QLayout *parentLayout, int spacing = -1, const char *name = 0);
    QT3_SUPPORT_CONSTRUCTOR QLayout(int spacing, const char *name = 0);
    inline QT3_SUPPORT QWidget *mainWidget() const { return parentWidget(); }
    inline QT3_SUPPORT void remove(QWidget *w) { removeWidget(w); }
    inline QT3_SUPPORT void add(QWidget *w) { addWidget(w); }

    QT3_SUPPORT void setAutoAdd(bool a);
    QT3_SUPPORT bool autoAdd() const;
    inline QT3_SUPPORT QLayoutIterator iterator() { return QLayoutIterator(this,true); }

    inline QT3_SUPPORT int defaultBorder() const { return spacing(); }
#endif
};

#ifdef QT3_SUPPORT
inline QLayoutItem *QLayoutIterator::operator++() { return layout->itemAt(++index); }
inline QLayoutItem *QLayoutIterator::current() { return layout->itemAt(index); }
inline QLayoutItem *QLayoutIterator::takeCurrent() { return layout->takeAt(index); }
inline void QLayoutIterator::deleteCurrent() { delete  layout->takeAt(index); }
#endif

//### support old includes
#if 1 //def QT3_SUPPORT
#include &lt;QtGui/qboxlayout.h>
#include &lt;QtGui/qgridlayout.h>
#endif

#endif // QLAYOUT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlayoutitem.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QLAYOUTITEM_H
#define QLAYOUTITEM_H

#include &lt;QtGui/qsizepolicy.h>
#include &lt;QtCore/qrect.h>

#include &lt;limits.h>

QT_MODULE(Gui)

static const int QLAYOUTSIZE_MAX = INT_MAX/256/16;

class QLayout;
class QLayoutItem;
class QSpacerItem;
class QWidget;
class QSize;

class Q_GUI_EXPORT QLayoutItem
{
public:
    inline explicit QLayoutItem(Qt::Alignment alignment = 0);
    virtual ~QLayoutItem();
    virtual QSize sizeHint() const = 0;
    virtual QSize minimumSize() const = 0;
    virtual QSize maximumSize() const = 0;
    virtual Qt::Orientations expandingDirections() const = 0;
    virtual void setGeometry(const QRect&amp;) = 0;
    virtual QRect geometry() const = 0;
    virtual bool isEmpty() const = 0;
    virtual bool hasHeightForWidth() const;
    virtual int heightForWidth(int) const;
    virtual int minimumHeightForWidth(int) const;
    virtual void invalidate();

    virtual QWidget *widget();
    virtual QLayout *layout();
    virtual QSpacerItem *spacerItem();

    Qt::Alignment alignment() const { return align; }
    void setAlignment(Qt::Alignment a);

protected:
    Qt::Alignment align;
};

inline QLayoutItem::QLayoutItem(Qt::Alignment aalignment)
    : align(aalignment) { }

class Q_GUI_EXPORT QSpacerItem : public QLayoutItem
{
public:
    QSpacerItem(int w, int h,
                 QSizePolicy::Policy hData = QSizePolicy::Minimum,
                 QSizePolicy::Policy vData = QSizePolicy::Minimum)
        : width(w), height(h), sizeP(hData, vData) { }
    void changeSize(int w, int h,
                     QSizePolicy::Policy hData = QSizePolicy::Minimum,
                     QSizePolicy::Policy vData = QSizePolicy::Minimum);
    QSize sizeHint() const;
    QSize minimumSize() const;
    QSize maximumSize() const;
    Qt::Orientations expandingDirections() const;
    bool isEmpty() const;
    void setGeometry(const QRect&amp;);
    QRect geometry() const;
    QSpacerItem *spacerItem();

private:
    int width;
    int height;
    QSizePolicy sizeP;
    QRect rect;
};

class Q_GUI_EXPORT QWidgetItem : public QLayoutItem
{
public:
    explicit QWidgetItem(QWidget *w) : wid(w) { }
    QSize sizeHint() const;
    QSize minimumSize() const;
    QSize maximumSize() const;
    Qt::Orientations expandingDirections() const;
    bool isEmpty() const;
    void setGeometry(const QRect&amp;);
    QRect geometry() const;
    virtual QWidget *widget();

    bool hasHeightForWidth() const;
    int heightForWidth(int) const;

private:
    QWidget *wid;
};

#endif // QLAYOUTITEM_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlcdnumber.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QLCDNUMBER_H
#define QLCDNUMBER_H

#include &lt;QtGui/qframe.h>
#include &lt;QtCore/qbitarray.h>

QT_MODULE(Gui)

#ifndef QT_NO_LCDNUMBER

class QLCDNumberPrivate;
class Q_GUI_EXPORT QLCDNumber : public QFrame // LCD number widget
{
    Q_OBJECT
    Q_ENUMS(Mode SegmentStyle)
    Q_PROPERTY(bool smallDecimalPoint READ smallDecimalPoint WRITE setSmallDecimalPoint)
    Q_PROPERTY(int numDigits READ numDigits WRITE setNumDigits)
    Q_PROPERTY(Mode mode READ mode WRITE setMode)
    Q_PROPERTY(SegmentStyle segmentStyle READ segmentStyle WRITE setSegmentStyle)
    Q_PROPERTY(double value READ value WRITE display)
    Q_PROPERTY(int intValue READ intValue WRITE display)

public:
    explicit QLCDNumber(QWidget* parent = 0);
    explicit QLCDNumber(uint numDigits, QWidget* parent = 0);
    ~QLCDNumber();

    enum Mode {
        Hex, Dec, Oct, Bin
#if defined(QT3_SUPPORT) &amp;&amp; !defined(Q_MOC_RUN)
        , HEX = Hex, DEC = Dec, OCT = Oct, BIN = Bin
#endif
    };
    enum SegmentStyle {
        Outline, Filled, Flat
    };

    bool smallDecimalPoint() const;

    int numDigits() const;
    void setNumDigits(int nDigits);

    bool checkOverflow(double num) const;
    bool checkOverflow(int num) const;

    Mode mode() const;
    void setMode(Mode);

    SegmentStyle segmentStyle() const;
    void setSegmentStyle(SegmentStyle);

    double value() const;
    int intValue() const;

    QSize sizeHint() const;

public Q_SLOTS:
    void display(const QString &amp;str);
    void display(int num);
    void display(double num);
    void setHexMode();
    void setDecMode();
    void setOctMode();
    void setBinMode();
    void setSmallDecimalPoint(bool);

Q_SIGNALS:
    void overflow();

protected:
    bool event(QEvent *e);
    void paintEvent(QPaintEvent *);

public:
#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QLCDNumber(QWidget* parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QLCDNumber(uint numDigits, QWidget* parent, const char* name);
#endif

private:
    Q_DISABLE_COPY(QLCDNumber)
    Q_DECLARE_PRIVATE(QLCDNumber)
};

#endif // QT_NO_LCDNUMBER

#endif // QLCDNUMBER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlineedit.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QLINEEDIT_H
#define QLINEEDIT_H

#include &lt;QtGui/qframe.h>
#include &lt;QtCore/qstring.h>

QT_MODULE(Gui)

#ifndef QT_NO_LINEEDIT

class QValidator;
class QMenu;
class QLineEditPrivate;

class Q_GUI_EXPORT QLineEdit : public QWidget
{
    Q_OBJECT

    Q_ENUMS(EchoMode)
    Q_PROPERTY(QString inputMask READ inputMask WRITE setInputMask)
    Q_PROPERTY(QString text READ text WRITE setText NOTIFY textChanged USER true)
    Q_PROPERTY(int maxLength READ maxLength WRITE setMaxLength)
    Q_PROPERTY(bool frame READ hasFrame WRITE setFrame)
    Q_PROPERTY(EchoMode echoMode READ echoMode WRITE setEchoMode)
    Q_PROPERTY(QString displayText READ displayText)
    Q_PROPERTY(int cursorPosition READ cursorPosition WRITE setCursorPosition)
    Q_PROPERTY(Qt::Alignment alignment READ alignment WRITE setAlignment)
    Q_PROPERTY(bool modified READ isModified WRITE setModified DESIGNABLE false)
    Q_PROPERTY(bool hasSelectedText READ hasSelectedText)
    Q_PROPERTY(QString selectedText READ selectedText)
    Q_PROPERTY(bool dragEnabled READ dragEnabled WRITE setDragEnabled)
    Q_PROPERTY(bool readOnly READ isReadOnly WRITE setReadOnly)
    Q_PROPERTY(bool undoAvailable READ isUndoAvailable)
    Q_PROPERTY(bool redoAvailable READ isRedoAvailable)
    Q_PROPERTY(bool acceptableInput READ hasAcceptableInput)

public:
    explicit QLineEdit(QWidget* parent=0);
    explicit QLineEdit(const QString &amp;, QWidget* parent=0);
#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QLineEdit(QWidget* parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QLineEdit(const QString &amp;, QWidget* parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QLineEdit(const QString &amp;, const QString &amp;, QWidget* parent=0, const char* name=0);
#endif
    ~QLineEdit();

    QString text() const;

    QString displayText() const;

    int maxLength() const;
    void setMaxLength(int);

    void setFrame(bool);
    bool hasFrame() const;

    enum EchoMode { Normal, NoEcho, Password };
    EchoMode echoMode() const;
    void setEchoMode(EchoMode);

    bool isReadOnly() const;
    void setReadOnly(bool);

#ifndef QT_NO_VALIDATOR
    void setValidator(const QValidator *);
    const QValidator * validator() const;
#endif
    
    QSize sizeHint() const;
    QSize minimumSizeHint() const;

    int cursorPosition() const;
    void setCursorPosition(int);
    int cursorPositionAt(const QPoint &amp;pos);

    void setAlignment(Qt::Alignment flag);
    Qt::Alignment alignment() const;

    void cursorForward(bool mark, int steps = 1);
    void cursorBackward(bool mark, int steps = 1);
    void cursorWordForward(bool mark);
    void cursorWordBackward(bool mark);
    void backspace();
    void del();
    void home(bool mark);
    void end(bool mark);

    bool isModified() const;
    void setModified(bool);

    void setSelection(int, int);
    bool hasSelectedText() const;
    QString selectedText() const;
    int selectionStart() const;

    bool isUndoAvailable() const;
    bool isRedoAvailable() const;

    void setDragEnabled(bool b);
    bool dragEnabled() const;

    QString inputMask() const;
    void setInputMask(const QString &amp;inputMask);
    bool hasAcceptableInput() const;

public Q_SLOTS:
    void setText(const QString &amp;);
    void clear();
    void selectAll();
    void undo();
    void redo();
#ifndef QT_NO_CLIPBOARD
    void cut();
    void copy() const;
    void paste();
#endif

public:
    void deselect();
    void insert(const QString &amp;);
#ifndef QT_NO_MENU
    QMenu *createStandardContextMenu();
#endif
    
Q_SIGNALS:
    void textChanged(const QString &amp;);
    void textEdited(const QString &amp;);
    void cursorPositionChanged(int, int);
    void returnPressed();
    void editingFinished();
    void selectionChanged();

protected:
    void mousePressEvent(QMouseEvent *);
    void mouseMoveEvent(QMouseEvent *);
    void mouseReleaseEvent(QMouseEvent *);
    void mouseDoubleClickEvent(QMouseEvent *);
    void keyPressEvent(QKeyEvent *);
    void focusInEvent(QFocusEvent *);
    void focusOutEvent(QFocusEvent *);
    void paintEvent(QPaintEvent *);
#ifndef QT_NO_DRAGANDDROP
    void dragEnterEvent(QDragEnterEvent *);
    void dragMoveEvent(QDragMoveEvent *e);
    void dragLeaveEvent(QDragLeaveEvent *e);
    void dropEvent(QDropEvent *);
#endif
    void changeEvent(QEvent *);
#ifndef QT_NO_MENU
    void contextMenuEvent(QContextMenuEvent *);
#endif
#ifdef QT3_SUPPORT
    inline QT3_SUPPORT void repaintArea(int, int) { update(); }
#endif

    void inputMethodEvent(QInputMethodEvent *);
public:
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    bool event(QEvent *);
protected:

public:
#ifdef QT3_SUPPORT
    inline QT3_SUPPORT void clearModified() { setModified(false); }
    inline QT3_SUPPORT void cursorLeft(bool mark, int steps = 1) { cursorForward(mark, -steps); }
    inline QT3_SUPPORT void cursorRight(bool mark, int steps = 1) { cursorForward(mark, steps); }
    QT3_SUPPORT bool validateAndSet(const QString &amp;, int, int, int);
    inline QT3_SUPPORT bool frame() const { return hasFrame(); }
#ifndef QT_NO_VALIDATOR
    inline QT3_SUPPORT void clearValidator() { setValidator(0); }
#endif
    inline QT3_SUPPORT bool hasMarkedText() const { return hasSelectedText(); }
    inline QT3_SUPPORT QString markedText() const { return selectedText(); }
    QT3_SUPPORT bool edited() const;
    QT3_SUPPORT void setEdited(bool);
    QT3_SUPPORT int characterAt(int, QChar*) const;
    QT3_SUPPORT bool getSelection(int *, int *);

Q_SIGNALS:
    QT_MOC_COMPAT void lostFocus();
#endif

private:
    Q_DISABLE_COPY(QLineEdit)
    Q_DECLARE_PRIVATE(QLineEdit)
    Q_PRIVATE_SLOT(d_func(), void clipboardChanged())
    Q_PRIVATE_SLOT(d_func(), void deleteSelected())
};

#endif // QT_NO_LINEEDIT

#endif // QLINEEDIT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlistview.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QLISTVIEW_H
#define QLISTVIEW_H

#include &lt;QtGui/qabstractitemview.h>

QT_MODULE(Gui)

#ifndef QT_NO_LISTVIEW

class QListViewPrivate;

class Q_GUI_EXPORT QListView : public QAbstractItemView
{
    Q_OBJECT
    Q_ENUMS(Movement Flow ResizeMode LayoutMode ViewMode)
    Q_PROPERTY(Movement movement READ movement WRITE setMovement)
    Q_PROPERTY(Flow flow READ flow WRITE setFlow)
    Q_PROPERTY(bool isWrapping READ isWrapping WRITE setWrapping)
    Q_PROPERTY(ResizeMode resizeMode READ resizeMode WRITE setResizeMode)
    Q_PROPERTY(LayoutMode layoutMode READ layoutMode WRITE setLayoutMode)
    Q_PROPERTY(int spacing READ spacing WRITE setSpacing)
    Q_PROPERTY(QSize gridSize READ gridSize WRITE setGridSize)
    Q_PROPERTY(ViewMode viewMode READ viewMode WRITE setViewMode)
    Q_PROPERTY(int modelColumn READ modelColumn WRITE setModelColumn)
    Q_PROPERTY(bool uniformItemSizes READ uniformItemSizes WRITE setUniformItemSizes)

public:
    enum Movement { Static, Free, Snap };
    enum Flow { LeftToRight, TopToBottom };
    enum ResizeMode { Fixed, Adjust };
    enum LayoutMode { SinglePass, Batched };
    enum ViewMode { ListMode, IconMode };

    explicit QListView(QWidget *parent = 0);
    ~QListView();

    void setMovement(Movement movement);
    Movement movement() const;

    void setFlow(Flow flow);
    Flow flow() const;

    void setWrapping(bool enable);
    bool isWrapping() const;

    void setResizeMode(ResizeMode mode);
    ResizeMode resizeMode() const;

    void setLayoutMode(LayoutMode mode);
    LayoutMode layoutMode() const;

    void setSpacing(int space);
    int spacing() const;

    void setGridSize(const QSize &amp;size);
    QSize gridSize() const;

    void setViewMode(ViewMode mode);
    ViewMode viewMode() const;

    void clearPropertyFlags();

    bool isRowHidden(int row) const;
    void setRowHidden(int row, bool hide);

    void setModelColumn(int column);
    int modelColumn() const;

    void setUniformItemSizes(bool enable);
    bool uniformItemSizes() const;

    QRect visualRect(const QModelIndex &amp;index) const;
    void scrollTo(const QModelIndex &amp;index, ScrollHint hint = EnsureVisible);
    QModelIndex indexAt(const QPoint &amp;p) const;

    void doItemsLayout();
    void reset();
    void setRootIndex(const QModelIndex &amp;index);

protected:
    QListView(QListViewPrivate &amp;, QWidget *parent = 0);

    bool event(QEvent *e);

    void scrollContentsBy(int dx, int dy);

    void resizeContents(int width, int height);
    QSize contentsSize() const;

    void dataChanged(const QModelIndex &amp;topLeft, const QModelIndex &amp;bottomRight);
    void rowsInserted(const QModelIndex &amp;parent, int start, int end);
    void rowsAboutToBeRemoved(const QModelIndex &amp;parent, int start, int end);

    void mouseMoveEvent(QMouseEvent *e);
    void mouseReleaseEvent(QMouseEvent *e);

    void timerEvent(QTimerEvent *e);
    void resizeEvent(QResizeEvent *e);
#ifndef QT_NO_DRAGANDDROP
    void dragMoveEvent(QDragMoveEvent *e);
    void dragLeaveEvent(QDragLeaveEvent *e);
    void dropEvent(QDropEvent *e);
    void startDrag(Qt::DropActions supportedActions);

    void internalDrop(QDropEvent *e);
    void internalDrag(Qt::DropActions supportedActions);
#endif // QT_NO_DRAGANDDROP

    QStyleOptionViewItem viewOptions() const;
    void paintEvent(QPaintEvent *e);

    int horizontalOffset() const;
    int verticalOffset() const;
    QModelIndex moveCursor(CursorAction cursorAction, Qt::KeyboardModifiers modifiers);
    QRect rectForIndex(const QModelIndex &amp;index) const;
    void setPositionForIndex(const QPoint &amp;position, const QModelIndex &amp;index);

    void setSelection(const QRect &amp;rect, QItemSelectionModel::SelectionFlags command);
    QRegion visualRegionForSelection(const QItemSelection &amp;selection) const;
    QModelIndexList selectedIndexes() const;

    void updateGeometries();

    bool isIndexHidden(const QModelIndex &amp;index) const;

private:
    Q_DECLARE_PRIVATE(QListView)
    Q_DISABLE_COPY(QListView)
};

#endif // QT_NO_LISTVIEW

#endif // QLISTVIEW_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qlistwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QLISTWIDGET_H
#define QLISTWIDGET_H

#include &lt;QtGui/qlistview.h>
#include &lt;QtCore/qvariant.h>
#include &lt;QtCore/qvector.h>

QT_MODULE(Gui)

#ifndef QT_NO_LISTWIDGET

class QListWidget;
class QListModel;
class QWidgetItemData;

class Q_GUI_EXPORT QListWidgetItem
{
    friend class QListModel;
public:
    enum { Type = 0, UserType = 1000 };
    explicit QListWidgetItem(QListWidget *view = 0, int type = Type);
    explicit QListWidgetItem(const QString &amp;text, QListWidget *view = 0, int type = Type);
    explicit QListWidgetItem(const QIcon &amp;icon, const QString &amp;text,
                             QListWidget *view = 0, int type = Type);
    QListWidgetItem(const QListWidgetItem &amp;other);
    virtual ~QListWidgetItem();

    virtual QListWidgetItem *clone() const;

    inline QListWidget *listWidget() const { return view; }

    inline Qt::ItemFlags flags() const { return itemFlags; }
    inline void setFlags(Qt::ItemFlags flags);

    inline QString text() const
        { return data(Qt::DisplayRole).toString(); }
    inline void setText(const QString &amp;text);

    inline QIcon icon() const
        { return qvariant_cast&lt;QIcon>(data(Qt::DecorationRole)); }
    inline void setIcon(const QIcon &amp;icon);

    inline QString statusTip() const
        { return data(Qt::StatusTipRole).toString(); }
    inline void setStatusTip(const QString &amp;statusTip);

#ifndef QT_NO_TOOLTIP
    inline QString toolTip() const
        { return data(Qt::ToolTipRole).toString(); }
    inline void setToolTip(const QString &amp;toolTip);
#endif

#ifndef QT_NO_WHATSTHIS
    inline QString whatsThis() const
        { return data(Qt::WhatsThisRole).toString(); }
    inline void setWhatsThis(const QString &amp;whatsThis);
#endif

    inline QFont font() const
        { return qvariant_cast&lt;QFont>(data(Qt::FontRole)); }
    inline void setFont(const QFont &amp;font);

    inline int textAlignment() const
        { return data(Qt::TextAlignmentRole).toInt(); }
    inline void setTextAlignment(int alignment)
        { setData(Qt::TextAlignmentRole, alignment); }

    inline QColor backgroundColor() const
        { return qvariant_cast&lt;QColor>(data(Qt::BackgroundColorRole)); }
    virtual void setBackgroundColor(const QColor &amp;color)
        { setData(Qt::BackgroundColorRole, color); }

    inline QColor textColor() const
        { return qvariant_cast&lt;QColor>(data(Qt::TextColorRole)); }
    inline void setTextColor(const QColor &amp;color)
        { setData(Qt::TextColorRole, color); }

    inline Qt::CheckState checkState() const
        { return static_cast&lt;Qt::CheckState>(data(Qt::CheckStateRole).toInt()); }
    inline void setCheckState(Qt::CheckState state)
        { setData(Qt::CheckStateRole, state); }

    inline QSize sizeHint() const
        { return qvariant_cast&lt;QSize>(data(Qt::SizeHintRole)); }
    inline void setSizeHint(const QSize &amp;size)
        { setData(Qt::SizeHintRole, size); }

    virtual QVariant data(int role) const;
    virtual void setData(int role, const QVariant &amp;value);

    virtual bool operator&lt;(const QListWidgetItem &amp;other) const;

#ifndef QT_NO_DATASTREAM
    virtual void read(QDataStream &amp;in);
    virtual void write(QDataStream &amp;out) const;
#endif
    QListWidgetItem &amp;operator=(const QListWidgetItem &amp;other);

    inline int type() const { return rtti; }

private:
    int rtti;
    QVector&lt;QWidgetItemData> values;
    QListWidget *view;
    QListModel *model;
    Qt::ItemFlags itemFlags;
};

inline void QListWidgetItem::setFlags(Qt::ItemFlags aflags)
{ itemFlags = aflags; }

inline void QListWidgetItem::setText(const QString &amp;atext)
{ setData(Qt::DisplayRole, atext); }

inline void QListWidgetItem::setIcon(const QIcon &amp;aicon)
{ setData(Qt::DecorationRole, aicon); }

inline void QListWidgetItem::setStatusTip(const QString &amp;astatusTip)
{ setData(Qt::StatusTipRole, astatusTip); }

#ifndef QT_NO_TOOLTIP
inline void QListWidgetItem::setToolTip(const QString &amp;atoolTip)
{ setData(Qt::ToolTipRole, atoolTip); }
#endif

#ifndef QT_NO_WHATSTHIS
inline void QListWidgetItem::setWhatsThis(const QString &amp;awhatsThis)
{ setData(Qt::WhatsThisRole, awhatsThis); }
#endif

inline void QListWidgetItem::setFont(const QFont &amp;afont)
{ setData(Qt::FontRole, afont); }

#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;out, const QListWidgetItem &amp;item);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;in, QListWidgetItem &amp;item);
#endif

class QListWidgetPrivate;

class Q_GUI_EXPORT QListWidget : public QListView
{
    Q_OBJECT
    Q_PROPERTY(int count READ count)
    Q_PROPERTY(int currentRow READ currentRow WRITE setCurrentRow NOTIFY currentRowChanged USER true)

    friend class QListWidgetItem;
    friend class QListModel;
public:
    explicit QListWidget(QWidget *parent = 0);
    ~QListWidget();

    QListWidgetItem *item(int row) const;
    int row(const QListWidgetItem *item) const;
    void insertItem(int row, QListWidgetItem *item);
    void insertItem(int row, const QString &amp;label);
    void insertItems(int row, const QStringList &amp;labels);
    inline void addItem(const QString &amp;label) { insertItem(count(), label); }
    inline void addItem(QListWidgetItem *item);
    inline void addItems(const QStringList &amp;labels) { insertItems(count(), labels); }
    QListWidgetItem *takeItem(int row);
    int count() const;

    QListWidgetItem *currentItem() const;
    void setCurrentItem(QListWidgetItem *item);

    int currentRow() const;
    void setCurrentRow(int row);

    QListWidgetItem *itemAt(const QPoint &amp;p) const;
    inline QListWidgetItem *itemAt(int x, int y) const;
    QRect visualItemRect(const QListWidgetItem *item) const;

    void sortItems(Qt::SortOrder order = Qt::AscendingOrder);

    void editItem(QListWidgetItem *item);
    void openPersistentEditor(QListWidgetItem *item);
    void closePersistentEditor(QListWidgetItem *item);

    QWidget *itemWidget(QListWidgetItem *item) const;
    void setItemWidget(QListWidgetItem *item, QWidget *widget);

    bool isItemSelected(const QListWidgetItem *item) const;
    void setItemSelected(const QListWidgetItem *item, bool select);
    QList&lt;QListWidgetItem*> selectedItems() const;
    QList&lt;QListWidgetItem*> findItems(const QString &amp;text, Qt::MatchFlags flags) const;

    bool isItemHidden(const QListWidgetItem *item) const;
    void setItemHidden(const QListWidgetItem *item, bool hide);

public Q_SLOTS:
    void scrollToItem(const QListWidgetItem *item, QAbstractItemView::ScrollHint hint = EnsureVisible);
    void clear();

Q_SIGNALS:
    void itemPressed(QListWidgetItem *item);
    void itemClicked(QListWidgetItem *item);
    void itemDoubleClicked(QListWidgetItem *item);
    void itemActivated(QListWidgetItem *item);
    void itemEntered(QListWidgetItem *item);
    void itemChanged(QListWidgetItem *item);

    void currentItemChanged(QListWidgetItem *current, QListWidgetItem *previous);
    void currentTextChanged(const QString &amp;currentText);
    void currentRowChanged(int currentRow);

    void itemSelectionChanged();

protected:
    bool event(QEvent *e);
    virtual QStringList mimeTypes() const;
    virtual QMimeData *mimeData(const QList&lt;QListWidgetItem*> items) const;
#ifndef QT_NO_DRAGANDDROP
    virtual bool dropMimeData(int index, const QMimeData *data, Qt::DropAction action);
    virtual Qt::DropActions supportedDropActions() const;
#endif
    QList&lt;QListWidgetItem*> items(const QMimeData *data) const;

    QModelIndex indexFromItem(QListWidgetItem *item) const;
    QListWidgetItem *itemFromIndex(const QModelIndex &amp;index) const;

private:
    void setModel(QAbstractItemModel *model);

    Q_DECLARE_PRIVATE(QListWidget)
    Q_DISABLE_COPY(QListWidget)

    Q_PRIVATE_SLOT(d_func(), void emitItemPressed(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemClicked(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemDoubleClicked(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemActivated(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemEntered(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemChanged(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitCurrentItemChanged(const QModelIndex &amp;previous, const QModelIndex &amp;current))
};

inline void QListWidget::addItem(QListWidgetItem *aitem)
{ insertItem(count(), aitem); }

inline QListWidgetItem *QListWidget::itemAt(int ax, int ay) const
{ return itemAt(QPoint(ax, ay)); }

#endif // QT_NO_LISTWIDGET

#endif // QLISTWIDGET_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmainwindow.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QMAINWINDOW_H
#define QMAINWINDOW_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

#ifndef QT_NO_MAINWINDOW

class QDockWidget;
class QMainWindowPrivate;
class QMenuBar;
class QStatusBar;
class QToolBar;
class QMenu;

class Q_GUI_EXPORT QMainWindow : public QWidget
{
    Q_OBJECT

    Q_PROPERTY(QSize iconSize READ iconSize WRITE setIconSize)
    Q_PROPERTY(Qt::ToolButtonStyle toolButtonStyle READ toolButtonStyle WRITE setToolButtonStyle)

public:
    explicit QMainWindow(QWidget *parent = 0, Qt::WFlags flags = 0);
    ~QMainWindow();

    QSize iconSize() const;
    void setIconSize(const QSize &amp;iconSize);

    Qt::ToolButtonStyle toolButtonStyle() const;
    void setToolButtonStyle(Qt::ToolButtonStyle toolButtonStyle);

#ifndef QT_NO_MENUBAR
    QMenuBar *menuBar() const;
    void setMenuBar(QMenuBar *menubar);
#endif

#ifndef QT_NO_STATUSBAR
    QStatusBar *statusBar() const;
    void setStatusBar(QStatusBar *statusbar);
#endif

    QWidget *centralWidget() const;
    void setCentralWidget(QWidget *widget);

    void setCorner(Qt::Corner corner, Qt::DockWidgetArea area);
    Qt::DockWidgetArea corner(Qt::Corner corner) const;

#ifndef QT_NO_TOOLBAR
    void addToolBarBreak(Qt::ToolBarArea area = Qt::TopToolBarArea);
    void insertToolBarBreak(QToolBar *before);

    void addToolBar(Qt::ToolBarArea area, QToolBar *toolbar);
    void addToolBar(QToolBar *toolbar);
    QToolBar *addToolBar(const QString &amp;title);
    void insertToolBar(QToolBar *before, QToolBar *toolbar);
    void removeToolBar(QToolBar *toolbar);

    Qt::ToolBarArea toolBarArea(QToolBar *toolbar) const;
#endif
#ifndef QT_NO_DOCKWIDGET    
    void addDockWidget(Qt::DockWidgetArea area, QDockWidget *dockwidget);
    void addDockWidget(Qt::DockWidgetArea area, QDockWidget *dockwidget,
                       Qt::Orientation orientation);
    void splitDockWidget(QDockWidget *after, QDockWidget *dockwidget,
                         Qt::Orientation orientation);
    void removeDockWidget(QDockWidget *dockwidget);

    Qt::DockWidgetArea dockWidgetArea(QDockWidget *dockwidget) const;
#endif // QT_NO_DOCKWIDGET    

    QByteArray saveState(int version = 0) const;
    bool restoreState(const QByteArray &amp;state, int version = 0);

#ifndef QT_NO_MENU
    virtual QMenu *createPopupMenu();
#endif

#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QMainWindow(QWidget *parent, const char *name, Qt::WFlags flags = 0);
#endif

Q_SIGNALS:
    void iconSizeChanged(const QSize &amp;iconSize);
    void toolButtonStyleChanged(Qt::ToolButtonStyle toolButtonStyle);

protected:
    void contextMenuEvent(QContextMenuEvent *event);
    bool event(QEvent *event);

private:
    Q_DECLARE_PRIVATE(QMainWindow)
    Q_DISABLE_COPY(QMainWindow)
};

#endif // QT_NO_MAINWINDOW

#endif // QMAINWINDOW_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmatrix.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QMATRIX_H
#define QMATRIX_H

#include &lt;QtGui/qpolygon.h>
#include &lt;QtGui/qregion.h>
#include &lt;QtGui/qwindowdefs.h>
#include &lt;QtCore/qline.h>
#include &lt;QtCore/qpoint.h>
#include &lt;QtCore/qrect.h>

QT_MODULE(Gui)

class QPainterPath;

class Q_GUI_EXPORT QMatrix // 2D transform matrix
{
public:
    QMatrix();
    QMatrix(qreal m11, qreal m12, qreal m21, qreal m22,
            qreal dx, qreal dy);
    QMatrix(const QMatrix &amp;matrix);

    void setMatrix(qreal m11, qreal m12, qreal m21, qreal m22,
                   qreal dx, qreal dy);

    qreal m11() const { return _m11; }
    qreal m12() const { return _m12; }
    qreal m21() const { return _m21; }
    qreal m22() const { return _m22; }
    qreal dx() const { return _dx; }
    qreal dy() const { return _dy; }

    void map(int x, int y, int *tx, int *ty) const;
    void map(qreal x, qreal y, qreal *tx, qreal *ty) const;
    QRect mapRect(const QRect &amp;) const;
    QRectF mapRect(const QRectF &amp;) const;

    QPoint map(const QPoint &amp;p) const;
    QPointF map(const QPointF&amp;p) const;
    QLine map(const QLine &amp;l) const;
    QLineF map(const QLineF &amp;l) const;
    QPolygonF map(const QPolygonF &amp;a) const;
    QPolygon map(const QPolygon &amp;a) const;
    QRegion map(const QRegion &amp;r) const;
    QPainterPath map(const QPainterPath &amp;p) const;
    QPolygon mapToPolygon(const QRect &amp;r) const;

    void reset();
    inline bool isIdentity() const;

    QMatrix &amp;translate(qreal dx, qreal dy);
    QMatrix &amp;scale(qreal sx, qreal sy);
    QMatrix &amp;shear(qreal sh, qreal sv);
    QMatrix &amp;rotate(qreal a);

    bool isInvertible() const { return !qFuzzyCompare(_m11*_m22 - _m12*_m21, 0); }
    qreal det() const { return _m11*_m22 - _m12*_m21; }

    QMatrix inverted(bool *invertible = 0) const;

    bool operator==(const QMatrix &amp;) const;
    bool operator!=(const QMatrix &amp;) const;

    QMatrix &amp;operator*=(const QMatrix &amp;);
    QMatrix operator*(const QMatrix &amp;o) const;

    QMatrix &amp;operator=(const QMatrix &amp;);

#ifdef QT3_SUPPORT
    inline QT3_SUPPORT QMatrix invert(bool *invertible=0) const { return inverted(invertible); }
    inline QT3_SUPPORT QRect map(const QRect &amp;r) const { return mapRect(r); }
    QT3_SUPPORT QRegion mapToRegion(const QRect &amp;r) const;
#endif

private:
    qreal _m11, _m12;
    qreal _m21, _m22;
    qreal _dx, _dy;
};
Q_DECLARE_TYPEINFO(QMatrix, Q_MOVABLE_TYPE);

// mathematical semantics
inline Q_GUI_EXPORT QPoint operator*(const QPoint &amp;p, const QMatrix &amp;m)
{ return m.map(p); }
inline Q_GUI_EXPORT QPointF operator*(const QPointF &amp;p, const QMatrix &amp;m)
{ return m.map(p); }
inline Q_GUI_EXPORT QLineF operator*(const QLineF &amp;l, const QMatrix &amp;m)
{ return m.map(l); }
inline Q_GUI_EXPORT QLine operator*(const QLine &amp;l, const QMatrix &amp;m)
{ return m.map(l); }
inline Q_GUI_EXPORT QPolygon operator *(const QPolygon &amp;a, const QMatrix &amp;m)
{ return m.map(a); }
inline Q_GUI_EXPORT QPolygonF operator *(const QPolygonF &amp;a, const QMatrix &amp;m)
{ return m.map(a); }
inline Q_GUI_EXPORT QRegion operator *(const QRegion &amp;r, const QMatrix &amp;m)
{ return m.map(r); }
Q_GUI_EXPORT QPainterPath operator *(const QPainterPath &amp;p, const QMatrix &amp;m);

inline bool QMatrix::isIdentity() const
{
    return qFuzzyCompare(_m11, 1) &amp;&amp; qFuzzyCompare(_m22, 1) &amp;&amp; qFuzzyCompare(_m12, 0)
           &amp;&amp; qFuzzyCompare(_m21, 0) &amp;&amp; qFuzzyCompare(_dx, 0) &amp;&amp; qFuzzyCompare(_dy, 0);
}

/*****************************************************************************
 QMatrix stream functions
 *****************************************************************************/

Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QMatrix &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QMatrix &amp;);

#ifndef QT_NO_DEBUG_STREAM
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug, const QMatrix &amp;);
#endif

#ifdef QT3_SUPPORT
#include &lt;QtGui/qwmatrix.h>
#endif

#endif // QMATRIX_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmenu.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QMENU_H
#define QMENU_H

#include &lt;QtGui/qwidget.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtGui/qicon.h>
#include &lt;QtGui/qaction.h>

QT_MODULE(Gui)

#ifndef QT_NO_MENU

class QMenuPrivate;
#ifdef QT3_SUPPORT
class QMenuItem;
#include &lt;QtGui/qpixmap.h>
#endif

class Q_GUI_EXPORT QMenu : public QWidget
{
private:
    Q_OBJECT
    Q_DECLARE_PRIVATE(QMenu)

    Q_PROPERTY(bool tearOffEnabled READ isTearOffEnabled WRITE setTearOffEnabled)
    Q_PROPERTY(QString title READ title WRITE setTitle)
    Q_PROPERTY(QIcon icon READ icon WRITE setIcon)

public:
    explicit QMenu(QWidget *parent = 0);
    explicit QMenu(const QString &amp;title, QWidget *parent = 0);
    ~QMenu();

#ifdef Q_NO_USING_KEYWORD
    inline void addAction(QAction *action) { QWidget::addAction(action); }
#else
    using QWidget::addAction;
#endif
    QAction *addAction(const QString &amp;text);
    QAction *addAction(const QIcon &amp;icon, const QString &amp;text);
    QAction *addAction(const QString &amp;text, const QObject *receiver, const char* member, const QKeySequence &amp;shortcut = 0);
    QAction *addAction(const QIcon &amp;icon, const QString &amp;text, const QObject *receiver, const char* member, const QKeySequence &amp;shortcut = 0);

    QAction *addMenu(QMenu *menu);
    QMenu *addMenu(const QString &amp;title);
    QMenu *addMenu(const QIcon &amp;icon, const QString &amp;title);

    QAction *addSeparator();

    QAction *insertMenu(QAction *before, QMenu *menu);
    QAction *insertSeparator(QAction *before);

    void clear();

    void setTearOffEnabled(bool);
    bool isTearOffEnabled() const;

    bool isTearOffMenuVisible() const;
    void hideTearOffMenu();

    void setDefaultAction(QAction *);
    QAction *defaultAction() const;

    void setActiveAction(QAction *act);
    QAction *activeAction() const;

    void popup(const QPoint &amp;pos, QAction *at=0);
    QAction *exec();
    QAction *exec(const QPoint &amp;pos, QAction *at=0);
    static QAction *exec(QList&lt;QAction*> actions, const QPoint &amp;pos, QAction *at=0);

    QSize sizeHint() const;

    QRect actionGeometry(QAction *) const;
    QAction *actionAt(const QPoint &amp;) const;

    QAction *menuAction() const;

    QString title() const;
    void setTitle(const QString &amp;title);

    QIcon icon() const;
    void setIcon(const QIcon &amp;icon);

    void setNoReplayFor(QWidget *widget);
#ifdef Q_WS_MAC
    MenuRef macMenu(MenuRef merge=0);
#endif

Q_SIGNALS:
    void aboutToShow();
    void triggered(QAction *action);
    void hovered(QAction *action);

protected:
    int columnCount() const;

    void changeEvent(QEvent *);
    void keyPressEvent(QKeyEvent *);
    void mouseReleaseEvent(QMouseEvent *);
    void mousePressEvent(QMouseEvent *);
    void mouseMoveEvent(QMouseEvent *);
    void wheelEvent(QWheelEvent *);
    void enterEvent(QEvent *);
    void leaveEvent(QEvent *);
    void hideEvent(QHideEvent *);
    void paintEvent(QPaintEvent *);
    void actionEvent(QActionEvent *);
    void timerEvent(QTimerEvent *);
    bool event(QEvent *);

private Q_SLOTS:
    void internalSetSloppyAction();
    void internalDelayedPopup();

private:
    Q_PRIVATE_SLOT(d_func(), void actionTriggered())
    Q_PRIVATE_SLOT(d_func(), void actionHovered())

#ifdef QT3_SUPPORT
public:
    //menudata
    inline QT3_SUPPORT uint count() const { return actions().count(); }
    inline QT3_SUPPORT int insertItem(const QString &amp;text, const QObject *receiver, const char* member,
                                    const QKeySequence&amp; shortcut = 0, int id = -1, int index = -1) {
        return insertAny(0, &amp;text, receiver, member, &amp;shortcut, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QIcon&amp; icon, const QString &amp;text,
                                    const QObject *receiver, const char* member,
                                    const QKeySequence&amp; shortcut = 0, int id = -1, int index = -1) {
        return insertAny(&amp;icon, &amp;text, receiver, member, &amp;shortcut, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QPixmap &amp;pixmap, const QObject *receiver, const char* member,
                                    const QKeySequence&amp; shortcut = 0, int id = -1, int index = -1) {
        QIcon icon(pixmap);
        return insertAny(&amp;icon, 0, receiver, member, &amp;shortcut, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QString &amp;text, int id=-1, int index=-1) {
        return insertAny(0, &amp;text, 0, 0, 0, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QIcon&amp; icon, const QString &amp;text, int id=-1, int index=-1) {
        return insertAny(&amp;icon, &amp;text, 0, 0, 0, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QString &amp;text, QMenu *popup, int id=-1, int index=-1) {
        return insertAny(0, &amp;text, 0, 0, 0, popup, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QIcon&amp; icon, const QString &amp;text, QMenu *popup, int id=-1, int index=-1) {
        return insertAny(&amp;icon, &amp;text, 0, 0, 0, popup, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QPixmap &amp;pixmap, int id=-1, int index=-1) {
        QIcon icon(pixmap);
        return insertAny(&amp;icon, 0, 0, 0, 0, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QPixmap &amp;pixmap, QMenu *popup, int id=-1, int index=-1) {
        QIcon icon(pixmap);
        return insertAny(&amp;icon, 0, 0, 0, 0, popup, id, index);
    }
    QT3_SUPPORT int insertItem(QMenuItem *item, int id=-1, int index=-1);
    QT3_SUPPORT int insertSeparator(int index=-1);
    inline QT3_SUPPORT void removeItem(int id) {
        if(QAction *act = findActionForId(id))
            removeAction(act); }
    inline QT3_SUPPORT void removeItemAt(int index) {
        if(QAction *act = actions().value(index))
            removeAction(act); }
#ifndef QT_NO_SHORTCUT
    inline QT3_SUPPORT QKeySequence accel(int id) const {
        if(QAction *act = findActionForId(id))
            return act->shortcut();
        return QKeySequence(); }
    inline QT3_SUPPORT void setAccel(const QKeySequence&amp; key, int id) {
        if(QAction *act = findActionForId(id))
            act->setShortcut(key);
    }
#endif
    inline QT3_SUPPORT QIcon iconSet(int id) const {
        if(QAction *act = findActionForId(id))
            return act->icon();
        return QIcon(); }
    inline QT3_SUPPORT QString text(int id) const {
        if(QAction *act = findActionForId(id))
            return act->text();
        return QString(); }
    inline QT3_SUPPORT QPixmap pixmap(int id) const {
        if(QAction *act = findActionForId(id))
            return act->icon().pixmap(QSize(22, 22));
        return QPixmap(); }
    inline QT3_SUPPORT void setWhatsThis(int id, const QString &amp;w) {
        if(QAction *act = findActionForId(id))
            act->setWhatsThis(w); }
    inline QT3_SUPPORT QString whatsThis(int id) const {
        if(QAction *act = findActionForId(id))
            return act->whatsThis();
        return QString(); }

    inline QT3_SUPPORT void changeItem(int id, const QString &amp;text) {
        if(QAction *act = findActionForId(id))
            act->setText(text); }
    inline QT3_SUPPORT void changeItem(int id, const QPixmap &amp;pixmap) {
        if(QAction *act = findActionForId(id))
            act->setIcon(QIcon(pixmap)); }
    inline QT3_SUPPORT void changeItem(int id, const QIcon &amp;icon, const QString &amp;text) {
        if(QAction *act = findActionForId(id)) {
            act->setIcon(icon);
            act->setText(text);
        }
    }
    inline QT3_SUPPORT void setActiveItem(int id) {
        setActiveAction(findActionForId(id));
    }
    inline QT3_SUPPORT bool isItemActive(int id) const {
        return findActionForId(id) == activeAction();
    }
    inline QT3_SUPPORT bool isItemEnabled(int id) const {
        if(QAction *act = findActionForId(id))
            return act->isEnabled();
        return false; }
    inline QT3_SUPPORT void setItemEnabled(int id, bool enable) {
        if(QAction *act = findActionForId(id))
            act->setEnabled(enable);
    }
    inline QT3_SUPPORT bool isItemChecked(int id) const {
        if(QAction *act = findActionForId(id))
            return act->isChecked();
        return false;
    }
    inline QT3_SUPPORT void setItemChecked(int id, bool check) {
        if(QAction *act = findActionForId(id)) {
            act->setCheckable(true);
            act->setChecked(check);
        }
    }
    inline QT3_SUPPORT bool isItemVisible(int id) const {
        if(QAction *act = findActionForId(id))
            return act->isVisible();
        return false;
    }
    inline QT3_SUPPORT void setItemVisible(int id, bool visible) {
        if(QAction *act = findActionForId(id))
            act->setVisible(visible);
    }
    inline QT3_SUPPORT QRect itemGeometry(int index) {
        if(QAction *act = actions().value(index))
            return actionGeometry(act);
        return QRect();
    }
    inline QT3_SUPPORT QFont itemFont(int id) const {
        if(QAction *act = findActionForId(id))
            return act->font();
        return QFont();
    }
    inline QT3_SUPPORT void setItemFont(int id, const QFont &amp;font) {
        if(QAction *act = findActionForId(id))
            act->setFont(font);
    }
    inline QT3_SUPPORT int indexOf(int id) const {
        return actions().indexOf(findActionForId(id));
    }
    inline QT3_SUPPORT int idAt(int index) const {
        return findIdForAction(actions().value(index));
    }
    QT3_SUPPORT void setId (int index, int id);
    inline QT3_SUPPORT void activateItemAt(int index) {
        if(QAction *ret = actions().value(index))
            ret->activate(QAction::Trigger);
    }
    inline QT3_SUPPORT bool connectItem(int id, const QObject *receiver, const char* member) {
        if(QAction *act = findActionForId(id)) {
            QObject::connect(act, SIGNAL(activated(int)), receiver, member);
            return true;
        }
        return false;
    }
    inline QT3_SUPPORT bool disconnectItem(int id,const QObject *receiver, const char* member) {
        if(QAction *act = findActionForId(id)) {
            QObject::disconnect(act, SIGNAL(triggered()), receiver, member);
            return true;
        }
        return false;
    }
    inline QT3_SUPPORT QMenuItem *findItem(int id) const {
        return reinterpret_cast&lt;QMenuItem*>(findActionForId(id));
    }

    inline QT3_SUPPORT void setCheckable(bool){}
    inline QT3_SUPPORT bool isCheckable() const {return true;}

    QT3_SUPPORT QMenuItem *findPopup( QMenu *popup, int *index );

    QT3_SUPPORT bool setItemParameter(int id, int param);
    QT3_SUPPORT int itemParameter(int id) const;

    //frame
    QT3_SUPPORT int frameWidth() const;

    //popupmenu
    inline QT3_SUPPORT void popup(const QPoint &amp; pos, int indexAtPoint) { popup(pos, actions().value(indexAtPoint)); }
    inline QT3_SUPPORT int insertTearOffHandle(int = 0, int = 0) {
        setTearOffEnabled(true);
        return -1;
    }

protected:
    inline QT3_SUPPORT int itemAtPos(const QPoint &amp;p, bool ignoreSeparator = true) {
        QAction *ret = actionAt(p);
        if(ignoreSeparator &amp;&amp; ret &amp;&amp; ret->isSeparator())
            return -1;
        return findIdForAction(ret);
    }
    inline QT3_SUPPORT int columns() const { return columnCount(); }
    inline QT3_SUPPORT int itemHeight(int index) {
        return actionGeometry(actions().value(index)).height();
    }
    inline QT3_SUPPORT int itemHeight(QMenuItem *mi) {
        return actionGeometry(reinterpret_cast&lt;QAction *>(mi)).height();
    }

Q_SIGNALS:
    QT_MOC_COMPAT void aboutToHide();
    QT_MOC_COMPAT void activated(int itemId);
    QT_MOC_COMPAT void highlighted(int itemId);

private:
    int insertAny(const QIcon *icon, const QString *text, const QObject *receiver, const char *member,
                  const QKeySequence *shorcut, const QMenu *popup, int id, int index);
    QAction *findActionForId(int id) const;
    int findIdForAction(QAction*) const;
#endif

private:
    Q_DISABLE_COPY(QMenu)

    friend class QMenuBar;
    friend class QMenuBarPrivate;
    friend class QTornOffMenu;
    friend class Q3PopupMenu;
    friend class QComboBox;

#ifdef Q_WS_MAC
    friend bool qt_mac_watchingAboutToShow(QMenu *);
    friend OSStatus qt_mac_menu_event(EventHandlerCallRef, EventRef, void *);
    friend bool qt_mac_activate_action(MenuRef, uint, QAction::ActionEvent, bool);
#endif
};

#endif // QT_NO_MENU

#endif // QMENU_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmenubar.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QMENUBAR_H
#define QMENUBAR_H

#include &lt;QtGui/qmenu.h>

QT_MODULE(Gui)

#ifndef QT_NO_MENUBAR

class QMenuBarPrivate;
#ifdef QT3_SUPPORT
class QMenuItem;
#endif

class Q_GUI_EXPORT QMenuBar : public QWidget
{
    Q_OBJECT

    Q_PROPERTY(bool defaultUp READ isDefaultUp WRITE setDefaultUp)

public:
    explicit QMenuBar(QWidget *parent = 0);
    ~QMenuBar();

#ifdef Q_NO_USING_KEYWORD
    void addAction(QAction *action) { QWidget::addAction(action); }
#else
    using QWidget::addAction;
#endif
    QAction *addAction(const QString &amp;text);
    QAction *addAction(const QString &amp;text, const QObject *receiver, const char* member);

    QAction *addMenu(QMenu *menu);
    QMenu *addMenu(const QString &amp;title);
    QMenu *addMenu(const QIcon &amp;icon, const QString &amp;title);


    QAction *addSeparator();

    QAction *insertMenu(QAction *before, QMenu *menu);

    void clear();

    QAction *activeAction() const;
    void setActiveAction(QAction *action);

    void setDefaultUp(bool);
    bool isDefaultUp() const;

    QSize sizeHint() const;
    QSize minimumSizeHint() const;
    int heightForWidth(int) const;

    QRect actionGeometry(QAction *) const;
    QAction *actionAt(const QPoint &amp;) const;

    void setCornerWidget(QWidget *w, Qt::Corner corner = Qt::TopRightCorner);
    QWidget *cornerWidget(Qt::Corner corner = Qt::TopRightCorner) const;

#ifdef Q_WS_MAC
    MenuRef macMenu();
#endif

Q_SIGNALS:
    void triggered(QAction *action);
    void hovered(QAction *action);

protected:
    void changeEvent(QEvent *);
    void keyPressEvent(QKeyEvent *);
    void mouseReleaseEvent(QMouseEvent *);
    void mousePressEvent(QMouseEvent *);
    void mouseMoveEvent(QMouseEvent *);
    void leaveEvent(QEvent *);
    void paintEvent(QPaintEvent *);
    void resizeEvent(QResizeEvent *);
    void actionEvent(QActionEvent *);
    void focusOutEvent(QFocusEvent *);
    void focusInEvent(QFocusEvent *);
    bool eventFilter(QObject *, QEvent *);
    bool event(QEvent *);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QMenuBar(QWidget *parent, const char *name);
    inline QT3_SUPPORT uint count() const { return actions().count(); }
    inline QT3_SUPPORT int insertItem(const QString &amp;text, const QObject *receiver, const char* member,
                                    const QKeySequence&amp; shortcut = 0, int id = -1, int index = -1) {
        return insertAny(0, &amp;text, receiver, member, &amp;shortcut, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QIcon&amp; icon, const QString &amp;text,
                                    const QObject *receiver, const char* member,
                                    const QKeySequence&amp; shortcut = 0, int id = -1, int index = -1) {
        return insertAny(&amp;icon, &amp;text, receiver, member, &amp;shortcut, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QPixmap &amp;pixmap, const QObject *receiver, const char* member,
                                    const QKeySequence&amp; shortcut = 0, int id = -1, int index = -1) {
        QIcon icon(pixmap);
        return insertAny(&amp;icon, 0, receiver, member, &amp;shortcut, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QString &amp;text, int id=-1, int index=-1) {
        return insertAny(0, &amp;text, 0, 0, 0, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QIcon&amp; icon, const QString &amp;text, int id=-1, int index=-1) {
        return insertAny(&amp;icon, &amp;text, 0, 0, 0, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QString &amp;text, QMenu *popup, int id=-1, int index=-1) {
        return insertAny(0, &amp;text, 0, 0, 0, popup, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QIcon&amp; icon, const QString &amp;text, QMenu *popup, int id=-1, int index=-1) {
        return insertAny(&amp;icon, &amp;text, 0, 0, 0, popup, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QPixmap &amp;pixmap, int id=-1, int index=-1) {
        QIcon icon(pixmap);
        return insertAny(&amp;icon, 0, 0, 0, 0, 0, id, index);
    }
    inline QT3_SUPPORT int insertItem(const QPixmap &amp;pixmap, QMenu *popup, int id=-1, int index=-1) {
        QIcon icon(pixmap);
        return insertAny(&amp;icon, 0, 0, 0, 0, popup, id, index);
    }
    QT3_SUPPORT int insertSeparator(int index=-1);
    inline QT3_SUPPORT void removeItem(int id) {
        if(QAction *act = findActionForId(id))
            removeAction(act); }
    inline QT3_SUPPORT void removeItemAt(int index) {
        if(QAction *act = actions().value(index))
            removeAction(act); }
#ifndef QT_NO_SHORTCUT
    inline QT3_SUPPORT QKeySequence accel(int id) const {
        if(QAction *act = findActionForId(id))
            return act->shortcut();
        return QKeySequence(); }
    inline QT3_SUPPORT void setAccel(const QKeySequence&amp; key, int id) {
        if(QAction *act = findActionForId(id))
            act->setShortcut(key);
    }
#endif
    inline QT3_SUPPORT QIcon iconSet(int id) const {
        if(QAction *act = findActionForId(id))
            return act->icon();
        return QIcon(); }
    inline QT3_SUPPORT QString text(int id) const {
        if(QAction *act = findActionForId(id))
            return act->text();
        return QString(); }
    inline QT3_SUPPORT QPixmap pixmap(int id) const {
        if(QAction *act = findActionForId(id))
            return act->icon().pixmap(QSize(22,22));
        return QPixmap(); }
    inline QT3_SUPPORT void setWhatsThis(int id, const QString &amp;w) {
        if(QAction *act = findActionForId(id))
            act->setWhatsThis(w); }
    inline QT3_SUPPORT QString whatsThis(int id) const {
        if(QAction *act = findActionForId(id))
            return act->whatsThis();
        return QString(); }

    inline QT3_SUPPORT void changeItem(int id, const QString &amp;text) {
        if(QAction *act = findActionForId(id))
            act->setText(text); }
    inline QT3_SUPPORT void changeItem(int id, const QPixmap &amp;pixmap) {
        if(QAction *act = findActionForId(id))
            act->setIcon(QIcon(pixmap)); }
    inline QT3_SUPPORT void changeItem(int id, const QIcon &amp;icon, const QString &amp;text) {
        if(QAction *act = findActionForId(id)) {
            act->setIcon(icon);
            act->setText(text);
        }
    }
    inline QT3_SUPPORT bool isItemActive(int id) const { return findActionForId(id) == activeAction(); }
    inline QT3_SUPPORT bool isItemEnabled(int id) const {
        if(QAction *act = findActionForId(id))
            return act->isEnabled();
        return false; }
    inline QT3_SUPPORT void setItemEnabled(int id, bool enable) {
        if(QAction *act = findActionForId(id))
            act->setEnabled(enable); }
    inline QT3_SUPPORT bool isItemChecked(int id) const {
        if(QAction *act = findActionForId(id))
            return act->isChecked();
        return false; }
    inline QT3_SUPPORT void setItemChecked(int id, bool check) {
        if(QAction *act = findActionForId(id))
            act->setChecked(check); }
    inline QT3_SUPPORT bool isItemVisible(int id) const {
        if(QAction *act = findActionForId(id))
            return act->isVisible();
        return false; }
    inline QT3_SUPPORT void setItemVisible(int id, bool visible) {
        if(QAction *act = findActionForId(id))
            act->setVisible(visible); }
    inline QT3_SUPPORT int indexOf(int id) const { return actions().indexOf(findActionForId(id)); }
    inline QT3_SUPPORT int idAt(int index) const {
        return index >= 0 &amp;&amp; index &lt; actions().size()
                        ? findIdForAction(actions().at(index))
                        : -1;
    }
    inline QT3_SUPPORT void activateItemAt(int index) {
        if(QAction *ret = actions().value(index))
            ret->activate(QAction::Trigger);
    }
    inline QT3_SUPPORT bool connectItem(int id, const QObject *receiver, const char* member) {
        if(QAction *act = findActionForId(id)) {
            QObject::connect(act, SIGNAL(triggered()), receiver, member);
            return true;
        }
        return false;
    }
    inline QT3_SUPPORT bool disconnectItem(int id,const QObject *receiver, const char* member) {
        if(QAction *act = findActionForId(id)) {
            QObject::disconnect(act, SIGNAL(triggered()), receiver, member);
            return true;
        }
        return false;
    }
    inline QT3_SUPPORT QMenuItem *findItem(int id) const {
        return (QMenuItem*)findActionForId(id);
    }
    QT3_SUPPORT bool setItemParameter(int id, int param);
    QT3_SUPPORT int itemParameter(int id) const;

    //frame
    QT3_SUPPORT int frameWidth() const;

    //menubar
    enum Separator { Never=0, InWindowsStyle=1 };
    inline QT3_SUPPORT Separator separator() const { return InWindowsStyle; }
    inline QT3_SUPPORT void setSeparator(Separator) { }

    QT3_SUPPORT void setAutoGeometry(bool);
    QT3_SUPPORT bool autoGeometry() const;

Q_SIGNALS:
    QT_MOC_COMPAT void activated(int itemId);
    QT_MOC_COMPAT void highlighted(int itemId);

protected:
    inline QT3_SUPPORT QRect itemRect(int index) {
        if(QAction *act = actions().value(index))
            return actionGeometry(act);
        return QRect();
    }
    inline QT3_SUPPORT int itemAtPos(const QPoint &amp;p) {
        return findIdForAction(actionAt(p));
    }

private:
    QAction *findActionForId(int id) const;
    int insertAny(const QIcon *icon, const QString *text, const QObject *receiver, const char *member,
                  const QKeySequence *shorcut, const QMenu *popup, int id, int index);
    int findIdForAction(QAction*) const;
#endif

private:
    Q_DECLARE_PRIVATE(QMenuBar)
    Q_DISABLE_COPY(QMenuBar)
    Q_PRIVATE_SLOT(d_func(), void actionTriggered())
    Q_PRIVATE_SLOT(d_func(), void actionHovered())
    Q_PRIVATE_SLOT(d_func(), void internalShortcutActivated(int))
    Q_PRIVATE_SLOT(d_func(), void updateLayout())

    friend class QMenu;
    friend class QMenuPrivate;

#ifdef Q_WS_MAC
    friend class QApplicationPrivate;
    static bool macUpdateMenuBar();
    friend bool qt_mac_activate_action(MenuRef, uint, QAction::ActionEvent, bool);
#endif
};

#endif // QT_NO_MENUBAR

#endif // QMENUBAR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmenudata.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QMENUDATA_H
#define QMENUDATA_H

#include &lt;QtCore/qglobal.h>

#ifdef QT3_SUPPORT
#include &lt;QtGui/qaction.h>

QT_MODULE(Gui)

class Q_GUI_EXPORT QMenuItem : public QAction
{
public:
    QMenuItem();

    QT3_SUPPORT int id() const;
    QT3_SUPPORT int signalValue() const;
private:
    friend class QMenu;
    friend class QMenuBar;
    void setId(int);
    void setSignalValue(int);
};
#endif

#endif // QMENUDATA_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmessagebox.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QMESSAGEBOX_H
#define QMESSAGEBOX_H

#include &lt;QtGui/qdialog.h>

QT_MODULE(Gui)

#ifndef QT_NO_MESSAGEBOX

class QLabel;
class QMessageBoxPrivate;

class Q_GUI_EXPORT QMessageBox : public QDialog
{
    Q_OBJECT
    Q_ENUMS(Icon)
    Q_PROPERTY(QString text READ text WRITE setText)
    Q_PROPERTY(Icon icon READ icon WRITE setIcon)
    Q_PROPERTY(QPixmap iconPixmap READ iconPixmap WRITE setIconPixmap)
    Q_PROPERTY(Qt::TextFormat textFormat READ textFormat WRITE setTextFormat)

public:
    enum Icon {
        NoIcon = 0,
        Information = 1,
        Warning = 2,
        Critical = 3,
        Question = 4
    };

    explicit QMessageBox(QWidget *parent = 0);
    QMessageBox(const QString &amp;caption, const QString &amp;text, Icon icon,
                int button0, int button1, int button2,
                QWidget *parent = 0, Qt::WFlags f = Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint);
    ~QMessageBox();

    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5,
           Retry = 6, Ignore = 7, YesAll = 8, NoAll = 9, ButtonMask = 0xff,
           Default = 0x100, Escape = 0x200, FlagMask = 0x300 };

    QString text() const;
    void setText(const QString &amp;);

    Icon icon() const;
    void setIcon(Icon);

    QPixmap iconPixmap() const;
    void setIconPixmap(const QPixmap &amp;);

    QString buttonText(int button) const;
    void setButtonText(int button, const QString &amp;);

    Qt::TextFormat textFormat() const;
    void setTextFormat(Qt::TextFormat);

    static int information(QWidget *parent, const QString &amp;caption,
                            const QString&amp; text,
                            int button0, int button1=0, int button2=0);
    static int information(QWidget *parent, const QString &amp;caption,
                            const QString&amp; text,
                            const QString&amp; button0Text = QString(),
                            const QString&amp; button1Text = QString(),
                            const QString&amp; button2Text = QString(),
                            int defaultButtonNumber = 0,
                            int escapeButtonNumber = -1);

    static int question(QWidget *parent, const QString &amp;caption,
                         const QString&amp; text,
                         int button0, int button1=0, int button2=0);
    static int question(QWidget *parent, const QString &amp;caption,
                         const QString&amp; text,
                         const QString&amp; button0Text = QString(),
                         const QString&amp; button1Text = QString(),
                         const QString&amp; button2Text = QString(),
                         int defaultButtonNumber = 0,
                         int escapeButtonNumber = -1);

    static int warning(QWidget *parent, const QString &amp;caption,
                        const QString&amp; text,
                        int button0, int button1, int button2=0);
    static int warning(QWidget *parent, const QString &amp;caption,
                        const QString&amp; text,
                        const QString&amp; button0Text = QString(),
                        const QString&amp; button1Text = QString(),
                        const QString&amp; button2Text = QString(),
                        int defaultButtonNumber = 0,
                        int escapeButtonNumber = -1);

    static int critical(QWidget *parent, const QString &amp;caption,
                         const QString&amp; text,
                         int button0, int button1, int button2=0);
    static int critical(QWidget *parent, const QString &amp;caption,
                         const QString&amp; text,
                         const QString&amp; button0Text = QString(),
                         const QString&amp; button1Text = QString(),
                         const QString&amp; button2Text = QString(),
                         int defaultButtonNumber = 0,
                         int escapeButtonNumber = -1);

    static void about(QWidget *parent, const QString &amp;caption,
                       const QString&amp; text);
    static void aboutQt(QWidget *parent,
                         const QString&amp; caption=QString());
    QSize sizeHint() const;

#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QMessageBox(const QString &amp;caption, const QString &amp;text, Icon icon,
                                      int button0, int button1, int button2,
                                      QWidget *parent, const char *name, bool modal,
                                      Qt::WFlags f =  Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint);
    QT3_SUPPORT_CONSTRUCTOR QMessageBox(QWidget *parent, const char *name);

    static QT3_SUPPORT QPixmap standardIcon(Icon icon, Qt::GUIStyle);
    static QT3_SUPPORT int message(const QString &amp;caption,
                                 const QString&amp; text,
                                 const QString&amp; buttonText=QString(),
                                 QWidget *parent=0, const char * =0) {
        return QMessageBox::information(parent, caption, text,
                                        buttonText.isEmpty()
                                     ? tr("OK") : buttonText) == 0;
    }
    static QT3_SUPPORT bool query(const QString &amp;caption,
                                const QString&amp; text,
                                const QString&amp; yesButtonText=QString(),
                                const QString&amp; noButtonText=QString(),
                                QWidget *parent=0, const char * = 0) {
        return QMessageBox::information(parent, caption, text,
                                     yesButtonText.isEmpty()
                                     ? tr("OK") : yesButtonText,
                                     noButtonText) == 0;
    }
#endif

    static QPixmap standardIcon(Icon icon);

protected:
    void        resizeEvent(QResizeEvent *);
    void        showEvent(QShowEvent *);
    void        closeEvent(QCloseEvent *);
    void        keyPressEvent(QKeyEvent *);
    void        changeEvent(QEvent *);

private:
    Q_PRIVATE_SLOT(d_func(), void buttonClicked())

    Q_DISABLE_COPY(QMessageBox)
    Q_DECLARE_PRIVATE(QMessageBox)
};

#define QT_REQUIRE_VERSION(argc, argv, str) { QString s = QString::fromLatin1(str);\
QString sq = qVersion(); if ((sq.section('.',0,0).toInt()&lt;&lt;16)+\
(sq.section('.',1,1).toInt()&lt;&lt;8)+sq.section('.',2,2).toInt()&lt;(s.section('.',0,0).toInt()&lt;&lt;16)+\
(s.section('.',1,1).toInt()&lt;&lt;8)+s.section('.',2,2).toInt()){if (!qApp){ new \
QApplication(argc,argv);} QString s = QApplication::tr("Executable '%1' requires Qt "\
 "%2, found Qt %3.").arg(qAppName()).arg(QString::fromLatin1(\
str)).arg(qVersion()); QMessageBox::critical(0, QApplication::tr(\
"Incompatible Qt Library Error"), s, QMessageBox::Abort,0); qFatal(s.toLatin1().data()); }}

#endif // QT_NO_MESSAGEBOX

#endif // QMESSAGEBOX_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmime.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QMIME_H
#define QMIME_H

#include &lt;QtCore/qmimedata.h>

QT_MODULE(Gui)

class Q_GUI_EXPORT QMimeSource
{
public:
    virtual ~QMimeSource();
    virtual const char* format(int n = 0) const = 0;
    virtual bool provides(const char*) const;
    virtual QByteArray encodedData(const char*) const = 0;
};


#if defined(Q_WS_WIN)

typedef struct tagFORMATETC FORMATETC;
typedef struct tagSTGMEDIUM STGMEDIUM;
struct IDataObject;

#include &lt;QtCore/qvariant.h>

/*
  Encapsulation of conversion between MIME and Windows CLIPFORMAT.
  Not need on X11, as the underlying protocol uses the MIME standard
  directly.
*/

class Q_GUI_EXPORT QWindowsMime {
public:
    QWindowsMime();
    virtual ~QWindowsMime();

    // for converting from Qt
    virtual bool canConvertFromMime(const FORMATETC &amp;formatetc, const QMimeData *mimeData) const = 0;
    virtual bool convertFromMime(const FORMATETC &amp;formatetc, const QMimeData *mimeData, STGMEDIUM * pmedium) const = 0;
    virtual QVector&lt;FORMATETC> formatsForMime(const QString &amp;mimeType, const QMimeData *mimeData) const = 0;

    // for converting to Qt
    virtual bool canConvertToMime(const QString &amp;mimeType, IDataObject *pDataObj) const = 0;
    virtual QVariant convertToMime(const QString &amp;mimeType, IDataObject *pDataObj, QVariant::Type preferredType) const = 0;
    virtual QString mimeForFormat(const FORMATETC &amp;formatetc) const = 0;

    static int registerMimeType(const QString &amp;mime);

private:
    friend class QClipboardWatcher;
    friend class QDragManager;
    friend class QDropData;
    friend class QOleDataObject;

    static QWindowsMime *converterToMime(const QString &amp;mimeType, IDataObject *pDataObj);
    static QStringList allMimesForFormats(IDataObject *pDataObj);
    static QWindowsMime *converterFromMime(const FORMATETC &amp;formatetc, const QMimeData *mimeData);
    static QVector&lt;FORMATETC> allFormatsForMime(const QMimeData *mimeData);
};

#endif
#if defined(Q_WS_MAC)

/*
  Encapsulation of conversion between MIME and Mac flavor.
  Not need on X11, as the underlying protocol uses the MIME standard
  directly.
*/

class Q_GUI_EXPORT QMacMime {
    char type;
public:
    enum QMacMimeType { MIME_DND=0x01, MIME_CLIP=0x02, MIME_QT_CONVERTOR=0x04, MIME_ALL=MIME_DND|MIME_CLIP };
    explicit QMacMime(char);
    virtual ~QMacMime();

    static void initialize();

    static QList&lt;QMacMime*> all(QMacMimeType);
    static QMacMime *convertor(QMacMimeType, const QString &amp;mime, int flav);
    static QString flavorToMime(QMacMimeType, int flav);

    virtual QString convertorName()=0;
    virtual int countFlavors()=0;
    virtual int flavor(int index)=0;
    virtual bool canConvert(const QString &amp;mime, int flav)=0;
    virtual QString mimeFor(int flav)=0;
    virtual int flavorFor(const QString &amp;mime)=0;
    virtual QVariant convertToMime(const QString &amp;mime, QList&lt;QByteArray> data, int flav)=0;
    virtual QList&lt;QByteArray> convertFromMime(const QString &amp;mime, QVariant data, int flav)=0;
};

#endif // Q_WS_MAC

#endif // QMIME_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmotifstyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QMOTIFSTYLE_H
#define QMOTIFSTYLE_H

#include &lt;QtGui/qcommonstyle.h>
#include &lt;QtCore/qpointer.h>

QT_MODULE(Gui)

#if !defined(QT_NO_STYLE_MOTIF)

class QPalette;
class QFocusFrame;

class QMotifStylePrivate;
class Q_GUI_EXPORT QMotifStyle : public QCommonStyle
{
    Q_OBJECT
public:
    explicit QMotifStyle(bool useHighlightCols=false);
    virtual ~QMotifStyle();

    void setUseHighlightColors(bool);
    bool useHighlightColors() const;

    void polish(QPalette&amp;);
    void polish(QWidget*);
    void unpolish(QWidget*);
    void polish(QApplication*);
    void unpolish(QApplication*);

    void drawPrimitive(PrimitiveElement pe, const QStyleOption *opt, QPainter *p,
                        const QWidget *w = 0) const;

    void drawControl(ControlElement element, const QStyleOption *opt, QPainter *p,
                      const QWidget *w = 0) const;

    void drawComplexControl(ComplexControl cc, const QStyleOptionComplex *opt, QPainter *p,
                            const QWidget *w = 0) const;

    QRect subControlRect(ComplexControl cc, const QStyleOptionComplex *opt,
                         SubControl sc, const QWidget *widget = 0) const;

    int pixelMetric(PixelMetric metric, const QStyleOption *option = 0,
                     const QWidget *widget = 0) const;

    QSize sizeFromContents(ContentsType ct, const QStyleOption *opt,
                           const QSize &amp;contentsSize, const QWidget *widget = 0) const;

    QRect subElementRect(SubElement r, const QStyleOption *opt, const QWidget *widget = 0) const;

    QPixmap standardPixmap(StandardPixmap standardPixmap, const QStyleOption *opt,
                           const QWidget *widget = 0) const;

    int styleHint(StyleHint hint, const QStyleOption *opt = 0, const QWidget *widget = 0,
                  QStyleHintReturn *returnData = 0) const;

    bool event(QEvent *);
    QPalette standardPalette() const;

protected:
    QPointer&lt;QFocusFrame> focus;
    QMotifStyle(QMotifStylePrivate &amp;dd, bool useHighlightCols = false);
    void timerEvent(QTimerEvent *event);
    bool eventFilter(QObject *o, QEvent *e);

private:
    Q_DECLARE_PRIVATE(QMotifStyle)
    Q_DISABLE_COPY(QMotifStyle)

    bool highlightCols;
};

#endif // QT_NO_STYLE_MOTIF

#endif // QMOTIFSTYLE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qmovie.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QMOVIE_H
#define QMOVIE_H

#include &lt;QtCore/qobject.h>

#ifndef QT_NO_MOVIE

#include &lt;QtCore/qbytearray.h>
#include &lt;QtCore/qlist.h>
#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qimagereader.h>

#ifdef QT3_SUPPORT
#include &lt;QtGui/qimage.h>
#include &lt;QtGui/qpixmap.h>
#endif

QT_MODULE(Gui)

class QByteArray;
class QColor;
class QIODevice;
class QImage;
class QPixmap;
class QRect;
class QSize;

class QMoviePrivate;
class Q_GUI_EXPORT QMovie : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QMovie)
    Q_ENUMS(MovieState CacheMode)
    Q_PROPERTY(int speed READ speed WRITE setSpeed)
    Q_PROPERTY(CacheMode cacheMode READ cacheMode WRITE setCacheMode)
public:
    enum MovieState {
        NotRunning,
        Paused,
        Running
    };
    enum CacheMode {
        CacheNone,
        CacheAll
    };

    QMovie(QObject *parent = 0);
    explicit QMovie(QIODevice *device, const QByteArray &amp;format = QByteArray(), QObject *parent = 0);
    explicit QMovie(const QString &amp;fileName, const QByteArray &amp;format = QByteArray(), QObject *parent = 0);
    ~QMovie();

    static QList&lt;QByteArray> supportedFormats();

    void setDevice(QIODevice *device);
    QIODevice *device() const;

    void setFileName(const QString &amp;fileName);
    QString fileName() const;

    void setFormat(const QByteArray &amp;format);
    QByteArray format() const;

    void setBackgroundColor(const QColor &amp;color);
    QColor backgroundColor() const;

    MovieState state() const;

    QRect frameRect() const;
    QImage currentImage() const;
    QPixmap currentPixmap() const;

    bool isValid() const;

    bool jumpToFrame(int frameNumber);
    int loopCount() const;
    int frameCount() const;
    int nextFrameDelay() const;
    int currentFrameNumber() const;

    int speed() const;

    QSize scaledSize();
    void setScaledSize(const QSize &amp;size);

    CacheMode cacheMode();
    void setCacheMode(CacheMode mode);

Q_SIGNALS:
    void started();
    void resized(const QSize &amp;size);
    void updated(const QRect &amp;rect);
    void stateChanged(QMovie::MovieState state);
    void error(QImageReader::ImageReaderError error);
    void finished();
    void frameChanged(int frameNumber);

public Q_SLOTS:
    void start();
    bool jumpToNextFrame();
    void setPaused(bool paused);
    void stop();
    void setSpeed(int percentSpeed);

private:
    Q_DISABLE_COPY(QMovie)
    Q_PRIVATE_SLOT(d_func(), void loadNextFrame())

#ifdef QT3_SUPPORT
public:
    inline QT3_SUPPORT bool isNull() const { return isValid(); }
    inline QT3_SUPPORT int frameNumber() const { return currentFrameNumber(); }
    inline QT3_SUPPORT bool running() const { return state() == Running; }
    inline QT3_SUPPORT bool paused() const { return state() == Paused; }
    inline QT3_SUPPORT bool finished() const { return state() == NotRunning; }
    inline QT3_SUPPORT void restart() { stop(); start(); }
    inline QT3_SUPPORT QImage frameImage() const { return currentImage(); }
    inline QT3_SUPPORT QPixmap framePixmap() const { return currentPixmap(); }
    inline QT3_SUPPORT void step() { jumpToNextFrame(); }
    inline QT3_SUPPORT void pause() { setPaused(true); }
    inline QT3_SUPPORT void unpause() { setPaused(false); }
#endif
};

#endif // QT_NO_MOVIE
#endif // QMOVIE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpagesetupdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPAGESETUPDIALOG_H
#define QPAGESETUPDIALOG_H

#include &lt;QtGui/qabstractpagesetupdialog.h>

QT_MODULE(Gui)

#ifndef QT_NO_PRINTDIALOG

class QPageSetupDialogPrivate;

class Q_GUI_EXPORT QPageSetupDialog : public QAbstractPageSetupDialog
{
    // ### Qt 5: Add Q_OBJECT macro
    Q_DECLARE_PRIVATE(QPageSetupDialog)

public:
    explicit QPageSetupDialog(QPrinter *printer, QWidget *parent = 0);

    virtual int exec();
#ifdef qdoc
    QPrinter *printer();
#endif
};

#endif // QT_NO_PRINTDIALOG

#endif // QPAGESETUPDIALOG_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpaintdevice.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPAINTDEVICE_H
#define QPAINTDEVICE_H

#include &lt;QtGui/qwindowdefs.h>
#include &lt;QtCore/qrect.h>

QT_MODULE(Gui)

#if defined(Q_WS_QWS)
class QWSDisplay;
#endif

class QPaintEngine;

class Q_GUI_EXPORT QPaintDevice                                // device for QPainter
{
public:
    enum PaintDeviceMetric {
        PdmWidth = 1,
        PdmHeight,
        PdmWidthMM,
        PdmHeightMM,
        PdmNumColors,
        PdmDepth,
        PdmDpiX,
        PdmDpiY,
        PdmPhysicalDpiX,
        PdmPhysicalDpiY
    };

    virtual ~QPaintDevice();

    virtual int devType() const;
    bool paintingActive() const;
    virtual QPaintEngine *paintEngine() const = 0;

#if defined(Q_WS_QWS)
    static QWSDisplay *qwsDisplay();
#endif

#ifdef Q_WS_WIN
    virtual HDC getDC() const;
    virtual void releaseDC(HDC hdc) const;
#endif

    int width() const { return metric(PdmWidth); }
    int height() const { return metric(PdmHeight); }
    int widthMM() const { return metric(PdmWidthMM); }
    int heightMM() const { return metric(PdmHeightMM); }
    int logicalDpiX() const { return metric(PdmDpiX); }
    int logicalDpiY() const { return metric(PdmDpiY); }
    int physicalDpiX() const { return metric(PdmPhysicalDpiX); }
    int physicalDpiY() const { return metric(PdmPhysicalDpiY); }
    int numColors() const { return metric(PdmNumColors); }
    int depth() const { return metric(PdmDepth); }

protected:
    QPaintDevice();
    virtual int metric(PaintDeviceMetric metric) const;

    ushort        painters;                        // refcount

private:
    Q_DISABLE_COPY(QPaintDevice)

#if defined(Q_WS_X11) &amp;&amp; defined(QT3_SUPPORT)
public:
    QT3_SUPPORT Display *x11Display() const;
    QT3_SUPPORT int x11Screen() const;
    QT3_SUPPORT int x11Depth() const;
    QT3_SUPPORT int x11Cells() const;
    QT3_SUPPORT Qt::HANDLE x11Colormap() const;
    QT3_SUPPORT bool x11DefaultColormap() const;
    QT3_SUPPORT void *x11Visual() const;
    QT3_SUPPORT bool x11DefaultVisual() const;

    static QT3_SUPPORT Display *x11AppDisplay();
    static QT3_SUPPORT int x11AppScreen();
    static QT3_SUPPORT int x11AppDepth(int screen = -1);
    static QT3_SUPPORT int x11AppCells(int screen = -1);
    static QT3_SUPPORT Qt::HANDLE x11AppRootWindow(int screen = -1);
    static QT3_SUPPORT Qt::HANDLE x11AppColormap(int screen = -1);
    static QT3_SUPPORT void *x11AppVisual(int screen = -1);
    static QT3_SUPPORT bool x11AppDefaultColormap(int screen =-1);
    static QT3_SUPPORT bool x11AppDefaultVisual(int screen =-1);
    static QT3_SUPPORT int x11AppDpiX(int screen = -1);
    static QT3_SUPPORT int x11AppDpiY(int screen = -1);
    static QT3_SUPPORT void x11SetAppDpiX(int, int);
    static QT3_SUPPORT void x11SetAppDpiY(int, int);
#endif

    friend class QPainter;
    friend class QQuickDrawPaintEngine;
    friend class QFontEngineMac;
};

#ifdef QT3_SUPPORT
QT3_SUPPORT Q_GUI_EXPORT
void bitBlt(QPaintDevice *dst, int dx, int dy,
             const QPaintDevice *src, int sx=0, int sy=0, int sw=-1, int sh=-1,
             bool ignoreMask=false);

QT3_SUPPORT Q_GUI_EXPORT
void bitBlt(QPaintDevice *dst, int dx, int dy,
             const QImage *src, int sx=0, int sy=0, int sw=-1, int sh=-1,
             int conversion_flags=0);

QT3_SUPPORT Q_GUI_EXPORT
void bitBlt(QPaintDevice *dst, const QPoint &amp;dp,
            const QPaintDevice *src, const QRect &amp;sr=QRect(0,0,-1,-1),
            bool ignoreMask=false);
#endif

/*****************************************************************************
  Inline functions
 *****************************************************************************/

inline int QPaintDevice::devType() const
{ return QInternal::UnknownDevice; }

inline bool QPaintDevice::paintingActive() const
{ return painters != 0; }

#endif // QPAINTDEVICE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpaintengine.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPAINTENGINE_H
#define QPAINTENGINE_H

#include &lt;QtCore/qnamespace.h>
#include &lt;QtCore/qobjectdefs.h>
#include &lt;QtGui/qpainter.h>

QT_MODULE(Gui)

class QFontEngine;
class QLineF;
class QPaintDevice;
class QPaintEnginePrivate;
class QPainterPath;
class QPointF;
class QPolygonF;
class QRectF;
struct QGlyphLayout;
class QTextItemInt;
class QPaintEngineState;

class Q_GUI_EXPORT QTextItem {
public:
    enum RenderFlag {
        RightToLeft = 0x1,
        Overline = 0x10,
        Underline = 0x20,
        StrikeOut = 0x40,

        Dummy = 0xffffffff
    };
    Q_DECLARE_FLAGS(RenderFlags, RenderFlag)
    qreal descent() const;
    qreal ascent() const;
    qreal width() const;

    RenderFlags renderFlags() const;
    QString text() const;
    QFont font() const;
};
Q_DECLARE_TYPEINFO(QTextItem, Q_PRIMITIVE_TYPE);


class Q_GUI_EXPORT QPaintEngine
{
    Q_DECLARE_PRIVATE(QPaintEngine)
public:
    enum PaintEngineFeature {
        PrimitiveTransform        = 0x00000001, // Can transform primitives brushes
        PatternTransform          = 0x00000002, // Can transform pattern brushes
        PixmapTransform           = 0x00000004, // Can transform pixmaps
        PatternBrush              = 0x00000008, // Can fill with pixmaps and standard patterns
        LinearGradientFill   	  = 0x00000010, // Can fill gradient areas
        RadialGradientFill        = 0x00000020, // Can render radial gradients
        ConicalGradientFill       = 0x00000040, // Can render conical gradients
	AlphaBlend                = 0x00000080, // Can do source over alpha blend
	PorterDuff                = 0x00000100, // Can do general porter duff compositions
        PainterPaths              = 0x00000200, // Can fill, outline and clip paths
        Antialiasing              = 0x00000400, // Can antialias lines
        BrushStroke               = 0x00000800, // Can render brush based pens
        PaintOutsidePaintEvent    = 0x20000000, // Engine is capable of painting outside paint events
        AllFeatures               = 0xffffffff  // For convenience
    };
    Q_DECLARE_FLAGS(PaintEngineFeatures, PaintEngineFeature)

    enum DirtyFlag {
        DirtyPen                = 0x0001,
        DirtyBrush              = 0x0002,
        DirtyBrushOrigin        = 0x0004,
        DirtyFont               = 0x0008,
        DirtyBackground         = 0x0010,
        DirtyBackgroundMode     = 0x0020,
        DirtyTransform          = 0x0040,
        DirtyClipRegion         = 0x0080,
        DirtyClipPath           = 0x0100,
        DirtyHints              = 0x0200,
        DirtyCompositionMode    = 0x0400,
        DirtyClipEnabled        = 0x0800,

        AllDirty                = 0xffff
    };
    Q_DECLARE_FLAGS(DirtyFlags, DirtyFlag)

    enum PolygonDrawMode {
        OddEvenMode,
        WindingMode,
        ConvexMode,
        PolylineMode
    };

    explicit QPaintEngine(PaintEngineFeatures features=0);
    virtual ~QPaintEngine();

    bool isActive() const { return active; }
    void setActive(bool newState) { active = newState; }

    virtual bool begin(QPaintDevice *pdev) = 0;
    virtual bool end() = 0;

    virtual void updateState(const QPaintEngineState &amp;state) = 0;

    virtual void drawRects(const QRect *rects, int rectCount);
    virtual void drawRects(const QRectF *rects, int rectCount);

    virtual void drawLines(const QLine *lines, int lineCount);
    virtual void drawLines(const QLineF *lines, int lineCount);

    virtual void drawEllipse(const QRectF &amp;r);
    virtual void drawEllipse(const QRect &amp;r);

    virtual void drawPath(const QPainterPath &amp;path);

    virtual void drawPoints(const QPointF *points, int pointCount);
    virtual void drawPoints(const QPoint *points, int pointCount);

    virtual void drawPolygon(const QPointF *points, int pointCount, PolygonDrawMode mode);
    virtual void drawPolygon(const QPoint *points, int pointCount, PolygonDrawMode mode);

    virtual void drawPixmap(const QRectF &amp;r, const QPixmap &amp;pm, const QRectF &amp;sr) = 0;
    virtual void drawTextItem(const QPointF &amp;p, const QTextItem &amp;textItem);
    virtual void drawTiledPixmap(const QRectF &amp;r, const QPixmap &amp;pixmap, const QPointF &amp;s);
    virtual void drawImage(const QRectF &amp;r, const QImage &amp;pm, const QRectF &amp;sr,
                           Qt::ImageConversionFlags flags = Qt::AutoColor);

    void setPaintDevice(QPaintDevice *device);
    QPaintDevice *paintDevice() const;

    void setSystemClip(const QRegion &amp;baseClip);
    QRegion systemClip() const;

    void setSystemRect(const QRect &amp;rect);
    QRect systemRect() const;

#ifdef Q_WS_WIN
    virtual HDC getDC() const;
    virtual void releaseDC(HDC hdc) const;
#endif

    virtual QPoint coordinateOffset() const;

    enum Type {
        X11,
        Windows,
        QuickDraw, CoreGraphics, MacPrinter,
        QWindowSystem,
        PostScript,
        OpenGL,
        Picture,
        SVG,
        Raster,

        User = 50,    // first user type id
        MaxUser = 100 // last user type id
    };
    virtual Type type() const = 0;

    inline void fix_neg_rect(int *x, int *y, int *w, int *h);

    inline bool testDirty(DirtyFlags df);
    inline void setDirty(DirtyFlags df);
    inline void clearDirty(DirtyFlags df);

    bool hasFeature(PaintEngineFeatures feature) const { return (gccaps &amp; feature) != 0; }

    QPainter *painter() const;

    inline void syncState() { Q_ASSERT(state); updateState(*state); }

protected:
    QPaintEngine(QPaintEnginePrivate &amp;data, PaintEngineFeatures devcaps=0);

    QPaintEngineState *state;
    PaintEngineFeatures gccaps;

    uint active : 1;
    uint selfDestruct : 1;

    QPaintEnginePrivate *d_ptr;

private:
    void setAutoDestruct(bool autoDestr) { selfDestruct = autoDestr; }
    bool autoDestruct() const { return selfDestruct; }

    friend class QFontEngineBox;
    friend class QFontEngineMac;
    friend class QFontEngineWin;
#ifndef QT_NO_FREETYPE
    friend class QFontEngineFT;
#endif
#ifndef QT_NO_QWS_QPF
    friend class QFontEngineQPF;
#endif
    friend class QPSPrintEngine;
    friend class QMacPrintEngine;
    friend class QMacPrintEnginePrivate;
    friend class QPainter;
    friend class QPainterPrivate;
    friend class QWidget;
    friend class QWin32PaintEngine;
    friend class QWin32PaintEnginePrivate;
    friend class QMacCGContext;
};


class Q_GUI_EXPORT QPaintEngineState
{
public:
    QPaintEngine::DirtyFlags state() const { return dirtyFlags; }

    QPen pen() const;

    QBrush brush() const;
    QPointF brushOrigin() const;

    QBrush backgroundBrush() const;
    Qt::BGMode backgroundMode() const;

    QFont font() const;

    QMatrix matrix() const;

    Qt::ClipOperation clipOperation() const;
    QRegion clipRegion() const;
    QPainterPath clipPath() const;
    bool isClipEnabled() const;

    QPainter::RenderHints renderHints() const;

    QPainter::CompositionMode compositionMode() const;



    QPainter *painter() const;

protected:
    friend class QPaintEngine;
    friend class QPainter;
    friend class QPainterPrivate;

    QPaintEngine::DirtyFlags dirtyFlags;
};

//
// inline functions
//

inline void QPaintEngine::fix_neg_rect(int *x, int *y, int *w, int *h)
{
    if (*w &lt; 0) {
        *w = -*w;
        *x -= *w - 1;
    }
    if (*h &lt; 0) {
        *h = -*h;
        *y -= *h - 1;
    }
}

inline bool QPaintEngine::testDirty(DirtyFlags df) {
    Q_ASSERT(state);
    return ((state->dirtyFlags &amp; df) != 0);
}

inline void QPaintEngine::setDirty(DirtyFlags df) {
    Q_ASSERT(state);
    state->dirtyFlags |= df;
}

inline void QPaintEngine::clearDirty(DirtyFlags df)
{
    Q_ASSERT(state);
    state->dirtyFlags &amp;= ~static_cast&lt;uint>(df);
}

Q_DECLARE_OPERATORS_FOR_FLAGS(QTextItem::RenderFlags)
Q_DECLARE_OPERATORS_FOR_FLAGS(QPaintEngine::PaintEngineFeatures)
Q_DECLARE_OPERATORS_FOR_FLAGS(QPaintEngine::DirtyFlags)

#endif // QPAINTENGINE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpainter.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPAINTER_H
#define QPAINTER_H

#include &lt;QtCore/qnamespace.h>
#include &lt;QtCore/qrect.h>
#include &lt;QtCore/qpoint.h>
#include &lt;QtGui/qpixmap.h>
#include &lt;QtGui/qimage.h>
#include &lt;QtGui/qtextoption.h>
#include &lt;QtGui/qdrawutil.h>

#ifndef QT_INCLUDE_COMPAT
#include &lt;QtGui/qpolygon.h>
#include &lt;QtGui/qpen.h>
#include &lt;QtGui/qbrush.h>
#include &lt;QtGui/qmatrix.h>
#include &lt;QtGui/qfontinfo.h>
#include &lt;QtGui/qfontmetrics.h>
#endif

QT_MODULE(Gui)

class QBrush;
class QFontInfo;
class QFontMetrics;
class QPaintDevice;
class QPainterPath;
class QPainterPrivate;
class QPen;
class QPolygon;
class QTextItem;
class QMatrix;

class Q_GUI_EXPORT QPainter
{
    Q_DECLARE_PRIVATE(QPainter)

public:
    enum RenderHint {
        Antialiasing = 0x01,
        TextAntialiasing = 0x02,
        SmoothPixmapTransform = 0x04
    };

    Q_DECLARE_FLAGS(RenderHints, RenderHint)

    QPainter();
    explicit QPainter(QPaintDevice *);
    ~QPainter();

    QPaintDevice *device() const;

    bool begin(QPaintDevice *);
    bool end();
    bool isActive() const;

    void initFrom(const QWidget *widget);

    enum CompositionMode {
        CompositionMode_SourceOver,
        CompositionMode_DestinationOver,
        CompositionMode_Clear,
        CompositionMode_Source,
        CompositionMode_Destination,
        CompositionMode_SourceIn,
        CompositionMode_DestinationIn,
        CompositionMode_SourceOut,
        CompositionMode_DestinationOut,
        CompositionMode_SourceAtop,
        CompositionMode_DestinationAtop,
        CompositionMode_Xor
    };
    void setCompositionMode(CompositionMode mode);
    CompositionMode compositionMode() const;

    const QFont &amp;font() const;
    void setFont(const QFont &amp;f);

    QFontMetrics fontMetrics() const;
    QFontInfo fontInfo() const;

    void setPen(const QColor &amp;color);
    void setPen(const QPen &amp;pen);
    void setPen(Qt::PenStyle style);
    const QPen &amp;pen() const;

    void setBrush(const QBrush &amp;brush);
    void setBrush(Qt::BrushStyle style);
    const QBrush &amp;brush() const;

    // attributes/modes
    void setBackgroundMode(Qt::BGMode mode);
    Qt::BGMode backgroundMode() const;

    QPoint brushOrigin() const;
    inline void setBrushOrigin(int x, int y);
    inline void setBrushOrigin(const QPoint &amp;);
    void setBrushOrigin(const QPointF &amp;);

    void setBackground(const QBrush &amp;bg);
    const QBrush &amp;background() const;

    // Clip functions
    QRegion clipRegion() const;
    QPainterPath clipPath() const;

    void setClipRect(const QRectF &amp;, Qt::ClipOperation op = Qt::ReplaceClip);
    inline void setClipRect(const QRect &amp;, Qt::ClipOperation op = Qt::ReplaceClip);
    inline void setClipRect(int x, int y, int w, int h, Qt::ClipOperation op = Qt::ReplaceClip);

    void setClipRegion(const QRegion &amp;, Qt::ClipOperation op = Qt::ReplaceClip);

    void setClipPath(const QPainterPath &amp;path, Qt::ClipOperation op = Qt::ReplaceClip);

    void setClipping(bool enable);
    bool hasClipping() const;

    void save();
    void restore();

    // XForm functions
    void setMatrix(const QMatrix &amp;matrix, bool combine = false);
    const QMatrix &amp;matrix() const;
    const QMatrix &amp;deviceMatrix() const;
    void resetMatrix();

    void setMatrixEnabled(bool enabled);
    bool matrixEnabled() const;

    void scale(qreal sx, qreal sy);
    void shear(qreal sh, qreal sv);
    void rotate(qreal a);

    void translate(const QPointF &amp;offset);
    inline void translate(const QPoint &amp;offset);
    inline void translate(qreal dx, qreal dy);

    QRect window() const;
    void setWindow(const QRect &amp;window);
    inline void setWindow(int x, int y, int w, int h);

    QRect viewport() const;
    void setViewport(const QRect &amp;viewport);
    inline void setViewport(int x, int y, int w, int h);

    void setViewTransformEnabled(bool enable);
    bool viewTransformEnabled() const;

    // drawing functions
    void strokePath(const QPainterPath &amp;path, const QPen &amp;pen);
    void fillPath(const QPainterPath &amp;path, const QBrush &amp;brush);
    void drawPath(const QPainterPath &amp;path);

    inline void drawPoint(const QPointF &amp;pt);
    inline void drawPoint(const QPoint &amp;p);
    inline void drawPoint(int x, int y);

    void drawPoints(const QPointF *points, int pointCount);
    inline void drawPoints(const QPolygonF &amp;points);
    void drawPoints(const QPoint *points, int pointCount);
    inline void drawPoints(const QPolygon &amp;points);

    inline void drawLine(const QLineF &amp;line);
    inline void drawLine(const QLine &amp;line);
    inline void drawLine(int x1, int y1, int x2, int y2);
    inline void drawLine(const QPoint &amp;p1, const QPoint &amp;p2);
    inline void drawLine(const QPointF &amp;p1, const QPointF &amp;p2);

    void drawLines(const QLineF *lines, int lineCount);
    inline void drawLines(const QVector&lt;QLineF> &amp;lines);
    void drawLines(const QPointF *pointPairs, int lineCount);
    inline void drawLines(const QVector&lt;QPointF> &amp;pointPairs);
    void drawLines(const QLine *lines, int lineCount);
    inline void drawLines(const QVector&lt;QLine> &amp;lines);
    void drawLines(const QPoint *pointPairs, int lineCount);
    inline void drawLines(const QVector&lt;QPoint> &amp;pointPairs);

    inline void drawRect(const QRectF &amp;rect);
    inline void drawRect(int x1, int y1, int w, int h);
    inline void drawRect(const QRect &amp;rect);

    void drawRects(const QRectF *rects, int rectCount);
    inline void drawRects(const QVector&lt;QRectF> &amp;rectangles);
    void drawRects(const QRect *rects, int rectCount);
    inline void drawRects(const QVector&lt;QRect> &amp;rectangles);

    void drawEllipse(const QRectF &amp;r);
    void drawEllipse(const QRect &amp;r);
    inline void drawEllipse(int x, int y, int w, int h);

    void drawPolyline(const QPointF *points, int pointCount);
    inline void drawPolyline(const QPolygonF &amp;polyline);
    void drawPolyline(const QPoint *points, int pointCount);
    inline void drawPolyline(const QPolygon &amp;polygon);

    void drawPolygon(const QPointF *points, int pointCount, Qt::FillRule fillRule = Qt::OddEvenFill);
    inline void drawPolygon(const QPolygonF &amp;polygon, Qt::FillRule fillRule = Qt::OddEvenFill);
    void drawPolygon(const QPoint *points, int pointCount, Qt::FillRule fillRule = Qt::OddEvenFill);
    inline void drawPolygon(const QPolygon &amp;polygon, Qt::FillRule fillRule = Qt::OddEvenFill);

    void drawConvexPolygon(const QPointF *points, int pointCount);
    inline void drawConvexPolygon(const QPolygonF &amp;polygon);
    void drawConvexPolygon(const QPoint *points, int pointCount);
    inline void drawConvexPolygon(const QPolygon &amp;polygon);

    void drawArc(const QRectF &amp;rect, int a, int alen);
    inline void drawArc(const QRect &amp;, int a, int alen);
    inline void drawArc(int x, int y, int w, int h, int a, int alen);

    void drawPie(const QRectF &amp;rect, int a, int alen);
    inline void drawPie(int x, int y, int w, int h, int a, int alen);
    inline void drawPie(const QRect &amp;, int a, int alen);

    void drawChord(const QRectF &amp;rect, int a, int alen);
    inline void drawChord(int x, int y, int w, int h, int a, int alen);
    inline void drawChord(const QRect &amp;, int a, int alen);

    void drawRoundRect(const QRectF &amp;r, int xround = 25, int yround = 25);
    inline void drawRoundRect(int x, int y, int w, int h, int = 25, int = 25);
    inline void drawRoundRect(const QRect &amp;r, int xround = 25, int yround = 25);

    void drawTiledPixmap(const QRectF &amp;rect, const QPixmap &amp;pm, const QPointF &amp;offset = QPointF());
    inline void drawTiledPixmap(int x, int y, int w, int h, const QPixmap &amp;, int sx=0, int sy=0);
    inline void drawTiledPixmap(const QRect &amp;, const QPixmap &amp;, const QPoint &amp; = QPoint());
#ifndef QT_NO_PICTURE
    void drawPicture(const QPointF &amp;p, const QPicture &amp;picture);
    inline void drawPicture(int x, int y, const QPicture &amp;picture);
    inline void drawPicture(const QPoint &amp;p, const QPicture &amp;picture);
#endif

    void drawPixmap(const QRectF &amp;targetRect, const QPixmap &amp;pixmap, const QRectF &amp;sourceRect);
    inline void drawPixmap(const QRect &amp;targetRect, const QPixmap &amp;pixmap, const QRect &amp;sourceRect);
    inline void drawPixmap(int x, int y, int w, int h, const QPixmap &amp;pm,
                           int sx, int sy, int sw, int sh);
    inline void drawPixmap(int x, int y, const QPixmap &amp;pm,
                           int sx, int sy, int sw, int sh);
    inline void drawPixmap(const QPointF &amp;p, const QPixmap &amp;pm, const QRectF &amp;sr);
    inline void drawPixmap(const QPoint &amp;p, const QPixmap &amp;pm, const QRect &amp;sr);
    inline void drawPixmap(const QPointF &amp;p, const QPixmap &amp;pm);
    inline void drawPixmap(const QPoint &amp;p, const QPixmap &amp;pm);
    inline void drawPixmap(int x, int y, const QPixmap &amp;pm);
    inline void drawPixmap(const QRect &amp;r, const QPixmap &amp;pm);
    inline void drawPixmap(int x, int y, int w, int h, const QPixmap &amp;pm);

    void drawImage(const QRectF &amp;targetRect, const QImage &amp;image, const QRectF &amp;sourceRect,
                   Qt::ImageConversionFlags flags = Qt::AutoColor);
    inline void drawImage(const QRect &amp;targetRect, const QImage &amp;image, const QRect &amp;sourceRect,
                          Qt::ImageConversionFlags flags = Qt::AutoColor);
    inline void drawImage(const QPointF &amp;p, const QImage &amp;image, const QRectF &amp;sr,
                          Qt::ImageConversionFlags flags = Qt::AutoColor);
    inline void drawImage(const QPoint &amp;p, const QImage &amp;image, const QRect &amp;sr,
                          Qt::ImageConversionFlags flags = Qt::AutoColor);
    inline void drawImage(const QRectF &amp;r, const QImage &amp;image);
    inline void drawImage(const QRect &amp;r, const QImage &amp;image);
    inline void drawImage(const QPointF &amp;p, const QImage &amp;image);
    inline void drawImage(const QPoint &amp;p, const QImage &amp;image);
    inline void drawImage(int x, int y, const QImage &amp;image, int sx = 0, int sy = 0,
                          int sw = -1, int sh = -1, Qt::ImageConversionFlags flags = Qt::AutoColor);

    void setLayoutDirection(Qt::LayoutDirection direction);
    Qt::LayoutDirection layoutDirection() const;

    void drawText(const QPointF &amp;p, const QString &amp;s);
    inline void drawText(const QPoint &amp;p, const QString &amp;s);
    inline void drawText(int x, int y, const QString &amp;s);

    void drawText(const QRectF &amp;r, int flags, const QString &amp;text, QRectF *br=0);
    void drawText(const QRect &amp;r, int flags, const QString &amp;text, QRect *br=0);
    inline void drawText(int x, int y, int w, int h, int flags, const QString &amp;text, QRect *br=0);

    void drawText(const QRectF &amp;r, const QString &amp;text, const QTextOption &amp;o = QTextOption());

    QRectF boundingRect(const QRectF &amp;rect, int flags, const QString &amp;text);
    QRect boundingRect(const QRect &amp;rect, int flags, const QString &amp;text);
    inline QRect boundingRect(int x, int y, int w, int h, int flags, const QString &amp;text);

    QRectF boundingRect(const QRectF &amp;rect, const QString &amp;text, const QTextOption &amp;o = QTextOption());

    void drawTextItem(const QPointF &amp;p, const QTextItem &amp;ti);
    inline void drawTextItem(int x, int y, const QTextItem &amp;ti);
    inline void drawTextItem(const QPoint &amp;p, const QTextItem &amp;ti);

    void fillRect(const QRectF &amp;, const QBrush &amp;);
    inline void fillRect(int x, int y, int w, int h, const QBrush &amp;);
    void fillRect(const QRect &amp;, const QBrush &amp;);

    void eraseRect(const QRectF &amp;);
    inline void eraseRect(int x, int y, int w, int h);
    inline void eraseRect(const QRect &amp;);

    void setRenderHint(RenderHint hint, bool on = true);
    RenderHints renderHints() const;

    QPaintEngine *paintEngine() const;

    static void setRedirected(const QPaintDevice *device, QPaintDevice *replacement,
                              const QPoint&amp; offset = QPoint());
    static QPaintDevice *redirected(const QPaintDevice *device, QPoint *offset = 0);
    static void restoreRedirected(const QPaintDevice *device);

#ifdef QT3_SUPPORT

    inline QT3_SUPPORT void setBackgroundColor(const QColor &amp;color) { setBackground(color); }
    inline QT3_SUPPORT const QColor &amp;backgroundColor() const { return background().color(); }

    inline QT3_SUPPORT void drawText(int x, int y, const QString &amp;s, int pos, int len)
        { drawText(x, y, s.mid(pos, len)); }
    inline QT3_SUPPORT void drawText(const QPoint &amp;p, const QString &amp;s, int pos, int len)
        { drawText(p, s.mid(pos, len)); }
    inline QT3_SUPPORT void drawText(int x, int y, const QString &amp;s, int len)
        { drawText(x, y, s.left(len)); }
    inline QT3_SUPPORT void drawText(const QPoint &amp;p, const QString &amp;s, int len)
        { drawText(p, s.left(len)); }
    inline QT3_SUPPORT void drawText(const QRect &amp;r, int flags, const QString &amp;str, int len, QRect *br=0)
        { drawText(r, flags, str.left(len), br); }
    inline QT3_SUPPORT void drawText(int x, int y, int w, int h, int flags, const QString &amp;text, int len, QRect *br=0)
        { drawText(QRect(x, y, w, h), flags, text.left(len), br); }
    inline QT3_SUPPORT QRect boundingRect(const QRect &amp;rect, int flags, const QString &amp;text, int len)
        { return boundingRect(rect, flags, text.left(len)); }
    inline QT3_SUPPORT QRect boundingRect(int x, int y, int w, int h, int flags, const QString &amp;text, int len)
        { return boundingRect(QRect(x, y, w, h), flags, text.left(len)); }

    inline QT3_SUPPORT bool begin(QPaintDevice *pdev, const QWidget *init)
        { bool ret = begin(pdev); initFrom(init); return ret; }
    QT3_SUPPORT void drawPoints(const QPolygon &amp;pa, int index, int npoints = -1)
    { drawPoints(pa.constData() + index, npoints == -1 ? pa.size() - index : npoints); }

    QT3_SUPPORT void drawCubicBezier(const QPolygon &amp;pa, int index = 0);

    QT3_SUPPORT void drawLineSegments(const QPolygon &amp;points, int index = 0, int nlines = -1);

    inline QT3_SUPPORT void drawPolyline(const QPolygon &amp;pa, int index, int npoints = -1)
    { drawPolyline(pa.constData() + index, npoints == -1 ? pa.size() - index : npoints); }

    inline QT3_SUPPORT void drawPolygon(const QPolygon &amp;pa, bool winding, int index = 0, int npoints = -1)
    { drawPolygon(pa.constData() + index, npoints == -1 ? pa.size() - index : npoints,
                  winding ? Qt::WindingFill : Qt::OddEvenFill); }

    inline QT3_SUPPORT void drawPolygon(const QPolygonF &amp;polygon, bool winding, int index = 0,
                                      int npoints = -1)
    { drawPolygon(polygon.constData() + index, npoints == -1 ? polygon.size() - index : npoints,
                  winding ? Qt::WindingFill : Qt::OddEvenFill); }

    inline QT3_SUPPORT void drawConvexPolygon(const QPolygonF &amp;polygon, int index, int npoints = -1)
    { drawConvexPolygon(polygon.constData() + index, npoints == -1 ? polygon.size() - index : npoints); }
    inline QT3_SUPPORT void drawConvexPolygon(const QPolygon &amp;pa, int index, int npoints = -1)
    { drawConvexPolygon(pa.constData() + index, npoints == -1 ? pa.size() - index : npoints); }

    static inline QT3_SUPPORT void redirect(QPaintDevice *pdev, QPaintDevice *replacement)
    { setRedirected(pdev, replacement); }
    static inline QT3_SUPPORT QPaintDevice *redirect(QPaintDevice *pdev)
    { return const_cast&lt;QPaintDevice*>(redirected(pdev)); }

    inline QT3_SUPPORT void setWorldMatrix(const QMatrix &amp;wm, bool combine=false) { setMatrix(wm, combine); }
    inline QT3_SUPPORT const QMatrix &amp;worldMatrix() const { return matrix(); }
    inline QT3_SUPPORT void setWorldXForm(bool enabled) { setMatrixEnabled(enabled); }
    inline QT3_SUPPORT bool hasWorldXForm() const { return matrixEnabled(); }
    inline QT3_SUPPORT void resetXForm() { resetMatrix(); }

    inline QT3_SUPPORT void setViewXForm(bool enabled) { setViewTransformEnabled(enabled); }
    inline QT3_SUPPORT bool hasViewXForm() const { return viewTransformEnabled(); }

    QT3_SUPPORT void map(int x, int y, int *rx, int *ry) const;
    QT3_SUPPORT QPoint xForm(const QPoint &amp;) const; // map virtual -> deviceb
    QT3_SUPPORT QRect xForm(const QRect &amp;) const;
    QT3_SUPPORT QPolygon xForm(const QPolygon &amp;) const;
    QT3_SUPPORT QPolygon xForm(const QPolygon &amp;, int index, int npoints) const;
    QT3_SUPPORT QPoint xFormDev(const QPoint &amp;) const; // map device -> virtual
    QT3_SUPPORT QRect xFormDev(const QRect &amp;) const;
    QT3_SUPPORT QPolygon xFormDev(const QPolygon &amp;) const;
    QT3_SUPPORT QPolygon xFormDev(const QPolygon &amp;, int index, int npoints) const;
    QT3_SUPPORT qreal translationX() const;
    QT3_SUPPORT qreal translationY() const;
#endif

private:
    friend class Q3Painter;
    friend void qt_format_text(const QFont &amp;font, const QRectF &amp;_r, int tf, const QString&amp; str,
                               QRectF *brect, int tabstops, int* tabarray, int tabarraylen,
                               QPainter *painter);

    QPainterPrivate *d_ptr;

    friend class QFontEngine;
    friend class QFontEngineBox;
    friend class QFontEngineFT;
    friend class QFontEngineMac;
    friend class QFontEngineWin;
    friend class QFontEngineXLFD;
    friend class QWSManager;
    friend class QPaintEngine;
    friend class QX11PaintEngine;
    friend class QX11PaintEnginePrivate;
    friend class QWin32PaintEngine;
    friend class QWin32PaintEnginePrivate;
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QPainter::RenderHints)

//
// functions
//
inline void QPainter::drawLine(const QLineF &amp;l)
{
    drawLines(&amp;l, 1);
}

inline void QPainter::drawLine(const QLine &amp;line)
{
    drawLines(&amp;line, 1);
}

inline void QPainter::drawLine(int x1, int y1, int x2, int y2)
{
    QLine l(x1, y1, x2, y2);
    drawLines(&amp;l, 1);
}

inline void QPainter::drawLine(const QPoint &amp;p1, const QPoint &amp;p2)
{
    QLine l(p1, p2);
    drawLines(&amp;l, 1);
}

inline void QPainter::drawLine(const QPointF &amp;p1, const QPointF &amp;p2)
{
    drawLine(QLineF(p1, p2));
}

inline void QPainter::drawLines(const QVector&lt;QLineF> &amp;lines)
{
    drawLines(lines.constData(), lines.size());
}

inline void QPainter::drawLines(const QVector&lt;QLine> &amp;lines)
{
    drawLines(lines.constData(), lines.size());
}

inline void QPainter::drawLines(const QVector&lt;QPointF> &amp;pointPairs)
{
    drawLines(pointPairs.constData(), pointPairs.size() / 2);
}

inline void QPainter::drawLines(const QVector&lt;QPoint> &amp;pointPairs)
{
    drawLines(pointPairs.constData(), pointPairs.size() / 2);
}

inline void QPainter::drawPolyline(const QPolygonF &amp;polyline)
{
    drawPolyline(polyline.constData(), polyline.size());
}

inline void QPainter::drawPolyline(const QPolygon &amp;polyline)
{
    drawPolyline(polyline.constData(), polyline.size());
}

inline void QPainter::drawPolygon(const QPolygonF &amp;polygon, Qt::FillRule fillRule)
{
    drawPolygon(polygon.constData(), polygon.size(), fillRule);
}

inline void QPainter::drawPolygon(const QPolygon &amp;polygon, Qt::FillRule fillRule)
{
    drawPolygon(polygon.constData(), polygon.size(), fillRule);
}

inline void QPainter::drawConvexPolygon(const QPolygonF &amp;poly)
{
    drawConvexPolygon(poly.constData(), poly.size());
}

inline void QPainter::drawConvexPolygon(const QPolygon &amp;poly)
{
    drawConvexPolygon(poly.constData(), poly.size());
}

inline void QPainter::drawRect(const QRectF &amp;rect)
{
    drawRects(&amp;rect, 1);
}

inline void QPainter::drawRect(int x, int y, int w, int h)
{
    QRect r(x, y, w, h);
    drawRects(&amp;r, 1);
}

inline void QPainter::drawRect(const QRect &amp;r)
{
    drawRects(&amp;r, 1);
}

inline void QPainter::drawRects(const QVector&lt;QRectF> &amp;rects)
{
    drawRects(rects.constData(), rects.size());
}

inline void QPainter::drawRects(const QVector&lt;QRect> &amp;rects)
{
    drawRects(rects.constData(), rects.size());
}

inline void QPainter::drawPoint(const QPointF &amp;p)
{
    drawPoints(&amp;p, 1);
}

inline void QPainter::drawPoint(int x, int y)
{
    QPoint p(x, y);
    drawPoints(&amp;p, 1);
}

inline void QPainter::drawPoint(const QPoint &amp;p)
{
    drawPoints(&amp;p, 1);
}

inline void QPainter::drawPoints(const QPolygonF &amp;points)
{
    drawPoints(points.constData(), points.size());
}

inline void QPainter::drawPoints(const QPolygon &amp;points)
{
    drawPoints(points.constData(), points.size());
}

inline void QPainter::drawRoundRect(int x, int y, int w, int h, int xRnd, int yRnd)
{
    drawRoundRect(QRectF(x, y, w, h), xRnd, yRnd);
}

inline void QPainter::drawRoundRect(const QRect &amp;rect, int xRnd, int yRnd)
{
    drawRoundRect(QRectF(rect), xRnd, yRnd);
}

inline void QPainter::drawEllipse(int x, int y, int w, int h)
{
    drawEllipse(QRect(x, y, w, h));
}

inline void QPainter::drawArc(const QRect &amp;r, int a, int alen)
{
    drawArc(QRectF(r), a, alen);
}

inline void QPainter::drawArc(int x, int y, int w, int h, int a, int alen)
{
    drawArc(QRectF(x, y, w, h), a, alen);
}

inline void QPainter::drawPie(const QRect &amp;rect, int a, int alen)
{
    drawPie(QRectF(rect), a, alen);
}

inline void QPainter::drawPie(int x, int y, int w, int h, int a, int alen)
{
    drawPie(QRectF(x, y, w, h), a, alen);
}

inline void QPainter::drawChord(const QRect &amp;rect, int a, int alen)
{
    drawChord(QRectF(rect), a, alen);
}

inline void QPainter::drawChord(int x, int y, int w, int h, int a, int alen)
{
    drawChord(QRectF(x, y, w, h), a, alen);
}

inline void QPainter::setClipRect(int x, int y, int w, int h, Qt::ClipOperation op)
{
    setClipRect(QRectF(x, y, w, h), op);
}

inline void QPainter::setClipRect(const QRect &amp;rect, Qt::ClipOperation op)
{
    setClipRect(QRectF(rect), op);
}

inline void QPainter::eraseRect(const QRect &amp;rect)
{
    eraseRect(QRectF(rect));
}

inline void QPainter::eraseRect(int x, int y, int w, int h)
{
    eraseRect(QRectF(x, y, w, h));
}

inline void QPainter::fillRect(int x, int y, int w, int h, const QBrush &amp;b)
{
    fillRect(QRect(x, y, w, h), b);
}

inline void QPainter::setBrushOrigin(int x, int y)
{
    setBrushOrigin(QPoint(x, y));
}

inline void QPainter::setBrushOrigin(const QPoint &amp;p)
{
    setBrushOrigin(QPointF(p));
}

inline void QPainter::drawTiledPixmap(const QRect &amp;rect, const QPixmap &amp;pm, const QPoint &amp;offset)
{
    drawTiledPixmap(QRectF(rect), pm, QPointF(offset));
}

inline void QPainter::drawTiledPixmap(int x, int y, int w, int h, const QPixmap &amp;pm, int sx, int sy)
{
    drawTiledPixmap(QRectF(x, y, w, h), pm, QPointF(sx, sy));
}

inline void QPainter::drawPixmap(const QRect &amp;targetRect, const QPixmap &amp;pixmap, const QRect &amp;sourceRect)
{
    drawPixmap(QRectF(targetRect), pixmap, QRectF(sourceRect));
}

inline void QPainter::drawPixmap(const QPointF &amp;p, const QPixmap &amp;pm)
{
    drawPixmap(QRectF(p.x(), p.y(), -1, -1), pm, QRectF());
}

inline void QPainter::drawPixmap(const QPoint &amp;p, const QPixmap &amp;pm)
{
    drawPixmap(QRectF(p.x(), p.y(), -1, -1), pm, QRectF());
}

inline void QPainter::drawPixmap(const QRect &amp;r, const QPixmap &amp;pm)
{
    drawPixmap(QRectF(r), pm, QRectF());
}

inline void QPainter::drawPixmap(int x, int y, const QPixmap &amp;pm)
{
    drawPixmap(QRectF(x, y, -1, -1), pm, QRectF());
}

inline void QPainter::drawPixmap(int x, int y, int w, int h, const QPixmap &amp;pm)
{
    drawPixmap(QRectF(x, y, w, h), pm, QRectF());
}

inline void QPainter::drawPixmap(int x, int y, int w, int h, const QPixmap &amp;pm,
                                 int sx, int sy, int sw, int sh)
{
    drawPixmap(QRectF(x, y, w, h), pm, QRectF(sx, sy, sw, sh));
}

inline void QPainter::drawPixmap(int x, int y, const QPixmap &amp;pm,
                                 int sx, int sy, int sw, int sh)
{
    drawPixmap(QRectF(x, y, -1, -1), pm, QRectF(sx, sy, sw, sh));
}

inline void QPainter::drawPixmap(const QPointF &amp;p, const QPixmap &amp;pm, const QRectF &amp;sr)
{
    drawPixmap(QRectF(p.x(), p.y(), -1, -1), pm, sr);
}

inline void QPainter::drawPixmap(const QPoint &amp;p, const QPixmap &amp;pm, const QRect &amp;sr)
{
    drawPixmap(QRectF(p.x(), p.y(), -1, -1), pm, sr);
}

inline void QPainter::drawTextItem(int x, int y, const QTextItem &amp;ti)
{
    drawTextItem(QPointF(x, y), ti);
}

inline void QPainter::drawImage(const QRect &amp;targetRect, const QImage &amp;image, const QRect &amp;sourceRect,
                                Qt::ImageConversionFlags flags)
{
    drawImage(QRectF(targetRect), image, QRectF(sourceRect), flags);
}

inline void QPainter::drawImage(const QPointF &amp;p, const QImage &amp;image, const QRectF &amp;sr,
                                Qt::ImageConversionFlags flags)
{
    drawImage(QRectF(p.x(), p.y(), -1, -1), image, sr, flags);
}

inline void QPainter::drawImage(const QPoint &amp;p, const QImage &amp;image, const QRect &amp;sr,
                                Qt::ImageConversionFlags flags)
{
    drawImage(QRect(p.x(), p.y(), -1, -1), image, sr, flags);
}


inline void QPainter::drawImage(const QRectF &amp;r, const QImage &amp;image)
{
    drawImage(r, image, QRect(0, 0, image.width(), image.height()));
}

inline void QPainter::drawImage(const QRect &amp;r, const QImage &amp;image)
{
    drawImage(r, image, QRectF(0, 0, image.width(), image.height()));
}

inline void QPainter::drawImage(const QPointF &amp;p, const QImage &amp;image)
{
    drawImage(QRectF(p.x(), p.y(), -1, -1), image, QRectF(0, 0, image.width(), image.height()));
}

inline void QPainter::drawImage(const QPoint &amp;p, const QImage &amp;image)
{
    drawImage(QRectF(p.x(), p.y(), -1, -1), image, QRectF(0, 0, image.width(), image.height()));
}

inline void QPainter::drawImage(int x, int y, const QImage &amp;image, int sx, int sy, int sw, int sh,
                                Qt::ImageConversionFlags flags)
{
    drawImage(QRectF(x, y, -1, -1), image, QRectF(sx, sy, sw, sh), flags);
}

inline void QPainter::drawTextItem(const QPoint &amp;p, const QTextItem &amp;ti)
{
    drawTextItem(QPointF(p), ti);
}

inline void QPainter::drawText(const QPoint &amp;p, const QString &amp;s)
{
    drawText(QPointF(p), s);
}

inline void QPainter::drawText(int x, int y, int w, int h, int flags, const QString &amp;str, QRect *br)
{
    drawText(QRect(x, y, w, h), flags, str, br);
}

inline void QPainter::drawText(int x, int y, const QString &amp;s)
{
    drawText(QPointF(x, y), s);
}

inline QRect QPainter::boundingRect(int x, int y, int w, int h, int flags, const QString &amp;text)
{
    return boundingRect(QRect(x, y, w, h), flags, text);
}

inline void QPainter::translate(qreal dx, qreal dy)
{
    translate(QPointF(dx, dy));
}

inline void QPainter::translate(const QPoint &amp;offset)
{
    translate(offset.x(), offset.y());
}

inline void QPainter::setViewport(int x, int y, int w, int h)
{
    setViewport(QRect(x, y, w, h));
}

inline void QPainter::setWindow(int x, int y, int w, int h)
{
    setWindow(QRect(x, y, w, h));
}

#ifndef QT_NO_PICTURE
inline void QPainter::drawPicture(int x, int y, const QPicture &amp;p)
{
    drawPicture(QPoint(x, y), p);
}

inline void QPainter::drawPicture(const QPoint &amp;pt, const QPicture &amp;p)
{
    drawPicture(QPointF(pt), p);
}
#endif

#endif // QPAINTER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpainterpath.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPAINTERPATH_H
#define QPAINTERPATH_H

#include &lt;QtGui/qmatrix.h>
#include &lt;QtCore/qglobal.h>
#include &lt;QtCore/qrect.h>
#include &lt;QtCore/qline.h>
#include &lt;QtCore/qvector.h>

QT_MODULE(Gui)

class QFont;
class QPainterPathPrivate;
class QPainterPathData;
class QPainterPathStrokerPrivate;
class QPolygonF;
class QRegion;

class Q_GUI_EXPORT QPainterPath
{
public:
    enum ElementType {
        MoveToElement,
        LineToElement,
        CurveToElement,
        CurveToDataElement
    };

    class Element {
    public:
        qreal x;
        qreal y;
        ElementType type;

        bool isMoveTo() const { return type == MoveToElement; }
        bool isLineTo() const { return type == LineToElement; }
        bool isCurveTo() const { return type == CurveToElement; }

        operator QPointF () const { return QPointF(x, y); }

        bool operator==(const Element &amp;e) const { return qFuzzyCompare(x, e.x)
            &amp;&amp; qFuzzyCompare(y, e.y) &amp;&amp; type == e.type; }
    };

    QPainterPath();
    explicit QPainterPath(const QPointF &amp;startPoint);
    QPainterPath(const QPainterPath &amp;other);
    QPainterPath &amp;operator=(const QPainterPath &amp;other);
    ~QPainterPath();

    void closeSubpath();

    void moveTo(const QPointF &amp;p);
    inline void moveTo(qreal x, qreal y);

    void lineTo(const QPointF &amp;p);
    inline void lineTo(qreal x, qreal y);

    void arcTo(const QRectF &amp;rect, qreal startAngle, qreal arcLength);
    inline void arcTo(qreal x, qreal y, qreal w, qreal h, qreal startAngle, qreal arcLength);

    void cubicTo(const QPointF &amp;ctrlPt1, const QPointF &amp;ctrlPt2, const QPointF &amp;endPt);
    inline void cubicTo(qreal ctrlPt1x, qreal ctrlPt1y, qreal ctrlPt2x, qreal ctrlPt2y,
                        qreal endPtx, qreal endPty);
    void quadTo(const QPointF &amp;ctrlPt, const QPointF &amp;endPt);
    inline void quadTo(qreal ctrlPtx, qreal ctrlPty, qreal endPtx, qreal endPty);

    QPointF currentPosition() const;

    void addRect(const QRectF &amp;rect);
    inline void addRect(qreal x, qreal y, qreal w, qreal h);
    void addEllipse(const QRectF &amp;rect);
    inline void addEllipse(qreal x, qreal y, qreal w, qreal h);
    void addPolygon(const QPolygonF &amp;polygon);
    void addText(const QPointF &amp;point, const QFont &amp;f, const QString &amp;text);
    inline void addText(qreal x, qreal y, const QFont &amp;f, const QString &amp;text);
    void addPath(const QPainterPath &amp;path);
    void addRegion(const QRegion &amp;region);

    void connectPath(const QPainterPath &amp;path);

    bool contains(const QPointF &amp;pt) const;
    bool contains(const QRectF &amp;rect) const;
    bool intersects(const QRectF &amp;rect) const;

    QRectF boundingRect() const;
    QRectF controlPointRect() const;

    Qt::FillRule fillRule() const;
    void setFillRule(Qt::FillRule fillRule);

    inline bool isEmpty() const;

    QPainterPath toReversed() const;
    QList&lt;QPolygonF> toSubpathPolygons(const QMatrix &amp;matrix = QMatrix()) const;
    QList&lt;QPolygonF> toFillPolygons(const QMatrix &amp;matrix = QMatrix()) const;
    QPolygonF toFillPolygon(const QMatrix &amp;matrix = QMatrix()) const;

    inline int elementCount() const;
    inline const QPainterPath::Element &amp;elementAt(int i) const;

    bool operator==(const QPainterPath &amp;other) const;
    bool operator!=(const QPainterPath &amp;other) const;

private:
    QPainterPathPrivate *d_ptr;

    inline void ensureData() { if (!d_ptr) ensureData_helper(); }
    void ensureData_helper();
    inline void detach();
    void detach_helper();

    QPainterPathData *d_func() const { return reinterpret_cast&lt;QPainterPathData *>(d_ptr); }

    friend class QPainterPathData;
    friend class QPainterPathStroker;
    friend class QPainterPathStrokerPrivate;
    friend class QMatrix;

#ifndef QT_NO_DATASTREAM
    friend Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QPainterPath &amp;);
    friend Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QPainterPath &amp;);
#endif
};

class QPainterPathPrivate
{
    friend class QPainterPath;
    friend class QPainterPathData;
    friend class QPainterPathStroker;
    friend class QPainterPathStrokerPrivate;
    friend class QMatrix;
#ifndef QT_NO_DATASTREAM
    friend Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QPainterPath &amp;);
    friend Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QPainterPath &amp;);
#endif
private:
    QAtomic ref;
    QVector&lt;QPainterPath::Element> elements;
};

Q_DECLARE_TYPEINFO(QPainterPath::Element, Q_PRIMITIVE_TYPE);

#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QPainterPath &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QPainterPath &amp;);
#endif

class Q_GUI_EXPORT QPainterPathStroker
{
    Q_DECLARE_PRIVATE(QPainterPathStroker)
public:
    QPainterPathStroker();
    ~QPainterPathStroker();

    void setWidth(qreal width);
    qreal width() const;

    void setCapStyle(Qt::PenCapStyle style);
    Qt::PenCapStyle capStyle() const;

    void setJoinStyle(Qt::PenJoinStyle style);
    Qt::PenJoinStyle joinStyle() const;

    void setMiterLimit(qreal length);
    qreal miterLimit() const;

    void setCurveThreshold(qreal threshold);
    qreal curveThreshold() const;

    void setDashPattern(Qt::PenStyle);
    void setDashPattern(const QVector&lt;qreal> &amp;dashPattern);
    QVector&lt;qreal> dashPattern() const;

    QPainterPath createStroke(const QPainterPath &amp;path) const;

private:
    QPainterPathStrokerPrivate *d_ptr;
};

inline void QPainterPath::moveTo(qreal x, qreal y)
{
    moveTo(QPointF(x, y));
}

inline void QPainterPath::lineTo(qreal x, qreal y)
{
    lineTo(QPointF(x, y));
}

inline void QPainterPath::arcTo(qreal x, qreal y, qreal w, qreal h, qreal startAngle, qreal arcLenght)
{
    arcTo(QRectF(x, y, w, h), startAngle, arcLenght);
}

inline void QPainterPath::cubicTo(qreal ctrlPt1x, qreal ctrlPt1y, qreal ctrlPt2x, qreal ctrlPt2y,
                                   qreal endPtx, qreal endPty)
{
    cubicTo(QPointF(ctrlPt1x, ctrlPt1y), QPointF(ctrlPt2x, ctrlPt2y),
            QPointF(endPtx, endPty));
}

inline void QPainterPath::quadTo(qreal ctrlPtx, qreal ctrlPty, qreal endPtx, qreal endPty)
{
    quadTo(QPointF(ctrlPtx, ctrlPty), QPointF(endPtx, endPty));
}

inline void QPainterPath::addEllipse(qreal x, qreal y, qreal w, qreal h)
{
    addEllipse(QRectF(x, y, w, h));
}

inline void QPainterPath::addRect(qreal x, qreal y, qreal w, qreal h)
{
    addRect(QRectF(x, y, w, h));
}

inline void QPainterPath::addText(qreal x, qreal y, const QFont &amp;f, const QString &amp;text)
{
    addText(QPointF(x, y), f, text);
}

inline bool QPainterPath::isEmpty() const
{
    return !d_ptr || (d_ptr->elements.size() == 1 &amp;&amp; d_ptr->elements.first().type == MoveToElement);
}

inline int QPainterPath::elementCount() const
{
    return d_ptr ? d_ptr->elements.size() : 0;
}

inline const QPainterPath::Element &amp;QPainterPath::elementAt(int i) const
{
    Q_ASSERT(d_ptr);
    Q_ASSERT(i >= 0 &amp;&amp; i &lt; elementCount());
    return d_ptr->elements.at(i);
}

inline void QPainterPath::detach()
{
    if (d_ptr->ref != 1)
        detach_helper();
}

#endif // QPAINTERPATH_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpalette.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPALETTE_H
#define QPALETTE_H

#include &lt;QtGui/qwindowdefs.h>
#include &lt;QtGui/qcolor.h>
#include &lt;QtGui/qbrush.h>

QT_MODULE(Gui)

#ifdef QT3_SUPPORT
class QColorGroup;
#endif
class QPalettePrivate;
class QVariant;

class Q_GUI_EXPORT QPalette
{
    Q_GADGET
    Q_ENUMS(ColorGroup ColorRole)
public:
    QPalette();
    QPalette(const QColor &amp;button);
    QPalette(Qt::GlobalColor button);
    QPalette(const QColor &amp;button, const QColor &amp;window);
    QPalette(const QBrush &amp;windowText, const QBrush &amp;button, const QBrush &amp;light,
             const QBrush &amp;dark, const QBrush &amp;mid, const QBrush &amp;text,
             const QBrush &amp;bright_text, const QBrush &amp;base, const QBrush &amp;window);
    QPalette(const QColor &amp;windowText, const QColor &amp;window, const QColor &amp;light,
             const QColor &amp;dark, const QColor &amp;mid, const QColor &amp;text, const QColor &amp;base);
#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QPalette(const QColorGroup &amp;active, const QColorGroup &amp;disabled, const QColorGroup &amp;inactive);
#endif
    QPalette(const QPalette &amp;palette);
    ~QPalette();
    QPalette &amp;operator=(const QPalette &amp;palette);
    operator QVariant() const;

    // Do not change the order, the serialization format depends on it
    enum ColorGroup { Active, Disabled, Inactive, NColorGroups, Current, All, Normal = Active };
    enum ColorRole { WindowText, Button, Light, Midlight, Dark, Mid,
                     Text, BrightText, ButtonText, Base, Window, Shadow,
                     Highlight, HighlightedText, Link, LinkVisited, AlternateBase,
                     NColorRoles, NoRole = NColorRoles
                     // ## deprecated
                     , Foreground = WindowText, Background = Window
                   };

    inline ColorGroup currentColorGroup() const { return static_cast&lt;ColorGroup>(current_group); }
    inline void setCurrentColorGroup(ColorGroup cg) { current_group = cg; }

    inline const QColor &amp;color(ColorGroup cg, ColorRole cr) const
    { return brush(cg, cr).color(); }
    const QBrush &amp;brush(ColorGroup cg, ColorRole cr) const;
    inline void setColor(ColorGroup cg, ColorRole cr, const QColor &amp;color);
    inline void setColor(ColorRole cr, const QColor &amp;color);
    inline void setBrush(ColorRole cr, const QBrush &amp;brush);
    void setBrush(ColorGroup cg, ColorRole cr, const QBrush &amp;brush);
    void setColorGroup(ColorGroup cr, const QBrush &amp;windowText, const QBrush &amp;button,
                       const QBrush &amp;light, const QBrush &amp;dark, const QBrush &amp;mid,
                       const QBrush &amp;text, const QBrush &amp;bright_text, const QBrush &amp;base,
                       const QBrush &amp;window);
    bool isEqual(ColorGroup cr1, ColorGroup cr2) const;

    inline const QColor &amp;color(ColorRole cr) const { return color(Current, cr); }
    inline const QBrush &amp;brush(ColorRole cr) const { return brush(Current, cr); }
    inline const QBrush &amp;foreground() const { return brush(Foreground); }
    inline const QBrush &amp;windowText() const { return brush(WindowText); }
    inline const QBrush &amp;button() const { return brush(Button); }
    inline const QBrush &amp;light() const { return brush(Light); }
    inline const QBrush &amp;dark() const { return brush(Dark); }
    inline const QBrush &amp;mid() const { return brush(Mid); }
    inline const QBrush &amp;text() const { return brush(Text); }
    inline const QBrush &amp;base() const { return brush(Base); }
    inline const QBrush &amp;alternateBase() const { return brush(AlternateBase); }
    inline const QBrush &amp;background() const { return brush(Background); }
    inline const QBrush &amp;window() const { return brush(Window); }
    inline const QBrush &amp;midlight() const { return brush(Midlight); }
    inline const QBrush &amp;brightText() const { return brush(BrightText); }
    inline const QBrush &amp;buttonText() const { return brush(ButtonText); }
    inline const QBrush &amp;shadow() const { return brush(Shadow); }
    inline const QBrush &amp;highlight() const { return brush(Highlight); }
    inline const QBrush &amp;highlightedText() const { return brush(HighlightedText); }
    inline const QBrush &amp;link() const { return brush(Link); }
    inline const QBrush &amp;linkVisited() const { return brush(LinkVisited); }

#ifdef QT3_SUPPORT
    inline QT3_SUPPORT QPalette copy() const { QPalette p = *this; p.detach(); return p; }
    QT3_SUPPORT QColorGroup normal() const;
    inline QT3_SUPPORT void setNormal(const QColorGroup &amp;cg) { setColorGroup(Active, cg); }

    QT3_SUPPORT QColorGroup active() const;
    QT3_SUPPORT QColorGroup disabled() const;
    QT3_SUPPORT QColorGroup inactive() const;
    inline QT3_SUPPORT void setActive(const QColorGroup &amp;cg) { setColorGroup(Active, cg); }
    inline QT3_SUPPORT void setDisabled(const QColorGroup &amp;cg) { setColorGroup(Disabled, cg); }
    inline QT3_SUPPORT void setInactive(const QColorGroup &amp;cg) { setColorGroup(Inactive, cg); }
#endif

    bool operator==(const QPalette &amp;p) const;
    inline bool operator!=(const QPalette &amp;p) const { return !(operator==(p)); }
    bool isCopyOf(const QPalette &amp;p) const;

    int serialNumber() const;

    QPalette resolve(const QPalette &amp;) const;
    inline uint resolve() const { return resolve_mask; }
    inline void resolve(uint mask) { resolve_mask = mask; }

private:
    void setColorGroup(ColorGroup cr, const QBrush &amp;windowText, const QBrush &amp;button,
                       const QBrush &amp;light, const QBrush &amp;dark, const QBrush &amp;mid,
                       const QBrush &amp;text, const QBrush &amp;bright_text,
                       const QBrush &amp;base, const QBrush &amp;alternate_base,
                       const QBrush &amp;window, const QBrush &amp;midlight,
                       const QBrush &amp;button_text, const QBrush &amp;shadow,
                       const QBrush &amp;highlight, const QBrush &amp;highlighted_text,
                       const QBrush &amp;link, const QBrush &amp;link_visited);
#ifdef QT3_SUPPORT
    friend class QColorGroup;
    void setColorGroup(ColorGroup, const QColorGroup &amp;);
    QColorGroup createColorGroup(ColorGroup) const;
#endif
    void init();
    void detach();

    QPalettePrivate *d;
    uint current_group : 4;
    uint resolve_mask : 28;
    friend Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;s, const QPalette &amp;p);
};

inline void QPalette::setColor(ColorGroup acg, ColorRole acr,
                               const QColor &amp;acolor)
{ setBrush(acg, acr, QBrush(acolor)); }
inline void QPalette::setColor(ColorRole acr, const QColor &amp;acolor)
{ setColor(All, acr, acolor); }
inline void QPalette::setBrush(ColorRole acr, const QBrush &amp;abrush)
{ setBrush(All, acr, abrush); }

#ifdef QT3_SUPPORT
class Q_GUI_EXPORT QColorGroup : public QPalette
{
public:
    inline QColorGroup() : QPalette() {}
    inline QColorGroup(const QBrush &amp;foreground, const QBrush &amp;button, const QBrush &amp;light,
                const QBrush &amp;dark, const QBrush &amp;mid, const QBrush &amp;text,
                const QBrush &amp;bright_text, const QBrush &amp;base, const QBrush &amp;background)
        : QPalette(foreground, button, light, dark, mid, text, bright_text, base, background)
    {}
    inline QColorGroup(const QColor &amp;foreground, const QColor &amp;background, const QColor &amp;light,
                const QColor &amp;dark, const QColor &amp;mid, const QColor &amp;text, const QColor &amp;base)
        : QPalette(foreground, background, light, dark, mid, text, base) {}
    inline QColorGroup(const QColorGroup &amp;cg) : QPalette(cg) {}
    inline QColorGroup(const QPalette &amp;pal) : QPalette(pal) {}
    bool operator==(const QColorGroup &amp;other) const;
    inline bool operator!=(const QColorGroup &amp;other) const { return !(operator==(other)); }
    operator QVariant() const;

    inline QT3_SUPPORT const QColor &amp;foreground() const { return color(Foreground); }
    inline QT3_SUPPORT const QColor &amp;button() const { return color(Button); }
    inline QT3_SUPPORT const QColor &amp;light() const { return color(Light); }
    inline QT3_SUPPORT const QColor &amp;dark() const { return color(Dark); }
    inline QT3_SUPPORT const QColor &amp;mid() const { return color(Mid); }
    inline QT3_SUPPORT const QColor &amp;text() const { return color(Text); }
    inline QT3_SUPPORT const QColor &amp;base() const { return color(Base); }
    inline QT3_SUPPORT const QColor &amp;background() const { return color(Background); }
    inline QT3_SUPPORT const QColor &amp;midlight() const { return color(Midlight); }
    inline QT3_SUPPORT const QColor &amp;brightText() const { return color(BrightText); }
    inline QT3_SUPPORT const QColor &amp;buttonText() const { return color(ButtonText); }
    inline QT3_SUPPORT const QColor &amp;shadow() const { return color(Shadow); }
    inline QT3_SUPPORT const QColor &amp;highlight() const { return color(Highlight); }
    inline QT3_SUPPORT const QColor &amp;highlightedText() const { return color(HighlightedText); }
    inline QT3_SUPPORT const QColor &amp;link() const { return color(Link); }
    inline QT3_SUPPORT const QColor &amp;linkVisited() const { return color(LinkVisited); }
};

#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QT3_SUPPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;ds, const QColorGroup &amp;cg);
Q_GUI_EXPORT QT3_SUPPORT QDataStream &amp;operator>>(QDataStream &amp;ds, QColorGroup &amp;cg);
#endif

inline QColorGroup QPalette::inactive() const { return createColorGroup(Inactive); }
inline QColorGroup QPalette::disabled() const { return createColorGroup(Disabled); }
inline QColorGroup QPalette::active() const { return createColorGroup(Active); }
inline QColorGroup QPalette::normal() const { return createColorGroup(Active); }

#endif

/*****************************************************************************
  QPalette stream functions
 *****************************************************************************/
#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;ds, const QPalette &amp;p);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;ds, QPalette &amp;p);
#endif // QT_NO_DATASTREAM

#endif // QPALETTE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpen.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPEN_H
#define QPEN_H

#include &lt;QtGui/qcolor.h>

QT_MODULE(Gui)

class QVariant;
class QPenPrivate;
class QBrush;
class QPen;

#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QPen &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QPen &amp;);
#endif

class Q_GUI_EXPORT QPen
{
public:
    QPen();
    QPen(Qt::PenStyle);
    QPen(const QColor &amp;color);
    QPen(const QBrush &amp;brush, qreal width, Qt::PenStyle s = Qt::SolidLine,
         Qt::PenCapStyle c = Qt::SquareCap, Qt::PenJoinStyle j = Qt::BevelJoin);
    QPen(const QPen &amp;pen);

    ~QPen();

    QPen &amp;operator=(const QPen &amp;pen);

    Qt::PenStyle style() const;
    void setStyle(Qt::PenStyle);

    QVector&lt;qreal> dashPattern() const;
    void setDashPattern(const QVector&lt;qreal> &amp;pattern);

    qreal miterLimit() const;
    void setMiterLimit(qreal limit);

    qreal widthF() const;
    void setWidthF(qreal width);

    int width() const;
    void setWidth(int width);

    QColor color() const;
    void setColor(const QColor &amp;color);

    QBrush brush() const;
    void setBrush(const QBrush &amp;brush);

    bool isSolid() const;

    Qt::PenCapStyle capStyle() const;
    void setCapStyle(Qt::PenCapStyle pcs);

    Qt::PenJoinStyle joinStyle() const;
    void setJoinStyle(Qt::PenJoinStyle pcs);

    bool operator==(const QPen &amp;p) const;
    inline bool operator!=(const QPen &amp;p) const { return !(operator==(p)); }
    operator QVariant() const;

    bool isDetached();
private:
    friend class QPainter;
    friend Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QPen &amp;);
    friend Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QPen &amp;);

    void detach();
    class QPenPrivate *d;
};
Q_DECLARE_TYPEINFO(QPen, Q_MOVABLE_TYPE);
Q_DECLARE_SHARED(QPen)

#ifndef QT_NO_DEBUG_STREAM
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug, const QPen &amp;);
#endif

#endif // QPEN_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpicture.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPICTURE_H
#define QPICTURE_H

#include &lt;QtGui/qpaintdevice.h>
#include &lt;QtCore/qstringlist.h>

QT_MODULE(Gui)

#ifndef QT_NO_PICTURE

class QPicturePrivate;
class Q_GUI_EXPORT QPicture : public QPaintDevice
{
    Q_DECLARE_PRIVATE(QPicture)
public:
    explicit QPicture(int formatVersion = -1);
    QPicture(const QPicture &amp;);
    ~QPicture();

    bool isNull() const;

    int devType() const;
    uint size() const;
    const char* data() const;
    virtual void setData(const char* data, uint size);

    bool play(QPainter *p);

    bool load(QIODevice *dev, const char *format = 0);
    bool load(const QString &amp;fileName, const char *format = 0);
    bool save(QIODevice *dev, const char *format = 0);
    bool save(const QString &amp;fileName, const char *format = 0);

    QRect boundingRect() const;
    void setBoundingRect(const QRect &amp;r);

    QPicture&amp; operator=(const QPicture &amp;p);
    void detach();
    bool isDetached() const;

    friend Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;in, const QPicture &amp;p);
    friend Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;in, QPicture &amp;p);

    static const char* pictureFormat(const QString &amp;fileName);
    static QList&lt;QByteArray> inputFormats();
    static QList&lt;QByteArray> outputFormats();
    static QStringList inputFormatList();
    static QStringList outputFormatList();

    QPaintEngine *paintEngine() const;

protected:
    QPicture(QPicturePrivate &amp;data);

    int metric(PaintDeviceMetric m) const;
#ifdef QT3_SUPPORT
    inline QT3_SUPPORT QPicture copy() const { QPicture p(*this); p.detach(); return p; }
#endif

private:
    bool exec(QPainter *p, QDataStream &amp;ds, int i);
    void detach_helper();

    QPicturePrivate *d_ptr;
    friend class QPicturePaintEngine;
    friend class Q3Picture;
};

Q_DECLARE_SHARED(QPicture)


#ifndef QT_NO_PICTUREIO
class QIODevice;
class QPictureIO;
typedef void (*picture_io_handler)(QPictureIO *); // picture IO handler

struct QPictureIOData;

class Q_GUI_EXPORT QPictureIO
{
public:
    QPictureIO();
    QPictureIO(QIODevice *ioDevice, const char *format);
    QPictureIO(const QString &amp;fileName, const char *format);
    ~QPictureIO();

    const QPicture &amp;picture() const;
    int status() const;
    const char *format() const;
    QIODevice *ioDevice() const;
    QString fileName() const;
    int quality() const;
    QString description() const;
    const char *parameters() const;
    float gamma() const;

    void setPicture(const QPicture &amp;);
    void setStatus(int);
    void setFormat(const char *);
    void setIODevice(QIODevice *);
    void setFileName(const QString &amp;);
    void setQuality(int);
    void setDescription(const QString &amp;);
    void setParameters(const char *);
    void setGamma(float);

    bool read();
    bool write();

    static QByteArray pictureFormat(const QString &amp;fileName);
    static QByteArray pictureFormat(QIODevice *);
    static QList&lt;QByteArray> inputFormats();
    static QList&lt;QByteArray> outputFormats();

    static void defineIOHandler(const char *format,
                                const char *header,
                                const char *flags,
                                picture_io_handler read_picture,
                                picture_io_handler write_picture);

private:
    Q_DISABLE_COPY(QPictureIO)

    void init();

    QPictureIOData *d;
};

#endif //QT_NO_PICTUREIO


/*****************************************************************************
  QPicture stream functions
 *****************************************************************************/

Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QPicture &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QPicture &amp;);

#endif // QT_NO_PICTURE

#endif // QPICTURE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpictureformatplugin.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPICTUREFORMATPLUGIN_H
#define QPICTUREFORMATPLUGIN_H

#include &lt;QtCore/qplugin.h>
#include &lt;QtCore/qfactoryinterface.h>

QT_MODULE(Gui)

#if !defined(QT_NO_LIBRARY) &amp;&amp; !defined(QT_NO_PICTURE)

class QPicture;
class QImage;
class QString;
class QStringList;

struct Q_GUI_EXPORT QPictureFormatInterface : public QFactoryInterface
{
    virtual bool loadPicture(const QString &amp;format, const QString &amp;filename, QPicture *) = 0;
    virtual bool savePicture(const QString &amp;format, const QString &amp;filename, const QPicture &amp;) = 0;

    virtual bool installIOHandler(const QString &amp;) = 0;
};

#define QPictureFormatInterface_iid "com.trolltech.Qt.QPictureFormatInterface"
Q_DECLARE_INTERFACE(QPictureFormatInterface, QPictureFormatInterface_iid)


class Q_GUI_EXPORT QPictureFormatPlugin : public QObject, public QPictureFormatInterface
{
    Q_OBJECT
    Q_INTERFACES(QPictureFormatInterface:QFactoryInterface)
public:
    explicit QPictureFormatPlugin(QObject *parent = 0);
    ~QPictureFormatPlugin();

    virtual QStringList keys() const = 0;
    virtual bool loadPicture(const QString &amp;format, const QString &amp;filename, QPicture *pic);
    virtual bool savePicture(const QString &amp;format, const QString &amp;filename, const QPicture &amp;pic);
    virtual bool installIOHandler(const QString &amp;format) = 0;

};

#endif // QT_NO_LIBRARY || QT_NO_PICTURE

#endif // QPICTUREFORMATPLUGIN_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpixmap.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
 **
 ** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
 **
 ** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
 **
 ** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
 **
 ** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 ** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 **
 ****************************************************************************/

#ifndef QPIXMAP_H
#define QPIXMAP_H

#include &lt;QtGui/qpaintdevice.h>
#include &lt;QtGui/qcolor.h>
#include &lt;QtCore/qnamespace.h>
#include &lt;QtCore/qstring.h> // char*->QString conversion
#include &lt;QtGui/qimage.h>

QT_MODULE(Gui)

class QImageWriter;
class QPixmapPrivate;
class QColor;
class QVariant;
class QX11Info;

struct QPixmapData;

class Q_GUI_EXPORT QPixmap : public QPaintDevice
{
public:
    QPixmap();
    QPixmap(int w, int h);
    QPixmap(const QSize &amp;);
    QPixmap(const QString&amp; fileName, const char *format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor);
#ifndef QT_NO_IMAGEFORMAT_XPM
    QPixmap(const char * const xpm[]);
#endif
    QPixmap(const QPixmap &amp;);
    ~QPixmap();

    QPixmap &amp;operator=(const QPixmap &amp;);
    operator QVariant() const;

    bool isNull() const;
    int devType() const;

    int width() const;
    int height() const;
    QSize size() const;
    QRect rect() const;
    int depth() const;

    static int defaultDepth();

    void fill(const QColor &amp;fillColor = Qt::white);
    void fill(const QWidget *widget, const QPoint &amp;ofs);
    inline void fill(const QWidget *widget, int xofs, int yofs) { fill(widget, QPoint(xofs, yofs)); }

    QBitmap mask() const;
    void setMask(const QBitmap &amp;);

    QPixmap alphaChannel() const;
    void setAlphaChannel(const QPixmap &amp;);

    bool hasAlpha() const;
    bool hasAlphaChannel() const;

#ifndef QT_NO_IMAGE_HEURISTIC_MASK
    QBitmap createHeuristicMask(bool clipTight = true) const;
#endif
    QBitmap createMaskFromColor(const QColor &amp;maskColor) const;

    static QPixmap grabWindow(WId, int x=0, int y=0, int w=-1, int h=-1);
    static QPixmap grabWidget(QWidget *widget, const QRect &amp;rect);
    static inline QPixmap grabWidget(QWidget *widget, int x=0, int y=0, int w=-1, int h=-1)
    { return grabWidget(widget, QRect(x, y, w, h)); }


    inline QPixmap scaled(int w, int h, Qt::AspectRatioMode aspectMode = Qt::IgnoreAspectRatio,
                          Qt::TransformationMode mode = Qt::FastTransformation) const
        { return scaled(QSize(w, h), aspectMode, mode); }
    QPixmap scaled(const QSize &amp;s, Qt::AspectRatioMode aspectMode = Qt::IgnoreAspectRatio,
                   Qt::TransformationMode mode = Qt::FastTransformation) const;
    QPixmap scaledToWidth(int w, Qt::TransformationMode mode = Qt::FastTransformation) const;
    QPixmap scaledToHeight(int h, Qt::TransformationMode mode = Qt::FastTransformation) const;
    QPixmap transformed(const QMatrix &amp;, Qt::TransformationMode mode = Qt::FastTransformation) const;
    static QMatrix trueMatrix(const QMatrix &amp;m, int w, int h);

    QImage toImage() const;
    static QPixmap fromImage(const QImage &amp;image, Qt::ImageConversionFlags flags = Qt::AutoColor);

    bool load(const QString&amp; fileName, const char *format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor);
    bool loadFromData(const uchar *buf, uint len, const char* format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor);
    inline bool loadFromData(const QByteArray &amp;data, const char* format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor);
    bool save(const QString&amp; fileName, const char* format, int quality = -1) const;
    bool save(QIODevice* device, const char* format, int quality = -1) const;

#if defined(Q_WS_WIN)
    enum HBitmapFormat {
        NoAlpha,
        PremultipliedAlpha
    };

    HBITMAP toWinHBITMAP(HBitmapFormat format = NoAlpha) const;
    static QPixmap fromWinHBITMAP(HBITMAP hbitmap, HBitmapFormat format = NoAlpha);
#endif

    inline QPixmap copy(int x, int y, int width, int height) const;
    QPixmap copy(const QRect &amp;rect = QRect()) const;

    int serialNumber() const;

    bool isDetached() const;
    void detach();

    inline bool isQBitmap() const { return depth() == 1; }

#if defined(Q_WS_QWS)
    const uchar *qwsBits() const;
    int qwsBytesPerLine() const;
    QRgb *clut() const;
    int numCols() const;
#elif defined(Q_WS_MAC)
    Qt::HANDLE macQDHandle() const;
    Qt::HANDLE macQDAlphaHandle() const;
    Qt::HANDLE macCGHandle() const;
#elif defined(Q_WS_X11)
    static int x11SetDefaultScreen(int screen);
    void x11SetScreen(int screen);
    const QX11Info &amp;x11Info() const;
    Qt::HANDLE x11PictureHandle() const;
#endif

#if !defined(Q_WS_WIN) &amp;&amp; !defined(Q_WS_MAC)
    Qt::HANDLE handle() const;
#endif

    QPaintEngine *paintEngine() const;

    inline bool operator!() const { return isNull(); }

protected:
    int metric(PaintDeviceMetric) const;

#ifdef QT3_SUPPORT
public:
    enum ColorMode { Auto, Color, Mono };
    QT3_SUPPORT_CONSTRUCTOR QPixmap(const QString&amp; fileName, const char *format, ColorMode mode);
    QT3_SUPPORT bool load(const QString&amp; fileName, const char *format, ColorMode mode);
    QT3_SUPPORT bool loadFromData(const uchar *buf, uint len, const char* format, ColorMode mode);
    QT3_SUPPORT_CONSTRUCTOR QPixmap(const QImage&amp; image);
    QT3_SUPPORT QPixmap &amp;operator=(const QImage &amp;);
    inline QT3_SUPPORT QImage convertToImage() const { return toImage(); }
    QT3_SUPPORT bool convertFromImage(const QImage &amp;, ColorMode mode);
    QT3_SUPPORT bool convertFromImage(const QImage &amp;img, Qt::ImageConversionFlags flags = Qt::AutoColor)
        { (*this) = fromImage(img, flags); return !isNull(); }
    inline QT3_SUPPORT operator QImage() const { return toImage(); }
    inline QT3_SUPPORT QPixmap xForm(const QMatrix &amp;matrix) const { return transformed(matrix); }
    inline QT3_SUPPORT bool selfMask() const { return false; }
private:
    void resize_helper(const QSize &amp;s);
public:
    inline QT3_SUPPORT void resize(const QSize &amp;s) { resize_helper(s); }
    inline QT3_SUPPORT void resize(int width, int height) { resize_helper(QSize(width, height)); }
#endif

private:
    QPixmapData *data;

    bool doImageIO(QImageWriter *io, int quality) const;
    enum Type { PixmapType, BitmapType };
    QPixmap(const QSize &amp;s, Type);

    void init(int, int, Type = PixmapType);
    void deref();
#if defined(Q_WS_WIN)
    void initAlphaPixmap(uchar *bytes, int length, struct tagBITMAPINFO *bmi);
#endif
    Q_DUMMY_COMPARISON_OPERATOR(QPixmap)
#ifdef Q_WS_MAC
    friend CGContextRef qt_mac_cg_context(const QPaintDevice *);
    friend CGImageRef qt_mac_create_imagemask(const QPixmap &amp;);
    friend IconRef qt_mac_create_iconref(const QPixmap &amp;);
    friend QPixmap qt_mac_unmultiplyPixmapAlpha(const QPixmap &amp;);
#endif
    friend struct QPixmapData;
    friend class QBitmap;
    friend class QPaintDevice;
    friend class QPainter;
    friend class QGLWidget;
    friend class QX11PaintEngine;
    friend class QQuickDrawPaintEngine;
    friend class QCoreGraphicsPaintEngine;
    friend class QWidgetPrivate;
    friend class QRasterPaintEngine;
#if !defined(QT_NO_DATASTREAM)
    friend Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QPixmap &amp;);
#endif
    friend Q_GUI_EXPORT qint64 qt_pixmap_id(const QPixmap &amp;pixmap);
};

Q_DECLARE_SHARED(QPixmap)

inline QPixmap QPixmap::copy(int ax, int ay, int awidth, int aheight) const
{
    return copy(QRect(ax, ay, awidth, aheight));
}

inline bool QPixmap::loadFromData(const QByteArray &amp;buf, const char *format,
                                  Qt::ImageConversionFlags flags)
{
    return loadFromData(reinterpret_cast&lt;const uchar *>(buf.constData()), buf.size(), format, flags);
}

/*****************************************************************************
 QPixmap stream functions
*****************************************************************************/

#if !defined(QT_NO_DATASTREAM)
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QPixmap &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QPixmap &amp;);
#endif

/*****************************************************************************
 QPixmap (and QImage) helper functions
*****************************************************************************/
#ifdef QT3_SUPPORT
QT3_SUPPORT Q_GUI_EXPORT void copyBlt(QPixmap *dst, int dx, int dy, const QPixmap *src,
                                    int sx=0, int sy=0, int sw=-1, int sh=-1);
#endif // QT3_SUPPORT

#endif // QPIXMAP_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpixmapcache.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPIXMAPCACHE_H
#define QPIXMAPCACHE_H

#include &lt;QtGui/qpixmap.h>

QT_MODULE(Gui)

class Q_GUI_EXPORT QPixmapCache
{
public:
    static int cacheLimit();
    static void setCacheLimit(int);
    static QPixmap *find(const QString &amp;key);
    static bool find(const QString &amp;key, QPixmap&amp;);
    static bool insert(const QString &amp;key, const QPixmap&amp;);
    static void remove(const QString &amp;key);
    static void clear();
};

#endif // QPIXMAPCACHE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qplastiquestyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPLASTIQUESTYLE_H
#define QPLASTIQUESTYLE_H

#include &lt;QtGui/qwindowsstyle.h>

QT_MODULE(Gui)

#if !defined(QT_NO_STYLE_PLASTIQUE)

class QPlastiqueStylePrivate;
class Q_GUI_EXPORT QPlastiqueStyle : public QWindowsStyle
{
    Q_OBJECT
public:
    QPlastiqueStyle();
    ~QPlastiqueStyle();

    void drawPrimitive(PrimitiveElement element, const QStyleOption *option,
                       QPainter *painter, const QWidget *widget = 0) const;
    void drawControl(ControlElement element, const QStyleOption *option,
                     QPainter *painter, const QWidget *widget) const;
    void drawComplexControl(ComplexControl control, const QStyleOptionComplex *option,
                            QPainter *painter, const QWidget *widget) const;
    QSize sizeFromContents(ContentsType type, const QStyleOption *option,
                           const QSize &amp;size, const QWidget *widget) const;

    QRect subElementRect(SubElement element, const QStyleOption *option, const QWidget *widget) const;
    QRect subControlRect(ComplexControl cc, const QStyleOptionComplex *opt,
                         SubControl sc, const QWidget *widget) const;

    int styleHint(StyleHint hint, const QStyleOption *option = 0, const QWidget *widget = 0,
		  QStyleHintReturn *returnData = 0) const;
    SubControl hitTestComplexControl(ComplexControl control, const QStyleOptionComplex *option,
				     const QPoint &amp;pos, const QWidget *widget = 0) const;

    int pixelMetric(PixelMetric metric, const QStyleOption *option = 0, const QWidget *widget = 0) const;

    void polish(QWidget *widget);
    void polish(QApplication *app);
    void polish(QPalette &amp;pal);
    void unpolish(QWidget *widget);
    void unpolish(QApplication *app);

    QPalette standardPalette() const;

protected:
    bool eventFilter(QObject *watched, QEvent *event);
    void timerEvent(QTimerEvent *event);
    
private:
    QPlastiqueStylePrivate *d;
};

#endif // QT_NO_STYLE_PLASTIQUE

#endif // QPLASTIQUESTYLE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpolygon.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPOLYGON_H
#define QPOLYGON_H

#include &lt;QtCore/qvector.h>
#include &lt;QtCore/qpoint.h>
#include &lt;QtCore/qrect.h>

QT_MODULE(Gui)

class QMatrix;
class QRect;
class QVariant;

class Q_GUI_EXPORT QPolygon : public QVector&lt;QPoint>
{
public:
    inline QPolygon() {}
    inline ~QPolygon() {}
    inline QPolygon(int size);
    inline QPolygon(const QPolygon &amp;a) : QVector&lt;QPoint>(a) {}
    inline QPolygon(const QVector&lt;QPoint> &amp;v) : QVector&lt;QPoint>(v) {}
    QPolygon(const QRect &amp;r, bool closed=false);
    QPolygon(int nPoints, const int *points);
    operator QVariant() const;

    void translate(int dx, int dy);
    void translate(const QPoint &amp;offset);
    QRect boundingRect() const;

    void point(int i, int *x, int *y) const;
    QPoint point(int i) const;
    void setPoint(int index, int x, int y);
    void setPoint(int index, const QPoint &amp;p);
    void setPoints(int nPoints, const int *points);
    void setPoints(int nPoints, int firstx, int firsty, ...);
    void putPoints(int index, int nPoints, const int *points);
    void putPoints(int index, int nPoints, int firstx, int firsty, ...);
    void putPoints(int index, int nPoints, const QPolygon &amp; from, int fromIndex=0);
};

inline QPolygon::QPolygon(int asize) : QVector&lt;QPoint>(asize) {}

#ifndef QT_NO_DEBUG_STREAM
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug, const QPolygon &amp;);
#endif

/*****************************************************************************
  Misc. QPolygon functions
 *****************************************************************************/

inline void QPolygon::setPoint(int index, const QPoint &amp;pt)
{ (*this)[index] = pt; }

inline void QPolygon::setPoint(int index, int x, int y)
{ (*this)[index] = QPoint(x, y); }

inline QPoint QPolygon::point(int index) const
{ return at(index); }

inline void QPolygon::translate(const QPoint &amp;offset)
{ translate(offset.x(), offset.y()); }

class QRectF;

class Q_GUI_EXPORT QPolygonF : public QVector&lt;QPointF>
{
public:
    inline QPolygonF() {}
    inline ~QPolygonF() {}
    inline QPolygonF(int size);
    inline QPolygonF(const QPolygonF &amp;a) : QVector&lt;QPointF>(a) {}
    inline QPolygonF(const QVector&lt;QPointF> &amp;v) : QVector&lt;QPointF>(v) {}
    QPolygonF(const QRectF &amp;r);
    QPolygonF(const QPolygon &amp;a);

    inline void translate(qreal dx, qreal dy);
    void translate(const QPointF &amp;offset);

    QPolygon toPolygon() const;

    bool isClosed() const { return !isEmpty() &amp;&amp; first() == last(); }

    QRectF boundingRect() const;
};

inline QPolygonF::QPolygonF(int asize) : QVector&lt;QPointF>(asize) {}

#ifndef QT_NO_DEBUG_STREAM
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug, const QPolygonF &amp;);
#endif

/*****************************************************************************
  QPolygonF stream functions
 *****************************************************************************/
#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;stream, const QPolygonF &amp;array);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;stream, QPolygonF &amp;array);
#endif

inline void QPolygonF::translate(qreal dx, qreal dy)
{ translate(QPointF(dx, dy)); }

#endif // QPOLYGON_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qprintdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPRINTDIALOG_H
#define QPRINTDIALOG_H

#include &lt;QtGui/qabstractprintdialog.h>

QT_MODULE(Gui)

#ifndef QT_NO_PRINTDIALOG

class QPrintDialogPrivate;
class QAbstractButton;
class QPrinter;

class Q_GUI_EXPORT QPrintDialog : public QAbstractPrintDialog
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QPrintDialog)
public:
    explicit QPrintDialog(QPrinter *printer, QWidget *parent = 0);
    ~QPrintDialog();

#if defined (Q_OS_UNIX) &amp;&amp; !defined (Q_OS_MAC) &amp;&amp; defined (QT3_SUPPORT)
    void setPrinter(QPrinter *, bool = false);
    QPrinter *printer() const;
    void addButton(QPushButton *button);
#endif

    int exec();

private:
    Q_DISABLE_COPY(QPrintDialog)

// #if defined (Q_OS_UNIX) &amp;&amp; !defined (Q_OS_MAC)
    Q_PRIVATE_SLOT(d_func(), void browseClicked())
    Q_PRIVATE_SLOT(d_func(), void okClicked())
    Q_PRIVATE_SLOT(d_func(), void printerOrFileSelected(QAbstractButton *))
    Q_PRIVATE_SLOT(d_func(), void landscapeSelected(int))
    Q_PRIVATE_SLOT(d_func(), void paperSizeSelected(int))
    Q_PRIVATE_SLOT(d_func(), void orientSelected(int))
    Q_PRIVATE_SLOT(d_func(), void pageOrderSelected(QAbstractButton *))
    Q_PRIVATE_SLOT(d_func(), void colorModeSelected(QAbstractButton *))
    Q_PRIVATE_SLOT(d_func(), void setNumCopies(int))
    Q_PRIVATE_SLOT(d_func(), void printRangeSelected(QAbstractButton *))
    Q_PRIVATE_SLOT(d_func(), void setFirstPage(int))
    Q_PRIVATE_SLOT(d_func(), void setLastPage(int))
    Q_PRIVATE_SLOT(d_func(), void fileNameEditChanged(const QString &amp;text))
// #endif
};

#endif // QT_NO_PRINTDIALOG

#endif // QPRINTDIALOG_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qprintengine.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPRINTENGINE_H
#define QPRINTENGINE_H

#include &lt;QtCore/qvariant.h>
#include &lt;QtGui/qprinter.h>

QT_MODULE(Gui)

#ifndef QT_NO_PRINTER

class Q_GUI_EXPORT QPrintEngine
{
public:
    virtual ~QPrintEngine() {}
    enum PrintEnginePropertyKey {
        PPK_CollateCopies,
        PPK_ColorMode,
        PPK_Creator,
        PPK_DocumentName,
        PPK_FullPage,
        PPK_NumberOfCopies,
        PPK_Orientation,
        PPK_OutputFileName,
        PPK_PageOrder,
        PPK_PageRect,
        PPK_PageSize,
        PPK_PaperRect,
        PPK_PaperSource,
        PPK_PrinterName,
        PPK_PrinterProgram,
        PPK_Resolution,
        PPK_SelectionOption,
        PPK_SupportedResolutions,

        PPK_WindowsPageSize,

        PPK_FontEmbedding,

        PPK_SuppressSystemPrintStatus,

        PPK_CustomBase = 0xff00
    };

    virtual void setProperty(PrintEnginePropertyKey key, const QVariant &amp;value) = 0;
    virtual QVariant property(PrintEnginePropertyKey key) const = 0;

    virtual bool newPage() = 0;
    virtual bool abort() = 0;

    virtual int metric(QPaintDevice::PaintDeviceMetric) const = 0;

    virtual QPrinter::PrinterState printerState() const = 0;

#ifdef Q_WS_WIN
    virtual HDC getPrinterDC() const { return 0; }
    virtual void releasePrinterDC(HDC) const { }
#endif

};

#endif // QT_NO_PRINTER

#endif // QPRINTENGINE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qprinter.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPRINTER_H
#define QPRINTER_H

#include &lt;QtGui/qpaintdevice.h>
#include &lt;QtCore/qstring.h>

QT_MODULE(Gui)

#ifndef QT_NO_PRINTER

#if defined(B0)
#undef B0 // Terminal hang-up.  We assume that you do not want that.
#endif

class QPrinterPrivate;
class QPaintEngine;
class QPrintEngine;

class Q_GUI_EXPORT QPrinter : public QPaintDevice
{
    Q_DECLARE_PRIVATE(QPrinter)
public:
    enum PrinterMode { ScreenResolution, PrinterResolution, HighResolution };

    explicit QPrinter(PrinterMode mode = ScreenResolution);
    ~QPrinter();

    int devType() const;

    enum Orientation { Portrait, Landscape };

    enum PageSize    { A4, B5, Letter, Legal, Executive,
		       A0, A1, A2, A3, A5, A6, A7, A8, A9, B0, B1,
		       B10, B2, B3, B4, B6, B7, B8, B9, C5E, Comm10E,
		       DLE, Folio, Ledger, Tabloid, Custom, NPageSize = Custom };

    enum PageOrder   { FirstPageFirst,
		       LastPageFirst };

    enum ColorMode   { GrayScale,
		       Color };

    enum PaperSource { OnlyOne,
		       Lower,
		       Middle,
		       Manual,
		       Envelope,
                       EnvelopeManual,
		       Auto,
		       Tractor,
		       SmallFormat,
                       LargeFormat,
		       LargeCapacity,
		       Cassette,
		       FormSource };

    enum PrinterState { Idle,
                        Active,
                        Aborted,
                        Error };

    enum OutputFormat { NativeFormat, PdfFormat };

    // ### Qt 5: Merge with QAbstractPrintDialog::PrintRange
    enum PrintRange { AllPages, Selection, PageRange };

#ifdef QT3_SUPPORT
    enum PrinterOption { PrintToFile, PrintSelection, PrintPageRange };
#endif // QT3_SUPPORT

    void setOutputFormat(OutputFormat format);
    OutputFormat outputFormat() const;

    void setPrinterName(const QString &amp;);
    QString printerName() const;

    void setOutputFileName(const QString &amp;);
    QString outputFileName()const;

    void setPrintProgram(const QString &amp;);
    QString printProgram() const;

    void setDocName(const QString &amp;);
    QString docName() const;

    void setCreator(const QString &amp;);
    QString creator() const;

    void setOrientation(Orientation);
    Orientation orientation() const;

    void setPageSize(PageSize);
    PageSize pageSize() const;

    void setPageOrder(PageOrder);
    PageOrder pageOrder() const;

    void setResolution(int);
    int resolution() const;

    void setColorMode(ColorMode);
    ColorMode colorMode() const;

    void setCollateCopies(bool collate);
    bool collateCopies() const;

    void setFullPage(bool);
    bool fullPage() const;

    void setNumCopies(int);
    int numCopies() const;

    void setPaperSource(PaperSource);
    PaperSource paperSource() const;

    QList&lt;int> supportedResolutions() const;

    void setFontEmbeddingEnabled(bool enable);
    bool fontEmbeddingEnabled() const;

#ifdef Q_WS_WIN
    void setWinPageSize(int winPageSize);
    int winPageSize() const;
#endif

    QRect paperRect() const;
    QRect pageRect() const;

#if !defined(Q_WS_WIN) || defined(qdoc)
    QString printerSelectionOption() const;
    void setPrinterSelectionOption(const QString &amp;);
#endif

    bool newPage();
    bool abort();

    PrinterState printerState() const;

    QPaintEngine *paintEngine() const;
    QPrintEngine *printEngine() const;

#ifdef Q_WS_WIN
    HDC getDC() const;
    void releaseDC(HDC hdc) const;
#endif

    void setFromTo(int fromPage, int toPage);
    int fromPage() const;
    int toPage() const;

    void setPrintRange(PrintRange range);
    PrintRange printRange() const;

#ifdef QT3_SUPPORT
#ifdef Q_WS_MAC
    QT3_SUPPORT bool pageSetup(QWidget *parent = 0);
    QT3_SUPPORT bool printSetup(QWidget *parent = 0);
#endif

    QT3_SUPPORT bool setup(QWidget *parent = 0);

    QT3_SUPPORT void setMinMax(int minPage, int maxPage);
    QT3_SUPPORT int minPage() const;
    QT3_SUPPORT int maxPage() const;

    QT3_SUPPORT void setCollateCopiesEnabled(bool);
    QT3_SUPPORT bool collateCopiesEnabled() const;

    QT3_SUPPORT void setOptionEnabled(PrinterOption, bool enable);
    QT3_SUPPORT bool isOptionEnabled(PrinterOption) const;

    inline QT3_SUPPORT QSize margins() const;
    inline QT3_SUPPORT void margins(uint *top, uint *left, uint *bottom, uint *right) const;

    inline QT3_SUPPORT bool aborted() { return printerState() == Aborted; }

    QT3_SUPPORT void setOutputToFile(bool);
    inline QT3_SUPPORT bool outputToFile() const { return !outputFileName().isEmpty(); }
#endif

protected:
    int metric(PaintDeviceMetric) const;
    void setEngines(QPrintEngine *printEngine, QPaintEngine *paintEngine);

private:
    Q_DISABLE_COPY(QPrinter)

    QPrinterPrivate *d_ptr;

    friend class QPrintDialogWin;
};

#ifdef QT3_SUPPORT
inline QSize QPrinter::margins() const
{
    QRect page = pageRect();
    QRect paper = paperRect();
    return QSize(page.left() - paper.left(), page.top() - paper.top());
}

inline void QPrinter::margins(uint *top, uint *left, uint *bottom, uint *right) const
{
    QRect page = pageRect();
    QRect paper = paperRect();
    if (top)
        *top = page.top() - paper.top();
    if (left)
        *left = page.left() - paper.left();
    if (bottom)
        *bottom = paper.bottom() - page.bottom();
    if (right)
        *right = paper.right() - page.right();
}
#endif

#endif // QT_NO_PRINTER

#endif // QPRINTER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qprogressbar.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPROGRESSBAR_H
#define QPROGRESSBAR_H

#include &lt;QtGui/qframe.h>

QT_MODULE(Gui)

#ifndef QT_NO_PROGRESSBAR

class QProgressBarPrivate;

class Q_GUI_EXPORT QProgressBar : public QWidget
{
    Q_OBJECT
    Q_ENUMS(Direction)
    Q_PROPERTY(int minimum READ minimum WRITE setMinimum)
    Q_PROPERTY(int maximum READ maximum WRITE setMaximum)
    Q_PROPERTY(QString text READ text)
    Q_PROPERTY(int value READ value WRITE setValue NOTIFY valueChanged)
    Q_PROPERTY(Qt::Alignment alignment READ alignment WRITE setAlignment)
    Q_PROPERTY(bool textVisible READ isTextVisible WRITE setTextVisible)
    Q_PROPERTY(Qt::Orientation orientation READ orientation WRITE setOrientation)
    Q_PROPERTY(bool invertedAppearance READ invertedAppearance WRITE setInvertedAppearance)
    Q_PROPERTY(Direction textDirection READ textDirection WRITE setTextDirection)

public:
    enum Direction { TopToBottom, BottomToTop };

    explicit QProgressBar(QWidget *parent = 0);

    int minimum() const;
    int maximum() const;

    void setRange(int minimum, int maximum);
    int value() const;

    virtual QString text() const;
    void setTextVisible(bool visible);
    bool isTextVisible() const;

    Qt::Alignment alignment() const;
    void setAlignment(Qt::Alignment alignment);

    QSize sizeHint() const;
    QSize minimumSizeHint() const;

    Qt::Orientation orientation() const;

    void setInvertedAppearance(bool invert);
    bool invertedAppearance();
    void setTextDirection(QProgressBar::Direction textDirection);
    QProgressBar::Direction textDirection();

public Q_SLOTS:
    void reset();
    void setMinimum(int minimum);
    void setMaximum(int maximum);
    void setValue(int value);
    void setOrientation(Qt::Orientation);

Q_SIGNALS:
    void valueChanged(int value);

protected:
    bool event(QEvent *e);
    void paintEvent(QPaintEvent *);

private:
    Q_DECLARE_PRIVATE(QProgressBar)
    Q_DISABLE_COPY(QProgressBar)
};

#endif // QT_NO_PROGRESSBAR

#endif // QPROGRESSBAR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qprogressdialog.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPROGRESSDIALOG_H
#define QPROGRESSDIALOG_H

#include &lt;QtGui/qdialog.h>

QT_MODULE(Gui)

#ifndef QT_NO_PROGRESSDIALOG

class QPushButton;
class QLabel;
class QProgressBar;
class QTimer;
class QProgressDialogPrivate;

class Q_GUI_EXPORT QProgressDialog : public QDialog
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QProgressDialog)
    Q_PROPERTY(bool wasCanceled READ wasCanceled)
    Q_PROPERTY(int minimum READ minimum WRITE setMinimum)
    Q_PROPERTY(int maximum READ maximum WRITE setMaximum)
    Q_PROPERTY(int value READ value WRITE setValue)
    Q_PROPERTY(bool autoReset READ autoReset WRITE setAutoReset)
    Q_PROPERTY(bool autoClose READ autoClose WRITE setAutoClose)
    Q_PROPERTY(int minimumDuration READ minimumDuration WRITE setMinimumDuration)
    Q_PROPERTY(QString labelText READ labelText WRITE setLabelText)

public:
    explicit QProgressDialog(QWidget *parent = 0, Qt::WFlags f = 0);
    QProgressDialog(const QString &amp;labelText, const QString &amp;cancelButtonText,
                    int minimum, int maximum,
                    QWidget *parent = 0, Qt::WFlags f = 0);
    ~QProgressDialog();

    void setLabel(QLabel *label);
    void setCancelButton(QPushButton *button);
    void setBar(QProgressBar *bar);

    bool wasCanceled() const;

    int minimum() const;
    int maximum() const;

    void setRange(int minimum, int maximum);
    int value() const;

    QSize sizeHint() const;

    QString labelText() const;
    int minimumDuration() const;

    void setAutoReset(bool b);
    bool autoReset() const;
    void setAutoClose(bool b);
    bool autoClose() const;

public Q_SLOTS:
    void cancel();
    void reset();
    void setMaximum(int maximum);
    void setMinimum(int minimum);
    void setValue(int progress);
    void setLabelText(const QString &amp;);
    void setCancelButtonText(const QString &amp;);
    void setMinimumDuration(int ms);

Q_SIGNALS:
    void canceled();

protected:
    void resizeEvent(QResizeEvent *);
    void closeEvent(QCloseEvent *);
    void changeEvent(QEvent *);
    void showEvent(QShowEvent *e);

protected Q_SLOTS:
    void forceShow();

private:
    Q_DISABLE_COPY(QProgressDialog)
};

#endif // QT_NO_PROGRESSDIALOG

#endif // QPROGRESSDIALOG_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qproxymodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPROXYMODEL_H
#define QPROXYMODEL_H

#include &lt;QtCore/qabstractitemmodel.h>

QT_MODULE(Gui)

#ifndef QT_NO_PROXYMODEL

class QProxyModelPrivate;

class Q_GUI_EXPORT QProxyModel : public QAbstractItemModel
{
    Q_OBJECT

public:
    explicit QProxyModel(QObject *parent = 0);
    ~QProxyModel();

    virtual void setModel(QAbstractItemModel *model);
    QAbstractItemModel *model() const;

    // implementing model interface

    QModelIndex index(int row, int column, const QModelIndex &amp;parent) const;
    QModelIndex parent(const QModelIndex &amp;child) const;

    int rowCount(const QModelIndex &amp;parent) const;
    int columnCount(const QModelIndex &amp;parent) const;
    bool hasChildren(const QModelIndex &amp;parent) const;

    QVariant data(const QModelIndex &amp;index, int role) const;
    bool setData(const QModelIndex &amp;index, const QVariant &amp;value, int role);

    QVariant headerData(int section, Qt::Orientation orientation, int role) const;
    bool setHeaderData(int section, Qt::Orientation orientation, const QVariant &amp;value,
                       int role);

    QStringList mimeTypes() const;
    QMimeData *mimeData(const QModelIndexList &amp;indexes) const;
    bool dropMimeData(const QMimeData *data, Qt::DropAction action,
                      int row, int column, const QModelIndex &amp;parent);
    Qt::DropActions supportedDropActions() const;

    bool insertRows(int row, int count, const QModelIndex &amp;parent);
    bool insertColumns(int column, int count, const QModelIndex &amp;parent);

    void fetchMore(const QModelIndex &amp;parent);
    Qt::ItemFlags flags(const QModelIndex &amp;index) const;

    void sort(int column, Qt::SortOrder order);

    QModelIndexList match(const QModelIndex &amp;start, int role, const QVariant &amp;value,
                          int hits, Qt::MatchFlags flags) const;

    QSize span(const QModelIndex &amp;index) const;

    bool submit();
    void revert();

#ifdef Q_NO_USING_KEYWORD
    inline QObject *parent() const { return QObject::parent(); }
#else
    using QObject::parent;
#endif

protected:
    QProxyModel(QProxyModelPrivate &amp;, QObject *parent = 0);

    QModelIndex setProxyModel(const QModelIndex &amp;source_index) const;
    QModelIndex setSourceModel(const QModelIndex &amp;proxy_index) const;

    void connectToModel(const QAbstractItemModel *model) const;
    void disconnectFromModel(const QAbstractItemModel *model) const;

private:    
    Q_DECLARE_PRIVATE(QProxyModel)
    Q_DISABLE_COPY(QProxyModel)

    Q_PRIVATE_SLOT(d_func(), void sourceDataChanged(const QModelIndex&amp;,const QModelIndex&amp;))
    Q_PRIVATE_SLOT(d_func(), void sourceRowsAboutToBeInserted(const QModelIndex&amp;,int,int))
    Q_PRIVATE_SLOT(d_func(), void sourceRowsInserted(const QModelIndex&amp;,int,int))
    Q_PRIVATE_SLOT(d_func(), void sourceRowsAboutToBeRemoved(const QModelIndex&amp;,int,int))
    Q_PRIVATE_SLOT(d_func(), void sourceRowsRemoved(const QModelIndex&amp;,int,int))
    Q_PRIVATE_SLOT(d_func(), void sourceColumnsAboutToBeInserted(const QModelIndex&amp;,int,int))
    Q_PRIVATE_SLOT(d_func(), void sourceColumnsInserted(const QModelIndex&amp;,int,int))
    Q_PRIVATE_SLOT(d_func(), void sourceColumnsAboutToBeRemoved(const QModelIndex&amp;,int,int))
    Q_PRIVATE_SLOT(d_func(), void sourceColumnsRemoved(const QModelIndex&amp;,int,int))
};

#endif // QT_NO_PROXYMODEL

#endif // QPROXYMODEL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qpushbutton.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QPUSHBUTTON_H
#define QPUSHBUTTON_H

#include &lt;QtGui/qabstractbutton.h>

QT_MODULE(Gui)

class QPushButtonPrivate;
class QMenu;

class Q_GUI_EXPORT QPushButton : public QAbstractButton
{
    Q_OBJECT

    Q_PROPERTY(bool autoDefault READ autoDefault WRITE setAutoDefault)
    Q_PROPERTY(bool default READ isDefault WRITE setDefault)
    Q_PROPERTY(bool flat READ isFlat WRITE setFlat)

public:
    explicit QPushButton(QWidget *parent=0);
    explicit QPushButton(const QString &amp;text, QWidget *parent=0);
    QPushButton(const QIcon&amp; icon, const QString &amp;text, QWidget *parent=0);
    ~QPushButton();

    QSize sizeHint() const;

    bool autoDefault() const;
    void setAutoDefault(bool);
    bool isDefault() const;
    void setDefault(bool);

#ifndef QT_NO_MENU
    void setMenu(QMenu* menu);
    QMenu* menu() const;
#endif

    void setFlat(bool);
    bool isFlat() const;

public Q_SLOTS:
#ifndef QT_NO_MENU
    void showMenu();
#endif

protected:
    bool event(QEvent *e);
    void paintEvent(QPaintEvent *);
    void keyPressEvent(QKeyEvent *);
    void focusInEvent(QFocusEvent *);
    void focusOutEvent(QFocusEvent *);

public:
#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QPushButton(QWidget *parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QPushButton(const QString &amp;text, QWidget *parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QPushButton(const QIcon&amp; icon, const QString &amp;text, QWidget *parent, const char* name);
    inline QT3_SUPPORT void openPopup()  { showMenu(); }
    inline QT3_SUPPORT bool isMenuButton() const { return menu() !=  0; }
    inline QT3_SUPPORT void setPopup(QMenu* popup) {setMenu(popup); }
    inline QT3_SUPPORT QMenu* popup() const { return menu(); }
#endif

private:
    Q_DISABLE_COPY(QPushButton)
    Q_DECLARE_PRIVATE(QPushButton)
#ifndef QT_NO_MENU        
    Q_PRIVATE_SLOT(d_func(), void popupPressed())
#endif
};

#endif // QPUSHBUTTON_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qradiobutton.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QRADIOBUTTON_H
#define QRADIOBUTTON_H

#include &lt;QtGui/qabstractbutton.h>

QT_MODULE(Gui)

class QRadioButtonPrivate;

class Q_GUI_EXPORT QRadioButton : public QAbstractButton
{
    Q_OBJECT

public:
    explicit QRadioButton(QWidget *parent=0);
    explicit QRadioButton(const QString &amp;text, QWidget *parent=0);

    QSize sizeHint() const;

protected:
    bool event(QEvent *e);
    bool hitButton(const QPoint &amp;) const;
    void paintEvent(QPaintEvent *);
    void mouseMoveEvent(QMouseEvent *);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QRadioButton(QWidget *parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QRadioButton(const QString &amp;text, QWidget *parent, const char* name);
#endif

private:
    Q_DECLARE_PRIVATE(QRadioButton)
    Q_DISABLE_COPY(QRadioButton)
};

#endif // QRADIOBUTTON_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qregion.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QREGION_H
#define QREGION_H

#include &lt;QtCore/qatomic.h>
#include &lt;QtCore/qrect.h>
#include &lt;QtGui/qwindowdefs.h>

QT_MODULE(Gui)

template &lt;class T> class QVector;
class QVariant;

#if defined(Q_WS_QWS) || defined(Q_WS_X11) || defined(Q_WS_MAC)
struct QRegionPrivate;
#endif

class QBitmap;

class Q_GUI_EXPORT QRegion
{
public:
    enum RegionType { Rectangle, Ellipse };

    QRegion();
    QRegion(int x, int y, int w, int h, RegionType t = Rectangle);
    QRegion(const QRect &amp;r, RegionType t = Rectangle);
    QRegion(const QPolygon &amp;pa, Qt::FillRule fillRule = Qt::OddEvenFill);
#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QRegion(const QPolygon &amp;pa, bool winding);
#endif
    QRegion(const QRegion &amp;region);
    QRegion(const QBitmap &amp;bitmap);
    ~QRegion();
    QRegion &amp;operator=(const QRegion &amp;);

#ifdef QT3_SUPPORT
    inline QT3_SUPPORT bool isNull() const { return isEmpty(); }
#endif
    bool isEmpty() const;

    bool contains(const QPoint &amp;p) const;
    bool contains(const QRect &amp;r) const;

    void translate(int dx, int dy);
    inline void translate(const QPoint &amp;p) { translate(p.x(), p.y()); }
    QRegion translated(int dx, int dy) const;
    inline QRegion translated(const QPoint &amp;p) const { return translated(p.x(), p.y()); }

    QRegion unite(const QRegion &amp;r) const;
    QRegion intersect(const QRegion &amp;r) const;
    QRegion subtract(const QRegion &amp;r) const;
    QRegion eor(const QRegion &amp;r) const;

    QRect boundingRect() const;
    QVector&lt;QRect> rects() const;
    void setRects(const QRect *rect, int num);

    const QRegion operator|(const QRegion &amp;r) const;
    const QRegion operator+(const QRegion &amp;r) const;
    const QRegion operator&amp;(const QRegion &amp;r) const;
    const QRegion operator-(const QRegion &amp;r) const;
    const QRegion operator^(const QRegion &amp;r) const;
    QRegion&amp; operator|=(const QRegion &amp;r);
    QRegion&amp; operator+=(const QRegion &amp;r);
    QRegion&amp; operator&amp;=(const QRegion &amp;r);
    QRegion&amp; operator-=(const QRegion &amp;r);
    QRegion&amp; operator^=(const QRegion &amp;r);

    bool operator==(const QRegion &amp;r) const;
    inline bool operator!=(const QRegion &amp;r) const { return !(operator==(r)); }
    operator QVariant() const;

#if defined(qdoc)
    Handle handle() const;
#elif defined(Q_WS_WIN)
    inline HRGN    handle() const { return d->rgn; }
#elif defined(Q_WS_X11)
    inline Region handle() const { if(!d->rgn) updateX11Region(); return d->rgn; }
#elif defined(Q_WS_MAC)
    inline RgnHandle handle() const { return handle(false); }
    RgnHandle handle(bool require_rgn) const;
#elif defined(Q_WS_QWS)
    // QGfx_QWS needs this for region drawing
    inline void *handle() const { return d->qt_rgn; }
#endif

#ifndef QT_NO_DATASTREAM
    friend Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QRegion &amp;);
    friend Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QRegion &amp;);
#endif
private:
    QRegion copy() const;   // helper of detach.
    void detach();
#if defined(Q_WS_WIN)
    QRegion winCombine(const QRegion &amp;r, int num) const;
#elif defined(Q_WS_X11)
    void updateX11Region() const;
    void *clipRectangles(int &amp;num) const;
    friend void *qt_getClipRects(const QRegion &amp;r, int &amp;num);
#elif defined(Q_WS_MAC)
    friend QRegion qt_mac_convert_mac_region(RgnHandle rgn);
#endif
    void exec(const QByteArray &amp;ba, int ver = 0);
    struct QRegionData {
        QBasicAtomic ref;
#if defined(Q_WS_WIN)
        HRGN   rgn;
#elif defined(Q_WS_X11)
        Region rgn;
        void *xrectangles;
#elif defined(Q_WS_MAC)
        mutable RgnHandle rgn;
#endif
#if defined(Q_WS_QWS) || defined(Q_WS_X11) || defined(Q_WS_MAC)
        QRegionPrivate *qt_rgn;
#endif
    };
#if defined(Q_WS_WIN)
    friend class QETWidget;
#endif
    struct QRegionData *d;
    static struct QRegionData shared_empty;
    static void cleanUp(QRegionData *x);
};

/*****************************************************************************
  QRegion stream functions
 *****************************************************************************/

#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QRegion &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QRegion &amp;);
#endif

#ifndef QT_NO_DEBUG_STREAM
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug, const QRegion &amp;);
#endif

#endif // QREGION_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qrgb.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QRGB_H
#define QRGB_H

#include &lt;QtCore/qglobal.h>

QT_MODULE(Gui)

typedef unsigned int QRgb;                        // RGB triplet

const QRgb  RGB_MASK    = 0x00ffffff;                // masks RGB values

Q_GUI_EXPORT inline int qRed(QRgb rgb)                // get red part of RGB
{ return ((rgb >> 16) &amp; 0xff); }

Q_GUI_EXPORT inline int qGreen(QRgb rgb)                // get green part of RGB
{ return ((rgb >> 8) &amp; 0xff); }

Q_GUI_EXPORT inline int qBlue(QRgb rgb)                // get blue part of RGB
{ return (rgb &amp; 0xff); }

Q_GUI_EXPORT inline int qAlpha(QRgb rgb)                // get alpha part of RGBA
{ return ((rgb >> 24) &amp; 0xff); }

Q_GUI_EXPORT inline QRgb qRgb(int r, int g, int b)// set RGB value
{ return (0xff &lt;&lt; 24) | ((r &amp; 0xff) &lt;&lt; 16) | ((g &amp; 0xff) &lt;&lt; 8) | (b &amp; 0xff); }

Q_GUI_EXPORT inline QRgb qRgba(int r, int g, int b, int a)// set RGBA value
{ return ((a &amp; 0xff) &lt;&lt; 24) | ((r &amp; 0xff) &lt;&lt; 16) | ((g &amp; 0xff) &lt;&lt; 8) | (b &amp; 0xff); }

Q_GUI_EXPORT inline int qGray(int r, int g, int b)// convert R,G,B to gray 0..255
{ return (r*11+g*16+b*5)/32; }

Q_GUI_EXPORT inline int qGray(QRgb rgb)                // convert RGB to gray 0..255
{ return qGray(qRed(rgb), qGreen(rgb), qBlue(rgb)); }

Q_GUI_EXPORT inline bool qIsGray(QRgb rgb)
{ return qRed(rgb) == qGreen(rgb) &amp;&amp; qRed(rgb) == qBlue(rgb); }

#endif // QRGB_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qrubberband.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QRUBBERBAND_H
#define QRUBBERBAND_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

#ifndef QT_NO_RUBBERBAND

class QRubberBandPrivate;

class Q_GUI_EXPORT QRubberBand : public QWidget
{
    Q_OBJECT

public:
    enum Shape { Line, Rectangle };
    explicit QRubberBand(Shape, QWidget * =0);
    ~QRubberBand();

    Shape shape() const;

    void setGeometry(const QRect &amp;r);

    inline void setGeometry(int x, int y, int w, int h);
    inline void move(int x, int y);
    inline void move(const QPoint &amp;p)
    { move(p.x(), p.y()); }
    inline void resize(int w, int h)
    { setGeometry(geometry().x(), geometry().y(), w, h); }
    inline void resize(const QSize &amp;s)
    { resize(s.width(), s.height()); }

protected:
    bool event(QEvent *e);
    void paintEvent(QPaintEvent *);
    void changeEvent(QEvent *);
    void showEvent(QShowEvent *);
    void resizeEvent(QResizeEvent *);
    void moveEvent(QMoveEvent *);

private:
    Q_DECLARE_PRIVATE(QRubberBand)
};

inline void QRubberBand::setGeometry(int ax, int ay, int aw, int ah)
{ setGeometry(QRect(ax, ay, aw, ah)); }
inline void QRubberBand::move(int ax, int ay)
{ setGeometry(ax, ay, width(), height()); }

#endif // QT_NO_RUBBERBAND

#endif // QRUBBERBAND_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qscrollarea.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSCROLLAREA_H
#define QSCROLLAREA_H

#include &lt;QtGui/qabstractscrollarea.h>

QT_MODULE(Gui)

#ifndef QT_NO_SCROLLAREA

class QScrollAreaPrivate;

class Q_GUI_EXPORT QScrollArea : public QAbstractScrollArea
{
    Q_OBJECT
    Q_PROPERTY(bool widgetResizable READ widgetResizable WRITE setWidgetResizable)
#if QT_VERSION >= 0x040200
    Q_PROPERTY(Qt::Alignment alignment READ alignment WRITE setAlignment)
#endif
public:
    explicit QScrollArea(QWidget* parent=0);
    ~QScrollArea();

    QWidget *widget() const;
    void setWidget(QWidget *w);
    QWidget *takeWidget();

    bool widgetResizable() const;
    void setWidgetResizable(bool resizable);

    QSize sizeHint() const;
    bool focusNextPrevChild(bool next);

#if QT_VERSION >= 0x040200
    Qt::Alignment alignment() const;
    void setAlignment(Qt::Alignment);
#endif

    void ensureVisible(int x, int y, int xmargin = 50, int ymargin = 50);

protected:
    bool event(QEvent *);
    bool eventFilter(QObject *, QEvent *);
    void resizeEvent(QResizeEvent *);
    void scrollContentsBy(int dx, int dy);

private:
    Q_DECLARE_PRIVATE(QScrollArea)
    Q_DISABLE_COPY(QScrollArea)
};

#endif // QT_NO_SCROLLAREA

#endif // QSCROLLAREA_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qscrollbar.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSCROLLBAR_H
#define QSCROLLBAR_H

#include &lt;QtGui/qwidget.h>
#include &lt;QtGui/qabstractslider.h>

QT_MODULE(Gui)

#ifndef QT_NO_SCROLLBAR

class QScrollBarPrivate;

class Q_GUI_EXPORT QScrollBar : public QAbstractSlider
{
    Q_OBJECT
public:
    explicit QScrollBar(QWidget *parent=0);
    explicit QScrollBar(Qt::Orientation, QWidget *parent=0);
    ~QScrollBar();

    QSize sizeHint() const;
    bool event(QEvent *event);

protected:
    void paintEvent(QPaintEvent *);
    void mousePressEvent(QMouseEvent *);
    void mouseReleaseEvent(QMouseEvent *);
    void mouseMoveEvent(QMouseEvent *);
    void hideEvent(QHideEvent*);
    void sliderChange(SliderChange change);
    void contextMenuEvent(QContextMenuEvent *);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QScrollBar(QWidget *parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QScrollBar(Qt::Orientation, QWidget *parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QScrollBar(int minValue, int maxValue, int lineStep, int pageStep,
                int value, Qt::Orientation, QWidget *parent=0, const char* name = 0);
    inline QT3_SUPPORT bool draggingSlider() { return isSliderDown(); }
#endif

private:
    Q_DISABLE_COPY(QScrollBar)
    Q_DECLARE_PRIVATE(QScrollBar)
};

#endif // QT_NO_SCROLLBAR

#endif // QSCROLLBAR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsessionmanager.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSESSIONMANAGER_H
#define QSESSIONMANAGER_H

#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qwindowdefs.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtCore/qstringlist.h>

#ifndef QT_NO_SESSIONMANAGER

QT_MODULE(Gui)

class QSessionManagerPrivate;

class Q_GUI_EXPORT  QSessionManager : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QSessionManager)
    QSessionManager(QApplication *app, QString &amp;id, QString &amp;key);
    ~QSessionManager();
public:
    QString sessionId() const;
    QString sessionKey() const;
#if defined(Q_WS_X11) || defined(Q_WS_MAC)
    void *handle() const;
#endif

    bool allowsInteraction();
    bool allowsErrorInteraction();
    void release();

    void cancel();

    enum RestartHint {
        RestartIfRunning,
        RestartAnyway,
        RestartImmediately,
        RestartNever
    };
    void setRestartHint(RestartHint);
    RestartHint restartHint() const;

    void setRestartCommand(const QStringList&amp;);
    QStringList restartCommand() const;
    void setDiscardCommand(const QStringList&amp;);
    QStringList discardCommand() const;

    void setManagerProperty(const QString&amp; name, const QString&amp; value);
    void setManagerProperty(const QString&amp; name, const QStringList&amp; value);

    bool isPhase2() const;
    void requestPhase2();

private:
    friend class QApplication;
    friend class QApplicationPrivate;
    friend class QBaseApplication;
};

#endif // QT_NO_SESSIONMANAGER

#endif // QSESSIONMANAGER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qshortcut.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSHORTCUT_H
#define QSHORTCUT_H

#include &lt;QtGui/qwidget.h>
#include &lt;QtGui/qkeysequence.h>

QT_MODULE(Gui)

#ifndef QT_NO_SHORTCUT

class QShortcutPrivate;
class Q_GUI_EXPORT QShortcut : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QShortcut)
    Q_PROPERTY(QKeySequence key READ key WRITE setKey)
    Q_PROPERTY(QString whatsThis READ whatsThis WRITE setWhatsThis)
    Q_PROPERTY(bool enabled READ isEnabled WRITE setEnabled)
    Q_PROPERTY(Qt::ShortcutContext context READ context WRITE setContext)
public:
    explicit QShortcut(QWidget *parent);
    QShortcut(const QKeySequence&amp; key, QWidget *parent,
              const char *member = 0, const char *ambiguousMember = 0,
              Qt::ShortcutContext context = Qt::WindowShortcut);
    ~QShortcut();

    void setKey(const QKeySequence&amp; key);
    QKeySequence key() const;

    void setEnabled(bool enable);
    bool isEnabled() const;

    void setContext(Qt::ShortcutContext context);
    Qt::ShortcutContext context();

    void setWhatsThis(const QString &amp;text);
    QString whatsThis() const;

    int id() const;

    inline QWidget *parentWidget() const
    { return static_cast&lt;QWidget *>(QObject::parent()); }

Q_SIGNALS:
    void activated();
    void activatedAmbiguously();

protected:
    bool event(QEvent *e);
};

#endif // QT_NO_SHORTCUT

#endif // QSHORTCUT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsizegrip.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSIZEGRIP_H
#define QSIZEGRIP_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

#ifndef QT_NO_SIZEGRIP

class QSizeGripPrivate;
class Q_GUI_EXPORT QSizeGrip : public QWidget
{
    Q_OBJECT
public:
    explicit QSizeGrip(QWidget *parent);
    ~QSizeGrip();

    QSize sizeHint() const;

    void setVisible(bool);
protected:
    void paintEvent(QPaintEvent *);
    void mousePressEvent(QMouseEvent *);
    void mouseMoveEvent(QMouseEvent *);

    bool eventFilter(QObject *, QEvent *);
    bool event(QEvent *);

public:
#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QSizeGrip(QWidget *parent, const char *name);
#endif
private:
    Q_DECLARE_PRIVATE(QSizeGrip)
    Q_DISABLE_COPY(QSizeGrip)
};

#endif // QT_NO_SIZEGRIP

#endif // QSIZEGRIP_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsizepolicy.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSIZEPOLICY_H
#define QSIZEPOLICY_H

#include &lt;QtCore/qobject.h>

QT_MODULE(Gui)

class QVariant;

class Q_GUI_EXPORT QSizePolicy
{
    Q_GADGET
    Q_ENUMS(Policy)
private:
    enum SizePolicyMasks {
        HSize = 4,
        HMask = 0x0f,
        VMask = HMask &lt;&lt; HSize
    };
public:
    enum PolicyFlag {
        GrowFlag = 1,
        ExpandFlag = 2,
        ShrinkFlag = 4,
        IgnoreFlag = 8
    };

    enum Policy {
        Fixed = 0,
        Minimum = GrowFlag,
        Maximum = ShrinkFlag,
        Preferred = GrowFlag | ShrinkFlag,
        MinimumExpanding = GrowFlag | ExpandFlag,
        Expanding = GrowFlag | ShrinkFlag | ExpandFlag,
        Ignored = ShrinkFlag|GrowFlag|IgnoreFlag
    };

    QSizePolicy() : data(0) { }

    QSizePolicy(Policy horizontal, Policy vertical)
        : data(horizontal | (vertical&lt;&lt;HSize)) { }

    Policy horizontalPolicy() const { return static_cast&lt;Policy>(data &amp; HMask); }
    Policy verticalPolicy() const { return static_cast&lt;Policy>((data &amp; VMask) >> HSize); }

    void setHorizontalPolicy(Policy d) { data = (data &amp; ~HMask) | d; }
    void setVerticalPolicy(Policy d) { data = (data &amp; ~(HMask &lt;&lt; HSize)) | (d &lt;&lt; HSize); }

    Qt::Orientations expandingDirections() const {
        Qt::Orientations result;
        if (verticalPolicy() &amp; ExpandFlag)
            result |= Qt::Vertical;
        if (horizontalPolicy() &amp; ExpandFlag)
            result |= Qt::Horizontal;
        return result;
    }

    void setHeightForWidth(bool b) { data = b ? (data | (1 &lt;&lt; 2*HSize)) : (data &amp; ~(1 &lt;&lt; 2*HSize));  }
    bool hasHeightForWidth() const { return data &amp; (1 &lt;&lt; 2*HSize); }

    bool operator==(const QSizePolicy&amp; s) const { return data == s.data; }
    bool operator!=(const QSizePolicy&amp; s) const { return data != s.data; }
    operator QVariant() const; // implemented in qabstractlayout.cpp

    int horizontalStretch() const { return data >> 24; }
    int verticalStretch() const { return (data >> 16) &amp; 0xff; }
    void setHorizontalStretch(uchar stretchFactor) { data = (data&amp;0x00ffffff) | (uint(stretchFactor)&lt;&lt;24); }
    void setVerticalStretch(uchar stretchFactor) { data = (data&amp;0xff00ffff) | (uint(stretchFactor)&lt;&lt;16); }

    void transpose();

#ifdef QT3_SUPPORT
    typedef Policy SizeType;
#ifndef qdoc
    typedef Qt::Orientations ExpandData;
    enum {
        NoDirection = 0,
        Horizontally = 1,
        Vertically = 2,
        BothDirections = Horizontally | Vertically
    };
#else
    enum ExpandData {
        NoDirection = 0x0,
        Horizontally = 0x1,
        Vertically = 0x2,
        BothDirections = 0x3
    };
#endif // qdoc

    inline QT3_SUPPORT bool mayShrinkHorizontally() const
        { return horizontalPolicy() &amp; ShrinkFlag; }
    inline QT3_SUPPORT bool mayShrinkVertically() const { return verticalPolicy() &amp; ShrinkFlag; }
    inline QT3_SUPPORT bool mayGrowHorizontally() const { return horizontalPolicy() &amp; GrowFlag; }
    inline QT3_SUPPORT bool mayGrowVertically() const { return verticalPolicy() &amp; GrowFlag; }
    inline QT3_SUPPORT Qt::Orientations expanding() const { return expandingDirections(); }

    QT3_SUPPORT_CONSTRUCTOR QSizePolicy(Policy hor, Policy ver, bool hfw)
        : data(hor | (ver&lt;&lt;HSize) | (hfw ? (1U&lt;&lt;2*HSize) : 0)) { }

    QT3_SUPPORT_CONSTRUCTOR QSizePolicy(Policy hor, Policy ver, uchar hors, uchar vers, bool hfw = false)
        : data(hor | (ver&lt;&lt;HSize) | (hfw ? (1U&lt;&lt;2*HSize) : 0)) {
        setHorizontalStretch(hors);
        setVerticalStretch(vers);
    }

    inline QT3_SUPPORT Policy horData() const { return static_cast&lt;Policy>(data &amp; HMask); }
    inline QT3_SUPPORT Policy verData() const { return static_cast&lt;Policy>((data &amp; VMask) >> HSize); }
    inline QT3_SUPPORT void setHorData(Policy d) { setHorizontalPolicy(d); }
    inline QT3_SUPPORT void setVerData(Policy d) { setVerticalPolicy(d); }

    inline QT3_SUPPORT uint horStretch() const { return horizontalStretch(); }
    inline QT3_SUPPORT uint verStretch() const { return verticalStretch(); }
    inline QT3_SUPPORT void setHorStretch(uchar sf) { setHorizontalStretch(sf); }
    inline QT3_SUPPORT void setVerStretch(uchar sf) { setVerticalStretch(sf); }
#endif

private:
    QSizePolicy(int i) : data(i) { }

    quint32 data;
};

inline void QSizePolicy::transpose() {
    Policy hData = horizontalPolicy();
    Policy vData = verticalPolicy();
    uchar hStretch = horizontalStretch();
    uchar vStretch = verticalStretch();
    setHorizontalPolicy(vData);
    setVerticalPolicy(hData);
    setHorizontalStretch(vStretch);
    setVerticalStretch(hStretch);
}

#endif // QSIZEPOLICY_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qslider.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSLIDER_H
#define QSLIDER_H

#include &lt;QtGui/qabstractslider.h>

QT_MODULE(Gui)

#ifndef QT_NO_SLIDER

class QSliderPrivate;

class Q_GUI_EXPORT QSlider : public QAbstractSlider
{
    Q_OBJECT

    Q_ENUMS(TickPosition)
    Q_PROPERTY(TickPosition tickPosition READ tickPosition WRITE setTickPosition)
    Q_PROPERTY(int tickInterval READ tickInterval WRITE setTickInterval)

public:
    enum TickPosition {
        NoTicks = 0,
        TicksAbove = 1,
        TicksLeft = TicksAbove,
        TicksBelow = 2,
        TicksRight = TicksBelow,
        TicksBothSides = 3

#if defined(QT3_SUPPORT) &amp;&amp; !defined(Q_MOC_RUN)
        ,NoMarks = NoTicks,
        Above = TicksAbove,
        Left = TicksAbove,
        Below = TicksBelow,
        Right = TicksRight,
        Both = TicksBothSides
#endif
    };

    explicit QSlider(QWidget *parent = 0);
    explicit QSlider(Qt::Orientation orientation, QWidget *parent = 0);

    ~QSlider();

    QSize sizeHint() const;
    QSize minimumSizeHint() const;

    void setTickPosition(TickPosition position);
    TickPosition tickPosition() const;

    void setTickInterval(int ti);
    int tickInterval() const;

    bool event(QEvent *event);

protected:
    void paintEvent(QPaintEvent *ev);
    void mousePressEvent(QMouseEvent *ev);
    void mouseReleaseEvent(QMouseEvent *ev);
    void mouseMoveEvent(QMouseEvent *ev);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QSlider(QWidget *parent, const char *name);
    QT3_SUPPORT_CONSTRUCTOR QSlider(Qt::Orientation, QWidget *parent, const char *name);
    QT3_SUPPORT_CONSTRUCTOR QSlider(int minValue, int maxValue, int pageStep, int value,
                                  Qt::Orientation orientation,
                                  QWidget *parent = 0, const char *name = 0);
    inline QT3_SUPPORT void setTickmarks(TickPosition position) { setTickPosition(position); }
    inline QT3_SUPPORT TickPosition tickmarks() const { return tickPosition(); }
public Q_SLOTS:
    inline QT_MOC_COMPAT void addStep() { triggerAction(SliderSingleStepAdd); };
    inline QT_MOC_COMPAT void subtractStep() { triggerAction(SliderSingleStepSub); };
#endif

private:
    Q_DISABLE_COPY(QSlider)
    Q_DECLARE_PRIVATE(QSlider)
};

#endif // QT_NO_SLIDER

#endif // QSLIDER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsortfilterproxymodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSORTFILTERPROXYMODEL_H
#define QSORTFILTERPROXYMODEL_H

#include &lt;QtGui/qabstractproxymodel.h>
#include &lt;QtCore/qregexp.h>

QT_MODULE(Gui)

class QSortFilterProxyModelPrivate;
class QSortFilterProxyModelLessThan;
class QSortFilterProxyModelGreaterThan;

class Q_GUI_EXPORT QSortFilterProxyModel : public QAbstractProxyModel
{
    friend class QSortFilterProxyModelLessThan;
    friend class QSortFilterProxyModelGreaterThan;

    Q_OBJECT
    Q_PROPERTY(QRegExp filterRegExp READ filterRegExp WRITE setFilterRegExp)
    Q_PROPERTY(int filterKeyColumn READ filterKeyColumn WRITE setFilterKeyColumn)
    Q_PROPERTY(Qt::CaseSensitivity filterCaseSensitivity READ filterCaseSensitivity WRITE setFilterCaseSensitivity)

public:
    QSortFilterProxyModel(QObject *parent = 0);
    ~QSortFilterProxyModel();

    void setSourceModel(QAbstractItemModel *sourceModel);

    QModelIndex mapToSource(const QModelIndex &amp;proxyIndex) const;
    QModelIndex mapFromSource(const QModelIndex &amp;sourceIndex) const;

    QItemSelection mapSelectionToSource(const QItemSelection &amp;proxySelection) const;
    QItemSelection mapSelectionFromSource(const QItemSelection &amp;sourceSelection) const;
    
    QRegExp filterRegExp() const;
    void setFilterRegExp(const QRegExp &amp;regExp);

    int filterKeyColumn() const;
    void setFilterKeyColumn(int column);

    Qt::CaseSensitivity filterCaseSensitivity() const;
    void setFilterCaseSensitivity(Qt::CaseSensitivity cs);

public Q_SLOTS:
    void setFilterRegExp(const QString &amp;pattern);
    void setFilterWildcard(const QString &amp;pattern);
    void setFilterFixedString(const QString &amp;pattern);
    void clear();

protected:
    virtual bool filterAcceptsRow(int source_row, const QModelIndex &amp;source_parent) const;
    virtual bool filterAcceptsColumn(int source_column, const QModelIndex &amp;source_parent) const;
    virtual bool lessThan(const QModelIndex &amp;left, const QModelIndex &amp;right) const;

public:
#ifdef Q_NO_USING_KEYWORD
    inline QObject *parent() const { return QObject::parent(); }
#else
    using QObject::parent;
#endif
    
    QModelIndex index(int row, int column, const QModelIndex &amp;parent = QModelIndex()) const;
    QModelIndex parent(const QModelIndex &amp;child) const;

    int rowCount(const QModelIndex &amp;parent = QModelIndex()) const;
    int columnCount(const QModelIndex &amp;parent = QModelIndex()) const;
    bool hasChildren(const QModelIndex &amp;parent = QModelIndex()) const;

    QVariant data(const QModelIndex &amp;index, int role = Qt::DisplayRole) const;
    bool setData(const QModelIndex &amp;index, const QVariant &amp;value, int role);

    QVariant headerData(int section, Qt::Orientation orientation, int role) const;
    bool setHeaderData(int section, Qt::Orientation orientation, const QVariant &amp;value, int role);
    
    QMimeData *mimeData(const QModelIndexList &amp;indexes) const;
    bool dropMimeData(const QMimeData *data, Qt::DropAction action,
                      int row, int column, const QModelIndex &amp;parent);

    bool insertRows(int row, int count, const QModelIndex &amp;parent = QModelIndex());
    bool insertColumns(int column, int count, const QModelIndex &amp;parent = QModelIndex());
    bool removeRows(int row, int count, const QModelIndex &amp;parent = QModelIndex());
    bool removeColumns(int column, int count, const QModelIndex &amp;parent = QModelIndex());

    void fetchMore(const QModelIndex &amp;parent);
    bool canFetchMore(const QModelIndex &amp;parent) const;
    Qt::ItemFlags flags(const QModelIndex &amp;index) const;

    QModelIndex buddy(const QModelIndex &amp;index) const;
    QModelIndexList match(const QModelIndex &amp;start, int role,
                          const QVariant &amp;value, int hits,
                          Qt::MatchFlags flags) const;
    QSize span(const QModelIndex &amp;index) const;
    void sort(int column, Qt::SortOrder order = Qt::AscendingOrder);

private:
    Q_DECLARE_PRIVATE(QSortFilterProxyModel)
    Q_DISABLE_COPY(QSortFilterProxyModel)

    Q_PRIVATE_SLOT(d_func(), void sourceDataChanged(const QModelIndex &amp;source_top_left, const QModelIndex &amp;source_bottom_right))
    Q_PRIVATE_SLOT(d_func(), void sourceHeaderDataChanged(Qt::Orientation orientation, int start, int end))
    Q_PRIVATE_SLOT(d_func(), void sourceLayoutChanged())
    Q_PRIVATE_SLOT(d_func(), void clear())
};

#endif // QSORTFILTERPROXYMODEL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsound.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSOUND_H
#define QSOUND_H

#include &lt;QtCore/qobject.h>

QT_MODULE(Gui)

#ifndef QT_NO_SOUND

class QSoundPrivate;

class Q_GUI_EXPORT QSound : public QObject
{
    Q_OBJECT

public:
    static bool isAvailable();
    static void play(const QString&amp; filename);

    explicit QSound(const QString&amp; filename, QObject* parent = 0);
    ~QSound();

    int loops() const;
    int loopsRemaining() const;
    void setLoops(int);
    QString fileName() const;

    bool isFinished() const;

public Q_SLOTS:
    void play();
    void stop();

public:
#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QSound(const QString&amp; filename, QObject* parent, const char* name);
    static inline QT3_SUPPORT bool available() { return isAvailable(); }
#endif
private:
    Q_DECLARE_PRIVATE(QSound)
    friend class QAuServer;
};

#endif // QT_NO_SOUND

#endif // QSOUND_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qspinbox.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSPINBOX_H
#define QSPINBOX_H

#include &lt;QtGui/qabstractspinbox.h>

QT_MODULE(Gui)

#ifndef QT_NO_SPINBOX

class QSpinBoxPrivate;
class Q_GUI_EXPORT QSpinBox : public QAbstractSpinBox
{
    Q_OBJECT

    Q_PROPERTY(QString suffix READ suffix WRITE setSuffix)
    Q_PROPERTY(QString prefix READ prefix WRITE setPrefix)
    Q_PROPERTY(QString cleanText READ cleanText)
    Q_PROPERTY(int maximum READ maximum WRITE setMaximum)
    Q_PROPERTY(int minimum READ minimum WRITE setMinimum)
    Q_PROPERTY(int singleStep READ singleStep WRITE setSingleStep)
    Q_PROPERTY(int value READ value WRITE setValue NOTIFY valueChanged USER true)

public:
    explicit QSpinBox(QWidget *parent = 0);
#ifdef QT_COMPAT
    QT_COMPAT_CONSTRUCTOR QSpinBox(QWidget *parent, const char *name);
    QT_COMPAT_CONSTRUCTOR QSpinBox(int min, int max, int step, QWidget *parent,
                                   const char *name = 0);
#endif

    int value() const;

    QString prefix() const;
    void setPrefix(const QString &amp;p);

    QString suffix() const;
    void setSuffix(const QString &amp;s);

    QString cleanText() const;

    int singleStep() const;
    void setSingleStep(int val);

    int minimum() const;
    void setMinimum(int min);

    int maximum() const;
    void setMaximum(int max);

    void setRange(int min, int max);

#ifdef QT_COMPAT
    inline QT_COMPAT void setLineStep(int step) { setSingleStep(step); }
    inline QT_COMPAT void setMaxValue(int val) { setMaximum(val); }
    inline QT_COMPAT void setMinValue(int val) { setMinimum(val); }
    inline QT_COMPAT int maxValue() const { return maximum(); }
    inline QT_COMPAT int minValue() const { return minimum(); }
#endif

protected:
    bool event(QEvent *e);
    virtual QValidator::State validate(QString &amp;input, int &amp;pos) const;
    virtual int valueFromText(const QString &amp;text) const;
    virtual QString textFromValue(int v) const;
    virtual void fixup(QString &amp;str) const;


public Q_SLOTS:
    void setValue(int val);

Q_SIGNALS:
    void valueChanged(int);
    void valueChanged(const QString &amp;);

private:
    Q_DISABLE_COPY(QSpinBox)
    Q_DECLARE_PRIVATE(QSpinBox)
};

class QDoubleSpinBoxPrivate;
class Q_GUI_EXPORT QDoubleSpinBox : public QAbstractSpinBox
{
    Q_OBJECT

    Q_PROPERTY(QString prefix READ prefix WRITE setPrefix)
    Q_PROPERTY(QString suffix READ suffix WRITE setSuffix)
    Q_PROPERTY(QString cleanText READ cleanText)
    Q_PROPERTY(int decimals READ decimals WRITE setDecimals)
    Q_PROPERTY(double maximum READ maximum WRITE setMaximum)
    Q_PROPERTY(double minimum READ minimum WRITE setMinimum)
    Q_PROPERTY(double singleStep READ singleStep WRITE setSingleStep)
    Q_PROPERTY(double value READ value WRITE setValue NOTIFY valueChanged)
public:
    explicit QDoubleSpinBox(QWidget *parent = 0);

    double value() const;

    QString prefix() const;
    void setPrefix(const QString &amp;p);

    QString suffix() const;
    void setSuffix(const QString &amp;s);

    QString cleanText() const;

    double singleStep() const;
    void setSingleStep(double val);

    double minimum() const;
    void setMinimum(double min);

    double maximum() const;
    void setMaximum(double max);

    void setRange(double min, double max);

    int decimals() const;
    void setDecimals(int prec);

    virtual QValidator::State validate(QString &amp;input, int &amp;pos) const;
    virtual double valueFromText(const QString &amp;text) const;
    virtual QString textFromValue(double v) const;
    virtual void fixup(QString &amp;str) const;

public Q_SLOTS:
    void setValue(double val);

Q_SIGNALS:
    void valueChanged(double);
    void valueChanged(const QString &amp;);

private:
    Q_DISABLE_COPY(QDoubleSpinBox)
    Q_DECLARE_PRIVATE(QDoubleSpinBox)
};

#endif // QT_NO_SPINBOX

#endif // QSPINBOX_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsplashscreen.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSPLASHSCREEN_H
#define QSPLASHSCREEN_H

#include &lt;QtGui/qpixmap.h>
#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

#ifndef QT_NO_SPLASHSCREEN
class QSplashScreenPrivate;

class Q_GUI_EXPORT QSplashScreen : public QWidget
{
    Q_OBJECT
public:
    explicit QSplashScreen(const QPixmap &amp;pixmap = QPixmap(), Qt::WFlags f = 0);
    QSplashScreen(QWidget *parent, const QPixmap &amp;pixmap = QPixmap(), Qt::WFlags f = 0);
    virtual ~QSplashScreen();

    void setPixmap(const QPixmap &amp;pixmap);
    const QPixmap pixmap() const;
    void finish(QWidget *w);
    void repaint();

public Q_SLOTS:
    void showMessage(const QString &amp;message, int alignment = Qt::AlignLeft,
                  const QColor &amp;color = Qt::black);
    void clearMessage();
#ifdef QT3_SUPPORT
    inline QT_MOC_COMPAT void message(const QString &amp;str, int alignment = Qt::AlignLeft,
        const QColor &amp;color = Qt::black) { showMessage(str, alignment, color); }
    inline QT_MOC_COMPAT void clear() { clearMessage(); }
#endif

Q_SIGNALS:
    void messageChanged(const QString &amp;message);

protected:
    bool event(QEvent *e);
    virtual void drawContents(QPainter *painter);
    void mousePressEvent(QMouseEvent *);

private:
    Q_DISABLE_COPY(QSplashScreen)
    Q_DECLARE_PRIVATE(QSplashScreen)
};

#endif // QT_NO_SPLASHSCREEN

#endif // QSPLASHSCREEN_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsplitter.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSPLITTER_H
#define QSPLITTER_H

#include &lt;QtGui/qframe.h>
#include &lt;QtGui/qsizepolicy.h>

QT_MODULE(Gui)

#ifndef QT_NO_SPLITTER

class QSplitterPrivate;
class QTextStream;
template &lt;typename T> class QList;

class QSplitterHandle;

class Q_GUI_EXPORT QSplitter : public QFrame
{
    Q_OBJECT

    Q_PROPERTY(Qt::Orientation orientation READ orientation WRITE setOrientation)
    Q_PROPERTY(bool opaqueResize READ opaqueResize WRITE setOpaqueResize)
    Q_PROPERTY(int handleWidth READ handleWidth WRITE setHandleWidth)
    Q_PROPERTY(bool childrenCollapsible READ childrenCollapsible WRITE setChildrenCollapsible)

public:
    explicit QSplitter(QWidget* parent = 0);
    explicit QSplitter(Qt::Orientation, QWidget* parent = 0);
    ~QSplitter();

    void addWidget(QWidget *widget);
    void insertWidget(int index, QWidget *widget);

    void setOrientation(Qt::Orientation);
    Qt::Orientation orientation() const;

    void setChildrenCollapsible(bool);
    bool childrenCollapsible() const;

    void setCollapsible(int index, bool);
    bool isCollapsible(int index) const;
    void setOpaqueResize(bool opaque = true);
    bool opaqueResize() const;
    void refresh();

    QSize sizeHint() const;
    QSize minimumSizeHint() const;

    QList&lt;int> sizes() const;
    void setSizes(const QList&lt;int> &amp;list);

    QByteArray saveState() const;
    bool restoreState(const QByteArray &amp;state);

    int handleWidth() const;
    void setHandleWidth(int);

    int indexOf(QWidget *w) const;
    QWidget *widget(int index) const;
    int count() const;

    void getRange(int index, int *, int *) const;
    QSplitterHandle *handle(int index) const;

    void setStretchFactor(int index, int stretch);

Q_SIGNALS:
    void splitterMoved(int pos, int index);

protected:
    virtual QSplitterHandle *createHandle();

    void childEvent(QChildEvent *);

    bool event(QEvent *);
    void resizeEvent(QResizeEvent *);

    void changeEvent(QEvent *);
    void moveSplitter(int pos, int index);
    void setRubberBand(int position);
    int closestLegalPosition(int, int);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QSplitter(QWidget* parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QSplitter(Qt::Orientation, QWidget* parent, const char* name);
    enum ResizeMode { Stretch, KeepSize, FollowSizeHint, Auto };
    QT3_SUPPORT void setResizeMode(QWidget *w, ResizeMode mode);
    inline QT3_SUPPORT void moveToFirst(QWidget *w) { insertWidget(0,w); }
    inline QT3_SUPPORT void moveToLast(QWidget *w) { addWidget(w); }
    inline QT3_SUPPORT void setCollapsible(QWidget *w, bool collapse)
    { setCollapsible(indexOf(w), collapse); }
#endif

private:
    Q_DISABLE_COPY(QSplitter)
    Q_DECLARE_PRIVATE(QSplitter)
private:
    friend class QSplitterHandle;
};

//#ifdef QT3_SUPPORT
#ifndef QT_NO_TEXTSTREAM
Q_GUI_EXPORT QTextStream&amp; operator&lt;&lt;(QTextStream&amp;, const QSplitter&amp;);
Q_GUI_EXPORT QTextStream&amp; operator>>(QTextStream&amp;, QSplitter&amp;);
#endif
//#endif

class QSplitterHandlePrivate;
class Q_GUI_EXPORT QSplitterHandle : public QWidget
{
    Q_OBJECT
public:
    QSplitterHandle(Qt::Orientation o, QSplitter *parent);
    void setOrientation(Qt::Orientation o);
    Qt::Orientation orientation() const;
    bool opaqueResize() const;
    QSplitter *splitter() const;

    QSize sizeHint() const;

protected:
    void paintEvent(QPaintEvent *);
    void mouseMoveEvent(QMouseEvent *);
    void mousePressEvent(QMouseEvent *);
    void mouseReleaseEvent(QMouseEvent *);
    bool event(QEvent *);

    void moveSplitter(int p);
    int closestLegalPosition(int p);

private:
    Q_DISABLE_COPY(QSplitterHandle)
    Q_DECLARE_PRIVATE(QSplitterHandle)
};

#endif // QT_NO_SPLITTER

#endif // QSPLITTER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstackedlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSTACKEDLAYOUT_H
#define QSTACKEDLAYOUT_H

#include &lt;QtGui/qlayout.h>

QT_MODULE(Gui)

class QStackedLayoutPrivate;

class Q_GUI_EXPORT QStackedLayout : public QLayout
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QStackedLayout)
    Q_PROPERTY(int currentIndex READ currentIndex WRITE setCurrentIndex NOTIFY currentChanged)
    QDOC_PROPERTY(int count READ count)

public:
    QStackedLayout();
    explicit QStackedLayout(QWidget *parent);
    explicit QStackedLayout(QLayout *parentLayout);
    ~QStackedLayout();

    int addWidget(QWidget *w);
    int insertWidget(int index, QWidget *w);

    QWidget *currentWidget() const;
    int currentIndex() const;
#ifdef Q_NO_USING_KEYWORD
    inline QWidget *widget() { return QLayout::widget(); }
#else
    using QLayout::widget;
#endif
    QWidget *widget(int) const;
    int count() const;

    // abstract virtual functions:
    void addItem(QLayoutItem *item);
    QSize sizeHint() const;
    QSize minimumSize() const;
    QLayoutItem *itemAt(int) const;
    QLayoutItem *takeAt(int);
    void setGeometry(const QRect &amp;rect);

Q_SIGNALS:
    void widgetRemoved(int index);
    void currentChanged(int index);

public Q_SLOTS:
    void setCurrentIndex(int index);
    void setCurrentWidget(QWidget *w);

private:
    Q_DISABLE_COPY(QStackedLayout)
};

#endif // QSTACKEDLAYOUT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstackedwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSTACKEDWIDGET_H
#define QSTACKEDWIDGET_H

#include &lt;QtGui/qframe.h>

QT_MODULE(Gui)

#ifndef QT_NO_STACKEDWIDGET

class QStackedWidgetPrivate;

class Q_GUI_EXPORT QStackedWidget : public QFrame
{
    Q_OBJECT

    Q_PROPERTY(int currentIndex READ currentIndex WRITE setCurrentIndex NOTIFY currentChanged)
    Q_PROPERTY(int count READ count)
public:
    explicit QStackedWidget(QWidget *parent=0);
    ~QStackedWidget();

    int addWidget(QWidget *w);
    int insertWidget(int index, QWidget *w);
    void removeWidget(QWidget *w);

    QWidget *currentWidget() const;
    int currentIndex() const;

    int indexOf(QWidget *) const;
    QWidget *widget(int) const;
    int count() const;

public Q_SLOTS:
    void setCurrentIndex(int index);
    void setCurrentWidget(QWidget *w);

Q_SIGNALS:
    void currentChanged(int);
    void widgetRemoved(int index);

protected:
    bool event(QEvent *e);

private:
    Q_DISABLE_COPY(QStackedWidget)
    Q_DECLARE_PRIVATE(QStackedWidget)
};

#endif // QT_NO_STACKEDWIDGET

#endif // QSTACKEDWIDGET_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstandarditemmodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSTANDARDITEMMODEL_H
#define QSTANDARDITEMMODEL_H

#include &lt;QtCore/qabstractitemmodel.h>

QT_MODULE(Gui)

#ifndef QT_NO_STANDARDITEMMODEL

class QStandardItemModelPrivate;

class Q_GUI_EXPORT QStandardItemModel : public QAbstractItemModel
{
    Q_OBJECT
public:
    explicit QStandardItemModel(QObject *parent = 0);
    QStandardItemModel(int rows, int columns, QObject *parent = 0);
    ~QStandardItemModel();

    QModelIndex index(int row, int column, const QModelIndex &amp;parent = QModelIndex()) const;
    QModelIndex parent(const QModelIndex &amp;child) const;

    int rowCount(const QModelIndex &amp;parent = QModelIndex()) const;
    int columnCount(const QModelIndex &amp;parent = QModelIndex()) const;
    bool hasChildren(const QModelIndex &amp;parent = QModelIndex()) const;

    QVariant data(const QModelIndex &amp;index, int role = Qt::DisplayRole) const;
    bool setData(const QModelIndex &amp;index, const QVariant &amp;value, int role = Qt::EditRole);

    QVariant headerData(int section, Qt::Orientation orientation,
                        int role = Qt::DisplayRole) const;
    bool setHeaderData(int section, Qt::Orientation orientation, const QVariant &amp;value,
                       int role = Qt::EditRole);

    bool insertRows(int row, int count, const QModelIndex &amp;parent = QModelIndex());
    bool insertColumns(int column, int count, const QModelIndex &amp;parent = QModelIndex());
    bool removeRows(int row, int count, const QModelIndex &amp;parent = QModelIndex());
    bool removeColumns(int column, int count, const QModelIndex &amp;parent = QModelIndex());

    Qt::ItemFlags flags(const QModelIndex &amp;index) const;

    void clear();

#ifdef Q_NO_USING_KEYWORD
    inline QObject *parent() const { return QObject::parent(); }
#else
    using QObject::parent;
#endif

private:
    Q_DECLARE_PRIVATE(QStandardItemModel)
    Q_DISABLE_COPY(QStandardItemModel)
};

#endif // QT_NO_STANDARDITEMMODEL

#endif //QSTANDARDITEMMODEL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstatusbar.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSTATUSBAR_H
#define QSTATUSBAR_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

#ifndef QT_NO_STATUSBAR

class QStatusBarPrivate;

class Q_GUI_EXPORT QStatusBar: public QWidget
{
    Q_OBJECT

    Q_PROPERTY(bool sizeGripEnabled READ isSizeGripEnabled WRITE setSizeGripEnabled)

public:
    explicit QStatusBar(QWidget* parent=0);
    virtual ~QStatusBar();

    void addWidget(QWidget *widget, int stretch = 0);
    void addPermanentWidget(QWidget *widget, int stretch = 0);
    void removeWidget(QWidget *widget);

    void setSizeGripEnabled(bool);
    bool isSizeGripEnabled() const;

    QString currentMessage() const;

public Q_SLOTS:
    void showMessage(const QString &amp;text, int timeout = 0);
    void clearMessage();

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QStatusBar(QWidget* parent, const char* name);
    QT3_SUPPORT void addWidget(QWidget *w, int stretch, bool permanent)
        { if (permanent) addPermanentWidget(w, stretch); else addWidget(w, stretch); }
public Q_SLOTS:
    inline QT_MOC_COMPAT void message(const QString &amp;text, int timeout = 0) { showMessage(text, timeout); }
    inline QT_MOC_COMPAT void clear() { clearMessage(); }
#endif

Q_SIGNALS:
    void messageChanged(const QString &amp;text);

protected:
    void paintEvent(QPaintEvent *);
    void resizeEvent(QResizeEvent *);

    void reformat();
    void hideOrShow();
    bool event(QEvent *);

private:
    Q_DISABLE_COPY(QStatusBar)
    Q_DECLARE_PRIVATE(QStatusBar)
};

#endif // QT_NO_STATUSBAR

#endif // QSTATUSBAR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstringlistmodel.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSTRINGLISTMODEL_H
#define QSTRINGLISTMODEL_H

#include &lt;QtCore/qstringlist.h>
#include &lt;QtGui/qabstractitemview.h>

QT_MODULE(Gui)

#ifndef QT_NO_STRINGLISTMODEL

class Q_GUI_EXPORT QStringListModel : public QAbstractListModel
{
    Q_OBJECT
public:
    explicit QStringListModel(QObject *parent = 0);
    QStringListModel(const QStringList &amp;strings, QObject *parent = 0);

    int rowCount(const QModelIndex &amp;parent = QModelIndex()) const;

    QVariant data(const QModelIndex &amp;index, int role) const;
    bool setData(const QModelIndex &amp;index, const QVariant &amp;value, int role = Qt::EditRole);

    Qt::ItemFlags flags(const QModelIndex &amp;index) const;
    
    bool insertRows(int row, int count, const QModelIndex &amp;parent = QModelIndex());
    bool removeRows(int row, int count, const QModelIndex &amp;parent = QModelIndex());

    void sort(int column, Qt::SortOrder order = Qt::AscendingOrder);

    QStringList stringList() const;
    void setStringList(const QStringList &amp;strings);

private:
    Q_DISABLE_COPY(QStringListModel)
    QStringList lst;
};

#endif // QT_NO_STRINGLISTMODEL

#endif // QSTRINGLISTMODEL_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSTYLE_H
#define QSTYLE_H

#include &lt;QtCore/qobject.h>
#include &lt;QtCore/qrect.h>
#include &lt;QtCore/qsize.h>
#include &lt;QtGui/qicon.h>
#include &lt;QtGui/qpixmap.h>
#include &lt;QtGui/qpalette.h>
#include &lt;QtCore/qobject.h>

QT_MODULE(Gui)

class QAction;
class QDebug;
class QTab;
class QFontMetrics;
class QStyleHintReturn;
class QStyleOption;
class QStyleOptionComplex;
class QStylePrivate;

class Q_GUI_EXPORT QStyle : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QStyle)

protected:
    QStyle(QStylePrivate &amp;dd);

public:
    QStyle();
    virtual ~QStyle();

    virtual void polish(QWidget *);
    virtual void unpolish(QWidget *);

    virtual void polish(QApplication *);
    virtual void unpolish(QApplication *);

    virtual void polish(QPalette &amp;);

    virtual QRect itemTextRect(const QFontMetrics &amp;fm, const QRect &amp;r,
                           int flags, bool enabled,
                           const QString &amp;text) const;

    virtual QRect itemPixmapRect(const QRect &amp;r, int flags, const QPixmap &amp;pixmap) const;

    virtual void drawItemText(QPainter *painter, const QRect &amp;rect,
                              int flags, const QPalette &amp;pal, bool enabled,
                              const QString &amp;text, QPalette::ColorRole textRole = QPalette::NoRole) const;

    virtual void drawItemPixmap(QPainter *painter, const QRect &amp;rect,
                                int alignment, const QPixmap &amp;pixmap) const;

    virtual QPalette standardPalette() const;

    enum StateFlag {
        State_None    =       0x00000000,
#ifdef QT3_SUPPORT
        State_Default = State_None,
#endif
        State_Enabled =       0x00000001,
        State_Raised =        0x00000002,
        State_Sunken =        0x00000004,
        State_Off =           0x00000008,
        State_NoChange =      0x00000010,
        State_On =            0x00000020,
        State_DownArrow =     0x00000040,
        State_Horizontal =    0x00000080,
        State_HasFocus =      0x00000100,
        State_Top =           0x00000200,
        State_Bottom =        0x00000400,
        State_FocusAtBorder = 0x00000800,
        State_AutoRaise =     0x00001000,
        State_MouseOver =     0x00002000,
        State_UpArrow =       0x00004000,
        State_Selected =      0x00008000,
        State_Active =        0x00010000,
        State_Open =          0x00040000,
        State_Children =      0x00080000,
        State_Item =          0x00100000,
        State_Sibling =       0x00200000,
        State_Editing =       0x00400000,
        State_KeyboardFocusChange = 0x00800000,
#ifdef QT_KEYPAD_NAVIGATION
        State_HasEditFocus =  0x01000000,
#endif
        State_ReadOnly =      0x02000000
    };
    Q_DECLARE_FLAGS(State, StateFlag)

#ifdef QT3_SUPPORT
    typedef State SFlags;
#endif

    enum PrimitiveElement {
        PE_Q3CheckListController,
        PE_Q3CheckListExclusiveIndicator,
        PE_Q3CheckListIndicator,
        PE_Q3DockWindowSeparator,
        PE_Q3Separator,

        PE_Frame,
        PE_FrameDefaultButton,
        PE_FrameDockWidget,
        PE_FrameFocusRect,
        PE_FrameGroupBox,
        PE_FrameLineEdit,
        PE_FrameMenu,
        PE_FrameStatusBar,
        PE_FrameTabWidget,
        PE_FrameWindow,
        PE_FrameButtonBevel,
        PE_FrameButtonTool,
        PE_FrameTabBarBase,

        PE_PanelButtonCommand,
        PE_PanelButtonBevel,
        PE_PanelButtonTool,
        PE_PanelMenuBar,
        PE_PanelToolBar,
        PE_PanelLineEdit,

        PE_IndicatorArrowDown,
        PE_IndicatorArrowLeft,
        PE_IndicatorArrowRight,
        PE_IndicatorArrowUp,
        PE_IndicatorBranch,
        PE_IndicatorButtonDropDown,
        PE_IndicatorViewItemCheck,
        PE_IndicatorCheckBox,
        PE_IndicatorDockWidgetResizeHandle,
        PE_IndicatorHeaderArrow,
        PE_IndicatorMenuCheckMark,
        PE_IndicatorProgressChunk,
        PE_IndicatorRadioButton,
        PE_IndicatorSpinDown,
        PE_IndicatorSpinMinus,
        PE_IndicatorSpinPlus,
        PE_IndicatorSpinUp,
        PE_IndicatorToolBarHandle,
        PE_IndicatorToolBarSeparator,
        PE_PanelTipLabel,
        PE_IndicatorTabTear,

        // do not add any values below/greater this
        PE_CustomBase = 0xf000000
    };

    virtual void drawPrimitive(PrimitiveElement pe, const QStyleOption *opt, QPainter *p,
                               const QWidget *w = 0) const = 0;
    enum ControlElement {
        CE_PushButton,
        CE_PushButtonBevel,
        CE_PushButtonLabel,

        CE_CheckBox,
        CE_CheckBoxLabel,

        CE_RadioButton,
        CE_RadioButtonLabel,

        CE_TabBarTab,
        CE_TabBarTabShape,
        CE_TabBarTabLabel,

        CE_ProgressBar,
        CE_ProgressBarGroove,
        CE_ProgressBarContents,
        CE_ProgressBarLabel,

        CE_MenuItem,
        CE_MenuScroller,
        CE_MenuVMargin,
        CE_MenuHMargin,
        CE_MenuTearoff,
        CE_MenuEmptyArea,

        CE_MenuBarItem,
        CE_MenuBarEmptyArea,

        CE_ToolButtonLabel,

        CE_Header,
        CE_HeaderSection,
        CE_HeaderLabel,

        CE_Q3DockWindowEmptyArea,
        CE_ToolBoxTab,
        CE_SizeGrip,
        CE_Splitter,
        CE_RubberBand,
        CE_DockWidgetTitle,

        CE_ScrollBarAddLine,
        CE_ScrollBarSubLine,
        CE_ScrollBarAddPage,
        CE_ScrollBarSubPage,
        CE_ScrollBarSlider,
        CE_ScrollBarFirst,
        CE_ScrollBarLast,

        CE_FocusFrame,
        CE_ComboBoxLabel,

        CE_ToolBar,

        // do not add any values below/greater than this
        CE_CustomBase = 0xf0000000
    };

    virtual void drawControl(ControlElement element, const QStyleOption *opt, QPainter *p,
                             const QWidget *w = 0) const = 0;

    enum SubElement {
        SE_PushButtonContents,
        SE_PushButtonFocusRect,

        SE_CheckBoxIndicator,
        SE_CheckBoxContents,
        SE_CheckBoxFocusRect,
        SE_CheckBoxClickRect,

        SE_RadioButtonIndicator,
        SE_RadioButtonContents,
        SE_RadioButtonFocusRect,
        SE_RadioButtonClickRect,

        SE_ComboBoxFocusRect,

        SE_SliderFocusRect,

        SE_Q3DockWindowHandleRect,

        SE_ProgressBarGroove,
        SE_ProgressBarContents,
        SE_ProgressBarLabel,


        SE_DialogButtonAccept,
        SE_DialogButtonReject,
        SE_DialogButtonApply,
        SE_DialogButtonHelp,
        SE_DialogButtonAll,
        SE_DialogButtonAbort,
        SE_DialogButtonIgnore,
        SE_DialogButtonRetry,
        SE_DialogButtonCustom,

        SE_ToolBoxTabContents,

        SE_HeaderLabel,
        SE_HeaderArrow,

        SE_TabWidgetTabBar,
        SE_TabWidgetTabPane,
        SE_TabWidgetTabContents,
        SE_TabWidgetLeftCorner,
        SE_TabWidgetRightCorner,

        SE_ViewItemCheckIndicator,

        SE_TabBarTearIndicator,

        SE_TreeViewDisclosureItem,

        // do not add any values below/greater than this
        SE_CustomBase = 0xf0000000
    };

    virtual QRect subElementRect(SubElement subElement, const QStyleOption *option,
                                 const QWidget *widget = 0) const = 0;


    enum ComplexControl {
        CC_SpinBox,
        CC_ComboBox,
        CC_ScrollBar,
        CC_Slider,
        CC_ToolButton,
        CC_TitleBar,
        CC_Q3ListView,
        CC_Dial,
        CC_GroupBox,

        // do not add any values below/greater than this
        CC_CustomBase = 0xf0000000
    };

    enum SubControl {
        SC_None =                  0x00000000,

        SC_ScrollBarAddLine =      0x00000001,
        SC_ScrollBarSubLine =      0x00000002,
        SC_ScrollBarAddPage =      0x00000004,
        SC_ScrollBarSubPage =      0x00000008,
        SC_ScrollBarFirst =        0x00000010,
        SC_ScrollBarLast =         0x00000020,
        SC_ScrollBarSlider =       0x00000040,
        SC_ScrollBarGroove =       0x00000080,

        SC_SpinBoxUp =             0x00000001,
        SC_SpinBoxDown =           0x00000002,
        SC_SpinBoxFrame =          0x00000004,
        SC_SpinBoxEditField =      0x00000008,

        SC_ComboBoxFrame =         0x00000001,
        SC_ComboBoxEditField =     0x00000002,
        SC_ComboBoxArrow =         0x00000004,
        SC_ComboBoxListBoxPopup =  0x00000008,

        SC_SliderGroove =          0x00000001,
        SC_SliderHandle =          0x00000002,
        SC_SliderTickmarks =       0x00000004,

        SC_ToolButton =            0x00000001,
        SC_ToolButtonMenu =        0x00000002,

        SC_TitleBarSysMenu =       0x00000001,
        SC_TitleBarMinButton =     0x00000002,
        SC_TitleBarMaxButton =     0x00000004,
        SC_TitleBarCloseButton =   0x00000008,
        SC_TitleBarNormalButton =  0x00000010,
        SC_TitleBarShadeButton =   0x00000020,
        SC_TitleBarUnshadeButton = 0x00000040,
        SC_TitleBarContextHelpButton = 0x00000080,
        SC_TitleBarLabel =         0x00000100,

        SC_Q3ListView =            0x00000001,
        SC_Q3ListViewBranch =      0x00000002,
        SC_Q3ListViewExpand =      0x00000004,

        SC_DialGroove =            0x00000001,
        SC_DialHandle =            0x00000002,
        SC_DialTickmarks =         0x00000004,

        SC_GroupBoxCheckBox =      0x00000001,
        SC_GroupBoxLabel =         0x00000002,
        SC_GroupBoxContents =      0x00000004,
        SC_GroupBoxFrame =         0x00000008,
        
        SC_All =                   0xffffffff
    };
    Q_DECLARE_FLAGS(SubControls, SubControl)

#ifdef QT3_SUPPORT
    typedef SubControls SCFlags;
#endif

    virtual void drawComplexControl(ComplexControl cc, const QStyleOptionComplex *opt, QPainter *p,
                                    const QWidget *widget = 0) const = 0;
    virtual SubControl hitTestComplexControl(ComplexControl cc, const QStyleOptionComplex *opt,
                                             const QPoint &amp;pt, const QWidget *widget = 0) const = 0;
    virtual QRect subControlRect(ComplexControl cc, const QStyleOptionComplex *opt,
                                 SubControl sc, const QWidget *widget = 0) const = 0;

    enum PixelMetric {
        PM_ButtonMargin,
        PM_ButtonDefaultIndicator,
        PM_MenuButtonIndicator,
        PM_ButtonShiftHorizontal,
        PM_ButtonShiftVertical,

        PM_DefaultFrameWidth,
        PM_SpinBoxFrameWidth,
        PM_ComboBoxFrameWidth,

        PM_MaximumDragDistance,

        PM_ScrollBarExtent,
        PM_ScrollBarSliderMin,

        PM_SliderThickness,             // total slider thickness
        PM_SliderControlThickness,      // thickness of the business part
        PM_SliderLength,                // total length of slider
        PM_SliderTickmarkOffset,        //
        PM_SliderSpaceAvailable,        // available space for slider to move

        PM_DockWidgetSeparatorExtent,
        PM_DockWidgetHandleExtent,
        PM_DockWidgetFrameWidth,

        PM_TabBarTabOverlap,
        PM_TabBarTabHSpace,
        PM_TabBarTabVSpace,
        PM_TabBarBaseHeight,
        PM_TabBarBaseOverlap,

        PM_ProgressBarChunkWidth,

        PM_SplitterWidth,
        PM_TitleBarHeight,

        PM_MenuScrollerHeight,
        PM_MenuHMargin,
        PM_MenuVMargin,
        PM_MenuPanelWidth,
        PM_MenuTearoffHeight,
        PM_MenuDesktopFrameWidth,

        PM_MenuBarPanelWidth,
        PM_MenuBarItemSpacing,
        PM_MenuBarVMargin,
        PM_MenuBarHMargin,

        PM_IndicatorWidth,
        PM_IndicatorHeight,
        PM_ExclusiveIndicatorWidth,
        PM_ExclusiveIndicatorHeight,
        PM_CheckListButtonSize,
        PM_CheckListControllerSize,

        PM_DialogButtonsSeparator,
        PM_DialogButtonsButtonWidth,
        PM_DialogButtonsButtonHeight,

        PM_MDIFrameWidth,
        PM_MDIMinimizedWidth,
        PM_HeaderMargin,
        PM_HeaderMarkSize,
        PM_HeaderGripMargin,
        PM_TabBarTabShiftHorizontal,
        PM_TabBarTabShiftVertical,
        PM_TabBarScrollButtonWidth,

        PM_ToolBarFrameWidth,
        PM_ToolBarHandleExtent,
        PM_ToolBarItemSpacing,
        PM_ToolBarItemMargin,
        PM_ToolBarSeparatorExtent,
        PM_ToolBarExtensionExtent,

        PM_SpinBoxSliderHeight,

        PM_DefaultTopLevelMargin,
        PM_DefaultChildMargin,
        PM_DefaultLayoutSpacing,

        PM_ToolBarIconSize,
        PM_ListViewIconSize,
        PM_IconViewIconSize,
        PM_SmallIconSize,
        PM_LargeIconSize,

        PM_FocusFrameVMargin,
        PM_FocusFrameHMargin,

        PM_ToolTipLabelFrameWidth,
        PM_CheckBoxLabelSpacing,
        PM_TabBarIconSize,
        PM_SizeGripSize,
        PM_DockWidgetTitleMargin,


        // do not add any values below/greater than this
        PM_CustomBase = 0xf0000000
    };

    virtual int pixelMetric(PixelMetric metric, const QStyleOption *option = 0,
                            const QWidget *widget = 0) const = 0;

    enum ContentsType {
        CT_PushButton,
        CT_CheckBox,
        CT_RadioButton,
        CT_ToolButton,
        CT_ComboBox,
        CT_Splitter,
        CT_Q3DockWindow,
        CT_ProgressBar,
        CT_MenuItem,
        CT_MenuBarItem,
        CT_MenuBar,
        CT_Menu,
        CT_TabBarTab,
        CT_Slider,
        CT_ScrollBar,
        CT_Q3Header,
        CT_LineEdit,
        CT_SpinBox,
        CT_SizeGrip,
        CT_TabWidget,
        CT_DialogButtons,
        CT_HeaderSection,
        CT_GroupBox,
        // do not add any values below/greater than this
        CT_CustomBase = 0xf0000000
    };

    virtual QSize sizeFromContents(ContentsType ct, const QStyleOption *opt,
                                   const QSize &amp;contentsSize, const QWidget *w = 0) const = 0;

    enum StyleHint {
        SH_EtchDisabledText,
        SH_DitherDisabledText,
        SH_ScrollBar_MiddleClickAbsolutePosition,
        SH_ScrollBar_ScrollWhenPointerLeavesControl,
        SH_TabBar_SelectMouseType,
        SH_TabBar_Alignment,
        SH_Header_ArrowAlignment,
        SH_Slider_SnapToValue,
        SH_Slider_SloppyKeyEvents,
        SH_ProgressDialog_CenterCancelButton,
        SH_ProgressDialog_TextLabelAlignment,
        SH_PrintDialog_RightAlignButtons,
        SH_MainWindow_SpaceBelowMenuBar,
        SH_FontDialog_SelectAssociatedText,
        SH_Menu_AllowActiveAndDisabled,
        SH_Menu_SpaceActivatesItem,
        SH_Menu_SubMenuPopupDelay,
        SH_ScrollView_FrameOnlyAroundContents,
        SH_MenuBar_AltKeyNavigation,
        SH_ComboBox_ListMouseTracking,
        SH_Menu_MouseTracking,
        SH_MenuBar_MouseTracking,
        SH_ItemView_ChangeHighlightOnFocus,
        SH_Widget_ShareActivation,
        SH_Workspace_FillSpaceOnMaximize,
        SH_ComboBox_Popup,
        SH_TitleBar_NoBorder,
        SH_ScrollBar_StopMouseOverSlider,
        SH_BlinkCursorWhenTextSelected,
        SH_RichText_FullWidthSelection,
        SH_Menu_Scrollable,
        SH_GroupBox_TextLabelVerticalAlignment,
        SH_GroupBox_TextLabelColor,
        SH_Menu_SloppySubMenus,
        SH_Table_GridLineColor,
        SH_LineEdit_PasswordCharacter,
        SH_DialogButtons_DefaultButton,
        SH_ToolBox_SelectedPageTitleBold,
        SH_TabBar_PreferNoArrows,
        SH_ScrollBar_LeftClickAbsolutePosition,
        SH_Q3ListViewExpand_SelectMouseType,
        SH_UnderlineShortcut,
        SH_SpinBox_AnimateButton,
        SH_SpinBox_KeyPressAutoRepeatRate,
        SH_SpinBox_ClickAutoRepeatRate,
        SH_Menu_FillScreenWithScroll,
        SH_ToolTipLabel_Opacity,
        SH_DrawMenuBarSeparator,
        SH_TitleBar_ModifyNotification,
        SH_Button_FocusPolicy,
        SH_MenuBar_DismissOnSecondClick,
        SH_MessageBox_UseBorderForButtonSpacing,
        SH_TitleBar_AutoRaise,
        SH_ToolButton_PopupDelay,
        SH_FocusFrame_Mask,
        SH_RubberBand_Mask,
	SH_WindowFrame_Mask,
        SH_SpinControls_DisableOnBounds,
        SH_Dial_BackgroundRole,
        SH_ComboBox_LayoutDirection,
        SH_ItemView_EllipsisLocation,
        SH_ItemView_ShowDecorationSelected,
        SH_ItemView_ActivateItemOnSingleClick,
        SH_ScrollBar_ContextMenu,
        SH_ScrollBar_RollBetweenButtons,
        // Add new style hint values here

#ifdef QT3_SUPPORT
        SH_GUIStyle = 0x00000100,
        SH_ScrollBar_BackgroundMode,
        // Add other compat values here

        SH_UnderlineAccelerator = SH_UnderlineShortcut,
#endif
        SH_CustomBase = 0xf0000000
    };

    virtual int styleHint(StyleHint stylehint, const QStyleOption *opt = 0,
                          const QWidget *widget = 0, QStyleHintReturn* returnData = 0) const = 0;

    enum StandardPixmap {
        SP_TitleBarMenuButton,
        SP_TitleBarMinButton,
        SP_TitleBarMaxButton,
        SP_TitleBarCloseButton,
        SP_TitleBarNormalButton,
        SP_TitleBarShadeButton,
        SP_TitleBarUnshadeButton,
        SP_TitleBarContextHelpButton,
        SP_DockWidgetCloseButton,
        SP_MessageBoxInformation,
        SP_MessageBoxWarning,
        SP_MessageBoxCritical,
        SP_MessageBoxQuestion,
        SP_DesktopIcon,
        SP_TrashIcon,
        SP_ComputerIcon,
        SP_DriveFDIcon,
        SP_DriveHDIcon,
        SP_DriveCDIcon,
        SP_DriveDVDIcon,
        SP_DriveNetIcon,
        SP_DirOpenIcon,
        SP_DirClosedIcon,
        SP_DirLinkIcon,
        SP_FileIcon,
        SP_FileLinkIcon,
        SP_ToolBarHorizontalExtensionButton,
        SP_ToolBarVerticalExtensionButton,
        SP_FileDialogStart,
        SP_FileDialogEnd,
        SP_FileDialogToParent,
        SP_FileDialogNewFolder,
        SP_FileDialogDetailedView,
        SP_FileDialogInfoView,
        SP_FileDialogContentsView,
        SP_FileDialogListView,
        SP_FileDialogBack,

        // do not add any values below/greater than this
        SP_CustomBase = 0xf0000000
    };

    virtual QPixmap standardPixmap(StandardPixmap standardPixmap, const QStyleOption *opt = 0,
                                   const QWidget *widget = 0) const = 0;

    QIcon standardIcon(StandardPixmap standardIcon, const QStyleOption *option = 0,
                       const QWidget *widget = 0) const;

    virtual QPixmap generatedIconPixmap(QIcon::Mode iconMode, const QPixmap &amp;pixmap,
                                        const QStyleOption *opt) const = 0;

    static QRect visualRect(Qt::LayoutDirection direction, const QRect &amp;boundingRect,
                            const QRect &amp;logicalRect);
    static QPoint visualPos(Qt::LayoutDirection direction, const QRect &amp;boundingRect,
                            const QPoint &amp;logicalPos);
    static int sliderPositionFromValue(int min, int max, int val, int space,
                                       bool upsideDown = false);
    static int sliderValueFromPosition(int min, int max, int pos, int space,
                                       bool upsideDown = false);
    static Qt::Alignment visualAlignment(Qt::LayoutDirection direction, Qt::Alignment alignment);
    static QRect alignedRect(Qt::LayoutDirection direction, Qt::Alignment alignment,
                             const QSize &amp;size, const QRect &amp;rectangle);

protected Q_SLOTS:
    QIcon standardIconImplementation(StandardPixmap standardIcon, const QStyleOption *opt = 0,
                                     const QWidget *widget = 0) const;

private:
    Q_DISABLE_COPY(QStyle)
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QStyle::State)
Q_DECLARE_OPERATORS_FOR_FLAGS(QStyle::SubControls)

#if !defined(QT_NO_DEBUG_STREAM) &amp;&amp; !defined(QT_NO_DEBUG)
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug debug, QStyle::State state);
#endif
    
#endif // QSTYLE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstylefactory.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSTYLEFACTORY_H
#define QSTYLEFACTORY_H

#include &lt;QtCore/qstringlist.h>

QT_MODULE(Gui)

class QStyle;

class Q_GUI_EXPORT QStyleFactory
{
public:
    static QStringList keys();
    static QStyle *create(const QString&amp;);
};

#endif // QSTYLEFACTORY_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstyleoption.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSTYLEOPTION_H
#define QSTYLEOPTION_H

#include &lt;QtGui/qabstractspinbox.h>
#include &lt;QtGui/qicon.h>
#include &lt;QtGui/qslider.h>
#include &lt;QtGui/qstyle.h>
#include &lt;QtGui/qtabbar.h>
#include &lt;QtGui/qtabwidget.h>
#include &lt;QtGui/qrubberband.h>

QT_MODULE(Gui)

class QDebug;

class Q_GUI_EXPORT QStyleOption
{
public:
    enum OptionType {
                      SO_Default, SO_FocusRect, SO_Button, SO_Tab, SO_MenuItem,
                      SO_Frame, SO_ProgressBar, SO_ToolBox, SO_Header, SO_Q3DockWindow,
                      SO_DockWidget, SO_Q3ListViewItem, SO_ViewItem, SO_TabWidgetFrame,
                      SO_TabBarBase, SO_RubberBand, SO_ToolBar,

                      SO_Complex = 0xf0000, SO_Slider, SO_SpinBox, SO_ToolButton, SO_ComboBox,
                      SO_Q3ListView, SO_TitleBar, SO_GroupBox,
                    
                      SO_CustomBase = 0xf00,
                      SO_ComplexCustomBase = 0xf000000
                    };

    enum { Type = SO_Default };
    enum { Version = 1 };

    int version;
    int type;
    QStyle::State state;
    Qt::LayoutDirection direction;
    QRect rect;
    QFontMetrics fontMetrics;
    QPalette palette;

    QStyleOption(int version = QStyleOption::Version, int type = SO_Default);
    QStyleOption(const QStyleOption &amp;other);
    ~QStyleOption();

    void init(const QWidget *w);
    inline void initFrom(const QWidget *w) { init(w); }
    QStyleOption &amp;operator=(const QStyleOption &amp;other);
};

class Q_GUI_EXPORT QStyleOptionFocusRect : public QStyleOption
{
public:
    enum { Type = SO_FocusRect };
    enum { Version = 1 };

    QColor backgroundColor;

    QStyleOptionFocusRect();
    QStyleOptionFocusRect(const QStyleOptionFocusRect &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionFocusRect(int version);
};

class Q_GUI_EXPORT QStyleOptionFrame : public QStyleOption
{
public:
    enum { Type = SO_Frame };
    enum { Version = 1 };

    int lineWidth;
    int midLineWidth;

    QStyleOptionFrame();
    QStyleOptionFrame(const QStyleOptionFrame &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionFrame(int version);
};

class Q_GUI_EXPORT QStyleOptionFrameV2 : public QStyleOptionFrame
{
public:
    enum { Version = 2 };
    enum FrameFeature {
        None = 0x00,
        Flat = 0x01
    };
    Q_DECLARE_FLAGS(FrameFeatures, FrameFeature)
    FrameFeatures features;

    QStyleOptionFrameV2();
    QStyleOptionFrameV2(const QStyleOptionFrameV2 &amp;other) : QStyleOptionFrame(Version) { *this = other; }
    QStyleOptionFrameV2(const QStyleOptionFrame &amp;other);
    QStyleOptionFrameV2 &amp;operator=(const QStyleOptionFrame &amp;other);

protected:
    QStyleOptionFrameV2(int version);
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QStyleOptionFrameV2::FrameFeatures)

#ifndef QT_NO_TABWIDGET
class Q_GUI_EXPORT QStyleOptionTabWidgetFrame : public QStyleOption
{
public:
    enum { Type = SO_TabWidgetFrame };
    enum { Version = 1 };

    int lineWidth;
    int midLineWidth;
    QTabBar::Shape shape;
    QSize tabBarSize;
    QSize rightCornerWidgetSize;
    QSize leftCornerWidgetSize;

    QStyleOptionTabWidgetFrame();
    inline QStyleOptionTabWidgetFrame(const QStyleOptionTabWidgetFrame &amp;other)
        : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionTabWidgetFrame(int version);
};
#endif

#ifndef QT_NO_TABBAR
class Q_GUI_EXPORT QStyleOptionTabBarBase : public QStyleOption
{
public:
    enum { Type = SO_TabBarBase };
    enum { Version = 1 };

    QTabBar::Shape shape;
    QRect tabBarRect;
    QRect selectedTabRect;

    QStyleOptionTabBarBase();
    QStyleOptionTabBarBase(const QStyleOptionTabBarBase &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionTabBarBase(int version);
};
#endif

class Q_GUI_EXPORT QStyleOptionHeader : public QStyleOption
{
public:
    enum { Type = SO_Header };
    enum { Version = 1 };

    enum SectionPosition { Beginning, Middle, End, OnlyOneSection };
    enum SelectedPosition { NotAdjacent, NextIsSelected, PreviousIsSelected,
                            NextAndPreviousAreSelected };
    enum SortIndicator { None, SortUp, SortDown };

    int section;
    QString text;
    Qt::Alignment textAlignment;
    QIcon icon;
    Qt::Alignment iconAlignment;
    SectionPosition position;
    SelectedPosition selectedPosition;
    SortIndicator sortIndicator;
    Qt::Orientation orientation;

    QStyleOptionHeader();
    QStyleOptionHeader(const QStyleOptionHeader &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionHeader(int version);
};

class Q_GUI_EXPORT QStyleOptionButton : public QStyleOption
{
public:
    enum { Type = SO_Button };
    enum { Version = 1 };

    enum ButtonFeature { None = 0x00, Flat = 0x01, HasMenu = 0x02, DefaultButton = 0x04,
                         AutoDefaultButton = 0x08 };
    Q_DECLARE_FLAGS(ButtonFeatures, ButtonFeature)

    ButtonFeatures features;
    QString text;
    QIcon icon;
    QSize iconSize;

    QStyleOptionButton();
    QStyleOptionButton(const QStyleOptionButton &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionButton(int version);
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QStyleOptionButton::ButtonFeatures)

#ifndef QT_NO_TABBAR
class Q_GUI_EXPORT QStyleOptionTab : public QStyleOption
{
public:
    enum { Type = SO_Tab };
    enum { Version = 1 };

    enum TabPosition { Beginning, Middle, End, OnlyOneTab };
    enum SelectedPosition { NotAdjacent, NextIsSelected, PreviousIsSelected };
    enum CornerWidget { NoCornerWidgets = 0x00, LeftCornerWidget = 0x01,
                        RightCornerWidget = 0x02 };
    Q_DECLARE_FLAGS(CornerWidgets, CornerWidget)

    QTabBar::Shape shape;
    QString text;
    QIcon icon;
    int row;
    TabPosition position;
    SelectedPosition selectedPosition;
    CornerWidgets cornerWidgets;

    QStyleOptionTab();
    QStyleOptionTab(const QStyleOptionTab &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionTab(int version);
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QStyleOptionTab::CornerWidgets)

class Q_GUI_EXPORT QStyleOptionTabV2 : public QStyleOptionTab
{
public:
    enum { Version = 2 };
    QSize iconSize;
    QStyleOptionTabV2();
    QStyleOptionTabV2(const QStyleOptionTabV2 &amp;other) : QStyleOptionTab(Version) { *this = other; }
    QStyleOptionTabV2(const QStyleOptionTab &amp;other);
    QStyleOptionTabV2 &amp;operator=(const QStyleOptionTab &amp;other);

protected:
    QStyleOptionTabV2(int version);
};

#endif


#ifndef QT_NO_TOOLBAR

class Q_GUI_EXPORT QStyleOptionToolBar : public QStyleOption
{
public:
    enum { Type = SO_ToolBar };
    enum { Version = 1 };
    enum ToolBarPosition { Beginning, Middle, End, OnlyOne };
    enum ToolBarFeature { None = 0x0, Movable = 0x1 };
    Q_DECLARE_FLAGS(ToolBarFeatures, ToolBarFeature)
    ToolBarPosition positionOfLine; // The toolbar line position
    ToolBarPosition positionWithinLine; // The position within a toolbar
    Qt::ToolBarArea toolBarArea; // The toolbar docking area
    ToolBarFeatures features;
    int lineWidth;
    int midLineWidth;
    QStyleOptionToolBar();
    QStyleOptionToolBar(const QStyleOptionToolBar &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionToolBar(int version);
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QStyleOptionToolBar::ToolBarFeatures)

#endif



class Q_GUI_EXPORT QStyleOptionProgressBar : public QStyleOption
{
public:
    enum { Type = SO_ProgressBar };
    enum { Version = 1 };

    int minimum;
    int maximum;
    int progress;
    QString text;
    Qt::Alignment textAlignment;
    bool textVisible;

    QStyleOptionProgressBar();
    QStyleOptionProgressBar(const QStyleOptionProgressBar &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionProgressBar(int version);
};

// Adds style info for vertical progress bars
class Q_GUI_EXPORT QStyleOptionProgressBarV2 : public QStyleOptionProgressBar
{
public:
    enum { Type = SO_ProgressBar };
    enum { Version = 2 };
    Qt::Orientation orientation;
    bool invertedAppearance;
    bool bottomToTop;

    QStyleOptionProgressBarV2();
    QStyleOptionProgressBarV2(const QStyleOptionProgressBar &amp;other);
    QStyleOptionProgressBarV2(const QStyleOptionProgressBarV2 &amp;other);
    QStyleOptionProgressBarV2 &amp;operator=(const QStyleOptionProgressBar &amp;other);

protected:
    QStyleOptionProgressBarV2(int version);
};

class Q_GUI_EXPORT QStyleOptionMenuItem : public QStyleOption
{
public:
    enum { Type = SO_MenuItem };
    enum { Version = 1 };

    enum MenuItemType { Normal, DefaultItem, Separator, SubMenu, Scroller, TearOff, Margin,
                        EmptyArea };
    enum CheckType { NotCheckable, Exclusive, NonExclusive };

    MenuItemType menuItemType;
    CheckType checkType;
    bool checked;
    bool menuHasCheckableItems;
    QRect menuRect;
    QString text;
    QIcon icon;
    int maxIconWidth;
    int tabWidth;
    QFont font;

    QStyleOptionMenuItem();
    QStyleOptionMenuItem(const QStyleOptionMenuItem &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionMenuItem(int version);
};

class Q_GUI_EXPORT QStyleOptionQ3ListViewItem : public QStyleOption
{
public:
    enum { Type = SO_Q3ListViewItem };
    enum { Version = 1 };

    enum Q3ListViewItemFeature { None = 0x00, Expandable = 0x01, MultiLine = 0x02, Visible = 0x04,
                                 ParentControl = 0x08 };
    Q_DECLARE_FLAGS(Q3ListViewItemFeatures, Q3ListViewItemFeature)

    Q3ListViewItemFeatures features;
    int height;
    int totalHeight;
    int itemY;
    int childCount;

    QStyleOptionQ3ListViewItem();
    QStyleOptionQ3ListViewItem(const QStyleOptionQ3ListViewItem &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionQ3ListViewItem(int version);
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QStyleOptionQ3ListViewItem::Q3ListViewItemFeatures)

class Q_GUI_EXPORT QStyleOptionQ3DockWindow : public QStyleOption
{
public:
    enum { Type = SO_Q3DockWindow };
    enum { Version = 1 };

    bool docked;
    bool closeEnabled;

    QStyleOptionQ3DockWindow();
    QStyleOptionQ3DockWindow(const QStyleOptionQ3DockWindow &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionQ3DockWindow(int version);
};

class Q_GUI_EXPORT QStyleOptionDockWidget : public QStyleOption
{
public:
    enum { Type = SO_DockWidget };
    enum { Version = 1 };

    QString title;
    bool closable;
    bool movable;
    bool floatable;

    QStyleOptionDockWidget();
    QStyleOptionDockWidget(const QStyleOptionDockWidget &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionDockWidget(int version);
};

class Q_GUI_EXPORT QStyleOptionViewItem : public QStyleOption
{
public:
    enum { Type = SO_ViewItem };
    enum { Version = 1 };

    enum Position { Left, Right, Top, Bottom };

    Qt::Alignment displayAlignment;
    Qt::Alignment decorationAlignment;
    Qt::TextElideMode textElideMode;
    Position decorationPosition;
    QSize decorationSize;
    QFont font;
    bool showDecorationSelected;

    QStyleOptionViewItem();
    QStyleOptionViewItem(const QStyleOptionViewItem &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionViewItem(int version);
};

class Q_GUI_EXPORT QStyleOptionToolBox : public QStyleOption
{
public:
    enum { Type = SO_ToolBox };
    enum { Version = 1 };

    QString text;
    QIcon icon;

    QStyleOptionToolBox();
    QStyleOptionToolBox(const QStyleOptionToolBox &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionToolBox(int version);
};

#ifndef QT_NO_RUBBERBAND
class Q_GUI_EXPORT QStyleOptionRubberBand : public QStyleOption
{
public:
    enum { Type = SO_RubberBand };
    enum { Version = 1 };

    QRubberBand::Shape shape;
    bool opaque;

    QStyleOptionRubberBand();
    QStyleOptionRubberBand(const QStyleOptionRubberBand &amp;other) : QStyleOption(Version, Type) { *this = other; }

protected:
    QStyleOptionRubberBand(int version);
};
#endif // QT_NO_RUBBERBAND

// -------------------------- Complex style options -------------------------------
class Q_GUI_EXPORT QStyleOptionComplex : public QStyleOption
{
public:
    enum { Type = SO_Complex };
    enum { Version = 1 };

    QStyle::SubControls subControls;
    QStyle::SubControls activeSubControls;

    QStyleOptionComplex(int version = QStyleOptionComplex::Version, int type = SO_Complex);
    QStyleOptionComplex(const QStyleOptionComplex &amp;other) : QStyleOption(Version, Type) { *this = other; }
};

#ifndef QT_NO_SLIDER
class Q_GUI_EXPORT QStyleOptionSlider : public QStyleOptionComplex
{
public:
    enum { Type = SO_Slider };
    enum { Version = 1 };

    Qt::Orientation orientation;
    int minimum;
    int maximum;
    QSlider::TickPosition tickPosition;
    int tickInterval;
    bool upsideDown;
    int sliderPosition;
    int sliderValue;
    int singleStep;
    int pageStep;
    qreal notchTarget;
    bool dialWrapping;

    QStyleOptionSlider();
    QStyleOptionSlider(const QStyleOptionSlider &amp;other) : QStyleOptionComplex(Version, Type) { *this = other; }

protected:
    QStyleOptionSlider(int version);
};
#endif // QT_NO_SLIDER

#ifndef QT_NO_SPINBOX
class Q_GUI_EXPORT QStyleOptionSpinBox : public QStyleOptionComplex
{
public:
    enum { Type = SO_SpinBox };
    enum { Version = 1 };

    QAbstractSpinBox::ButtonSymbols buttonSymbols;
    QAbstractSpinBox::StepEnabled stepEnabled;
    bool frame;

    QStyleOptionSpinBox();
    QStyleOptionSpinBox(const QStyleOptionSpinBox &amp;other) : QStyleOptionComplex(Version, Type) { *this = other; }

protected:
    QStyleOptionSpinBox(int version);
};
#endif // QT_NO_SPINBOX

class Q_GUI_EXPORT QStyleOptionQ3ListView : public QStyleOptionComplex
{
public:
    enum { Type = SO_Q3ListView };
    enum { Version = 1 };

    QList&lt;QStyleOptionQ3ListViewItem> items;
    QPalette viewportPalette;
    QPalette::ColorRole viewportBGRole;
    int sortColumn;
    int itemMargin;
    int treeStepSize;
    bool rootIsDecorated;

    QStyleOptionQ3ListView();
    QStyleOptionQ3ListView(const QStyleOptionQ3ListView &amp;other) : QStyleOptionComplex(Version, Type) { *this = other; }

protected:
    QStyleOptionQ3ListView(int version);
};

class Q_GUI_EXPORT QStyleOptionToolButton : public QStyleOptionComplex
{
public:
    enum { Type = SO_ToolButton };
    enum { Version = 1 };

    enum ToolButtonFeature { None = 0x00, Arrow = 0x01, Menu = 0x04, PopupDelay = 0x08 };
    Q_DECLARE_FLAGS(ToolButtonFeatures, ToolButtonFeature)

    ToolButtonFeatures features;
    QIcon icon;
    QSize iconSize;
    QString text;
    Qt::ArrowType arrowType;
    Qt::ToolButtonStyle toolButtonStyle;
    QPoint pos;
    QFont font;

    QStyleOptionToolButton();
    QStyleOptionToolButton(const QStyleOptionToolButton &amp;other) : QStyleOptionComplex(Version, Type) { *this = other; }

protected:
    QStyleOptionToolButton(int version);
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QStyleOptionToolButton::ToolButtonFeatures)

class Q_GUI_EXPORT QStyleOptionComboBox : public QStyleOptionComplex
{
public:
    enum { Type = SO_ComboBox };
    enum { Version = 1 };

    bool editable;
    QRect popupRect;
    bool frame;
    QString currentText;
    QIcon currentIcon;
    QSize iconSize;

    QStyleOptionComboBox();
    QStyleOptionComboBox(const QStyleOptionComboBox &amp;other) : QStyleOptionComplex(Version, Type) { *this = other; }

protected:
    QStyleOptionComboBox(int version);
};

class Q_GUI_EXPORT QStyleOptionTitleBar : public QStyleOptionComplex
{
public:
    enum { Type = SO_TitleBar };
    enum { Version = 1 };

    QString text;
    QIcon icon;
    int titleBarState;
    Qt::WFlags titleBarFlags;

    QStyleOptionTitleBar();
    QStyleOptionTitleBar(const QStyleOptionTitleBar &amp;other) : QStyleOptionComplex(Version, Type) { *this = other; }

protected:
    QStyleOptionTitleBar(int version);
};

class Q_GUI_EXPORT QStyleOptionGroupBox : public QStyleOptionComplex
{
public:
    enum { Type = SO_GroupBox };
    enum { Version = 1 };

    QStyleOptionFrameV2::FrameFeatures features;
    QString text;
    Qt::Alignment textAlignment;
    QColor textColor;
    int lineWidth;
    int midLineWidth;

    QStyleOptionGroupBox();
    QStyleOptionGroupBox(const QStyleOptionGroupBox &amp;other) : QStyleOptionComplex(Version, Type) { *this = other; }
protected:
    QStyleOptionGroupBox(int version);
};

template &lt;typename T>
T qstyleoption_cast(const QStyleOption *opt)
{
    if (opt &amp;&amp; opt->version >= static_cast&lt;T>(0)->Version &amp;&amp; (opt->type == static_cast&lt;T>(0)->Type
        || int(static_cast&lt;T>(0)->Type) == QStyleOption::SO_Default
        || (int(static_cast&lt;T>(0)->Type) == QStyleOption::SO_Complex
            &amp;&amp; opt->type > QStyleOption::SO_Complex)))
        return static_cast&lt;T>(opt);
    return 0;
}

template &lt;typename T>
T qstyleoption_cast(QStyleOption *opt)
{
    if (opt &amp;&amp; opt->version >= static_cast&lt;T>(0)->Version &amp;&amp; (opt->type == static_cast&lt;T>(0)->Type
        || int(static_cast&lt;T>(0)->Type) == QStyleOption::SO_Default
        || (int(static_cast&lt;T>(0)->Type) == QStyleOption::SO_Complex
            &amp;&amp; opt->type > QStyleOption::SO_Complex)))
        return static_cast&lt;T>(opt);
    return 0;
}

// -------------------------- QStyleHintReturn -------------------------------
class Q_GUI_EXPORT QStyleHintReturn {
public:
    enum HintReturnType {
        SH_Default=0xf000, SH_Mask
    };

    enum { Type = SH_Default };
    enum { Version = 1 };

    QStyleHintReturn(int version = QStyleOption::Version, int type = SH_Default);
    ~QStyleHintReturn();

    int version;
    int type;
};

class Q_GUI_EXPORT QStyleHintReturnMask : public QStyleHintReturn {
public:
    enum { Type = SH_Mask };
    enum { Version = 1 };

    QStyleHintReturnMask();

    QRegion region;
};

template &lt;typename T>
T qstyleoption_cast(const QStyleHintReturn *hint)
{
    if (hint &amp;&amp; hint->version &lt;= static_cast&lt;T>(0)->Version &amp;&amp;
        (hint->type == static_cast&lt;T>(0)->Type || int(static_cast&lt;T>(0)->Type) == QStyleHintReturn::SH_Default))
        return static_cast&lt;T>(hint);
    return 0;
}

template &lt;typename T>
T qstyleoption_cast(QStyleHintReturn *hint)
{
    if (hint &amp;&amp; hint->version &lt;= static_cast&lt;T>(0)->Version &amp;&amp;
        (hint->type == static_cast&lt;T>(0)->Type || int(static_cast&lt;T>(0)->Type) == QStyleHintReturn::SH_Default))
        return static_cast&lt;T>(hint);
    return 0;
}

#if !defined(QT_NO_DEBUG_STREAM) &amp;&amp; !defined(QT_NO_DEBUG)
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug debug, const QStyleOption::OptionType &amp;optionType);
Q_GUI_EXPORT QDebug operator&lt;&lt;(QDebug debug, const QStyleOption &amp;option);
#endif

#endif // QSTYLEOPTION_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstylepainter.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSTYLEPAINTER_H
#define QSTYLEPAINTER_H

#include &lt;QtGui/qpainter.h>
#include &lt;QtGui/qstyle.h>
#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

class QStylePainter : public QPainter
{
public:
    inline QStylePainter() : QPainter(), widget(0), wstyle(0) {}
    inline explicit QStylePainter(QWidget *w) { begin(w, w); }
    inline QStylePainter(QPaintDevice *pd, QWidget *w) { begin(pd, w); }
    inline bool begin(QWidget *w) { return begin(w, w); }
    inline bool begin(QPaintDevice *pd, QWidget *w) {
        Q_ASSERT_X(w, "QStylePainter::QStylePainter", "Widget must be non-zero");
        widget = w;
        wstyle = w->style();
        return QPainter::begin(pd);
    };
    inline void drawPrimitive(QStyle::PrimitiveElement pe, const QStyleOption &amp;opt);
    inline void drawControl(QStyle::ControlElement ce, const QStyleOption &amp;opt);
    inline void drawComplexControl(QStyle::ComplexControl cc, const QStyleOptionComplex &amp;opt);
    inline void drawItemText(const QRect &amp;r, int flags, const QPalette &amp;pal, bool enabled,
                             const QString &amp;text, QPalette::ColorRole textRole = QPalette::NoRole);
    inline void drawItemPixmap(const QRect &amp;r, int flags, const QPixmap &amp;pixmap);
    inline QStyle *style() const { return wstyle; }

private:
    QWidget *widget;
    QStyle *wstyle;
};

void QStylePainter::drawPrimitive(QStyle::PrimitiveElement pe, const QStyleOption &amp;opt)
{
    wstyle->drawPrimitive(pe, &amp;opt, this, widget);
}

void QStylePainter::drawControl(QStyle::ControlElement ce, const QStyleOption &amp;opt)
{
    wstyle->drawControl(ce, &amp;opt, this, widget);
}

void QStylePainter::drawComplexControl(QStyle::ComplexControl cc, const QStyleOptionComplex &amp;opt)
{
    wstyle->drawComplexControl(cc, &amp;opt, this, widget);
}

void QStylePainter::drawItemText(const QRect &amp;r, int flags, const QPalette &amp;pal, bool enabled,
                                 const QString &amp;text, QPalette::ColorRole textRole)
{
    wstyle->drawItemText(this, r, flags, pal, enabled, text, textRole);
}

void QStylePainter::drawItemPixmap(const QRect &amp;r, int flags, const QPixmap &amp;pixmap)
{
    wstyle->drawItemPixmap(this, r, flags, pixmap);
}

#endif // QSTYLEPAINTER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qstyleplugin.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSTYLEPLUGIN_H
#define QSTYLEPLUGIN_H

#include &lt;QtCore/qplugin.h>
#include &lt;QtCore/qfactoryinterface.h>

QT_MODULE(Gui)

class QStyle;

struct Q_GUI_EXPORT QStyleFactoryInterface : public QFactoryInterface
{
    virtual QStyle *create(const QString &amp;key) = 0;
};

#define QStyleFactoryInterface_iid "com.trolltech.Qt.QStyleFactoryInterface"
Q_DECLARE_INTERFACE(QStyleFactoryInterface, QStyleFactoryInterface_iid)

class Q_GUI_EXPORT QStylePlugin : public QObject, public QStyleFactoryInterface
{
    Q_OBJECT
    Q_INTERFACES(QStyleFactoryInterface:QFactoryInterface)
public:
    explicit QStylePlugin(QObject *parent = 0);
    ~QStylePlugin();

    virtual QStringList keys() const = 0;
    virtual QStyle *create(const QString &amp;key) = 0;
};

#endif // QSTYLEPLUGIN_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qsyntaxhighlighter.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QSYNTAXHIGHLIGHTER_H
#define QSYNTAXHIGHLIGHTER_H

#include &lt;QtCore/qglobal.h>

#ifndef QT_NO_SYNTAXHIGHLIGHTER

#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qtextobject.h>

QT_MODULE(Gui)

class QTextDocument;
class QSyntaxHighlighterPrivate;
class QTextCharFormat;
class QFont;
class QColor;
class QTextBlockUserData;
class QTextEdit;

class Q_GUI_EXPORT QSyntaxHighlighter : public QObject
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QSyntaxHighlighter)
public:
    QSyntaxHighlighter(QObject *parent);
    QSyntaxHighlighter(QTextDocument *parent);
    QSyntaxHighlighter(QTextEdit *parent);
    virtual ~QSyntaxHighlighter();

    void setDocument(QTextDocument *doc);
    QTextDocument *document() const;

protected:
    virtual void highlightBlock(const QString &amp;text) = 0;

    void setFormat(int start, int count, const QTextCharFormat &amp;format);
    void setFormat(int start, int count, const QColor &amp;color);
    void setFormat(int start, int count, const QFont &amp;font);
    QTextCharFormat format(int pos) const;

    int previousBlockState() const;
    int currentBlockState() const;
    void setCurrentBlockState(int newState);

    void setCurrentBlockUserData(QTextBlockUserData *data);
    QTextBlockUserData *currentBlockUserData() const;

private:
    Q_DISABLE_COPY(QSyntaxHighlighter)
    Q_PRIVATE_SLOT(d_func(), void reformatBlocks(int from, int charsRemoved, int charsAdded))
    Q_PRIVATE_SLOT(d_func(), void reformatDocument())
};

#endif // QT_NO_SYNTAXHIGHLIGHTER
#endif // QSYNTAXHIGHLIGHTER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtabbar.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTABBAR_H
#define QTABBAR_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

#ifndef QT_NO_TABBAR

class QIcon;
class QTabBarPrivate;

class Q_GUI_EXPORT QTabBar: public QWidget
{
    Q_OBJECT

    Q_ENUMS(Shape)
    Q_PROPERTY(Shape shape READ shape WRITE setShape)
    Q_PROPERTY(int currentIndex READ currentIndex WRITE setCurrentIndex NOTIFY currentChanged)
    Q_PROPERTY(int count READ count)
    Q_PROPERTY(bool drawBase READ drawBase WRITE setDrawBase)
    Q_PROPERTY(QSize iconSize READ iconSize WRITE setIconSize)

public:
    explicit QTabBar(QWidget* parent=0);
    ~QTabBar();

    enum Shape { RoundedNorth, RoundedSouth, RoundedWest, RoundedEast,
                 TriangularNorth, TriangularSouth, TriangularWest, TriangularEast
#if defined(QT3_SUPPORT) &amp;&amp; !defined(Q_MOC_RUN)
                , RoundedAbove = RoundedNorth, RoundedBelow = RoundedSouth,
                TriangularAbove = TriangularNorth, TriangularBelow = TriangularSouth
#endif
    };

    Shape shape() const;
    void setShape(Shape shape);

    int addTab(const QString &amp;text);
    int addTab(const QIcon &amp;icon, const QString &amp;text);

    int insertTab(int index, const QString &amp;text);
    int insertTab(int index, const QIcon&amp;icon, const QString &amp;text);

    void removeTab(int index);

    bool isTabEnabled(int index) const;
    void setTabEnabled(int index, bool);

    QString tabText(int index) const;
    void setTabText(int index, const QString &amp;text);

    QColor tabTextColor(int index) const;
    void setTabTextColor(int index, const QColor &amp;color);
    
    QIcon tabIcon(int index) const;
    void setTabIcon(int index, const QIcon &amp;icon);

#ifndef QT_NO_TOOLTIP
    void setTabToolTip(int index, const QString &amp;tip);
    QString tabToolTip(int index) const;
#endif

#ifndef QT_NO_WHATSTHIS
    void setTabWhatsThis(int index, const QString &amp;text);
    QString tabWhatsThis(int index) const;
#endif

    void setTabData(int index, const QVariant &amp;data);
    QVariant tabData(int index) const;

    QRect tabRect(int index) const;

    int currentIndex() const;
    int count() const;

    QSize sizeHint() const;
    QSize minimumSizeHint() const;

    void setDrawBase(bool drawTheBase);
    bool drawBase() const;

    QSize iconSize() const;
    void setIconSize(const QSize &amp;size);

public Q_SLOTS:
    void setCurrentIndex(int index);

Q_SIGNALS:
    void currentChanged(int index);

protected:
    virtual QSize tabSizeHint(int index) const;
    virtual void tabInserted(int index);
    virtual void tabRemoved(int index);
    virtual void tabLayoutChange();

    bool event(QEvent *);
    void resizeEvent(QResizeEvent *);
    void showEvent(QShowEvent *);
    void paintEvent(QPaintEvent *);
    void mousePressEvent (QMouseEvent *);
    void mouseMoveEvent (QMouseEvent *);
    void mouseReleaseEvent (QMouseEvent *);
    void keyPressEvent(QKeyEvent *);
    void changeEvent(QEvent *);

#ifdef QT3_SUPPORT
public Q_SLOTS:
    QT_MOC_COMPAT void setCurrentTab(int index) { setCurrentIndex(index); }
Q_SIGNALS:
    QT_MOC_COMPAT void selected(int);
#endif

    friend class QAccessibleTabBar;
private:
    Q_DISABLE_COPY(QTabBar)
    Q_DECLARE_PRIVATE(QTabBar)
    Q_PRIVATE_SLOT(d_func(), void scrollTabs())
};

#endif // QT_NO_TABBAR

#endif // QTABBAR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtableview.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTABLEVIEW_H
#define QTABLEVIEW_H

#include &lt;QtGui/qabstractitemview.h>

QT_MODULE(Gui)

#ifndef QT_NO_TABLEVIEW

class QHeaderView;
class QTableViewPrivate;

class Q_GUI_EXPORT QTableView : public QAbstractItemView
{
    Q_OBJECT
    Q_PROPERTY(bool showGrid READ showGrid WRITE setShowGrid)
    Q_PROPERTY(Qt::PenStyle gridStyle READ gridStyle WRITE setGridStyle)

public:
    explicit QTableView(QWidget *parent = 0);
    ~QTableView();

    void setModel(QAbstractItemModel *model);
    void setRootIndex(const QModelIndex &amp;index);
    void setSelectionModel(QItemSelectionModel *selectionModel);

    QHeaderView *horizontalHeader() const;
    QHeaderView *verticalHeader() const;
    void setHorizontalHeader(QHeaderView *header);
    void setVerticalHeader(QHeaderView *header);

    int rowViewportPosition(int row) const;
    int rowAt(int y) const;

    void setRowHeight(int row, int height);
    int rowHeight(int row) const;

    int columnViewportPosition(int column) const;
    int columnAt(int x) const;

    void setColumnWidth(int column, int width);
    int columnWidth(int column) const;

    bool isRowHidden(int row) const;
    void setRowHidden(int row, bool hide);

    bool isColumnHidden(int column) const;
    void setColumnHidden(int column, bool hide);

    bool showGrid() const;

    Qt::PenStyle gridStyle() const;
    void setGridStyle(Qt::PenStyle style);

    QRect visualRect(const QModelIndex &amp;index) const;
    void scrollTo(const QModelIndex &amp;index, ScrollHint hint = EnsureVisible);
    QModelIndex indexAt(const QPoint &amp;p) const;

public Q_SLOTS:
    void selectRow(int row);
    void selectColumn(int column);
    void hideRow(int row);
    void hideColumn(int column);
    void showRow(int row);
    void showColumn(int column);
    void resizeRowToContents(int row);
    void resizeRowsToContents();
    void resizeColumnToContents(int column);
    void resizeColumnsToContents();
    void sortByColumn(int column);
    void setShowGrid(bool show);

protected Q_SLOTS:
    void rowMoved(int row, int oldIndex, int newIndex);
    void columnMoved(int column, int oldIndex, int newIndex);
    void rowResized(int row, int oldHeight, int newHeight);
    void columnResized(int column, int oldWidth, int newWidth);
    void rowCountChanged(int oldCount, int newCount);
    void columnCountChanged(int oldCount, int newCount);

protected:
    QTableView(QTableViewPrivate &amp;, QWidget *parent);
    void scrollContentsBy(int dx, int dy);

    QStyleOptionViewItem viewOptions() const;
    void paintEvent(QPaintEvent *e);

    void timerEvent(QTimerEvent *event);

    int horizontalOffset() const;
    int verticalOffset() const;
    QModelIndex moveCursor(CursorAction cursorAction, Qt::KeyboardModifiers modifiers);

    void setSelection(const QRect &amp;rect, QItemSelectionModel::SelectionFlags command);
    QRegion visualRegionForSelection(const QItemSelection &amp;selection) const;
    QModelIndexList selectedIndexes() const;

    void updateGeometries();

    int sizeHintForRow(int row) const;
    int sizeHintForColumn(int column) const;

    void verticalScrollbarAction(int action);
    void horizontalScrollbarAction(int action);

    bool isIndexHidden(const QModelIndex &amp;index) const;

private:
    Q_DECLARE_PRIVATE(QTableView)
    Q_DISABLE_COPY(QTableView)
};

#endif // QT_NO_TABLEVIEW

#endif // QTABLEVIEW_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtablewidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTABLEWIDGET_H
#define QTABLEWIDGET_H

#include &lt;QtGui/qtableview.h>
#include &lt;QtCore/qvariant.h>
#include &lt;QtCore/qvector.h>

QT_MODULE(Gui)

#ifndef QT_NO_TABLEWIDGET

class Q_GUI_EXPORT QTableWidgetSelectionRange
{
public:
    QTableWidgetSelectionRange();
    QTableWidgetSelectionRange(int top, int left, int bottom, int right);
    QTableWidgetSelectionRange(const QTableWidgetSelectionRange &amp;other);
    ~QTableWidgetSelectionRange();

    inline int topRow() const { return top; }
    inline int bottomRow() const { return bottom; }
    inline int leftColumn() const { return left; }
    inline int rightColumn() const { return right; }
    inline int rowCount() const { return bottom - top + 1; }
    inline int columnCount() const { return right - left + 1; }

private:
    int top, left, bottom, right;
};

class QTableWidget;
class QTableModel;
class QWidgetItemData;

class Q_GUI_EXPORT QTableWidgetItem
{
    friend class QTableWidget;
    friend class QTableModel;
public:
    enum { Type = 0, UserType = 1000 };
    QTableWidgetItem(int type = Type);
    explicit QTableWidgetItem(const QString &amp;text, int type = Type);
    QTableWidgetItem(const QTableWidgetItem &amp;other);
    virtual ~QTableWidgetItem();

    virtual QTableWidgetItem *clone() const;

    inline QTableWidget *tableWidget() const { return view; }

    inline Qt::ItemFlags flags() const { return itemFlags; }
    inline void setFlags(Qt::ItemFlags flags);

    inline QString text() const
        { return data(Qt::DisplayRole).toString(); }
    inline void setText(const QString &amp;text);

    inline QIcon icon() const
        { return qvariant_cast&lt;QIcon>(data(Qt::DecorationRole)); }
    inline void setIcon(const QIcon &amp;icon);

    inline QString statusTip() const
        { return data(Qt::StatusTipRole).toString(); }
    inline void setStatusTip(const QString &amp;statusTip);

#ifndef QT_NO_TOOLTIP
    inline QString toolTip() const
        { return data(Qt::ToolTipRole).toString(); }
    inline void setToolTip(const QString &amp;toolTip);
#endif

#ifndef QT_NO_WHATSTHIS
    inline QString whatsThis() const
        { return data(Qt::WhatsThisRole).toString(); }
    inline void setWhatsThis(const QString &amp;whatsThis);
#endif

    inline QFont font() const
        { return qvariant_cast&lt;QFont>(data(Qt::FontRole)); }
    inline void setFont(const QFont &amp;font);

    inline int textAlignment() const
        { return data(Qt::TextAlignmentRole).toInt(); }
    inline void setTextAlignment(int alignment)
        { setData(Qt::TextAlignmentRole, alignment); }

    inline QColor backgroundColor() const
        { return qvariant_cast&lt;QColor>(data(Qt::BackgroundColorRole)); }
    inline void setBackgroundColor(const QColor &amp;color)
        { setData(Qt::BackgroundColorRole, color); }

    inline QColor textColor() const
        { return qvariant_cast&lt;QColor>(data(Qt::TextColorRole)); }
    inline void setTextColor(const QColor &amp;color)
        { setData(Qt::TextColorRole, color); }

    inline Qt::CheckState checkState() const
        { return static_cast&lt;Qt::CheckState>(data(Qt::CheckStateRole).toInt()); }
    inline void setCheckState(Qt::CheckState state)
        { setData(Qt::CheckStateRole, state); }

    inline QSize sizeHint() const
        { return qvariant_cast&lt;QSize>(data(Qt::SizeHintRole)); }
    inline void setSizeHint(const QSize &amp;size)
        { setData(Qt::SizeHintRole, size); }

    virtual QVariant data(int role) const;
    virtual void setData(int role, const QVariant &amp;value);

    virtual bool operator&lt;(const QTableWidgetItem &amp;other) const;

#ifndef QT_NO_DATASTREAM
    virtual void read(QDataStream &amp;in);
    virtual void write(QDataStream &amp;out) const;
#endif
    QTableWidgetItem &amp;operator=(const QTableWidgetItem &amp;other);

    inline int type() const { return rtti; }

private:
    int rtti;
    QVector&lt;QWidgetItemData> values;
    QTableWidget *view;
    QTableModel *model;
    Qt::ItemFlags itemFlags;
};

inline void QTableWidgetItem::setFlags(Qt::ItemFlags aflags)
{ itemFlags = aflags; }

inline void QTableWidgetItem::setText(const QString &amp;atext)
{ setData(Qt::DisplayRole, atext); }

inline void QTableWidgetItem::setIcon(const QIcon &amp;aicon)
{ setData(Qt::DecorationRole, aicon); }

inline void QTableWidgetItem::setStatusTip(const QString &amp;astatusTip)
{ setData(Qt::StatusTipRole, astatusTip); }

#ifndef QT_NO_TOOLTIP
inline void QTableWidgetItem::setToolTip(const QString &amp;atoolTip)
{ setData(Qt::ToolTipRole, atoolTip); }
#endif

#ifndef QT_NO_WHATSTHIS
inline void QTableWidgetItem::setWhatsThis(const QString &amp;awhatsThis)
{ setData(Qt::WhatsThisRole, awhatsThis); }
#endif

inline void QTableWidgetItem::setFont(const QFont &amp;afont)
{ setData(Qt::FontRole, afont); }

#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;in, QTableWidgetItem &amp;item);
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;out, const QTableWidgetItem &amp;item);
#endif

class QTableWidgetPrivate;

class Q_GUI_EXPORT QTableWidget : public QTableView
{
    Q_OBJECT
    Q_PROPERTY(int rowCount READ rowCount WRITE setRowCount)
    Q_PROPERTY(int columnCount READ columnCount WRITE setColumnCount)
    Q_PROPERTY(bool sortingEnabled READ isSortingEnabled WRITE setSortingEnabled)

    friend class QTableModel;
public:
    explicit QTableWidget(QWidget *parent = 0);
    QTableWidget(int rows, int columns, QWidget *parent = 0);
    ~QTableWidget();

    void setRowCount(int rows);
    int rowCount() const;

    void setColumnCount(int columns);
    int columnCount() const;

    int row(const QTableWidgetItem *item) const;
    int column(const QTableWidgetItem *item) const;

    QTableWidgetItem *item(int row, int column) const;
    void setItem(int row, int column, QTableWidgetItem *item);
    QTableWidgetItem *takeItem(int row, int column);

    QTableWidgetItem *verticalHeaderItem(int row) const;
    void setVerticalHeaderItem(int row, QTableWidgetItem *item);
    QTableWidgetItem *takeVerticalHeaderItem(int row);

    QTableWidgetItem *horizontalHeaderItem(int column) const;
    void setHorizontalHeaderItem(int column, QTableWidgetItem *item);
    QTableWidgetItem *takeHorizontalHeaderItem(int column);
    void setVerticalHeaderLabels(const QStringList &amp;labels);
    void setHorizontalHeaderLabels(const QStringList &amp;labels);

    int currentRow() const;
    int currentColumn() const;
    QTableWidgetItem *currentItem() const;
    void setCurrentItem(QTableWidgetItem *item);
    void setCurrentCell(int row, int column);

    void sortItems(int column, Qt::SortOrder order = Qt::AscendingOrder);
    void setSortingEnabled(bool enable);
    bool isSortingEnabled() const;

    void editItem(QTableWidgetItem *item);
    void openPersistentEditor(QTableWidgetItem *item);
    void closePersistentEditor(QTableWidgetItem *item);

    QWidget *cellWidget(int row, int column) const;
    void setCellWidget(int row, int column, QWidget *widget);

    bool isItemSelected(const QTableWidgetItem *item) const;
    void setItemSelected(const QTableWidgetItem *item, bool select);
    void setRangeSelected(const QTableWidgetSelectionRange &amp;range, bool select);

    QList&lt;QTableWidgetSelectionRange> selectedRanges() const;
    QList&lt;QTableWidgetItem*> selectedItems();
    QList&lt;QTableWidgetItem*> findItems(const QString &amp;text, Qt::MatchFlags flags) const;

    int visualRow(int logicalRow) const;
    int visualColumn(int logicalColumn) const;

    QTableWidgetItem *itemAt(const QPoint &amp;p) const;
    inline QTableWidgetItem *itemAt(int x, int y) const;
    QRect visualItemRect(const QTableWidgetItem *item) const;

    const QTableWidgetItem *itemPrototype() const;
    void setItemPrototype(const QTableWidgetItem *item);

public Q_SLOTS:
    void scrollToItem(const QTableWidgetItem *item, QAbstractItemView::ScrollHint hint = EnsureVisible);
    void insertRow(int row);
    void insertColumn(int column);
    void removeRow(int row);
    void removeColumn(int column);
    void clear();

Q_SIGNALS:
    void itemPressed(QTableWidgetItem *item);
    void itemClicked(QTableWidgetItem *item);
    void itemDoubleClicked(QTableWidgetItem *item);

    void itemActivated(QTableWidgetItem *item);
    void itemEntered(QTableWidgetItem *item);
    void itemChanged(QTableWidgetItem *item);

    void currentItemChanged(QTableWidgetItem *current, QTableWidgetItem *previous);
    void itemSelectionChanged();

    void cellPressed(int row, int column);
    void cellClicked(int row, int column);
    void cellDoubleClicked(int row, int column);

    void cellActivated(int row, int column);
    void cellEntered(int row, int column);
    void cellChanged(int row, int column);

    void currentCellChanged(int currentRow, int currentColumn, int previousRow, int previousColumn);

protected:
    bool event(QEvent *e);
    virtual QStringList mimeTypes() const;
    virtual QMimeData *mimeData(const QList&lt;QTableWidgetItem*> items) const;
    virtual bool dropMimeData(int row, int column, const QMimeData *data, Qt::DropAction action);
    virtual Qt::DropActions supportedDropActions() const;
    QList&lt;QTableWidgetItem*> items(const QMimeData *data) const;

    QModelIndex indexFromItem(QTableWidgetItem *item) const;
    QTableWidgetItem *itemFromIndex(const QModelIndex &amp;index) const;

private:
    void setModel(QAbstractItemModel *model);

    Q_DECLARE_PRIVATE(QTableWidget)
    Q_DISABLE_COPY(QTableWidget)

    Q_PRIVATE_SLOT(d_func(), void emitItemPressed(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemClicked(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemDoubleClicked(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemActivated(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemEntered(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemChanged(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitCurrentItemChanged(const QModelIndex &amp;previous, const QModelIndex &amp;current))
};

inline QTableWidgetItem *QTableWidget::itemAt(int ax, int ay) const
{ return itemAt(QPoint(ax, ay)); }

#endif // QT_NO_TABLEWIDGET

#endif // QTABLEWIDGET_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtabwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTABWIDGET_H
#define QTABWIDGET_H

#include &lt;QtGui/qwidget.h>
#include &lt;QtGui/qicon.h>

QT_MODULE(Gui)

#ifndef QT_NO_TABWIDGET

class QTabBar;
class QTabWidgetPrivate;

class Q_GUI_EXPORT QTabWidget : public QWidget
{
    Q_OBJECT
    Q_ENUMS(TabPosition TabShape)
    Q_PROPERTY(TabPosition tabPosition READ tabPosition WRITE setTabPosition)
    Q_PROPERTY(TabShape tabShape READ tabShape WRITE setTabShape)
    Q_PROPERTY(int currentIndex READ currentIndex WRITE setCurrentIndex NOTIFY currentChanged)
    Q_PROPERTY(int count READ count)

public:
    explicit QTabWidget(QWidget *parent = 0);
    ~QTabWidget();

    int addTab(QWidget *widget, const QString &amp;);
    int addTab(QWidget *widget, const QIcon&amp; icon, const QString &amp;label);

    int insertTab(int index, QWidget *widget, const QString &amp;);
    int insertTab(int index, QWidget *widget, const QIcon&amp; icon, const QString &amp;label);

    void removeTab(int index);

    bool isTabEnabled(int index) const;
    void setTabEnabled(int index, bool);

    QString tabText(int index) const;
    void setTabText(int index, const QString &amp;);

    QIcon tabIcon(int index) const;
    void setTabIcon(int index, const QIcon &amp; icon);

#ifndef QT_NO_TOOLTIP
    void setTabToolTip(int index, const QString &amp; tip);
    QString tabToolTip(int index) const;
#endif

#ifndef QT_NO_WHATSTHIS
    void setTabWhatsThis(int index, const QString &amp;text);
    QString tabWhatsThis(int index) const;
#endif

    int currentIndex() const;
    QWidget *currentWidget() const;
    QWidget *widget(int index) const;
    int indexOf(QWidget *widget) const;
    int count() const;

    enum TabPosition { North, South, West, East
#if defined(QT3_SUPPORT) &amp;&amp; !defined(Q_MOC_RUN)
        , Top = North, Bottom = South
#endif
    };
    TabPosition tabPosition() const;
    void setTabPosition(TabPosition);

    enum TabShape { Rounded, Triangular };
    TabShape tabShape() const;
    void setTabShape(TabShape s);

    QSize sizeHint() const;
    QSize minimumSizeHint() const;

    void setCornerWidget(QWidget * w, Qt::Corner corner = Qt::TopRightCorner);
    QWidget * cornerWidget(Qt::Corner corner = Qt::TopRightCorner) const;

public Q_SLOTS:
    void setCurrentIndex(int index);
    void setCurrentWidget(QWidget *widget);

Q_SIGNALS:
    void currentChanged(int index);

protected:
    virtual void tabInserted(int index);
    virtual void tabRemoved(int index);

    void showEvent(QShowEvent *);
    void resizeEvent(QResizeEvent *);
    void keyPressEvent(QKeyEvent *);
    void paintEvent(QPaintEvent *);
    void setTabBar(QTabBar *);
    QTabBar* tabBar() const;
    void changeEvent(QEvent *);
    bool event(QEvent *);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QTabWidget(QWidget *parent, const char *name, Qt::WFlags f = 0);

    inline QT3_SUPPORT void insertTab(QWidget * w, const QString &amp;s, int index = -1) { insertTab(index, w, s); }
    inline QT3_SUPPORT void insertTab(QWidget *child, const QIcon&amp; icon,
                                    const QString &amp;label, int index = -1) { insertTab(index, child, icon, label); }

    inline QT3_SUPPORT void changeTab(QWidget *w, const QString &amp;s) {setTabText(indexOf(w), s); }
    inline QT3_SUPPORT void changeTab(QWidget *w, const QIcon&amp; icon,
                                    const QString &amp;label) { int idx = indexOf(w); setTabText(idx, label); setTabIcon(idx, icon); }

    inline QT3_SUPPORT bool isTabEnabled( QWidget *w) const {return isTabEnabled(indexOf(w)); }
    inline QT3_SUPPORT void setTabEnabled(QWidget *w, bool b) { setTabEnabled(indexOf(w), b); }

    inline QT3_SUPPORT QString tabLabel(QWidget *w) const  {return tabText(indexOf(w)); }
    inline QT3_SUPPORT void setTabLabel(QWidget *w, const QString &amp;l) { setTabText(indexOf(w), l); }

    inline QT3_SUPPORT QIcon tabIconSet(QWidget * w) const  {return tabIcon(indexOf(w)); }
    inline QT3_SUPPORT void setTabIconSet(QWidget * w, const QIcon &amp; icon) { setTabIcon(indexOf(w), icon); }

    inline QT3_SUPPORT void removeTabToolTip(QWidget * w) {setTabToolTip(indexOf(w), QString());}
    inline QT3_SUPPORT void setTabToolTip(QWidget * w, const QString &amp; tip) {setTabToolTip(indexOf(w), tip);}
    inline QT3_SUPPORT QString tabToolTip(QWidget * w) const { return tabToolTip(indexOf(w)); }

    inline QT3_SUPPORT QWidget * currentPage() const { return currentWidget(); }
    inline QT3_SUPPORT QWidget *page(int index) const { return widget(index); }
    inline QT3_SUPPORT QString label(int index) const { return tabText(index); }
    inline QT3_SUPPORT int currentPageIndex() const { return currentIndex(); }

    inline QT3_SUPPORT int margin() const { return 0; }
    inline QT3_SUPPORT void setMargin(int) {}

public Q_SLOTS:
    inline QT_MOC_COMPAT void setCurrentPage(int index) { setCurrentIndex(index); }
    inline QT_MOC_COMPAT void showPage(QWidget *w) { setCurrentIndex(indexOf(w)); }
    inline QT_MOC_COMPAT void removePage(QWidget *w) { removeTab(indexOf(w)); }

Q_SIGNALS:
    QT_MOC_COMPAT void currentChanged(QWidget *);
#endif // QT3_SUPPORT

private:
    Q_DECLARE_PRIVATE(QTabWidget)
    Q_DISABLE_COPY(QTabWidget)
    Q_PRIVATE_SLOT(d_func(), void showTab(int))
    Q_PRIVATE_SLOT(d_func(), void removeTab(int))

    void setUpLayout(bool = false);
    friend class Q3TabDialog;
};

#endif // QT_NO_TABWIDGET

#endif // QTABWIDGET_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextbrowser.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTEXTBROWSER_H
#define QTEXTBROWSER_H

#include &lt;QtGui/qtextedit.h>
#include &lt;QtCore/qurl.h>

QT_MODULE(Gui)

#ifndef QT_NO_TEXTBROWSER

class QTextBrowserPrivate;

class Q_GUI_EXPORT QTextBrowser : public QTextEdit
{
    Q_OBJECT

    Q_PROPERTY(QUrl source READ source WRITE setSource)
    Q_OVERRIDE(bool modified SCRIPTABLE false)
    Q_OVERRIDE(bool readOnly DESIGNABLE false SCRIPTABLE false)
    Q_OVERRIDE(bool undoRedoEnabled DESIGNABLE false SCRIPTABLE false)
    Q_PROPERTY(QStringList searchPaths READ searchPaths WRITE setSearchPaths)

public:
    explicit QTextBrowser(QWidget* parent = 0);
    virtual ~QTextBrowser();

    QUrl source() const;

    QStringList searchPaths() const;
    void setSearchPaths(const QStringList &amp;paths);

    virtual QVariant loadResource(int type, const QUrl &amp;name);

public Q_SLOTS:
    virtual void setSource(const QUrl &amp;name);
    virtual void backward();
    virtual void forward();
    virtual void home();
    virtual void reload();

Q_SIGNALS:
    void backwardAvailable(bool);
    void forwardAvailable(bool);
    void sourceChanged(const QUrl &amp;);
    void highlighted(const QUrl &amp;);
    void highlighted(const QString &amp;);
    void anchorClicked(const QUrl &amp;);

protected:
    bool event(QEvent *e);
    virtual void keyPressEvent(QKeyEvent *ev);
    virtual void mouseMoveEvent(QMouseEvent *ev);
    virtual void mousePressEvent(QMouseEvent *ev);
    virtual void mouseReleaseEvent(QMouseEvent *ev);
    virtual void focusOutEvent(QFocusEvent *ev);
    virtual bool focusNextPrevChild(bool next);
    virtual void paintEvent(QPaintEvent *e);

#if defined(QT3_SUPPORT)
public:
    QT3_SUPPORT_CONSTRUCTOR QTextBrowser(QWidget *parent, const char *name);
#endif

private:
    Q_DISABLE_COPY(QTextBrowser)
    Q_DECLARE_PRIVATE(QTextBrowser)
    Q_PRIVATE_SLOT(d_func(), void documentModified())
};

#endif // QT_NO_TEXTBROWSER

#endif // QTEXTBROWSER_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextcursor.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTEXTCURSOR_H
#define QTEXTCURSOR_H

#include &lt;QtCore/qstring.h>
#include &lt;QtCore/qshareddata.h>
#include &lt;QtGui/qtextformat.h>

QT_MODULE(Gui)

class QTextDocument;
class QTextCursorPrivate;
class QTextDocumentFragment;
class QTextCharFormat;
class QTextBlockFormat;
class QTextListFormat;
class QTextTableFormat;
class QTextFrameFormat;
class QTextImageFormat;
class QTextDocumentPrivate;
class QTextList;
class QTextTable;
class QTextFrame;
class QTextBlock;

class Q_GUI_EXPORT QTextCursor
{
public:
    QTextCursor();
    explicit QTextCursor(QTextDocument *document);
    QTextCursor(QTextDocumentPrivate *p, int pos);
    explicit QTextCursor(QTextFrame *frame);
    explicit QTextCursor(const QTextBlock &amp;block);
    explicit QTextCursor(QTextCursorPrivate *d);
    QTextCursor(const QTextCursor &amp;cursor);
    QTextCursor &amp;operator=(const QTextCursor &amp;other);
    ~QTextCursor();

    bool isNull() const;

    enum MoveMode {
        MoveAnchor,
        KeepAnchor
    };

    void setPosition(int pos, MoveMode mode = MoveAnchor);
    int position() const;

    int anchor() const;

    void insertText(const QString &amp;text);
    void insertText(const QString &amp;text, const QTextCharFormat &amp;format);

    enum MoveOperation {
        NoMove,

        Start,
        Up,
        StartOfLine,
        StartOfBlock,
        StartOfWord,
        PreviousBlock,
        PreviousCharacter,
        PreviousWord,
        Left,
        WordLeft,

        End,
        Down,
        EndOfLine,
        EndOfWord,
        EndOfBlock,
        NextBlock,
        NextCharacter,
        NextWord,
        Right,
        WordRight
    };

    bool movePosition(MoveOperation op, MoveMode = MoveAnchor, int n = 1);

    void deleteChar();
    void deletePreviousChar();

    enum SelectionType {
        WordUnderCursor,
        LineUnderCursor,
        BlockUnderCursor
    };
    void select(SelectionType selection);

    bool hasSelection() const;
    bool hasComplexSelection() const;
    void removeSelectedText();
    void clearSelection();
    int selectionStart() const;
    int selectionEnd() const;

    QString selectedText() const;
    QTextDocumentFragment selection() const;
    void selectedTableCells(int *firstRow, int *numRows, int *firstColumn, int *numColumns) const;

    QTextBlock block() const;

    QTextCharFormat charFormat() const;
    void setCharFormat(const QTextCharFormat &amp;format);
    void mergeCharFormat(const QTextCharFormat &amp;modifier);

    QTextBlockFormat blockFormat() const;
    void setBlockFormat(const QTextBlockFormat &amp;format);
    void mergeBlockFormat(const QTextBlockFormat &amp;modifier);

    QTextCharFormat blockCharFormat() const;
    void setBlockCharFormat(const QTextCharFormat &amp;format);
    void mergeBlockCharFormat(const QTextCharFormat &amp;modifier);

    bool atBlockStart() const;
    bool atBlockEnd() const;
    bool atStart() const;
    bool atEnd() const;

    void insertBlock();
    void insertBlock(const QTextBlockFormat &amp;format);
    void insertBlock(const QTextBlockFormat &amp;format, const QTextCharFormat &amp;charFormat);

    QTextList *insertList(const QTextListFormat &amp;format);
    QTextList *insertList(QTextListFormat::Style style);

    QTextList *createList(const QTextListFormat &amp;format);
    QTextList *createList(QTextListFormat::Style style);
    QTextList *currentList() const;

    QTextTable *insertTable(int rows, int cols, const QTextTableFormat &amp;format);
    QTextTable *insertTable(int rows, int cols);
    QTextTable *currentTable() const;

    QTextFrame *insertFrame(const QTextFrameFormat &amp;format);
    QTextFrame *currentFrame() const;

    void insertFragment(const QTextDocumentFragment &amp;fragment);

    void insertImage(const QTextImageFormat &amp;format);
    void insertImage(const QString &amp;name);

    void beginEditBlock();
    void joinPreviousEditBlock();
    void endEditBlock();

    bool operator!=(const QTextCursor &amp;rhs) const;
    bool operator&lt;(const QTextCursor &amp;rhs) const;
    bool operator&lt;=(const QTextCursor &amp;rhs) const;
    bool operator==(const QTextCursor &amp;rhs) const;
    bool operator>=(const QTextCursor &amp;rhs) const;
    bool operator>(const QTextCursor &amp;rhs) const;

    bool isCopyOf(const QTextCursor &amp;other) const;

private:
    QSharedDataPointer&lt;QTextCursorPrivate> d;
    friend class QTextDocumentFragmentPrivate;
    friend class QTextCopyHelper;
};

#endif // QTEXTCURSOR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextdocument.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTEXTDOCUMENT_H
#define QTEXTDOCUMENT_H

#include &lt;QtCore/qobject.h>
#include &lt;QtCore/qsize.h>
#include &lt;QtGui/qfont.h>

QT_MODULE(Gui)

class QTextFormatCollection;
class QTextListFormat;
class QRect;
class QPainter;
class QPrinter;
class QAbstractTextDocumentLayout;
class QPoint;
class QTextCursor;
class QTextObject;
class QTextFormat;
class QTextFrame;
class QTextBlock;
class QTextCodec;
class QUrl;
class QVariant;
class QRectF;

template&lt;typename T> class QVector;

namespace Qt
{
    enum HitTestAccuracy { ExactHit, FuzzyHit };
    enum WhiteSpaceMode {
        WhiteSpaceNormal,
        WhiteSpacePre,
        WhiteSpaceNoWrap,
        WhiteSpaceModeUndefined = -1
    };

    Q_GUI_EXPORT bool mightBeRichText(const QString&amp;);
    Q_GUI_EXPORT QString escape(const QString&amp; plain);
    Q_GUI_EXPORT QString convertFromPlainText(const QString &amp;plain, WhiteSpaceMode mode = WhiteSpacePre);

#ifndef QT_NO_TEXTCODEC
    Q_GUI_EXPORT QTextCodec *codecForHtml(const QByteArray &amp;ba);
#endif
}

class Q_GUI_EXPORT QAbstractUndoItem
{
public:
    virtual ~QAbstractUndoItem() = 0;
    virtual void undo() = 0;
    virtual void redo() = 0;
};

inline QAbstractUndoItem::~QAbstractUndoItem()
{
}

class QTextDocumentPrivate;

class Q_GUI_EXPORT QTextDocument : public QObject
{
    Q_OBJECT

    Q_PROPERTY(bool undoRedoEnabled READ isUndoRedoEnabled WRITE setUndoRedoEnabled)
    Q_PROPERTY(bool modified READ isModified WRITE setModified DESIGNABLE false)
    Q_PROPERTY(QSizeF pageSize READ pageSize WRITE setPageSize)
    Q_PROPERTY(QFont defaultFont READ defaultFont WRITE setDefaultFont)
    Q_PROPERTY(bool useDesignMetrics READ useDesignMetrics WRITE setUseDesignMetrics)

public:
    explicit QTextDocument(QObject *parent = 0);
    explicit QTextDocument(const QString &amp;text, QObject *parent = 0);
    ~QTextDocument();

    QTextDocument *clone(QObject *parent = 0) const;

    bool isEmpty() const;
    virtual void clear();

    void setUndoRedoEnabled(bool enable);
    bool isUndoRedoEnabled() const;

    bool isUndoAvailable() const;
    bool isRedoAvailable() const;

    void setDocumentLayout(QAbstractTextDocumentLayout *layout);
    QAbstractTextDocumentLayout *documentLayout() const;

    enum MetaInformation {
        DocumentTitle
    };
    void setMetaInformation(MetaInformation info, const QString &amp;);
    QString metaInformation(MetaInformation info) const;

    QString toHtml(const QByteArray &amp;encoding = QByteArray()) const;
    void setHtml(const QString &amp;html);

    QString toPlainText() const;
    void setPlainText(const QString &amp;text);

    enum FindFlag
    {
        FindBackward        = 0x00001,
        FindCaseSensitively = 0x00002,
        FindWholeWords      = 0x00004
    };
    Q_DECLARE_FLAGS(FindFlags, FindFlag)

    QTextCursor find(const QString &amp;expr, int from = 0, FindFlags options = 0) const;
    QTextCursor find(const QString &amp;expr, const QTextCursor &amp;from, FindFlags options = 0) const;

    QTextFrame *frameAt(int pos) const;
    QTextFrame *rootFrame() const;

    QTextObject *object(int objectIndex) const;
    QTextObject *objectForFormat(const QTextFormat &amp;) const;

    QTextBlock findBlock(int pos) const;
    QTextBlock begin() const;
    QTextBlock end() const;

    void setPageSize(const QSizeF &amp;size);
    QSizeF pageSize() const;

    void setDefaultFont(const QFont &amp;font);
    QFont defaultFont() const;

    int pageCount() const;

    bool isModified() const;

#ifndef QT_NO_PRINTER
    void print(QPrinter *printer) const;
#endif
    
    enum ResourceType {
        HtmlResource  = 1,
        ImageResource = 2,

        UserResource  = 100
    };

    QVariant resource(int type, const QUrl &amp;name) const;
    void addResource(int type, const QUrl &amp;name, const QVariant &amp;resource);

    QVector&lt;QTextFormat> allFormats() const;

    void markContentsDirty(int from, int length);

    void setUseDesignMetrics(bool b);
    bool useDesignMetrics() const;

Q_SIGNALS:
    void contentsChange(int from, int charsRemoves, int charsAdded);
    void contentsChanged();
    void undoAvailable(bool);
    void redoAvailable(bool);
    void modificationChanged(bool m);
    void cursorPositionChanged(const QTextCursor &amp;cursor);

public Q_SLOTS:
    void undo();
    void redo();
    void appendUndoItem(QAbstractUndoItem *);
    void setModified(bool m = true);

protected:
    virtual QTextObject *createObject(const QTextFormat &amp;f);
    virtual QVariant loadResource(int type, const QUrl &amp;name);

public:
    QTextDocumentPrivate *docHandle() const;
private:
    Q_DISABLE_COPY(QTextDocument)
    Q_DECLARE_PRIVATE(QTextDocument)
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QTextDocument::FindFlags)

#endif // QTEXTDOCUMENT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextdocumentfragment.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTEXTDOCUMENTFRAGMENT_H
#define QTEXTDOCUMENTFRAGMENT_H

#include &lt;QtCore/qstring.h>

QT_MODULE(Gui)

class QTextStream;
class QTextDocument;
class QTextDocumentFragmentPrivate;
class QTextCursor;

class Q_GUI_EXPORT QTextDocumentFragment
{
public:
    QTextDocumentFragment();
    explicit QTextDocumentFragment(const QTextDocument *document);
    explicit QTextDocumentFragment(const QTextCursor &amp;range);
    QTextDocumentFragment(const QTextDocumentFragment &amp;rhs);
    QTextDocumentFragment &amp;operator=(const QTextDocumentFragment &amp;rhs);
    ~QTextDocumentFragment();

    bool isEmpty() const;

    QString toPlainText() const;
    QString toHtml() const;

    static QTextDocumentFragment fromPlainText(const QString &amp;plainText);
    static QTextDocumentFragment fromHtml(const QString &amp;html);

private:
    QTextDocumentFragmentPrivate *d;
    friend class QTextCursor;
};

#endif // QTEXTDOCUMENTFRAGMENT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextedit.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTEXTEDIT_H
#define QTEXTEDIT_H

#include &lt;QtGui/qabstractscrollarea.h>
#include &lt;QtGui/qtextdocument.h>
#include &lt;QtGui/qtextoption.h>

#ifndef QT_NO_TEXTEDIT

#ifdef QT3_SUPPORT
#include &lt;QtGui/qtextcursor.h>
#include &lt;QtGui/qtextformat.h>
#include &lt;QtGui/qtextobject.h>
#include &lt;QtGui/qtextlayout.h>
#endif

QT_MODULE(Gui)

class QTextCharFormat;
class QStyleSheet;
class QTextDocument;
class QTextCursor;
class QTextBlockFormat;
class QMenu;
class QTextEditPrivate;
class QMimeData;

class Q_GUI_EXPORT QTextEdit : public QAbstractScrollArea
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QTextEdit)
    Q_FLAGS(AutoFormatting)
    Q_ENUMS(LineWrapMode)
    Q_PROPERTY(AutoFormatting autoFormatting READ autoFormatting WRITE setAutoFormatting)
    Q_PROPERTY(bool tabChangesFocus READ tabChangesFocus WRITE setTabChangesFocus)
    Q_PROPERTY(QString documentTitle READ documentTitle WRITE setDocumentTitle)
    Q_PROPERTY(bool undoRedoEnabled READ isUndoRedoEnabled WRITE setUndoRedoEnabled)
    Q_PROPERTY(LineWrapMode lineWrapMode READ lineWrapMode WRITE setLineWrapMode)
    QDOC_PROPERTY(QTextOption::WrapMode wordWrapMode READ wordWrapMode WRITE setWordWrapMode)
    Q_PROPERTY(int lineWrapColumnOrWidth READ lineWrapColumnOrWidth WRITE setLineWrapColumnOrWidth)
    Q_PROPERTY(bool readOnly READ isReadOnly WRITE setReadOnly)
    Q_PROPERTY(QString html READ toHtml WRITE setHtml NOTIFY textChanged USER true)
    Q_PROPERTY(bool overwriteMode READ overwriteMode WRITE setOverwriteMode)
    Q_PROPERTY(int tabStopWidth READ tabStopWidth WRITE setTabStopWidth)
    Q_PROPERTY(bool acceptRichText READ acceptRichText WRITE setAcceptRichText)
public:
    enum LineWrapMode {
        NoWrap,
        WidgetWidth,
        FixedPixelWidth,
        FixedColumnWidth
    };

    enum AutoFormattingFlag {
        AutoNone = 0,
        AutoBulletList = 0x00000001,
        AutoAll = 0xffffffff
    };

    Q_DECLARE_FLAGS(AutoFormatting, AutoFormattingFlag)

    enum CursorAction {
        MoveBackward,
        MoveForward,
        MoveWordBackward,
        MoveWordForward,
        MoveUp,
        MoveDown,
        MoveLineStart,
        MoveLineEnd,
        MoveHome,
        MoveEnd,
        MovePageUp,
        MovePageDown
#if defined(QT3_SUPPORT) &amp;&amp; !defined(Q_MOC_RUN)
        ,
        MovePgUp = MovePageUp,
        MovePgDown = MovePageDown
#endif
    };

    explicit QTextEdit(QWidget *parent = 0);
    explicit QTextEdit(const QString &amp;text, QWidget *parent = 0);
    virtual ~QTextEdit();

    void setDocument(QTextDocument *document);
    QTextDocument *document() const;

    void setTextCursor(const QTextCursor &amp;cursor);
    QTextCursor textCursor() const;

    bool isReadOnly() const;
    void setReadOnly(bool ro);

    qreal fontPointSize() const;
    QString fontFamily() const;
    int fontWeight() const;
    bool fontUnderline() const;
    bool fontItalic() const;
    QColor textColor() const;
    QFont currentFont() const;
    Qt::Alignment alignment() const;

    void mergeCurrentCharFormat(const QTextCharFormat &amp;modifier);

    void setCurrentCharFormat(const QTextCharFormat &amp;format);
    QTextCharFormat currentCharFormat() const;

    AutoFormatting autoFormatting() const;
    void setAutoFormatting(AutoFormatting features);

    bool tabChangesFocus() const;
    void setTabChangesFocus(bool b);

    inline void setDocumentTitle(const QString &amp;title)
    { document()->setMetaInformation(QTextDocument::DocumentTitle, title); }
    inline QString documentTitle() const
    { return document()->metaInformation(QTextDocument::DocumentTitle); }

    inline bool isUndoRedoEnabled() const
    { return document()->isUndoRedoEnabled(); }
    inline void setUndoRedoEnabled(bool enable)
    { document()->setUndoRedoEnabled(enable); }

    LineWrapMode lineWrapMode() const;
    void setLineWrapMode(LineWrapMode mode);

    int lineWrapColumnOrWidth() const;
    void setLineWrapColumnOrWidth(int w);

    QTextOption::WrapMode wordWrapMode() const;
    void setWordWrapMode(QTextOption::WrapMode policy);

    bool find(const QString &amp;exp, QTextDocument::FindFlags options = 0);

    inline QString toPlainText() const
    { return document()->toPlainText(); }
    inline QString toHtml() const
    { return document()->toHtml(); }

    void ensureCursorVisible();

    virtual QVariant loadResource(int type, const QUrl &amp;name);
#ifndef QT_NO_MENU
    QMenu *createStandardContextMenu();
#endif
    
    QTextCursor cursorForPosition(const QPoint &amp;pos) const;
    QRect cursorRect(const QTextCursor &amp;cursor) const;
    QRect cursorRect() const;

    QString anchorAt(const QPoint&amp; pos) const;

    bool overwriteMode() const;
    void setOverwriteMode(bool overwrite);

    int tabStopWidth() const;
    void setTabStopWidth(int width);
    
    bool acceptRichText() const;
    void setAcceptRichText(bool accept);

public Q_SLOTS:
    void setFontPointSize(qreal s);
    void setFontFamily(const QString &amp;fontFamily);
    void setFontWeight(int w);
    void setFontUnderline(bool b);
    void setFontItalic(bool b);
    void setTextColor(const QColor &amp;c);
    void setCurrentFont(const QFont &amp;f);
    void setAlignment(Qt::Alignment a);

    void setPlainText(const QString &amp;text);
    void setHtml(const QString &amp;text);

#ifndef QT_NO_CLIPBOARD
    void cut();
    void copy();
    void paste();
#endif
    
    void clear();
    void selectAll();

    void insertPlainText(const QString &amp;text);
    void insertHtml(const QString &amp;text);

    void append(const QString &amp;text);

    void scrollToAnchor(const QString &amp;name);

    void zoomIn(int range = 1);
    void zoomOut(int range = 1);

Q_SIGNALS:
    void textChanged();
    void undoAvailable(bool b);
    void redoAvailable(bool b);
    void currentCharFormatChanged(const QTextCharFormat &amp;format);
    void copyAvailable(bool b);
    void selectionChanged();
    void cursorPositionChanged();

protected:
    virtual bool event(QEvent *e);
    virtual void timerEvent(QTimerEvent *e);
    virtual void keyPressEvent(QKeyEvent *e);
#ifdef QT_KEYPAD_NAVIGATION
    virtual void keyReleaseEvent(QKeyEvent *e);
#endif
    virtual void resizeEvent(QResizeEvent *e);
    virtual void paintEvent(QPaintEvent *e);
    virtual void mousePressEvent(QMouseEvent *e);
    virtual void mouseMoveEvent(QMouseEvent *e);
    virtual void mouseReleaseEvent(QMouseEvent *e);
    virtual void mouseDoubleClickEvent(QMouseEvent *e);
    virtual bool focusNextPrevChild(bool next);
    virtual void contextMenuEvent(QContextMenuEvent *e);
#ifndef QT_NO_DRAGANDDROP
    virtual void dragEnterEvent(QDragEnterEvent *e);
    virtual void dragLeaveEvent(QDragLeaveEvent *e);
    virtual void dragMoveEvent(QDragMoveEvent *e);
    virtual void dropEvent(QDropEvent *e);
#endif
    virtual void focusInEvent(QFocusEvent *e);
    virtual void focusOutEvent(QFocusEvent *e);
    virtual void showEvent(QShowEvent *);
    virtual void changeEvent(QEvent *e);
#ifndef QT_NO_WHEELEVENT
    virtual void wheelEvent(QWheelEvent *e);
#endif
    
    virtual QMimeData *createMimeDataFromSelection() const;
    virtual bool canInsertFromMimeData(const QMimeData *source) const;
    virtual void insertFromMimeData(const QMimeData *source);

    virtual void inputMethodEvent(QInputMethodEvent *);
    QVariant inputMethodQuery(Qt::InputMethodQuery property) const;

    QTextEdit(QTextEditPrivate &amp;dd, QWidget *parent);

    virtual void scrollContentsBy(int dx, int dy);

#ifdef QT3_SUPPORT
Q_SIGNALS:
    QT_MOC_COMPAT void currentFontChanged(const QFont &amp;f);
    QT_MOC_COMPAT void currentColorChanged(const QColor &amp;c);

public:
    QT3_SUPPORT_CONSTRUCTOR QTextEdit(QWidget *parent, const char *name);
    inline QT3_SUPPORT bool find(const QString &amp;exp, bool cs, bool wo)
    {
        QTextDocument::FindFlags flags = 0;
        if (cs)
            flags |= QTextDocument::FindCaseSensitively;
        if (wo)
            flags |= QTextDocument::FindWholeWords;
        return find(exp, flags);
    }

    inline QT3_SUPPORT void sync() {}

    QT3_SUPPORT void moveCursor(CursorAction action, QTextCursor::MoveMode mode = QTextCursor::MoveAnchor);
    inline QT3_SUPPORT void moveCursor(CursorAction action, bool select) {
        moveCursor(action, select ? QTextCursor::KeepAnchor : QTextCursor::MoveAnchor);
    }

    enum KeyboardAction {
        ActionBackspace,
        ActionDelete,
        ActionReturn,
        ActionKill,
        ActionWordBackspace,
        ActionWordDelete
    };

    QT3_SUPPORT void doKeyboardAction(KeyboardAction action);

    QT3_SUPPORT void setText(const QString &amp;text);
    QT3_SUPPORT QString text() const;
    QT3_SUPPORT void setTextFormat(Qt::TextFormat);
    QT3_SUPPORT Qt::TextFormat textFormat() const;

    inline QT3_SUPPORT void setBold(bool b) { setFontWeight(b ? QFont::Bold : QFont::Normal); }
    inline QT3_SUPPORT void setUnderline(bool b) { setFontUnderline(b); }
    inline QT3_SUPPORT void setItalic(bool i) { setFontItalic(i); }
    inline QT3_SUPPORT void setFamily(const QString &amp;family) { setFontFamily(family); }
    inline QT3_SUPPORT void setPointSize(int size) { setFontPointSize(size); }

    inline QT3_SUPPORT bool italic() const { return fontItalic(); }
    inline QT3_SUPPORT bool bold() const { return fontWeight() >= QFont::Bold; }
    inline QT3_SUPPORT bool underline() const { return fontUnderline(); }
    inline QT3_SUPPORT QString family() const { return fontFamily(); }
    inline QT3_SUPPORT int pointSize() const { return (int)(fontPointSize()+0.5); }

    inline QT3_SUPPORT bool hasSelectedText() const
    { return textCursor().hasSelection(); }
    inline QT3_SUPPORT QString selectedText() const
    { return textCursor().selectedText(); }

    inline QT3_SUPPORT bool isUndoAvailable() const
    { return document()->isUndoAvailable(); }
    inline QT3_SUPPORT bool isRedoAvailable() const
    { return document()->isRedoAvailable(); }

    inline QT3_SUPPORT void insert(const QString &amp;text)
    { insertPlainText(text); }

    inline QT3_SUPPORT bool isModified() const
    { return document()->isModified(); }

    inline QT3_SUPPORT QColor color() const
    { return textColor(); }

public Q_SLOTS:
    inline QT_MOC_COMPAT void setModified(bool m = true)
    { document()->setModified(m); }
public:
    inline QT3_SUPPORT void undo() const
    { document()->undo(); }
    inline QT3_SUPPORT void redo() const
    { document()->redo(); }

public Q_SLOTS:
    inline QT_MOC_COMPAT void setColor(const QColor &amp;c)
    { setTextColor(c); }

#endif

private:
    Q_DISABLE_COPY(QTextEdit)
    Q_PRIVATE_SLOT(d_func(), void repaintContents(const QRectF &amp;r))
    Q_PRIVATE_SLOT(d_func(), void updateCurrentCharFormatAndSelection())
    Q_PRIVATE_SLOT(d_func(), void adjustScrollbars())
    Q_PRIVATE_SLOT(d_func(), void emitCursorPosChanged(const QTextCursor &amp;))
    Q_PRIVATE_SLOT(d_func(), void deleteSelected())
    Q_PRIVATE_SLOT(d_func(), void undo())
    Q_PRIVATE_SLOT(d_func(), void redo())
    Q_PRIVATE_SLOT(d_func(), void setCursorAfterUndoRedo(int, int, int))
};

#endif // QT_NO_TEXTEDIT

#endif // QTEXTEDIT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextformat.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTEXTFORMAT_H
#define QTEXTFORMAT_H

#include &lt;QtGui/qcolor.h>
#include &lt;QtGui/qfont.h>
#include &lt;QtCore/qshareddata.h>
#include &lt;QtCore/qvector.h>
#include &lt;QtCore/qvariant.h>
#include &lt;QtGui/qpen.h>
#include &lt;QtGui/qbrush.h>

QT_MODULE(Gui)

class QString;
class QVariant;
class QFont;

class QTextFormatCollection;
class QTextFormatPrivate;
class QTextBlockFormat;
class QTextCharFormat;
class QTextListFormat;
class QTextTableFormat;
class QTextFrameFormat;
class QTextImageFormat;
class QTextFormat;
class QTextObject;
class QTextCursor;
class QTextDocument;
class QTextLength;

Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QTextLength &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QTextLength &amp;);

class Q_GUI_EXPORT QTextLength
{
public:
    enum Type { VariableLength = 0, FixedLength, PercentageLength };

    inline QTextLength() : lengthType(VariableLength), fixedValueOrPercentage(0) {}

    inline explicit QTextLength(Type type, qreal value);

    inline Type type() const { return lengthType; }
    inline qreal value(qreal maximumLength) const
    {
        switch (lengthType) {
            case FixedLength: return fixedValueOrPercentage;
            case VariableLength: return maximumLength;
            case PercentageLength: return fixedValueOrPercentage * maximumLength / qreal(100);
        }
        return -1;
    }

    inline qreal rawValue() const { return fixedValueOrPercentage; }

    inline bool operator==(const QTextLength &amp;other) const
    { return lengthType == other.lengthType
             &amp;&amp; qFuzzyCompare(fixedValueOrPercentage, other.fixedValueOrPercentage); }
    inline bool operator!=(const QTextLength &amp;other) const
    { return lengthType != other.lengthType
             || !qFuzzyCompare(fixedValueOrPercentage, other.fixedValueOrPercentage); }
    operator QVariant() const;

private:
    Type lengthType;
    qreal fixedValueOrPercentage;
    friend Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QTextLength &amp;);
    friend Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QTextLength &amp;);
};

inline QTextLength::QTextLength(Type atype, qreal avalue)
    : lengthType(atype), fixedValueOrPercentage(avalue) {}

Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QTextFormat &amp;);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QTextFormat &amp;);

class Q_GUI_EXPORT QTextFormat
{
    Q_GADGET
    Q_ENUMS(FormatType Property ObjectTypes)
public:
    enum FormatType {
        InvalidFormat = -1,
        BlockFormat = 1,
        CharFormat = 2,
        ListFormat = 3,
        TableFormat = 4,
        FrameFormat = 5,

        UserFormat = 100
    };

    enum Property {
        ObjectIndex = 0x0,

        // paragraph and char
        CssFloat = 0x0800,
        LayoutDirection = 0x0801,

        OutlinePen = 0x810,
        BackgroundBrush = 0x820,
        ForegroundBrush = 0x821,

        // paragraph
        BlockAlignment = 0x1010,
        BlockTopMargin = 0x1030,
        BlockBottomMargin = 0x1031,
        BlockLeftMargin = 0x1032,
        BlockRightMargin = 0x1033,
        TextIndent = 0x1034,
        BlockIndent = 0x1040,
        BlockNonBreakableLines = 0x1050,
        BlockTrailingHorizontalRulerWidth = 0x1060,

        // character properties
        FontFamily = 0x2000,
        FontPointSize = 0x2001,
        FontSizeAdjustment = 0x2002,
        FontSizeIncrement = FontSizeAdjustment, // old name, compat
        FontWeight = 0x2003,
        FontItalic = 0x2004,
        FontUnderline = 0x2005,
        FontOverline = 0x2006,
        FontStrikeOut = 0x2007,
        FontFixedPitch = 0x2008,
        FontPixelSize = 0x2009,

        TextUnderlineColor = 0x2010,
        TextVerticalAlignment = 0x2021,
        TextOutline = 0x2022,

        IsAnchor = 0x2030,
        AnchorHref = 0x2031,
        AnchorName = 0x2032,

        ObjectType = 0x2f00,

        // list properties
        ListStyle = 0x3000,
        ListIndent = 0x3001,

        // table and frame properties
        FrameBorder = 0x4000,
        FrameMargin = 0x4001,
        FramePadding = 0x4002,
        FrameWidth = 0x4003,
        FrameHeight = 0x4004,
        TableColumns = 0x4100,
        TableColumnWidthConstraints = 0x4101,
        TableCellSpacing = 0x4102,
        TableCellPadding = 0x4103,

        // table cell properties
        TableCellRowSpan = 0x4810,
        TableCellColumnSpan = 0x4811,

        // image properties
        ImageName = 0x5000,
        ImageWidth = 0x5010,
        ImageHeight = 0x5011,

        // --
        UserProperty = 0x100000
    };

    enum ObjectTypes {
        NoObject,
        ImageObject,
        TableObject,

        UserObject = 0x1000
    };

    QTextFormat();

    explicit QTextFormat(int type);

    QTextFormat(const QTextFormat &amp;rhs);
    QTextFormat &amp;operator=(const QTextFormat &amp;rhs);
    ~QTextFormat();

    void merge(const QTextFormat &amp;other);

    inline bool isValid() const { return type() != InvalidFormat; }

    int type() const;

    int objectIndex() const;
    void setObjectIndex(int object);

    QVariant property(int propertyId) const;
    void setProperty(int propertyId, const QVariant &amp;value);
    void clearProperty(int propertyId);
    bool hasProperty(int propertyId) const;

    bool boolProperty(int propertyId) const;
    int intProperty(int propertyId) const;
    qreal doubleProperty(int propertyId) const;
    QString stringProperty(int propertyId) const;
    QColor colorProperty(int propertyId) const;
    QPen penProperty(int propertyId) const;
    QBrush brushProperty(int propertyId) const;
    QTextLength lengthProperty(int propertyId) const;
    QVector&lt;QTextLength> lengthVectorProperty(int propertyId) const;

    void setProperty(int propertyId, const QVector&lt;QTextLength> &amp;lengths);


    QMap&lt;int, QVariant> properties() const;

    inline void setObjectType(int type);
    inline int objectType() const
    { return intProperty(ObjectType); }

    inline bool isCharFormat() const { return type() == CharFormat; }
    inline bool isBlockFormat() const { return type() == BlockFormat; }
    inline bool isListFormat() const { return type() == ListFormat; }
    inline bool isFrameFormat() const { return type() == FrameFormat; }
    inline bool isImageFormat() const { return type() == CharFormat &amp;&amp; objectType() == ImageObject; }
    inline bool isTableFormat() const { return type() == FrameFormat &amp;&amp; objectType() == TableObject; }

    QTextBlockFormat toBlockFormat() const;
    QTextCharFormat toCharFormat() const;
    QTextListFormat toListFormat() const;
    QTextTableFormat toTableFormat() const;
    QTextFrameFormat toFrameFormat() const;
    QTextImageFormat toImageFormat() const;

    bool operator==(const QTextFormat &amp;rhs) const;
    inline bool operator!=(const QTextFormat &amp;rhs) const { return !operator==(rhs); }
    operator QVariant() const;

    inline void setLayoutDirection(Qt::LayoutDirection direction)
        { setProperty(QTextFormat::LayoutDirection, direction); }
    inline Qt::LayoutDirection layoutDirection() const
        { return Qt::LayoutDirection(intProperty(QTextFormat::LayoutDirection)); }

    inline void setBackground(const QBrush &amp;brush)
    { setProperty(BackgroundBrush, brush); }
    inline QBrush background() const
    { return brushProperty(BackgroundBrush); }
    inline void clearBackground()
    { clearProperty(BackgroundBrush); }

    inline void setForeground(const QBrush &amp;brush)
    { setProperty(ForegroundBrush, brush); }
    inline QBrush foreground() const
    { return brushProperty(ForegroundBrush); }
    inline void clearForeground()
    { clearProperty(ForegroundBrush); }

private:
    QSharedDataPointer&lt;QTextFormatPrivate> d;
    qint32 format_type;

    friend class QTextFormatCollection;
    friend class QTextCharFormat;
    friend Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;, const QTextFormat &amp;);
    friend Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;, QTextFormat &amp;);
};

inline void QTextFormat::setObjectType(int atype)
{ setProperty(ObjectType, atype); }

class Q_GUI_EXPORT QTextCharFormat : public QTextFormat
{
public:
    enum VerticalAlignment { AlignNormal = 0, AlignSuperScript, AlignSubScript };

    QTextCharFormat();

    bool isValid() const { return isCharFormat(); }
    void setFont(const QFont &amp;font);
    QFont font() const;

    inline void setFontFamily(const QString &amp;family)
    { setProperty(FontFamily, family); }
    inline QString fontFamily() const
    { return stringProperty(FontFamily); }

    inline void setFontPointSize(qreal size)
    { setProperty(FontPointSize, size); }
    inline qreal fontPointSize() const
    { return doubleProperty(FontPointSize); }

    inline void setFontWeight(int weight)
    { if (weight == QFont::Normal) weight = 0; setProperty(FontWeight, weight); }
    inline int fontWeight() const
    { int weight = intProperty(FontWeight); if (weight == 0) weight = QFont::Normal; return weight; }
    inline void setFontItalic(bool italic)
    { setProperty(FontItalic, italic); }
    inline bool fontItalic() const
    { return boolProperty(FontItalic); }

    inline void setFontUnderline(bool underline)
    { setProperty(FontUnderline, underline); }
    inline bool fontUnderline() const
    { return boolProperty(FontUnderline); }

    inline void setFontOverline(bool overline)
    { setProperty(FontOverline, overline); }
    inline bool fontOverline() const
    { return boolProperty(FontOverline); }

    inline void setFontStrikeOut(bool strikeOut)
    { setProperty(FontStrikeOut, strikeOut); }
    inline bool fontStrikeOut() const
    { return boolProperty(FontStrikeOut); }

    inline void setUnderlineColor(const QColor &amp;color)
    { setProperty(TextUnderlineColor, color); }
    inline QColor underlineColor() const
    { return colorProperty(TextUnderlineColor); }

    inline void setFontFixedPitch(bool fixedPitch)
    { setProperty(FontFixedPitch, fixedPitch); }
    inline bool fontFixedPitch() const
    { return boolProperty(FontFixedPitch); }

    inline void setVerticalAlignment(VerticalAlignment alignment)
    { setProperty(TextVerticalAlignment, alignment); }
    inline VerticalAlignment verticalAlignment() const
    { return static_cast&lt;VerticalAlignment>(intProperty(TextVerticalAlignment)); }

    inline void setTextOutline(const QPen &amp;pen)
    { setProperty(TextOutline, pen); }
    inline QPen textOutline() const
    { return penProperty(TextOutline); }

    inline void setAnchor(bool anchor)
    { setProperty(IsAnchor, anchor); }
    inline bool isAnchor() const
    { return boolProperty(IsAnchor); }

    inline void setAnchorHref(const QString &amp;value)
    { setProperty(AnchorHref, value); }
    inline QString anchorHref() const
    { return stringProperty(AnchorHref); }

    inline void setAnchorName(const QString &amp;name)
    { setProperty(AnchorName, name); }
    inline QString anchorName() const
    { return stringProperty(AnchorName); }

    inline void setTableCellRowSpan(int tableCellRowSpan);
    inline int tableCellRowSpan() const
    { int s = intProperty(TableCellRowSpan); if (s == 0) s = 1; return s; }
    inline void setTableCellColumnSpan(int tableCellColumnSpan);
    inline int tableCellColumnSpan() const
    { int s = intProperty(TableCellColumnSpan); if (s == 0) s = 1; return s; }
};

inline void QTextCharFormat::setTableCellRowSpan(int atableCellRowSpan)
{
    if (atableCellRowSpan == 1)
	atableCellRowSpan = 0;
    setProperty(TableCellRowSpan, atableCellRowSpan);
}

inline void QTextCharFormat::setTableCellColumnSpan(int atableCellColumnSpan)
{
    if (atableCellColumnSpan == 1)
	atableCellColumnSpan = 0;
    setProperty(TableCellColumnSpan, atableCellColumnSpan);
}

class Q_GUI_EXPORT QTextBlockFormat : public QTextFormat
{
public:
    QTextBlockFormat();

    bool isValid() const { return isBlockFormat(); }

    inline void setAlignment(Qt::Alignment alignment);
    inline Qt::Alignment alignment() const
    { return QFlag(intProperty(BlockAlignment)); }

    inline void setTopMargin(qreal margin)
    { setProperty(BlockTopMargin, margin); }
    inline qreal topMargin() const
    { return doubleProperty(BlockTopMargin); }

    inline void setBottomMargin(qreal margin)
    { setProperty(BlockBottomMargin, margin); }
    inline qreal bottomMargin() const
    { return doubleProperty(BlockBottomMargin); }

    inline void setLeftMargin(qreal margin)
    { setProperty(BlockLeftMargin, margin); }
    inline qreal leftMargin() const
    { return doubleProperty(BlockLeftMargin); }

    inline void setRightMargin(qreal margin)
    { setProperty(BlockRightMargin, margin); }
    inline qreal rightMargin() const
    { return doubleProperty(BlockRightMargin); }

    inline void setTextIndent(qreal margin)
    { setProperty(TextIndent, margin); }
    inline qreal textIndent() const
    { return doubleProperty(TextIndent); }

    inline void setIndent(int indent);
    inline int indent() const
    { return intProperty(BlockIndent); }

    inline void setNonBreakableLines(bool b)
    { setProperty(BlockNonBreakableLines, b); }
    inline bool nonBreakableLines() const
    { return boolProperty(BlockNonBreakableLines); }
};

inline void QTextBlockFormat::setAlignment(Qt::Alignment aalignment)
{ setProperty(BlockAlignment, int(aalignment)); }

inline void QTextBlockFormat::setIndent(int aindent)
{ setProperty(BlockIndent, aindent); }

class Q_GUI_EXPORT QTextListFormat : public QTextFormat
{
public:
    QTextListFormat();

    bool isValid() const { return isListFormat(); }

    enum Style {
        ListDisc = -1,
        ListCircle = -2,
        ListSquare = -3,
        ListDecimal = -4,
        ListLowerAlpha = -5,
        ListUpperAlpha = -6,
        ListStyleUndefined = 0
    };

    inline void setStyle(Style style);
    inline Style style() const
    { return static_cast&lt;Style>(intProperty(ListStyle)); }

    inline void setIndent(int indent);
    inline int indent() const
    { return intProperty(ListIndent); }

};

inline void QTextListFormat::setStyle(Style astyle)
{ setProperty(ListStyle, astyle); }

inline void QTextListFormat::setIndent(int aindent)
{ setProperty(ListIndent, aindent); }

class Q_GUI_EXPORT QTextImageFormat : public QTextCharFormat
{
public:
    QTextImageFormat();

    bool isValid() const { return isImageFormat(); }

    inline void setName(const QString &amp;name);
    inline QString name() const
    { return stringProperty(ImageName); }

    inline void setWidth(qreal width);
    inline qreal width() const
    { return doubleProperty(ImageWidth); }

    inline void setHeight(qreal height);
    inline qreal height() const
    { return doubleProperty(ImageHeight); }
};

inline void QTextImageFormat::setName(const QString &amp;aname)
{ setProperty(ImageName, aname); }

inline void QTextImageFormat::setWidth(qreal awidth)
{ setProperty(ImageWidth, awidth); }

inline void QTextImageFormat::setHeight(qreal aheight)
{ setProperty(ImageHeight, aheight); }

class Q_GUI_EXPORT QTextFrameFormat : public QTextFormat
{
public:
    QTextFrameFormat();

    bool isValid() const { return isFrameFormat(); }

    enum Position {
        InFlow,
        FloatLeft,
        FloatRight
        // ######
//        Absolute
    };

    inline void setPosition(Position f)
    { setProperty(CssFloat, f); }
    inline Position position() const
    { return static_cast&lt;Position>(intProperty(CssFloat)); }

    inline void setBorder(qreal border);
    inline qreal border() const
    { return doubleProperty(FrameBorder); }

    inline void setMargin(qreal margin);
    inline qreal margin() const
    { return doubleProperty(FrameMargin); }

    inline void setPadding(qreal padding);
    inline qreal padding() const
    { return doubleProperty(FramePadding); }

    inline void setWidth(qreal width);
    inline void setWidth(const QTextLength &amp;length)
    { setProperty(FrameWidth, length); }
    inline QTextLength width() const
    { return lengthProperty(FrameWidth); }

    inline void setHeight(qreal height);
    inline void setHeight(const QTextLength &amp;height);
    inline QTextLength height() const
    { return lengthProperty(FrameHeight); }
};

inline void QTextFrameFormat::setBorder(qreal aborder)
{ setProperty(FrameBorder, aborder); }

inline void QTextFrameFormat::setMargin(qreal amargin)
{ setProperty(FrameMargin, amargin); }

inline void QTextFrameFormat::setPadding(qreal apadding)
{ setProperty(FramePadding, apadding); }

inline void QTextFrameFormat::setWidth(qreal awidth)
{ setProperty(FrameWidth, QTextLength(QTextLength::FixedLength, awidth)); }

inline void QTextFrameFormat::setHeight(qreal aheight)
{ setProperty(FrameHeight, QTextLength(QTextLength::FixedLength, aheight)); }
inline void QTextFrameFormat::setHeight(const QTextLength &amp;aheight)
{ setProperty(FrameHeight, aheight); }

class Q_GUI_EXPORT QTextTableFormat : public QTextFrameFormat
{
public:
    QTextTableFormat();

    inline bool isValid() const { return isTableFormat(); }

    inline int columns() const
    { int cols = intProperty(TableColumns); if (cols == 0) cols = 1; return cols; }
    inline void setColumns(int columns);

    inline void setColumnWidthConstraints(const QVector&lt;QTextLength> &amp;constraints)
    { setProperty(TableColumnWidthConstraints, constraints); }

    inline QVector&lt;QTextLength> columnWidthConstraints() const
    { return lengthVectorProperty(TableColumnWidthConstraints); }

    inline void clearColumnWidthConstraints()
    { clearProperty(TableColumnWidthConstraints); }

    inline qreal cellSpacing() const
    { return doubleProperty(TableCellSpacing); }
    inline void setCellSpacing(qreal spacing)
    { setProperty(TableCellSpacing, spacing); }

    inline qreal cellPadding() const
    { return doubleProperty(TableCellPadding); }
    inline void setCellPadding(qreal padding);

    inline void setAlignment(Qt::Alignment alignment);
    inline Qt::Alignment alignment() const
    { return QFlag(intProperty(BlockAlignment)); }
};

inline void QTextTableFormat::setColumns(int acolumns)
{
    if (acolumns == 1)
        acolumns = 0;
    setProperty(TableColumns, acolumns);
}

inline void QTextTableFormat::setCellPadding(qreal apadding)
{ setProperty(TableCellPadding, apadding); }

inline void QTextTableFormat::setAlignment(Qt::Alignment aalignment)
{ setProperty(BlockAlignment, int(aalignment)); }

#endif // QTEXTFORMAT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextlayout.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/
#ifndef QTEXTLAYOUT_H
#define QTEXTLAYOUT_H

#include &lt;QtCore/qstring.h>
#include &lt;QtCore/qnamespace.h>
#include &lt;QtCore/qrect.h>
#include &lt;QtCore/qvector.h>
#include &lt;QtGui/qcolor.h>
#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qevent.h>
#include &lt;QtGui/qtextformat.h>

QT_MODULE(Gui)

class QTextEngine;
class QFont;
class QRect;
class QRegion;
class QTextFormat;
class QPalette;
class QPainter;

class Q_GUI_EXPORT QTextInlineObject
{
public:
    QTextInlineObject(int i, QTextEngine *e) : itm(i), eng(e) {}
    inline QTextInlineObject() : itm(0), eng(0) {}
    inline bool isValid() const { return eng; }

    QRectF rect() const;
    qreal width() const;
    qreal ascent() const;
    qreal descent() const;
    qreal height() const;

    Qt::LayoutDirection textDirection() const;

    void setWidth(qreal w);
    void setAscent(qreal a);
    void setDescent(qreal d);

    int textPosition() const;

    int formatIndex() const;
    QTextFormat format() const;

private:
    friend class QTextLayout;
    int itm;
    QTextEngine *eng;
};

class QPaintDevice;
class QTextFormat;
class QTextLine;
class QTextBlock;
class QTextOption;

class Q_GUI_EXPORT QTextLayout
{
public:
    // does itemization
    QTextLayout();
    QTextLayout(const QString&amp; text);
    QTextLayout(const QString&amp; text, const QFont &amp;font, QPaintDevice *paintdevice = 0);
    QTextLayout(const QTextBlock &amp;b);
    ~QTextLayout();

    void setFont(const QFont &amp;f);
    QFont font() const;

    void setText(const QString&amp; string);
    QString text() const;

    void setTextOption(const QTextOption &amp;option);
    QTextOption textOption() const;

    void setPreeditArea(int position, const QString &amp;text);
    int preeditAreaPosition() const;
    QString preeditAreaText() const;

    struct FormatRange {
        int start;
        int length;
        QTextCharFormat format;
    };
    void setAdditionalFormats(const QList&lt;FormatRange> &amp;overrides);
    QList&lt;FormatRange> additionalFormats() const;
    void clearAdditionalFormats();

    void setCacheEnabled(bool enable);
    bool cacheEnabled() const;

    void beginLayout();
    void endLayout();

    QTextLine createLine();

    int lineCount() const;
    QTextLine lineAt(int i) const;
    QTextLine lineForTextPosition(int pos) const;

    enum CursorMode {
        SkipCharacters,
        SkipWords
    };
    bool isValidCursorPosition(int pos) const;
    int nextCursorPosition(int oldPos, CursorMode mode = SkipCharacters) const;
    int previousCursorPosition(int oldPos, CursorMode mode = SkipCharacters) const;

    void draw(QPainter *p, const QPointF &amp;pos, const QVector&lt;FormatRange> &amp;selections = QVector&lt;FormatRange>(),
              const QRectF &amp;clip = QRectF()) const;
    void drawCursor(QPainter *p, const QPointF &amp;pos, int cursorPosition) const;

    QPointF position() const;
    void setPosition(const QPointF &amp;p);

    QRectF boundingRect() const;

    qreal minimumWidth() const;
    qreal maximumWidth() const;

    QTextEngine *engine() const { return d; }
private:
    QTextLayout(QTextEngine *e) : d(e) {}
    Q_DISABLE_COPY(QTextLayout)

    friend class QPainter;
    friend class QPSPrinter;
    friend void qt_format_text(const QFont &amp;font, const QRectF &amp;_r, int tf, const QString&amp; str,
                               QRectF *brect, int tabstops, int* tabarray, int tabarraylen,
                               QPainter *painter);
    QTextEngine *d;
};


class Q_GUI_EXPORT QTextLine
{
public:
    inline QTextLine() : i(0), eng(0) {}
    inline bool isValid() const { return eng; }

    QRectF rect() const;
    qreal x() const;
    qreal y() const;
    qreal width() const;
    qreal ascent() const;
    qreal descent() const;
    qreal height() const;

    qreal naturalTextWidth() const;
    QRectF naturalTextRect() const;

    enum Edge {
        Leading,
        Trailing
    };
    enum CursorPosition {
        CursorBetweenCharacters,
        CursorOnCharacter
    };

    /* cursorPos gets set to the valid position */
    qreal cursorToX(int *cursorPos, Edge edge = Leading) const;
    inline qreal cursorToX(int cursorPos, Edge edge = Leading) const { return cursorToX(&amp;cursorPos, edge); }
    int xToCursor(qreal x, CursorPosition = CursorBetweenCharacters) const;

    void setLineWidth(qreal width);
    void setNumColumns(int columns);

    void setPosition(const QPointF &amp;pos);

    int textStart() const;
    int textLength() const;

    int lineNumber() const { return i; }

    void draw(QPainter *p, const QPointF &amp;point, const QTextLayout::FormatRange *selection = 0) const;

private:
    QTextLine(int line, QTextEngine *e) : i(line), eng(e) {}
    void layout_helper(int numGlyphs);
    friend class QTextLayout;
    int i;
    QTextEngine *eng;
};

#endif // QTEXTLAYOUT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextlist.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTEXTLIST_H
#define QTEXTLIST_H

#include &lt;QtGui/qtextobject.h>
#include &lt;QtCore/qobject.h>

QT_MODULE(Gui)

class QTextListPrivate;
class QTextCursor;

class Q_GUI_EXPORT QTextList : public QTextBlockGroup
{
    Q_OBJECT
public:
    explicit QTextList(QTextDocument *doc);
    ~QTextList();

    int count() const;

    inline bool isEmpty() const
    { return count() == 0; }

    QTextBlock item(int i) const;

    int itemNumber(const QTextBlock &amp;) const;
    QString itemText(const QTextBlock &amp;) const;

    void removeItem(int i);
    void remove(const QTextBlock &amp;);

    void add(const QTextBlock &amp;block);

    inline void setFormat(const QTextListFormat &amp;format);
    QTextListFormat format() const { return QTextObject::format().toListFormat(); }

private:
    Q_DISABLE_COPY(QTextList)
    Q_DECLARE_PRIVATE(QTextList)
};

inline void QTextList::setFormat(const QTextListFormat &amp;aformat)
{ QTextObject::setFormat(aformat); }

#endif // QTEXTLIST_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextobject.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTEXTOBJECT_H
#define QTEXTOBJECT_H

#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qtextformat.h>

QT_MODULE(Gui)

class QTextObjectPrivate;
class QTextDocument;
class QTextDocumentPrivate;
class QTextCursor;
class QTextBlock;
class QTextFragment;
class QTextLayout;
class QTextList;

class Q_GUI_EXPORT QTextObject : public QObject
{
    Q_OBJECT

protected:
    explicit QTextObject(QTextDocument *doc);
    ~QTextObject();

    void setFormat(const QTextFormat &amp;format);

public:
    QTextFormat format() const;
    int formatIndex() const;

    QTextDocument *document() const;

    int objectIndex() const;

    QTextDocumentPrivate *docHandle() const;

protected:
    QTextObject(QTextObjectPrivate &amp;p, QTextDocument *doc);

private:
    Q_DECLARE_PRIVATE(QTextObject)
    Q_DISABLE_COPY(QTextObject)
    friend class QTextDocumentPrivate;
};

class QTextBlockGroupPrivate;
class Q_GUI_EXPORT QTextBlockGroup : public QTextObject
{
    Q_OBJECT

protected:
    explicit QTextBlockGroup(QTextDocument *doc);
    ~QTextBlockGroup();

    virtual void blockInserted(const QTextBlock &amp;block);
    virtual void blockRemoved(const QTextBlock &amp;block);
    virtual void blockFormatChanged(const QTextBlock &amp;block);

    QList&lt;QTextBlock> blockList() const;

protected:
    QTextBlockGroup(QTextBlockGroupPrivate &amp;p, QTextDocument *doc);
private:
    Q_DECLARE_PRIVATE(QTextBlockGroup)
    Q_DISABLE_COPY(QTextBlockGroup)
    friend class QTextDocumentPrivate;
};

class Q_GUI_EXPORT QTextFrameLayoutData {
public:
    virtual ~QTextFrameLayoutData();
};

class QTextFramePrivate;
class Q_GUI_EXPORT QTextFrame : public QTextObject
{
    Q_OBJECT

public:
    explicit QTextFrame(QTextDocument *doc);
    ~QTextFrame();

    inline void setFrameFormat(const QTextFrameFormat &amp;format);
    QTextFrameFormat frameFormat() const { return QTextObject::format().toFrameFormat(); }

    QTextCursor firstCursorPosition() const;
    QTextCursor lastCursorPosition() const;
    int firstPosition() const;
    int lastPosition() const;

    QTextFrameLayoutData *layoutData() const;
    void setLayoutData(QTextFrameLayoutData *data);

    QList&lt;QTextFrame *> childFrames() const;
    QTextFrame *parentFrame() const;

    class Q_GUI_EXPORT iterator {
        QTextFrame *f;
        int b;
        int e;
        QTextFrame *cf;
        int cb;

        friend class QTextFrame;
        friend class QTextTableCell;
        friend class QTextDocumentLayoutPrivate;
        iterator(QTextFrame *frame, int block, int begin, int end);
    public:
        iterator();
        iterator(const iterator &amp;o);
        iterator &amp;operator=(const iterator &amp;o);

        QTextFrame *parentFrame() const { return f; }

        QTextFrame *currentFrame() const;
        QTextBlock currentBlock() const;

        bool atEnd() const { return !cf &amp;&amp; cb == e; }

        inline bool operator==(const iterator &amp;o) const { return f == o.f &amp;&amp; cf == o.cf &amp;&amp; cb == o.cb; }
        inline bool operator!=(const iterator &amp;o) const { return f != o.f || cf != o.cf || cb != o.cb; }
        iterator &amp;operator++();
        inline iterator operator++(int) { iterator tmp = *this; operator++(); return tmp; }
        iterator &amp;operator--();
        inline iterator operator--(int) { iterator tmp = *this; operator--(); return tmp; }
    };

    // more Qt
    typedef iterator Iterator;

    iterator begin() const;
    iterator end() const;

protected:
    QTextFrame(QTextFramePrivate &amp;p, QTextDocument *doc);
private:
    friend class QTextDocumentPrivate;
    Q_DECLARE_PRIVATE(QTextFrame)
    Q_DISABLE_COPY(QTextFrame)
};
Q_DECLARE_TYPEINFO(QTextFrame::iterator, Q_MOVABLE_TYPE);

inline void QTextFrame::setFrameFormat(const QTextFrameFormat &amp;aformat)
{ QTextObject::setFormat(aformat); }

class Q_GUI_EXPORT QTextBlockUserData {
public:
    virtual ~QTextBlockUserData();
};

class Q_GUI_EXPORT QTextBlock
{
    friend class QSyntaxHighlighter;
public:
    inline QTextBlock(QTextDocumentPrivate *priv, int b) : p(priv), n(b) {}
    inline QTextBlock() : p(0), n(0) {}
    inline QTextBlock(const QTextBlock &amp;o) : p(o.p), n(o.n) {}
    inline QTextBlock &amp;operator=(const QTextBlock &amp;o) { p = o.p; n = o.n; return *this; }

    inline bool isValid() const { return p != 0 &amp;&amp; n != 0; }

    inline bool operator==(const QTextBlock &amp;o) const { return p == o.p &amp;&amp; n == o.n; }
    inline bool operator!=(const QTextBlock &amp;o) const { return p != o.p || n != o.n; }
    inline bool operator&lt;(const QTextBlock &amp;o) const { return position() &lt; o.position(); }

    int position() const;
    int length() const;
    bool contains(int position) const;

    QTextLayout *layout() const;
    QTextBlockFormat blockFormat() const;
    int blockFormatIndex() const;
    QTextCharFormat charFormat() const;
    int charFormatIndex() const;

    QString text() const;

    const QTextDocument *document() const;

    QTextList *textList() const;

    QTextBlockUserData *userData() const;
    void setUserData(QTextBlockUserData *data);

    int userState() const;
    void setUserState(int state);

    class Q_GUI_EXPORT iterator {
        const QTextDocumentPrivate *p;
        int b;
        int e;
        int n;
        friend class QTextBlock;
        iterator(const QTextDocumentPrivate *priv, int begin, int end, int f) : p(priv), b(begin), e(end), n(f) {}
    public:
        iterator() : p(0), b(0), e(0), n(0) {}
        iterator(const iterator &amp;o) : p(o.p), b(o.b), e(o.e), n(o.n) {}

        QTextFragment fragment() const;

        bool atEnd() const { return n == e; }

        inline bool operator==(const iterator &amp;o) const { return p == o.p &amp;&amp; n == o.n; }
        inline bool operator!=(const iterator &amp;o) const { return p != o.p || n != o.n; }
        iterator &amp;operator++();
        inline iterator operator++(int) { iterator tmp = *this; operator++(); return tmp; }
        iterator &amp;operator--();
        inline iterator operator--(int) { iterator tmp = *this; operator--(); return tmp; }
    };

    // more Qt
    typedef iterator Iterator;

    iterator begin() const;
    iterator end() const;

    QTextBlock next() const;
    QTextBlock previous() const;

    inline QTextDocumentPrivate *docHandle() const { return p; }

private:
    QTextDocumentPrivate *p;
    int n;
    friend class QTextDocumentPrivate;
    friend class QTextLayout;
};

Q_DECLARE_TYPEINFO(QTextBlock, Q_MOVABLE_TYPE);
Q_DECLARE_TYPEINFO(QTextBlock::iterator, Q_MOVABLE_TYPE);


class Q_GUI_EXPORT QTextFragment
{
public:
    inline QTextFragment(const QTextDocumentPrivate *priv, int f, int fe) : p(priv), n(f), ne(fe) {}
    inline QTextFragment() : p(0), n(0), ne(0) {}
    inline QTextFragment(const QTextFragment &amp;o) : p(o.p), n(o.n), ne(o.ne) {}
    inline QTextFragment &amp;operator=(const QTextFragment &amp;o) { p = o.p; n = o.n; ne = o.ne; return *this; }

    inline bool isValid() const { return p &amp;&amp; n; }

    inline bool operator==(const QTextFragment &amp;o) const { return p == o.p &amp;&amp; n == o.n; }
    inline bool operator!=(const QTextFragment &amp;o) const { return p != o.p || n != o.n; }
    inline bool operator&lt;(const QTextFragment &amp;o) const { return position() &lt; o.position(); }

    int position() const;
    int length() const;
    bool contains(int position) const;

    QTextCharFormat charFormat() const;
    int charFormatIndex() const;
    QString text() const;

private:
    const QTextDocumentPrivate *p;
    int n;
    int ne;
};

Q_DECLARE_TYPEINFO(QTextFragment, Q_MOVABLE_TYPE);

#endif // QTEXTOBJECT_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtextoption.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTEXTOPTION_H
#define QTEXTOPTION_H

#include &lt;QtCore/qnamespace.h>

QT_MODULE(Gui)

template &lt;typename T> class QList;
struct QTextOptionPrivate;

class Q_GUI_EXPORT QTextOption
{
public:
    QTextOption();
    QTextOption(Qt::Alignment alignment);
    ~QTextOption();

    QTextOption(const QTextOption &amp;o);
    QTextOption &amp;operator=(const QTextOption &amp;o);

    inline void setAlignment(Qt::Alignment alignment);
    inline Qt::Alignment alignment() const { return Qt::Alignment(align); }

    inline void setTextDirection(Qt::LayoutDirection aDirection) { this->direction = aDirection; }
    inline Qt::LayoutDirection textDirection() const { return Qt::LayoutDirection(direction); }

    enum WrapMode {
        NoWrap,
        WordWrap,
        ManualWrap,
        WrapAnywhere,
        WrapAtWordBoundaryOrAnywhere
    };
    inline void setWrapMode(WrapMode wrap) { wordWrap = wrap; }
    inline WrapMode wrapMode() const { return static_cast&lt;WrapMode>(wordWrap); }

    enum Flag {
        IncludeTrailingSpaces = 0x80000000
    };
    Q_DECLARE_FLAGS(Flags, Flag)
    inline void setFlags(Flags flags);
    inline Flags flags() const { return Flags(f); }

    inline void setTabStop(qreal tabStop);
    inline qreal tabStop() const { return tab; }

    void setTabArray(QList&lt;qreal> tabStops);
    QList&lt;qreal> tabArray() const;

    void setUseDesignMetrics(bool b) { design = b; }
    bool useDesignMetrics() const { return design; }

private:
    uint align : 8;
    uint wordWrap : 4;
    uint design : 1;
    uint direction : 1;
    uint unused : 19;
    uint f;
    qreal tab;
    QTextOptionPrivate *d;
};

Q_DECLARE_OPERATORS_FOR_FLAGS(QTextOption::Flags)

inline void QTextOption::setAlignment(Qt::Alignment aalignment)
{ align = aalignment; }

inline void QTextOption::setFlags(Flags aflags)
{ f = aflags; }

inline void QTextOption::setTabStop(qreal atabStop)
{ tab = atabStop; }

#endif // QTEXTOPTION_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtexttable.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTEXTTABLE_H
#define QTEXTTABLE_H

#include &lt;QtCore/qglobal.h>
#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qtextobject.h>

QT_MODULE(Gui)

class QTextCursor;
class QTextTable;
class QTextTablePrivate;

class Q_GUI_EXPORT QTextTableCell
{
public:
    QTextTableCell() : table(0) {}
    ~QTextTableCell() {}
    QTextTableCell(const QTextTableCell &amp;o) : table(o.table), fragment(o.fragment) {}
    QTextTableCell &amp;operator=(const QTextTableCell &amp;o)
    { table = o.table; fragment = o.fragment; return *this; }

    QTextCharFormat format() const;

    int row() const;
    int column() const;

    int rowSpan() const;
    int columnSpan() const;

    inline bool isValid() const { return table != 0; }

    QTextCursor firstCursorPosition() const;
    QTextCursor lastCursorPosition() const;
    int firstPosition() const;
    int lastPosition() const;

    inline bool operator==(const QTextTableCell &amp;other) const
    { return table == other.table &amp;&amp; fragment == other.fragment; }
    inline bool operator!=(const QTextTableCell &amp;other) const
    { return !operator==(other); }

    QTextFrame::iterator begin() const;
    QTextFrame::iterator end() const;

private:
    friend class QTextTable;
    QTextTableCell(const QTextTable *t, int f)
        : table(t), fragment(f) {}

    const QTextTable *table;
    int fragment;
};

class Q_GUI_EXPORT QTextTable : public QTextFrame
{
    Q_OBJECT
public:
    explicit QTextTable(QTextDocument *doc);
    ~QTextTable();

    void resize(int rows, int cols);
    void insertRows(int pos, int num);
    void insertColumns(int pos, int num);
    void removeRows(int pos, int num);
    void removeColumns(int pos, int num);

    void mergeCells(int row, int col, int numRows, int numCols);
    void mergeCells(const QTextCursor &amp;cursor);
    void splitCell(int row, int col, int numRows, int numCols);

    int rows() const;
    int columns() const;

    QTextTableCell cellAt(int row, int col) const;
    QTextTableCell cellAt(int position) const;
    QTextTableCell cellAt(const QTextCursor &amp;c) const;

    QTextCursor rowStart(const QTextCursor &amp;c) const;
    QTextCursor rowEnd(const QTextCursor &amp;c) const;

    inline void setFormat(const QTextTableFormat &amp;format);
    QTextTableFormat format() const { return QTextObject::format().toTableFormat(); }

private:
    Q_DISABLE_COPY(QTextTable)
    Q_DECLARE_PRIVATE(QTextTable)
    friend class QTextTableCell;
};

inline void QTextTable::setFormat(const QTextTableFormat &amp;aformat)
{ QTextObject::setFormat(aformat); }

#endif // QTEXTTABLE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtoolbar.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTOOLBAR_H
#define QTOOLBAR_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

#ifndef QT_NO_TOOLBAR

class QToolBarPrivate;

class QAction;
class QIcon;
class QMainWindow;

class Q_GUI_EXPORT QToolBar : public QWidget
{
    Q_OBJECT

    Q_PROPERTY(bool movable READ isMovable WRITE setMovable
               DESIGNABLE (qobject_cast&lt;QMainWindow *>(parentWidget()) != 0)
               NOTIFY movableChanged)
    Q_PROPERTY(Qt::ToolBarAreas allowedAreas READ allowedAreas WRITE setAllowedAreas
               DESIGNABLE (qobject_cast&lt;QMainWindow *>(parentWidget()) != 0)
               NOTIFY allowedAreasChanged)
    Q_PROPERTY(Qt::Orientation orientation READ orientation WRITE setOrientation
               DESIGNABLE (qobject_cast&lt;QMainWindow *>(parentWidget()) == 0)
               NOTIFY orientationChanged)
    Q_PROPERTY(QSize iconSize READ iconSize WRITE setIconSize NOTIFY iconSizeChanged)
    Q_PROPERTY(Qt::ToolButtonStyle toolButtonStyle READ toolButtonStyle WRITE setToolButtonStyle
               NOTIFY toolButtonStyleChanged)

public:
    explicit QToolBar(const QString &amp;title, QWidget *parent = 0);
    explicit QToolBar(QWidget *parent = 0);
    ~QToolBar();

    void setMovable(bool movable);
    bool isMovable() const;

    void setAllowedAreas(Qt::ToolBarAreas areas);
    Qt::ToolBarAreas allowedAreas() const;

    inline bool isAreaAllowed(Qt::ToolBarArea area) const
    { return (allowedAreas() &amp; area) == area; }

    void setOrientation(Qt::Orientation orientation);
    Qt::Orientation orientation() const;

    void clear();

#ifdef Q_NO_USING_KEYWORD
    inline void addAction(QAction *action)
    { QWidget::addAction(action); }
#else
    using QWidget::addAction;
#endif

    QAction *addAction(const QString &amp;text);
    QAction *addAction(const QIcon &amp;icon, const QString &amp;text);
    QAction *addAction(const QString &amp;text, const QObject *receiver, const char* member);
    QAction *addAction(const QIcon &amp;icon, const QString &amp;text,
		       const QObject *receiver, const char* member);

    QAction *addSeparator();
    QAction *insertSeparator(QAction *before);

    QAction *addWidget(QWidget *widget);
    QAction *insertWidget(QAction *before, QWidget *widget);

    QRect actionGeometry(QAction *action) const;
    QAction *actionAt(const QPoint &amp;p) const;
    inline QAction *actionAt(int x, int y) const;

    QAction *toggleViewAction() const;

    QSize iconSize() const;
    Qt::ToolButtonStyle toolButtonStyle() const;

public Q_SLOTS:
    void setIconSize(const QSize &amp;iconSize);
    void setToolButtonStyle(Qt::ToolButtonStyle toolButtonStyle);

Q_SIGNALS:
    void actionTriggered(QAction *action);
    void movableChanged(bool movable);
    void allowedAreasChanged(Qt::ToolBarAreas allowedAreas);
    void orientationChanged(Qt::Orientation orientation);
    void iconSizeChanged(const QSize &amp;iconSize);
    void toolButtonStyleChanged(Qt::ToolButtonStyle toolButtonStyle);

protected:
    void actionEvent(QActionEvent *event);
    void changeEvent(QEvent *event);
    void childEvent(QChildEvent *event);
    void paintEvent(QPaintEvent *event);
    void resizeEvent(QResizeEvent *event);
    bool event(QEvent *event);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QToolBar(QWidget *parent, const char *name);
    inline QT3_SUPPORT void setLabel(const QString &amp;label)
    { setWindowTitle(label); }
    inline QT3_SUPPORT QString label() const
    { return windowTitle(); }
#endif

private:
    Q_DECLARE_PRIVATE(QToolBar)
    Q_DISABLE_COPY(QToolBar)
    Q_PRIVATE_SLOT(d_func(), void toggleView(bool))
    Q_PRIVATE_SLOT(d_func(), void updateIconSize(const QSize &amp;))
    Q_PRIVATE_SLOT(d_func(), void updateToolButtonStyle(Qt::ToolButtonStyle))

    friend class QMainWindow;
};

inline QAction *QToolBar::actionAt(int ax, int ay) const
{ return actionAt(QPoint(ax, ay)); }

#endif // QT_NO_TOOLBAR

#endif // QTOOLBAR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtoolbox.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTOOLBOX_H
#define QTOOLBOX_H

#include &lt;QtGui/qframe.h>
#include &lt;QtGui/qicon.h>

QT_MODULE(Gui)

#ifndef QT_NO_TOOLBOX

class QToolBoxPrivate;

class Q_GUI_EXPORT QToolBox : public QFrame
{
    Q_OBJECT
    Q_PROPERTY(int currentIndex READ currentIndex WRITE setCurrentIndex NOTIFY currentChanged)
    Q_PROPERTY(int count READ count)

public:
    explicit QToolBox(QWidget *parent = 0, Qt::WFlags f = 0);
    ~QToolBox();

    int addItem(QWidget *widget, const QString &amp;text);
    int addItem(QWidget *widget, const QIcon &amp;icon, const QString &amp;text);
    int insertItem(int index, QWidget *widget, const QString &amp;text);
    int insertItem(int index, QWidget *widget, const QIcon &amp;icon, const QString &amp;text);

    void removeItem(int index);

    void setItemEnabled(int index, bool enabled);
    bool isItemEnabled(int index) const;

    void setItemText(int index, const QString &amp;text);
    QString itemText(int index) const;

    void setItemIcon(int index, const QIcon &amp;icon);
    QIcon itemIcon(int index) const;

    void setItemToolTip(int index, const QString &amp;toolTip);
    QString itemToolTip(int index) const;

    int currentIndex() const;
    QWidget *currentWidget() const;
    QWidget *widget(int index) const;
    int indexOf(QWidget *widget) const;
    int count() const;

public Q_SLOTS:
    void setCurrentIndex(int index);
    void setCurrentWidget(QWidget *widget);

Q_SIGNALS:
    void currentChanged(int index);

protected:
    bool event(QEvent *e);
    virtual void itemInserted(int index);
    virtual void itemRemoved(int index);
    void showEvent(QShowEvent *e);
    void changeEvent(QEvent *);

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QToolBox(QWidget *parent, const char *name, Qt::WFlags f = 0);
    inline QT3_SUPPORT void setItemLabel(int index, const QString &amp;text) { setItemText(index, text); }
    inline QT3_SUPPORT QString itemLabel(int index) const { return itemText(index); }
    inline QT3_SUPPORT QWidget *currentItem() const { return widget(currentIndex()); }
    inline QT3_SUPPORT void setCurrentItem(QWidget *item) { setCurrentIndex(indexOf(item)); }
    inline QT3_SUPPORT void setItemIconSet(int index, const QIcon &amp;icon) { setItemIcon(index, icon); }
    inline QT3_SUPPORT QIcon itemIconSet(int index) const { return itemIcon(index); }
    inline QT3_SUPPORT int removeItem(QWidget *item)
    { int i = indexOf(item); removeItem(i); return i; }
    inline QT3_SUPPORT QWidget *item(int index) const { return widget(index); }
#endif

private:
    Q_DECLARE_PRIVATE(QToolBox)
    Q_DISABLE_COPY(QToolBox)
    Q_PRIVATE_SLOT(d_func(), void buttonClicked())
    Q_PRIVATE_SLOT(d_func(), void widgetDestroyed(QObject*))
};


inline int QToolBox::addItem(QWidget *item, const QString &amp;text)
{ return insertItem(-1, item, QIcon(), text); }
inline int QToolBox::addItem(QWidget *item, const QIcon &amp;iconSet,
                              const QString &amp;text)
{ return insertItem(-1, item, iconSet, text); }
inline int QToolBox::insertItem(int index, QWidget *item, const QString &amp;text)
{ return insertItem(index, item, QIcon(), text); }

#endif // QT_NO_TOOLBOX

#endif // QTOOLBOX_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtoolbutton.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTOOLBUTTON_H
#define QTOOLBUTTON_H

#include &lt;QtGui/qabstractbutton.h>

QT_MODULE(Gui)

#ifndef QT_NO_TOOLBUTTON

class QToolButtonPrivate;
class QMenu;

class Q_GUI_EXPORT QToolButton : public QAbstractButton
{
    Q_OBJECT
    Q_ENUMS(Qt::ToolButtonStyle Qt::ArrowType)
#ifndef QT_NO_MENU
    Q_PROPERTY(ToolButtonPopupMode popupMode READ popupMode WRITE setPopupMode)
#endif
    Q_PROPERTY(Qt::ToolButtonStyle toolButtonStyle READ toolButtonStyle WRITE setToolButtonStyle)
    Q_PROPERTY(bool autoRaise READ autoRaise WRITE setAutoRaise)
    Q_PROPERTY(Qt::ArrowType arrowType READ arrowType WRITE setArrowType)

public:
    enum ToolButtonPopupMode {
        DelayedPopup,
        MenuButtonPopup,
        InstantPopup
    };

    explicit QToolButton(QWidget * parent=0);
    ~QToolButton();

    QSize sizeHint() const;
    QSize minimumSizeHint() const;

    Qt::ToolButtonStyle toolButtonStyle() const;

    Qt::ArrowType arrowType() const;
    void setArrowType(Qt::ArrowType type);

#ifndef QT_NO_MENU    
    void setMenu(QMenu* menu);
    QMenu* menu() const;
    
    void setPopupMode(ToolButtonPopupMode mode);
    ToolButtonPopupMode popupMode() const;
#endif

    QAction *defaultAction() const;

    void setAutoRaise(bool enable);
    bool autoRaise() const;

public Q_SLOTS:
#ifndef QT_NO_MENU
    void showMenu();
#endif
    void setToolButtonStyle(Qt::ToolButtonStyle style);
    void setDefaultAction(QAction *);

Q_SIGNALS:
    void triggered(QAction *);

protected:
    QToolButton(QToolButtonPrivate &amp;, QWidget* parent);
    bool event(QEvent *e);
    void mousePressEvent(QMouseEvent *);
    void paintEvent(QPaintEvent *);
    void actionEvent(QActionEvent *);

    void enterEvent(QEvent *);
    void leaveEvent(QEvent *);
    void timerEvent(QTimerEvent *);
    void changeEvent(QEvent *);

    void nextCheckState();

private:
    Q_DISABLE_COPY(QToolButton)
    Q_DECLARE_PRIVATE(QToolButton)
#ifndef QT_NO_MENU
    Q_PRIVATE_SLOT(d_func(), void buttonPressed())
#endif
    Q_PRIVATE_SLOT(d_func(), void actionTriggered())

#ifdef QT3_SUPPORT
public:
    enum TextPosition {
        BesideIcon,
        BelowIcon
        , Right = BesideIcon,
        Under = BelowIcon
    };

    QT3_SUPPORT_CONSTRUCTOR QToolButton(QWidget * parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QToolButton(Qt::ArrowType type, QWidget *parent, const char* name);
    QT3_SUPPORT_CONSTRUCTOR QToolButton( const QIcon&amp; s, const QString &amp;textLabel,
                                       const QString&amp; grouptext,
                                       QObject * receiver, const char* slot,
                                       QWidget * parent, const char* name=0 );
    inline QT3_SUPPORT void setPixmap(const QPixmap &amp;pixmap) { setIcon(static_cast&lt;QIcon>(pixmap)); }
    QT3_SUPPORT void setOnIconSet(const QIcon&amp;);
    QT3_SUPPORT void setOffIconSet(const QIcon&amp;);
    inline QT3_SUPPORT void setIconSet(const QIcon &amp;icon){setIcon(icon);}
    QT3_SUPPORT void setIconSet(const QIcon &amp;, bool on);
    inline QT3_SUPPORT void setTextLabel(const QString &amp;text, bool tooltip = true) { setText(text); if (tooltip)setToolTip(text);}
    inline QT3_SUPPORT QString textLabel() const { return text(); }
    QT3_SUPPORT QIcon onIconSet() const;
    QT3_SUPPORT QIcon offIconSet() const;
    QT3_SUPPORT QIcon iconSet(bool on) const;
    inline QT3_SUPPORT QIcon iconSet() const { return icon(); }
    inline QT3_SUPPORT void openPopup()  { showMenu(); }
    inline QT3_SUPPORT void setPopup(QMenu* popup) {setMenu(popup); }
    inline QT3_SUPPORT QMenu* popup() const { return menu(); }
    inline QT3_SUPPORT bool usesBigPixmap() const { return iconSize().height() > 22; }
    inline QT3_SUPPORT bool usesTextLabel() const { return toolButtonStyle() != Qt::ToolButtonIconOnly; }
    inline QT3_SUPPORT TextPosition textPosition() const
    { return toolButtonStyle() == Qt::ToolButtonTextUnderIcon ? BelowIcon : BesideIcon; }
    QT3_SUPPORT void setPopupDelay(int delay);
    QT3_SUPPORT int popupDelay() const;

public Q_SLOTS:
    QT_MOC_COMPAT void setUsesBigPixmap(bool enable)
        { setIconSize(enable?QSize(32,32):QSize(22,22)); }
    QT_MOC_COMPAT void setUsesTextLabel(bool enable)
        { setToolButtonStyle(enable?Qt::ToolButtonTextUnderIcon : Qt::ToolButtonIconOnly); }
    QT_MOC_COMPAT void setTextPosition(QToolButton::TextPosition pos)
        { setToolButtonStyle(pos == BesideIcon ? Qt::ToolButtonTextBesideIcon : Qt::ToolButtonTextUnderIcon); }

#endif
};

#endif // QT_NO_TOOLBUTTON

#endif // QTOOLBUTTON_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtooltip.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTOOLTIP_H
#define QTOOLTIP_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

#ifndef QT_NO_TOOLTIP

class Q_GUI_EXPORT QToolTip
{
    QToolTip();
public:
    static void showText(const QPoint &amp;pos, const QString &amp;text, QWidget *w = 0);

    static QPalette palette();
#ifdef QT3_SUPPORT
    static inline QT3_SUPPORT void add(QWidget *w, const QString &amp;s) { w->setToolTip(s); }
    static inline QT3_SUPPORT void add(QWidget *w, const QRect &amp;, const QString &amp;s)
    { w->setToolTip(s); }
    static inline QT3_SUPPORT void remove(QWidget *w) { w->setToolTip(QString()); }
#endif
};

#endif // QT_NO_TOOLTIP

#endif // QTOOLTIP_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtreeview.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTREEVIEW_H
#define QTREEVIEW_H

#include &lt;QtGui/qabstractitemview.h>

QT_MODULE(Gui)

#ifndef QT_NO_TREEVIEW

class QTreeViewPrivate;
class QHeaderView;

class Q_GUI_EXPORT QTreeView : public QAbstractItemView
{
    Q_OBJECT
    Q_PROPERTY(int indentation READ indentation WRITE setIndentation)
    Q_PROPERTY(bool rootIsDecorated READ rootIsDecorated WRITE setRootIsDecorated)
    Q_PROPERTY(bool uniformRowHeights READ uniformRowHeights WRITE setUniformRowHeights)
    Q_PROPERTY(bool itemsExpandable READ itemsExpandable WRITE setItemsExpandable)

public:
    explicit QTreeView(QWidget *parent = 0);
    ~QTreeView();

    void setModel(QAbstractItemModel *model);
    void setRootIndex(const QModelIndex &amp;index);
    void setSelectionModel(QItemSelectionModel *selectionModel);

    QHeaderView *header() const;
    void setHeader(QHeaderView *header);

    int indentation() const;
    void setIndentation(int i);

    bool rootIsDecorated() const;
    void setRootIsDecorated(bool show);

    bool uniformRowHeights() const;
    void setUniformRowHeights(bool uniform);

    bool itemsExpandable() const;
    void setItemsExpandable(bool enable);

    int columnViewportPosition(int column) const;
    int columnWidth(int column) const;
    int columnAt(int x) const;

    bool isColumnHidden(int column) const;
    void setColumnHidden(int column, bool hide);

    bool isRowHidden(int row, const QModelIndex &amp;parent) const;
    void setRowHidden(int row, const QModelIndex &amp;parent, bool hide);

    bool isExpanded(const QModelIndex &amp;index) const;
    void setExpanded(const QModelIndex &amp;index, bool expand);

    void keyboardSearch(const QString &amp;search);

    QRect visualRect(const QModelIndex &amp;index) const;
    void scrollTo(const QModelIndex &amp;index, ScrollHint hint = EnsureVisible);
    QModelIndex indexAt(const QPoint &amp;p) const;
    QModelIndex indexAbove(const QModelIndex &amp;index) const;
    QModelIndex indexBelow(const QModelIndex &amp;index) const;

    void doItemsLayout();
    void reset();

Q_SIGNALS:
    void expanded(const QModelIndex &amp;index);
    void collapsed(const QModelIndex &amp;index);

public Q_SLOTS:
    void dataChanged(const QModelIndex &amp;topLeft, const QModelIndex &amp;bottomRight);
    void hideColumn(int column);
    void showColumn(int column);
    void expand(const QModelIndex &amp;index);
    void collapse(const QModelIndex &amp;index);
    void resizeColumnToContents(int column);
    void sortByColumn(int column);
    void selectAll();

protected Q_SLOTS:
    void columnResized(int column, int oldSize, int newSize);
    void columnCountChanged(int oldCount, int newCount);
    void columnMoved();
    void reexpand();
    void rowsRemoved(const QModelIndex &amp;parent, int first, int last);

protected:
    QTreeView(QTreeViewPrivate &amp;dd, QWidget *parent = 0);
    void scrollContentsBy(int dx, int dy);
    void rowsInserted(const QModelIndex &amp;parent, int start, int end);
    void rowsAboutToBeRemoved(const QModelIndex &amp;parent, int start, int end);

    QModelIndex moveCursor(CursorAction cursorAction, Qt::KeyboardModifiers modifiers);
    int horizontalOffset() const;
    int verticalOffset() const;

    void setSelection(const QRect &amp;rect, QItemSelectionModel::SelectionFlags command);
    QRegion visualRegionForSelection(const QItemSelection &amp;selection) const;
    QModelIndexList selectedIndexes() const;

    void timerEvent(QTimerEvent *event);
    void paintEvent(QPaintEvent *event);
    virtual void drawRow(QPainter *painter,
                         const QStyleOptionViewItem &amp;options,
                         const QModelIndex &amp;index) const;
    virtual void drawBranches(QPainter *painter,
                              const QRect &amp;rect,
                              const QModelIndex &amp;index) const;

    void mousePressEvent(QMouseEvent *event);
    void mouseReleaseEvent(QMouseEvent *event);
    void mouseDoubleClickEvent(QMouseEvent *event);

    void updateGeometries();

    int sizeHintForColumn(int column) const;
    int indexRowSizeHint(const QModelIndex &amp;index) const;

    void horizontalScrollbarAction(int action);

    bool isIndexHidden(const QModelIndex &amp;index) const;

private:
    Q_DECLARE_PRIVATE(QTreeView)
    Q_DISABLE_COPY(QTreeView)
};

#endif // QT_NO_TREEVIEW

#endif // QTREEVIEW_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtreewidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTREEWIDGET_H
#define QTREEWIDGET_H

#include &lt;QtGui/qtreeview.h>
#include &lt;QtGui/qtreewidgetitemiterator.h>
#include &lt;QtCore/qvariant.h>
#include &lt;QtCore/qvector.h>

QT_MODULE(Gui)

#ifndef QT_NO_TREEWIDGET

class QTreeWidget;
class QTreeModel;
class QWidgetItemData;

class Q_GUI_EXPORT QTreeWidgetItem
{
    friend class QTreeModel;
    friend class QTreeWidget;
    friend class QTreeWidgetItemIterator;
public:
    enum { Type = 0, UserType = 1000 };
    QTreeWidgetItem(int type = Type);
    QTreeWidgetItem(const QStringList &amp;strings, int type = Type);
    explicit QTreeWidgetItem(QTreeWidget *view, int type = Type);
    QTreeWidgetItem(QTreeWidget *view, const QStringList &amp;strings, int type = Type);
    QTreeWidgetItem(QTreeWidget *view, QTreeWidgetItem *after, int type = Type);
    explicit QTreeWidgetItem(QTreeWidgetItem *parent, int type = Type);
    QTreeWidgetItem(QTreeWidgetItem *parent, const QStringList &amp;strings, int type = Type);
    QTreeWidgetItem(QTreeWidgetItem *parent, QTreeWidgetItem *after, int type = Type);
    QTreeWidgetItem(const QTreeWidgetItem &amp;other);
    virtual ~QTreeWidgetItem();

    virtual QTreeWidgetItem *clone() const;

    inline QTreeWidget *treeWidget() const { return view; }

    inline Qt::ItemFlags flags() const { return itemFlags; }
    inline void setFlags(Qt::ItemFlags flags);

    inline QString text(int column) const
        { return data(column, Qt::DisplayRole).toString(); }
    inline void setText(int column, const QString &amp;text);

    inline QIcon icon(int column) const
        { return qvariant_cast&lt;QIcon>(data(column, Qt::DecorationRole)); }
    inline void setIcon(int column, const QIcon &amp;icon);

    inline QString statusTip(int column) const
        { return data(column, Qt::StatusTipRole).toString(); }
    inline void setStatusTip(int column, const QString &amp;statusTip);

#ifndef QT_NO_TOOLTIP
    inline QString toolTip(int column) const
        { return data(column, Qt::ToolTipRole).toString(); }
    inline void setToolTip(int column, const QString &amp;toolTip);
#endif

#ifndef QT_NO_WHATSTHIS
    inline QString whatsThis(int column) const
        { return data(column, Qt::WhatsThisRole).toString(); }
    inline void setWhatsThis(int column, const QString &amp;whatsThis);
#endif

    inline QFont font(int column) const
        { return qvariant_cast&lt;QFont>(data(column, Qt::FontRole)); }
    inline void setFont(int column, const QFont &amp;font);

    inline int textAlignment(int column) const
        { return data(column, Qt::TextAlignmentRole).toInt(); }
    inline void setTextAlignment(int column, int alignment)
        { setData(column, Qt::TextAlignmentRole, alignment); }

    inline QColor backgroundColor(int column) const
        { return qvariant_cast&lt;QColor>(data(column, Qt::BackgroundColorRole)); }
    inline void setBackgroundColor(int column, const QColor &amp;color)
        { setData(column, Qt::BackgroundColorRole, color); }

    inline QColor textColor(int column) const
        { return qvariant_cast&lt;QColor>(data(column, Qt::TextColorRole)); }
    inline void setTextColor(int column, const QColor &amp;color)
        { setData(column, Qt::TextColorRole, color); }

    inline Qt::CheckState checkState(int column) const
        { return static_cast&lt;Qt::CheckState>(data(column, Qt::CheckStateRole).toInt()); }
    inline void setCheckState(int column, Qt::CheckState state)
        { setData(column, Qt::CheckStateRole, state); }

    inline QSize sizeHint(int column) const
        { return qvariant_cast&lt;QSize>(data(column, Qt::SizeHintRole)); }
    inline void setSizeHint(int column, const QSize &amp;size)
        { setData(column, Qt::SizeHintRole, size); }

    virtual QVariant data(int column, int role) const;
    virtual void setData(int column, int role, const QVariant &amp;value);

    virtual bool operator&lt;(const QTreeWidgetItem &amp;other) const;

#ifndef QT_NO_DATASTREAM
    virtual void read(QDataStream &amp;in);
    virtual void write(QDataStream &amp;out) const;
#endif
    QTreeWidgetItem &amp;operator=(const QTreeWidgetItem &amp;other);

    inline QTreeWidgetItem *parent() const { return par; }
    inline QTreeWidgetItem *child(int index) const
        { if (index &lt; 0 || index >= children.size()) return 0; return children.at(index); }
    inline int childCount() const { return children.count(); }
    inline int columnCount() const { return values.count(); }
    inline int indexOfChild(QTreeWidgetItem *child) const;

    void addChild(QTreeWidgetItem *child);
    void insertChild(int index, QTreeWidgetItem *child);
    QTreeWidgetItem *takeChild(int index);

    void addChildren(const QList&lt;QTreeWidgetItem*> &amp;children);
    void insertChildren(int index, const QList&lt;QTreeWidgetItem*> &amp;children);
    QList&lt;QTreeWidgetItem*> takeChildren();

    inline int type() const { return rtti; }

private:
    void sortChildren(int column, Qt::SortOrder order, bool climb);
    QVariant childrenCheckState(int column) const;

    int rtti;
    // One item has a vector of column entries. Each column has a vector of (role, value) pairs.
    QVector&lt; QVector&lt;QWidgetItemData> > values;
    QTreeWidget *view;
    QTreeModel *model;
    QTreeWidgetItem *par;
    QList&lt;QTreeWidgetItem*> children;
    Qt::ItemFlags itemFlags;
};

inline void QTreeWidgetItem::setFlags(Qt::ItemFlags aflags)
{ itemFlags = aflags; }

inline void QTreeWidgetItem::setText(int column, const QString &amp;atext)
{ setData(column, Qt::DisplayRole, atext); }

inline void QTreeWidgetItem::setIcon(int column, const QIcon &amp;aicon)
{ setData(column, Qt::DecorationRole, aicon); }

#ifndef QT_NO_STATUSTIP
inline void QTreeWidgetItem::setStatusTip(int column, const QString &amp;astatusTip)
{ setData(column, Qt::StatusTipRole, astatusTip); }
#endif

#ifndef QT_NO_TOOLTIP
inline void QTreeWidgetItem::setToolTip(int column, const QString &amp;atoolTip)
{ setData(column, Qt::ToolTipRole, atoolTip); }
#endif

#ifndef QT_NO_WHATSTHIS
inline void QTreeWidgetItem::setWhatsThis(int column, const QString &amp;awhatsThis)
{ setData(column, Qt::WhatsThisRole, awhatsThis); }
#endif

inline void QTreeWidgetItem::setFont(int column, const QFont &amp;afont)
{ setData(column, Qt::FontRole, afont); }

inline int QTreeWidgetItem::indexOfChild(QTreeWidgetItem *achild) const
{ return children.indexOf(achild); }

#ifndef QT_NO_DATASTREAM
Q_GUI_EXPORT QDataStream &amp;operator&lt;&lt;(QDataStream &amp;out, const QTreeWidgetItem &amp;item);
Q_GUI_EXPORT QDataStream &amp;operator>>(QDataStream &amp;in, QTreeWidgetItem &amp;item);
#endif

class QTreeWidgetPrivate;

class Q_GUI_EXPORT QTreeWidget : public QTreeView
{
    Q_OBJECT
    Q_PROPERTY(int columnCount READ columnCount WRITE setColumnCount)
    Q_PROPERTY(bool sortingEnabled READ isSortingEnabled WRITE setSortingEnabled)
    Q_PROPERTY(int topLevelItemCount READ topLevelItemCount)

    friend class QTreeModel;
public:
    explicit QTreeWidget(QWidget *parent = 0);
    ~QTreeWidget();

    int columnCount() const;
    void setColumnCount(int columns);

    QTreeWidgetItem *topLevelItem(int index) const;
    int topLevelItemCount() const;
    void insertTopLevelItem(int index, QTreeWidgetItem *item);
    void addTopLevelItem(QTreeWidgetItem *item);
    QTreeWidgetItem *takeTopLevelItem(int index);
    int indexOfTopLevelItem(QTreeWidgetItem *item);

    void insertTopLevelItems(int index, const QList&lt;QTreeWidgetItem*> &amp;items);
    void addTopLevelItems(const QList&lt;QTreeWidgetItem*> &amp;items);

    QTreeWidgetItem *headerItem() const;
    void setHeaderItem(QTreeWidgetItem *item);
    void setHeaderLabels(const QStringList &amp;labels);

    QTreeWidgetItem *currentItem() const;
    int currentColumn() const;
    void setCurrentItem(QTreeWidgetItem *item);
    void setCurrentItem(QTreeWidgetItem *item, int column);

    QTreeWidgetItem *itemAt(const QPoint &amp;p) const;
    inline QTreeWidgetItem *itemAt(int x, int y) const;
    QRect visualItemRect(const QTreeWidgetItem *item) const;

    int sortColumn() const;
    void sortItems(int column, Qt::SortOrder order);
    void setSortingEnabled(bool enable);
    bool isSortingEnabled() const;

    void editItem(QTreeWidgetItem *item, int column = 0);
    void openPersistentEditor(QTreeWidgetItem *item, int column = 0);
    void closePersistentEditor(QTreeWidgetItem *item, int column = 0);

    QWidget *itemWidget(QTreeWidgetItem *item, int column) const;
    void setItemWidget(QTreeWidgetItem *item, int column, QWidget *widget);

    bool isItemSelected(const QTreeWidgetItem *item) const;
    void setItemSelected(const QTreeWidgetItem *item, bool select);
    QList&lt;QTreeWidgetItem*> selectedItems() const;
    QList&lt;QTreeWidgetItem*> findItems(const QString &amp;text, Qt::MatchFlags flags, int column = 0) const;

    bool isItemHidden(const QTreeWidgetItem *item) const;
    void setItemHidden(const QTreeWidgetItem *item, bool hide);

    bool isItemExpanded(const QTreeWidgetItem *item) const;
    void setItemExpanded(const QTreeWidgetItem *item, bool expand);

public Q_SLOTS:
    void scrollToItem(const QTreeWidgetItem *item, QAbstractItemView::ScrollHint hint = EnsureVisible);
    void expandItem(const QTreeWidgetItem *item);
    void collapseItem(const QTreeWidgetItem *item);
    void clear();

Q_SIGNALS:
    void itemPressed(QTreeWidgetItem *item, int column);
    void itemClicked(QTreeWidgetItem *item, int column);
    void itemDoubleClicked(QTreeWidgetItem *item, int column);
    void itemActivated(QTreeWidgetItem *item, int column);
    void itemEntered(QTreeWidgetItem *item, int column);
    void itemChanged(QTreeWidgetItem *item, int column);
    void itemExpanded(QTreeWidgetItem *item);
    void itemCollapsed(QTreeWidgetItem *item);
    void currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *previous);
    void itemSelectionChanged();

protected:
    bool event(QEvent *e);
    virtual QStringList mimeTypes() const;
    virtual QMimeData *mimeData(const QList&lt;QTreeWidgetItem*> items) const;
    virtual bool dropMimeData(QTreeWidgetItem *parent, int index,
                              const QMimeData *data, Qt::DropAction action);
    virtual Qt::DropActions supportedDropActions() const;
    QList&lt;QTreeWidgetItem*> items(const QMimeData *data) const;

    QModelIndex indexFromItem(QTreeWidgetItem *item, int column = 0) const;
    QTreeWidgetItem *itemFromIndex(const QModelIndex &amp;index) const;

private:
    void setModel(QAbstractItemModel *model);

    Q_DECLARE_PRIVATE(QTreeWidget)
    Q_DISABLE_COPY(QTreeWidget)

    Q_PRIVATE_SLOT(d_func(), void emitItemPressed(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemClicked(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemDoubleClicked(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemActivated(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemEntered(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemChanged(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemExpanded(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitItemCollapsed(const QModelIndex &amp;index))
    Q_PRIVATE_SLOT(d_func(), void emitCurrentItemChanged(const QModelIndex &amp;previous, const QModelIndex &amp;current))

};

inline QTreeWidgetItem *QTreeWidget::itemAt(int ax, int ay) const
{ return itemAt(QPoint(ax, ay)); }

#endif // QT_NO_TREEWIDGET

#endif // QTREEWIDGET_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qtreewidgetitemiterator.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QTREEWIDGETITEMITERATOR_H
#define QTREEWIDGETITEMITERATOR_H

#include &lt;QtCore/qglobal.h>

QT_MODULE(Gui)

#ifndef QT_NO_TREEWIDGET

class QTreeWidget;
class QTreeWidgetItem;
class QTreeModel;

class Q_GUI_EXPORT QTreeWidgetItemIterator
{
    friend class QTreeModel;

public:
    enum IteratorFlag {
        All           = 0x00000000,
        Hidden        = 0x00000001,
        NotHidden     = 0x00000002,
        Selected      = 0x00000004,
        Unselected    = 0x00000008,
        Selectable    = 0x00000010,
        NotSelectable = 0x00000020,
        DragEnabled   = 0x00000040,
        DragDisabled  = 0x00000080,
        DropEnabled   = 0x00000100,
        DropDisabled  = 0x00000200,
        HasChildren   = 0x00000400,
        NoChildren    = 0x00000800,
        Checked       = 0x00001000,
        NotChecked    = 0x00002000,
        Enabled       = 0x00004000,
        Disabled      = 0x00008000,
        Editable      = 0x00010000,
        NotEditable   = 0x00020000,
        UserFlag      = 0x01000000 // The first flag that can be used by the user.
    };
    Q_DECLARE_FLAGS(IteratorFlags, IteratorFlag)

    QTreeWidgetItemIterator(const QTreeWidgetItemIterator &amp;it);
    explicit QTreeWidgetItemIterator(QTreeWidget *widget, IteratorFlags flags = All);
    explicit QTreeWidgetItemIterator(QTreeWidgetItem *item, IteratorFlags flags = All);
    ~QTreeWidgetItemIterator();

    QTreeWidgetItemIterator &amp;operator=(const QTreeWidgetItemIterator &amp;it);

    QTreeWidgetItemIterator &amp;operator++();
    inline const QTreeWidgetItemIterator operator++(int);
    inline QTreeWidgetItemIterator &amp;operator+=(int n);

    QTreeWidgetItemIterator &amp;operator--();
    inline const QTreeWidgetItemIterator operator--(int);
    inline QTreeWidgetItemIterator &amp;operator-=(int n);

    inline QTreeWidgetItem *operator*() const;

private:
    bool matchesFlags(const QTreeWidgetItem *item) const;
    QTreeModel *model;
    QTreeWidgetItem *current;
    IteratorFlags flags;
};

inline const QTreeWidgetItemIterator QTreeWidgetItemIterator::operator++(int)
{
    QTreeWidgetItemIterator it = *this;
    ++(*this);
    return it;
}

inline const QTreeWidgetItemIterator QTreeWidgetItemIterator::operator--(int)
{
    QTreeWidgetItemIterator it = *this;
    --(*this);
    return it;
}

inline QTreeWidgetItemIterator &amp;QTreeWidgetItemIterator::operator+=(int n)
{
    if (n &lt; 0)
        return (*this) -= (-n);
    while (current &amp;&amp; n--)
        ++(*this);
    return *this;
}

inline QTreeWidgetItemIterator &amp;QTreeWidgetItemIterator::operator-=(int n)
{
    if (n &lt; 0)
        return (*this) += (-n);
    while (current &amp;&amp; n--)
        --(*this);
    return *this;
}

inline QTreeWidgetItem *QTreeWidgetItemIterator::operator*() const
{
    return current;
}

Q_DECLARE_OPERATORS_FOR_FLAGS(QTreeWidgetItemIterator::IteratorFlags)

#endif // QT_NO_TREEWIDGET
#endif // QTREEWIDGETITEMITERATOR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qvalidator.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QVALIDATOR_H
#define QVALIDATOR_H

#include &lt;QtCore/qobject.h>
#include &lt;QtCore/qstring.h>
#include &lt;QtCore/qregexp.h>

QT_MODULE(Gui)

#ifndef QT_NO_VALIDATOR

class Q_GUI_EXPORT QValidator : public QObject
{
    Q_OBJECT
public:
    explicit QValidator(QObject * parent);
    ~QValidator();

    enum State {
        Invalid,
        Intermediate,
#if defined(QT3_SUPPORT) &amp;&amp; !defined(Q_MOC_RUN)
        Valid = Intermediate,
#endif
        Acceptable
    };

    virtual State validate(QString &amp;, int &amp;) const = 0;
    virtual void fixup(QString &amp;) const;

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QValidator(QObject * parent, const char *name);
#endif

private:
    Q_DISABLE_COPY(QValidator)
};

class Q_GUI_EXPORT QIntValidator : public QValidator
{
    Q_OBJECT
    Q_PROPERTY(int bottom READ bottom WRITE setBottom)
    Q_PROPERTY(int top READ top WRITE setTop)

public:
    explicit QIntValidator(QObject * parent);
    QIntValidator(int bottom, int top, QObject * parent);
    ~QIntValidator();

    QValidator::State validate(QString &amp;, int &amp;) const;

    void setBottom(int);
    void setTop(int);
    virtual void setRange(int bottom, int top);

    int bottom() const { return b; }
    int top() const { return t; }

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QIntValidator(QObject * parent, const char *name);
    QT3_SUPPORT_CONSTRUCTOR QIntValidator(int bottom, int top, QObject * parent, const char *name);
#endif

private:
    Q_DISABLE_COPY(QIntValidator)

    int b;
    int t;
};

#ifndef QT_NO_REGEXP

class Q_GUI_EXPORT QDoubleValidator : public QValidator
{
    Q_OBJECT
    Q_PROPERTY(double bottom READ bottom WRITE setBottom)
    Q_PROPERTY(double top READ top WRITE setTop)
    Q_PROPERTY(int decimals READ decimals WRITE setDecimals)

public:
    explicit QDoubleValidator(QObject * parent);
    QDoubleValidator(double bottom, double top, int decimals, QObject * parent);
    ~QDoubleValidator();

    QValidator::State validate(QString &amp;, int &amp;) const;

    virtual void setRange(double bottom, double top, int decimals = 0);
    void setBottom(double);
    void setTop(double);
    void setDecimals(int);

    double bottom() const { return b; }
    double top() const { return t; }
    int decimals() const { return d; }

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QDoubleValidator(QObject * parent, const char *name);
    QT3_SUPPORT_CONSTRUCTOR QDoubleValidator(double bottom, double top, int decimals,
                                           QObject * parent, const char *name);
#endif
private:
    Q_DISABLE_COPY(QDoubleValidator)

    double b;
    double t;
    int d;
};


class Q_GUI_EXPORT QRegExpValidator : public QValidator
{
    Q_OBJECT
    Q_PROPERTY(QRegExp regExp READ regExp WRITE setRegExp)

public:
    explicit QRegExpValidator(QObject *parent);
    QRegExpValidator(const QRegExp&amp; rx, QObject *parent);
    ~QRegExpValidator();

    virtual QValidator::State validate(QString&amp; input, int&amp; pos) const;

    void setRegExp(const QRegExp&amp; rx);
    const QRegExp&amp; regExp() const { return r; } // ### make inline for 5.0

#ifdef QT3_SUPPORT
public:
    QT3_SUPPORT_CONSTRUCTOR QRegExpValidator(QObject *parent, const char *name);
    QT3_SUPPORT_CONSTRUCTOR QRegExpValidator(const QRegExp&amp; rx, QObject *parent, const char *name);
#endif

private:
    Q_DISABLE_COPY(QRegExpValidator)

    QRegExp r;
};

#endif // QT_NO_REGEXP

#endif // QT_NO_VALIDATOR

#endif // QVALIDATOR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qvfbhdr.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QVFBHDR_H
#define QVFBHDR_H

#include &lt;QtGui/qcolor.h>
#include &lt;QtCore/qrect.h>

QT_MODULE(Gui)

#define QT_VFB_MOUSE_PIPE        "/tmp/.qtvfb_mouse-%1"
#define QT_VFB_KEYBOARD_PIPE        "/tmp/.qtvfb_keyboard-%1"

struct QVFbHeader
{
    int width;
    int height;
    int depth;
    int linestep;
    int dataoffset;
    QRect update;
    bool dirty;
    int  numcols;
    QRgb clut[256];
    int viewerVersion;
    int serverVersion;
};

struct QVFbKeyData
{
    unsigned int keycode;
    Qt::KeyboardModifiers modifiers;
    unsigned short int unicode;
    bool press;
    bool repeat;
};

#endif // QVFBHDR_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qwhatsthis.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QWHATSTHIS_H
#define QWHATSTHIS_H

#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qcursor.h>

QT_MODULE(Gui)

#ifndef QT_NO_WHATSTHIS

class QAction;
#ifdef QT3_SUPPORT
class QToolButton;
#endif

class Q_GUI_EXPORT QWhatsThis
{
    QWhatsThis();

public:
    static void enterWhatsThisMode();
    static bool inWhatsThisMode();
    static void leaveWhatsThisMode();

    static void showText(const QPoint &amp;pos, const QString &amp;text, QWidget *w = 0);
    static void hideText();

    static QAction *createAction(QObject *parent = 0);

#ifdef QT3_SUPPORT
    static QT3_SUPPORT void add(QWidget *w, const QString &amp;s);
    static QT3_SUPPORT void remove(QWidget *);
    static QT3_SUPPORT QToolButton *whatsThisButton(QWidget *parent);
#endif
};

#endif // QT_NO_WHATSTHIS

#endif // QWHATSTHIS_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qwidget.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QWIDGET_H
#define QWIDGET_H

#include &lt;QtGui/qwindowdefs.h>
#include &lt;QtCore/qobject.h>
#include &lt;QtGui/qpaintdevice.h>
#include &lt;QtGui/qpalette.h>
#include &lt;QtGui/qfont.h>
#include &lt;QtGui/qfontmetrics.h>
#include &lt;QtGui/qfontinfo.h>
#include &lt;QtGui/qsizepolicy.h>
#include &lt;QtGui/qregion.h>
#include &lt;QtGui/qbrush.h>
#include &lt;QtGui/qcursor.h>
#include &lt;QtGui/qkeysequence.h>

#ifdef QT_INCLUDE_COMPAT
#include &lt;QtGui/qevent.h>
#endif

QT_MODULE(Gui)

class QLayout;
class QWSRegionManager;
class QStyle;
class QAction;
class QVariant;

class QActionEvent;
class QMouseEvent;
class QWheelEvent;
class QHoverEvent;
class QKeyEvent;
class QFocusEvent;
class QPaintEvent;
class QMoveEvent;
class QResizeEvent;
class QCloseEvent;
class QContextMenuEvent;
class QInputMethodEvent;
class QTabletEvent;
class QDragEnterEvent;
class QDragMoveEvent;
class QDragLeaveEvent;
class QDropEvent;
class QShowEvent;
class QHideEvent;
class QInputContext;
class QIcon;
#if defined(Q_WS_X11)
class QX11Info;
#endif

class QWidgetData
{
public:
    WId winid;
    uint widget_attributes;
    Qt::WindowFlags window_flags;
    uint window_state : 4;
    uint focus_policy : 4;
    uint sizehint_forced :1;
    uint is_closing :1;
    uint in_show : 1;
    uint in_set_window_state : 1;
    mutable uint fstrut_dirty : 1;
    uint context_menu_policy : 3;
    uint window_modality : 2;
    uint unused : 14;
    QRect crect;
    mutable QPalette pal;
    QFont fnt;
#if defined(Q_WS_QWS)
//    QRegion req_region;                 // Requested region
//     mutable QRegion paintable_region;   // Paintable region
//     mutable bool paintable_region_dirty;// needs to be recalculated
//     mutable QRegion alloc_region;       // Allocated region
//     mutable bool alloc_region_dirty;    // needs to be recalculated
//     mutable int overlapping_children;   // Handle overlapping children

    int alloc_region_index;
//    int alloc_region_revision;
#endif
    QRect wrect;
};

class QWidgetPrivate;

class Q_GUI_EXPORT QWidget : public QObject, public QPaintDevice
{
    Q_OBJECT
    Q_DECLARE_PRIVATE(QWidget)

    Q_PROPERTY(bool modal READ isModal)
    Q_PROPERTY(Qt::WindowModality windowModality READ windowModality WRITE setWindowModality)
    Q_PROPERTY(bool enabled READ isEnabled WRITE setEnabled)
    Q_PROPERTY(QRect geometry READ geometry WRITE setGeometry)
    Q_PROPERTY(QRect frameGeometry READ frameGeometry)
    Q_PROPERTY(QRect normalGeometry READ normalGeometry)
    Q_PROPERTY(int x READ x)
    Q_PROPERTY(int y READ y)
    Q_PROPERTY(QPoint pos READ pos WRITE move DESIGNABLE false STORED false)
    Q_PROPERTY(QSize frameSize READ frameSize)
    Q_PROPERTY(QSize size READ size WRITE resize DESIGNABLE false STORED false)
    Q_PROPERTY(int width READ width)
    Q_PROPERTY(int height READ height)
    Q_PROPERTY(QRect rect READ rect)
    Q_PROPERTY(QRect childrenRect READ childrenRect)
    Q_PROPERTY(QRegion childrenRegion READ childrenRegion)
    Q_PROPERTY(QSizePolicy sizePolicy READ sizePolicy WRITE setSizePolicy)
    Q_PROPERTY(QSize minimumSize READ minimumSize WRITE setMinimumSize)
    Q_PROPERTY(QSize maximumSize READ maximumSize WRITE setMaximumSize)
    Q_PROPERTY(int minimumWidth READ minimumWidth WRITE setMinimumWidth STORED false DESIGNABLE false)
    Q_PROPERTY(int minimumHeight READ minimumHeight WRITE setMinimumHeight STORED false DESIGNABLE false)
    Q_PROPERTY(int maximumWidth READ maximumWidth WRITE setMaximumWidth STORED false DESIGNABLE false)
    Q_PROPERTY(int maximumHeight READ maximumHeight WRITE setMaximumHeight STORED false DESIGNABLE false)
    Q_PROPERTY(QSize sizeIncrement READ sizeIncrement WRITE setSizeIncrement)
    Q_PROPERTY(QSize baseSize READ baseSize WRITE setBaseSize)
    Q_PROPERTY(QPalette palette READ palette WRITE setPalette)
    Q_PROPERTY(QFont font READ font WRITE setFont)
#ifndef QT_NO_CURSOR
    Q_PROPERTY(QCursor cursor READ cursor WRITE setCursor RESET unsetCursor)
#endif
    Q_PROPERTY(bool mouseTracking READ hasMouseTracking WRITE setMouseTracking)
    Q_PROPERTY(bool isActiveWindow READ isActiveWindow)
    Q_PROPERTY(Qt::FocusPolicy focusPolicy READ focusPolicy WRITE setFocusPolicy)
    Q_PROPERTY(bool focus READ hasFocus)
    Q_PROPERTY(Qt::ContextMenuPolicy contextMenuPolicy READ contextMenuPolicy WRITE setContextMenuPolicy)
    Q_PROPERTY(bool updatesEnabled READ updatesEnabled WRITE setUpdatesEnabled DESIGNABLE false)
    Q_PROPERTY(bool visible READ isVisible WRITE setVisible DESIGNABLE false)
    Q_PROPERTY(bool minimized READ isMinimized)
    Q_PROPERTY(bool maximized READ isMaximized)
    Q_PROPERTY(bool fullScreen READ isFullScreen)
    Q_PROPERTY(QSize sizeHint READ sizeHint)
    Q_PROPERTY(QSize minimumSizeHint READ minimumSizeHint)
    Q_PROPERTY(bool acceptDrops READ acceptDrops WRITE setAcceptDrops)
    Q_PROPERTY(QString windowTitle READ windowTitle WRITE setWindowTitle DESIGNABLE isWindow)
    Q_PROPERTY(QIcon windowIcon READ windowIcon WRITE setWindowIcon DESIGNABLE isWindow)
    Q_PROPERTY(QString windowIconText READ windowIconText WRITE setWindowIconText DESIGNABLE isWindow)
    Q_PROPERTY(double windowOpacity READ windowOpacity WRITE setWindowOpacity DESIGNABLE false)
    Q_PROPERTY(bool windowModified READ isWindowModified WRITE setWindowModified DESIGNABLE isWindow)
#ifndef QT_NO_TOOLTIP
    Q_PROPERTY(QString toolTip READ toolTip WRITE setToolTip)
#endif
#ifndef QT_NO_STATUSTIP
    Q_PROPERTY(QString statusTip READ statusTip WRITE setStatusTip)
#endif
#ifndef QT_NO_WHATSTHIS
    Q_PROPERTY(QString whatsThis READ whatsThis WRITE setWhatsThis)
#endif
#ifndef QT_NO_ACCESSIBILITY
    Q_PROPERTY(QString accessibleName READ accessibleName WRITE setAccessibleName)
    Q_PROPERTY(QString accessibleDescription READ accessibleDescription WRITE setAccessibleDescription)
#endif
    Q_PROPERTY(Qt::LayoutDirection layoutDirection READ layoutDirection WRITE setLayoutDirection RESET unsetLayoutDirection)
    QDOC_PROPERTY(Qt::WindowFlags windowFlags READ windowFlags WRITE setWindowFlags)
    Q_PROPERTY(bool autoFillBackground READ autoFillBackground WRITE setAutoFillBackground)

public:
    explicit QWidget(QWidget* parent = 0, Qt::WFlags f = 0);
#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QWidget(QWidget* parent, const char *name, Qt::WFlags f = 0);
#endif
    ~QWidget();

    int devType() const;

    WId winId() const;
    // GUI style setting
    QStyle *style() const;
    void setStyle(QStyle *);
    // Widget types and states

    bool isTopLevel() const;
    bool isWindow() const;

    bool isModal() const;
    Qt::WindowModality windowModality() const;
    void setWindowModality(Qt::WindowModality windowModality);

    bool isEnabled() const;
    bool isEnabledTo(QWidget*) const;
    bool isEnabledToTLW() const;

public Q_SLOTS:
    void setEnabled(bool);
    void setDisabled(bool);
    void setWindowModified(bool);

    // Widget coordinates

public:
    QRect frameGeometry() const;
    const QRect &amp;geometry() const;
    QRect normalGeometry() const;

    int x() const;
    int y() const;
    QPoint pos() const;
    QSize frameSize() const;
    QSize size() const;
    inline int width() const;
    inline int height() const;
    inline QRect rect() const;
    QRect childrenRect() const;
    QRegion childrenRegion() const;

    QSize minimumSize() const;
    QSize maximumSize() const;
    int minimumWidth() const;
    int minimumHeight() const;
    int maximumWidth() const;
    int maximumHeight() const;
    void setMinimumSize(const QSize &amp;);
    void setMinimumSize(int minw, int minh);
    void setMaximumSize(const QSize &amp;);
    void setMaximumSize(int maxw, int maxh);
    void setMinimumWidth(int minw);
    void setMinimumHeight(int minh);
    void setMaximumWidth(int maxw);
    void setMaximumHeight(int maxh);

    QSize sizeIncrement() const;
    void setSizeIncrement(const QSize &amp;);
    void setSizeIncrement(int w, int h);
    QSize baseSize() const;
    void setBaseSize(const QSize &amp;);
    void setBaseSize(int basew, int baseh);

    void setFixedSize(const QSize &amp;);
    void setFixedSize(int w, int h);
    void setFixedWidth(int w);
    void setFixedHeight(int h);

    // Widget coordinate mapping

    QPoint mapToGlobal(const QPoint &amp;) const;
    QPoint mapFromGlobal(const QPoint &amp;) const;
    QPoint mapToParent(const QPoint &amp;) const;
    QPoint mapFromParent(const QPoint &amp;) const;
    QPoint mapTo(QWidget *, const QPoint &amp;) const;
    QPoint mapFrom(QWidget *, const QPoint &amp;) const;

    QWidget *window() const;
    inline QWidget *topLevelWidget() const { return window(); }

    // Widget appearance functions
    const QPalette &amp;palette() const;
    void setPalette(const QPalette &amp;);

    void setBackgroundRole(QPalette::ColorRole);
    QPalette::ColorRole backgroundRole() const;

    void setForegroundRole(QPalette::ColorRole);
    QPalette::ColorRole foregroundRole() const;

    const QFont &amp;font() const;
    void setFont(const QFont &amp;);
    QFontMetrics fontMetrics() const;
    QFontInfo fontInfo() const;

#ifndef QT_NO_CURSOR
    QCursor cursor() const;
    void setCursor(const QCursor &amp;);
    void unsetCursor();
#endif

    void setMouseTracking(bool enable);
    bool hasMouseTracking() const;
    bool underMouse() const;

    void setMask(const QBitmap &amp;);
    void setMask(const QRegion &amp;);
    QRegion mask() const;
    void clearMask();

    void setWindowTitle(const QString &amp;);
    QString windowTitle() const;
    void setWindowIcon(const QIcon &amp;icon);
    QIcon windowIcon() const;
    void setWindowIconText(const QString &amp;);
    QString windowIconText() const;
    void setWindowRole(const QString &amp;);
    QString windowRole() const;

    void setWindowOpacity(qreal level);
    qreal windowOpacity() const;

    bool isWindowModified() const;
#ifndef QT_NO_TOOLTIP
    void setToolTip(const QString &amp;);
    QString toolTip() const;
#endif
#ifndef QT_NO_STATUSTIP
    void setStatusTip(const QString &amp;);
    QString statusTip() const;
#endif
#ifndef QT_NO_WHATSTHIS
    void setWhatsThis(const QString &amp;);
    QString whatsThis() const;
#endif
#ifndef QT_NO_ACCESSIBILITY
    QString accessibleName() const;
    void setAccessibleName(const QString &amp;name);
    QString accessibleDescription() const;
    void setAccessibleDescription(const QString &amp;description);
#endif

    void setLayoutDirection(Qt::LayoutDirection direction);
    Qt::LayoutDirection layoutDirection() const;
    void unsetLayoutDirection();

    inline bool isRightToLeft() const { return layoutDirection() == Qt::RightToLeft; }
    inline bool isLeftToRight() const { return layoutDirection() == Qt::LeftToRight; }

public Q_SLOTS:
    inline void setFocus() { setFocus(Qt::OtherFocusReason); }

public:
    bool isActiveWindow() const;
    void activateWindow();
    void clearFocus();

    void setFocus(Qt::FocusReason reason);
    Qt::FocusPolicy focusPolicy() const;
    void setFocusPolicy(Qt::FocusPolicy policy);
    bool hasFocus() const;
    static void setTabOrder(QWidget *, QWidget *);
    void setFocusProxy(QWidget *);
    QWidget *focusProxy() const;
    Qt::ContextMenuPolicy contextMenuPolicy() const;
    void setContextMenuPolicy(Qt::ContextMenuPolicy policy);

    // Grab functions
    void grabMouse();
#ifndef QT_NO_CURSOR
    void grabMouse(const QCursor &amp;);
#endif
    void releaseMouse();
    void grabKeyboard();
    void releaseKeyboard();
#ifndef QT_NO_SHORTCUT
    int grabShortcut(const QKeySequence &amp;key, Qt::ShortcutContext context = Qt::WindowShortcut);
    void releaseShortcut(int id);
    void setShortcutEnabled(int id, bool enable = true);
#endif
    static QWidget *mouseGrabber();
    static QWidget *keyboardGrabber();

    // Update/refresh functions
    inline bool updatesEnabled() const;
    void setUpdatesEnabled(bool enable);

#if 0 //def Q_WS_QWS
    void repaintUnclipped(const QRegion &amp;, bool erase = true);
#endif

public Q_SLOTS:
    void update();
    void repaint();

public:
    inline void update(int x, int y, int w, int h);
    void update(const QRect&amp;);
    void update(const QRegion&amp;);

    void repaint(int x, int y, int w, int h);
    void repaint(const QRect &amp;);
    void repaint(const QRegion &amp;);

public Q_SLOTS:
    // Widget management functions

    virtual void setVisible(bool visible);
    inline void setHidden(bool hidden) { setVisible(!hidden); }
    inline void show() { setVisible(true); }
    inline void hide() { setVisible(false); }
    inline QT_MOC_COMPAT void setShown(bool shown) { setVisible(shown); }

    void showMinimized();
    void showMaximized();
    void showFullScreen();
    void showNormal();

    bool close();
    void raise();
    void lower();

public:
    void stackUnder(QWidget*);
    void move(int x, int y);
    void move(const QPoint &amp;);
    void resize(int w, int h);
    void resize(const QSize &amp;);
    inline void setGeometry(int x, int y, int w, int h);
    void setGeometry(const QRect &amp;);
    void adjustSize();
    bool isVisible() const;
    bool isVisibleTo(QWidget*) const;
    inline bool isHidden() const;

    bool isMinimized() const;
    bool isMaximized() const;
    bool isFullScreen() const;

    Qt::WindowStates windowState() const;
    void setWindowState(Qt::WindowStates state);
    void overrideWindowState(Qt::WindowStates state);

    virtual QSize sizeHint() const;
    virtual QSize minimumSizeHint() const;

    QSizePolicy sizePolicy() const;
    void setSizePolicy(QSizePolicy);
    inline void setSizePolicy(QSizePolicy::Policy horizontal, QSizePolicy::Policy vertical);
    virtual int heightForWidth(int) const;

    QRegion visibleRegion() const;

    void setContentsMargins(int left, int top, int right, int bottom);
    void getContentsMargins(int *left, int *top, int *right, int *bottom) const;
    QRect contentsRect() const;

public:
    QLayout *layout() const;
    void setLayout(QLayout *);
    void updateGeometry();

    void setParent(QWidget *parent);
    void setParent(QWidget *parent, Qt::WFlags f);

    void scroll(int dx, int dy);
    void scroll(int dx, int dy, const QRect&amp;);

    // Misc. functions

    QWidget *focusWidget() const;
    QWidget *nextInFocusChain() const;

    // drag and drop
    bool acceptDrops() const;
    void setAcceptDrops(bool on);

#ifndef QT_NO_ACTION
    //actions
    void addAction(QAction *action);
    void addActions(QList&lt;QAction*> actions);
    void insertAction(QAction *before, QAction *action);
    void insertActions(QAction *before, QList&lt;QAction*> actions);
    void removeAction(QAction *action);
    QList&lt;QAction*> actions() const;
#endif

    QWidget *parentWidget() const;

    void setWindowFlags(Qt::WindowFlags type);
    inline Qt::WindowFlags windowFlags() const;
    void overrideWindowFlags(Qt::WindowFlags type);

    inline Qt::WindowType windowType() const;

    static QWidget *find(WId);
#ifdef QT3_SUPPORT
    static QT3_SUPPORT QWidgetMapper *wmapper();
#endif
    inline QWidget *childAt(int x, int y) const;
    QWidget *childAt(const QPoint &amp;p) const;

#if defined(Q_WS_X11)
    const QX11Info &amp;x11Info() const;
    Qt::HANDLE x11PictureHandle() const;
#endif

#if defined(Q_WS_WIN)
    HDC getDC() const;
    void releaseDC(HDC) const;
#else
    Qt::HANDLE handle() const;
#endif

    void setAttribute(Qt::WidgetAttribute, bool on = true);
    inline bool testAttribute(Qt::WidgetAttribute) const;

    QPaintEngine *paintEngine() const;

    void ensurePolished() const;

    QInputContext *inputContext();
    void setInputContext(QInputContext *);

    bool isAncestorOf(const QWidget *child) const;

#ifdef QT_KEYPAD_NAVIGATION
    bool hasEditFocus() const;
    void setEditFocus(bool on);
#endif

    bool autoFillBackground() const;
    void setAutoFillBackground(bool enabled);

Q_SIGNALS:
    void customContextMenuRequested(const QPoint &amp;pos);

protected:
    // Event handlers
    bool event(QEvent *);
    virtual void mousePressEvent(QMouseEvent *);
    virtual void mouseReleaseEvent(QMouseEvent *);
    virtual void mouseDoubleClickEvent(QMouseEvent *);
    virtual void mouseMoveEvent(QMouseEvent *);
#ifndef QT_NO_WHEELEVENT
    virtual void wheelEvent(QWheelEvent *);
#endif
    virtual void keyPressEvent(QKeyEvent *);
    virtual void keyReleaseEvent(QKeyEvent *);
    virtual void focusInEvent(QFocusEvent *);
    virtual void focusOutEvent(QFocusEvent *);
    virtual void enterEvent(QEvent *);
    virtual void leaveEvent(QEvent *);
    virtual void paintEvent(QPaintEvent *);
    virtual void moveEvent(QMoveEvent *);
    virtual void resizeEvent(QResizeEvent *);
    virtual void closeEvent(QCloseEvent *);
    virtual void contextMenuEvent(QContextMenuEvent *);
    virtual void tabletEvent(QTabletEvent *);
    virtual void actionEvent(QActionEvent *);

#ifndef QT_NO_DRAGANDDROP
    virtual void dragEnterEvent(QDragEnterEvent *);
    virtual void dragMoveEvent(QDragMoveEvent *);
    virtual void dragLeaveEvent(QDragLeaveEvent *);
    virtual void dropEvent(QDropEvent *);
#endif

    virtual void showEvent(QShowEvent *);
    virtual void hideEvent(QHideEvent *);

#if defined(Q_WS_MAC)
    virtual bool macEvent(EventHandlerCallRef, EventRef);
#endif
#if defined(Q_WS_WIN)
    virtual bool winEvent(MSG *message, long *result);
#endif
#if defined(Q_WS_X11)
    virtual bool x11Event(XEvent *);
#endif
#if defined(Q_WS_QWS)
    virtual bool qwsEvent(QWSEvent *);
#endif

    // Misc. protected functions
    virtual void changeEvent(QEvent *);

    int metric(PaintDeviceMetric) const;

    virtual void inputMethodEvent(QInputMethodEvent *);
public:
    virtual QVariant inputMethodQuery(Qt::InputMethodQuery) const;
protected:
    void resetInputContext();
    void updateMicroFocus();

    void create(WId = 0, bool initializeWindow = true,
                         bool destroyOldWindow = true);
    void destroy(bool destroyWindow = true,
                 bool destroySubWindows = true);

    virtual bool focusNextPrevChild(bool next);
    inline bool focusNextChild() { return focusNextPrevChild(true); }
    inline bool focusPreviousChild() { return focusNextPrevChild(false); }

protected:
    QWidget(QWidgetPrivate &amp;d, QWidget* parent, Qt::WFlags f);
private:

    bool testAttribute_helper(Qt::WidgetAttribute) const;

    friend void qt_syncBackingStore(QWidget *);
    friend void qt_syncBackingStore(QRegion, QWidget *);
    friend void qt_syncBackingStore(QRegion, QWidget *, bool);
    friend class QBackingStoreDevice;
    friend class QWidgetBackingStore;
    friend class QApplication;
    friend class QApplicationPrivate;
    friend class QBaseApplication;
    friend class QPainter;
    friend class QPixmap; // for QPixmap::fill()
    friend class QFontMetrics;
    friend class QFontInfo;
    friend class QETWidget;
    friend class QLayout;
    friend class QWidgetItem;
    friend class QGLContext;
    friend class QX11PaintEngine;
    friend class QWin32PaintEngine;
    friend class QShortcutPrivate;

#ifdef Q_WS_MAC
    friend class QMacSavedPortInfo;
    friend class QQuickDrawPaintEngine;
    friend class QCoreGraphicsPaintEnginePrivate;
    friend QPoint qt_mac_posInWindow(const QWidget *w);
    friend bool qt_mac_is_metal(const QWidget *w);
#endif
#ifdef Q_WS_QWS
    friend class QWSManager;
    friend class QWSManagerPrivate;
    friend class QDecoration;
#endif

private:
    Q_DISABLE_COPY(QWidget)

    QWidgetData *data;

#ifdef QT3_SUPPORT
public:
    inline QT3_SUPPORT bool isUpdatesEnabled() const { return updatesEnabled(); }
    QT3_SUPPORT QStyle *setStyle(const QString&amp;);
    inline QT3_SUPPORT bool isVisibleToTLW() const;
    QT3_SUPPORT QRect visibleRect() const;
    inline QT3_SUPPORT void iconify() { showMinimized(); }
    inline QT3_SUPPORT void constPolish() const { ensurePolished(); }
    inline QT3_SUPPORT void polish() { ensurePolished(); }
    inline QT3_SUPPORT void reparent(QWidget *parent, Qt::WFlags f, const QPoint &amp;p, bool showIt=false)
    { setParent(parent, f); setGeometry(p.x(),p.y(),width(),height()); if (showIt) show(); }
    inline QT3_SUPPORT void reparent(QWidget *parent, const QPoint &amp;p, bool showIt=false)
    { setParent(parent, windowFlags() &amp; ~Qt::WindowType_Mask); setGeometry(p.x(),p.y(),width(),height()); if (showIt) show(); }
    inline QT3_SUPPORT void recreate(QWidget *parent, Qt::WFlags f, const QPoint &amp; p, bool showIt=false)
    { setParent(parent, f); setGeometry(p.x(),p.y(),width(),height()); if (showIt) show(); }
    inline QT3_SUPPORT void setSizePolicy(QSizePolicy::Policy hor, QSizePolicy::Policy ver, bool hfw)
    { QSizePolicy sp(hor, ver); sp.setHeightForWidth(hfw); setSizePolicy(sp);}
    inline QT3_SUPPORT bool hasMouse() const { return testAttribute(Qt::WA_UnderMouse); }
#ifndef QT_NO_CURSOR
    inline QT3_SUPPORT bool ownCursor() const { return testAttribute(Qt::WA_SetCursor); }
#endif
    inline QT3_SUPPORT bool ownFont() const { return testAttribute(Qt::WA_SetFont); }
    inline QT3_SUPPORT void unsetFont() { setFont(QFont()); }
    inline QT3_SUPPORT bool ownPalette() const { return testAttribute(Qt::WA_SetPalette); }
    inline QT3_SUPPORT void unsetPalette() { setPalette(QPalette()); }
    Qt::BackgroundMode QT3_SUPPORT backgroundMode() const;
    void QT3_SUPPORT setBackgroundMode(Qt::BackgroundMode, Qt::BackgroundMode = Qt::PaletteBackground);
    const QT3_SUPPORT QColor &amp;eraseColor() const;
    void QT3_SUPPORT setEraseColor(const QColor &amp;);
    const QT3_SUPPORT QColor &amp;foregroundColor() const;
    const QT3_SUPPORT QPixmap *erasePixmap() const;
    void QT3_SUPPORT setErasePixmap(const QPixmap &amp;);
    const QT3_SUPPORT QColor &amp;paletteForegroundColor() const;
    void QT3_SUPPORT setPaletteForegroundColor(const QColor &amp;);
    const QT3_SUPPORT QColor &amp;paletteBackgroundColor() const;
    void QT3_SUPPORT setPaletteBackgroundColor(const QColor &amp;);
    const QT3_SUPPORT QPixmap *paletteBackgroundPixmap() const;
    void QT3_SUPPORT setPaletteBackgroundPixmap(const QPixmap &amp;);
    const QT3_SUPPORT QBrush&amp; backgroundBrush() const;
    const QT3_SUPPORT QColor &amp;backgroundColor() const;
    const QT3_SUPPORT QPixmap *backgroundPixmap() const;
    void QT3_SUPPORT setBackgroundPixmap(const QPixmap &amp;);
    QT3_SUPPORT void setBackgroundColor(const QColor &amp;);
    QT3_SUPPORT QColorGroup colorGroup() const;
    QT3_SUPPORT QWidget *parentWidget(bool sameWindow) const;
    inline QT3_SUPPORT void setKeyCompression(bool b) { setAttribute(Qt::WA_KeyCompression, b); }
    inline QT3_SUPPORT void setFont(const QFont &amp;f, bool) { setFont(f); }
    inline QT3_SUPPORT void setPalette(const QPalette &amp;p, bool) { setPalette(p); }
    enum BackgroundOrigin { WidgetOrigin, ParentOrigin, WindowOrigin, AncestorOrigin };
    inline QT3_SUPPORT void setBackgroundOrigin(BackgroundOrigin){};
    inline QT3_SUPPORT BackgroundOrigin backgroundOrigin() const { return WindowOrigin; }
    inline QT3_SUPPORT QPoint backgroundOffset() const { return QPoint(); }
    inline QT3_SUPPORT void repaint(bool) { repaint(); }
    inline QT3_SUPPORT void repaint(int x, int y, int w, int h, bool) { repaint(x,y,w,h); }
    inline QT3_SUPPORT void repaint(const QRect &amp;r, bool) { repaint(r); }
    inline QT3_SUPPORT void repaint(const QRegion &amp;rgn, bool) { repaint(rgn); }
    QT3_SUPPORT void erase();
    inline QT3_SUPPORT void erase(int x, int y, int w, int h) { erase_helper(x, y, w, h); }
    QT3_SUPPORT void erase(const QRect &amp;);
    QT3_SUPPORT void erase(const QRegion &amp;);
    QT3_SUPPORT void drawText(const QPoint &amp;p, const QString &amp;s)
    { drawText_helper(p.x(), p.y(), s); }
    inline QT3_SUPPORT void drawText(int x, int y, const QString &amp;s)
    { drawText_helper(x, y, s); }
    QT3_SUPPORT bool close(bool);
    inline QT3_SUPPORT QWidget *childAt(int x, int y, bool includeThis) const
    {
        QWidget *w = childAt(x, y);
        return w ? w : ((includeThis &amp;&amp; rect().contains(x,y))?const_cast&lt;QWidget*>(this):0);
    }
    inline QT3_SUPPORT QWidget *childAt(const QPoint &amp;p, bool includeThis) const
    {
        QWidget *w = childAt(p);
        return w ? w : ((includeThis &amp;&amp; rect().contains(p))?const_cast&lt;QWidget*>(this):0);
    }
    inline QT3_SUPPORT void setCaption(const QString &amp;c)   { setWindowTitle(c); }
    QT3_SUPPORT void setIcon(const QPixmap &amp;i);
    inline QT3_SUPPORT void setIconText(const QString &amp;it) { setWindowIconText(it); }
    inline QT3_SUPPORT QString caption() const             { return windowTitle(); }
    QT3_SUPPORT const QPixmap *icon() const;
    inline QT3_SUPPORT QString iconText() const            { return windowIconText(); }
    inline QT3_SUPPORT void setInputMethodEnabled(bool b) { setAttribute(Qt::WA_InputMethodEnabled, b); }
    inline QT3_SUPPORT bool isInputMethodEnabled() const { return testAttribute(Qt::WA_InputMethodEnabled); }
    inline QT3_SUPPORT void setActiveWindow() { activateWindow(); }
    inline QT3_SUPPORT bool isShown() const { return !isHidden(); }
    inline QT3_SUPPORT bool isDialog() const { return windowType() == Qt::Dialog; }
    inline QT3_SUPPORT bool isPopup() const { return windowType() == Qt::Popup; }
    inline QT3_SUPPORT bool isDesktop() const { return windowType() == Qt::Desktop; }


private:
    void drawText_helper(int x, int y, const QString &amp;);
    void erase_helper(int x, int y, int w, int h);
#endif // QT3_SUPPORT

protected:
    virtual void styleChange(QStyle&amp;); // compat
    virtual void enabledChange(bool);  // compat
    virtual void paletteChange(const QPalette &amp;);  // compat
    virtual void fontChange(const QFont &amp;); // compat
    virtual void windowActivationChange(bool);  // compat
    virtual void languageChange();  // compat
};

#if defined Q_CC_MSVC &amp;&amp; _MSC_VER &lt; 1300
template &lt;> inline QWidget *qobject_cast_helper&lt;QWidget*>(QObject *o, QWidget *)
{
    if (!o || !o->isWidgetType()) return 0;
    return (QWidget*)(o);
}
#else
template &lt;> inline QWidget *qobject_cast&lt;QWidget*>(QObject *o)
{
    if (!o || !o->isWidgetType()) return 0;
    return static_cast&lt;QWidget*>(o);
}
template &lt;> inline const QWidget *qobject_cast&lt;const QWidget*>(const QObject *o)
{
    if (!o || !o->isWidgetType()) return 0;
    return static_cast&lt;const QWidget*>(o);
}
#endif

inline QWidget *QWidget::childAt(int ax, int ay) const
{ return childAt(QPoint(ax, ay)); }

inline Qt::WindowType QWidget::windowType() const
{ return static_cast&lt;Qt::WindowType>(int(data->window_flags &amp; Qt::WindowType_Mask)); }
inline Qt::WindowFlags QWidget::windowFlags() const
{ return data->window_flags; }

inline WId QWidget::winId() const
{ return data->winid; }

inline bool QWidget::isTopLevel() const
{ return (windowType() &amp; Qt::Window); }

inline bool QWidget::isWindow() const
{ return (windowType() &amp; Qt::Window); }

inline bool QWidget::isEnabled() const
{ return !testAttribute(Qt::WA_Disabled); }

inline bool QWidget::isModal() const
{ return data->window_modality != Qt::NonModal; }

inline bool QWidget::isEnabledToTLW() const
{ return isEnabled(); }

inline int QWidget::minimumWidth() const
{ return minimumSize().width(); }

inline int QWidget::minimumHeight() const
{ return minimumSize().height(); }

inline int QWidget::maximumWidth() const
{ return maximumSize().width(); }

inline int QWidget::maximumHeight() const
{ return maximumSize().height(); }

inline void QWidget::setMinimumSize(const QSize &amp;s)
{ setMinimumSize(s.width(),s.height()); }

inline void QWidget::setMaximumSize(const QSize &amp;s)
{ setMaximumSize(s.width(),s.height()); }

inline void QWidget::setSizeIncrement(const QSize &amp;s)
{ setSizeIncrement(s.width(),s.height()); }

inline void QWidget::setBaseSize(const QSize &amp;s)
{ setBaseSize(s.width(),s.height()); }

inline const QFont &amp;QWidget::font() const
{ return data->fnt; }

inline QFontMetrics QWidget::fontMetrics() const
{ return QFontMetrics(data->fnt); }

inline QFontInfo QWidget::fontInfo() const
{ return QFontInfo(data->fnt); }

inline void QWidget::setMouseTracking(bool enable)
{ setAttribute(Qt::WA_MouseTracking, enable); }

inline bool QWidget::hasMouseTracking() const
{ return testAttribute(Qt::WA_MouseTracking); }

inline bool QWidget::underMouse() const
{ return testAttribute(Qt::WA_UnderMouse); }

inline bool QWidget::updatesEnabled() const
{ return !testAttribute(Qt::WA_UpdatesDisabled); }

inline void QWidget::update(int ax, int ay, int aw, int ah)
{ update(QRect(ax, ay, aw, ah)); }

inline bool QWidget::isVisible() const
{ return testAttribute(Qt::WA_WState_Visible); }

inline bool QWidget::isHidden() const
{ return testAttribute(Qt::WA_WState_Hidden); }

inline void QWidget::move(int ax, int ay)
{ move(QPoint(ax, ay)); }

inline void QWidget::resize(int w, int h)
{ resize(QSize(w, h)); }

inline void QWidget::setGeometry(int ax, int ay, int aw, int ah)
{ setGeometry(QRect(ax, ay, aw, ah)); }

inline QRect QWidget::rect() const
{ return QRect(0,0,data->crect.width(),data->crect.height()); }

inline const QRect &amp;QWidget::geometry() const
{ return data->crect; }

inline QSize QWidget::size() const
{ return data->crect.size(); }

inline int QWidget::width() const
{ return data->crect.width(); }

inline int QWidget::height() const
{ return data->crect.height(); }

inline QWidget *QWidget::parentWidget() const
{ return static_cast&lt;QWidget *>(QObject::parent()); }

inline void QWidget::setSizePolicy(QSizePolicy::Policy hor, QSizePolicy::Policy ver)
{ setSizePolicy(QSizePolicy(hor, ver)); }

inline bool QWidget::testAttribute(Qt::WidgetAttribute attribute) const
{
    if (attribute &lt; int(8*sizeof(uint)))
        return data->widget_attributes &amp; (1&lt;&lt;attribute);
    return testAttribute_helper(attribute);
}

#ifdef QT3_SUPPORT
inline bool QWidget::isVisibleToTLW() const
{ return isVisible(); }
inline QWidget *QWidget::parentWidget(bool sameWindow) const
{
    if (sameWindow &amp;&amp; isWindow())
        return 0;
    return static_cast&lt;QWidget *>(QObject::parent());
}
inline QColorGroup QWidget::colorGroup() const
{ return QColorGroup(palette()); }
inline void QWidget::setPaletteForegroundColor(const QColor &amp;c)
{ QPalette p = palette(); p.setColor(foregroundRole(), c); setPalette(p); }
inline const QBrush&amp; QWidget::backgroundBrush() const { return palette().brush(backgroundRole()); }
inline void QWidget::setBackgroundPixmap(const QPixmap &amp;pm)
{ QPalette p = palette(); p.setBrush(backgroundRole(), QBrush(pm)); setPalette(p); }
inline const QPixmap *QWidget::backgroundPixmap() const { return 0; }
inline void QWidget::setBackgroundColor(const QColor &amp;c)
{ QPalette p = palette(); p.setColor(backgroundRole(), c); setPalette(p); }
inline const QColor &amp; QWidget::backgroundColor() const { return palette().color(backgroundRole()); }
inline const QColor &amp;QWidget::foregroundColor() const { return palette().color(foregroundRole());}
inline const QColor &amp;QWidget::eraseColor() const { return palette().color(backgroundRole()); }
inline void QWidget::setEraseColor(const QColor &amp;c)
{ QPalette p = palette(); p.setColor(backgroundRole(), c); setPalette(p); }
inline const QPixmap *QWidget::erasePixmap() const { return 0; }
inline void QWidget::setErasePixmap(const QPixmap &amp;pm)
{ QPalette p = palette(); p.setBrush(backgroundRole(), QBrush(pm)); setPalette(p); }
inline const QColor &amp;QWidget::paletteForegroundColor() const { return palette().color(foregroundRole());}
inline const QColor &amp;QWidget::paletteBackgroundColor() const { return palette().color(backgroundRole()); }
inline void QWidget::setPaletteBackgroundColor(const QColor &amp;c)
{ QPalette p = palette(); p.setColor(backgroundRole(), c); setPalette(p); }
inline const QPixmap *QWidget::paletteBackgroundPixmap() const
{ return 0; }
inline void QWidget::setPaletteBackgroundPixmap(const QPixmap &amp;pm)
{ QPalette p = palette(); p.setBrush(backgroundRole(), QBrush(pm)); setPalette(p); }
inline QT3_SUPPORT void QWidget::erase() { erase_helper(0, 0, data->crect.width(), data->crect.height()); }
inline QT3_SUPPORT void QWidget::erase(const QRect &amp;r) { erase_helper(r.x(), r.y(), r.width(), r.height()); }
#endif

#define QWIDGETSIZE_MAX ((1&lt;&lt;24)-1)

#endif // QWIDGET_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qwindowdefs.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QWINDOWDEFS_H
#define QWINDOWDEFS_H

#include &lt;QtCore/qobjectdefs.h>
#include &lt;QtCore/qnamespace.h>

QT_MODULE(Gui)

// Class forward definitions

class QPaintDevice;
class QWidget;
class QDialog;
class QColor;
class QPalette;
#ifdef QT3_SUPPORT
class QColorGroup;
#endif
class QCursor;
class QPoint;
class QSize;
class QRect;
class QPolygon;
class QPainter;
class QRegion;
class QFont;
class QFontMetrics;
class QFontInfo;
class QPen;
class QBrush;
class QMatrix;
class QPixmap;
class QBitmap;
class QMovie;
class QImage;
class QPicture;
class QPrinter;
class QTimer;
class QTime;
class QClipboard;
class QString;
class QByteArray;
class QApplication;

template&lt;typename T> class QList;
typedef QList&lt;QWidget *> QWidgetList;

// Window system dependent definitions

#if defined(Q_WS_MAC)
#if (MAC_OS_X_VERSION_MAX_ALLOWED &lt; MAC_OS_X_VERSION_10_2)
typedef struct OpaqueEventLoopTimerRef* EventLoopTimerRef;
typedef struct OpaqueMenuHandle *MenuRef;
#else
typedef struct __EventLoopTimer *EventLoopTimerRef;
typedef struct OpaqueMenuRef *MenuRef;
#endif
typedef char **MenuBarHandle;
typedef struct OpaqueDragRef *DragRef;
typedef struct OpaqueControlRef* ControlRef;
typedef ControlRef HIViewRef;
typedef struct CGImage *CGImageRef;
typedef struct CGContext *CGContextRef;
typedef struct OpaqueIconRef *IconRef;
typedef struct OpaqueWindowGroupRef *WindowGroupRef;
typedef struct OpaqueGrafPtr *CGrafPtr;
typedef struct OpaquePMPrintSession *PMPrintSession;
typedef struct OpaquePMPrintSettings *PMPrintSettings;
typedef struct OpaquePMPageFormat *PMPageFormat;
typedef struct OpaqueEventHandlerRef *EventHandlerRef;
typedef struct OpaqueEventHandlerCallRef *EventHandlerCallRef;
typedef struct OpaqueEventRef *EventRef;
typedef long int OSStatus;
typedef struct OpaqueScrapRef *ScrapRef;
typedef struct OpaqueRgnHandle *RgnHandle;
typedef struct OpaqueWindowPtr *WindowPtr;
typedef WindowPtr WindowRef;
typedef struct OpaqueGrafPtr *GWorldPtr;
typedef GWorldPtr GrafPtr;
typedef struct GDevice **GDHandle;
typedef void * MSG;
typedef int WId;
typedef struct AEDesc AppleEvent;
#endif // Q_WS_MAC

#if defined(Q_WS_WIN)
#include &lt;QtGui/qwindowdefs_win.h>
#endif // Q_WS_WIN

#if defined(Q_OS_TEMP)
#include "qwinfunctions_wce.h"
#endif // Q_OS_TEMP

#if defined(Q_WS_X11)

typedef struct _XDisplay Display;
typedef union  _XEvent XEvent;
typedef struct _XGC *GC;
typedef struct _XRegion *Region;
typedef unsigned long  WId;

#endif // Q_WS_X11

#if defined(Q_WS_QWS)

typedef unsigned long  WId;
struct QWSEvent;

#endif // Q_WS_QWS

template&lt;class K, class V> class QHash;
typedef QHash&lt;WId, QWidget *> QWidgetMapper;

#if defined(QT_NEEDS_QMAIN)
#define main qMain
#endif

// Global platform-independent types and functions

#endif // QWINDOWDEFS_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qwindowsstyle.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QWINDOWSSTYLE_H
#define QWINDOWSSTYLE_H

#include &lt;QtGui/qcommonstyle.h>

QT_MODULE(Gui)

#if !defined(QT_NO_STYLE_WINDOWS)

class QWindowsStylePrivate;

class Q_GUI_EXPORT QWindowsStyle : public QCommonStyle
{
    Q_OBJECT
public:
    QWindowsStyle();
    ~QWindowsStyle();

    void polish(QApplication*);
    void unpolish(QApplication*);

    void polish(QWidget*);
    void unpolish(QWidget*);

    void polish(QPalette &amp;);

    void drawPrimitive(PrimitiveElement pe, const QStyleOption *opt, QPainter *p,
                       const QWidget *w = 0) const;
    void drawControl(ControlElement element, const QStyleOption *opt, QPainter *p,
                     const QWidget *w = 0) const;
    QRect subElementRect(SubElement r, const QStyleOption *opt, const QWidget *widget = 0) const;
    void drawComplexControl(ComplexControl cc, const QStyleOptionComplex *opt, QPainter *p,
                            const QWidget *w = 0) const;
    QSize sizeFromContents(ContentsType ct, const QStyleOption *opt,
                           const QSize &amp;contentsSize, const QWidget *widget = 0) const;

    int pixelMetric(PixelMetric pm, const QStyleOption *option = 0, const QWidget *widget = 0) const;

    int styleHint(StyleHint hint, const QStyleOption *opt = 0, const QWidget *widget = 0,
                  QStyleHintReturn *returnData = 0) const;

    QPixmap standardPixmap(StandardPixmap standardPixmap, const QStyleOption *opt,
                           const QWidget *widget = 0) const;
protected:
    bool eventFilter(QObject *o, QEvent *e);
    void timerEvent(QTimerEvent *event);
    QWindowsStyle(QWindowsStylePrivate &amp;dd);

private:
    Q_DISABLE_COPY(QWindowsStyle)
    Q_DECLARE_PRIVATE(QWindowsStyle)
    void *reserved;
};

#endif // QT_NO_STYLE_WINDOWS

#endif // QWINDOWSSTYLE_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qwmatrix.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QWMATRIX_H
#define QWMATRIX_H

#include &lt;QtGui/qmatrix.h>

QT_MODULE(Gui)

#if defined(QT3_SUPPORT)
typedef QMatrix QWMatrix;
#endif

#endif // QWMATRIX_H
</SCREEN>
</SECT2>
<SECT2>
<TITLE>QtGui/qworkspace.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/****************************************************************************
**
** Copyright (C) 1992-2006 Trolltech AS. All rights reserved.
**
** This file is part of the LSB_Toolkit_Qt of the Qt Toolkit.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#ifndef QWORKSPACE_H
#define QWORKSPACE_H

#include &lt;QtGui/qwidget.h>

QT_MODULE(Gui)

#ifndef QT_NO_WORKSPACE

class QAction;
class QWorkspaceChild;
class QShowEvent;
class QWorkspacePrivate;

class Q_GUI_EXPORT QWorkspace : public QWidget
{
    Q_OBJECT
    Q_PROPERTY(bool scrollBarsEnabled READ scrollBarsEnabled WRITE setScrollBarsEnabled)
    Q_PROPERTY(QBrush background READ background WRITE setBackground)

public:
    explicit QWorkspace(QWidget* parent=0);
    ~QWorkspace();

    enum WindowOrder { CreationOrder, StackingOrder };

    QWidget* activeWindow() const;
    QWidgetList windowList(WindowOrder order = CreationOrder) const;

    QWidget * addWindow(QWidget *w, Qt::WFlags flags = 0);

    QSize sizeHint() const;

    bool scrollBarsEnabled() const;
    void setScrollBarsEnabled(bool enable);

#ifdef QT3_SUPPORT
    QT3_SUPPORT_CONSTRUCTOR QWorkspace(QWidget* parent, const char* name);
    QT3_SUPPORT void setPaletteBackgroundColor(const QColor &amp;);
    QT3_SUPPORT void setPaletteBackgroundPixmap(const QPixmap &amp;);
#endif

    void setBackground(const QBrush &amp;background);
    QBrush background() const;

Q_SIGNALS:
    void windowActivated(QWidget* w);

public Q_SLOTS:
    void setActiveWindow(QWidget *w);
    void cascade();
    void tile();
    void arrangeIcons();
    void closeActiveWindow();
    void closeAllWindows();
    void activateNextWindow();
    void activatePreviousWindow();

protected:
    bool event(QEvent *e);
    void paintEvent(QPaintEvent *e);
    void changeEvent(QEvent *);
    void childEvent(QChildEvent *);
    void resizeEvent(QResizeEvent *);
    bool eventFilter(QObject *, QEvent *);
    void showEvent(QShowEvent *e);
    void hideEvent(QHideEvent *e);
#ifndef QT_NO_WHEELEVENT
    void wheelEvent(QWheelEvent *e);
#endif

private:
    Q_DECLARE_PRIVATE(QWorkspace)
    Q_DISABLE_COPY(QWorkspace)
    Q_PRIVATE_SLOT(d_func(), void normalizeActiveWindow())
    Q_PRIVATE_SLOT(d_func(), void minimizeActiveWindow())
    Q_PRIVATE_SLOT(d_func(), void showOperationMenu())
    Q_PRIVATE_SLOT(d_func(), void popupOperationMenu(const QPoint&amp;))
    Q_PRIVATE_SLOT(d_func(), void operationMenuActivated(QAction *))
    Q_PRIVATE_SLOT(d_func(), void updateActions())
    Q_PRIVATE_SLOT(d_func(), void scrollBarChanged())

    friend class QWorkspaceChild;
};

#endif // QT_NO_WORKSPACE

#endif // QWORKSPACE_H
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.76 2005/12/02 01:32:08 nick Exp 0 -->
