<PART ID=tocbaselib>
<TITLE>Base Libraries</TITLE>

<CHAPTER id=baselib>
<TITLE>Libraries</TITLE>

<PARA>
An LSB-conforming implementation shall support some general-purpose
libraries. Facilities in these libraries manipulate system data files,
transfer control to the implementation, and so on.  These Base correspond
to those libraries needed to implement the Single UNIX Specification Version 2.
</PARA>

<NOTE>
<PARA>
I'd still like to come up with a better distinction between base & util
libraries. 
</PARA>
</NOTE>

<SECT1 ID=libc>
<TITLE>libc</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libc</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libc.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-131-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
RFC 1831 & 1832<FOOTNOTE ID="std-131-8">
<PARA>
RFC 1831 & 1832</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, February 1997, Networking Services (XNS), Issue 5
(ISBN: 1-85912-165-9, C523)<FOOTNOTE ID="std-131-15">
<PARA>
CAE Specification, February 1997, Networking Services (XNS), Issue 5
(ISBN: 1-85912-165-9, C523)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-131-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>System Calls</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__fxstat<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>fchmod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>killpg<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>read<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setrlimit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__getpgid</ENTRY><ENTRY>fchown<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>lchown<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>readdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setsid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__xmknod</ENTRY><ENTRY>fcntl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>link<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>readlink<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>access<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fdatasync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>lseek<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>readv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sleep<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>acct</ENTRY><ENTRY>flock</ENTRY><ENTRY>mkdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rename<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>statfs</ENTRY></ROW>
<ROW><ENTRY>alarm<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fork<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mkfifo<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rmdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>statvfs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>brk<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fstatfs</ENTRY><ENTRY>mlock<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sbrk<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>symlink<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>chdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fsync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mlockall<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_get_priority_max<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>chmod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getegid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mmap<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_get_priority_min<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sysconf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>chown<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>geteuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mprotect<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_getparam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>time<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>chroot<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>msync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_getscheduler<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>times<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>clock<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getgroups<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>munlock<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_rr_get_interval<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>truncate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>close<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getitimer<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>munlockall<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_setparam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ulimit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>closedir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getmsg<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>munmap<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_setscheduler<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>umask<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>creat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>nanosleep<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_yield<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>uname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>dup<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>nice<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>select<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>unlink<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>dup2<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>open<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setegid</ENTRY><ENTRY>utime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>execl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpriority<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>opendir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>seteuid</ENTRY><ENTRY>vfork<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>execle<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getrlimit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>pathconf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wait<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>execlp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getrusage<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>pause<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setitimer<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wait3<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>execv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getsid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>pipe<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setpgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wait4</ENTRY></ROW>
<ROW><ENTRY>execve<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>poll<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>waitid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>execvp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>initgroups</ENTRY><ENTRY>pread<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setpriority<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>waitpid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>exit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ioctl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putmsg<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setregid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>write<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fchdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>kill<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>pwrite<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setreuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>writev<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>errno<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Standard I/O</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>_IO_feof</ENTRY><ENTRY>fgetc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fseek<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>puts<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sscanf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_IO_getc</ENTRY><ENTRY>fgetpos<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fsetpos<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putw<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>telldir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_IO_putc</ENTRY><ENTRY>fgets<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ftell<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>remove<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tempnam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_IO_puts</ENTRY><ENTRY>fileno<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fwrite<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rewind<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ungetc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>clearerr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rewinddir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vfprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>ctermid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getchar<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>scanf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fclose(2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fputc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>gets<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>seekdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vsnprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fdopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fputs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getw<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setbuf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vsprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>feof<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fread<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>printf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setvbuf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>ferror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>freopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>snprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>fflush<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fscanf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putchar<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>_IO_2_1_stderr_</ENTRY><ENTRY>_IO_2_1_stdout_</ENTRY><ENTRY>stdin</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>_IO_2_1_stdin_</ENTRY><ENTRY>stderr</ENTRY><ENTRY>stdout</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Signal Handling</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__libc_current_sigrtmax<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigaltstack</ENTRY><ENTRY>sigignore<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigpending<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigsuspend<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__libc_current_sigrtmin<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigandset</ENTRY><ENTRY>siginterrupt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigprocmask<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigtimedwait<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__sigpause<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigblock</ENTRY><ENTRY>sigisemptyset</ENTRY><ENTRY>sigqueue<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigvec</ENTRY></ROW>
<ROW><ENTRY>__sigsetjmp<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigdelset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigismember<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigrelse<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigwait<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__sysv_signal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigemptyset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>siglongjmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigreturn</ENTRY><ENTRY>sigwaitinfo</ENTRY></ROW>
<ROW><ENTRY>raise<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigfillset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>signal<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>sigaction<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>siggetmask</ENTRY><ENTRY>sigorset</ENTRY><ENTRY>sigsetmask</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>sigaddset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sighold<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigpause<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigstack<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Standard Library</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__bzero<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>div<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isatty<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>labs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>random<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__errno_location</ENTRY><ENTRY>drand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isblank</ENTRY><ENTRY>ldiv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>realloc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__secure_getenv<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>ecvt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iscntrl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>lrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>remque<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>abort<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>erand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>malloc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>seed48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>abs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fcvt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isgraph<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mkstemp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setstate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>atexit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>free<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>islower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mktemp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>srand<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>atof<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getenv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isprint<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>srand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>atoi<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>initstate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ispunct<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>nrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>srandom<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>atol<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>insque<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isspace<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>perror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>basename<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isalnum<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putenv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtol<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>bsearch<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isalpha<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isxdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>qsort<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtoll</ENTRY></ROW>
<ROW><ENTRY>calloc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isascii<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>jrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rand<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtoul<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>optarg<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>opterr</ENTRY><ENTRY>optopt</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Localization Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>catclose<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>catgets<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>catopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>localeconv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setlocale<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Socket Interface</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>accept<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getpeername<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>recvfrom<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>sethostid</ENTRY><ENTRY>socketpair<FOOTNOTEREF LINKEND="std-131-15"></ENTRY></ROW>
<ROW><ENTRY>bind<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getsockname<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>recvmsg<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>sethostname</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>connect<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getsockopt<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>send<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>setsockopt<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>gethostid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>listen<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>sendmsg<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>shutdown<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>gethostname<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>recv<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>sendto<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>socket<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>RPC Interfaces</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>authdes_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>pmap_set<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcudp_enablecache<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_int<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_sizeof<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>authdes_getucred<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>pmap_unset<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcunix_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_int16_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_string<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>authdes_pk_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>registerrpc</ENTRY><ENTRY>svcunixfd_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_int32_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_u_char<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>authnone_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_exit<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_accepted_reply<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_int8_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_u_int<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>authunix_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_getreq<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_array<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_key_netstarg<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_u_long<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>authunix_create_default<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_getreqset<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_authdes_cred<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_key_netstres<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_u_short<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_broadcast<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_register<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_authdes_verf<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_keybuf<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_uint16_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_run<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_authunix_parms<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_keystatus<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_uint32_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_pcreateerror<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_sendreply<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_bool<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_long<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_uint8_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_perrno<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_unregister<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_bytes<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_netnamestr<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_union<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_perror<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_auth<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_callhdr<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_netobj<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_unixcred<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_spcreateerror<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_decode<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_callmsg<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_opaque<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_vector<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_sperrno<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_noproc<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_char<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_opaque_auth<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_void<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_sperror<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_noprog<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_cryptkeyarg<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_pmap<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_wrapstring<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clntraw_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_progvers<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_cryptkeyarg2<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_pmaplist<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrmem_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnttcp_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_systemerr<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_cryptkeyres<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_pointer<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrrec_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clntudp_bufcreate<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_weakauth<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_des_block<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_reference<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrrec_endofrecord<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clntudp_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcfd_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_double<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_rejected_reply<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrrec_eof<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clntunix_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcraw_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_enum<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_replymsg<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrrec_skiprecord<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>pmap_getmaps<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svctcp_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_float<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_rmtcall_args<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrstdio_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>pmap_getport<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcudp_bufcreate<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_free<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_rmtcallres<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>pmap_rmtcall<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcudp_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_getcredres<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_short<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>rpc_createerr<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_fdset</ENTRY><ENTRY>svcauthdes_stats</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Wide Characters</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__mbrlen<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbrlen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vwprintf</ENTRY><ENTRY>wcsncat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstoll</ENTRY></ROW>
<ROW><ENTRY>__wcstod_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbrtowc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vwscanf</ENTRY><ENTRY>wcsncmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstombs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__wcstof_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbsinit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcpcpy</ENTRY><ENTRY>wcsncpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstoq</ENTRY></ROW>
<ROW><ENTRY>__wcstol_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbsnrtowcs</ENTRY><ENTRY>wcpncpy</ENTRY><ENTRY>wcsnlen</ENTRY><ENTRY>wcstoul<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__wcstold_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbsrtowcs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcrtomb<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsnrtombs</ENTRY><ENTRY>wcstoull</ENTRY></ROW>
<ROW><ENTRY>__wcstoll_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbstowcs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcscasecmp</ENTRY><ENTRY>wcspbrk</ENTRY><ENTRY>wcstoumax</ENTRY></ROW>
<ROW><ENTRY>__wcstoul_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbtowc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcscat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsrchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstouq</ENTRY></ROW>
<ROW><ENTRY>__wcstoull_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>putwc</ENTRY><ENTRY>wcschr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsrtombs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcswcs</ENTRY></ROW>
<ROW><ENTRY>btowc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putwchar</ENTRY><ENTRY>wcscmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcswidth<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fgetws</ENTRY><ENTRY>swprintf</ENTRY><ENTRY>wcscoll<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsstr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsxfrm<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fputwc</ENTRY><ENTRY>swscanf</ENTRY><ENTRY>wcscpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wctob<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fputws</ENTRY><ENTRY>towlower</ENTRY><ENTRY>wcscspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstof</ENTRY><ENTRY>wctomb<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fwide</ENTRY><ENTRY>towupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsdup</ENTRY><ENTRY>wcstoimax</ENTRY><ENTRY>wctrans<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fwprintf</ENTRY><ENTRY>ungetwc</ENTRY><ENTRY>wcsftime</ENTRY><ENTRY>wcstok<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wctype<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fwscanf</ENTRY><ENTRY>vfwprintf</ENTRY><ENTRY>wcslen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstol<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcwidth<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>mblen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vswscanf</ENTRY><ENTRY>wcsncasecmp</ENTRY><ENTRY>wcstold</ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>String Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__strdup<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memccpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcoll<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strncmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtoimax</ENTRY></ROW>
<ROW><ENTRY>__strtof_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strncpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtok<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__strtok_r<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memcmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strndup</ENTRY><ENTRY>strtok_r</ENTRY></ROW>
<ROW><ENTRY>__strtold_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memcpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strdup<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strnlen</ENTRY><ENTRY>strtold</ENTRY></ROW>
<ROW><ENTRY>__strtoll_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memmove<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strerror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strpbrk<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtoll</ENTRY></ROW>
<ROW><ENTRY>__strtoul_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strerror_r</ENTRY><ENTRY>strptime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtoq</ENTRY></ROW>
<ROW><ENTRY>__strtoull_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>rindex<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strfmon<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strrchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtoull</ENTRY></ROW>
<ROW><ENTRY>bcmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcasecmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strfry</ENTRY><ENTRY>strsep</ENTRY><ENTRY>strtoumax</ENTRY></ROW>
<ROW><ENTRY>bcopy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcasestr</ENTRY><ENTRY>strftime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strsignal</ENTRY><ENTRY>strtouq</ENTRY></ROW>
<ROW><ENTRY>bzero<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strlen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strverscmp</ENTRY></ROW>
<ROW><ENTRY>ffs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strncasecmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strstr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strxfrm<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>index<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strncat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtof</ENTRY><ENTRY>swab<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>IPC Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>msgctl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>msgsnd<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>semop<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmdt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>msgget<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>semctl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmget<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>msgrcv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>semget<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmctl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Regular Expressions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>re_comp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>re_match</ENTRY><ENTRY>re_set_registers</ENTRY><ENTRY>regexec<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>re_compile_fastmap</ENTRY><ENTRY>re_match_2</ENTRY><ENTRY>re_set_syntax</ENTRY><ENTRY>regfree<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>re_compile_pattern</ENTRY><ENTRY>re_search</ENTRY><ENTRY>regcomp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>res_init</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>re_exec<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>re_search_2</ENTRY><ENTRY>regerror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rexec</ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>loc1<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>locs</ENTRY><ENTRY>re_syntax_options</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>loc2</ENTRY><ENTRY>re_max_failures</ENTRY><ENTRY>rexecoptions</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Character Type Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__ctype_get_mb_cur_max<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>isgraph<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswalnum<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswgraph<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswxdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>isalnum<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>islower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswalpha<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswlower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isxdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>isalpha<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isprint<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswblank</ENTRY><ENTRY>iswprint<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tolower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>isascii<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ispunct<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswcntrl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswpunct<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>toupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>iscntrl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isspace<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswctype</ENTRY><ENTRY>iswspace<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>isdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Time Function</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>asctime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>daylight<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>gmtime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mktime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tzname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>ctime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>difftime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>localtime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>timezone</ENTRY><ENTRY>tzset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Terminal Interface Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>cfgetispeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>cfsetospeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcflow<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcgetpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcsetattr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>cfgetospeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>cfsetspeed</ENTRY><ENTRY>tcflush<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcgetsid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcsetpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>cfsetispeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcdrain<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcgetattr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcsendbreak<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>System Database Interface</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>endaliasent</ENTRY><ENTRY>ether_hostton</ENTRY><ENTRY>gethostbyaddr<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getrpcbynumber</ENTRY><ENTRY>setmntent</ENTRY></ROW>
<ROW><ENTRY>endfsent</ENTRY><ENTRY>ether_line</ENTRY><ENTRY>gethostbyname</ENTRY><ENTRY>getrpcent</ENTRY><ENTRY>setnetent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY></ROW>
<ROW><ENTRY>endhostent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>ether_ntoa</ENTRY><ENTRY>gethostent</ENTRY><ENTRY>getrpcport</ENTRY><ENTRY>setnetgrent</ENTRY></ROW>
<ROW><ENTRY>endmntent</ENTRY><ENTRY>ether_ntoa_r</ENTRY><ENTRY>getmntent</ENTRY><ENTRY>getservbyname</ENTRY><ENTRY>setprotoent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY></ROW>
<ROW><ENTRY>endnetent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>ether_ntohost</ENTRY><ENTRY>getnetbyaddr<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getservbyport<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>setrpcent</ENTRY></ROW>
<ROW><ENTRY>endnetgrent</ENTRY><ENTRY>fgetgrent</ENTRY><ENTRY>getnetbyname</ENTRY><ENTRY>getservent</ENTRY><ENTRY>setservent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY></ROW>
<ROW><ENTRY>endprotoent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>fgetspent</ENTRY><ENTRY>getnetent</ENTRY><ENTRY>getspent</ENTRY><ENTRY>setspent</ENTRY></ROW>
<ROW><ENTRY>endrpcent</ENTRY><ENTRY>getaliasbyname</ENTRY><ENTRY>getnetgrent</ENTRY><ENTRY>getspnam</ENTRY><ENTRY>setttyent</ENTRY></ROW>
<ROW><ENTRY>endservent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getaliasent</ENTRY><ENTRY>getprotobyname</ENTRY><ENTRY>getttyent</ENTRY><ENTRY>setutent</ENTRY></ROW>
<ROW><ENTRY>endspent</ENTRY><ENTRY>getfsent</ENTRY><ENTRY>getprotobynumber<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getutent</ENTRY><ENTRY>setutxent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>endttyent</ENTRY><ENTRY>getgrgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getprotoent</ENTRY><ENTRY>getutxent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>endutent</ENTRY><ENTRY>getgrgid_r</ENTRY><ENTRY>getpwnam_r</ENTRY><ENTRY>setaliasent</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>endutxent</ENTRY><ENTRY>getgrnam</ENTRY><ENTRY>getpwuid_r</ENTRY><ENTRY>setfsent</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>ether_aton</ENTRY><ENTRY>getgrnam_r</ENTRY><ENTRY>getrpcbyname</ENTRY><ENTRY>sethostent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>User/Group Management</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>endgrent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getgrent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpwuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setpwent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>endpwent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpwent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setgrent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Asynchronous I/O</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>aio_cancel<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>aio_error64</ENTRY><ENTRY>aio_init</ENTRY><ENTRY>aio_return<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>aio_write<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>aio_cancel64</ENTRY><ENTRY>aio_fsync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>aio_read<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>aio_return64</ENTRY><ENTRY>aio_write64</ENTRY></ROW>
<ROW><ENTRY>aio_error<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>aio_fsync64</ENTRY><ENTRY>aio_read64</ENTRY><ENTRY>aio_suspend<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libc-ddefs>
<TITLE> Data Definitions for libc</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>aio.h</TITLE>
<PARA>
</PARA>
<SCREEN>
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ctype.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int isalnum(int);
int isalpha(int);
int isascii(int);
int iscntrl(int);
int isdigit(int);
int isgraph(int);
int islower(int);
int isprint(int);
int ispunct(int);
int isspace(int);
int isupper(int);
int isxdigit(int);
int tolower(int);
int toupper(int);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>dirent.h</TITLE>
<PARA>
</PARA>
<SCREEN>

void rewinddir(DIR);
void seekdir(DIR, long);
long telldir(DIR);
int closedir(DIR);
DIR opendir(char);
dirent readdir(DIR);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>fcntl.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define O_ACCMODE	  0003
#define O_RDONLY	    00
#define O_WRONLY	    01
#define O_RDWR		    02
#define O_CREAT		  0100	/* not fcntl */
#define O_EXCL		  0200	/* not fcntl */
#define O_NOCTTY	  0400	/* not fcntl */
#define O_TRUNC		 01000	/* not fcntl */
#define O_APPEND	 02000
#define O_NONBLOCK	 04000
#define O_NDELAY	O_NONBLOCK
#define O_SYNC		010000
#define O_FSYNC		O_SYNC
#define O_ASYNC		020000

#define F_DUPFD		0	/* dup */
#define F_GETFD		1	/* get f_flags */
#define F_SETFD		2	/* set f_flags */
#define F_GETFL		3	/* more flags (cloexec) */
#define F_SETFL		4
#define F_GETLK		5
#define F_SETLK		6
#define F_SETLKW	7

/* for F_[GET|SET]FL */
#define FD_CLOEXEC	1	/* actually anything with low bit set goes */

/* for posix fcntl() and lockf() */
#define F_RDLCK		0
#define F_WRLCK		1
#define F_UNLCK		2

struct flock {
	short int l_type;
	short int l_whence;
	off_t l_start;
	off_t l_len;
	pid_t l_pid;
};

int creat(char, __mode_t);
int fcntl(int, int, ...);
int open(char, int, ...);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>grp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

void endgrent(void);
group fgetgrent();
group getgrent(void);
group getgrgid(__gid_t);
group getgrnam(char);
int initgroups(char, __gid_t);
void setgrent(void);
int getgrgid_r(__gid_t, struct group, char, size_t, struct group);
int getgrnam_r(char, struct group, char, size_t, struct group);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>inttypes.h</TITLE>
<PARA>
</PARA>
<SCREEN>
</SCREEN>
</SECT2>
<SECT2>
<TITLE>locale.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define LC_CTYPE        0
#define LC_NUMERIC      1
#define LC_TIME         2
#define LC_COLLATE      3
#define LC_MONETARY     4
#define LC_MESSAGES     5
#define	LC_ALL		6


/* Structure giving information about numeric and monetary notation.  */
struct lconv
{
  /* Numeric (non-monetary) information.  */

  char *decimal_point;		/* Decimal point character.  */
  char *thousands_sep;		/* Thousands separator.  */
  /* Each element is the number of digits in each group;
     elements with higher indices are farther left.
     An element with value CHAR_MAX means that no further grouping is done.
     An element with value 0 means that the previous element is used
     for all groups farther left.  */
  char *grouping;

  /* Monetary information.  */

  /* First three chars are a currency symbol from ISO 4217.
     Fourth char is the separator.  Fifth char is '\0'.  */
  char *int_curr_symbol;
  char *currency_symbol;	/* Local currency symbol.  */
  char *mon_decimal_point;	/* Decimal point character.  */
  char *mon_thousands_sep;	/* Thousands separator.  */
  char *mon_grouping;		/* Like grouping element (above).  */
  char *positive_sign;		/* Sign for positive values.  */
  char *negative_sign;		/* Sign for negative values.  */
  char int_frac_digits;		/* Int'l fractional digits.  */
  char frac_digits;		/* Local fractional digits.  */
  /* 1 if currency_symbol precedes a positive value, 0 if succeeds.  */
  char p_cs_precedes;
  /* 1 iff a space separates currency_symbol from a positive value.  */
  char p_sep_by_space;
  /* 1 if currency_symbol precedes a negative value, 0 if succeeds.  */
  char n_cs_precedes;
  /* 1 iff a space separates currency_symbol from a negative value.  */
  char n_sep_by_space;
  /* Positive and negative sign positions:
     0 Parentheses surround the quantity and currency_symbol.
     1 The sign string precedes the quantity and currency_symbol.
     2 The sign string follows the quantity and currency_symbol.
     3 The sign string immediately precedes the currency_symbol.
     4 The sign string immediately follows the currency_symbol.  */
  char p_sign_posn;
  char n_sign_posn;
};

char setlocale(int, char);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>monetary.h</TITLE>
<PARA>
</PARA>
<SCREEN>

ssize_t strfmon(char, size_t, char, ...);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>nl_types.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define NL_SETD 1


int catclose(nl_catd);
char catgets(nl_catd, int, int, char);
nl_catd catopen(char, int);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>pwd.h</TITLE>
<PARA>
</PARA>
<SCREEN>

void endpwent(void);
passwd getpwent(void);
passwd getpwnam(char);
passwd getpwuid(__uid_t);
void setpwent(void);
int getpwnam_r(char, struct passwd, char, size_t, struct passwd);
int getpwuid_r(__uid_t, struct passwd, char, size_t, struct passwd);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>regex.h</TITLE>
<PARA>
</PARA>
<SCREEN>
</SCREEN>
</SECT2>
<SECT2>
<TITLE>regexp.h</TITLE>
<PARA>
</PARA>
<SCREEN>


</SCREEN>
</SECT2>
<SECT2>
<TITLE>sched.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int sched_get_priority_max(int);
int sched_get_priority_min(int);
int sched_getparam(__pid_t, struct sched_param);
int sched_getscheduler(__pid_t);
int sched_rr_get_interval(__pid_t, struct timespec);
int sched_setparam(__pid_t, struct sched_param);
int sched_setscheduler(__pid_t, int, struct sched_param);
int sched_yield(void);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>search.h</TITLE>
<PARA>
</PARA>
<SCREEN>

void insque(void, void);
void remque(void);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>setjmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int __sigsetjmp(jmp_buf, int);
void siglongjmp(sigjmp_buf, int);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>signal.h</TITLE>
<PARA>
</PARA>
<SCREEN>
/* Signals.  */
#define	SIGHUP		1	/* Hangup (POSIX).  */
#define	SIGINT		2	/* Interrupt (ANSI).  */
#define	SIGQUIT		3	/* Quit (POSIX).  */
#define	SIGILL		4	/* Illegal instruction (ANSI).  */
#define	SIGTRAP		5	/* Trace trap (POSIX).  */
#define	SIGABRT		6	/* Abort (ANSI).  */
#define	SIGIOT		6	/* IOT trap (4.2 BSD).  */
#define	SIGBUS		7	/* BUS error (4.2 BSD).  */
#define	SIGFPE		8	/* Floating-point exception (ANSI).  */
#define	SIGKILL		9	/* Kill, unblockable (POSIX).  */
#define	SIGUSR1		10	/* User-defined signal 1 (POSIX).  */
#define	SIGSEGV		11	/* Segmentation violation (ANSI).  */
#define	SIGUSR2		12	/* User-defined signal 2 (POSIX).  */
#define	SIGPIPE		13	/* Broken pipe (POSIX).  */
#define	SIGALRM		14	/* Alarm clock (POSIX).  */
#define	SIGTERM		15	/* Termination (ANSI).  */
#define	SIGSTKFLT	16	/* ??? */
#define	SIGCLD		SIGCHLD	/* Same as SIGCHLD (System V).  */
#define	SIGCHLD		17	/* Child status has changed (POSIX).  */
#define	SIGCONT		18	/* Continue (POSIX).  */
#define	SIGSTOP		19	/* Stop, unblockable (POSIX).  */
#define	SIGTSTP		20	/* Keyboard stop (POSIX).  */
#define	SIGTTIN		21	/* Background read from tty (POSIX).  */
#define	SIGTTOU		22	/* Background write to tty (POSIX).  */
#define	SIGURG		23	/* Urgent condition on socket (4.2 BSD).  */
#define	SIGXCPU		24	/* CPU limit exceeded (4.2 BSD).  */
#define	SIGXFSZ		25	/* File size limit exceeded (4.2 BSD).  */
#define	SIGVTALRM	26	/* Virtual alarm clock (4.2 BSD).  */
#define	SIGPROF		27	/* Profiling alarm clock (4.2 BSD).  */
#define	SIGWINCH	28	/* Window size change (4.3 BSD, Sun).  */
#define	SIGPOLL		SIGIO	/* Pollable event occurred (System V).  */
#define	SIGIO		29	/* I/O now possible (4.2 BSD).  */
#define	SIGPWR		30	/* Power failure restart (System V).  */
#define SIGUNUSED	31

#define	_NSIG		32	/* Biggest signal number + 1.  */

#define SIG_DFL		((__sighandler_t) 0)
#define SIG_IGN 	((__sighandler_t) 1)
#define SIG_ERR 	((__sighandler_t) -1)

#define SIG_BLOCK       0
#define SIG_UNBLOCK     1

#define SA_NOCLDSTOP    1
#define SIG_SETMASK     2


int __libc_current_sigrtmax(void);
int __libc_current_sigrtmin(void);
int __sigpause(int, int);
__sighandler_t __sysv_signal(int, __sighandler_t);
int killpg(__pid_t, int);
int raise(int);
int sigaddset(sigset_t, int);
int sigdelset(sigset_t, int);
int sigemptyset(sigset_t);
int sigfillset(sigset_t);
int siggetmask(void);
int siginterrupt(int, int);
int sigismember(sigset_t, int);
int sigpending(sigset_t);
int sigstack(struct sigstack, struct sigstack);
int sigaction(int, struct sigaction, struct sigaction);
int sigwait(sigset_t, int);
int kill(__pid_t, int);
int sigaltstack(struct sigaltstack, struct sigaltstack);
int sigblock(int);
__sighandler_t signal(int, __sighandler_t);
int sigpause(int);
int sigprocmask(int, sigset_t, sigset_t);
int sigreturn(struct sigcontext);
int sigsetmask(int);
int sigsuspend(sigset_t);
int sigvec(int, struct sigvec, struct sigvec);
int sigqueue(__pid_t, int, , enum sigval);
int sigwaitinfo(sigset_t, siginfo_t);
int sigtimedwait(sigset_t, siginfo_t, struct timespec);
__sighandler_t ssignal(int, __sighandler_t);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdio.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define NULL    	0

#define BUFSIZ  	8192
#define EOF     	(-1)
#define FOPEN_MAX       255

#define L_ctermid       9
#define L_cuserid       9
#define L_tmpnam        9
#define P_tmpdir        "/tmp"

#define SEEK_SET        0
#define SEEK_CUR        1
#define SEEK_END        2

#define _IOFBF          0
#define _IOLBF          1
#define _IONBF          2

#define TMP_MAX 	238328

extern FILE *stderr;
extern FILE *stdin;
extern FILE *stdout;


void clearerr(FILE);
char ctermid(char);
int fclose(FILE);
FILE fdopen(int, char);
int fileno(FILE);
FILE fopen(char, char);
int fprintf(FILE, char, ...);
int fputc(int, FILE);
FILE freopen(char, char, FILE);
int fscanf(FILE, char, ...);
int fseek(FILE, long, int);
int getchar(void);
int getw(FILE);
int pclose(FILE);
void perror(char);
FILE popen(char, char);
int printf(char, ...);
int putchar(int);
int putw(int, FILE);
int remove(char);
int rename(char, char);
void rewind(FILE);
int scanf(char, ...);
void setbuf(FILE, char);
int sprintf(char, char, ...);
int sscanf(char, char, ...);
char tempnam(char, char);
FILE tmpfile(void);
char tmpnam(char);
char tmpnam_r(char);
int vfprintf(FILE, char, __gnuc_va_list);
int vprintf(char, __gnuc_va_list);
int feof(FILE);
int ferror(FILE);
int fflush(FILE);
int fgetc(FILE);
int fgetpos(FILE, fpos_t);
char fgets(char, int, FILE);
int fputs(char, FILE);
size_t fread(void, size_t, size_t, FILE);
int fsetpos(FILE, fpos_t);
long ftell(FILE);
size_t fwrite(void, size_t, size_t, FILE);
int getc(FILE);
char gets(char);
int putc(int, FILE);
int puts(char);
int setvbuf(FILE, char, int, size_t);
int snprintf(char, size_t, char, ...);
int ungetc(int, FILE);
int vsnprintf(char, size_t, char, __gnuc_va_list);
int vsprintf(char, char, __gnuc_va_list);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define EXIT_FAILURE    1
#define EXIT_SUCCESS    0
#define NULL    	0
#define RAND_MAX        2147483647


char __secure_getenv(char);
float __strtof_internal(char, char, int);
long double __strtold_internal(char, char, int);
long long __strtoll_internal(char, char, int, int);
unsigned long long __strtoull_internal(char, char, int, int);
void abort(void);
int abs(int);
int atexit(void ();
double atof(char);
int atoi(char);
long atol(char);
void bsearch(void, void, size_t, size_t, __compar_fn_t);
div_t div(int, int);
double drand48(void);
char ecvt(double, int, int, int);
double erand48(unsigned short);
void exit(int);
char fcvt(double, int, int, int);
char gcvt(double, int, char);
char getenv(char);
long jrand48(unsigned short);
long labs(long);
ldiv_t ldiv(long, long);
long lrand48(void);
int mblen(char, size_t);
size_t mbstowcs(wchar_t, char, size_t);
int mbtowc(wchar_t, char, size_t);
int mkstemp(char);
char mktemp(char);
long mrand48(void);
long nrand48(unsigned short);
int putenv(char);
void qsort(void, size_t, size_t, __compar_fn_t);
int rand(void);
unsigned short seed48(unsigned short);
void srand48(long);
size_t wcstombs(char, wchar_t, size_t);
int wctomb(char, wchar_t);
void calloc(size_t, size_t);
void free(void);
void initstate(unsigned int, void, size_t);
void malloc(size_t);
void realloc(void, size_t);
void setstate(void);
void srand(unsigned int);
void srandom(unsigned int);
double strtod(char, char);
long strtol(char, char, int);
long long strtoll(char, char, int);
long long strtoq(char, char, int);
unsigned long strtoul(char, char, int);
unsigned long long strtoull(char, char, int);
unsigned long long strtouq(char, char, int);
size_t __ctype_get_mb_cur_max(void);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>string.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define NULL    0

void __bzero(void, size_t);
char __strdup(char);
char __strtok_r(char, char, char);
void bcopy(void, void, size_t);
void memchr(void, int, size_t);
int memcmp(void, void, size_t);
void memcpy(void, void, size_t);
void memmove(void, void, size_t);
void memset(void, int, size_t);
char strcat(char, char);
char strchr(char, int);
int strcmp(char, char);
int strcoll(char, char);
char strcpy(char, char);
size_t strcspn(char, char);
char strerror(int);
size_t strlen(char);
char strncat(char, char, size_t);
int strncmp(char, char, size_t);
char strncpy(char, char, size_t);
char strpbrk(char, char);
char strrchr(char, int);
size_t strspn(char, char);
char strstr(char, char);
char strtok(char, char);
size_t strxfrm(char, char, size_t);
int bcmp(void, void, size_t);
void bzero(void, size_t);
int ffs(int);
char -1;
void memccpy(void, void, int, size_t);
char rindex(char, int);
int strcasecmp(char, char);
char strdup(char);
int strncasecmp(char, char, size_t);
char strsep(char, char);
char strerror_r(int, char, size_t);
char strtok_r(char, char, char);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/mman.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int madvise(void, size_t, int);
int msync(void, size_t, int);
int mlock(void, size_t);
int mlockall(int);
void mmap(void, size_t, int, int, int, __off_t);
int mprotect(void, size_t, int);
int munlock(void, size_t);
int munlockall(void);
int munmap(void, size_t);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/msg.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int msgctl(int, int, struct msqid_ds);
int msgget(int);
int msgrcv(int, void, size_t, long, int);
int msgsnd(int, void, size_t, int);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/resource.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int getpriority(enum, enum __priority_which, int);
int setpriority(enum, enum __priority_which, int, int);
int setrlimit(enum, enum __rlimit_resource, struct rlimit);
int getrlimit(enum, enum __rlimit_resource, struct rlimit);
int getrusage(enum, enum __rusage_who, struct rusage);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/sem.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int semctl(int, int, int, ...);
int semget(int, int);
int semop(int, struct sembuf, unsigned int);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/shm.h</TITLE>
<PARA>
</PARA>
<SCREEN>

void shmat(int, void, int);
int shmctl(int, int, struct shmid_ds);
int shmdt(void);
int shmget(size_t, int);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/socket.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int bind(int, __CONST_SOCKADDR_ARG, socklen_t);
int getsockname(int, __SOCKADDR_ARG, socklen_t);
int listen(int, unsigned int);
int setsockopt(int, int, int, void, socklen_t);
int accept(int, __SOCKADDR_ARG, socklen_t);
int connect(int, __CONST_SOCKADDR_ARG, socklen_t);
int recv(int, void, size_t, int);
int recvfrom(int, void, size_t, int, __SOCKADDR_ARG, socklen_t);
int recvmsg(int, struct msghdr, int);
int send(int, void, size_t, int);
int sendmsg(int, struct msghdr, int);
int sendto(int, void, size_t, int, __CONST_SOCKADDR_ARG, socklen_t);
int getpeername(int, __SOCKADDR_ARG, socklen_t);
int getsockopt(int, int, int, void, socklen_t);
int shutdown(int, int);
int socket(int, int, int);
int socketpair(int, int, int, int);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/stat.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define S_IRGRP 00040
#define S_IROTH 00004
#define S_IRUSR 00400
#define S_IRWXG 00070
#define S_IRWXO 00007
#define S_IRWXU 00700
#define S_ISBLK(x)      (((x) & S_IFMT) == S_IFBLK)
#define S_ISCHR(x)      (((x) & S_IFMT) == S_IFCHR)
#define S_ISDIR(x)      (((x) & S_IFMT) == S_IFDIR)
#define S_ISFIFO(x)     (((x) & S_IFMT) == S_IFIFO)
#define S_ISGID 0002000
#define S_ISREG(x)      (((x) & S_IFMT) == S_IFREG)
#define S_ISUID 0004000
#define S_IWGRP 00020
#define S_IWOTH 00002
#define S_IWUSR 00200
#define S_IXGRP 00010
#define S_IXOTH 00001
#define S_IXUSR 00100
#define S_IFBLK 0060000
#define S_IFCHR 0020000
#define S_IFDIR 0040000
#define S_IFIFO 0010000
#define S_IFMT  0170000
#define S_IFREG 0100000


int __fxstat(int, int, struct stat);
int __xmknod(int, char, __mode_t, __dev_t);
int mkfifo(char, __mode_t);
int chmod(char, __mode_t);
int fchmod(int, __mode_t);
int mkdir(char, __mode_t);
__mode_t umask(__mode_t);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/times.h</TITLE>
<PARA>
</PARA>
<SCREEN>


</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/utsname.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int uname(struct utsname);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/wait.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define WEXITSTATUS(s)  (((s) & 0xff00) >> 8)
#define WIFEXITED(s)    ( (s) & 0xff )
#define WIFSTOPPED(s)   (((status) & 0xff) == 0x7f)
#define WIFSIGNALED(s)  (!WIFSTOPPED(s) && !WIFEXITED(s))

#define WNOHANG         1
#define WUNTRACED       2

#define WSTOPSIG(s)     (-1)
#define WTERMSIG(s)     ((s) & 0x7f)


int waitid(idtype_t, __id_t, siginfo_t, int);
__pid_t wait(__WAIT_STATUS);
__pid_t waitpid(__pid_t, int, int);
__pid_t wait3(__WAIT_STATUS, int, struct rusage);
__pid_t wait4(__pid_t, __WAIT_STATUS, int, struct rusage);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>termios.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define B0      0000000
#define B50     0000001
#define B75     0000002
#define B110    0000003
#define B134    0000004
#define B150    0000005
#define B200    0000006
#define B300    0000007
#define B600    0000010
#define B1200   0000011
#define B1800   0000012
#define B2400   0000013
#define B4800   0000014
#define B9600   0000015
#define B38400  0000017
#define B19200  0000016

#define CSIZE   0000060
#define CS5     0000000
#define CS6     0000020
#define CS7     0000040
#define CS8     0000060 

#define CSTOPB  0000100
#define CREAD   0000200
#define PARENB  0000400
#define PARODD  0001000
#define HUPCL   0002000
#define CLOCAL  0004000

/* c_iflag bits */
#define IGNBRK  0000001
#define BRKINT  0000002
#define IGNPAR  0000004
#define PARMRK  0000010
#define INPCK   0000020
#define ISTRIP  0000040
#define INLCR   0000100
#define IGNCR   0000200
#define ICRNL   0000400
#define IXON    0002000
#define IXOFF   0010000

/* c_oflag bits */
#define OPOST   0000001

/* c_lflag bits */
#define ISIG    0000001
#define ICANON  0000002
#define ECHO    0000010
#define ECHOE   0000020
#define ECHOK   0000040
#define ECHONL  0000100
#define NOFLSH  0000200
#define TOSTOP  0000400
#define IEXTEN  0100000

/* c_cc */
#define VINTR   0
#define VQUIT   1
#define VERASE  2
#define VKILL   3
#define VEOF    4
#define VTIME   5
#define VMIN    6
#define VSTART  8
#define VSTOP   9
#define VSUSP   10
#define VEOL    11

#define NCCS    32

/* tflow() */
#define TCOOFF  0
#define TCOON   1
#define TCIOFF  2
#define TCION   3

/* tcflush() */
#define TCIFLUSH        0
#define TCOFLUSH        1
#define TCIOFLUSH       2

/* tcsetattr */
#define TCSANOW 	0
#define TCSADRAIN       1
#define TCSAFLUSH       2

typedef unsigned char cc_t;
typedef unsigned int  tcflag_t;


speed_t cfgetispeed(struct termios);
speed_t cfgetospeed(struct termios);
int cfsetispeed(struct termios, speed_t);
int cfsetospeed(struct termios, speed_t);
int cfsetspeed(struct termios, speed_t);
int tcflow(int, int);
int tcflush(int, int);
int tcsendbreak(int, int);
int tcsetattr(int, int, struct termios);
int tcdrain(int);
int tcgetattr(int, struct termios);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>time.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define NULL    0

char asctime(struct tm);
clock_t clock(void);
char ctime(time_t);
double difftime(time_t, time_t);
tm gmtime(time_t);
tm localtime(time_t);
time_t mktime(struct tm);
size_t strftime(char, size_t, char, struct tm);
time_t time(time_t);
int nanosleep(struct timespec, struct timespec);
int daylight();
long timezone();
char tzname();
void tzset(void);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>ulimit.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define UL_GETFSIZE     (-1)	/* unable to find these */
#define UL_SETFSIZE     (-1)	/* unable to find these */

long ulimit(int, ...);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>unistd.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define	NULL	0

#define	_XOPEN_CRYPT	1
#define	_XOPEN_ENH_I18N	1
#define	STDIN_FILENO	0	/* Standard input.  */
#define	STDOUT_FILENO	1	/* Standard output.  */
#define	STDERR_FILENO	2	/* Standard error output.  */
#define	R_OK	4		/* Test for read permission.  */
#define	W_OK	2		/* Test for write permission.  */
#define	X_OK	1		/* Test for execute permission.  */
#define	F_OK	0		/* Test for existence.  */
#define	SEEK_SET	0	/* Seek from beginning of file.  */
#define	SEEK_CUR	1	/* Seek from current position.  */
#define	SEEK_END	2	/* Seek from end of file.  */

#define	L_SET		SEEK_SET
#define	L_INCR		SEEK_CUR
#define	L_XTND		SEEK_END
#define F_ULOCK 0       /* Unlock a previously locked region.  */
#define F_LOCK  1       /* Lock a region for exclusive use.  */
#define F_TLOCK 2       /* Test and lock a region for exclusive use.  */
#define F_TEST  3       /* Test a region for other processes locks.  */
#define	__USE_ANSI	1
#define	_POSIX_SOURCE	1
#ifdef _POSIX_C_SOURCE
#define	_POSIX_C_SOURCE	199506L
#endif
#define	_XOPEN_SOURCE	1
#define	_XOPEN_SOURCE_EXTENDED	1
#define	_BSD_SOURCE	1
#define	_SVID_SOURCE	1
#define	_BSD_SOURCE	1
#define	_SVID_SOURCE	1
#define	__USE_POSIX	1
#define	__USE_POSIX2	1
#define	__USE_POSIX199309	1
#define	__USE_XOPEN	1
#define	__USE_XOPEN_EXTENDED	1
#define	__USE_MISC	1
#define	__USE_BSD	1
#define	__USE_SVID	1
#define	__USE_GNU	1
#define __USE_REENTRANT	1
#define __GNU_LIBRARY__ 6
#define	__GLIBC__	2
#define	__GLIBC_MINOR__	0

/* Version Test Macros */

#define _POSIX_VERSION		199506L	/* version of ISO POSIX-1 */
#undef _POSIX2_VERSION
#define _POSIX2_C_VERSION	199209L /* version of ISO POSIX-2 */

#define _XOPEN_VERSION		500	/* version pf XPG */
#define _XOPEN_XCU_VERSION	4

#define	_POSIX2_C_BIND		1
#define _POSIX2_LOCALEDEF       1


/*        X/Open Portability Guide, Volume 2, January 1987, XVS System
          Calls and Libraries (ISBN: 0-444-70175-3). */
#define _XOPEN_XPG2	1

     _XOPEN_XPG3

/*        X/Open Specification, February 1992, System Interfaces and
          Headers, Issue 3 (ISBN: 1-872630-37-5, C212); this
          specification was formerly X/Open Portability Guide, Issue 3,
          Volume 2, January 1989, XSI System Interface and Headers
          (ISBN: 0-13-685843-0, XO/XPG/89/003). */
#define _XOPEN_XPG3	1

/*        X/Open CAE Specification, July 1992, System Interfaces and
          Headers, Issue 4 (ISBN: 1-872630-47-2, C202). */
#define _XOPEN_XPG4	1

/*        X/Open CAE Specification, January 1997, System Interfaces and
          Headers, Issue 5 (ISBN: 1-85912-181-0, C606). */
#define _XOPEN_UNIX	1

/*   Mandatory Symbolic Constants

     Although all implementations conforming to this specification
     support all of the FIPS features described below, there may be
     system-dependent or file-system-dependent configuration procedures
     that can remove or modify any or all of these features. Such
     configurations should not be made if strict FIPS compliance is
     required.

     The following symbolic constants are either undefined or defined
     with a value other than -1. If a constant is undefined, an
     application should use the sysconf(), pathconf() or fpathconf()
     functions to determine which features are present on the system at
     that time or for the particular pathname in question. */

#define	_POSIX_CHOWN_RESTRICTED	1
#define	_POSIX_NO_TRUNC		1
#define	_POSIX_VDISABLE		'\0'
#define	_POSIX_SAVED_IDS	1
#define	_POSIX_JOB_CONTROL	1

#define _POSIX_THREADS	1
#define _POSIX_REENTRANT_FUNCTIONS      1
#define _POSIX_THREAD_SAFE_FUNCTIONS	1
#define	_POSIX_THREAD_PRIORITY_SCHEDULING	1

/* pathconf() */

#define	_PC_CHOWN_RESTRICTED	6
#define	_PC_LINK_MAX	0
#define	_PC_MAX_CANON	1
#define	_PC_MAX_INPUT	2
#define	_PC_NAME_MAX	3
#define	_PC_NO_TRUNC	7
#define	_PC_PATH_MAX	4
#define	_PC_PIPE_BUF	5
#define	_PC_VDISABLE	8

/* sysconf() */
#define	_SC_ARG_MAX	0
#define	_SC_CHILD_MAX	1
#define	_SC_CLK_TCK	2
#define	_SC_JOB_CONTROL	7
#define	_SC_NGROUPS_MAX	3
#define	_SC_OPEN_MAX	4
#define	_SC_SAVED_IDS	8
#define	_SC_STREAM_MAX	5
#define	_SC_TZNAME_MAX	6
#define	_SC_VERSION	29


__pid_t __getpgid(__pid_t);
int acct(char);
unsigned int alarm(unsigned int);
int chown(char, __uid_t, __gid_t);
int chroot(char);
int execl(char, char, ...);
int execle(char, char, ...);
int execlp(char, char, ...);
int execv(char, char);
int execvp(char, char);
int fdatasync(int);
long gethostid(void);
__pid_t getpgrp(void);
int lockf(int, int, __off_t);
int nice(int);
int setegid(__gid_t);
int seteuid(__uid_t);
int sethostid(long);
int sethostname(char, size_t);
int setpgrp(void);
int sync(void);
__pid_t tcgetpgrp(int);
int tcsetpgrp(int, __pid_t);
int truncate(char, __off_t);
char ttyname(int);
void usleep(unsigned int);
int close(int);
int fsync(int);
__off_t lseek(int, __off_t, int);
int pause(void);
ssize_t read(int, void, size_t);
ssize_t write(int, void, size_t);
int access(char, int);
int brk(void);
int chdir(char);
int dup(int);
int dup2(int, int);
int execve(char, char, char);
int fchdir(int);
int fchown(int, __uid_t, __gid_t);
__pid_t fork(void);
__gid_t getegid(void);
__uid_t geteuid(void);
__gid_t getgid(void);
int getgroups(int, __gid_t);
int gethostname(char, size_t);
__pid_t getpid(void);
__uid_t getuid(void);
int lchown(char, __uid_t, __gid_t);
int link(char, char);
long pathconf(char, int);
int pipe(int);
int readlink(char, char, size_t);
int rmdir(char);
void sbrk(ptrdiff_t);
int setgid(__gid_t);
int setpgid(__pid_t, __pid_t);
int setregid(__gid_t, __gid_t);
int setreuid(__uid_t, __uid_t);
__pid_t setsid(void);
int setuid(__uid_t);
unsigned int sleep(unsigned int);
int symlink(char, char);
int unlink(char);
__pid_t vfork(void);
__pid_t getppid(void);
int isatty(int);
int ttyname_r(int, char, size_t);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>utime.h</TITLE>
<PARA>
</PARA>
<SCREEN>
struct utimbuf {
	time_t actime;            /* Access time.  */
	time_t modtime;           /* Modification time.  */
};

int utime(char, struct utimbuf);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>wchar.h</TITLE>
<PARA>
</PARA>
<SCREEN>

size_t __mbrlen(char, size_t, mbstate_t);
double __wcstod_internal(wchar_t, wchar_t, int);
float __wcstof_internal(wchar_t, wchar_t, int);
long __wcstol_internal(wchar_t, wchar_t, int, int);
long double __wcstold_internal(wchar_t, wchar_t, int);
long long __wcstoll_internal(wchar_t, wchar_t, int, int);
unsigned long __wcstoul_internal(wchar_t, wchar_t, int, int);
unsigned long long __wcstoull_internal(wchar_t, wchar_t, int, int);
wchar_t wcscat(wchar_t, wchar_t);
wchar_t wcschr(wchar_t, wchar_t);
int wcscmp(wchar_t, wchar_t);
int wcscoll(wchar_t, wchar_t);
wchar_t wcscpy(wchar_t, wchar_t);
size_t wcscspn(wchar_t, wchar_t);
wchar_t wcsncat(wchar_t, wchar_t, size_t);
int wcsncmp(wchar_t, wchar_t, size_t);
wchar_t wcsncpy(wchar_t, wchar_t, size_t);
wchar_t wcspbrk(wchar_t, wchar_t);
wchar_t wcsrchr(wchar_t, wchar_t);
size_t wcsspn(wchar_t, wchar_t);
wchar_t wcsstr(wchar_t, wchar_t);
wchar_t wcstok(wchar_t, wchar_t, wchar_t);
size_t wcsxfrm(wchar_t, wchar_t, size_t);
int wctob(wint_t);
size_t mbrlen(char, size_t, mbstate_t);
size_t mbrtowc(wchar_t, char, size_t, mbstate_t);
int mbsinit(mbstate_t);
size_t mbsrtowcs(wchar_t, char, size_t, mbstate_t);
size_t wcrtomb(char, wchar_t, mbstate_t);
size_t wcslen(wchar_t);
size_t wcsrtombs(char, wchar_t, size_t, mbstate_t);
double wcstod(wchar_t, wchar_t);
long wcstol(wchar_t, wchar_t, int);
unsigned long wcstoul(wchar_t, wchar_t, int);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>wctype.h</TITLE>
<PARA>
</PARA>
<SCREEN>

wctrans_t wctrans(char);
int iswalnum(wint_t);
int iswalpha(wint_t);
int iswcntrl(wint_t);
int iswctype(wint_t, wctype_t);
int iswdigit(wint_t);
int iswgraph(wint_t);
int iswlower(wint_t);
int iswprint(wint_t);
int iswpunct(wint_t);
int iswspace(wint_t);
int iswupper(wint_t);
int iswxdigit(wint_t);
wctype_t wctype(char);

</SCREEN>
</SECT2>
</SECT1>

<SECT1 ID=libcman>
<TITLE>Interface Definitions for libc</TITLE>
<PARA>
</PARA>
<REFENTRY ID="baselib-assert-fail-1"> <REFMETA>
<REFENTRYTITLE>__assert_fail</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__assert_fail
</REFNAME>
<REFPURPOSE>Abort the program after false assertion
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>30 January 2000</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
void
__assert_fail (const char *<REPLACEABLE CLASS="PARAMETER">assertion</REPLACEABLE>,
               const char *<REPLACEABLE CLASS="PARAMETER">file</REPLACEABLE>,
               unsigned int <REPLACEABLE CLASS="PARAMETER">line</REPLACEABLE>,
               const char *<REPLACEABLE CLASS="PARAMETER">function</REPLACEABLE>)
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>30 January 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
This function, when passed a string containing an asserted
expression, a filename, and a line number, prints a message
on the standard error stream such as:
<BLOCKQUOTE>
<PARA>
a.c:10: foobar: Assertion a == b failed.
</PARA>
</BLOCKQUOTE>
It then aborts program execution via a call to <FUNCTION>abort</FUNCTION>.  The
exact form of the message is up to the implementation.
</PARA>

<PARA>
If FUNCTION is NULL, then omit information about the function.
FILE, LINE, and ASSERTION must be non-NULL.
</PARA>

<PARA>
This function is part of the ABI, and not the API.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-clone-1"> <REFMETA>
<REFENTRYTITLE>__clone</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__clone
</REFNAME>
<REFPURPOSE>create a thread
</REFPURPOSE>
<INDEXTERM ID="ix-baselib-clone-2"><PRIMARY>__clone</PRIMARY></INDEXTERM>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 February 2000</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
int __clone (int (* <replaceable class="parameter" >fn</replaceable>) (void *<replaceable class="parameter" >arg</replaceable>),
             void *<replaceable class="parameter" >child_stack</replaceable>,
             int <replaceable class="parameter" >flags</replaceable>,
             void *<replaceable class="parameter" >arg</replaceable>)
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 February 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
__clone creates a new process like fork does.  Unlike fork, __clone
allows the child process to share parts of its execution context with
its parent process, such as the memory space, the table of file
descriptors, and the table of signal handlers.  The main use of
__clone is to implement threads: multiple threads of control in a
program that run concurrently in a shared memory space.
</PARA>
<PARA>
When the child process is created, it executes the function
application fn(arg).  The fn argument is a pointer to a function that
is called by the child process at the beginning of its execution.  The
arg argument is passed back to the fn function.
</PARA>
<PARA>
When the fn(arg) function application returns,  the  child
process  terminates.   The  integer  returned by fn is the
exit code for the child process.  The  child  process  may
also  terminate  explicitely  by  calling exit() or after
receiving a fatal signal.
</PARA>
<PARA>
The child_stack argument specifies the location of the stack used by
the child process.  Since the child and parent processes share memory,
it is not possible in general for the child process to execute in the
same stack as the parent process.  The parent process must therefore
set up memory space for the child stack and pass a pointer to this
space to __clone.  Stacks grow downwards on all processors that run
Linux (except the HP PA processors), so child_stack usually points to
the topmost address of the memory space set up for the child stack.
</PARA>
<PARA>
The low byte of flags contains the number of the signal sent to the
parent when the child dies.  flags must also be bitwise-or'ed with
exactly the following constants (FIXME: are these in our constant
database?): CLONE_VM | CLONE_FS | CLONE_FILES | CLONE_SIGHAND.
No other combination of flags is supported by this standard.
The parent and child share memory space, mappings and unmappings
performed with mmap, root of the file system, the current working
directory, umask, file descriptor table, and signal handlers.  If the
parent or child changes these resources, the other process is also
affected.
</PARA>
<PARA>
For a variety of reasons, it is unlikely that __clone will be included
in the final version of the Linux Standard Base.  Issues include (1)
POSIX threads are standardized, (2) feedback from ISV's so far
indicates little interest in a Linux-specific API, (3) a good short
term solution is documenting differences between our pthreads and full
POSIX threads, (4) a good long term solution is working to modify
deficient aspects of the POSIX thread standard.
</PARA>
<PARA>
In addition, there are technical issues with mixing application calls
to __clone along with system libraries which may use threads
internally (e.g. some implementations of asynchronous I/O).  Signals
may go to the wrong thread and that kind of thing.
</PARA>
<PARA>
(Assuming we are ready to remove __clone, we want to put the above two
paragraphs into a rationale section or something, if we have such - it
is still here largely because there isn't such a section yet).
</PARA>
</REFSECT1>
<refsect1>
<title>
Return value
</title>
<para>
On success, the PID of the child process  is  returned  in
the  parent's  thread of execution.  On failure, a -1 will
be returned in the parent's context, no child process will
be created, and errno will be set appropriately.
</para>
</refsect1>
<refsect1>
<title>
Errors
</title>
<para>
EAGAIN Too many processes are already running.
</para>
<para>
ENOMEM __clone cannot allocate sufficient memory to allocate a task
structure for the child, or to copy those parts of the parent's
context that need to be copied.
</para>
</refsect1>
<REFSECT1>
<TITLE>Notes/rationale
</TITLE>
<PARA>
This subset of clone is sufficient to implement the LinuxThreads
package (as of this writing).  FIXME: someone should check pth.
</PARA>
<PARA>
Although portability to non-Linux systems is a secondary goal for the
Linux Standard Base, it is believed that this subset of clone can be
implemented on top of a variety of threads API's.
</PARA>
<PARA>
FIXME: What about __WCLONE flag to waitpid()?
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-errno-location-1"> <REFMETA>
<REFENTRYTITLE>__errno_location</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__errno_location
</REFNAME>
<REFPURPOSE>address of errno variable
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>15 February 2000</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
int *__errno_location (void);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>15 February 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
Return the address of the errno variable.  Only in the binary
standard, not the source standard.  Note that errno itself is only in
the source standard, not the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-h-errno-location-1"> <REFMETA>
<REFENTRYTITLE>__h_errno_location</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__h_errno_location
</REFNAME>
<REFPURPOSE>address of h_errno variable
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>15 February 2000</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
int *__h_errno_location (void);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>15 February 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
Return the address of the h_errno variable, where h_errno is as
specified in the Single Unix Specification.  Only in the binary
standard, not the source standard.  Note that h_errno itself
is only in the source standard, not the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-strtod-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtod_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtod_internal
</REFNAME>
<REFPURPOSE>mangle of strtod
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>15 February 2000</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
double __strtod_internal (const char *<REPLACEABLE CLASS="PARAMETER">__nptr</REPLACEABLE>,
                          char **<REPLACEABLE CLASS="PARAMETER">__endptr</REPLACEABLE>,
                          int <REPLACEABLE CLASS="PARAMETER">__group</REPLACEABLE>);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>15 February 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The __GROUP argument must be 0 or the behavior is undefined.
Otherwise the same as

<BLOCKQUOTE>
<PARA>
strtod (__nptr, __endptr).
</PARA>
</BLOCKQUOTE>

Only in the binary standard, not the source standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-strtof-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtof_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtof_internal
</REFNAME>
<REFPURPOSE>mangle of strtof
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>15 February 2000</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
float __strtof_internal (const char *__nptr,
                         char **__endptr, int __group);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>15 February 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
__GROUP must be 0 or the behavior is undefined.  Otherwise the same as
strtof (__nptr, __endptr).  Only in the binary standard, not the
source standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-strtol-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtol_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtol_internal
</REFNAME>
<REFPURPOSE>mangle of strtol
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>15 February 2000</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
long int __strtol_internal (const char *__nptr, char **__endptr,
                            int __base, int __group);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>15 February 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
__GROUP must be 0 or the behavior is undefined.  Otherwise the same as
strtol (__nptr, __endptr, __base).  Only in the binary standard, not the
source standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-strtoul-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtoul_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtoul_internal
</REFNAME>
<REFPURPOSE>mangle of strtoul
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>15 February 2000</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
unsigned long int __strtoul_internal (const char *__nptr,
                                      char **__endptr, int __base,
                                      int __group));
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>15 February 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
__GROUP must be 0 or the behavior is undefined.  Otherwise the same as
strtoul (__nptr, __endptr, __base).  Only in the binary standard, not the
source standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-xstat-1"> <REFMETA>
<REFENTRYTITLE>__xstat</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__xstat
</REFNAME>
<REFPURPOSE>provide inode information
</REFPURPOSE>
<INDEXTERM ID="ix-baselib-xstat-1"><PRIMARY>stat</PRIMARY></INDEXTERM>
<INDEXTERM ID="ix-baselib-xstat-2"><PRIMARY>xstat</PRIMARY></INDEXTERM>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>4 March 1996</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;sys/stat.h>
#include &lt;unistd.h>

int __xstat (int <REPLACEABLE CLASS="PARAMETER">__ver</REPLACEABLE>,
             const char *<REPLACEABLE CLASS="PARAMETER">__filename</REPLACEABLE>,
             struct stat *<REPLACEABLE CLASS="PARAMETER">__stat_buf</REPLACEABLE>)

int __lxstat (int <REPLACEABLE CLASS="PARAMETER">__ver</REPLACEABLE>,
              const char *<REPLACEABLE CLASS="PARAMETER">__filename</REPLACEABLE>,
              struct stat *<REPLACEABLE CLASS="PARAMETER">__stat_buf</REPLACEABLE>)

int __fxstat (int <REPLACEABLE CLASS="PARAMETER">__ver</REPLACEABLE>,
              int <REPLACEABLE CLASS="PARAMETER">__filedesc</REPLACEABLE>,
              struct stat *<REPLACEABLE CLASS="PARAMETER">__stat_buf</REPLACEABLE>)
</SYNOPSIS>
<REFSECT2>
<TITLE>Inputs
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM><REPLACEABLE CLASS="PARAMETER">__ver</REPLACEABLE>
</TERM>
<LISTITEM>
<PARA>Must be 3 or the behavior is undefined.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><REPLACEABLE CLASS="PARAMETER">__filename</REPLACEABLE>
</TERM>
<LISTITEM>
<PARA>As in POSIX.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><REPLACEABLE CLASS="PARAMETER">__filedesc</REPLACEABLE>
</TERM>
<LISTITEM>
<PARA>As in POSIX.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><REPLACEABLE CLASS="PARAMETER">__stat_buf</REPLACEABLE>
</TERM>
<LISTITEM>
<PARA>As in POSIX.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT2></REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>5 March 1996</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA><FUNCTION>__xstat()</FUNCTION> has the same behavior as stat
(__filename, __stat_buf) as specified by POSIX.
</PARA>
<PARA><FUNCTION>__lxstat()</FUNCTION> has the same behavior as lstat
(__filename, __stat_buf) as specified by POSIX.
</PARA>
<PARA><FUNCTION>__fxstat()</FUNCTION> has the same behavior as fstat
(__filedesc, __stat_buf) as specified by POSIX.
</PARA>
<PARA>FIXME: are we clear on specifying the correct struct stat,
rather than the kernel one?
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Usage
</TITLE>
<PARA>
<FUNCTION>__xstat</FUNCTION>, <FUNCTION>__lxstat</FUNCTION>, and
<FUNCTION>__fxstat</FUNCTION> are not in the source standard;
<FUNCTION>stat</FUNCTION>, <FUNCTION>lstat</FUNCTION>, and
<FUNCTION>fstat</FUNCTION> are not in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-select-1"> <REFMETA>
<REFENTRYTITLE>select</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>select
</REFNAME>
<REFPURPOSE>synchronous I/O multiplexing
</REFPURPOSE>
</REFNAMEDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>26 January 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
Specified as in the Single Unix Specification.  But note the text "On
successful completion, the object pointed to by the timeout argument
may be modified."
</PARA>

<PARA>
Linux systems currently modify the timeval structure to reflect the
amount of time not slept; most other implementations do not do this.
This causes problems both when Linux code which reads the timeval
structure is ported to other operating systems, and when code is
ported to Linux that reuses the timeval structure for multiple selects
in a loop without reinitializing it.  Consider timeout to be undefined
after select returns and reinitialize it before each call to select.
</PARA>

<PARA>
This behavior may be deprecated in the future.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---sigsetjmp-1"> <REFMETA>
<REFENTRYTITLE>__sigsetjmp</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__sigsetjmp</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __sigsetjmp(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--IO-2-1-stderr--1"> <REFMETA>
<REFENTRYTITLE>_IO_2_1_stderr_</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_IO_2_1_stderr_</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type _IO_2_1_stderr_(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--IO-2-1-stdin--1"> <REFMETA>
<REFENTRYTITLE>_IO_2_1_stdin_</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_IO_2_1_stdin_</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type _IO_2_1_stdin_(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--IO-2-1-stdout--1"> <REFMETA>
<REFENTRYTITLE>_IO_2_1_stdout_</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_IO_2_1_stdout_</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type _IO_2_1_stdout_(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--IO-feof-1"> <REFMETA>
<REFENTRYTITLE>_IO_feof</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_IO_feof</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type _IO_feof(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--IO-getc-1"> <REFMETA>
<REFENTRYTITLE>_IO_getc</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_IO_getc</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type _IO_getc(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--IO-putc-1"> <REFMETA>
<REFENTRYTITLE>_IO_putc</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_IO_putc</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type _IO_putc(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--IO-puts-1"> <REFMETA>
<REFENTRYTITLE>_IO_puts</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_IO_puts</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type _IO_puts(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---bzero-1"> <REFMETA>
<REFENTRYTITLE>__bzero</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__bzero</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __bzero(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---ctype-get-mb-cur-max-1"> <REFMETA>
<REFENTRYTITLE>__ctype_get_mb_cur_max</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__ctype_get_mb_cur_max</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __ctype_get_mb_cur_max(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---getpgid-1"> <REFMETA>
<REFENTRYTITLE>__getpgid</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__getpgid</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __getpgid(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---libc-current-sigrtmax-1"> <REFMETA>
<REFENTRYTITLE>__libc_current_sigrtmax</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__libc_current_sigrtmax</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __libc_current_sigrtmax(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---libc-current-sigrtmin-1"> <REFMETA>
<REFENTRYTITLE>__libc_current_sigrtmin</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__libc_current_sigrtmin</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __libc_current_sigrtmin(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---mbrlen-1"> <REFMETA>
<REFENTRYTITLE>__mbrlen</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__mbrlen</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __mbrlen(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---secure-getenv-1"> <REFMETA>
<REFENTRYTITLE>__secure_getenv</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__secure_getenv</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __secure_getenv(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---sigpause-1"> <REFMETA>
<REFENTRYTITLE>__sigpause</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__sigpause</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __sigpause(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strdup-1"> <REFMETA>
<REFENTRYTITLE>__strdup</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strdup</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __strdup(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strtok-r-1"> <REFMETA>
<REFENTRYTITLE>__strtok_r</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtok_r</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __strtok_r(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strtold-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtold_internal</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtold_internal</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __strtold_internal(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strtoll-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtoll_internal</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtoll_internal</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __strtoll_internal(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strtoull-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtoull_internal</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtoull_internal</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __strtoull_internal(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---sysv-signal-1"> <REFMETA>
<REFENTRYTITLE>__sysv_signal</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__sysv_signal</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __sysv_signal(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstod-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstod_internal</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstod_internal</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __wcstod_internal(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstof-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstof_internal</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstof_internal</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __wcstof_internal(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstol-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstol_internal</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstol_internal</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __wcstol_internal(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstold-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstold_internal</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstold_internal</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __wcstold_internal(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstoll-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstoll_internal</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstoll_internal</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __wcstoll_internal(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstoul-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstoul_internal</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstoul_internal</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __wcstoul_internal(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstoull-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstoull_internal</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstoull_internal</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __wcstoull_internal(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---xmknod-1"> <REFMETA>
<REFENTRYTITLE>__xmknod</REFENTRYTITLE>
<REFMISCINFO>What Section??</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__xmknod</REFNAME>
<REFPURPOSE>What is this?
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE> 8 Feb 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>return_type __xmknod(parameters) </SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE> 8 Feb 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA>
</REFSECT1>
</REFENTRY>

</SECT1>


<SECT1 ID=libm>
<TITLE>libm</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libm</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libm.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
ISO/IEC 9899: 1999, Programming Languages --C<FOOTNOTE ID="std-13-25">
<PARA>
ISO/IEC 9899: 1999, Programming Languages --C</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-13-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>Math</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>acos<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>ceil<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>erfc<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>j0<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>remquof<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>acosf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>ceilf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>erfcf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>j1<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>remquol<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>acosh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>ceill<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>erfcl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>jn<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>rint<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>acoshf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cexp<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>erff<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>ldexp<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>rintf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>acoshl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cexpf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>erfl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>ldexpf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>rintl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>acosl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cexpl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>exp<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>ldexpl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>round<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>asin<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>cimag<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>expm1<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>lgamma<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>roundf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>asinf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cimagf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fabs<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>lgamma_r<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>roundl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>asinh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>cimagl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fabsf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>lgammaf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>scalb<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>asinhf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>clog10<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fabsl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>lgammaf_r<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>scalbf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>asinhl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>clog10f<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fdim<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>lgammal<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>scalbl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>asinl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>clog10l<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fdimf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>lgammal_r<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>scalbln<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>atan<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>clogf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fdiml<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>llrint<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>scalblnf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>atan2<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>clogl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>feclearexcept<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>llrintf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>scalblnl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>atan2f<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>conj<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fegetenv<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>llrintl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>scalbn<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>atan2l<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>conjf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fegetexceptflag<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>llround<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>scalbnf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>atanf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>conjl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fegetround<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>llroundf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>scalbnl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>atanh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>copysign<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>feholdexcept<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>llroundl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>significand<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>atanhf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>copysignf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>feraiseexcept<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>log<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>significandf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>atanhl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>copysignl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fesetenv<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>log10<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>significandl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>atanl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cos<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>fesetexceptflag<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>log1p<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>sin<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>cabs<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>cosf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fesetround<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>logb<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>sincos<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>cabsf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cosh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>fetestexcept<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>lrint<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>sincosf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>cabsl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>coshf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>feupdateenv<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>lrintf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>sincosl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>cacos<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>coshl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>finite<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>lrintl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>sinf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>cacosf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cosl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>finitef<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>lround<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>sinh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>cacosh<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cpow<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>finitel<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>lroundf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>sinhf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>cacoshf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cpowf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>floor<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>lroundl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>sinhl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>cacoshl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cpowl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>floorf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>matherr<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>sinl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>cacosl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cproj<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>floorl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>modf<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>sqrt<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>carg<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cprojf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fma<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>modff<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>sqrtf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>cargf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>cprojl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fmaf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>modfl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>sqrtl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>cargl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>creal<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fmal<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>nan<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>tan<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>casin<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>crealf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fmax<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>nanf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>tanf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>casinf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>creall<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fmaxf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>nanl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>tanh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>casinh<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>csin<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fmaxl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>nearbyint<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>tanhf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>casinhf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>csinf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fmin<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>nearbyintf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>tanhl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>casinhl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>csinh<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fminf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>nearbyintl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>tanl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>casinl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>csinhf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fminl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>nextafter<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>tgamma<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>catan<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>csinhl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fmod<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>nextafterf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>tgammaf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>catanf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>csinl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fmodf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>nextafterl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>tgammal<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>catanh<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>csqrt<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>fmodl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>nexttoward<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>trunc<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>catanhf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>csqrtf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>frexp<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>nexttowardf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>truncf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>catanhl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>csqrtl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>frexpf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>nexttowardl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>truncl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>catanl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>ctan<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>frexpl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>pow<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>y0<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>cbrt<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>ctanf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>gamma<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>pow10<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>y0f<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>cbrtf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>ctanh<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>gammaf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>pow10f<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>y0l<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>cbrtl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>ctanhf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>gammal<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>pow10l<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>y1<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>ccos<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>ctanhl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>gcvt<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>powf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>y1f<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>ccosf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>ctanl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>hypot<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>powl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>y1l<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>ccosh<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>drem</ENTRY><ENTRY>hypotf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>remainder<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>yn<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>ccoshf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>dremf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>hypotl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>remainderf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>ynf<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>ccoshl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>dreml<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>ilogb<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>remainderl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>ynl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY></ROW>
<ROW><ENTRY>ccosl<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>erf<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>isinf</ENTRY><ENTRY>remquo<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>clog<FOOTNOTEREF LINKEND="std-13-25"></ENTRY><ENTRY>signgam</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libm-ddefs>
<TITLE> Data Definitions for libm</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>math.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/* IEEE positive infinity (-HUGE_VAL is negative infinity).  */

#define	__HUGE_VAL_bytes	{ 0, 0, 0, 0, 0, 0, 0xf0, 0x7f }

#define __huge_val_t	union { unsigned char __c[8]; double __d; }
#ifdef	__GNUC__
#define	HUGE_VAL	(__extension__ \
			 ((__huge_val_t) { __c: __HUGE_VAL_bytes }).__d)
#else	/* Not GCC.  */
static __huge_val_t __huge_val = { __HUGE_VAL_bytes };
#define	HUGE_VAL	(__huge_val.__d)
#endif	/* GCC.  */

#define MAXFLOAT        (-1) /* Didn't find this one */
#define M_1_PI		0.31830988618379067154
#define M_2_PI		0.63661977236758134308
#define M_2_SQRTPI      1.12837916709551257390
#define M_E		2.7182818284590452354
#define M_LN10		2.30258509299404568402
#define M_LN2		0.69314718055994530942
#define M_LOG10E        0.43429448190325182765
#define M_LOG2E		1.4426950408889634074
#define M_PI		3.14159265358979323846
#define M_PI_2		1.57079632679489661923
#define M_PI_4		0.78539816339744830962
#define M_SQRT1_2	0.70710678118654752440
#define M_SQRT2		1.41421356237309504880



</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>
#define EXIT_FAILURE    1
#define EXIT_SUCCESS    0
#define NULL    	0
#define RAND_MAX        2147483647


char __secure_getenv(char);
float __strtof_internal(char, char, int);
long double __strtold_internal(char, char, int);
long long __strtoll_internal(char, char, int, int);
unsigned long long __strtoull_internal(char, char, int, int);
void abort(void);
int abs(int);
int atexit(void ();
double atof(char);
int atoi(char);
long atol(char);
void bsearch(void, void, size_t, size_t, __compar_fn_t);
div_t div(int, int);
double drand48(void);
char ecvt(double, int, int, int);
double erand48(unsigned short);
void exit(int);
char fcvt(double, int, int, int);
char gcvt(double, int, char);
char getenv(char);
long jrand48(unsigned short);
long labs(long);
ldiv_t ldiv(long, long);
long lrand48(void);
int mblen(char, size_t);
size_t mbstowcs(wchar_t, char, size_t);
int mbtowc(wchar_t, char, size_t);
int mkstemp(char);
char mktemp(char);
long mrand48(void);
long nrand48(unsigned short);
int putenv(char);
void qsort(void, size_t, size_t, __compar_fn_t);
int rand(void);
unsigned short seed48(unsigned short);
void srand48(long);
size_t wcstombs(char, wchar_t, size_t);
int wctomb(char, wchar_t);
void calloc(size_t, size_t);
void free(void);
void initstate(unsigned int, void, size_t);
void malloc(size_t);
void realloc(void, size_t);
void setstate(void);
void srand(unsigned int);
void srandom(unsigned int);
double strtod(char, char);
long strtol(char, char, int);
long long strtoll(char, char, int);
long long strtoq(char, char, int);
unsigned long strtoul(char, char, int);
unsigned long long strtoull(char, char, int);
unsigned long long strtouq(char, char, int);
size_t __ctype_get_mb_cur_max(void);

</SCREEN>
</SECT2>
</SECT1>


<SECT1 ID=libpthread>
<TITLE>libpthread</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpthread</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libpthread.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
LSB systems support POSIX threads with the following exceptions.
This list is intended to match the behavior of historical Linux
implementations.  Applications should be written to deal with either
POSIX threads or the thread behaviors described here.
</PARA>

<PARA>
POSIX specifies a concept of per-process rather than per-thread
signals.  The LSB does not require this behavior; traditional Linux
implementations have had per-thread signals only.  A related issue is
that applications cannot (using legacy Linux implementations, at
least) rely on getpid() returning the same value in different threads.
</PARA>

<PARA>
Note: one implication of per-thread signals is that a core dump (for
example) may not stop all threads in a given process.  This may be an
issue when designing ways to stop/start applications.
</PARA>

<PARA>
Applications which create child processes (using fork() and the like)
must then wait for them (using waitpid() family of functions) in the
same thread as they created them.  Note that coding applications this
way will work both with full POSIX threads and legacy Linux thread
implementations.
</PARA>

<PARA>
POSIX specifies that changing the user or group id instantly affects
the behavior of all threads.  This behavior is not specified;
applications must use their own lock if they need this behavior.
Rationale: it seems unnecessary and it is a performance hit (an SMP
kernel must lock the user id).  (FIXME: is this our current
understanding?  It was discussed on lsb-spec on January 2000 but I'm
not sure we reached a consensus).
</PARA>

<PARA>
Although this standard doesn't have a way to list processes (/proc or
"ps" command line isn't in, right?), it is our intention to not
specify one way or the other whether multiple threads appear as
separate processes or as a single process.
</PARA>

<PARA>
Applications cannot rely on resource limits (getrusage and setrusage)
being maintained per-process rather than per-thread.
</PARA>

<PARA>
Applications must disconnect from the controlling tty before
pthread_create (FIXME: have I summarized this correctly?).
</PARA>

<PARA>
times() doesn't account for all threads, just the caller.
</PARA>

<PARA>
Applications must not call pthread_cancel if they call any system
libraries (most notably X windows), as system libraries are not
guaranteed to be thread safe.  Likewise, for such libraries, only one
thread per process may call them.
</PARA>

<PARA>
Applications cannot rely on fcntl/lockf locks being visible
per-process rather than per-thread.  Likewise for mandatory file
locks.
</PARA>

<PARA>
Threaded applications cannot use SIGUSR1 or SIGUSR2.
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-132-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>Posix Threads</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>pthread_attr_destroy<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_attr_setscope<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_exit<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_once<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_setschedparam<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getdetachstate<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_attr_setstackaddr<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_getschedparam<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_destroy<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_setspecific<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getguardsize<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_attr_setstacksize<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_getspecific<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_init<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_sigmask<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getinheritsched<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cancel<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_join<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_rdlock<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_testcancel<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getschedparam<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_broadcast<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_key_create<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_tryrdlock<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_destroy<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getschedpolicy<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_destroy<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_key_delete<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_trywrlock<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_getvalue<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getscope<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_init<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_kill<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_unlock<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_init<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getstackaddr<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_signal<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutex_destroy<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_wrlock<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_post<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getstacksize<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_timedwait<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutex_init<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlockattr_destroy<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_trywait<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_init<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_wait<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutex_lock<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlockattr_getpshared<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_unlink<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setdetachstate<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_condattr_destroy<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutex_trylock<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlockattr_init<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_wait<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setguardsize<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_condattr_init<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutex_unlock<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlockattr_setpshared<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setinheritsched<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_create<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutexattr_destroy<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_self<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setschedparam<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_detach<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutexattr_gettype<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_setcancelstate<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setschedpolicy<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_equal<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutexattr_settype<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_setcanceltype<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libpthread-ddefs>
<TITLE> Data Definitions for libpthread</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>pthread.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int pthread_attr_destroy(pthread_attr_t);
int pthread_attr_getdetachstate(pthread_attr_t, int);
int pthread_attr_getinheritsched(pthread_attr_t, int);
int pthread_attr_getschedparam(pthread_attr_t, struct sched_param);
int pthread_attr_getschedpolicy(pthread_attr_t, int);
int pthread_attr_getscope(pthread_attr_t, int);
int pthread_attr_init(pthread_attr_t);
int pthread_attr_setdetachstate(pthread_attr_t, int);
int pthread_attr_setinheritsched(pthread_attr_t, int);
int pthread_attr_setschedparam(pthread_attr_t, struct sched_param);
int pthread_attr_setschedpolicy(pthread_attr_t, int);
int pthread_attr_setscope(pthread_attr_t, int);
int pthread_cancel(pthread_t);
int pthread_cond_broadcast(pthread_cond_t);
int pthread_cond_destroy(pthread_cond_t);
int pthread_cond_init(pthread_cond_t, pthread_condattr_t);
int pthread_cond_signal(pthread_cond_t);
int pthread_cond_timedwait(pthread_cond_t, pthread_mutex_t, struct timespec);
int pthread_cond_wait(pthread_cond_t, pthread_mutex_t);
int pthread_condattr_destroy(pthread_condattr_t);
int pthread_condattr_init(pthread_condattr_t);
int pthread_create(pthread_t, pthread_attr_t, void (, void);
int pthread_detach(pthread_t);
int pthread_equal(pthread_t, pthread_t);
void pthread_exit(void);
int pthread_getschedparam(pthread_t, int, struct sched_param);
void pthread_getspecific(pthread_key_t);
int pthread_join(pthread_t, void);
int pthread_key_create(pthread_key_t, void ();
int pthread_key_delete(pthread_key_t);
int pthread_mutex_destroy(pthread_mutex_t);
int pthread_mutex_init(pthread_mutex_t, pthread_mutexattr_t);
int pthread_mutex_lock(pthread_mutex_t);
int pthread_mutex_trylock(pthread_mutex_t);
int pthread_mutex_unlock(pthread_mutex_t);
int pthread_mutexattr_destroy(pthread_mutexattr_t);
int pthread_once(pthread_once_t, void ();
pthread_t pthread_self(void);
int pthread_setcancelstate(int, int);
int pthread_setcanceltype(int, int);
int pthread_setschedparam(pthread_t, int, struct sched_param);
int pthread_setspecific(pthread_key_t, void);
void pthread_testcancel(void);
int pthread_attr_setstackaddr(pthread_attr_t, void);
int pthread_attr_getstackaddr(pthread_attr_t, void);
int pthread_attr_setstacksize(pthread_attr_t, size_t);
int pthread_attr_getstacksize(pthread_attr_t, size_t);

</SCREEN>
</SECT2>
<SECT2>
<TITLE>semaphore.h</TITLE>
<PARA>
</PARA>
<SCREEN>
</SCREEN>
</SECT2>
</SECT1>


<SECT1 ID=libdb>
<TITLE>libdb</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libdb</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libdb.so.3</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-23-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>DBM Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>dbm_clearerr<FOOTNOTEREF LINKEND="std-23-5"></ENTRY><ENTRY>dbm_delete<FOOTNOTEREF LINKEND="std-23-5"></ENTRY><ENTRY>dbm_error<FOOTNOTEREF LINKEND="std-23-5"></ENTRY><ENTRY>dbm_firstkey<FOOTNOTEREF LINKEND="std-23-5"></ENTRY><ENTRY>dbm_open<FOOTNOTEREF LINKEND="std-23-5"></ENTRY></ROW>
<ROW><ENTRY>dbm_close<FOOTNOTEREF LINKEND="std-23-5"></ENTRY><ENTRY>dbm_dirfno</ENTRY><ENTRY>dbm_fetch<FOOTNOTEREF LINKEND="std-23-5"></ENTRY><ENTRY>dbm_nextkey<FOOTNOTEREF LINKEND="std-23-5"></ENTRY><ENTRY>dbm_store<FOOTNOTEREF LINKEND="std-23-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>


<SECT1 ID=libdl>
<TITLE>libdl</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libdl</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libdl.so.2</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-27-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>Dynamic Loader</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>dladdr</ENTRY><ENTRY>dlclose<FOOTNOTEREF LINKEND="std-27-5"></ENTRY><ENTRY>dlerror<FOOTNOTEREF LINKEND="std-27-5"></ENTRY><ENTRY>dlopen<FOOTNOTEREF LINKEND="std-27-5"></ENTRY><ENTRY>dlsym<FOOTNOTEREF LINKEND="std-27-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libdl-ddefs>
<TITLE> Data Definitions for libdl</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>dlfcn.h</TITLE>
<PARA>
</PARA>
<SCREEN>
</SCREEN>
</SECT2>
</SECT1>


<SECT1 ID=libcrypt>
<TITLE>libcrypt</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libcrypt</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libcrypt.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-29-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>Encryption</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>crypt<FOOTNOTEREF LINKEND="std-29-5"></ENTRY><ENTRY>encrypt<FOOTNOTEREF LINKEND="std-29-5"></ENTRY><ENTRY>setkey<FOOTNOTEREF LINKEND="std-29-5"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libcrypt-ddefs>
<TITLE> Data Definitions for libcrypt</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>crypt.h</TITLE>
<PARA>
</PARA>
<SCREEN>
</SCREEN>
</SECT2>
</SECT1>


</CHAPTER>

</PART>
