<SECT1>
<TITLE>libm</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libm</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libm.so.lsb.1</ENTRY>
</ROW>
<ROW>
<ENTRY>Development Name:</ENTRY>
<ENTRY>libm</ENTRY>
</ROW>
<ROW>
<ENTRY>Header Location:</ENTRY>
<ENTRY>/usr/include</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
The Single UNIX Specification Version 2 (UNIX 98) System Interfaces & Headers<FOOTNOTE ID="std-13-5">
<PARA>
The Single UNIX Specification Version 2 (UNIX 98) System Interfaces & Headers</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Unknown<FOOTNOTE ID="std-13-1">
<PARA>
Unknown</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>Math</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>acos<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>cos<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>frexp<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>log<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>sinh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>acosh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>cosh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>gamma<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>log10<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>sqrt<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>asin<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>drem<FOOTNOTEREF LINKEND="std-13-1"></ENTRY><ENTRY>gcvt<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>log1p<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>tan<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>asinh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>erf<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>hypot<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>logb<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>tanh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>atan<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>erfc<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>ilogb<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>modf<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>y0<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>atan2<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>exp<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>isinf<FOOTNOTEREF LINKEND="std-13-1"></ENTRY><ENTRY>nextafter<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>y1<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>atanh<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>expm1<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>j0<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>pow<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>yn<FOOTNOTEREF LINKEND="std-13-5"></ENTRY></ROW>
<ROW><ENTRY>cabs<FOOTNOTEREF LINKEND="std-13-1"></ENTRY><ENTRY>fabs<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>j1<FOOTNOTEREF LINKEND="std-13-1"></ENTRY><ENTRY>remainder<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>cbrt<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>finite<FOOTNOTEREF LINKEND="std-13-1"></ENTRY><ENTRY>jn<FOOTNOTEREF LINKEND="std-13-1"></ENTRY><ENTRY>rint<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>ceil<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>floor<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>ldexp<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>scalb<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>copysign<FOOTNOTEREF LINKEND="std-13-1"></ENTRY><ENTRY>fmod<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>lgamma<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY>sin<FOOTNOTEREF LINKEND="std-13-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>signgam</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1>
<TITLE> Data Definitions for libm</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>math.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/* IEEE positive infinity (-HUGE_VAL is negative infinity).  */

#define	__HUGE_VAL_bytes	{ 0, 0, 0, 0, 0, 0, 0xf0, 0x7f }

#define __huge_val_t	union { unsigned char __c[8]; double __d; }
#ifdef	__GNUC__
#define	HUGE_VAL	(__extension__ \
			 ((__huge_val_t) { __c: __HUGE_VAL_bytes }).__d)
#else	/* Not GCC.  */
static __huge_val_t __huge_val = { __HUGE_VAL_bytes };
#define	HUGE_VAL	(__huge_val.__d)
#endif	/* GCC.  */

#define MAXFLOAT        (-1) /* Didn't find this one */
#define M_1_PI		0.31830988618379067154
#define M_2_PI		0.63661977236758134308
#define M_2_SQRTPI      1.12837916709551257390
#define M_E		2.7182818284590452354
#define M_LN10		2.30258509299404568402
#define M_LN2		0.69314718055994530942
#define M_LOG10E        0.43429448190325182765
#define M_LOG2E		1.4426950408889634074
#define M_PI		3.14159265358979323846
#define M_PI_2		1.57079632679489661923
#define M_PI_4		0.78539816339744830962
#define M_SQRT1_2	0.70710678118654752440
#define M_SQRT2		1.41421356237309504880


double copysign (double , double );
int finite (double );
double frexp (double , int *);
int isinf (double );
int isnan (double );
double ldexp (double , int );
double modf (double , double *);
double acos (double );
double acosh (double );
double asinh (double );
double atanh (double );
double asin (double );
double atan (double );
double atan2 (double , double );
double cbrt (double );
double ceil (double );
double cos (double );
double cosh (double );
double erf(double x);
double erfc(double x);
double exp (double );
double expm1 (double );
double fabs (double );
double floor (double );
double fmod (double , double );
double gamma(double x);
double hypot (double , double );
int ilogb (double x);
double j0(double x);
double j1(double x);
double jn(int n, double x);
double lgamma(double x);
double log (double );
double log10 (double );
double log1p (double );
double logb (double );
double nextafter(double x, double y);
double pow (double , double );
double remainder(double x, double y);
double rint (double );
double scalb (double , int );
double sin (double );
double sinh (double );
double sqrt (double );
double tan (double );
double tanh (double );
double y0(double x);
double y1 (double x);
double yn (int n, double x);
double cabs (struct { double real, imag; } );
double drem (double , double );
double infnan (int );
extern int signgam;

</SCREEN>
</SECT2>
</SECT1>
