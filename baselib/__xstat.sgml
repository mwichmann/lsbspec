<REFENTRY ID="baselib-xstat-1"> <REFMETA>
<REFENTRYTITLE>__xstat</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__xstat
</REFNAME>
<REFPURPOSE>provide inode information
</REFPURPOSE>
<INDEXTERM ID="ix-baselib-xstat-1"><PRIMARY>stat</PRIMARY></INDEXTERM>
<INDEXTERM ID="ix-baselib-xstat-2"><PRIMARY>xstat</PRIMARY></INDEXTERM>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>4 March 1996</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;sys/stat.h>
#include &lt;unistd.h>

int __xstat (int <REPLACEABLE CLASS="PARAMETER">__ver</REPLACEABLE>,
             const char *<REPLACEABLE CLASS="PARAMETER">__filename</REPLACEABLE>,
             struct stat *<REPLACEABLE CLASS="PARAMETER">__stat_buf</REPLACEABLE>)
</SYNOPSIS>
<REFSECT2>
<TITLE>Inputs
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM><REPLACEABLE CLASS="PARAMETER">__ver</REPLACEABLE>
</TERM>
<LISTITEM>
<PARA>Must be 3 or the behavior is undefined.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><REPLACEABLE CLASS="PARAMETER">__filename</REPLACEABLE>
</TERM>
<LISTITEM>
<PARA>As in POSIX.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><REPLACEABLE CLASS="PARAMETER">__stat_buf</REPLACEABLE>
</TERM>
<LISTITEM>
<PARA>As in POSIX.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT2></REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>5 March 1996</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA><FUNCTION>__xstat()</FUNCTION> has the same behavior as stat
(__filename, __stat_buf) as specified by POSIX.
</PARA>
<PARA>FIXME: are we clear on specifying the correct struct stat,
rather than the kernel one?
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Usage
</TITLE>
<PARA>
This function is not called directly, but rather <FUNCTION>stat()</FUNCTION>
is called instead and the header mangles things.
<FUNCTION>__xstat</FUNCTION> is not in the source standard;
<FUNCTION>stat</FUNCTION> is not in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>
