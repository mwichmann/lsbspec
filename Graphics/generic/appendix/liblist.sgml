<APPENDIX ID=app-A>
<TITLE>Alphabetical Listing of Interfaces by Library</TITLE>
<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibapnd -->
<SECT1 ID=app-libGL>
<TITLE>libGL</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.GLX"> [GLX]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.OGL"> [OGL]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.OGL.ABI"> [OGL ABI]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libGL Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>glAccum<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glGetTexEnvfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos4sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glActiveTextureARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glGetTexEnviv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glReadBuffer<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glAlphaFunc<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glGetTexGendv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glReadPixels<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glAreTexturesResident<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glGetTexGenfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRectd<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glArrayElement<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glGetTexGeniv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRectdv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBegin<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glGetTexImage<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRectf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBindTexture<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glGetTexLevelParameterfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRectfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBitmap<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glGetTexLevelParameteriv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRecti<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBlendColor<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glGetTexParameterfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRectiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBlendEquation<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glGetTexParameteriv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRects<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBlendFunc<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glHint<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRectsv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCallList<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glHistogram<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRenderMode<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCallLists<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexMask<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glResetHistogram<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClear<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexPointer<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glResetMinmax<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClearAccum<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexd<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRotated<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClearColor<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexdv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRotatef<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClearDepth<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glScaled<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClearIndex<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glScalef<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClearStencil<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexi<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glScissor<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClientActiveTextureARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glSelectBuffer<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClipPlane<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexs<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glSeparableFilter2D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3b<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexsv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glShadeModel<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3bv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexub<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glStencilFunc<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIndexubv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glStencilMask<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glInitNames<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glStencilOp<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glInterleavedArrays<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord1d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIsEnabled<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord1dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIsList<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord1f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glIsTexture<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord1fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLightModelf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord1i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLightModelfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord1iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3ub<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLightModeli<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord1s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3ubv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLightModeliv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord1sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3ui<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLightf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord2d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3uiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLightfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord2dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3us<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLighti<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord2f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3usv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLightiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord2fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4b<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLineStipple<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord2i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4bv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLineWidth<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord2iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glListBase<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord2s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLoadIdentity<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord2sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLoadMatrixd<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord3d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLoadMatrixf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord3dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLoadName<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord3f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glLogicOp<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord3fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMap1d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord3i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMap1f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord3iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4ub<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMap2d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord3s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4ubv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMap2f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord3sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4ui<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMapGrid1d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord4d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4uiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMapGrid1f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord4dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4us<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMapGrid2d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord4f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4usv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMapGrid2f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord4fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorMask<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMaterialf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord4i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorMaterial<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMaterialfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord4iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorPointer<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMateriali<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord4s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorSubTable<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMaterialiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoord4sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorTable<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMatrixMode<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexCoordPointer<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorTableParameterfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMinmax<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexEnvf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorTableParameteriv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultMatrixd<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexEnvfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionFilter1D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultMatrixf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexEnvi<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionFilter2D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord1dARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexEnviv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionParameterf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord1dvARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexGend<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionParameterfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord1fARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexGendv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionParameteri<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord1fvARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexGenf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionParameteriv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord1iARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexGenfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyColorSubTable<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord1ivARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexGeni<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyColorTable<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord1sARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexGeniv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyConvolutionFilter1D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord1svARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexImage1D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyConvolutionFilter2D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord2dARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexImage2D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyPixels<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord2dvARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexImage3D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyTexImage1D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord2fARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexParameterf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyTexImage2D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord2fvARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexParameterfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyTexSubImage1D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord2iARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexParameteri<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyTexSubImage2D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord2ivARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexParameteriv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyTexSubImage3D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord2sARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexSubImage1D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCullFace<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord2svARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexSubImage2D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDeleteLists<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord3dARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTexSubImage3D<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDeleteTextures<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord3dvARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTranslated<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDepthFunc<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord3fARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glTranslatef<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDepthMask<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord3fvARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex2d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDepthRange<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord3iARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex2dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDisable<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord3ivARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex2f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDisableClientState<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord3sARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex2fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDrawArrays<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord3svARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex2i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDrawBuffer<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord4dARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex2iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDrawElements<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord4dvARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex2s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDrawPixels<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord4fARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex2sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDrawRangeElements<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord4fvARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex3d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEdgeFlag<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord4iARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex3dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEdgeFlagPointer<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord4ivARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex3f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEdgeFlagv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord4sARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex3fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEnable<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glMultiTexCoord4svARB<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex3i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEnableClientState<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNewList<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex3iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEnd<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNormal3b<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex3s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEndList<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNormal3bv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex3sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord1d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNormal3d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex4d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord1dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNormal3dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex4dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord1f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNormal3f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex4f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord1fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNormal3fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex4fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord2d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNormal3i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex4i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord2dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNormal3iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex4iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord2f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNormal3s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex4s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord2fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNormal3sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertex4sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalMesh1<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glNormalPointer<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glVertexPointer<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalMesh2<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glOrtho<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glViewport<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalPoint1<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPassThrough<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXChooseFBConfig<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalPoint2<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPixelMapfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXChooseVisual<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFeedbackBuffer<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPixelMapuiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXCopyContext<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFinish<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPixelMapusv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXCreateContext<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFlush<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPixelStoref<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXCreateGLXPixmap<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFogf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPixelStorei<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXCreateNewContext<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFogfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPixelTransferf<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXCreatePbuffer<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFogi<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPixelTransferi<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXCreatePixmap<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFogiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPixelZoom<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXCreateWindow<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFrontFace<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPointSize<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXDestroyContext<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFrustum<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPolygonMode<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXDestroyGLXPixmap<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGenLists<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPolygonOffset<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXDestroyPbuffer<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGenTextures<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPolygonStipple<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXDestroyPixmap<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetBooleanv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPopAttrib<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXDestroyWindow<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetClipPlane<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPopClientAttrib<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXFreeContextEXT<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetColorTable<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPopMatrix<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetClientString<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetColorTableParameterfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPopName<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetConfig<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetColorTableParameteriv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPrioritizeTextures<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetContextIDEXT<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetConvolutionFilter<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPushAttrib<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetCurrentContext<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetConvolutionParameterfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPushClientAttrib<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetCurrentDisplay<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetConvolutionParameteriv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPushMatrix<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetCurrentDrawable<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetDoublev<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glPushName<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetCurrentReadDrawable<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetError<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos2d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetFBConfigAttrib<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetFloatv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos2dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetFBConfigs<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetHistogram<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos2f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetProcAddressARB<LINK LINKEND="std.OGL.ABI">[OGL ABI]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetHistogramParameterfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos2fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetSelectedEvent<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetHistogramParameteriv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos2i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXGetVisualFromFBConfig<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetIntegerv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos2iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXImportContextEXT<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetLightfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos2s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXIsDirect<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetLightiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos2sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXMakeContextCurrent<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMapdv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos3d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXMakeCurrent<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMapfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos3dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXQueryContext<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMapiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos3f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXQueryContextInfoEXT<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMaterialfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos3fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXQueryDrawable<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMaterialiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos3i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXQueryExtension<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMinmax<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos3iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXQueryExtensionsString<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMinmaxParameterfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos3s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXQueryServerString<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMinmaxParameteriv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos3sv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXQueryVersion<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetPixelMapfv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos4d<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXSelectEvent<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetPixelMapuiv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos4dv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXSwapBuffers<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetPixelMapusv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos4f<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXUseXFont<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetPointerv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos4fv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXWaitGL<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetPolygonStipple<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos4i<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glXWaitX<LINK LINKEND="std.GLX">[GLX]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetSeparableFilter<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos4iv<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>glGetString<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY>glRasterPos4s<LINK LINKEND="std.OGL">[OGL]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libGLU>
<TITLE>libGLU</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.GLU"> [GLU]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libGLU Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>gluBeginCurve<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluErrorString<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluProject<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluBeginPolygon<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluGetNurbsProperty<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluPwlCurve<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluBeginSurface<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluGetString<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluQuadricCallback<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluBeginTrim<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluGetTessProperty<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluQuadricDrawStyle<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluBuild1DMipmapLevels<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluLoadSamplingMatrices<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluQuadricNormals<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluBuild1DMipmaps<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluLookAt<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluQuadricOrientation<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluBuild2DMipmapLevels<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluNewNurbsRenderer<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluQuadricTexture<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluBuild2DMipmaps<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluNewQuadric<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluScaleImage<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluBuild3DMipmapLevels<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluNewTess<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluSphere<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluBuild3DMipmaps<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluNextContour<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluTessBeginContour<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluCheckExtension<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluNurbsCallback<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluTessBeginPolygon<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluCylinder<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluNurbsCallbackData<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluTessCallback<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluDeleteNurbsRenderer<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluNurbsCallbackDataEXT<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluTessEndContour<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluDeleteQuadric<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluNurbsCurve<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluTessEndPolygon<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluDeleteTess<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluNurbsProperty<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluTessNormal<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluDisk<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluNurbsSurface<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluTessProperty<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluEndCurve<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluOrtho2D<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluTessVertex<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluEndPolygon<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluPartialDisk<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluUnProject<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluEndSurface<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluPerspective<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluUnProject4<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY></ROW>
<ROW><ENTRY>gluEndTrim<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY>gluPickMatrix<LINK LINKEND="std.GLU">[GLU]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libICE>
<TITLE>libICE</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB"> [LSB]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.XICE"> [XICE]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libICE Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>IceAcceptConnection<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceGetInBufSize<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceRegisterForProtocolReply<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceAddConnectionWatch<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceGetListenConnectionNumber<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceRegisterForProtocolSetup<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceAllocScratch<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceGetListenConnectionString<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceRelease<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceAppLockConn<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceGetOutBufSize<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceRemoveConnectionWatch<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceAppUnlockConn<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceInitThreads<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceSetErrorHandler<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceAuthFileName<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceLastReceivedSequenceNumber<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceSetHostBasedAuthProc<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceCheckShutdownNegotiation<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceLastSentSequenceNumber<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceSetIOErrorHandler<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceCloseConnection<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceListenForConnections<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceSetPaAuthData<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceComposeNetworkIdList<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceListenForWellKnownConnections<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceSetShutdownNegotiation<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceConnectionNumber<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceLockAuthFile<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceSwapping<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceConnectionStatus<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceOpenConnection<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceUnlockAuthFile<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceConnectionString<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IcePing<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceVendor<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceFlush<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceProcessMessages<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceWriteAuthFileEntry<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceFreeAuthFileEntry<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceProtocolRevision<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>_IceRead<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceFreeListenObjs<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceProtocolSetup<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>_IceReadSkip<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceGenerateMagicCookie<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceProtocolShutdown<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>_IceWrite<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceGetAuthFileEntry<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceProtocolVersion<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>IceGetConnectionContext<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY>IceReadAuthFileEntry<LINK LINKEND="std.XICE">[XICE]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libSM>
<TITLE>libSM</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.XSM"> [XSM]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libSM Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>SmFreeProperty<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmcRelease<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsInitialize<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmFreeReasons<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmcRequestSaveYourself<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsInteract<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcClientID<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmcRequestSaveYourselfPhase2<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsProtocolRevision<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcCloseConnection<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmcSaveYourselfDone<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsProtocolVersion<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcDeleteProperties<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmcSetErrorHandler<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsRegisterClientReply<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcGetIceConnection<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmcSetProperties<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsReturnProperties<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcGetProperties<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmcVendor<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsSaveComplete<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcInteractDone<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsCleanUp<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsSaveYourself<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcInteractRequest<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsClientHostName<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsSaveYourselfPhase2<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcModifyCallbacks<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsClientID<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsSetErrorHandler<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcOpenConnection<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsDie<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsShutdownCancelled<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcProtocolRevision<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsGenerateClientID<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>SmcProtocolVersion<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY>SmsGetIceConnection<LINK LINKEND="std.XSM">[XSM]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libX11>
<TITLE>libX11</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB"> [LSB]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.XKBlib"> [XKBlib]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.Xlib"> [Xlib]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libX11 Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>XActivateScreenSaver<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XImageByteOrder<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELabWhiteShiftColors<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddConnectionWatch<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XInitExtension<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELuvClipL<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddExtension<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XInitImage<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELuvClipLuv<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddHost<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XInitThreads<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELuvClipuv<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddHosts<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XInsertModifiermapEntry<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELuvQueryMaxC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddPixel<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XInstallColormap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELuvQueryMaxL<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddToExtensionList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XInternAtom<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELuvQueryMaxLC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddToSaveSet<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XInternAtoms<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELuvQueryMinL<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllPlanes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XInternalConnectionNumbers<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELuvToCIEuvY<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocClassHint<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XIntersectRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELuvWhiteShiftColors<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XKeycodeToKeysym<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIEXYZToCIELab<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocColorCells<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XKeysymToKeycode<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIEXYZToCIEuvY<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocColorPlanes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XKeysymToString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIEXYZToCIExyY<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocIconSize<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XKillClient<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIEXYZToRGBi<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocNamedColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XLastKnownRequestProcessed<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIEuvYToCIELuv<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocSizeHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XListDepths<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIEuvYToCIEXYZ<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocStandardColormap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XListExtensions<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIEuvYToTekHVC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocWMHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XListFonts<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIExyYToCIEXYZ<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllowEvents<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XListFontsWithInfo<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsClientWhitePointOfCCC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAutoRepeatOff<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XListHosts<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsConvertColors<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAutoRepeatOn<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XListInstalledColormaps<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCreateCCC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBaseFontNameListOfFontSet<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XListPixmapFormats<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsDefaultCCC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBell<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XListProperties<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsDisplayOfCCC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBitmapBitOrder<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XLoadFont<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsFormatOfPrefix<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBitmapPad<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XLoadQueryFont<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsFreeCCC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBitmapUnit<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XLocaleOfFontSet<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsLookupColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBlackPixel<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XLocaleOfIM<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsPrefixOfFormat<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBlackPixelOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XLocaleOfOM<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsQueryBlack<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCellsOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XLockDisplay<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsQueryBlue<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeActivePointerGrab<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XLookupColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsQueryColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeGC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XLookupKeysym<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsQueryColors<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeKeyboardControl<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XLookupString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsQueryGreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeKeyboardMapping<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XLowerWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsQueryRed<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangePointerControl<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XMapRaised<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsQueryWhite<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeProperty<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XMapSubwindows<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsRGBToRGBi<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeSaveSet<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XMapWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsRGBiToCIEXYZ<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeWindowAttributes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XMaskEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsRGBiToRGB<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCheckIfEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XMatchVisualInfo<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsScreenNumberOfCCC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCheckMaskEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XMaxCmapsOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsScreenWhitePointOfCCC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCheckTypedEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XMaxRequestSize<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsSetCCCOfColormap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCheckTypedWindowEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XMinCmapsOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsSetCompressionProc<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCheckWindowEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XMoveResizeWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsSetWhiteAdjustProc<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCirculateSubwindows<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XMoveWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsSetWhitePoint<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCirculateSubwindowsDown<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XNewModifiermap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsStoreColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCirculateSubwindowsUp<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XNextEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsStoreColors<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XClearArea<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XNextRequest<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsTekHVCClipC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XClearWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XNoOp<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsTekHVCClipV<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XClipBox<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XOMOfOC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsTekHVCClipVC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCloseDisplay<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XOffsetRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsTekHVCQueryMaxC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCloseIM<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XOpenDisplay<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsTekHVCQueryMaxV<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCloseOM<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XOpenIM<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsTekHVCQueryMaxVC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XConfigureWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XOpenOM<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsTekHVCQueryMaxVSamples<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XConnectionNumber<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XParseColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsTekHVCQueryMinV<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XContextDependentDrawing<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XParseGeometry<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsTekHVCToCIEuvY<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XContextualDrawing<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XPeekEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsTekHVCWhiteShiftColors<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XConvertCase<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XPeekIfEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsVisualOfCCC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XConvertSelection<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XPending<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocClientMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCopyArea<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XPlanesOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocCompatMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCopyColormapAndFree<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XPointInRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocControls<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCopyGC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XPolygonRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomColors<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCopyPlane<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XProcessInternalConnection<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomDoodads<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateBitmapFromData<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XProtocolRevision<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomKeyAliases<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateColormap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XProtocolVersion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomKeys<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateFontCursor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XPutBackEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomOutlines<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateFontSet<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XPutImage<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomOverlayKeys<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateGC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XPutPixel<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomOverlayRows<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateGlyphCursor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQLength<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomOverlays<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateIC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryBestCursor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomPoints<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateImage<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryBestSize<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomProps<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateOC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryBestStipple<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomRows<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreatePixmap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryBestTile<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomSectionDoodads<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreatePixmapCursor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomSections<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreatePixmapFromBitmapData<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryColors<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeomShapes<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryExtension<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocGeometry<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateSimpleWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryFont<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocIndicatorMaps<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryKeymap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocKeyboard<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultColormap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryPointer<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocNames<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultColormapOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryTextExtents<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbAllocServerMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultDepth<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryTextExtents16<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbApplyCompatMapToKey<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultDepthOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XQueryTree<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbBell<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultGC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRaiseWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbBellEvent<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultGCOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XReadBitmapFile<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbChangeEnabledControls<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultRootWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XReadBitmapFileData<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbChangeMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRebindKeysym<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbChangeNames<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultScreenOfDisplay<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRecolorCursor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbChangeTypesOfKey<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XReconfigureWMWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbComputeEffectiveMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultVisual<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRectInRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbComputeRowBounds<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultVisualOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRefreshKeyboardMapping<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbComputeSectionBounds<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefineCursor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRegisterIMInstantiateCallback<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbComputeShapeBounds<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDeleteContext<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRemoveConnectionWatch<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbComputeShapeTop<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDeleteModifiermapEntry<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRemoveFromSaveSet<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbCopyKeyType<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDeleteProperty<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRemoveHost<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbCopyKeyTypes<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroyIC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRemoveHosts<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFindOverlayForKey<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroyImage<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XReparentWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbForceBell<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroyOC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XResetScreenSaver<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeClientMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroyRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XResizeWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeCompatMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroySubwindows<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XResourceManagerString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeComponentList<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroyWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRestackWindows<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeControls<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDirectionalDependentDrawing<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRootWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomColors<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisableAccessControl<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRootWindowOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomDoodads<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayCells<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRotateBuffers<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomKeyAliases<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayHeight<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XRotateWindowProperties<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomKeys<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayHeightMM<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSaveContext<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomOutlines<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayKeycodes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XScreenCount<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomOverlayKeys<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayMotionBufferSize<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XScreenNumberOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomOverlayRows<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayName<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XScreenOfDisplay<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomOverlays<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayOfIM<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XScreenResourceString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomPoints<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayOfOM<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSelectInput<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomProperties<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSendEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomRows<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayPlanes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XServerVendor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomSections<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetAccessControl<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeomShapes<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayWidth<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetAfterFunction<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeGeometry<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayWidthMM<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetArcMode<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeIndicatorMaps<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDoesBackingStore<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetAuthorization<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeKeyboard<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDoesSaveUnders<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetBackground<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeNames<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawArc<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetClassHint<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbFreeServerMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawArcs<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetClipMask<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetAutoRepeatRate<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawImageString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetClipOrigin<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetCompatMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawImageString16<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetClipRectangles<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetControls<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawLine<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetCloseDownMode<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetGeometry<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawLines<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetCommand<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetIndicatorMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawPoint<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetDashes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetIndicatorState<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawPoints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetErrorHandler<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetKeyActions<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawRectangle<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetFillRule<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetKeyBehaviors<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawRectangles<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetFillStyle<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetKeyExplicitComponents<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawSegments<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetFont<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetKeyModifierMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetFontPath<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetKeySyms<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawString16<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetForeground<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetKeyTypes<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawText<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetFunction<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetKeyboard<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawText16<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetGraphicsExposures<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetKeyboardByName<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEHeadOfExtensionList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetICFocus<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetBeforeFlush<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetICValues<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetMapChanges<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetCloseDisplay<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetIMValues<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetNamedGeometry<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetCopyGC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetIOErrorHandler<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetNamedIndicator<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetCreateFont<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetIconName<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetNames<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetCreateGC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetIconSizes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetPerClientControls<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetError<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetInputFocus<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetState<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetErrorString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetLineAttributes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetUpdatedMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetEventToWire<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetLocaleModifiers<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetVirtualMods<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetFlushGC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetModifierMapping<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbGetXlibControls<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetFreeFont<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetNormalHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbIgnoreExtension<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetFreeGC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetOCValues<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbInitCanonicalKeyTypes<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetPrintErrorValues<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetOMValues<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbKeyTypesForCoreSymbols<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetWireToError<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetPlaneMask<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbKeycodeToKeysym<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetWireToEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetPointerMapping<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbKeysymToModifiers<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEmptyRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetRGBColormaps<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbLatchGroup<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEnableAccessControl<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbLatchModifiers<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEqualRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetScreenSaver<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbLibraryVersion<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEventMaskOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetSelectionOwner<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbListComponents<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEventsQueued<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetSizeHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbLockGroup<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XExtendedMaxRequestSize<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetStandardColormap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbLockModifiers<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XExtentsOfFontSet<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetStandardProperties<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbLookupKeyBinding<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFetchBuffer<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetState<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbLookupKeySym<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFetchBytes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetStipple<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbNoteControlsChanges<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFetchName<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetSubwindowMode<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbNoteMapChanges<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFillArc<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetTSOrigin<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbNoteNameChanges<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFillArcs<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetTextProperty<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbOpenDisplay<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFillPolygon<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetTile<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbQueryExtension<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFillRectangle<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetTransientForHint<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbRefreshKeyboardMapping<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFillRectangles<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWMClientMachine<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbResizeKeyActions<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFilterEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWMColormapWindows<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbResizeKeySyms<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFindContext<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWMHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbResizeKeyType<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFindOnExtensionList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWMIconName<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSelectEventDetails<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFlush<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWMName<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSelectEvents<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFlushGC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWMNormalHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetAtomFuncs<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFontsOfFontSet<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWMProperties<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetAutoRepeatRate<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XForceScreenSaver<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWMProtocols<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetAutoResetControls<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFree<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWMSizeHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetCompatMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeColormap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWindowBackground<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetControls<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeColors<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWindowBackgroundPixmap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetDebuggingFlags<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeCursor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWindowBorder<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetDetectableAutoRepeat<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeExtensionList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWindowBorderPixmap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetGeometry<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeFont<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWindowBorderWidth<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetIgnoreLockMods<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeFontInfo<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetWindowColormap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetIndicatorMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeFontNames<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSetZoomHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetMap<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeFontPath<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XShrinkRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetNamedIndicator<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeFontSet<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XStoreBuffer<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetNames<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeGC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XStoreBytes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetPerClientControls<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeModifiermap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XStoreColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetServerInternalMods<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreePixmap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XStoreColors<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbSetXlibControls<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeStringList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XStoreName<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbToControl<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGContextFromGC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XStoreNamedColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbTranslateKeyCode<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGeometry<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XStringListToTextProperty<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbTranslateKeySym<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetAtomName<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XStringToKeysym<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbUpdateMapFromCore<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetAtomNames<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSubImage<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbUseExtension<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetClassHint<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSubtractRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XkbVirtualModsToReal<LINK LINKEND="std.XKBlib">[XKBlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetCommand<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSupportsLocale<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XmbDrawImageString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetDefault<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSync<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XmbDrawString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetErrorDatabaseText<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XSynchronize<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XmbDrawText<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetErrorText<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XTextExtents<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XmbLookupString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetFontPath<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XTextExtents16<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XmbResetIC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetFontProperty<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XTextPropertyToStringList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XmbSetWMProperties<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetGCValues<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XTextWidth<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XmbTextEscapement<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetGeometry<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XTextWidth16<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XmbTextExtents<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetICValues<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XTranslateCoordinates<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XmbTextListToTextProperty<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetIMValues<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUndefineCursor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XmbTextPerCharExtents<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetIconName<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUngrabButton<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XmbTextPropertyToTextList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetIconSizes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUngrabKey<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmCombineDatabase<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetImage<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUngrabKeyboard<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmCombineFileDatabase<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetInputFocus<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUngrabPointer<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmDestroyDatabase<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetKeyboardControl<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUngrabServer<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmEnumerateDatabase<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetKeyboardMapping<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUninstallColormap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmGetDatabase<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetModifierMapping<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUnionRectWithRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmGetFileDatabase<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetMotionEvents<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUnionRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmGetResource<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetNormalHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUnloadFont<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmGetStringDatabase<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetOCValues<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUnlockDisplay<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmInitialize<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetOMValues<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUnmapSubwindows<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmLocaleOfDatabase<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetPixel<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUnmapWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmMergeDatabases<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetPointerControl<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUnregisterIMInstantiateCallback<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmParseCommand<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetPointerMapping<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XUnsetICFocus<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmPermStringToQuark<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetRGBColormaps<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XVaCreateNestedList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmPutFileDatabase<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetScreenSaver<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XVendorRelease<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmPutLineResource<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetSelectionOwner<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XVisualIDFromVisual<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmPutResource<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetSizeHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XWMGeometry<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmPutStringResource<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetStandardColormap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XWarpPointer<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmQGetResource<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetSubImage<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XWhitePixel<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmQGetSearchList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetTextProperty<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XWhitePixelOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmQGetSearchResource<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetTransientForHint<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XWidthMMOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmQPutResource<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetVisualInfo<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XWidthOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmQPutStringResource<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMClientMachine<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XWindowEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmQuarkToString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMColormapWindows<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XWithdrawWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmSetDatabase<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XWriteBitmapFile<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmStringToBindingQuarkList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMIconName<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XXorRegion<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmStringToQuark<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMName<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XauDisposeAuth<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmStringToQuarkList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMNormalHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XauFileName<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XrmUniqueQuark<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMProtocols<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XauGetBestAuthByAddr<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>Xutf8TextListToTextProperty<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMSizeHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XauReadAuth<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>Xutf8TextPropertyToTextList<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWindowAttributes<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsAddColorSpace<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XwcDrawImageString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWindowProperty<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsAddFunctionSet<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XwcDrawString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetZoomHints<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsAllocColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XwcDrawText<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGrabButton<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsAllocNamedColor<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XwcFreeStringList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGrabKey<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCCCOfColormap<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XwcLookupString<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGrabKeyboard<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELabClipL<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XwcResetIC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGrabPointer<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELabClipLab<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XwcTextEscapement<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGrabServer<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELabClipab<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XwcTextExtents<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XHeightMMOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELabQueryMaxC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XwcTextListToTextProperty<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XHeightOfScreen<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELabQueryMaxL<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XwcTextPerCharExtents<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XIMOfIC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELabQueryMaxLC<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XwcTextPropertyToTextList<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY></ROW>
<ROW><ENTRY>XIconifyWindow<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELabQueryMinL<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>XIfEvent<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY>XcmsCIELabToCIEXYZ<LINK LINKEND="std.Xlib">[Xlib]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libXext>
<TITLE>libXext</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB"> [LSB]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.dbe"> [X-dbe]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.DPMS"> [X-DPMS]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.evi"> [X-evi]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.security"> [X-security]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.shape"> [X-shape]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.shm"> [X-shm]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.sync"> [X-sync]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libXext Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>DPMSCapable<LINK LINKEND="std.X.DPMS">[X-DPMS]</LINK></ENTRY><ENTRY>XShmCreatePixmap<LINK LINKEND="std.X.shm">[X-shm]</LINK></ENTRY><ENTRY>XSyncValueEqual<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSDisable<LINK LINKEND="std.X.DPMS">[X-DPMS]</LINK></ENTRY><ENTRY>XShmDetach<LINK LINKEND="std.X.shm">[X-shm]</LINK></ENTRY><ENTRY>XSyncValueGreaterOrEqual<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSEnable<LINK LINKEND="std.X.DPMS">[X-DPMS]</LINK></ENTRY><ENTRY>XShmGetEventBase<LINK LINKEND="std.X.shm">[X-shm]</LINK></ENTRY><ENTRY>XSyncValueGreaterThan<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSForceLevel<LINK LINKEND="std.X.DPMS">[X-DPMS]</LINK></ENTRY><ENTRY>XShmGetImage<LINK LINKEND="std.X.shm">[X-shm]</LINK></ENTRY><ENTRY>XSyncValueHigh32<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSGetTimeouts<LINK LINKEND="std.X.DPMS">[X-DPMS]</LINK></ENTRY><ENTRY>XShmPixmapFormat<LINK LINKEND="std.X.shm">[X-shm]</LINK></ENTRY><ENTRY>XSyncValueIsNegative<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSGetVersion<LINK LINKEND="std.X.DPMS">[X-DPMS]</LINK></ENTRY><ENTRY>XShmPutImage<LINK LINKEND="std.X.shm">[X-shm]</LINK></ENTRY><ENTRY>XSyncValueIsPositive<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSInfo<LINK LINKEND="std.X.DPMS">[X-DPMS]</LINK></ENTRY><ENTRY>XShmQueryExtension<LINK LINKEND="std.X.shm">[X-shm]</LINK></ENTRY><ENTRY>XSyncValueIsZero<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSQueryExtension<LINK LINKEND="std.X.DPMS">[X-DPMS]</LINK></ENTRY><ENTRY>XShmQueryVersion<LINK LINKEND="std.X.shm">[X-shm]</LINK></ENTRY><ENTRY>XSyncValueLessOrEqual<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSSetTimeouts<LINK LINKEND="std.X.DPMS">[X-DPMS]</LINK></ENTRY><ENTRY>XSyncAwait<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XSyncValueLessThan<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY></ROW>
<ROW><ENTRY>XMissingExtension<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY><ENTRY>XSyncChangeAlarm<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XSyncValueLow32<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY></ROW>
<ROW><ENTRY>XSecurityAllocXauth<LINK LINKEND="std.X.security">[X-security]</LINK></ENTRY><ENTRY>XSyncChangeCounter<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XSyncValueSubtract<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY></ROW>
<ROW><ENTRY>XSecurityFreeXauth<LINK LINKEND="std.X.security">[X-security]</LINK></ENTRY><ENTRY>XSyncCreateAlarm<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XdbeAllocateBackBufferName<LINK LINKEND="std.X.dbe">[X-dbe]</LINK></ENTRY></ROW>
<ROW><ENTRY>XSecurityGenerateAuthorization<LINK LINKEND="std.X.security">[X-security]</LINK></ENTRY><ENTRY>XSyncCreateCounter<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XdbeBeginIdiom<LINK LINKEND="std.X.dbe">[X-dbe]</LINK></ENTRY></ROW>
<ROW><ENTRY>XSecurityQueryExtension<LINK LINKEND="std.X.security">[X-security]</LINK></ENTRY><ENTRY>XSyncDestroyAlarm<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XdbeDeallocateBackBufferName<LINK LINKEND="std.X.dbe">[X-dbe]</LINK></ENTRY></ROW>
<ROW><ENTRY>XSecurityRevokeAuthorization<LINK LINKEND="std.X.security">[X-security]</LINK></ENTRY><ENTRY>XSyncDestroyCounter<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XdbeEndIdiom<LINK LINKEND="std.X.dbe">[X-dbe]</LINK></ENTRY></ROW>
<ROW><ENTRY>XSetExtensionErrorHandler<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY><ENTRY>XSyncFreeSystemCounterList<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XdbeFreeVisualInfo<LINK LINKEND="std.X.dbe">[X-dbe]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeCombineMask<LINK LINKEND="std.X.shape">[X-shape]</LINK></ENTRY><ENTRY>XSyncGetPriority<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XdbeGetBackBufferAttributes<LINK LINKEND="std.X.dbe">[X-dbe]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeCombineRectangles<LINK LINKEND="std.X.shape">[X-shape]</LINK></ENTRY><ENTRY>XSyncInitialize<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XdbeGetVisualInfo<LINK LINKEND="std.X.dbe">[X-dbe]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeCombineRegion<LINK LINKEND="std.X.shape">[X-shape]</LINK></ENTRY><ENTRY>XSyncIntToValue<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XdbeQueryExtension<LINK LINKEND="std.X.dbe">[X-dbe]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeCombineShape<LINK LINKEND="std.X.shape">[X-shape]</LINK></ENTRY><ENTRY>XSyncIntsToValue<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XdbeSwapBuffers<LINK LINKEND="std.X.dbe">[X-dbe]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeGetRectangles<LINK LINKEND="std.X.shape">[X-shape]</LINK></ENTRY><ENTRY>XSyncListSystemCounters<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XeviGetVisualInfo<LINK LINKEND="std.X.evi">[X-evi]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeInputSelected<LINK LINKEND="std.X.shape">[X-shape]</LINK></ENTRY><ENTRY>XSyncMaxValue<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XeviQueryExtension<LINK LINKEND="std.X.evi">[X-evi]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeOffsetShape<LINK LINKEND="std.X.shape">[X-shape]</LINK></ENTRY><ENTRY>XSyncMinValue<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XeviQueryVersion<LINK LINKEND="std.X.evi">[X-evi]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeQueryExtension<LINK LINKEND="std.X.shape">[X-shape]</LINK></ENTRY><ENTRY>XSyncQueryAlarm<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XextAddDisplay<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeQueryExtents<LINK LINKEND="std.X.shape">[X-shape]</LINK></ENTRY><ENTRY>XSyncQueryCounter<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XextCreateExtension<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeQueryVersion<LINK LINKEND="std.X.shape">[X-shape]</LINK></ENTRY><ENTRY>XSyncQueryExtension<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XextDestroyExtension<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeSelectInput<LINK LINKEND="std.X.shape">[X-shape]</LINK></ENTRY><ENTRY>XSyncSetCounter<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XextFindDisplay<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShmAttach<LINK LINKEND="std.X.shm">[X-shm]</LINK></ENTRY><ENTRY>XSyncSetPriority<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY>XextRemoveDisplay<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShmCreateImage<LINK LINKEND="std.X.shm">[X-shm]</LINK></ENTRY><ENTRY>XSyncValueAdd<LINK LINKEND="std.X.sync">[X-sync]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libXi>
<TITLE>libXi</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.XINPUT"> [XINPUT]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libXi Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>XAllowDeviceEvents<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGetDeviceButtonMapping<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XOpenDevice<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeDeviceControl<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGetDeviceControl<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XQueryDeviceState<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeDeviceDontPropagateList<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGetDeviceDontPropagateList<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XSelectExtensionEvent<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeDeviceKeyMapping<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGetDeviceFocus<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XSendExtensionEvent<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeFeedbackControl<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGetDeviceKeyMapping<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XSetDeviceButtonMapping<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeKeyboardDevice<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGetDeviceModifierMapping<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XSetDeviceFocus<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangePointerDevice<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGetDeviceMotionEvents<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XSetDeviceMode<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCloseDevice<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGetExtensionVersion<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XSetDeviceModifierMapping<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDeviceBell<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGetFeedbackControl<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XSetDeviceValuators<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeDeviceControl<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGetSelectedExtensionEvents<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XUngrabDevice<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeDeviceList<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGrabDevice<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XUngrabDeviceButton<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeDeviceMotionEvents<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGrabDeviceButton<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XUngrabDeviceKey<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeDeviceState<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XGrabDeviceKey<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>XFreeFeedbackList<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY>XListInputDevices<LINK LINKEND="std.XINPUT">[XINPUT]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libXt>
<TITLE>libXt</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB"> [LSB]
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.Xt"> [Xt]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libXt Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>XtAddActions<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtCvtStringToInitialState<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtOwnSelectionIncremental<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddCallback<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtCvtStringToInt<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtParent<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddCallbacks<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtCvtStringToPixel<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtParseAcceleratorTable<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddConverter<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtCvtStringToRestartStyle<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtParseTranslationTable<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddEventHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtCvtStringToShort<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtPeekEvent<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddExposureToRegion<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtCvtStringToTranslationTable<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtPending<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddGrab<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtCvtStringToUnsignedChar<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtPopdown<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddInput<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtCvtStringToVisual<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtPopup<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddRawEventHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDatabase<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtPopupSpringLoaded<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddSignal<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDestroyApplicationContext<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtProcessEvent<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddTimeOut<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDestroyGC<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtProcessLock<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddWorkProc<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDestroyWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtProcessUnlock<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAllocateGC<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDirectConvert<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtQueryGeometry<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddActionHook<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDisownSelection<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRealizeWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddActions<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDispatchEvent<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRealloc<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddBlockHook<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDispatchEventToWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRegisterCaseConverter<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddConverter<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDisplay<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRegisterDrawable<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddInput<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDisplayInitialize<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRegisterExtensionSelector<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddSignal<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDisplayOfObject<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRegisterGrabAction<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddTimeOut<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDisplayStringConversionWarning<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtReleaseGC<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddWorkProc<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtDisplayToApplicationContext<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtReleasePropertyAtom<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppCreateShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtError<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveActionHook<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppError<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtErrorMsg<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveAllCallbacks<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppErrorMsg<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtFindFile<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveBlockHook<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppGetErrorDatabase<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtFree<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveCallback<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppGetErrorDatabaseText<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetActionKeysym<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveCallbacks<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppGetExitFlag<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetActionList<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveEventHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppGetSelectionTimeout<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetApplicationNameAndClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveEventTypeHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppInitialize<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetApplicationResources<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveGrab<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppLock<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetClassExtension<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveInput<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppMainLoop<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetConstraintResourceList<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveRawEventHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppNextEvent<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetDisplays<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveSignal<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppPeekEvent<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetErrorDatabase<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveTimeOut<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppPending<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetErrorDatabaseText<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtRemoveWorkProc<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppProcessEvent<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetGC<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtReservePropertyAtom<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppReleaseCacheRefs<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetKeyboardFocusWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtResizeWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetErrorHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetKeysymTable<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtResizeWindow<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetErrorMsgHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetMultiClickTime<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtResolvePathname<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetExitFlag<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetResourceList<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtScreen<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetFallbackResources<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetSelectionParameters<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtScreenDatabase<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetSelectionTimeout<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetSelectionRequest<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtScreenOfObject<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetTypeConverter<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetSelectionTimeout<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSendSelectionRequest<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetWarningHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetSelectionValue<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSessionGetToken<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetWarningMsgHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetSelectionValueIncremental<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSessionReturnToken<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppUnlock<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetSelectionValues<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetErrorHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppWarning<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetSelectionValuesIncremental<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetErrorMsgHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppWarningMsg<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetSubresources<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetEventDispatcher<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAugmentTranslations<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetSubvalues<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetKeyTranslator<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtBuildEventMask<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGetValues<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetKeyboardFocus<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallAcceptFocus<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGrabButton<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetLanguageProc<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallActionProc<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGrabKey<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetMappedWhenManaged<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallCallbackList<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGrabKeyboard<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetMultiClickTime<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallCallbacks<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtGrabPointer<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetSelectionParameters<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallConverter<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtHasCallbacks<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetSelectionTimeout<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackExclusive<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtHooksOfDisplay<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetSensitive<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackNone<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtInitialize<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetSubvalues<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackNonexclusive<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtInitializeWidgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetTypeConverter<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackPopdown<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtInsertEventHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetValues<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackReleaseCacheRef<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtInsertEventTypeHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetWMColormapWindows<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackReleaseCacheRefList<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtInsertRawEventHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetWarningHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCalloc<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtInstallAccelerators<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSetWarningMsgHandler<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCancelSelectionRequest<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtInstallAllAccelerators<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtStringConversionWarning<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtChangeManagedSet<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsApplicationShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtSuperclass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsComposite<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtToolkitInitialize<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCloseDisplay<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsConstraint<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtToolkitThreadInitialize<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtConfigureWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsManaged<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtTranslateCoords<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtConvert<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsObject<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtTranslateKey<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtConvertAndStore<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsOverrideShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtTranslateKeycode<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtConvertCase<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsRealized<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtUngrabButton<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateApplicationContext<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsRectObj<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtUngrabKey<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateApplicationShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsSensitive<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtUngrabKeyboard<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateManagedWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsSessionShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtUngrabPointer<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreatePopupShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtUninstallTranslations<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateSelectionRequest<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsSubclass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtUnmanageChild<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsTopLevelShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtUnmanageChildren<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateWindow<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsTransientShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtUnmapWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtColorToPixel<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsVendorShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtUnrealizeWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToBool<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsWMShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtUnregisterDrawable<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToBoolean<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtIsWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaAppCreateShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToColor<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtKeysymToKeycodeList<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaAppInitialize<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToFloat<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtLastEventProcessed<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaCreateArgsList<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToFont<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtLastTimestampProcessed<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaCreateManagedWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToPixel<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtMainLoop<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaCreatePopupShell<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToPixmap<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtMakeGeometryRequest<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaCreateWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToShort<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtMakeResizeRequest<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaGetApplicationResources<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToUnsignedChar<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtMalloc<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaGetSubresources<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToAcceleratorTable<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtManageChild<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaGetSubvalues<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToAtom<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtManageChildren<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaGetValues<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToBool<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtMapWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaOpenApplication<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToBoolean<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtMenuPopupAction<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaSetSubvalues<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToCommandArgArray<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtMergeArgLists<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtVaSetValues<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToCursor<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtMoveWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtWarning<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToDimension<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtName<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtWarningMsg<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToDirectoryString<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtNameToWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtWidgetToApplicationContext<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToDisplay<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtNewString<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtWindow<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToFile<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtNextEvent<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtWindowOfObject<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToFloat<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtNoticeSignal<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtWindowToWidget<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToFont<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtOpenApplication<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>_XtCheckSubclassFlag<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToFontSet<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtOpenDisplay<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>_XtCopyFromArg<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToFontStruct<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtOverrideTranslations<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>_XtInherit<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToGravity<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>XtOwnSelection<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>_XtIsSubclassOf<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libXt Data Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>XtCXtToolkitError<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>constraintWidgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>shellWidgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtShellStrings<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>coreWidgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>topLevelShellClassRec<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtStrings<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>objectClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>topLevelShellWidgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>_XtInheritTranslations<LINK LINKEND="std.LSB">[LSB]</LINK></ENTRY><ENTRY>objectClassRec<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>transientShellClassRec<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>applicationShellClassRec<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>overrideShellClassRec<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>transientShellWidgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>applicationShellWidgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>overrideShellWidgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>widgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>colorConvertArgs<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>rectObjClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>widgetClassRec<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>compositeClassRec<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>rectObjClassRec<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>wmShellClassRec<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>compositeWidgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>sessionShellClassRec<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>wmShellWidgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY></ROW>
<ROW><ENTRY>constraintClassRec<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY>sessionShellWidgetClass<LINK LINKEND="std.Xt">[Xt]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libXtst>
<TITLE>libXtst</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.X.test"> [X-test]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libXtst Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>XTestCompareCurrentCursorWithWindow<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY><ENTRY>XTestFakeDeviceKeyEvent<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY><ENTRY>XTestFakeRelativeMotionEvent<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY></ROW>
<ROW><ENTRY>XTestCompareCursorWithWindow<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY><ENTRY>XTestFakeDeviceMotionEvent<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY><ENTRY>XTestGrabControl<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY></ROW>
<ROW><ENTRY>XTestDiscard<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY><ENTRY>XTestFakeKeyEvent<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY><ENTRY>XTestQueryExtension<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY></ROW>
<ROW><ENTRY>XTestFakeButtonEvent<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY><ENTRY>XTestFakeMotionEvent<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY><ENTRY>XTestSetGContextOfGC<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY></ROW>
<ROW><ENTRY>XTestFakeDeviceButtonEvent<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY><ENTRY>XTestFakeProximityEvent<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY><ENTRY>XTestSetVisualIDOfVisual<LINK LINKEND="std.X.test">[X-test]</LINK></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<!-- End of text generated from database -->

</APPENDIX>
