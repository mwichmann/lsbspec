<refentry id="libICE--IceRead-1">

<refmeta>
<refentrytitle>_IceRead</refentrytitle>
<refmiscinfo>libICE</refmiscinfo>
</refmeta>

<refnamediv>
<refname>_IceRead</refname>
<refpurpose>read the specified number of bytes from an ICE connection</refpurpose>
<indexterm id="ix-libICE--IceRead-1">
	<primary>_IceRead</primary></indexterm>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;X11/ICE/ICEmsg.h&gt;
</funcsynopsisinfo><funcprototype>
<funcdef>int
<function>_IceRead</function>
</funcdef>
<paramdef>IceConn
<parameter>iceConn</parameter>
</paramdef>
<paramdef>unsigned long int
<parameter>nbytes</parameter>
</paramdef>
<paramdef>char *
<parameter>ptr</parameter>
</paramdef>

</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>The interface <function>_IceRead</function> shall read
the specified number of bytes from an Inter-Client Exchange connection.</para>
<para>The parameter <parameter>iceConn</parameter> shall specify the Inter-Client Exchange connection.</para>
<para>The parameter <parameter>nbytes</parameter> shall specify the number of bytes to read.</para>
<para>The output parameter <parameter>ptr</parameter> shall contain the data that was read.</para>
</refsect1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>_IceRead</FUNCTION> shall return <literal>0</literal>
if it detects that the connection has closed and this was expected.
</PARA>
<PARA>
In the case of a fatal I/O error,
<FUNCTION>_IceRead</FUNCTION> shall return <literal>1</literal>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>See Also
</TITLE>
<PARA>
<FUNCTION>_IceReadSkip</FUNCTION>, <FUNCTION>_IceWrite</FUNCTION>.
</PARA>
</REFSECT1>

</REFENTRY>

