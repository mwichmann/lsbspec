<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libXtst>
<TITLE>Interfaces for libXtst</TITLE>
<PARA>
<XREF LINKEND="lib-libXtst-def"> defines the library name and shared object name
for the libXtst library
</PARA>
<TABLE id="lib-libXtst-def">
<TITLE>libXtst Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libXtst</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libXtst.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libXtst.1'>
[X-test] <XREF LINKEND="std.X.test">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name libXtst Interfaces -->
<SECT2>
<!--libgroup-->
<TITLE>libXtst Interfaces</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for libXtst Interfaces</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for libXtst Interfaces specified in <XREF linkend="tbl-libXtst-libxt-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libXtst-libxt-ints">
<TITLE>libXtst - libXtst Interfaces Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>XTestCompareCurrentCursorWithWindow</primary></indexterm>XTestCompareCurrentCursorWithWindow <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTestCompareCursorWithWindow</primary></indexterm>XTestCompareCursorWithWindow <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTestDiscard</primary></indexterm>XTestDiscard <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTestFakeButtonEvent</primary></indexterm>XTestFakeButtonEvent <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XTestFakeDeviceButtonEvent</primary></indexterm>XTestFakeDeviceButtonEvent <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTestFakeDeviceKeyEvent</primary></indexterm>XTestFakeDeviceKeyEvent <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTestFakeDeviceMotionEvent</primary></indexterm>XTestFakeDeviceMotionEvent <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTestFakeKeyEvent</primary></indexterm>XTestFakeKeyEvent <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XTestFakeMotionEvent</primary></indexterm>XTestFakeMotionEvent <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTestFakeProximityEvent</primary></indexterm>XTestFakeProximityEvent <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTestFakeRelativeMotionEvent</primary></indexterm>XTestFakeRelativeMotionEvent <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTestGrabControl</primary></indexterm>XTestGrabControl <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>XTestQueryExtension</primary></indexterm>XTestQueryExtension <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTestSetGContextOfGC</primary></indexterm>XTestSetGContextOfGC <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY><indexterm><primary>XTestSetVisualIDOfVisual</primary></indexterm>XTestSetVisualIDOfVisual <LINK LINKEND="REFSTD.libXtst.1">[X-test]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libXtst-ddefs>
<TITLE>Data Definitions for libXtst</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libXtst.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>X11/extensions/XTest.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define XTestNumberErrors	0
#define XTestNumberEvents	0
#define X_XTestGetVersion	0
#define X_XTestCompareCursor	1
#define XTestMajorVersion	2
#define XTestMinorVersion	2
#define X_XTestFakeInput	2
#define X_XTestGrabControl	3
#define XTestExtensionName	"XTEST"

extern int XTestCompareCurrentCursorWithWindow(Display *, Window);
extern int XTestCompareCursorWithWindow(Display *, Window, Cursor);
extern int XTestDiscard(Display *);
extern int XTestFakeButtonEvent(Display *, unsigned int, int,
				unsigned long int);
extern int XTestFakeDeviceButtonEvent(Display *, XDevice *, unsigned int,
				      int, int *, int, unsigned long int);
extern int XTestFakeDeviceKeyEvent(Display *, XDevice *, unsigned int, int,
				   int *, int, unsigned long int);
extern int XTestFakeDeviceMotionEvent(Display *, XDevice *, int, int,
				      int *, int, unsigned long int);
extern int XTestFakeKeyEvent(Display *, unsigned int, int,
			     unsigned long int);
extern int XTestFakeMotionEvent(Display *, int, int, int,
				unsigned long int);
extern int XTestFakeProximityEvent(Display *, XDevice *, int, int *, int,
				   unsigned long int);
extern int XTestFakeRelativeMotionEvent(Display *, int, int,
					unsigned long int);
extern int XTestGrabControl(Display *, int);
extern int XTestQueryExtension(Display *, int *, int *, int *, int *);
extern void XTestSetGContextOfGC(GC, GContext);
extern void XTestSetVisualIDOfVisual(Visual *, VisualID);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
