<refentry id="libICE--IceReadSkip-1">

<refmeta>
<refentrytitle>_IceReadSkip</refentrytitle>
<refmiscinfo>libICE</refmiscinfo>
</refmeta>

<refnamediv>
<refname>_IceReadSkip</refname>
<refpurpose>advance to the end of the message when a bad header is read</refpurpose>
<indexterm id="ix-libICE--IceReadSkip-1">
	<primary>_IceReadSkip</primary></indexterm>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;X11/ICE/ICEmsg.h&gt;
</funcsynopsisinfo><funcprototype>
<funcdef>void
<function>_IceReadSkip</function>
</funcdef>
<paramdef>IceConn
<parameter>iceConn</parameter>
</paramdef>
<paramdef>unsigned long int
<parameter>nbytes</parameter>
</paramdef>

</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>The interface <function>_IceReadSkip</function> shall
advance to the end of the message when a header with a bad
major or minor opcode is read, so the next message can
be processed correctly.
</para>
<para>The parameter <parameter>iceConn</parameter> shall specify the Inter-Client Exchange connection.</para>
<para>The parameter <parameter>nbytes</parameter> shall specify the number of bytes to skip.
If the number of bytes specified is less than 512,
the interface shall assume 512 bytes should be skipped.
</para>
</refsect1>

<REFSECT1>
<TITLE>See Also
</TITLE>
<PARA>
<FUNCTION>_IceRead</FUNCTION>, <FUNCTION>_IceWrite</FUNCTION>.
</PARA>
</REFSECT1>

</REFENTRY>

