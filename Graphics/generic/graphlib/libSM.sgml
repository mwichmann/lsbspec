<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.82 2006/03/29 19:10:18 mats Exp 0 -->
<!--    at Mon Apr 24 10:57:30 2006 -->
<SECT1 ID=libSM>
<TITLE>Interfaces for libSM</TITLE>
<PARA>
<XREF LINKEND="lib-libSM-def"> defines the library name and shared object name
for the libSM library
</PARA>
<TABLE id="lib-libSM-def">
<TITLE>libSM Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libSM</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libSM.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libSM.1'>
[XSM] <XREF LINKEND="std.XSM">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Session Management Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Session Management Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Session Management Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Session Management Functions specified in <XREF linkend="tbl-libSM-sessi-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libSM-sessi-ints">
<TITLE>libSM - Session Management Functions Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>SmFreeProperty</primary></indexterm>SmFreeProperty <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmFreeReasons</primary></indexterm>SmFreeReasons <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcClientID</primary></indexterm>SmcClientID <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcCloseConnection</primary></indexterm>SmcCloseConnection <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmcDeleteProperties</primary></indexterm>SmcDeleteProperties <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcGetIceConnection</primary></indexterm>SmcGetIceConnection <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcGetProperties</primary></indexterm>SmcGetProperties <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcInteractDone</primary></indexterm>SmcInteractDone <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmcInteractRequest</primary></indexterm>SmcInteractRequest <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcModifyCallbacks</primary></indexterm>SmcModifyCallbacks <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcOpenConnection</primary></indexterm>SmcOpenConnection <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcProtocolRevision</primary></indexterm>SmcProtocolRevision <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmcProtocolVersion</primary></indexterm>SmcProtocolVersion <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcRelease</primary></indexterm>SmcRelease <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcRequestSaveYourself</primary></indexterm>SmcRequestSaveYourself <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcRequestSaveYourselfPhase2</primary></indexterm>SmcRequestSaveYourselfPhase2 <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmcSaveYourselfDone</primary></indexterm>SmcSaveYourselfDone <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcSetErrorHandler</primary></indexterm>SmcSetErrorHandler <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcSetProperties</primary></indexterm>SmcSetProperties <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmcVendor</primary></indexterm>SmcVendor <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmsCleanUp</primary></indexterm>SmsCleanUp <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsClientHostName</primary></indexterm>SmsClientHostName <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsClientID</primary></indexterm>SmsClientID <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsDie</primary></indexterm>SmsDie <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmsGenerateClientID</primary></indexterm>SmsGenerateClientID <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsGetIceConnection</primary></indexterm>SmsGetIceConnection <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsInitialize</primary></indexterm>SmsInitialize <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsInteract</primary></indexterm>SmsInteract <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmsProtocolRevision</primary></indexterm>SmsProtocolRevision <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsProtocolVersion</primary></indexterm>SmsProtocolVersion <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsRegisterClientReply</primary></indexterm>SmsRegisterClientReply <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsReturnProperties</primary></indexterm>SmsReturnProperties <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmsSaveComplete</primary></indexterm>SmsSaveComplete <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsSaveYourself</primary></indexterm>SmsSaveYourself <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsSaveYourselfPhase2</primary></indexterm>SmsSaveYourselfPhase2 <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY><indexterm><primary>SmsSetErrorHandler</primary></indexterm>SmsSetErrorHandler <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>SmsShutdownCancelled</primary></indexterm>SmsShutdownCancelled <LINK LINKEND="REFSTD.libSM.1">[XSM]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libSM-ddefs>
<TITLE>Data Definitions for libSM</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libSM.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>X11/SM/SMlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef IcePointer SmPointer;
typedef struct _SmcConn *SmcConn;
typedef struct _SmsConn *SmsConn;

typedef struct {
    int length;
    SmPointer value;
} SmPropValue;
typedef struct {
    char *name;
    char *type;
    int num_vals;
    SmPropValue *vals;
} SmProp;

typedef enum {
    SmcClosedNow,
    SmcClosedASAP,
    SmcConnectionInUse
} SmcCloseStatus;

typedef void (*SmcSaveYourselfPhase2Proc) (void);
typedef void (*SmcInteractProc) (void);
typedef void (*SmcDieProc) (void);
typedef void (*SmcShutdownCancelledProc) (void);
typedef void (*SmcSaveCompleteProc) (void);
typedef void (*SmcPropReplyProc) (void);

typedef struct {
    SmcShutdownCancelledProc callback;
    SmPointer client_data;
} SmcCallbacks;

typedef void (*SmsSetPropertiesProc) (void);
typedef void (*SmsDeletePropertiesProc) (void);
typedef void (*SmsGetPropertiesProc) (void);

typedef struct {
    SmsGetPropertiesProc callback;
    SmPointer manager_data;
} SmsCallbacks;

typedef int (*SmsNewClientProc) (void);

typedef void (*SmcErrorHandler) (void);
typedef void (*SmsErrorHandler) (void);

extern void SmFreeProperty(SmProp *);
extern void SmFreeReasons(int, char **);
extern char *SmcClientID(SmcConn);
extern SmcCloseStatus SmcCloseConnection(SmcConn, int, char **);
extern void SmcDeleteProperties(SmcConn, int, char **);
extern IceConn SmcGetIceConnection(SmcConn);
extern int SmcGetProperties(SmcConn, SmcPropReplyProc, SmPointer);
extern void SmcInteractDone(SmcConn, int);
extern int SmcInteractRequest(SmcConn, int, SmcInteractProc, SmPointer);
extern void SmcModifyCallbacks(SmcConn, unsigned long int, SmcCallbacks *);
extern SmcConn SmcOpenConnection(char *, SmPointer, int, int,
				 unsigned long int, SmcCallbacks *, char *,
				 char **, int, char *);
extern int SmcProtocolRevision(SmcConn);
extern int SmcProtocolVersion(SmcConn);
extern char *SmcRelease(SmcConn);
extern void SmcRequestSaveYourself(SmcConn, int, int, int, int, int);
extern int SmcRequestSaveYourselfPhase2(SmcConn, SmcSaveYourselfPhase2Proc,
					SmPointer);
extern void SmcSaveYourselfDone(SmcConn, int);
extern SmcErrorHandler SmcSetErrorHandler(SmcErrorHandler);
extern void SmcSetProperties(SmcConn, int, SmProp * *);
extern char *SmcVendor(SmcConn);
extern void SmsCleanUp(SmsConn);
extern char *SmsClientHostName(SmsConn);
extern char *SmsClientID(SmsConn);
extern void SmsDie(SmsConn);
extern char *SmsGenerateClientID(SmsConn);
extern IceConn SmsGetIceConnection(SmsConn);
extern int SmsInitialize(char *, char *, SmsNewClientProc, SmPointer,
			 IceHostBasedAuthProc, int, char *);
extern void SmsInteract(SmsConn);
extern int SmsProtocolRevision(SmsConn);
extern int SmsProtocolVersion(SmsConn);
extern int SmsRegisterClientReply(SmsConn, char *);
extern void SmsReturnProperties(SmsConn, int, SmProp * *);
extern void SmsSaveComplete(SmsConn);
extern void SmsSaveYourself(SmsConn, int, int, int, int);
extern void SmsSaveYourselfPhase2(SmsConn);
extern SmsErrorHandler SmsSetErrorHandler(SmsErrorHandler);
extern void SmsShutdownCancelled(SmsConn);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.82 2006/03/29 19:10:18 mats Exp 0 -->
