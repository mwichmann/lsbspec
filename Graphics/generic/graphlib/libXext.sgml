<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.21 2001/04/25 23:58:49 anderson Exp 0 -->
<!--    at Mon Apr 30 20:52:47 2001 -->
<SECT1 ID=libXext>
<TITLE>libXext</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libXext</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libXext.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
Double Buffer Extension Library<FOOTNOTE ID="std-18-38">
<PARA>
Double Buffer Extension Library</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
X Display Power Management Signaling (DPMS) Extension, Library Specification<FOOTNOTE ID="std-18-42">
<PARA>
X Display Power Management Signaling (DPMS) Extension, Library Specification</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Security Extension Specification, Version 7.1<FOOTNOTE ID="std-18-43">
<PARA>
Security Extension Specification, Version 7.1</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
X Nonrectangular Window Shape Extension Library Version 1.0<FOOTNOTE ID="std-18-36">
<PARA>
X Nonrectangular Window Shape Extension Library Version 1.0</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
MIT-SHM--The MIT Shared Memory Extension<FOOTNOTE ID="std-18-37">
<PARA>
MIT-SHM--The MIT Shared Memory Extension</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
X Synchronization Extension Library<FOOTNOTE ID="std-18-39">
<PARA>
X Synchronization Extension Library</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>X Shape Extension</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>XShapeCombineMask<FOOTNOTEREF LINKEND="std-18-36"></ENTRY><ENTRY>XShapeCombineShape<FOOTNOTEREF LINKEND="std-18-36"></ENTRY><ENTRY>XShapeOffsetShape<FOOTNOTEREF LINKEND="std-18-36"></ENTRY><ENTRY>XShapeQueryVersion<FOOTNOTEREF LINKEND="std-18-36"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>XShapeCombineRectangles<FOOTNOTEREF LINKEND="std-18-36"></ENTRY><ENTRY>XShapeGetRectangles<FOOTNOTEREF LINKEND="std-18-36"></ENTRY><ENTRY>XShapeQueryExtension<FOOTNOTEREF LINKEND="std-18-36"></ENTRY><ENTRY>XShapeSelectInput<FOOTNOTEREF LINKEND="std-18-36"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>XShapeCombineRegion<FOOTNOTEREF LINKEND="std-18-36"></ENTRY><ENTRY>XShapeInputSelected<FOOTNOTEREF LINKEND="std-18-36"></ENTRY><ENTRY>XShapeQueryExtents<FOOTNOTEREF LINKEND="std-18-36"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>X Display Power Managment Signaling Extension</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>DPMSCapable<FOOTNOTEREF LINKEND="std-18-42"></ENTRY><ENTRY>DPMSEnable<FOOTNOTEREF LINKEND="std-18-42"></ENTRY><ENTRY>DPMSGetTimeouts<FOOTNOTEREF LINKEND="std-18-42"></ENTRY><ENTRY>DPMSInfo<FOOTNOTEREF LINKEND="std-18-42"></ENTRY><ENTRY>DPMSSetTimeouts<FOOTNOTEREF LINKEND="std-18-42"></ENTRY></ROW>
<ROW><ENTRY>DPMSDisable<FOOTNOTEREF LINKEND="std-18-42"></ENTRY><ENTRY>DPMSForceLevel<FOOTNOTEREF LINKEND="std-18-42"></ENTRY><ENTRY>DPMSGetVersion<FOOTNOTEREF LINKEND="std-18-42"></ENTRY><ENTRY>DPMSQueryExtension<FOOTNOTEREF LINKEND="std-18-42"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>X Shared Memory Extensions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>XShmAttach<FOOTNOTEREF LINKEND="std-18-37"></ENTRY><ENTRY>XShmCreatePixmap<FOOTNOTEREF LINKEND="std-18-37"></ENTRY><ENTRY>XShmGetEventBase<FOOTNOTEREF LINKEND="std-18-37"></ENTRY><ENTRY>XShmPixmapFormat<FOOTNOTEREF LINKEND="std-18-37"></ENTRY><ENTRY>XShmQueryExtension<FOOTNOTEREF LINKEND="std-18-37"></ENTRY></ROW>
<ROW><ENTRY>XShmCreateImage<FOOTNOTEREF LINKEND="std-18-37"></ENTRY><ENTRY>XShmDetach<FOOTNOTEREF LINKEND="std-18-37"></ENTRY><ENTRY>XShmGetImage<FOOTNOTEREF LINKEND="std-18-37"></ENTRY><ENTRY>XShmPutImage<FOOTNOTEREF LINKEND="std-18-37"></ENTRY><ENTRY>XShmQueryVersion<FOOTNOTEREF LINKEND="std-18-37"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>X Security Extension</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>XSecurityAllocXauth<FOOTNOTEREF LINKEND="std-18-43"></ENTRY><ENTRY>XSecurityFreeXauth<FOOTNOTEREF LINKEND="std-18-43"></ENTRY><ENTRY>XSecurityGenerateAuthorization<FOOTNOTEREF LINKEND="std-18-43"></ENTRY><ENTRY>XSecurityQueryExtension<FOOTNOTEREF LINKEND="std-18-43"></ENTRY><ENTRY>XSecurityRevokeAuthorization<FOOTNOTEREF LINKEND="std-18-43"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>X Synchronization Extension</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>XSyncAwait<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncFreeSystemCounterList<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncMinValue<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueEqual<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueLessOrEqual<FOOTNOTEREF LINKEND="std-18-39"></ENTRY></ROW>
<ROW><ENTRY>XSyncChangeAlarm<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncGetPriority<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncQueryAlarm<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueGreaterOrEqual<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueLessThan<FOOTNOTEREF LINKEND="std-18-39"></ENTRY></ROW>
<ROW><ENTRY>XSyncChangeCounter<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncInitialize<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncQueryCounter<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueGreaterThan<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueLow32<FOOTNOTEREF LINKEND="std-18-39"></ENTRY></ROW>
<ROW><ENTRY>XSyncCreateAlarm<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncIntToValue<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncQueryExtension<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueHigh32<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueSubtract<FOOTNOTEREF LINKEND="std-18-39"></ENTRY></ROW>
<ROW><ENTRY>XSyncCreateCounter<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncIntsToValue<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncSetCounter<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueIsNegative<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>XSyncDestroyAlarm<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncListSystemCounters<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncSetPriority<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueIsPositive<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>XSyncDestroyCounter<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncMaxValue<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueAdd<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY>XSyncValueIsZero<FOOTNOTEREF LINKEND="std-18-39"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>X Double Buffer Extension</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>XdbeAllocateBackBufferName<FOOTNOTEREF LINKEND="std-18-38"></ENTRY><ENTRY>XdbeDeallocateBackBufferName<FOOTNOTEREF LINKEND="std-18-38"></ENTRY><ENTRY>XdbeFreeVisualInfo<FOOTNOTEREF LINKEND="std-18-38"></ENTRY><ENTRY>XdbeGetVisualInfo<FOOTNOTEREF LINKEND="std-18-38"></ENTRY><ENTRY>XdbeSwapBuffers<FOOTNOTEREF LINKEND="std-18-38"></ENTRY></ROW>
<ROW><ENTRY>XdbeBeginIdiom<FOOTNOTEREF LINKEND="std-18-38"></ENTRY><ENTRY>XdbeEndIdiom<FOOTNOTEREF LINKEND="std-18-38"></ENTRY><ENTRY>XdbeGetBackBufferAttributes<FOOTNOTEREF LINKEND="std-18-38"></ENTRY><ENTRY>XdbeQueryExtension<FOOTNOTEREF LINKEND="std-18-38"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libXext-ddefs>
<TITLE> Data Definitions for libXext</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>X11/extensions/dpms.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int DPMSCapable(Display *);
int DPMSDisable(Display *);
int DPMSEnable(Display *);
int DPMSForceLevel(Display *, CARD16);
int DPMSGetTimeouts(Display *, CARD16 *, CARD16 *, CARD16 *);
int DPMSGetVersion(Display *, int *, int *);
int DPMSInfo(Display *, CARD16 *, BOOL *);
int DPMSQueryExtension(Display *, int *, int *);
int DPMSSetTimeouts(Display *, CARD16, CARD16, CARD16);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/extensions/security.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef unsigned long XSecurityAuthorization;


Xauth *XSecurityAllocXauth(void);
void XSecurityFreeXauth(Xauth *);
Xauth *XSecurityGenerateAuthorization(Display *, Xauth *, unsigned long,
				      XSecurityAuthorizationAttributes *,
				      XSecurityAuthorization *);
int XSecurityQueryExtension(Display *, int *, int *);
int XSecurityRevokeAuthorization(Display *, XSecurityAuthorization);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/extensions/sync.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef XID XSyncAlarm;

typedef struct _XSyncValue {
    int hi;
    unsigned int lo;
} XSyncValue;

typedef XID XSyncCounter;


int XSyncAwait(Display *, XSyncWaitCondition *, int);
int XSyncChangeAlarm(Display *, XSyncAlarm, unsigned long,
		     XSyncAlarmAttributes *);
int XSyncChangeCounter(Display *, XSyncCounter, XSyncValue);
XSyncAlarm XSyncCreateAlarm(Display *, unsigned long,
			    XSyncAlarmAttributes *);
XSyncCounter XSyncCreateCounter(Display *, XSyncValue);
int XSyncDestroyAlarm(Display *, XSyncAlarm);
int XSyncDestroyCounter(Display *, XSyncCounter);
void XSyncFreeSystemCounterList(XSyncSystemCounter *);
int XSyncGetPriority(Display *, XID, int *);
int XSyncInitialize(Display *, int *, int *);
void XSyncIntToValue(XSyncValue *, int);
void XSyncIntsToValue(XSyncValue *, unsigned int, int);
XSyncSystemCounter *XSyncListSystemCounters(Display *, int *);
void XSyncMaxValue(XSyncValue *);
void XSyncMinValue(XSyncValue *);
int XSyncQueryAlarm(Display *, XSyncAlarm, XSyncAlarmAttributes *);
int XSyncQueryCounter(Display *, XSyncCounter, XSyncValue *);
int XSyncQueryExtension(Display *, int *, int *);
int XSyncSetCounter(Display *, XSyncCounter, XSyncValue);
int XSyncSetPriority(Display *, XID, int);
void XSyncValueAdd(XSyncValue *, XSyncValue, XSyncValue, int *);
int XSyncValueEqual(XSyncValue, XSyncValue);
int XSyncValueGreaterOrEqual(XSyncValue, XSyncValue);
int XSyncValueGreaterThan(XSyncValue, XSyncValue);
int XSyncValueHigh32(XSyncValue);
int XSyncValueIsNegative(XSyncValue);
int XSyncValueIsPositive(XSyncValue);
int XSyncValueIsZero(XSyncValue);
int XSyncValueLessOrEqual(XSyncValue, XSyncValue);
int XSyncValueLessThan(XSyncValue, XSyncValue);
unsigned int XSyncValueLow32(XSyncValue);
void XSyncValueSubtract(XSyncValue *, XSyncValue, XSyncValue, int *);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.21 2001/04/25 23:58:49 anderson Exp 0 -->
