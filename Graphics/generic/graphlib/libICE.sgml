<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.82 2006/03/29 19:10:18 mats Exp 0 -->
<!--    at Mon Apr 24 10:57:30 2006 -->
<SECT1 ID=libICE>
<TITLE>Interfaces for libICE</TITLE>
<PARA>
<XREF LINKEND="lib-libICE-def"> defines the library name and shared object name
for the libICE library
</PARA>
<TABLE id="lib-libICE-def">
<TITLE>libICE Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libICE</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libICE.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libICE.1'>
[XICE] <XREF LINKEND="std.XICE">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name ICE Functions -->
<SECT2>
<!--libgroup-->
<TITLE>ICE Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for ICE Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for ICE Functions specified in <XREF linkend="tbl-libICE-ice-f-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libICE-ice-f-ints">
<TITLE>libICE - ICE Functions Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>IceAcceptConnection</primary></indexterm>IceAcceptConnection <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceAddConnectionWatch</primary></indexterm>IceAddConnectionWatch <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceAllocScratch</primary></indexterm>IceAllocScratch <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceAppLockConn</primary></indexterm>IceAppLockConn <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceAppUnlockConn</primary></indexterm>IceAppUnlockConn <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceAuthFileName</primary></indexterm>IceAuthFileName <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceCheckShutdownNegotiation</primary></indexterm>IceCheckShutdownNegotiation <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceCloseConnection</primary></indexterm>IceCloseConnection <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceComposeNetworkIdList</primary></indexterm>IceComposeNetworkIdList <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceConnectionNumber</primary></indexterm>IceConnectionNumber <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceConnectionStatus</primary></indexterm>IceConnectionStatus <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceConnectionString</primary></indexterm>IceConnectionString <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceFlush</primary></indexterm>IceFlush <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceFreeAuthFileEntry</primary></indexterm>IceFreeAuthFileEntry <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceFreeListenObjs</primary></indexterm>IceFreeListenObjs <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceGenerateMagicCookie</primary></indexterm>IceGenerateMagicCookie <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceGetAuthFileEntry</primary></indexterm>IceGetAuthFileEntry <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceGetConnectionContext</primary></indexterm>IceGetConnectionContext <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceGetInBufSize</primary></indexterm>IceGetInBufSize <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceGetListenConnectionNumber</primary></indexterm>IceGetListenConnectionNumber <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceGetListenConnectionString</primary></indexterm>IceGetListenConnectionString <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceGetOutBufSize</primary></indexterm>IceGetOutBufSize <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceInitThreads</primary></indexterm>IceInitThreads <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceLastReceivedSequenceNumber</primary></indexterm>IceLastReceivedSequenceNumber <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceLastSentSequenceNumber</primary></indexterm>IceLastSentSequenceNumber <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceListenForConnections</primary></indexterm>IceListenForConnections <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceListenForWellKnownConnections</primary></indexterm>IceListenForWellKnownConnections <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceLockAuthFile</primary></indexterm>IceLockAuthFile <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceOpenConnection</primary></indexterm>IceOpenConnection <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IcePing</primary></indexterm>IcePing <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceProcessMessages</primary></indexterm>IceProcessMessages <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceProtocolRevision</primary></indexterm>IceProtocolRevision <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceProtocolSetup</primary></indexterm>IceProtocolSetup <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceProtocolShutdown</primary></indexterm>IceProtocolShutdown <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceProtocolVersion</primary></indexterm>IceProtocolVersion <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceReadAuthFileEntry</primary></indexterm>IceReadAuthFileEntry <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceRegisterForProtocolReply</primary></indexterm>IceRegisterForProtocolReply <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceRegisterForProtocolSetup</primary></indexterm>IceRegisterForProtocolSetup <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceRelease</primary></indexterm>IceRelease <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceRemoveConnectionWatch</primary></indexterm>IceRemoveConnectionWatch <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceSetErrorHandler</primary></indexterm>IceSetErrorHandler <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceSetHostBasedAuthProc</primary></indexterm>IceSetHostBasedAuthProc <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceSetIOErrorHandler</primary></indexterm>IceSetIOErrorHandler <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceSetPaAuthData</primary></indexterm>IceSetPaAuthData <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceSetShutdownNegotiation</primary></indexterm>IceSetShutdownNegotiation <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceSwapping</primary></indexterm>IceSwapping <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceUnlockAuthFile</primary></indexterm>IceUnlockAuthFile <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY><indexterm><primary>IceVendor</primary></indexterm>IceVendor <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>IceWriteAuthFileEntry</primary></indexterm>IceWriteAuthFileEntry <LINK LINKEND="REFSTD.libICE.1">[XICE]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libICE-ddefs>
<TITLE>Data Definitions for libICE</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libICE.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>X11/ICE/ICElib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef void *IcePointer;
typedef enum {
    IcePoAuthHaveReply,
    IcePoAuthRejected,
    IcePoAuthFailed,
    IcePoAuthDoneCleanup
} IcePoAuthStatus;
typedef enum {
    IcePaAuthContinue,
    IcePaAuthAccepted,
    IcePaAuthRejected,
    IcePaAuthFailed
} IcePaAuthStatus;
typedef enum {
    IceConnectPending,
    IceConnectAccepted,
    IceConnectRejected,
    IceConnectIOError
} IceConnectStatus;
typedef enum {
    IceProtocolSetupSuccess,
    IceProtocolSetupFailure,
    IceProtocolSetupIOError,
    IceProtocolAlreadyActive
} IceProtocolSetupStatus;
typedef enum {
    IceAcceptSuccess,
    IceAcceptFailure,
    IceAcceptBadMalloc
} IceAcceptStatus;
typedef enum {
    IceClosedNow,
    IceClosedASAP,
    IceConnectionInUse,
    IceStartedShutdownNegotiation
} IceCloseStatus;
typedef enum {
    IceProcessMessagesSuccess,
    IceProcessMessagesIOError,
    IceProcessMessagesConnectionClosed
} IceProcessMessagesStatus;

typedef struct {
    unsigned long int sequence_of_request;
    int major_opcode_of_request;
    int minor_opcode_of_request;
    IcePointer reply;
} IceReplyWaitInfo;

typedef struct _IceConn *IceConn;
typedef struct _IceListenObj *IceListenObj;

typedef void (*IceWatchProc) (void);
typedef void (*IcePoProcessMsgProc) (void);
typedef void (*IcePaProcessMsgProc) (void);
typedef IcePoAuthStatus(*IcePoAuthProc) (void);
typedef IcePaAuthStatus(*IcePaAuthProc) (void);
typedef int (*IceHostBasedAuthProc) (void);
typedef int (*IceProtocolSetupProc) (void);
typedef void (*IceProtocolActivateProc) (void);
typedef void (*IceIOErrorProc) (void);
typedef void (*IcePingReplyProc) (void);
typedef void (*IceErrorHandler) (void);
typedef void (*IceIOErrorHandler) (void);

typedef struct {
    int major_version;
    int minor_version;
    IcePoProcessMsgProc process_msg_proc;
} IcePoVersionRec;
typedef struct {
    int major_version;
    int minor_version;
    IcePaProcessMsgProc process_msg_proc;
} IcePaVersionRec;
extern IceConn IceAcceptConnection(IceListenObj, IceAcceptStatus *);
extern int IceAddConnectionWatch(IceWatchProc, IcePointer);
extern char *IceAllocScratch(IceConn, unsigned long int);
extern void IceAppLockConn(IceConn);
extern void IceAppUnlockConn(IceConn);
extern int IceCheckShutdownNegotiation(IceConn);
extern IceCloseStatus IceCloseConnection(IceConn);
extern char *IceComposeNetworkIdList(int, IceListenObj *);
extern int IceConnectionNumber(IceConn);
extern IceConnectStatus IceConnectionStatus(IceConn);
extern char *IceConnectionString(IceConn);
extern int IceFlush(IceConn);
extern void IceFreeListenObjs(int, IceListenObj *);
extern IcePointer IceGetConnectionContext(IceConn);
extern int IceGetInBufSize(IceConn);
extern int IceGetListenConnectionNumber(IceListenObj);
extern char *IceGetListenConnectionString(IceListenObj);
extern int IceGetOutBufSize(IceConn);
extern int IceInitThreads(void);
extern unsigned long int IceLastReceivedSequenceNumber(IceConn);
extern unsigned long int IceLastSentSequenceNumber(IceConn);
extern int IceListenForConnections(int *, IceListenObj * *, int, char *);
extern int IceListenForWellKnownConnections(char *, int *,
					    IceListenObj * *, int, char *);
extern IceConn IceOpenConnection(char *, IcePointer, int, int, int,
				 char *);
extern int IcePing(IceConn, IcePingReplyProc, IcePointer);
extern IceProcessMessagesStatus IceProcessMessages(IceConn,
						   IceReplyWaitInfo *,
						   int *);
extern int IceProtocolRevision(IceConn);
extern IceProtocolSetupStatus IceProtocolSetup(IceConn, int, IcePointer,
					       int, int *, int *, char **,
					       char **, int, char *);
extern int IceProtocolShutdown(IceConn, int);
extern int IceProtocolVersion(IceConn);
extern int IceRegisterForProtocolReply(char *, char *, char *, int,
				       IcePaVersionRec *, int, char **,
				       IcePaAuthProc *,
				       IceHostBasedAuthProc,
				       IceProtocolSetupProc,
				       IceProtocolActivateProc,
				       IceIOErrorProc);
extern int IceRegisterForProtocolSetup(char *, char *, char *, int,
				       IcePoVersionRec *, int, char **,
				       IcePoAuthProc *, IceIOErrorProc);
extern char *IceRelease(IceConn);
extern void IceRemoveConnectionWatch(IceWatchProc, IcePointer);
extern IceErrorHandler IceSetErrorHandler(IceErrorHandler);
extern void IceSetHostBasedAuthProc(IceListenObj, IceHostBasedAuthProc);
extern IceIOErrorHandler IceSetIOErrorHandler(IceIOErrorHandler);
extern void IceSetShutdownNegotiation(IceConn, int);
extern int IceSwapping(IceConn);
extern char *IceVendor(IceConn);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>X11/ICE/ICEutil.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct {
    char *protocol_name;
    unsigned short protocol_data_length;
    char *protocol_data;
    char *network_id;
    char *auth_name;
    unsigned short auth_data_length;
    char *auth_data;
} IceAuthFileEntry;
typedef struct {
    char *protocol_name;
    char *network_id;
    char *auth_name;
    unsigned short auth_data_length;
    char *auth_data;
} IceAuthDataEntry;
extern char *IceAuthFileName(void);
extern void IceFreeAuthFileEntry(IceAuthFileEntry *);
extern char *IceGenerateMagicCookie(int);
extern IceAuthFileEntry *IceGetAuthFileEntry(char *, char *, char *);
extern int IceLockAuthFile(char *, int, int, long int);
extern IceAuthFileEntry *IceReadAuthFileEntry(FILE);
extern void IceSetPaAuthData(int, IceAuthDataEntry *);
extern void IceUnlockAuthFile(char *);
extern int IceWriteAuthFileEntry(FILE, IceAuthFileEntry *);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.82 2006/03/29 19:10:18 mats Exp 0 -->
