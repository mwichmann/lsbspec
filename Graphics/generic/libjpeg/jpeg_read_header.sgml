<refentry id="libjpeg.jpeg.read.header.1">
<refmeta>
<refentrytitle>jpeg_read_header</refentrytitle>
<refmiscinfo>libjpeg</refmiscinfo>
</refmeta>

<refnamediv>
<refname>jpeg_read_header</refname>
<refpurpose>read start of JPEG datastream</refpurpose>
<indexterm id="ix.libjpeg.jpeg.read.header.1">	<primary>jpeg_read_header</primary></indexterm>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;jpeglib.h&gt;
</funcsynopsisinfo><funcprototype>
<funcdef>int
<function>jpeg_read_header</function>
</funcdef>
<paramdef>j_decompress_ptr
<parameter>cinfo</parameter>
</paramdef>
<paramdef>boolean
<parameter>require_image</parameter>
</paramdef>

</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The function jpeg_read_header() shall read the JPEG datastream until the first
SOS marker is encountered. The function shall initialize all decompression
parameters to default values and save all tables and parameters in the
decompression object structure.
</para>
</refsect1>
<refsect1>
<title>Return Value</title>
<para>
jpeg_read_header() shall return with one of the following return codes:
<variablelist>
<varlistentry>
<term><parameter>JPEG_HEADER_OK</parameter></term>
<listitem><para>if SOS marker is reached</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>JPEG_HEADER_TABLES_ONLY</parameter></term>
<listitem><para>for an abbreviated input image, if EOI is reached
</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>JPEG_SUSPENDED</parameter></term>
<listitem><para>if data source module requests suspension of the decompressor.
</para></listitem>
</varlistentry>
</variablelist>
</para>
</refsect1>
<refsect1>
<title>Errors</title>
<para>
jpeg_read_header() returns error if it encounters end-of-image and require_image
is TRUE.
</para>
</refsect1>
</refentry>
