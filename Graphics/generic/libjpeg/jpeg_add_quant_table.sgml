<refentry id="libjpeg.jpeg.add.quant.table.1">
<refmeta>
<refentrytitle>jpeg_add_quant_table</refentrytitle>
<refmiscinfo>libjpeg</refmiscinfo>
</refmeta>

<refnamediv>
<refname>jpeg_add_quant_table</refname>
<refpurpose>add a quantization table</refpurpose>
<indexterm id="ix.libjpeg.jpeg.add.quant.table.1">	<primary>jpeg_add_quant_table</primary></indexterm>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;jpeglib.h&gt;
</funcsynopsisinfo><funcprototype>
<funcdef>void
<function>jpeg_add_quant_table</function>
</funcdef>
<paramdef>j_compress_ptr
<parameter>cinfo</parameter>
</paramdef>
<paramdef>int
<parameter>table_slot</parameter>
</paramdef>
<paramdef>const unsigned int *
<parameter>basic_table</parameter>
</paramdef>
<paramdef>int
<parameter>scale_factor</parameter>
</paramdef>
<paramdef>boolean
<parameter>force_baseline</parameter>
</paramdef>

</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The function jpeg_add_quant_table() shall add a quantization table parameter at
the "table_slot" index of the quantization table array. "basic_table" points to
an array of 64 unsigned ints given in normal array order.  These values are
multiplied by "scale_factor"/100. The values are limited to the range 1..65535.
If "force_baseline" is TRUE, the computed quantization table entries are
limited to 1..255 for JPEG baseline compatibility.
</para>
</refsect1>
<refsect1>
<title>Errors</title>
<para>
jpeg_add_quant_table() shall return error and exit if "table_slot" is >=
NUM_QUANT_TBLS.
jpeg_add_quant_table() shall return error and exit if the state of the
compression object indicates that the compression cycle has started.
</para>
</refsect1>
</refentry>
