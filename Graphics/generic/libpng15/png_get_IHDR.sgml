<refentry id="libpng15-png-get-IHDR">
<refmeta>
<refentrytitle>png_get_IHDR</refentrytitle>
<refmiscinfo>libpng15</refmiscinfo>
</refmeta>

<refnamediv>
<refname>png_get_IHDR</refname>
<refpurpose>get PNG_IHDR chunk information from png_info structure</refpurpose>
<indexterm id="ix-libpng15-png-get-IHDR">	<primary>png_get_IHDR</primary></indexterm>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;png.h&gt;
</funcsynopsisinfo><funcprototype>
<funcdef>png_uint_32
<function>png_get_IHDR</function>
</funcdef>
<paramdef>png_structp
<parameter>png_ptr</parameter>
</paramdef>
<paramdef>png_infop
<parameter>info_ptr</parameter>
</paramdef>
<paramdef>png_uint_32 *
<parameter>width</parameter>
</paramdef>
<paramdef>png_uint_32 *
<parameter>height</parameter>
</paramdef>
<paramdef>int *
<parameter>bit_depth</parameter>
</paramdef>
<paramdef>int *
<parameter>color_type</parameter>
</paramdef>
<paramdef>int *
<parameter>interlace_method</parameter>
</paramdef>
<paramdef>int *
<parameter>compression_method</parameter>
</paramdef>
<paramdef>int *
<parameter>filter_method</parameter>
</paramdef>

</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
png_get_IHDR() gets PNG_IHDR chunk type information from png_info structure.
<variablelist>
<varlistentry>
<term><parameter>width</parameter></term>
<listitem><para>holds the width of the image in pixels up to
2^31.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>height</parameter></term>
<listitem><para>holds the height of the image in pixels up to
2^31.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>bit_depth</parameter></term>
<listitem><para>holds the bit depth of one of the image channels. Valid values
are 1, 2, 4, 8, 16 and also depend on the color_type.</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>color_type</parameter></term>
<listitem><para>describes which color/alpha channels are present.
Supported color types shall include:
<simplelist>
<member>PNG_COLOR_TYPE_GRAY  (bit depths 1, 2, 4, 8, 16) </member>
<member>PNG_COLOR_TYPE_GRAY_ALPHA (bit depths 8, 16) </member>
<member>PNG_COLOR_TYPE_PALETTE (bit depths 1, 2, 4, 8) </member>
<member>PNG_COLOR_TYPE_RGB (bit_depths 8, 16) </member>
<member>PNG_COLOR_TYPE_RGB_ALPHA (bit_depths 8, 16) </member>
<member>PNG_COLOR_MASK_PALETTE </member>
<member>PNG_COLOR_MASK_COLOR </member>
<member>PNG_COLOR_MASK_ALPHA </member>
</simplelist>
</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>filter_method</parameter></term>
<listitem><para>holds the filter method. If this argument is NULL, the
filter method will not be retrieved. Valid values after retrieval are
<simplelist>
<member>PNG_FILTER_TYPE_BASE </member>
<member>PNG_INTRAPIXEL_DIFFERENCING</member>
</simplelist>
</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>compression_method</parameter></term>
<listitem><para>holds the compression method. If this argument is NULL, the
compression method will not be retrieved. Valid values after retrieval are
PNG_COMPRESSION_TYPE_BASE</para></listitem>
</varlistentry>
<varlistentry>
<term><parameter>interlace_method</parameter></term>
<listitem><para>holds the interlace method. If this argument is NULL, the
interlacing method will not be retrieved. Valid values after retrieval are
<simplelist>
<member>PNG_INTERLACE_NONE</member>
<member>PNG_INTERLACE_ADAM7</member>
</simplelist>
</para></listitem>
</varlistentry>
</variablelist>
</para>
</refsect1>
<refsect1>
<title>Return Value</title>
<para>
On success, <function>png_get_HDR</function> shall return 1. Otherwise,
<function>png_get_IHDR</function> shall return 0.
</para>
</refsect1>
</refentry>
