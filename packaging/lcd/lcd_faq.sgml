<!DOCTYPE BOOK PUBLIC "-//OASIS//DTD DocBook V3.1//EN" >
<book>
  <article>
    <artheader>
    <author>
      <firstname>Albert</firstname>
      <surname>den Haan</surname>
	<affiliation>
	  <orgname>Corel Corporation</orgname>
	</affiliation>
      <othername>albertd@corel.com</othername>
    </author>
    <title>Frequently Asked Questions</title>
    <subtitle>of the Lowest Common Denominator packaging taskforce of
    the Linux Standards Base</subtitle>
    <revhistory>
      <revision>
	<revnumber>$Revision: 1.2 $</revnumber>
	<date>$Date: 2001-03-01 18:31:44 $</date>
      </Revision>
    </revhistory>
    </artheader>
    <abstract>
      <para>Answers to frequently asked questions about the lowest
      common denominator packaging taskforce and its work</para>
    </abstract>

    <sect1>
      <title>The taskforce</title>
      <sect2>
	<title>How does the taskforce work?</title> 

	<para>This taskforce is just getting started (i.e. in Feb
	2001) so our working style is still being determined.  We
	already have a mailing list and a CVS repository to publish
	our work items in.  </para> 

	<para>Occasionally people may actually gather together
	physically to work on taskforce business.  Minutes of those
	meetings will be published on the mailing list and the
	website.  </para>
      </sect2>
      <sect2>
	<title>Where do I subscribe to the mailing list?</title>
	<para>At Source Forge's <ulink
	url="http://lists.sourceforge.net/mailman/listinfo/lsb-taskforce1">
	subscriptions page for Lsb-taskforce1</ulink>.</para>
      </sect2>
      <sect2>
	<title>Where do I find archives of the mailing list?</title>
	<para>At Source Forge's <ulink
	url="http://lists.sourceforge.net/archives//lsb-taskforce1/">archives
	pages</ulink>.</para>
      </sect2>
      <sect2>
	<title>Is there a taskforce website?</title>
	<para> Not yet.  </para>
	<para> For now minutes and such will be published on the Linux
	Standard Base's <ulink
	url="http://www.linuxbase.org/"></ulink> website; particularly
	on talks page <ulink
	url="http://www.linuxbase.org/talks/mindex.html"></ulink></para>
      </sect2>
      <sect2>
	<title>Where do I find archives of the workgroup meeting
	minutes?</title> <para> On the Linux Standard Base'stalks page
	<ulink
	url="http://www.linuxbase.org/talks/mindex.html"></ulink></para>
      </sect2>
    </sect1>

    <sect1>
      <title>Goals</title>
      <sect2>
	<title>What are your goals? (General)</title>
	<para>To quickly implement a simple package management system
	for as many Linux distributions as possible that will install
	and manage software packages using:
        <simplelist>
	    <member>Common archive format for both source and binary package formats.</member>
	    <member>A common dependency structure.</member>
	    <member>Tools and libraries already available on most if not all distributions.</member>
	  </simplelist></para>
	<para>Some specific work products are: <simplelist>
	    <member>Documentation of the goals, design decisions (and
	    their rationales) in the mainling lists and CVS </member>
	    <member>Reference implementations of the package system
	    for more than 2 distributions.</member>
	    <member>Reference implementations of package construction
	    systems for trivial and reasomably complex systems to
	    deliver.</member>
	  </simplelist>
</para>
      </sect2>

      <sect2>
	<title>What is a "Reference Implementation?"</title>
	<para>A "Reference Implementation" is an implementation
	intended for correctness and clarity of exposition rather than
	efficiency or elegance. </para>
	<para>Clarity and correctness will allow this taskforce to
	play with ideas in an explicit way and share the results in a
	concrete form.  Other implementations can work on the
	efficiency and elegance aspects once we know what is
	"correct"</para>
      </sect2>
      
      <sect2>
	<title>How long is this standard expected to be useful?</title>
	<para>The expectation is that it will not last very long but
	we may be surprised.  This standard is expected to be a
	learning experience to show everyone what package management
	features are essential and how usefull a common packaging
	standard will be. </para>
	<para>The lessons learned here will undoubtedly affect the
	next generation "unified" package manager of another LSB
	packaging taskforce.</para>
      </sect2>
    </sect1>

    <sect1>
      <title>Decisions Made</title>
      <para>Because this taskforce is focused on building working
      implementations quickly many of the decisions on what to make
      part of the "standard" are being made purely on pragmatic
      considerations.  If an aspect of what would be needed as part of
      the system already has a working implementation that is widely
      available, it may just become part of the "standard" as it is to
      speed the building of reference implementations. </para>
      <sect2>
	<title>What file format will the binary packages use?</title>
	<para>A specific version of the RPM binary package format.
	This is expected to be a version compatible with both the
	current RPM v3 and v4 package manager implementations
	currently in existence.</para>
	<sect3>
	  <title>Why RPM?</title> 
	  <para>Pragmatism.  The RPM binary
	  package file format is a proven, robust, backward and
	  forward compatible format.  It's currently used by many
	  distributions and is understood boy others.</para>
	</sect3>
      </sect2>

      <sect2>
	<title>What file format will the source packages use?</title>
	<para>An ad-hoc gzip compressed GNU tarball with an lsb-pkg-construct shell (sh) script in its root.  Details to be determined.</para>
      </sect2>

      <sect2>
	<title>What is the base software package in the trivial package example?</title> 
	<para>The  trivial package example is intended to be just enough to test out the
	packaging system from end to end from building to delivery to installation.  </para>

	<para> The GNU example "Hello World" software project should
	be enough :). It has executable and documentation components
	and some dependance on LSB mandated libraries. </para>

      </sect2>
      <sect2>
	<title>What is the trivial package example?</title> 
	<para>A
	simple "Hello World" example would be enough to test out the
	packaging system from end to end.  The GNU example "Hello
	World" software project should be enough :) </para>
      </sect2>
    </sect1>

    <sect1>
      <title>Design Decisions Remaining</title>
      <sect2>
	<title>How to to hack up rpm-lint to make it an LSB-LCD verifier</title>
	<para>It looks like Frederic Lepied's rpm-lint already can be told to consider alternate rule sets to verify.  The actual rules an LSB-LCD compliant packages must satisfy are yet to be determined and coded for rpm-lint. </para>
      </sect2>
    </sect1>

  </article>
</book>

<!--
Local Variables:
mode: sgml
End:
-->
