<PART ID=tocbaselib>
<TITLE>Base Libraries</TITLE>

<CHAPTER id=baselib>
<TITLE>Libraries</TITLE>

<PARA>

An LSB-conforming implementation shall support base libraries which
provide interfaces for accessing the operating system, processor and other
hardware in the system.
</PARA>

<PARA>
Only those interfaces that are unique to the z/Architecture platform are
defined here. This section should be used in conjunction with the
corresponding section in the Linux Standard Base Specification.
</PARA>

<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->
<!--    at Wed Jun 30 05:18:45 2004 -->
<SECT1 ID=libc>
<TITLE>Interfaces for libc</TITLE>
<PARA>
<XREF LINKEND="lib-libc-def"> defines the library name and shared object name
for the libc library
</PARA>
<TABLE id="lib-libc-def">
<TITLE>libc Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libc</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libc.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
ISO/IEC 9899: 1999, Programming Languages --C<FOOTNOTE ID="std-131-25">
<PARA>
ISO/IEC 9899: 1999, Programming Languages --C</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Large File Support<FOOTNOTE ID="std-131-35">
<PARA>
Large File Support</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-131-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-131-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
The Single UNIX® Specification(SUS) Version 3<FOOTNOTE ID="std-131-67">
<PARA>
The Single UNIX® Specification(SUS) Version 3</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
System V Interface Definition, Issue 3 (ISBN 0201566524)<FOOTNOTE ID="std-131-21">
<PARA>
System V Interface Definition, Issue 3 (ISBN 0201566524)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
System V Interface Definition,Fourth Edition<FOOTNOTE ID="std-131-46">
<PARA>
System V Interface Definition,Fourth Edition</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name RPC -->
<SECT2>
<!--libgroup-->
<TITLE>RPC</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for RPC</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for RPC specified in <XREF linkend="tbl-libc-rpc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-rpc-ints">
<TITLE>libc - RPC Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>authnone_create</primary></indexterm>authnone_create<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pmap_unset</primary></indexterm>pmap_unset<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_weakauth</primary></indexterm>svcerr_weakauth<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_float</primary></indexterm>xdr_float<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_u_char</primary></indexterm>xdr_u_char<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_create</primary></indexterm>clnt_create<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setdomainname</primary></indexterm>setdomainname<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>svctcp_create</primary></indexterm>svctcp_create<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_free</primary></indexterm>xdr_free<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_u_int</primary></indexterm>xdr_u_int<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_pcreateerror</primary></indexterm>clnt_pcreateerror<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svc_getreqset</primary></indexterm>svc_getreqset<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcudp_create</primary></indexterm>svcudp_create<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_int</primary></indexterm>xdr_int<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_u_long</primary></indexterm>xdr_u_long<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_perrno</primary></indexterm>clnt_perrno<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svc_register</primary></indexterm>svc_register<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_accepted_reply</primary></indexterm>xdr_accepted_reply<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_long</primary></indexterm>xdr_long<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_u_short</primary></indexterm>xdr_u_short<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_perror</primary></indexterm>clnt_perror<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svc_run</primary></indexterm>svc_run<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_array</primary></indexterm>xdr_array<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_opaque</primary></indexterm>xdr_opaque<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_union</primary></indexterm>xdr_union<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_spcreateerror</primary></indexterm>clnt_spcreateerror<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svc_sendreply</primary></indexterm>svc_sendreply<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_bool</primary></indexterm>xdr_bool<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_opaque_auth</primary></indexterm>xdr_opaque_auth<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_vector</primary></indexterm>xdr_vector<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_sperrno</primary></indexterm>clnt_sperrno<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_auth</primary></indexterm>svcerr_auth<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_bytes</primary></indexterm>xdr_bytes<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_pointer</primary></indexterm>xdr_pointer<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_void</primary></indexterm>xdr_void<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_sperror</primary></indexterm>clnt_sperror<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_decode</primary></indexterm>svcerr_decode<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_callhdr</primary></indexterm>xdr_callhdr<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_reference</primary></indexterm>xdr_reference<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_wrapstring</primary></indexterm>xdr_wrapstring<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getdomainname</primary></indexterm>getdomainname<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_noproc</primary></indexterm>svcerr_noproc<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_callmsg</primary></indexterm>xdr_callmsg<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_rejected_reply</primary></indexterm>xdr_rejected_reply<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdrmem_create</primary></indexterm>xdrmem_create<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>key_decryptsession</primary></indexterm>key_decryptsession<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_noprog</primary></indexterm>svcerr_noprog<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_char</primary></indexterm>xdr_char<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_replymsg</primary></indexterm>xdr_replymsg<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdrrec_create</primary></indexterm>xdrrec_create<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pmap_getport</primary></indexterm>pmap_getport<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_progvers</primary></indexterm>svcerr_progvers<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_double</primary></indexterm>xdr_double<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_short</primary></indexterm>xdr_short<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdrrec_eof</primary></indexterm>xdrrec_eof<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pmap_set</primary></indexterm>pmap_set<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_systemerr</primary></indexterm>svcerr_systemerr<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_enum</primary></indexterm>xdr_enum<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_string</primary></indexterm>xdr_string<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-46-tbl-libc-rpc-ints">[1]</TITLE><para>System V Interface Definition,Fourth Edition</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-rpc-ints">[2]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-21-tbl-libc-rpc-ints">[3]</TITLE><para>System V Interface Definition, Issue 3 (ISBN 0201566524)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name System Calls -->
<SECT2>
<!--libgroup-->
<TITLE>System Calls</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for System Calls</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for System Calls specified in <XREF linkend="tbl-libc-sys-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-sys-ints">
<TITLE>libc - System Calls Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__fxstat</primary></indexterm>__fxstat<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fchmod</primary></indexterm>fchmod<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getwd</primary></indexterm>getwd<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>read</primary></indexterm>read<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setrlimit</primary></indexterm>setrlimit<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__getpgid</primary></indexterm>__getpgid<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fchown</primary></indexterm>fchown<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>initgroups</primary></indexterm>initgroups<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>readdir</primary></indexterm>readdir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setrlimit64</primary></indexterm>setrlimit64<LINK LINKEND="std-131-35-tbl-libc-sys-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__lxstat</primary></indexterm>__lxstat<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fcntl</primary></indexterm>fcntl<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ioctl</primary></indexterm>ioctl<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>readdir_r</primary></indexterm>readdir_r<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setsid</primary></indexterm>setsid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xmknod</primary></indexterm>__xmknod<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fdatasync</primary></indexterm>fdatasync<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>kill</primary></indexterm>kill<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>readlink</primary></indexterm>readlink<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setuid</primary></indexterm>setuid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xstat</primary></indexterm>__xstat<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>flock</primary></indexterm>flock<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>killpg</primary></indexterm>killpg<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>readv</primary></indexterm>readv<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sleep</primary></indexterm>sleep<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>access</primary></indexterm>access<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fork</primary></indexterm>fork<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lchown</primary></indexterm>lchown<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>rename</primary></indexterm>rename<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>statvfs</primary></indexterm>statvfs<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acct</primary></indexterm>acct<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fstatvfs</primary></indexterm>fstatvfs<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>link</primary></indexterm>link<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>rmdir</primary></indexterm>rmdir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>stime</primary></indexterm>stime<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>alarm</primary></indexterm>alarm<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fsync</primary></indexterm>fsync<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lockf</primary></indexterm>lockf<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sbrk</primary></indexterm>sbrk<LINK LINKEND="std-131-5-tbl-libc-sys-ints"> [4]</LINK></ENTRY>
<ENTRY><indexterm><primary>symlink</primary></indexterm>symlink<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>brk</primary></indexterm>brk<LINK LINKEND="std-131-5-tbl-libc-sys-ints"> [4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftime</primary></indexterm>ftime<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lseek</primary></indexterm>lseek<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_get_priority_max</primary></indexterm>sched_get_priority_max<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sync</primary></indexterm>sync<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chdir</primary></indexterm>chdir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftruncate</primary></indexterm>ftruncate<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mkdir</primary></indexterm>mkdir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_get_priority_min</primary></indexterm>sched_get_priority_min<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sysconf</primary></indexterm>sysconf<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chmod</primary></indexterm>chmod<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getcontext</primary></indexterm>getcontext<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mkfifo</primary></indexterm>mkfifo<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_getparam</primary></indexterm>sched_getparam<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>time</primary></indexterm>time<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chown</primary></indexterm>chown<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getegid</primary></indexterm>getegid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mlock</primary></indexterm>mlock<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_getscheduler</primary></indexterm>sched_getscheduler<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>times</primary></indexterm>times<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chroot</primary></indexterm>chroot<LINK LINKEND="std-131-5-tbl-libc-sys-ints"> [4]</LINK></ENTRY>
<ENTRY><indexterm><primary>geteuid</primary></indexterm>geteuid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mlockall</primary></indexterm>mlockall<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_rr_get_interval</primary></indexterm>sched_rr_get_interval<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>truncate</primary></indexterm>truncate<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clock</primary></indexterm>clock<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgid</primary></indexterm>getgid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mmap</primary></indexterm>mmap<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_setparam</primary></indexterm>sched_setparam<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ulimit</primary></indexterm>ulimit<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>close</primary></indexterm>close<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgroups</primary></indexterm>getgroups<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mprotect</primary></indexterm>mprotect<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_setscheduler</primary></indexterm>sched_setscheduler<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>umask</primary></indexterm>umask<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>closedir</primary></indexterm>closedir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getitimer</primary></indexterm>getitimer<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>msync</primary></indexterm>msync<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_yield</primary></indexterm>sched_yield<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>uname</primary></indexterm>uname<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>creat</primary></indexterm>creat<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getloadavg</primary></indexterm>getloadavg<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>munlock</primary></indexterm>munlock<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>select</primary></indexterm>select<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>unlink</primary></indexterm>unlink<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>dup</primary></indexterm>dup<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpagesize</primary></indexterm>getpagesize<LINK LINKEND="std-131-5-tbl-libc-sys-ints"> [4]</LINK></ENTRY>
<ENTRY><indexterm><primary>munlockall</primary></indexterm>munlockall<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setcontext</primary></indexterm>setcontext<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>utime</primary></indexterm>utime<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>dup2</primary></indexterm>dup2<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpgid</primary></indexterm>getpgid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>munmap</primary></indexterm>munmap<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setegid</primary></indexterm>setegid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>utimes</primary></indexterm>utimes<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execl</primary></indexterm>execl<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpgrp</primary></indexterm>getpgrp<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nanosleep</primary></indexterm>nanosleep<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>seteuid</primary></indexterm>seteuid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfork</primary></indexterm>vfork<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execle</primary></indexterm>execle<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpid</primary></indexterm>getpid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nice</primary></indexterm>nice<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setgid</primary></indexterm>setgid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wait</primary></indexterm>wait<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execlp</primary></indexterm>execlp<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getppid</primary></indexterm>getppid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>open</primary></indexterm>open<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setitimer</primary></indexterm>setitimer<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wait3</primary></indexterm>wait3<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execv</primary></indexterm>execv<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpriority</primary></indexterm>getpriority<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>opendir</primary></indexterm>opendir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setpgid</primary></indexterm>setpgid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wait4</primary></indexterm>wait4<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execve</primary></indexterm>execve<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getrlimit</primary></indexterm>getrlimit<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pathconf</primary></indexterm>pathconf<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setpgrp</primary></indexterm>setpgrp<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>waitpid</primary></indexterm>waitpid<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execvp</primary></indexterm>execvp<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getrusage</primary></indexterm>getrusage<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pause</primary></indexterm>pause<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setpriority</primary></indexterm>setpriority<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>write</primary></indexterm>write<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>exit</primary></indexterm>exit<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getsid</primary></indexterm>getsid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pipe</primary></indexterm>pipe<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setregid</primary></indexterm>setregid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>writev</primary></indexterm>writev<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fchdir</primary></indexterm>fchdir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getuid</primary></indexterm>getuid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>poll</primary></indexterm>poll<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setreuid</primary></indexterm>setreuid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-sys-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-sys-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-35-tbl-libc-sys-ints">[3]</TITLE><para>Large File Support</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-sys-ints">[4]</TITLE><para>CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Standard I/O -->
<SECT2>
<!--libgroup-->
<TITLE>Standard I/O</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Standard I/O</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Standard I/O specified in <XREF linkend="tbl-libc-sta-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-sta-ints">
<TITLE>libc - Standard I/O Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_IO_feof</primary></indexterm>_IO_feof<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgetpos</primary></indexterm>fgetpos<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fsetpos</primary></indexterm>fsetpos<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putchar</primary></indexterm>putchar<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sscanf</primary></indexterm>sscanf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_IO_getc</primary></indexterm>_IO_getc<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgets</primary></indexterm>fgets<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftell</primary></indexterm>ftell<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putchar_unlocked</primary></indexterm>putchar_unlocked<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>telldir</primary></indexterm>telldir<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_IO_putc</primary></indexterm>_IO_putc<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgetwc_unlocked</primary></indexterm>fgetwc_unlocked<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftello</primary></indexterm>ftello<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>puts</primary></indexterm>puts<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tempnam</primary></indexterm>tempnam<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_IO_puts</primary></indexterm>_IO_puts<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fileno</primary></indexterm>fileno<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fwrite</primary></indexterm>fwrite<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putw</primary></indexterm>putw<LINK LINKEND="std-131-5-tbl-libc-sta-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>ungetc</primary></indexterm>ungetc<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asprintf</primary></indexterm>asprintf<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>flockfile</primary></indexterm>flockfile<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getc</primary></indexterm>getc<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>remove</primary></indexterm>remove<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vasprintf</primary></indexterm>vasprintf<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clearerr</primary></indexterm>clearerr<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fopen</primary></indexterm>fopen<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getc_unlocked</primary></indexterm>getc_unlocked<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>rewind</primary></indexterm>rewind<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vdprintf</primary></indexterm>vdprintf<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctermid</primary></indexterm>ctermid<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fprintf</primary></indexterm>fprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getchar</primary></indexterm>getchar<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>rewinddir</primary></indexterm>rewinddir<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfprintf</primary></indexterm>vfprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fclose</primary></indexterm>fclose<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fputc</primary></indexterm>fputc<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getchar_unlocked</primary></indexterm>getchar_unlocked<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>scanf</primary></indexterm>scanf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vprintf</primary></indexterm>vprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fdopen</primary></indexterm>fdopen<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fputs</primary></indexterm>fputs<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getw</primary></indexterm>getw<LINK LINKEND="std-131-5-tbl-libc-sta-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>seekdir</primary></indexterm>seekdir<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vsnprintf</primary></indexterm>vsnprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>feof</primary></indexterm>feof<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fread</primary></indexterm>fread<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pclose</primary></indexterm>pclose<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setbuf</primary></indexterm>setbuf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vsprintf</primary></indexterm>vsprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ferror</primary></indexterm>ferror<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>freopen</primary></indexterm>freopen<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>popen</primary></indexterm>popen<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setbuffer</primary></indexterm>setbuffer<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fflush</primary></indexterm>fflush<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fscanf</primary></indexterm>fscanf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>printf</primary></indexterm>printf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setvbuf</primary></indexterm>setvbuf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fflush_unlocked</primary></indexterm>fflush_unlocked<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fseek</primary></indexterm>fseek<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putc</primary></indexterm>putc<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>snprintf</primary></indexterm>snprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetc</primary></indexterm>fgetc<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fseeko</primary></indexterm>fseeko<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putc_unlocked</primary></indexterm>putc_unlocked<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sprintf</primary></indexterm>sprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-sta-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-sta-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-sta-ints">[3]</TITLE><para>CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the data interfaces
for Standard I/O specified in <XREF linkend="tbl-libc-sta-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-sta-data">
<TITLE>libc - Standard I/O Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>stderr</primary></indexterm>stderr<LINK LINKEND="std-131-67-tbl-libc-sta-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>stdin</primary></indexterm>stdin<LINK LINKEND="std-131-67-tbl-libc-sta-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>stdout</primary></indexterm>stdout<LINK LINKEND="std-131-67-tbl-libc-sta-data"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-sta-data">[1]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Signal Handling -->
<SECT2>
<!--libgroup-->
<TITLE>Signal Handling</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Signal Handling</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Signal Handling specified in <XREF linkend="tbl-libc-sig-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-sig-ints">
<TITLE>libc - Signal Handling Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__libc_current_sigrtmax</primary></indexterm>__libc_current_sigrtmax<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigaddset</primary></indexterm>sigaddset<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sighold</primary></indexterm>sighold<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigpause</primary></indexterm>sigpause<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigsuspend</primary></indexterm>sigsuspend<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__libc_current_sigrtmin</primary></indexterm>__libc_current_sigrtmin<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigaltstack</primary></indexterm>sigaltstack<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigignore</primary></indexterm>sigignore<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigpending</primary></indexterm>sigpending<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigtimedwait</primary></indexterm>sigtimedwait<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__sigsetjmp</primary></indexterm>__sigsetjmp<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigandset</primary></indexterm>sigandset<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>siginterrupt</primary></indexterm>siginterrupt<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigprocmask</primary></indexterm>sigprocmask<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigwait</primary></indexterm>sigwait<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__sysv_signal</primary></indexterm>__sysv_signal<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigblock</primary></indexterm>sigblock<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigisemptyset</primary></indexterm>sigisemptyset<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigqueue</primary></indexterm>sigqueue<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigwaitinfo</primary></indexterm>sigwaitinfo<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bsd_signal</primary></indexterm>bsd_signal<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigdelset</primary></indexterm>sigdelset<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigismember</primary></indexterm>sigismember<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigrelse</primary></indexterm>sigrelse<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>psignal</primary></indexterm>psignal<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigemptyset</primary></indexterm>sigemptyset<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>siglongjmp</primary></indexterm>siglongjmp<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigreturn</primary></indexterm>sigreturn<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>raise</primary></indexterm>raise<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigfillset</primary></indexterm>sigfillset<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>signal</primary></indexterm>signal<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigset</primary></indexterm>sigset<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sigaction</primary></indexterm>sigaction<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>siggetmask</primary></indexterm>siggetmask<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigorset</primary></indexterm>sigorset<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigstack</primary></indexterm>sigstack<LINK LINKEND="std-131-5-tbl-libc-sig-ints"> [3]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-sig-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-sig-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-sig-ints">[3]</TITLE><para>CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the data interfaces
for Signal Handling specified in <XREF linkend="tbl-libc-sig-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-sig-data">
<TITLE>libc - Signal Handling Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_sys_siglist</primary></indexterm>_sys_siglist<LINK LINKEND="std-131-10-tbl-libc-sig-data"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-sig-data">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Localization Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Localization Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Localization Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Localization Functions specified in <XREF linkend="tbl-libc-loc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-loc-ints">
<TITLE>libc - Localization Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>bind_textdomain_codeset</primary></indexterm>bind_textdomain_codeset<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>catopen</primary></indexterm>catopen<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>dngettext</primary></indexterm>dngettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>iconv_open</primary></indexterm>iconv_open<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setlocale</primary></indexterm>setlocale<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bindtextdomain</primary></indexterm>bindtextdomain<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>dcgettext</primary></indexterm>dcgettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gettext</primary></indexterm>gettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>localeconv</primary></indexterm>localeconv<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>textdomain</primary></indexterm>textdomain<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catclose</primary></indexterm>catclose<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>dcngettext</primary></indexterm>dcngettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>iconv</primary></indexterm>iconv<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ngettext</primary></indexterm>ngettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catgets</primary></indexterm>catgets<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>dgettext</primary></indexterm>dgettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>iconv_close</primary></indexterm>iconv_close<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nl_langinfo</primary></indexterm>nl_langinfo<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-loc-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-loc-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the data interfaces
for Localization Functions specified in <XREF linkend="tbl-libc-loc-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-loc-data">
<TITLE>libc - Localization Functions Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_nl_msg_cat_cntr</primary></indexterm>_nl_msg_cat_cntr<LINK LINKEND="std-131-10-tbl-libc-loc-data"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-loc-data">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Socket Interface -->
<SECT2>
<!--libgroup-->
<TITLE>Socket Interface</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Socket Interface</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Socket Interface specified in <XREF linkend="tbl-libc-soc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-soc-ints">
<TITLE>libc - Socket Interface Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__h_errno_location</primary></indexterm>__h_errno_location<LINK LINKEND="std-131-10-tbl-libc-soc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyname_r</primary></indexterm>gethostbyname_r<LINK LINKEND="std-131-10-tbl-libc-soc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getsockopt</primary></indexterm>getsockopt<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>send</primary></indexterm>send<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>socket</primary></indexterm>socket<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>accept</primary></indexterm>accept<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostid</primary></indexterm>gethostid<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>listen</primary></indexterm>listen<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sendmsg</primary></indexterm>sendmsg<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>socketpair</primary></indexterm>socketpair<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bind</primary></indexterm>bind<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostname</primary></indexterm>gethostname<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>recv</primary></indexterm>recv<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sendto</primary></indexterm>sendto<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bindresvport</primary></indexterm>bindresvport<LINK LINKEND="std-131-10-tbl-libc-soc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpeername</primary></indexterm>getpeername<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>recvfrom</primary></indexterm>recvfrom<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setsockopt</primary></indexterm>setsockopt<LINK LINKEND="std-131-10-tbl-libc-soc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>connect</primary></indexterm>connect<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getsockname</primary></indexterm>getsockname<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>recvmsg</primary></indexterm>recvmsg<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>shutdown</primary></indexterm>shutdown<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-soc-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-soc-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the deprecated functions
for Socket Interface specified in <XREF linkend="tbl-libc-soc-depints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><TITLE>NOTE</TITLE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-soc-depints">
<TITLE>libc - Socket Interface Deprecated Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gethostbyname_r</primary></indexterm>gethostbyname_r<LINK LINKEND="std-131-10-tbl-libc-soc-depints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-soc-depints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Wide Characters -->
<SECT2>
<!--libgroup-->
<TITLE>Wide Characters</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Wide Characters</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Wide Characters specified in <XREF linkend="tbl-libc-wid-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-wid-ints">
<TITLE>libc - Wide Characters Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__wcstod_internal</primary></indexterm>__wcstod_internal<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbsinit</primary></indexterm>mbsinit<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vwscanf</primary></indexterm>vwscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsnlen</primary></indexterm>wcsnlen<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoumax</primary></indexterm>wcstoumax<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstof_internal</primary></indexterm>__wcstof_internal<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbsnrtowcs</primary></indexterm>mbsnrtowcs<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcpcpy</primary></indexterm>wcpcpy<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsnrtombs</primary></indexterm>wcsnrtombs<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstouq</primary></indexterm>wcstouq<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstol_internal</primary></indexterm>__wcstol_internal<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbsrtowcs</primary></indexterm>mbsrtowcs<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcpncpy</primary></indexterm>wcpncpy<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcspbrk</primary></indexterm>wcspbrk<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcswcs</primary></indexterm>wcswcs<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstold_internal</primary></indexterm>__wcstold_internal<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbstowcs</primary></indexterm>mbstowcs<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcrtomb</primary></indexterm>wcrtomb<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsrchr</primary></indexterm>wcsrchr<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcswidth</primary></indexterm>wcswidth<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstoul_internal</primary></indexterm>__wcstoul_internal<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbtowc</primary></indexterm>mbtowc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscasecmp</primary></indexterm>wcscasecmp<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsrtombs</primary></indexterm>wcsrtombs<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsxfrm</primary></indexterm>wcsxfrm<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>btowc</primary></indexterm>btowc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putwc</primary></indexterm>putwc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscat</primary></indexterm>wcscat<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsspn</primary></indexterm>wcsspn<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wctob</primary></indexterm>wctob<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetwc</primary></indexterm>fgetwc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putwchar</primary></indexterm>putwchar<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcschr</primary></indexterm>wcschr<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsstr</primary></indexterm>wcsstr<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wctomb</primary></indexterm>wctomb<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetws</primary></indexterm>fgetws<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>swprintf</primary></indexterm>swprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscmp</primary></indexterm>wcscmp<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstod</primary></indexterm>wcstod<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wctrans</primary></indexterm>wctrans<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fputwc</primary></indexterm>fputwc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>swscanf</primary></indexterm>swscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscoll</primary></indexterm>wcscoll<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstof</primary></indexterm>wcstof<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wctype</primary></indexterm>wctype<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fputws</primary></indexterm>fputws<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>towctrans</primary></indexterm>towctrans<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscpy</primary></indexterm>wcscpy<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoimax</primary></indexterm>wcstoimax<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcwidth</primary></indexterm>wcwidth<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fwide</primary></indexterm>fwide<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>towlower</primary></indexterm>towlower<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscspn</primary></indexterm>wcscspn<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstok</primary></indexterm>wcstok<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemchr</primary></indexterm>wmemchr<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fwprintf</primary></indexterm>fwprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>towupper</primary></indexterm>towupper<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsdup</primary></indexterm>wcsdup<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstol</primary></indexterm>wcstol<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemcmp</primary></indexterm>wmemcmp<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fwscanf</primary></indexterm>fwscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ungetwc</primary></indexterm>ungetwc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsftime</primary></indexterm>wcsftime<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstold</primary></indexterm>wcstold<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemcpy</primary></indexterm>wmemcpy<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getwc</primary></indexterm>getwc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfwprintf</primary></indexterm>vfwprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcslen</primary></indexterm>wcslen<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoll</primary></indexterm>wcstoll<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemmove</primary></indexterm>wmemmove<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getwchar</primary></indexterm>getwchar<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfwscanf</primary></indexterm>vfwscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsncasecmp</primary></indexterm>wcsncasecmp<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstombs</primary></indexterm>wcstombs<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemset</primary></indexterm>wmemset<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mblen</primary></indexterm>mblen<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vswprintf</primary></indexterm>vswprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsncat</primary></indexterm>wcsncat<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoq</primary></indexterm>wcstoq<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wprintf</primary></indexterm>wprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mbrlen</primary></indexterm>mbrlen<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vswscanf</primary></indexterm>vswscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsncmp</primary></indexterm>wcsncmp<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoul</primary></indexterm>wcstoul<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wscanf</primary></indexterm>wscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mbrtowc</primary></indexterm>mbrtowc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vwprintf</primary></indexterm>vwprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsncpy</primary></indexterm>wcsncpy<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoull</primary></indexterm>wcstoull<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-wid-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-wid-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name String Functions -->
<SECT2>
<!--libgroup-->
<TITLE>String Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for String Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for String Functions specified in <XREF linkend="tbl-libc-str-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-str-ints">
<TITLE>libc - String Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__mempcpy</primary></indexterm>__mempcpy<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>bzero</primary></indexterm>bzero<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcasestr</primary></indexterm>strcasestr<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strncasecmp</primary></indexterm>strncasecmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoimax</primary></indexterm>strtoimax<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__rawmemchr</primary></indexterm>__rawmemchr<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ffs</primary></indexterm>ffs<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcat</primary></indexterm>strcat<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strncat</primary></indexterm>strncat<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtok</primary></indexterm>strtok<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__stpcpy</primary></indexterm>__stpcpy<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>index</primary></indexterm>index<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strchr</primary></indexterm>strchr<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strncmp</primary></indexterm>strncmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtok_r</primary></indexterm>strtok_r<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strdup</primary></indexterm>__strdup<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memccpy</primary></indexterm>memccpy<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcmp</primary></indexterm>strcmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strncpy</primary></indexterm>strncpy<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtold</primary></indexterm>strtold<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtod_internal</primary></indexterm>__strtod_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memchr</primary></indexterm>memchr<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcoll</primary></indexterm>strcoll<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strndup</primary></indexterm>strndup<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoll</primary></indexterm>strtoll<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtof_internal</primary></indexterm>__strtof_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memcmp</primary></indexterm>memcmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcpy</primary></indexterm>strcpy<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strnlen</primary></indexterm>strnlen<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoq</primary></indexterm>strtoq<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtok_r</primary></indexterm>__strtok_r<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memcpy</primary></indexterm>memcpy<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcspn</primary></indexterm>strcspn<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strpbrk</primary></indexterm>strpbrk<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoull</primary></indexterm>strtoull<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtol_internal</primary></indexterm>__strtol_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memmove</primary></indexterm>memmove<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strdup</primary></indexterm>strdup<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strptime</primary></indexterm>strptime<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoumax</primary></indexterm>strtoumax<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtold_internal</primary></indexterm>__strtold_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memrchr</primary></indexterm>memrchr<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strerror</primary></indexterm>strerror<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strrchr</primary></indexterm>strrchr<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtouq</primary></indexterm>strtouq<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtoll_internal</primary></indexterm>__strtoll_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memset</primary></indexterm>memset<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strerror_r</primary></indexterm>strerror_r<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strsep</primary></indexterm>strsep<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strverscmp</primary></indexterm>strverscmp<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtoul_internal</primary></indexterm>__strtoul_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>rindex</primary></indexterm>rindex<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strfmon</primary></indexterm>strfmon<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strsignal</primary></indexterm>strsignal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strxfrm</primary></indexterm>strxfrm<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtoull_internal</primary></indexterm>__strtoull_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>stpcpy</primary></indexterm>stpcpy<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strfry</primary></indexterm>strfry<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strspn</primary></indexterm>strspn<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>swab</primary></indexterm>swab<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bcmp</primary></indexterm>bcmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>stpncpy</primary></indexterm>stpncpy<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strftime</primary></indexterm>strftime<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strstr</primary></indexterm>strstr<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bcopy</primary></indexterm>bcopy<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcasecmp</primary></indexterm>strcasecmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strlen</primary></indexterm>strlen<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtof</primary></indexterm>strtof<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-str-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-str-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name IPC Functions -->
<SECT2>
<!--libgroup-->
<TITLE>IPC Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for IPC Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for IPC Functions specified in <XREF linkend="tbl-libc-ipc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-ipc-ints">
<TITLE>libc - IPC Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>ftok</primary></indexterm>ftok<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>msgrcv</primary></indexterm>msgrcv<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>semget</primary></indexterm>semget<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>shmctl</primary></indexterm>shmctl<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>msgctl</primary></indexterm>msgctl<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>msgsnd</primary></indexterm>msgsnd<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>semop</primary></indexterm>semop<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>shmdt</primary></indexterm>shmdt<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>msgget</primary></indexterm>msgget<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>semctl</primary></indexterm>semctl<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>shmat</primary></indexterm>shmat<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>shmget</primary></indexterm>shmget<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-ipc-ints">[1]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Regular Expressions -->
<SECT2>
<!--libgroup-->
<TITLE>Regular Expressions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Regular Expressions</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Regular Expressions specified in <XREF linkend="tbl-libc-reg-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-reg-ints">
<TITLE>libc - Regular Expressions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>advance</primary></indexterm>advance<LINK LINKEND="std-131-5-tbl-libc-reg-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>re_exec</primary></indexterm>re_exec<LINK LINKEND="std-131-5-tbl-libc-reg-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>regerror</primary></indexterm>regerror<LINK LINKEND="std-131-67-tbl-libc-reg-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>regfree</primary></indexterm>regfree<LINK LINKEND="std-131-67-tbl-libc-reg-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>re_comp</primary></indexterm>re_comp<LINK LINKEND="std-131-5-tbl-libc-reg-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>regcomp</primary></indexterm>regcomp<LINK LINKEND="std-131-67-tbl-libc-reg-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>regexec</primary></indexterm>regexec<LINK LINKEND="std-131-67-tbl-libc-reg-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>step</primary></indexterm>step<LINK LINKEND="std-131-5-tbl-libc-reg-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-reg-ints">[1]</TITLE><para>CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-reg-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the deprecated functions
for Regular Expressions specified in <XREF linkend="tbl-libc-reg-depints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><TITLE>NOTE</TITLE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-reg-depints">
<TITLE>libc - Regular Expressions Deprecated Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>advance</primary></indexterm>advance<LINK LINKEND="std-131-5-tbl-libc-reg-depints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>re_comp</primary></indexterm>re_comp<LINK LINKEND="std-131-5-tbl-libc-reg-depints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>re_exec</primary></indexterm>re_exec<LINK LINKEND="std-131-5-tbl-libc-reg-depints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>step</primary></indexterm>step<LINK LINKEND="std-131-5-tbl-libc-reg-depints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-reg-depints">[1]</TITLE><para>CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the data interfaces
for Regular Expressions specified in <XREF linkend="tbl-libc-reg-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-reg-data">
<TITLE>libc - Regular Expressions Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>loc1</primary></indexterm>loc1<LINK LINKEND="std-131-5-tbl-libc-reg-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>loc2</primary></indexterm>loc2<LINK LINKEND="std-131-5-tbl-libc-reg-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>locs</primary></indexterm>locs<LINK LINKEND="std-131-5-tbl-libc-reg-data"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-reg-data">[1]</TITLE><para>CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the deprecated data interfaces
for Regular Expressions specified in <XREF linkend="tbl-libc-reg-ddata">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><TITLE>NOTE</TITLE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupddata-->
<TABLE id="tbl-libc-reg-ddata">
<TITLE>libc - Regular Expressions Deprecated Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>loc1</primary></indexterm>loc1<LINK LINKEND="std-131-5-tbl-libc-reg-ddata"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>loc2</primary></indexterm>loc2<LINK LINKEND="std-131-5-tbl-libc-reg-ddata"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>locs</primary></indexterm>locs<LINK LINKEND="std-131-5-tbl-libc-reg-ddata"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-reg-ddata">[1]</TITLE><para>CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Character Type Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Character Type Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Character Type Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Character Type Functions specified in <XREF linkend="tbl-libc-cha-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-cha-ints">
<TITLE>libc - Character Type Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__ctype_get_mb_cur_max</primary></indexterm>__ctype_get_mb_cur_max<LINK LINKEND="std-131-10-tbl-libc-cha-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isdigit</primary></indexterm>isdigit<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswalnum</primary></indexterm>iswalnum<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswlower</primary></indexterm>iswlower<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>toascii</primary></indexterm>toascii<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_tolower</primary></indexterm>_tolower<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>isgraph</primary></indexterm>isgraph<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswalpha</primary></indexterm>iswalpha<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswprint</primary></indexterm>iswprint<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tolower</primary></indexterm>tolower<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_toupper</primary></indexterm>_toupper<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>islower</primary></indexterm>islower<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswblank</primary></indexterm>iswblank<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswpunct</primary></indexterm>iswpunct<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>toupper</primary></indexterm>toupper<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>isalnum</primary></indexterm>isalnum<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>isprint</primary></indexterm>isprint<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswcntrl</primary></indexterm>iswcntrl<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswspace</primary></indexterm>iswspace<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>isalpha</primary></indexterm>isalpha<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ispunct</primary></indexterm>ispunct<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswctype</primary></indexterm>iswctype<LINK LINKEND="std-131-10-tbl-libc-cha-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswupper</primary></indexterm>iswupper<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>isascii</primary></indexterm>isascii<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>isspace</primary></indexterm>isspace<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswdigit</primary></indexterm>iswdigit<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswxdigit</primary></indexterm>iswxdigit<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>iscntrl</primary></indexterm>iscntrl<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>isupper</primary></indexterm>isupper<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswgraph</primary></indexterm>iswgraph<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>isxdigit</primary></indexterm>isxdigit<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-cha-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-cha-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Time Manipulation -->
<SECT2>
<!--libgroup-->
<TITLE>Time Manipulation</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Time Manipulation</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Time Manipulation specified in <XREF linkend="tbl-libc-tim-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-tim-ints">
<TITLE>libc - Time Manipulation Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>adjtime</primary></indexterm>adjtime<LINK LINKEND="std-131-10-tbl-libc-tim-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>asctime_r</primary></indexterm>asctime_r<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>difftime</primary></indexterm>difftime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>localtime</primary></indexterm>localtime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tzset</primary></indexterm>tzset<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>adjtimex</primary></indexterm>adjtimex<LINK LINKEND="std-131-10-tbl-libc-tim-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctime</primary></indexterm>ctime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>gmtime</primary></indexterm>gmtime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>localtime_r</primary></indexterm>localtime_r<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ualarm</primary></indexterm>ualarm<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asctime</primary></indexterm>asctime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctime_r</primary></indexterm>ctime_r<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>gmtime_r</primary></indexterm>gmtime_r<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mktime</primary></indexterm>mktime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-tim-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-tim-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the data interfaces
for Time Manipulation specified in <XREF linkend="tbl-libc-tim-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-tim-data">
<TITLE>libc - Time Manipulation Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__daylight</primary></indexterm>__daylight<LINK LINKEND="std-131-10-tbl-libc-tim-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>__tzname</primary></indexterm>__tzname<LINK LINKEND="std-131-10-tbl-libc-tim-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>timezone</primary></indexterm>timezone<LINK LINKEND="std-131-67-tbl-libc-tim-data"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__timezone</primary></indexterm>__timezone<LINK LINKEND="std-131-10-tbl-libc-tim-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>daylight</primary></indexterm>daylight<LINK LINKEND="std-131-67-tbl-libc-tim-data"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tzname</primary></indexterm>tzname<LINK LINKEND="std-131-67-tbl-libc-tim-data"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-tim-data">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-tim-data">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Terminal Interface Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Terminal Interface Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Terminal Interface Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Terminal Interface Functions specified in <XREF linkend="tbl-libc-ter-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-ter-ints">
<TITLE>libc - Terminal Interface Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>cfgetispeed</primary></indexterm>cfgetispeed<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cfsetispeed</primary></indexterm>cfsetispeed<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcdrain</primary></indexterm>tcdrain<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcgetattr</primary></indexterm>tcgetattr<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcsendbreak</primary></indexterm>tcsendbreak<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cfgetospeed</primary></indexterm>cfgetospeed<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cfsetospeed</primary></indexterm>cfsetospeed<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcflow</primary></indexterm>tcflow<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcgetpgrp</primary></indexterm>tcgetpgrp<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcsetattr</primary></indexterm>tcsetattr<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cfmakeraw</primary></indexterm>cfmakeraw<LINK LINKEND="std-131-10-tbl-libc-ter-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>cfsetspeed</primary></indexterm>cfsetspeed<LINK LINKEND="std-131-10-tbl-libc-ter-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcflush</primary></indexterm>tcflush<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcgetsid</primary></indexterm>tcgetsid<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcsetpgrp</primary></indexterm>tcsetpgrp<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-ter-ints">[1]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-ter-ints">[2]</TITLE><para>Linux Standard Base</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name System Database Interface -->
<SECT2>
<!--libgroup-->
<TITLE>System Database Interface</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for System Database Interface</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for System Database Interface specified in <XREF linkend="tbl-libc-syt-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-syt-ints">
<TITLE>libc - System Database Interface Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>endgrent</primary></indexterm>endgrent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrgid</primary></indexterm>getgrgid<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getprotobynumber</primary></indexterm>getprotobynumber<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getservbyport</primary></indexterm>getservbyport<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setgrent</primary></indexterm>setgrent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endnetent</primary></indexterm>endnetent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrgid_r</primary></indexterm>getgrgid_r<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getprotoent</primary></indexterm>getprotoent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getservent</primary></indexterm>getservent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setgroups</primary></indexterm>setgroups<LINK LINKEND="std-131-10-tbl-libc-syt-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endprotoent</primary></indexterm>endprotoent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrnam</primary></indexterm>getgrnam<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwent</primary></indexterm>getpwent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutent</primary></indexterm>getutent<LINK LINKEND="std-131-10-tbl-libc-syt-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setnetent</primary></indexterm>setnetent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endpwent</primary></indexterm>endpwent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrnam_r</primary></indexterm>getgrnam_r<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwnam</primary></indexterm>getpwnam<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutent_r</primary></indexterm>getutent_r<LINK LINKEND="std-131-10-tbl-libc-syt-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setprotoent</primary></indexterm>setprotoent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endservent</primary></indexterm>endservent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyaddr</primary></indexterm>gethostbyaddr<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwnam_r</primary></indexterm>getpwnam_r<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutxent</primary></indexterm>getutxent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setpwent</primary></indexterm>setpwent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endutent</primary></indexterm>endutent<LINK LINKEND="std-131-5-tbl-libc-syt-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyname</primary></indexterm>gethostbyname<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwuid</primary></indexterm>getpwuid<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutxid</primary></indexterm>getutxid<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setservent</primary></indexterm>setservent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endutxent</primary></indexterm>endutxent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getnetbyaddr</primary></indexterm>getnetbyaddr<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwuid_r</primary></indexterm>getpwuid_r<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutxline</primary></indexterm>getutxline<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setutent</primary></indexterm>setutent<LINK LINKEND="std-131-10-tbl-libc-syt-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getgrent</primary></indexterm>getgrent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getprotobyname</primary></indexterm>getprotobyname<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getservbyname</primary></indexterm>getservbyname<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pututxline</primary></indexterm>pututxline<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setutxent</primary></indexterm>setutxent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-syt-ints">[1]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-syt-ints">[2]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-syt-ints">[3]</TITLE><para>CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Language Support -->
<SECT2>
<!--libgroup-->
<TITLE>Language Support</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Language Support</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Language Support specified in <XREF linkend="tbl-libc-lan-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-lan-ints">
<TITLE>libc - Language Support Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__libc_start_main</primary></indexterm>__libc_start_main<LINK LINKEND="std-131-10-tbl-libc-lan-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_obstack_begin</primary></indexterm>_obstack_begin<LINK LINKEND="std-131-10-tbl-libc-lan-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_obstack_newchunk</primary></indexterm>_obstack_newchunk<LINK LINKEND="std-131-10-tbl-libc-lan-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>obstack_free</primary></indexterm>obstack_free<LINK LINKEND="std-131-10-tbl-libc-lan-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-lan-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Large File Support -->
<SECT2>
<!--libgroup-->
<TITLE>Large File Support</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Large File Support</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Large File Support specified in <XREF linkend="tbl-libc-lar-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-lar-ints">
<TITLE>libc - Large File Support Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__fxstat64</primary></indexterm>__fxstat64<LINK LINKEND="std-131-10-tbl-libc-lar-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fopen64</primary></indexterm>fopen64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftello64</primary></indexterm>ftello64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lseek64</primary></indexterm>lseek64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>readdir64</primary></indexterm>readdir64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__lxstat64</primary></indexterm>__lxstat64<LINK LINKEND="std-131-10-tbl-libc-lar-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>freopen64</primary></indexterm>freopen64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftruncate64</primary></indexterm>ftruncate64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mkstemp64</primary></indexterm>mkstemp64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>statvfs64</primary></indexterm>statvfs64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xstat64</primary></indexterm>__xstat64<LINK LINKEND="std-131-10-tbl-libc-lar-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fseeko64</primary></indexterm>fseeko64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftw64</primary></indexterm>ftw64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mmap64</primary></indexterm>mmap64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tmpfile64</primary></indexterm>tmpfile64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>creat64</primary></indexterm>creat64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fsetpos64</primary></indexterm>fsetpos64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getrlimit64</primary></indexterm>getrlimit64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nftw64</primary></indexterm>nftw64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>truncate64</primary></indexterm>truncate64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetpos64</primary></indexterm>fgetpos64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fstatvfs64</primary></indexterm>fstatvfs64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lockf64</primary></indexterm>lockf64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>open64</primary></indexterm>open64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-lar-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-35-tbl-libc-lar-ints">[2]</TITLE><para>Large File Support</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Standard Library -->
<SECT2>
<!--libgroup-->
<TITLE>Standard Library</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Standard Library</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Standard Library specified in <XREF linkend="tbl-libc-stb-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-stb-ints">
<TITLE>libc - Standard Library Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_Exit</primary></indexterm>_Exit<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>div</primary></indexterm>div<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>globfree</primary></indexterm>globfree<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lldiv</primary></indexterm>lldiv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setlogmask</primary></indexterm>setlogmask<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__assert_fail</primary></indexterm>__assert_fail<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>drand48</primary></indexterm>drand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>globfree64</primary></indexterm>globfree64<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>longjmp</primary></indexterm>longjmp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setstate</primary></indexterm>setstate<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__cxa_atexit</primary></indexterm>__cxa_atexit<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ecvt</primary></indexterm>ecvt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>grantpt</primary></indexterm>grantpt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lrand48</primary></indexterm>lrand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>srand</primary></indexterm>srand<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__errno_location</primary></indexterm>__errno_location<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>erand48</primary></indexterm>erand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>hcreate</primary></indexterm>hcreate<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lsearch</primary></indexterm>lsearch<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>srand48</primary></indexterm>srand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__fpending</primary></indexterm>__fpending<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>err</primary></indexterm>err<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>hdestroy</primary></indexterm>hdestroy<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>makecontext</primary></indexterm>makecontext<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>srandom</primary></indexterm>srandom<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__getpagesize</primary></indexterm>__getpagesize<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>error</primary></indexterm>error<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>hsearch</primary></indexterm>hsearch<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>malloc</primary></indexterm>malloc<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtod</primary></indexterm>strtod<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isinf</primary></indexterm>__isinf<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>errx</primary></indexterm>errx<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>htonl</primary></indexterm>htonl<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memmem</primary></indexterm>memmem<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtol</primary></indexterm>strtol<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isinff</primary></indexterm>__isinff<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fcvt</primary></indexterm>fcvt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>htons</primary></indexterm>htons<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mkstemp</primary></indexterm>mkstemp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoul</primary></indexterm>strtoul<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isinfl</primary></indexterm>__isinfl<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmtmsg</primary></indexterm>fmtmsg<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>imaxabs</primary></indexterm>imaxabs<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mktemp</primary></indexterm>mktemp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>swapcontext</primary></indexterm>swapcontext<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isnan</primary></indexterm>__isnan<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fnmatch</primary></indexterm>fnmatch<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>imaxdiv</primary></indexterm>imaxdiv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mrand48</primary></indexterm>mrand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>syslog</primary></indexterm>syslog<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isnanf</primary></indexterm>__isnanf<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fpathconf</primary></indexterm>fpathconf<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_addr</primary></indexterm>inet_addr<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nftw</primary></indexterm>nftw<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>system</primary></indexterm>system<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isnanl</primary></indexterm>__isnanl<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>free</primary></indexterm>free<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_ntoa</primary></indexterm>inet_ntoa<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nrand48</primary></indexterm>nrand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tdelete</primary></indexterm>tdelete<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__sysconf</primary></indexterm>__sysconf<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>freeaddrinfo</primary></indexterm>freeaddrinfo<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_ntop</primary></indexterm>inet_ntop<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ntohl</primary></indexterm>ntohl<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tfind</primary></indexterm>tfind<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_exit</primary></indexterm>_exit<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftrylockfile</primary></indexterm>ftrylockfile<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_pton</primary></indexterm>inet_pton<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ntohs</primary></indexterm>ntohs<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tmpfile</primary></indexterm>tmpfile<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_longjmp</primary></indexterm>_longjmp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftw</primary></indexterm>ftw<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>initstate</primary></indexterm>initstate<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>openlog</primary></indexterm>openlog<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tmpnam</primary></indexterm>tmpnam<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_setjmp</primary></indexterm>_setjmp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>funlockfile</primary></indexterm>funlockfile<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>insque</primary></indexterm>insque<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>perror</primary></indexterm>perror<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tsearch</primary></indexterm>tsearch<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>a64l</primary></indexterm>a64l<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gai_strerror</primary></indexterm>gai_strerror<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isatty</primary></indexterm>isatty<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_memalign</primary></indexterm>posix_memalign<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ttyname</primary></indexterm>ttyname<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>abort</primary></indexterm>abort<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gcvt</primary></indexterm>gcvt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isblank</primary></indexterm>isblank<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ptsname</primary></indexterm>ptsname<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ttyname_r</primary></indexterm>ttyname_r<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>abs</primary></indexterm>abs<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getaddrinfo</primary></indexterm>getaddrinfo<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isinf</primary></indexterm>isinf<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>putenv</primary></indexterm>putenv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>twalk</primary></indexterm>twalk<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atof</primary></indexterm>atof<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getcwd</primary></indexterm>getcwd<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isinff</primary></indexterm>isinff</ENTRY>
<ENTRY><indexterm><primary>qsort</primary></indexterm>qsort<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>unlockpt</primary></indexterm>unlockpt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atoi</primary></indexterm>atoi<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getdate</primary></indexterm>getdate<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isinfl</primary></indexterm>isinfl<LINK LINKEND="std-131-25-tbl-libc-stb-ints"> [4]</LINK></ENTRY>
<ENTRY><indexterm><primary>rand</primary></indexterm>rand<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>unsetenv</primary></indexterm>unsetenv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atol</primary></indexterm>atol<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getenv</primary></indexterm>getenv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isnan</primary></indexterm>isnan<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>rand_r</primary></indexterm>rand_r<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>usleep</primary></indexterm>usleep<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atoll</primary></indexterm>atoll<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getlogin</primary></indexterm>getlogin<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isnanf</primary></indexterm>isnanf<LINK LINKEND="std-131-25-tbl-libc-stb-ints"> [4]</LINK></ENTRY>
<ENTRY><indexterm><primary>random</primary></indexterm>random<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>verrx</primary></indexterm>verrx<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basename</primary></indexterm>basename<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getnameinfo</primary></indexterm>getnameinfo<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isnanl</primary></indexterm>isnanl<LINK LINKEND="std-131-25-tbl-libc-stb-ints"> [4]</LINK></ENTRY>
<ENTRY><indexterm><primary>random_r</primary></indexterm>random_r<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfscanf</primary></indexterm>vfscanf<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bsearch</primary></indexterm>bsearch<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getopt</primary></indexterm>getopt<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>jrand48</primary></indexterm>jrand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>realloc</primary></indexterm>realloc<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>vscanf</primary></indexterm>vscanf<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>calloc</primary></indexterm>calloc<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getopt_long</primary></indexterm>getopt_long<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>l64a</primary></indexterm>l64a<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>realpath</primary></indexterm>realpath<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>vsscanf</primary></indexterm>vsscanf<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>closelog</primary></indexterm>closelog<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getopt_long_only</primary></indexterm>getopt_long_only<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>labs</primary></indexterm>labs<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>remque</primary></indexterm>remque<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>vsyslog</primary></indexterm>vsyslog<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>confstr</primary></indexterm>confstr<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getsubopt</primary></indexterm>getsubopt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lcong48</primary></indexterm>lcong48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>seed48</primary></indexterm>seed48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>warn</primary></indexterm>warn<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cuserid</primary></indexterm>cuserid<LINK LINKEND="std-131-5-tbl-libc-stb-ints"> [5]</LINK></ENTRY>
<ENTRY><indexterm><primary>gettimeofday</primary></indexterm>gettimeofday<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ldiv</primary></indexterm>ldiv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setenv</primary></indexterm>setenv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>warnx</primary></indexterm>warnx<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>daemon</primary></indexterm>daemon<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>glob</primary></indexterm>glob<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lfind</primary></indexterm>lfind<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sethostid</primary></indexterm>sethostid<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wordexp</primary></indexterm>wordexp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>dirname</primary></indexterm>dirname<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>glob64</primary></indexterm>glob64<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>llabs</primary></indexterm>llabs<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sethostname</primary></indexterm>sethostname<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wordfree</primary></indexterm>wordfree<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-stb-ints">[1]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-stb-ints">[2]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-0-tbl-libc-stb-ints">[3]</TITLE><para></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-25-tbl-libc-stb-ints">[4]</TITLE><para>ISO/IEC 9899: 1999, Programming Languages --C</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-stb-ints">[5]</TITLE><para>CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the data interfaces
for Standard Library specified in <XREF linkend="tbl-libc-stb-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-stb-data">
<TITLE>libc - Standard Library Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__environ</primary></indexterm>__environ<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_sys_errlist</primary></indexterm>_sys_errlist<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getdate_err</primary></indexterm>getdate_err<LINK LINKEND="std-131-67-tbl-libc-stb-data"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>opterr</primary></indexterm>opterr<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>optopt</primary></indexterm>optopt<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_environ</primary></indexterm>_environ<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>environ</primary></indexterm>environ<LINK LINKEND="std-131-67-tbl-libc-stb-data"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>optarg</primary></indexterm>optarg<LINK LINKEND="std-131-67-tbl-libc-stb-data"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>optind</primary></indexterm>optind<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-stb-data">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-stb-data">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libc-ddefs>
<TITLE>Data Definitions for libc</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO/IEC 9899 C Language serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>errno.h</TITLE>
<PARA>
</PARA>
<SCREEN>




#define EDEADLOCK	35
</SCREEN>
</SECT2>
<SECT2>
<TITLE>inttypes.h</TITLE>
<PARA>
</PARA>
<SCREEN>






typedef long intmax_t;
typedef unsigned long uintmax_t;
typedef unsigned long uintptr_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>limits.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ULONG_MAX	0xFFFFFFFFFFFFFFFFUL
#define LONG_MAX	9223372036854775807L






#define CHAR_MIN	0
#define CHAR_MAX	255
</SCREEN>
</SECT2>
<SECT2>
<TITLE>setjmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>






typedef int __jmp_buf[18];
</SCREEN>
</SECT2>
<SECT2>
<TITLE>signal.h</TITLE>
<PARA>
</PARA>
<SCREEN>



typedef struct
{
  unsigned long mask;
  unsigned long addr;
}
__attribute__ ((aligned (8))) _psw_t;
typedef struct
{
  _psw_t psw;
  unsigned long gprs;
  unsigned long acrs;
}
_s390_regs_common;


























struct sigaction
{
  union
  {
    sighandler_t _sa_handler;
    void (*_sa_sigaction) (int, siginfo_t *, void *);
  }
  __sigaction_handler;
  unsigned long sa_flags;
  void (*sa_restorer) (void);
  sigset_t sa_mask;
}
 ;





typedef struct
{
  unsigned int fpc;
  double fprs;
}
_s390_fp_regs;
typedef struct
{
  _s390_regs_common regs;
  _s390_fp_regs fpregs;
}
_sigregs;





struct sigcontext
{
  unsigned long oldmask;
  _sigregs *sregs;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stddef.h</TITLE>
<PARA>
</PARA>
<SCREEN>



typedef unsigned long size_t;
typedef long ptrdiff_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/ioctl.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FIONREAD	21531
#define TIOCNOTTY	21538
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/ipc.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct ipc_perm
{
  key_t __key;
  uid_t uid;
  gid_t gid;
  uid_t cuid;
  gid_t cgid;
  mode_t mode;
  unsigned short __seq;
  unsigned short __pad2;
  unsigned long __unused1;
  unsigned long __unused2;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/mman.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define MCL_CURRENT	1
#define MCL_FUTURE	2
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/msg.h</TITLE>
<PARA>
</PARA>
<SCREEN>






typedef unsigned long msgqnum_t;
typedef unsigned long msglen_t;


struct msqid_ds
{
  struct ipc_perm msg_perm;
  __time_t msg_stime;
  __time_t msg_rtime;
  __time_t msg_ctime;
  unsigned long __msg_cbytes;
  msgqnum_t msg_qnum;
  msglen_t msg_qbytes;
  __pid_t msg_lspid;
  __pid_t msg_lrpid;
  unsigned long __unused4;
  unsigned long __unused5;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/sem.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct semid_ds
{
  struct ipc_perm sem_perm;
  time_t sem_otime;
  time_t sem_ctime;
  unsigned long sem_nsems;
  unsigned long __unused3;
  unsigned long __unused4;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/shm.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SHMLBA	4096





typedef unsigned long shmatt_t;


struct shmid_ds
{
  struct ipc_perm shm_perm;
  size_t shm_segsz;
  time_t shm_atime;
  time_t shm_dtime;
  time_t shm_ctime;
  pid_t shm_cpid;
  pid_t shm_lpid;
  shmatt_t shm_nattch;
  unsigned long __unused4;
  unsigned long __unused5;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/stat.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define _STAT_VER	1


struct stat
{
  dev_t st_dev;
  ino_t st_ino;
  nlink_t st_nlink;
  mode_t st_mode;
  uid_t st_uid;
  gid_t st_gid;
  int pad0;
  dev_t st_rdev;
  off_t st_size;
  time_t st_atime;
  long __reserved0;
  time_t st_mtime;
  long __reserved1;
  time_t st_ctime;
  long __reserved2;
  blksize_t st_blksize;
  blkcnt_t st_blocks;
}
 ;
struct stat64
{
  dev_t st_dev;
  ino64_t st_ino;
  nlink_t st_nlink;
  mode_t st_mode;
  uid_t st_uid;
  gid_t st_gid;
  int pad0;
  dev_t st_rdev;
  off_t st_size;
  time_t st_atime;
  int __reserved0;
  time_t st_mtime;
  int __reserved1;
  time_t st_ctime;
  int __reserved2;
  blksize_t st_blksize;
  blkcnt64_t st_blocks;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/statvfs.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct statvfs
{
  unsigned long f_bsize;
  unsigned long f_frsize;
  fsblkcnt64_t f_blocks;
  fsblkcnt64_t f_bfree;
  fsblkcnt64_t f_bavail;
  fsfilcnt64_t f_files;
  fsfilcnt64_t f_ffree;
  fsfilcnt64_t f_favail;
  unsigned long f_fsid;
  int __f_unused;
  unsigned long f_flag;
  unsigned long f_namemax;
}
 ;
struct statvfs64
{
  unsigned long f_bsize;
  unsigned long f_frsize;
  fsblkcnt64_t f_blocks;
  fsblkcnt64_t f_bfree;
  fsblkcnt64_t f_bavail;
  fsfilcnt64_t f_files;
  fsfilcnt64_t f_ffree;
  fsfilcnt64_t f_favail;
  unsigned long f_fsid;
  int __f_unused;
  unsigned long f_flag;
  unsigned long f_namemax;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/types.h</TITLE>
<PARA>
</PARA>
<SCREEN>



typedef int64_t ssize_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>termios.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define CR2	1024
#define CR3	1536
#define CRDLY	1536
#define VT1	16384
#define VTDLY	16384
#define OLCUC	2
#define TAB1	2048
#define NLDLY	256
#define FF1	32768
#define FFDLY	32768
#define ONLCR	4
#define XCASE	4
#define TAB2	4096
#define CR1	512
#define IUCLC	512
#define TAB3	6144
#define TABDLY	6144
#define BS1	8192
#define BSDLY	8192









#define VSUSP	10
#define VEOL	11
#define VREPRINT	12
#define VDISCARD	13
#define VWERASE	14
#define VEOL2	16
#define VMIN	6
#define VSWTC	7
#define VSTART	8
#define VSTOP	9



#define IXON	1024
#define IXOFF	4096






#define HUPCL	1024
#define CREAD	128
#define CS6	16
#define CLOCAL	2048
#define PARENB	256
#define CS7	32
#define CS8	48
#define CSIZE	48
#define VTIME	5
#define PARODD	512
#define CSTOPB	64



#define ISIG	1
#define ECHOPRT	1024
#define NOFLSH	128
#define ECHOE	16
#define PENDIN	16384
#define ICANON	2
#define ECHOKE	2048
#define TOSTOP	256
#define ECHOK	32
#define IEXTEN	32768
#define FLUSHO	4096
#define ECHOCTL	512
#define ECHONL	64
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ucontext.h</TITLE>
<PARA>
</PARA>
<SCREEN>







#define NGREG	27











typedef union
{
  double d;
  float f;
}
fpreg_t;





typedef struct
{
  unsigned int fpc;
  fpreg_t fprs[16];
}
fpregset_t;





typedef struct
{
  _psw_t psw;
  unsigned long gregs[16];
  unsigned int aregs[16];
  fpregset_t fpregs;
}
mcontext_t;


typedef struct ucontext
{
  unsigned long uc_flags;
  struct ucontext *uc_link;
  stack_t uc_stack;
  mcontext_t uc_mcontext;
  sigset_t uc_sigmask;
}
ucontext_t;
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->
<!--    at Wed Jun 30 05:19:19 2004 -->
<SECT1 ID=libm>
<TITLE>Interfaces for libm</TITLE>
<PARA>
<XREF LINKEND="lib-libm-def"> defines the library name and shared object name
for the libm library
</PARA>
<TABLE id="lib-libm-def">
<TITLE>libm Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libm</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libm.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
ISO/IEC 9899: 1999, Programming Languages --C<FOOTNOTE ID="std-13-25">
<PARA>
ISO/IEC 9899: 1999, Programming Languages --C</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-13-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
The Single UNIX® Specification(SUS) Version 3<FOOTNOTE ID="std-13-67">
<PARA>
The Single UNIX® Specification(SUS) Version 3</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Math -->
<SECT2>
<!--libgroup-->
<TITLE>Math</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Math</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Math specified in <XREF linkend="tbl-libm-mat-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libm-mat-ints">
<TITLE>libm - Math Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>acos</primary></indexterm>acos<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cexp</primary></indexterm>cexp<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>expf</primary></indexterm>expf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>jnf</primary></indexterm>jnf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>remquof</primary></indexterm>remquof<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acosf</primary></indexterm>acosf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cexpf</primary></indexterm>cexpf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>expl</primary></indexterm>expl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>jnl</primary></indexterm>jnl<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>remquol</primary></indexterm>remquol<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acosh</primary></indexterm>acosh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cexpl</primary></indexterm>cexpl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>expm1</primary></indexterm>expm1<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ldexp</primary></indexterm>ldexp<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>rint</primary></indexterm>rint<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acoshf</primary></indexterm>acoshf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cimag</primary></indexterm>cimag<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fabs</primary></indexterm>fabs<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ldexpf</primary></indexterm>ldexpf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>rintf</primary></indexterm>rintf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acoshl</primary></indexterm>acoshl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cimagf</primary></indexterm>cimagf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fabsf</primary></indexterm>fabsf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ldexpl</primary></indexterm>ldexpl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>rintl</primary></indexterm>rintl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acosl</primary></indexterm>acosl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cimagl</primary></indexterm>cimagl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fabsl</primary></indexterm>fabsl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgamma</primary></indexterm>lgamma<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>round</primary></indexterm>round<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asin</primary></indexterm>asin<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clog</primary></indexterm>clog<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fdim</primary></indexterm>fdim<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgamma_r</primary></indexterm>lgamma_r<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>roundf</primary></indexterm>roundf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinf</primary></indexterm>asinf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clog10</primary></indexterm>clog10<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fdimf</primary></indexterm>fdimf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgammaf</primary></indexterm>lgammaf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>roundl</primary></indexterm>roundl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinh</primary></indexterm>asinh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clog10f</primary></indexterm>clog10f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fdiml</primary></indexterm>fdiml<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgammaf_r</primary></indexterm>lgammaf_r<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalb</primary></indexterm>scalb<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinhf</primary></indexterm>asinhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clog10l</primary></indexterm>clog10l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>feclearexcept</primary></indexterm>feclearexcept<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgammal</primary></indexterm>lgammal<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbf</primary></indexterm>scalbf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinhl</primary></indexterm>asinhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clogf</primary></indexterm>clogf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fegetenv</primary></indexterm>fegetenv<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgammal_r</primary></indexterm>lgammal_r<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbl</primary></indexterm>scalbl<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinl</primary></indexterm>asinl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clogl</primary></indexterm>clogl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fegetexceptflag</primary></indexterm>fegetexceptflag<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llrint</primary></indexterm>llrint<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbln</primary></indexterm>scalbln<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan</primary></indexterm>atan<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>conj</primary></indexterm>conj<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fegetround</primary></indexterm>fegetround<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llrintf</primary></indexterm>llrintf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalblnf</primary></indexterm>scalblnf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan2</primary></indexterm>atan2<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>conjf</primary></indexterm>conjf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>feholdexcept</primary></indexterm>feholdexcept<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llrintl</primary></indexterm>llrintl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalblnl</primary></indexterm>scalblnl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan2f</primary></indexterm>atan2f<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>conjl</primary></indexterm>conjl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>feraiseexcept</primary></indexterm>feraiseexcept<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llround</primary></indexterm>llround<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbn</primary></indexterm>scalbn<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan2l</primary></indexterm>atan2l<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>copysign</primary></indexterm>copysign<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fesetenv</primary></indexterm>fesetenv<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llroundf</primary></indexterm>llroundf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbnf</primary></indexterm>scalbnf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanf</primary></indexterm>atanf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>copysignf</primary></indexterm>copysignf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fesetexceptflag</primary></indexterm>fesetexceptflag<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llroundl</primary></indexterm>llroundl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbnl</primary></indexterm>scalbnl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanh</primary></indexterm>atanh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>copysignl</primary></indexterm>copysignl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fesetround</primary></indexterm>fesetround<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>log</primary></indexterm>log<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>significand</primary></indexterm>significand<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanhf</primary></indexterm>atanhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cos</primary></indexterm>cos<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fetestexcept</primary></indexterm>fetestexcept<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>log10</primary></indexterm>log10<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>significandf</primary></indexterm>significandf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanhl</primary></indexterm>atanhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cosf</primary></indexterm>cosf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>feupdateenv</primary></indexterm>feupdateenv<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>log10f</primary></indexterm>log10f<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>significandl</primary></indexterm>significandl<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanl</primary></indexterm>atanl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cosh</primary></indexterm>cosh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>finite</primary></indexterm>finite<LINK LINKEND="std-13-5-tbl-libm-mat-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>log10l</primary></indexterm>log10l<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sin</primary></indexterm>sin<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cabs</primary></indexterm>cabs<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>coshf</primary></indexterm>coshf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>finitef</primary></indexterm>finitef<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>log1p</primary></indexterm>log1p<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sincos</primary></indexterm>sincos<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cabsf</primary></indexterm>cabsf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>coshl</primary></indexterm>coshl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>finitel</primary></indexterm>finitel<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>logb</primary></indexterm>logb<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sincosf</primary></indexterm>sincosf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cabsl</primary></indexterm>cabsl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cosl</primary></indexterm>cosl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>floor</primary></indexterm>floor<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>logf</primary></indexterm>logf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sincosl</primary></indexterm>sincosl<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacos</primary></indexterm>cacos<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cpow</primary></indexterm>cpow<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>floorf</primary></indexterm>floorf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>logl</primary></indexterm>logl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sinf</primary></indexterm>sinf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacosf</primary></indexterm>cacosf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cpowf</primary></indexterm>cpowf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>floorl</primary></indexterm>floorl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lrint</primary></indexterm>lrint<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sinh</primary></indexterm>sinh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacosh</primary></indexterm>cacosh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cpowl</primary></indexterm>cpowl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fma</primary></indexterm>fma<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lrintf</primary></indexterm>lrintf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sinhf</primary></indexterm>sinhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacoshf</primary></indexterm>cacoshf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cproj</primary></indexterm>cproj<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmaf</primary></indexterm>fmaf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lrintl</primary></indexterm>lrintl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sinhl</primary></indexterm>sinhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacoshl</primary></indexterm>cacoshl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cprojf</primary></indexterm>cprojf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmal</primary></indexterm>fmal<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lround</primary></indexterm>lround<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sinl</primary></indexterm>sinl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacosl</primary></indexterm>cacosl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cprojl</primary></indexterm>cprojl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmax</primary></indexterm>fmax<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lroundf</primary></indexterm>lroundf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sqrt</primary></indexterm>sqrt<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>carg</primary></indexterm>carg<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>creal</primary></indexterm>creal<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmaxf</primary></indexterm>fmaxf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lroundl</primary></indexterm>lroundl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sqrtf</primary></indexterm>sqrtf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cargf</primary></indexterm>cargf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>crealf</primary></indexterm>crealf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmaxl</primary></indexterm>fmaxl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>matherr</primary></indexterm>matherr<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sqrtl</primary></indexterm>sqrtl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cargl</primary></indexterm>cargl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>creall</primary></indexterm>creall<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmin</primary></indexterm>fmin<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>modf</primary></indexterm>modf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tan</primary></indexterm>tan<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casin</primary></indexterm>casin<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csin</primary></indexterm>csin<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fminf</primary></indexterm>fminf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>modff</primary></indexterm>modff<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tanf</primary></indexterm>tanf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinf</primary></indexterm>casinf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csinf</primary></indexterm>csinf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fminl</primary></indexterm>fminl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>modfl</primary></indexterm>modfl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tanh</primary></indexterm>tanh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinh</primary></indexterm>casinh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csinh</primary></indexterm>csinh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmod</primary></indexterm>fmod<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nan</primary></indexterm>nan<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tanhf</primary></indexterm>tanhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinhf</primary></indexterm>casinhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csinhf</primary></indexterm>csinhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmodf</primary></indexterm>fmodf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nanf</primary></indexterm>nanf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tanhl</primary></indexterm>tanhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinhl</primary></indexterm>casinhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csinhl</primary></indexterm>csinhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmodl</primary></indexterm>fmodl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nanl</primary></indexterm>nanl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tanl</primary></indexterm>tanl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinl</primary></indexterm>casinl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csinl</primary></indexterm>csinl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>frexp</primary></indexterm>frexp<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nearbyint</primary></indexterm>nearbyint<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tgamma</primary></indexterm>tgamma<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catan</primary></indexterm>catan<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csqrt</primary></indexterm>csqrt<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>frexpf</primary></indexterm>frexpf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nearbyintf</primary></indexterm>nearbyintf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tgammaf</primary></indexterm>tgammaf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanf</primary></indexterm>catanf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csqrtf</primary></indexterm>csqrtf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>frexpl</primary></indexterm>frexpl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nearbyintl</primary></indexterm>nearbyintl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tgammal</primary></indexterm>tgammal<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanh</primary></indexterm>catanh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csqrtl</primary></indexterm>csqrtl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gamma</primary></indexterm>gamma<LINK LINKEND="std-13-5-tbl-libm-mat-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>nextafter</primary></indexterm>nextafter<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>trunc</primary></indexterm>trunc<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanhf</primary></indexterm>catanhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctan</primary></indexterm>ctan<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gammaf</primary></indexterm>gammaf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nextafterf</primary></indexterm>nextafterf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>truncf</primary></indexterm>truncf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanhl</primary></indexterm>catanhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctanf</primary></indexterm>ctanf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gammal</primary></indexterm>gammal<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nextafterl</primary></indexterm>nextafterl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>truncl</primary></indexterm>truncl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanl</primary></indexterm>catanl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctanh</primary></indexterm>ctanh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>hypot</primary></indexterm>hypot<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nexttoward</primary></indexterm>nexttoward<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>y0</primary></indexterm>y0<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cbrt</primary></indexterm>cbrt<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctanhf</primary></indexterm>ctanhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>hypotf</primary></indexterm>hypotf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nexttowardf</primary></indexterm>nexttowardf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>y0f</primary></indexterm>y0f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cbrtf</primary></indexterm>cbrtf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctanhl</primary></indexterm>ctanhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>hypotl</primary></indexterm>hypotl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nexttowardl</primary></indexterm>nexttowardl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>y0l</primary></indexterm>y0l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cbrtl</primary></indexterm>cbrtl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctanl</primary></indexterm>ctanl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ilogb</primary></indexterm>ilogb<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pow</primary></indexterm>pow<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>y1</primary></indexterm>y1<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccos</primary></indexterm>ccos<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>dremf</primary></indexterm>dremf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ilogbf</primary></indexterm>ilogbf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pow10</primary></indexterm>pow10<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>y1f</primary></indexterm>y1f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccosf</primary></indexterm>ccosf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>dreml</primary></indexterm>dreml<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ilogbl</primary></indexterm>ilogbl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pow10f</primary></indexterm>pow10f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>y1l</primary></indexterm>y1l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccosh</primary></indexterm>ccosh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erf</primary></indexterm>erf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j0</primary></indexterm>j0<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pow10l</primary></indexterm>pow10l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>yn</primary></indexterm>yn<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccoshf</primary></indexterm>ccoshf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erfc</primary></indexterm>erfc<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j0f</primary></indexterm>j0f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>powf</primary></indexterm>powf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ynf</primary></indexterm>ynf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccoshl</primary></indexterm>ccoshl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erfcf</primary></indexterm>erfcf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j0l</primary></indexterm>j0l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>powl</primary></indexterm>powl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ynl</primary></indexterm>ynl<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccosl</primary></indexterm>ccosl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erfcl</primary></indexterm>erfcl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j1</primary></indexterm>j1<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>remainder</primary></indexterm>remainder<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ceil</primary></indexterm>ceil<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erff</primary></indexterm>erff<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j1f</primary></indexterm>j1f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>remainderf</primary></indexterm>remainderf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ceilf</primary></indexterm>ceilf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erfl</primary></indexterm>erfl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j1l</primary></indexterm>j1l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>remainderl</primary></indexterm>remainderl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ceill</primary></indexterm>ceill<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>exp</primary></indexterm>exp<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>jn</primary></indexterm>jn<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>remquo</primary></indexterm>remquo<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-13-67-tbl-libm-mat-ints">[1]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<FORMALPARA><TITLE id="std-13-25-tbl-libm-mat-ints">[2]</TITLE><para>ISO/IEC 9899: 1999, Programming Languages --C</para></FORMALPARA>
<FORMALPARA><TITLE id="std-13-5-tbl-libm-mat-ints">[3]</TITLE><para>CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the data interfaces
for Math specified in <XREF linkend="tbl-libm-mat-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libm-mat-data">
<TITLE>libm - Math Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>signgam</primary></indexterm>signgam<LINK LINKEND="std-13-67-tbl-libm-mat-data"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-13-67-tbl-libm-mat-data">[1]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libm-ddefs>
<TITLE>Data Definitions for libm</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO/IEC 9899 C Language serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->
<!--    at Wed Jun 30 05:19:34 2004 -->
<SECT1 ID=libpthread>
<TITLE>Interfaces for libpthread</TITLE>
<PARA>
<XREF LINKEND="lib-libpthread-def"> defines the library name and shared object name
for the libpthread library
</PARA>
<TABLE id="lib-libpthread-def">
<TITLE>libpthread Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpthread</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpthread.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
Large File Support<FOOTNOTE ID="std-132-35">
<PARA>
Large File Support</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-132-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
The Single UNIX® Specification(SUS) Version 3<FOOTNOTE ID="std-132-67">
<PARA>
The Single UNIX® Specification(SUS) Version 3</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Realtime Threads -->
<SECT2>
<!--libgroup-->
<TITLE>Realtime Threads</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Realtime Threads</TITLE>
<PARA>
No external functions are defined for libpthread - Realtime Threads
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Advanced Realtime Threads -->
<SECT2>
<!--libgroup-->
<TITLE>Advanced Realtime Threads</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Advanced Realtime Threads</TITLE>
<PARA>
No external functions are defined for libpthread - Advanced Realtime Threads
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Posix Threads -->
<SECT2>
<!--libgroup-->
<TITLE>Posix Threads</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Posix Threads</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Posix Threads specified in <XREF linkend="tbl-libpthread-pos-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpthread-pos-ints">
<TITLE>libpthread - Posix Threads Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_pthread_cleanup_pop</primary></indexterm>_pthread_cleanup_pop<LINK LINKEND="std-132-10-tbl-libpthread-pos-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cancel</primary></indexterm>pthread_cancel<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_join</primary></indexterm>pthread_join<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_destroy</primary></indexterm>pthread_rwlock_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setconcurrency</primary></indexterm>pthread_setconcurrency<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_pthread_cleanup_push</primary></indexterm>_pthread_cleanup_push<LINK LINKEND="std-132-10-tbl-libpthread-pos-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_broadcast</primary></indexterm>pthread_cond_broadcast<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_key_create</primary></indexterm>pthread_key_create<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_init</primary></indexterm>pthread_rwlock_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setspecific</primary></indexterm>pthread_setspecific<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pread</primary></indexterm>pread<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_destroy</primary></indexterm>pthread_cond_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_key_delete</primary></indexterm>pthread_key_delete<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_rdlock</primary></indexterm>pthread_rwlock_rdlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_sigmask</primary></indexterm>pthread_sigmask<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pread64</primary></indexterm>pread64<LINK LINKEND="std-132-35-tbl-libpthread-pos-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_init</primary></indexterm>pthread_cond_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_kill</primary></indexterm>pthread_kill<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_timedrdlock</primary></indexterm>pthread_rwlock_timedrdlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_testcancel</primary></indexterm>pthread_testcancel<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_destroy</primary></indexterm>pthread_attr_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_signal</primary></indexterm>pthread_cond_signal<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_destroy</primary></indexterm>pthread_mutex_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_timedwrlock</primary></indexterm>pthread_rwlock_timedwrlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pwrite</primary></indexterm>pwrite<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getdetachstate</primary></indexterm>pthread_attr_getdetachstate<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_timedwait</primary></indexterm>pthread_cond_timedwait<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_init</primary></indexterm>pthread_mutex_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_tryrdlock</primary></indexterm>pthread_rwlock_tryrdlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pwrite64</primary></indexterm>pwrite64<LINK LINKEND="std-132-35-tbl-libpthread-pos-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getguardsize</primary></indexterm>pthread_attr_getguardsize<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_wait</primary></indexterm>pthread_cond_wait<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_lock</primary></indexterm>pthread_mutex_lock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_trywrlock</primary></indexterm>pthread_rwlock_trywrlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_close</primary></indexterm>sem_close<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getschedparam</primary></indexterm>pthread_attr_getschedparam<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_destroy</primary></indexterm>pthread_condattr_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_trylock</primary></indexterm>pthread_mutex_trylock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_unlock</primary></indexterm>pthread_rwlock_unlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_destroy</primary></indexterm>sem_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getstackaddr</primary></indexterm>pthread_attr_getstackaddr<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_getpshared</primary></indexterm>pthread_condattr_getpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_unlock</primary></indexterm>pthread_mutex_unlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_wrlock</primary></indexterm>pthread_rwlock_wrlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_getvalue</primary></indexterm>sem_getvalue<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getstacksize</primary></indexterm>pthread_attr_getstacksize<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_init</primary></indexterm>pthread_condattr_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_destroy</primary></indexterm>pthread_mutexattr_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_destroy</primary></indexterm>pthread_rwlockattr_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_init</primary></indexterm>sem_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_init</primary></indexterm>pthread_attr_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_setpshared</primary></indexterm>pthread_condattr_setpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_getpshared</primary></indexterm>pthread_mutexattr_getpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_getpshared</primary></indexterm>pthread_rwlockattr_getpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_open</primary></indexterm>sem_open<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setdetachstate</primary></indexterm>pthread_attr_setdetachstate<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_create</primary></indexterm>pthread_create<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_gettype</primary></indexterm>pthread_mutexattr_gettype<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_init</primary></indexterm>pthread_rwlockattr_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_post</primary></indexterm>sem_post<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setguardsize</primary></indexterm>pthread_attr_setguardsize<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_detach</primary></indexterm>pthread_detach<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_init</primary></indexterm>pthread_mutexattr_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_setpshared</primary></indexterm>pthread_rwlockattr_setpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_timedwait</primary></indexterm>sem_timedwait<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setschedparam</primary></indexterm>pthread_attr_setschedparam<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_equal</primary></indexterm>pthread_equal<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_setpshared</primary></indexterm>pthread_mutexattr_setpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_self</primary></indexterm>pthread_self<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_trywait</primary></indexterm>sem_trywait<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setstackaddr</primary></indexterm>pthread_attr_setstackaddr<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_exit</primary></indexterm>pthread_exit<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_settype</primary></indexterm>pthread_mutexattr_settype<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setcancelstate</primary></indexterm>pthread_setcancelstate<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_unlink</primary></indexterm>sem_unlink<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setstacksize</primary></indexterm>pthread_attr_setstacksize<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_getspecific</primary></indexterm>pthread_getspecific<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_once</primary></indexterm>pthread_once<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setcanceltype</primary></indexterm>pthread_setcanceltype<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_wait</primary></indexterm>sem_wait<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-132-10-tbl-libpthread-pos-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-132-67-tbl-libpthread-pos-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
<FORMALPARA><TITLE id="std-132-35-tbl-libpthread-pos-ints">[3]</TITLE><para>Large File Support</para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpthread-ddefs>
<TITLE>Data Definitions for libpthread</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO/IEC 9899 C Language serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->
<!--    at Wed Jun 30 05:20:02 2004 -->
<SECT1 ID=libgcc-s>
<TITLE>Interfaces for libgcc_s</TITLE>
<PARA>
<XREF LINKEND="lib-libgcc_s-def"> defines the library name and shared object name
for the libgcc_s library
</PARA>
<TABLE id="lib-libgcc_s-def">
<TITLE>libgcc_s Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgcc_s</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgcc_s.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-236-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Unwind Library -->
<SECT2>
<!--libgroup-->
<TITLE>Unwind Library</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Unwind Library</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Unwind Library specified in <XREF linkend="tbl-libgcc_s-unw-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgcc_s-unw-ints">
<TITLE>libgcc_s - Unwind Library Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_Unwind_DeleteException</primary></indexterm>_Unwind_DeleteException<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetDataRelBase</primary></indexterm>_Unwind_GetDataRelBase<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetLanguageSpecificData</primary></indexterm>_Unwind_GetLanguageSpecificData<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_RaiseException</primary></indexterm>_Unwind_RaiseException<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_SetIP</primary></indexterm>_Unwind_SetIP<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Unwind_Find_FDE</primary></indexterm>_Unwind_Find_FDE<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetGR</primary></indexterm>_Unwind_GetGR<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetRegionStart</primary></indexterm>_Unwind_GetRegionStart<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_Resume</primary></indexterm>_Unwind_Resume<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Unwind_ForcedUnwind</primary></indexterm>_Unwind_ForcedUnwind<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetIP</primary></indexterm>_Unwind_GetIP<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetTextRelBase</primary></indexterm>_Unwind_GetTextRelBase<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_SetGR</primary></indexterm>_Unwind_SetGR<LINK LINKEND="std-236-10-tbl-libgcc_s-unw-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-236-10-tbl-libgcc_s-unw-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgcc-s-ddefs>
<TITLE>Data Definitions for libgcc_s</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO/IEC 9899 C Language serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<SECT1 ID=libgcc-sman>
<TITLE>Interface Definitions for libgcc_s</TITLE>
<PARA>
</PARA>
<REFENTRY ID="baselib--Unwind-DeleteException"> <REFMETA>
<REFENTRYTITLE>_Unwind_DeleteException</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_DeleteException
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>_Unwind_DeleteException</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Exception</STRUCTNAME> 
  <PARAMETER>*object</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_DeleteException</FUNCTION> deletes the given exception
<PARAMETER>object</PARAMETER>. If a given runtime resumes normal
execution after catching a foreign exception, it will not know how to
delete that exception. Such an exception shall be deleted by calling
<FUNCTION>_Unwind_DeleteException</FUNCTION>. This is a convenience
function that calls the function pointed to by the 
<EMPHASIS>exception_cleanup</EMPHASIS> field of the exception header.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-Find-FDE"> <REFMETA>
<REFENTRYTITLE>_Unwind_Find_FDE</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_Find_FDE
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>fde *
  <FUNCTION>_Unwind_Find_FDE</FUNCTION></FUNCDEF>
 <PARAMDEF>void
  <PARAMETER><REPLACEABLE>*pc</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>dwarf_eh_bases</STRUCTNAME> 
  <PARAMETER>*bases</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_Find_FDE</FUNCTION> 
looks for the object containing
<PARAMETER>pc</PARAMETER>, then inserts into
<PARAMETER>bases</PARAMETER>.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-ForcedUnwind"> <REFMETA>
<REFENTRYTITLE>_Unwind_ForcedUnwind</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_ForcedUnwind
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Reason_Code
  <FUNCTION>_Unwind_ForcedUnwind</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Exception</STRUCTNAME> 
  <PARAMETER>*object</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>_Unwind_Stop_Fn
  <PARAMETER><REPLACEABLE>stop</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void
  <PARAMETER><REPLACEABLE>*stop_parameter</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_ForcedUnwind</FUNCTION> raises an exception 
for forced unwinding, passing along the given exception
<PARAMETER>object</PARAMETER>, which should have its
<EMPHASIS>exception_class</EMPHASIS> and 
<EMPHASIS>exception_cleanup</EMPHASIS> fields set. The exception 
<PARAMETER>object</PARAMETER> has been allocated by the language-specific
runtime, and has a language-specific format, except that it shall contain an
<STRUCTNAME>_Unwind_Exception</STRUCTNAME> struct.
</PARA>
<PARA>
Forced unwinding is a single-phase process. <PARAMETER>stop</PARAMETER>
and <PARAMETER>stop_parameter</PARAMETER> control the termination of the 
unwind process instead of the usual personality routine query.
<PARAMETER>stop</PARAMETER> is called for each unwind frame, with the 
parameteres described for the usual personality routine below,
plus an additional <PARAMETER>stop_parameter</PARAMETER>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
When <PARAMETER>stop</PARAMETER> identifies the destination frame, it 
transfers control to the user code as appropriate without returning, 
normally after calling <FUNCTION>_Unwind_DeleteException</FUNCTION>. If not,
then it should return an <VARNAME>_Unwind_Reason_Code</VARNAME> value.
</PARA>
<PARA>
If <PARAMETER>stop</PARAMETER> returns any reason code other than
<SYMBOL>_URC_NO_REASON</SYMBOL>, then the stack state is indeterminate
from the point of view of the caller of 
<FUNCTION>_Unwind_ForcedUnwind</FUNCTION>. Rather than attempt to return,
therefore, the unwind library should use the 
<STRUCTFIELD>exception_cleanup</STRUCTFIELD> entry in the exception, and then 
call <FUNCTION>abort</FUNCTION>.
</PARA>
<VARIABLELIST>

<VARLISTENTRY>
<TERM>_URC_NO_REASON</TERM>
<LISTITEM>
<PARA>
This is not the destination from. The unwind runtime will call frame's
personality routine with the <VARNAME>_UA_FORCE_UNWIND</VARNAME>
and <VARNAME>_UA_CLEANUP_PHASE</VARNAME> flag set in 
<EMPHASIS>actions</EMPHASIS>, and then unwind to the next frame
and call the <FUNCTION>stop</FUNCTION> function again.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>_URC_END_OF_STACK</TERM>
<LISTITEM>
<PARA>
In order to allow <FUNCTION>_Unwind_ForcedUnwind</FUNCTION> to 
perform special processing when it reaches the end of the stack, the 
unwind runtime will call it after the last frame is rejected, with a 
<CONSTANT>NULL</CONSTANT> stack pointer in the context, and the 
<FUNCTION>stop</FUNCTION> function shall catch this condition. It may 
return this code if it cannot handle end-of-stack.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>_URC_FATAL_PHASE2_ERROR</TERM>
<LISTITEM>
<PARA>
The <FUNCTION>stop</FUNCTION> function may return this code for other fatal 
conditions like stack corruption.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>

</REFSECT1>

</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetDataRelBase"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetDataRelBase</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetDataRelBase
</REFNAME>
<REFPURPOSE>
private IA64 C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Ptr
  <FUNCTION>_Unwind_GetDataRelBase</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetDataRelBase</FUNCTION> 
returns the global pointer in register one for <PARAMETER>context</PARAMETER>.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetGR"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetGR</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetGR
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Word
  <FUNCTION>_Unwind_GetGR</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>int
  <PARAMETER><REPLACEABLE>index</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetGR</FUNCTION> returns data at
<PARAMETER>index</PARAMETER> found in <PARAMETER>context</PARAMETER>.
The register is identified by its index: <LITERAL>0</LITERAL> to 
<LITERAL>31</LITERAL> are for the fixed registers, and 
<LITERAL>32</LITERAL> to <LITERAL>127</LITERAL> are for the stacked 
registers.
</PARA>
<PARA>
During the two phases of unwinding, only <TOKEN>GR1</TOKEN> has 
a guaranteed value, which is the global pointer of the frame referenced 
by the unwind <PARAMETER>context</PARAMETER>. If the register has its 
<TOKEN>NAT</TOKEN> bit set, the behavior is unspecified.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetIP"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetIP</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetIP
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Ptr
  <FUNCTION>_Unwind_GetIP</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetIP</FUNCTION> 
returns the instruction pointer value for the routine identified by the 
unwind <PARAMETER>context</PARAMETER>.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetLanguageSpecificData"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetLanguageSpecificData</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetLanguageSpecificData
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Ptr
  <FUNCTION>_Unwind_GetLanguageSpecificData</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>uint
  <PARAMETER><REPLACEABLE>value</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetLanguageSpecificData</FUNCTION> 
returns the address of the language specific data area for the
current stack frame.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetRegionStart"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetRegionStart</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetRegionStart
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Ptr
  <FUNCTION>_Unwind_GetRegionStart</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetRegionStart</FUNCTION> routine returns the address 
(i.e., <LITERAL>0</LITERAL>) of the beginning of the procedure or code
fragment described by the current unwind descriptor block.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetTextRelBase"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetTextRelBase</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetTextRelBase
</REFNAME>
<REFPURPOSE>
private IA64 C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Ptr
  <FUNCTION>_Unwind_GetTextRelBase</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetTextRelBase</FUNCTION> 
calls the abort method, then returns.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-RaiseException"> <REFMETA>
<REFENTRYTITLE>_Unwind_RaiseException</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_RaiseException
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Reason_Code
  <FUNCTION>_Unwind_RaiseException</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Exception</STRUCTNAME> 
  <PARAMETER>*object</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_RaiseException</FUNCTION> 
raises an exception, passing along the given exception 
<PARAMETER>object</PARAMETER>, which should have its 
<STRUCTFIELD>exception_class</STRUCTFIELD> and 
<STRUCTFIELD>exception_cleanup</STRUCTFIELD> fields set. 
The exception object has been allocated by the language-specific
runtime, and has a language-specific format, exception that it shall
contain an <VARNAME>_Unwind_Exception</VARNAME>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
<FUNCTION>_Unwind_RaiseException</FUNCTION> does not return unless an
error condition is found. If an error condition occurs, an 
<VARNAME>_Unwind_Reason_Code</VARNAME> is returnd:
</PARA>

<VARIABLELIST>

<VARLISTENTRY>
<TERM>_URC_END_OF_STACK</TERM>
<LISTITEM>
<PARA>
The unwinder encountered the end of the stack during phase one without 
finding a handler. The unwind runtime will not have modified the stack. 
The C++ runtime will normally call <FUNCTION>uncaught_exception</FUNCTION> 
in this case.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>_URC_FATAL_PHASE1_ERROR</TERM>
<LISTITEM>
<PARA>
The unwinder encountered an unexpected error during phase one, because
of something like stack corruption. The unwind runtime will not have 
modified the stack. The C++ runtime will normally call 
<FUNCTION>terminate</FUNCTION> in this case.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>_URC_FATAL_PHASE2_ERROR</TERM>
<LISTITEM>
<PARA>
The unwinder encountered an unexpected error during phase two.
This is usually a <EMPHASIS>throw</EMPHASIS>, which will call 
<FUNCTION>terminate</FUNCTION>.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>

</REFSECT1>

</REFENTRY>

<REFENTRY ID="baselib--Unwind-Resume"> <REFMETA>
<REFENTRYTITLE>_Unwind_Resume</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_Resume
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void
  <FUNCTION>_Unwind_Resume</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Exception</STRUCTNAME> 
  <PARAMETER>*object</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_Resume</FUNCTION> 
resumes propagation of an existing exception <PARAMETER>object</PARAMETER>.
A call to this routine is inserted as the end of a landing pad that
performs cleanup, but does not resume normal execution. It causes
unwinding to proceed further.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-SetGR"> <REFMETA>
<REFENTRYTITLE>_Unwind_SetGR</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_SetGR
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void
  <FUNCTION>_Unwind_SetGR</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>int
  <PARAMETER><REPLACEABLE>index</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>uint
  <PARAMETER><REPLACEABLE>value</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_SetGR</FUNCTION> 
sets the <PARAMETER>value</PARAMETER> of the register 
<PARAMETER>index</PARAMETER>ed for the routine identified 
by the unwind <PARAMETER>context</PARAMETER>.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-SetIP"> <REFMETA>
<REFENTRYTITLE>_Unwind_SetIP</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_SetIP
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void
  <FUNCTION>_Unwind_SetIP</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>uint
  <PARAMETER><REPLACEABLE>value</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_SetIP</FUNCTION> 
sets the <PARAMETER>value</PARAMETER> of the instruction pointer for the 
routine identified by the unwind <PARAMETER>context</PARAMETER>
</PARA>
</REFSECT1>
</REFENTRY>

</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->
<!--    at Wed Jun 30 05:19:45 2004 -->
<SECT1 ID=libdl>
<TITLE>Interfaces for libdl</TITLE>
<PARA>
<XREF LINKEND="lib-libdl-def"> defines the library name and shared object name
for the libdl library
</PARA>
<TABLE id="lib-libdl-def">
<TITLE>libdl Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libdl</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libdl.so.2</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-27-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
The Single UNIX® Specification(SUS) Version 3<FOOTNOTE ID="std-27-67">
<PARA>
The Single UNIX® Specification(SUS) Version 3</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Dynamic Loader -->
<SECT2>
<!--libgroup-->
<TITLE>Dynamic Loader</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Dynamic Loader</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Dynamic Loader specified in <XREF linkend="tbl-libdl-dyn-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libdl-dyn-ints">
<TITLE>libdl - Dynamic Loader Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>dladdr</primary></indexterm>dladdr<LINK LINKEND="std-27-10-tbl-libdl-dyn-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>dlclose</primary></indexterm>dlclose<LINK LINKEND="std-27-67-tbl-libdl-dyn-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>dlerror</primary></indexterm>dlerror<LINK LINKEND="std-27-67-tbl-libdl-dyn-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>dlopen</primary></indexterm>dlopen<LINK LINKEND="std-27-67-tbl-libdl-dyn-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>dlsym</primary></indexterm>dlsym<LINK LINKEND="std-27-67-tbl-libdl-dyn-ints"> [2]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-27-10-tbl-libdl-dyn-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
<FORMALPARA><TITLE id="std-27-67-tbl-libdl-dyn-ints">[2]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libdl-ddefs>
<TITLE>Data Definitions for libdl</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO/IEC 9899 C Language serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->
<!--    at Wed Jun 30 05:19:53 2004 -->
<SECT1 ID=libcrypt>
<TITLE>Interfaces for libcrypt</TITLE>
<PARA>
<XREF LINKEND="lib-libcrypt-def"> defines the library name and shared object name
for the libcrypt library
</PARA>
<TABLE id="lib-libcrypt-def">
<TITLE>libcrypt Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libcrypt</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libcrypt.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
The Single UNIX® Specification(SUS) Version 3<FOOTNOTE ID="std-29-67">
<PARA>
The Single UNIX® Specification(SUS) Version 3</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Encryption -->
<SECT2>
<!--libgroup-->
<TITLE>Encryption</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Encryption</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Encryption specified in <XREF linkend="tbl-libcrypt-enc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libcrypt-enc-ints">
<TITLE>libcrypt - Encryption Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>crypt</primary></indexterm>crypt<LINK LINKEND="std-29-67-tbl-libcrypt-enc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>encrypt</primary></indexterm>encrypt<LINK LINKEND="std-29-67-tbl-libcrypt-enc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setkey</primary></indexterm>setkey<LINK LINKEND="std-29-67-tbl-libcrypt-enc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-29-67-tbl-libcrypt-enc-ints">[1]</TITLE><para>The Single UNIX® Specification(SUS) Version 3</para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libcrypt-ddefs>
<TITLE>Data Definitions for libcrypt</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO/IEC 9899 C Language serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->
<!--    at Wed Jun 30 05:20:16 2004 -->
<SECT1 ID=libstdcxx>
<TITLE>Interfaces for libstdcxx</TITLE>
<PARA>
<XREF LINKEND="lib-libstdcxx-def"> defines the library name and shared object name
for the libstdcxx library
</PARA>
<TABLE id="lib-libstdcxx-def">
<TITLE>libstdcxx Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libstdcxx</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libstdc++.so.5</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
Itanium C++ ABI (Revision: 1.75)<FOOTNOTE ID="std-231-87">
<PARA>
Itanium C++ ABI (Revision: 1.75)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
ISO/IEC 14882: 1998(E) Programming languages --C++<FOOTNOTE ID="std-231-65">
<PARA>
ISO/IEC 14882: 1998(E) Programming languages --C++</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-231-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name C++ Runtime Support -->
<SECT2>
<!--libgroup-->
<TITLE>C++ Runtime Support</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for C++ Runtime Support</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for C++ Runtime Support specified in <XREF linkend="tbl-libstdcxx-cxx-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cxx-ints">
<TITLE>libstdcxx - C++ Runtime Support Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >* __uninitialized_fill_n_aux<basic_string<char, char_traits<char>, allocator<char> >*, unsigned long, basic_string<char, char_traits<char>, allocator<char> > >(basic_string<char, char_traits<char>, allocator<char> >*, unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&, __false_type)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >* __uninitialized_fill_n_aux<basic_string<char, char_traits<char>, allocator<char> >*, unsigned long, basic_string<char, char_traits<char>, allocator<char> > >(basic_string<char, char_traits<char>, allocator<char> >*, unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&, __false_type)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cxx-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name C++ type descriptors for built-in types -->
<SECT2>
<!--libgroup-->
<TITLE>C++ type descriptors for built-in types</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for C++ type descriptors for built-in types</TITLE>
<PARA>
No external functions are defined for libstdcxx - C++ type descriptors for built-in types
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<long double> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<long double></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<long double></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<long double>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct __numeric_limits_base -->
<SECT2>
<!--libgroup-->
<TITLE>struct __numeric_limits_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct __numeric_limits_base</TITLE>
<PARA>
No external functions are defined for libstdcxx - struct __numeric_limits_base
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<long long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<long long></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<long long></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<long long>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned long long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<unsigned long long></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<unsigned long long></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<unsigned long long>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<float> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<float></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<float></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<float>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<double> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<double></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<double></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<double>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<short> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<short></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<short></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<short>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned short> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<unsigned short></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<unsigned short></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<unsigned short>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<int> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<int></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<int></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<int>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned int> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<unsigned int></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<unsigned int></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<unsigned int>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<long></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<long></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<long>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<unsigned long></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<unsigned long></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<unsigned long>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<wchar_t></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<wchar_t>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned char> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<unsigned char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<unsigned char></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<unsigned char>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<signed char> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<signed char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<signed char></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<signed char>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<char> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<char></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<char>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<bool> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits<bool></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits<bool></TITLE>
<PARA>
No external functions are defined for libstdcxx - struct numeric_limits<bool>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::allocator<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class allocator<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for allocator&lt;char&gt;</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class allocator<char></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::allocator<char> specified in <XREF linkend="tbl-libstdcxx-cla-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cla-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator<char>::deallocate(char*, unsigned long)</primary></indexterm>allocator<char>::deallocate(char*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>allocator<char>::allocate(unsigned long, void const*)</primary></indexterm>allocator<char>::allocate(unsigned long, void const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cla-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::allocator<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class allocator<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for allocator&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class allocator<wchar_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::allocator<wchar_t> specified in <XREF linkend="tbl-libstdcxx-clb-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clb-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator<wchar_t>::deallocate(wchar_t*, unsigned long)</primary></indexterm>allocator<wchar_t>::deallocate(wchar_t*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>allocator<wchar_t>::allocate(unsigned long, void const*)</primary></indexterm>allocator<wchar_t>::allocate(unsigned long, void const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clb-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name facet functions -->
<SECT2>
<!--libgroup-->
<TITLE>facet functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for facet functions</TITLE>
<PARA>
No external functions are defined for libstdcxx - facet functions
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_string -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_string</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_string</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_string specified in <XREF linkend="tbl-libstdcxx-clc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clc-ints">
<TITLE>libstdcxx - Class basic_string Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_of(wchar_t const*, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_of(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_Rep::_M_clone(allocator<wchar_t> const&, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_Rep::_M_clone(allocator<wchar_t> const&, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_of(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_of(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_Rep::_S_create(unsigned long, allocator<wchar_t> const&)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_Rep::_S_create(unsigned long, allocator<wchar_t> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_of(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_of(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_Rep::operator&lsqb;](unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_Rep::operator&lsqb;](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_of(wchar_t, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_of(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::erase(unsigned long, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::erase(unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_of(wchar_t const*, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_of(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::append(wchar_t const*, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::append(wchar_t const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_of(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_of(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::append(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::append(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_of(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_of(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::append(unsigned long, wchar_t)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::append(unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_of(wchar_t, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_of(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::assign(wchar_t const*, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::assign(wchar_t const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_not_of(wchar_t const*, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_not_of(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::assign(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::assign(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_not_of(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_not_of(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::assign(unsigned long, wchar_t)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::assign(unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_not_of(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_not_of(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(__gnu_cxx::__normal_iterator<wchar_t*, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > >, unsigned long, wchar_t)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(__gnu_cxx::__normal_iterator<wchar_t*, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > >, unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_not_of(wchar_t, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_last_not_of(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(unsigned long, wchar_t const*)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(unsigned long, wchar_t const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_not_of(wchar_t const*, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_not_of(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(unsigned long, wchar_t const*, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(unsigned long, wchar_t const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_not_of(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_not_of(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_not_of(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_not_of(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_not_of(wchar_t, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find_first_not_of(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(unsigned long, unsigned long, wchar_t)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::insert(unsigned long, unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::at(unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::at(unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::resize(unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::resize(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::copy(wchar_t*, unsigned long, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::copy(wchar_t*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::resize(unsigned long, wchar_t)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::resize(unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find(wchar_t const*, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(__gnu_cxx::__normal_iterator<wchar_t*, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > >, __gnu_cxx::__normal_iterator<wchar_t*, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > >, wchar_t const*, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(__gnu_cxx::__normal_iterator<wchar_t*, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > >, __gnu_cxx::__normal_iterator<wchar_t*, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > >, wchar_t const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(__gnu_cxx::__normal_iterator<wchar_t*, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > >, __gnu_cxx::__normal_iterator<wchar_t*, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > >, unsigned long, wchar_t)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(__gnu_cxx::__normal_iterator<wchar_t*, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > >, __gnu_cxx::__normal_iterator<wchar_t*, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > >, unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(unsigned long, unsigned long, wchar_t const*)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(unsigned long, unsigned long, wchar_t const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find(wchar_t, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::find(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(unsigned long, unsigned long, wchar_t const*, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(unsigned long, unsigned long, wchar_t const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::rfind(wchar_t const*, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::rfind(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(unsigned long, unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(unsigned long, unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::rfind(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::rfind(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(unsigned long, unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(unsigned long, unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::rfind(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::rfind(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(unsigned long, unsigned long, unsigned long, wchar_t)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::replace(unsigned long, unsigned long, unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::rfind(wchar_t, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::rfind(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::reserve(unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::reserve(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::substr(unsigned long, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::substr(unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_M_mutate(unsigned long, unsigned long, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_M_mutate(unsigned long, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_M_fold(unsigned long, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_M_fold(unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;in-charge](wchar_t const*, unsigned long, allocator<wchar_t> const&)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;in-charge](wchar_t const*, unsigned long, allocator<wchar_t> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::compare(unsigned long, unsigned long, wchar_t const*) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::compare(unsigned long, unsigned long, wchar_t const*) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;in-charge](basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;in-charge](basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::compare(unsigned long, unsigned long, wchar_t const*, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::compare(unsigned long, unsigned long, wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;in-charge](basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long, allocator<wchar_t> const&)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;in-charge](basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long, allocator<wchar_t> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::compare(unsigned long, unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::compare(unsigned long, unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;in-charge](unsigned long, wchar_t, allocator<wchar_t> const&)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;in-charge](unsigned long, wchar_t, allocator<wchar_t> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::compare(unsigned long, unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::compare(unsigned long, unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;not-in-charge](wchar_t const*, unsigned long, allocator<wchar_t> const&)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;not-in-charge](wchar_t const*, unsigned long, allocator<wchar_t> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_M_check(unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_M_check(unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;not-in-charge](basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;not-in-charge](basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::operator&lsqb;](unsigned long) const</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::operator&lsqb;](unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;not-in-charge](basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long, allocator<wchar_t> const&)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;not-in-charge](basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> > const&, unsigned long, unsigned long, allocator<wchar_t> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_S_construct(unsigned long, wchar_t, allocator<wchar_t> const&)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_S_construct(unsigned long, wchar_t, allocator<wchar_t> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;not-in-charge](unsigned long, wchar_t, allocator<wchar_t> const&)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::basic_string&lsqb;not-in-charge](unsigned long, wchar_t, allocator<wchar_t> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::at(unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::at(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::operator&lsqb;](unsigned long)</primary></indexterm>basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::operator&lsqb;](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clc-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class istreambuf_iterator<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class istreambuf_iterator<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::istreambuf_iterator<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class istreambuf_iterator<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class istreambuf_iterator<char, char_traits<char> ></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::istreambuf_iterator<char, std::char_traits<char> >
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::gslice -->
<SECT2>
<!--libgroup-->
<TITLE>Class gslice</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for gslice</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class gslice</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::gslice specified in <XREF linkend="tbl-libstdcxx-cld-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cld-ints">
<TITLE>libstdcxx - Class gslice Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>gslice::_Indexer::_Indexer&lsqb;in-charge](unsigned long, valarray<unsigned long> const&, valarray<unsigned long> const&)</primary></indexterm>gslice::_Indexer::_Indexer&lsqb;in-charge](unsigned long, valarray<unsigned long> const&, valarray<unsigned long> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cld-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>gslice::_Indexer::_Indexer&lsqb;not-in-charge](unsigned long, valarray<unsigned long> const&, valarray<unsigned long> const&)</primary></indexterm>gslice::_Indexer::_Indexer&lsqb;not-in-charge](unsigned long, valarray<unsigned long> const&, valarray<unsigned long> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cld-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cld-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::__basic_file<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class __basic_file<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __basic_file&lt;char&gt;</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __basic_file<char></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::__basic_file<char> specified in <XREF linkend="tbl-libstdcxx-cle-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cle-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file<char>::xsgetn(char*, long)</primary></indexterm>__basic_file<char>::xsgetn(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cle-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file<char>::xsputn(char const*, long)</primary></indexterm>__basic_file<char>::xsputn(char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cle-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cle-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::__default_alloc_template<(bool)1, (int)0> -->
<SECT2>
<!--libgroup-->
<TITLE>Class __default_alloc_template<(bool)1, (int)0></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __default_alloc_template&lt;(bool)1, (int)0&gt;</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __default_alloc_template<(bool)1, (int)0></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::__default_alloc_template<(bool)1, (int)0> specified in <XREF linkend="tbl-libstdcxx-clf-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clf-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template<(bool)1, (int)0>::deallocate(void*, unsigned long)</primary></indexterm>__default_alloc_template<(bool)1, (int)0>::deallocate(void*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template<(bool)1, (int)0>::_S_freelist_index(unsigned long)</primary></indexterm>__default_alloc_template<(bool)1, (int)0>::_S_freelist_index(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template<(bool)1, (int)0>::reallocate(void*, unsigned long, unsigned long)</primary></indexterm>__default_alloc_template<(bool)1, (int)0>::reallocate(void*, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template<(bool)1, (int)0>::allocate(unsigned long)</primary></indexterm>__default_alloc_template<(bool)1, (int)0>::allocate(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template<(bool)1, (int)0>::_S_round_up(unsigned long)</primary></indexterm>__default_alloc_template<(bool)1, (int)0>::_S_round_up(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template<(bool)1, (int)0>::_S_refill(unsigned long)</primary></indexterm>__default_alloc_template<(bool)1, (int)0>::_S_refill(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template<(bool)1, (int)0>::_S_chunk_alloc(unsigned long, int&)</primary></indexterm>__default_alloc_template<(bool)1, (int)0>::_S_chunk_alloc(unsigned long, int&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clf-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::valarray<unsigned> -->
<SECT2>
<!--libgroup-->
<TITLE>Class valarray<unsigned></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for valarray&lt;unsigned&gt;</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class valarray<unsigned></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::valarray<unsigned> specified in <XREF linkend="tbl-libstdcxx-clg-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clg-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray<unsigned long>::size() const</primary></indexterm>valarray<unsigned long>::size() const<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>valarray<unsigned long>::valarray&lsqb;not-in-charge](unsigned long)</primary></indexterm>valarray<unsigned long>::valarray&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray<unsigned long>::valarray&lsqb;in-charge](valarray<unsigned long> const&)</primary></indexterm>valarray<unsigned long>::valarray&lsqb;in-charge](valarray<unsigned long> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>valarray<unsigned long>::~valarray &lsqb;in-charge]()</primary></indexterm>valarray<unsigned long>::~valarray &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray<unsigned long>::valarray&lsqb;in-charge](unsigned long)</primary></indexterm>valarray<unsigned long>::valarray&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>valarray<unsigned long>::~valarray &lsqb;not-in-charge]()</primary></indexterm>valarray<unsigned long>::~valarray &lsqb;not-in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray<unsigned long>::valarray&lsqb;not-in-charge](valarray<unsigned long> const&)</primary></indexterm>valarray<unsigned long>::valarray&lsqb;not-in-charge](valarray<unsigned long> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>valarray<unsigned long>::operator&lsqb;](unsigned long)</primary></indexterm>valarray<unsigned long>::operator&lsqb;](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clg-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_string<char, std::char_traits<char>, std::allocator<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_string<char, char_traits<char>, allocator<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_string<char, char_traits<char>, allocator<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_string<char, std::char_traits<char>, std::allocator<char> > specified in <XREF linkend="tbl-libstdcxx-clh-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clh-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_last_of(char const*, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_last_of(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::_Rep::_M_clone(allocator<char> const&, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::_Rep::_M_clone(allocator<char> const&, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_last_of(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_last_of(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::_Rep::_S_create(unsigned long, allocator<char> const&)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::_Rep::_S_create(unsigned long, allocator<char> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_last_of(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_last_of(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::_Rep::operator&lsqb;](unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::_Rep::operator&lsqb;](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_last_of(char, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_last_of(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::erase(unsigned long, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::erase(unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_first_of(char const*, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_first_of(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::append(char const*, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::append(char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_first_of(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_first_of(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::append(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::append(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_first_of(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_first_of(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::append(unsigned long, char)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::append(unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_first_of(char, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_first_of(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::assign(char const*, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::assign(char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_last_not_of(char const*, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_last_not_of(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::assign(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::assign(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_last_not_of(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_last_not_of(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::assign(unsigned long, char)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::assign(unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_last_not_of(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_last_not_of(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::insert(__gnu_cxx::__normal_iterator<char*, basic_string<char, char_traits<char>, allocator<char> > >, unsigned long, char)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::insert(__gnu_cxx::__normal_iterator<char*, basic_string<char, char_traits<char>, allocator<char> > >, unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_last_not_of(char, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_last_not_of(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::insert(unsigned long, char const*)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::insert(unsigned long, char const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_first_not_of(char const*, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_first_not_of(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::insert(unsigned long, char const*, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::insert(unsigned long, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_first_not_of(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_first_not_of(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::insert(unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::insert(unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_first_not_of(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_first_not_of(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::insert(unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::insert(unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find_first_not_of(char, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find_first_not_of(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::insert(unsigned long, unsigned long, char)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::insert(unsigned long, unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::at(unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::at(unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::resize(unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::resize(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::copy(char*, unsigned long, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::copy(char*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::resize(unsigned long, char)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::resize(unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find(char const*, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::replace(__gnu_cxx::__normal_iterator<char*, basic_string<char, char_traits<char>, allocator<char> > >, __gnu_cxx::__normal_iterator<char*, basic_string<char, char_traits<char>, allocator<char> > >, char const*, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::replace(__gnu_cxx::__normal_iterator<char*, basic_string<char, char_traits<char>, allocator<char> > >, __gnu_cxx::__normal_iterator<char*, basic_string<char, char_traits<char>, allocator<char> > >, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::replace(__gnu_cxx::__normal_iterator<char*, basic_string<char, char_traits<char>, allocator<char> > >, __gnu_cxx::__normal_iterator<char*, basic_string<char, char_traits<char>, allocator<char> > >, unsigned long, char)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::replace(__gnu_cxx::__normal_iterator<char*, basic_string<char, char_traits<char>, allocator<char> > >, __gnu_cxx::__normal_iterator<char*, basic_string<char, char_traits<char>, allocator<char> > >, unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::replace(unsigned long, unsigned long, char const*)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::replace(unsigned long, unsigned long, char const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::find(char, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::find(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::replace(unsigned long, unsigned long, char const*, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::replace(unsigned long, unsigned long, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::rfind(char const*, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::rfind(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::replace(unsigned long, unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::replace(unsigned long, unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::rfind(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::rfind(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::replace(unsigned long, unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::replace(unsigned long, unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::rfind(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::rfind(basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::replace(unsigned long, unsigned long, unsigned long, char)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::replace(unsigned long, unsigned long, unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::rfind(char, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::rfind(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::reserve(unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::reserve(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::substr(unsigned long, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::substr(unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::_M_mutate(unsigned long, unsigned long, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::_M_mutate(unsigned long, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::_M_fold(unsigned long, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::_M_fold(unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;in-charge](char const*, unsigned long, allocator<char> const&)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;in-charge](char const*, unsigned long, allocator<char> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::compare(unsigned long, unsigned long, char const*) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::compare(unsigned long, unsigned long, char const*) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;in-charge](basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;in-charge](basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::compare(unsigned long, unsigned long, char const*, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::compare(unsigned long, unsigned long, char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;in-charge](basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long, allocator<char> const&)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;in-charge](basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long, allocator<char> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::compare(unsigned long, unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::compare(unsigned long, unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;in-charge](unsigned long, char, allocator<char> const&)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;in-charge](unsigned long, char, allocator<char> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::compare(unsigned long, unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::compare(unsigned long, unsigned long, basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;not-in-charge](char const*, unsigned long, allocator<char> const&)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;not-in-charge](char const*, unsigned long, allocator<char> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::_M_check(unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::_M_check(unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;not-in-charge](basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;not-in-charge](basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::operator&lsqb;](unsigned long) const</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::operator&lsqb;](unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;not-in-charge](basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long, allocator<char> const&)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;not-in-charge](basic_string<char, char_traits<char>, allocator<char> > const&, unsigned long, unsigned long, allocator<char> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::_S_construct(unsigned long, char, allocator<char> const&)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::_S_construct(unsigned long, char, allocator<char> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;not-in-charge](unsigned long, char, allocator<char> const&)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::basic_string&lsqb;not-in-charge](unsigned long, char, allocator<char> const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::at(unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::at(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string<char, char_traits<char>, allocator<char> >::operator&lsqb;](unsigned long)</primary></indexterm>basic_string<char, char_traits<char>, allocator<char> >::operator&lsqb;](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clh-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::locale -->
<SECT2>
<!--libgroup-->
<TITLE>Class locale</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class locale</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::locale specified in <XREF linkend="tbl-libstdcxx-cli-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cli-ints">
<TITLE>libstdcxx - Class locale Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](locale::facet**, unsigned long, bool)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](locale::facet**, unsigned long, bool)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](locale::facet**, unsigned long, bool)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](locale::facet**, unsigned long, bool)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](locale::_Impl const&, unsigned long)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](locale::_Impl const&, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](locale::_Impl const&, unsigned long)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](locale::_Impl const&, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cli-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __cxxabiv1::__enum_type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__enum_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__enum_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__enum_type_info class
is described by <XREF LINKEND="cls-243">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-243">
<TITLE>vtable for __cxxabiv1::__enum_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo for __cxxabiv1::__enum_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__enum_type_info  class
is described by <XREF LINKEND="rtti-240">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-240">
<TITLE>typeinfo for __cxxabiv1::__enum_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__enum_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__enum_type_info</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class __cxxabiv1::__enum_type_info
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __cxxabiv1::__array_type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__array_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__array_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__array_type_info class
is described by <XREF LINKEND="cls-244">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-244">
<TITLE>vtable for __cxxabiv1::__array_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo for __cxxabiv1::__array_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__array_type_info  class
is described by <XREF LINKEND="rtti-241">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-241">
<TITLE>typeinfo for __cxxabiv1::__array_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__array_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__array_type_info</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class __cxxabiv1::__array_type_info
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __cxxabiv1::__class_type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__class_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__class_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__class_type_info class
is described by <XREF LINKEND="cls-239">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-239">
<TITLE>vtable for __cxxabiv1::__class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__class_type_info  class
is described by <XREF LINKEND="rtti-242">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-242">
<TITLE>typeinfo for __cxxabiv1::__class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__class_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class __cxxabiv1::__class_type_info specified in <XREF linkend="tbl-libstdcxx-clj-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clj-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__class_type_info Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const<LINK LINKEND="std-231-10-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const<LINK LINKEND="std-231-10-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-10-tbl-libstdcxx-clj-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __cxxabiv1::__pbase_type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__pbase_type_info class
is described by <XREF LINKEND="cls-245">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-245">
<TITLE>vtable for __cxxabiv1::__pbase_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pbase_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__pbase_type_info  class
is described by <XREF LINKEND="rtti-246">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-246">
<TITLE>typeinfo for __cxxabiv1::__pbase_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pbase_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class __cxxabiv1::__pbase_type_info
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __cxxabiv1::__pointer_type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__pointer_type_info class
is described by <XREF LINKEND="cls-247">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-247">
<TITLE>vtable for __cxxabiv1::__pointer_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__is_pointer_p() const</primary></indexterm>__cxxabiv1::__pointer_type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__pointer_type_info  class
is described by <XREF LINKEND="rtti-248">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-248">
<TITLE>typeinfo for __cxxabiv1::__pointer_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class __cxxabiv1::__pointer_type_info
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __cxxabiv1::__function_type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__function_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__function_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__function_type_info class
is described by <XREF LINKEND="cls-249">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-249">
<TITLE>vtable for __cxxabiv1::__function_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo for __cxxabiv1::__function_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::__is_function_p() const</primary></indexterm>__cxxabiv1::__function_type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__function_type_info  class
is described by <XREF LINKEND="rtti-250">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-250">
<TITLE>typeinfo for __cxxabiv1::__function_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__function_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__function_type_info</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class __cxxabiv1::__function_type_info
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __cxxabiv1::__si_class_type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__si_class_type_info class
is described by <XREF LINKEND="cls-251">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-251">
<TITLE>vtable for __cxxabiv1::__si_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__si_class_type_info  class
is described by <XREF LINKEND="rtti-252">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-252">
<TITLE>typeinfo for __cxxabiv1::__si_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class __cxxabiv1::__si_class_type_info specified in <XREF linkend="tbl-libstdcxx-clk-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clk-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__si_class_type_info Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const<LINK LINKEND="std-231-10-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const<LINK LINKEND="std-231-10-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-10-tbl-libstdcxx-clk-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __cxxabiv1::__vmi_class_type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__vmi_class_type_info class
is described by <XREF LINKEND="cls-253">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-253">
<TITLE>vtable for __cxxabiv1::__vmi_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__vmi_class_type_info  class
is described by <XREF LINKEND="rtti-254">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-254">
<TITLE>typeinfo for __cxxabiv1::__vmi_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class __cxxabiv1::__vmi_class_type_info specified in <XREF linkend="tbl-libstdcxx-cll-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cll-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__vmi_class_type_info Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const<LINK LINKEND="std-231-10-tbl-libstdcxx-cll-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const<LINK LINKEND="std-231-10-tbl-libstdcxx-cll-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-10-tbl-libstdcxx-cll-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __cxxabiv1::__fundamental_type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__fundamental_type_info class
is described by <XREF LINKEND="cls-255">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-255">
<TITLE>vtable for __cxxabiv1::__fundamental_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo for __cxxabiv1::__fundamental_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__fundamental_type_info  class
is described by <XREF LINKEND="rtti-256">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-256">
<TITLE>typeinfo for __cxxabiv1::__fundamental_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__fundamental_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class __cxxabiv1::__fundamental_type_info
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __cxxabiv1::__pointer_to_member_type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__pointer_to_member_type_info class
is described by <XREF LINKEND="cls-257">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-257">
<TITLE>vtable for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_to_member_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__pointer_to_member_type_info  class
is described by <XREF LINKEND="rtti-258">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-258">
<TITLE>typeinfo for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_to_member_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class __cxxabiv1::__pointer_to_member_type_info
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __gnu_cxx::stdio_filebuf<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class __gnu_cxx::stdio_filebuf<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __gnu_cxx::stdio_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-259">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-259">
<TITLE>vtable for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __gnu_cxx::stdio_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-260">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-260">
<TITLE>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __gnu_cxx::stdio_filebuf<char, char_traits<char> ></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class __gnu_cxx::stdio_filebuf<char, std::char_traits<char> >
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class __gnu_cxx::stdio_filebuf<wchar_t, std::char_traits<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class __gnu_cxx::stdio_filebuf<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __gnu_cxx::stdio_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-261">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-261">
<TITLE>vtable for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __gnu_cxx::stdio_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-262">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-262">
<TITLE>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __gnu_cxx::stdio_filebuf<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class __gnu_cxx::stdio_filebuf<wchar_t, std::char_traits<wchar_t> >
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::locale::facet -->
<SECT2>
<!--libgroup-->
<TITLE>Class locale::facet</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for locale::facet</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::locale::facet class
is described by <XREF LINKEND="cls-263">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-263">
<TITLE>vtable for locale::facet</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet &lsqb;in-charge]()</primary></indexterm>locale::facet::~facet &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet &lsqb;in-charge deleting]()</primary></indexterm>locale::facet::~facet &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::locale::facet  class
is described by <XREF LINKEND="rtti-264">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-264">
<TITLE>typeinfo for locale::facet</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for locale::facet</primary></indexterm>typeinfo name for locale::facet</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class locale::facet</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::locale::facet specified in <XREF linkend="tbl-libstdcxx-clm-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clm-ints">
<TITLE>libstdcxx - Class locale::facet Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::facet&lsqb;in-charge](unsigned long)</primary></indexterm>locale::facet::facet&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::facet&lsqb;not-in-charge](unsigned long)</primary></indexterm>locale::facet::facet&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clm-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::ios_base::failure -->
<SECT2>
<!--libgroup-->
<TITLE>Class ios_base::failure</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ios_base::failure</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ios_base::failure class
is described by <XREF LINKEND="cls-265">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-265">
<TITLE>vtable for ios_base::failure</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base::failure</primary></indexterm>typeinfo for ios_base::failure</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure &lsqb;in-charge]()</primary></indexterm>ios_base::failure::~failure &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure &lsqb;in-charge deleting]()</primary></indexterm>ios_base::failure::~failure &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::what() const</primary></indexterm>ios_base::failure::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ios_base::failure  class
is described by <XREF LINKEND="rtti-266">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-266">
<TITLE>typeinfo for ios_base::failure</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base::failure</primary></indexterm>typeinfo name for ios_base::failure</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ios_base::failure</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::ios_base::failure
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_iostream<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_iostream<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-267">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-267">
<TITLE>vtable for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-268">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-268">
<TITLE>typeinfo for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>11</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2050</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_iostream<char, char_traits<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_iostream<char, std::char_traits<char> > specified in <XREF linkend="tbl-libstdcxx-cln-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cln-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_iostream<char, char_traits<char> >::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_iostream<char, char_traits<char> >::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_iostream<char, char_traits<char> >::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_iostream<char, char_traits<char> >::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_iostream<char, char_traits<char> >::~basic_iostream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_iostream<char, char_traits<char> >::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_iostream<char, char_traits<char> >::~basic_iostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_iostream<char, char_traits<char> >::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cln-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_istream<char, std::char_traints<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istream<char, char_traints<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istream&lt;char, std::char_traints&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-269">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-269">
<TITLE>vtable for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge]()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_istream&lt;char, std::char_traints&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-270">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-270">
<TITLE>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istream<char, char_traints<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_istream<char, std::char_traints<char> > specified in <XREF linkend="tbl-libstdcxx-clo-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clo-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<char, char_traints<char> >::get(char*, long)</primary></indexterm>basic_istream<char, char_traints<char> >::get(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<char, char_traints<char> >::getline(char*, long, char)</primary></indexterm>basic_istream<char, char_traints<char> >::getline(char*, long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<char, char_traints<char> >::get(char*, long, char)</primary></indexterm>basic_istream<char, char_traints<char> >::get(char*, long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<char, char_traints<char> >::readsome(char*, long)</primary></indexterm>basic_istream<char, char_traints<char> >::readsome(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<char, char_traints<char> >::read(char*, long)</primary></indexterm>basic_istream<char, char_traints<char> >::read(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istream<char, char_traints<char> >::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istream<char, char_traints<char> >::~basic_istream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clo-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<char, char_traints<char> >::ignore(long, int)</primary></indexterm>basic_istream<char, char_traints<char> >::ignore(long, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istream<char, char_traints<char> >::~basic_istream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istream<char, char_traints<char> >::~basic_istream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clo-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<char, char_traints<char> >::getline(char*, long)</primary></indexterm>basic_istream<char, char_traints<char> >::getline(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clo-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clo-ints">[2]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_ostream<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostream<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-271">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-271">
<TITLE>vtable for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge]()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-272">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-272">
<TITLE>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostream<char, char_traits<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_ostream<char, std::char_traits<char> > specified in <XREF linkend="tbl-libstdcxx-clp-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clp-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream<char, char_traits<char> >::write(char const*, long)</primary></indexterm>basic_ostream<char, char_traits<char> >::write(char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clp-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the data interfaces
for Class std::basic_ostream<char, std::char_traits<char> > specified in <XREF linkend="tbl-libstdcxx-clp-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clp-data">
<TITLE> Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostream<char, char_traits<char> >::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostream<char, char_traits<char> >::~basic_ostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostream<char, char_traits<char> >::~basic_ostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostream<char, char_traits<char> >::~basic_ostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-0-tbl-libstdcxx-clp-data">[1]</TITLE><para></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::__num_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class __num_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __num_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::__num_base  class
is described by <XREF LINKEND="rtti-273">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-273">
<TITLE>typeinfo for __num_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __num_base</primary></indexterm>typeinfo name for __num_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __num_base</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::__num_base specified in <XREF linkend="tbl-libstdcxx-clq-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clq-ints">
<TITLE>libstdcxx - Class __num_base Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__num_base::_S_format_float(ios_base const&, char*, char, long)</primary></indexterm>__num_base::_S_format_float(ios_base const&, char*, char, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clq-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::bad_typeid -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_typeid</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_typeid</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_typeid class
is described by <XREF LINKEND="cls-274">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-274">
<TITLE>vtable for bad_typeid</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_typeid</primary></indexterm>typeinfo for bad_typeid</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;in-charge]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;in-charge deleting]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_typeid  class
is described by <XREF LINKEND="rtti-275">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-275">
<TITLE>typeinfo for bad_typeid</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_typeid</primary></indexterm>typeinfo name for bad_typeid</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_typeid</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::bad_typeid
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::ctype_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::ctype_base  class
is described by <XREF LINKEND="rtti-276">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-276">
<TITLE>typeinfo for ctype_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_base</primary></indexterm>typeinfo name for ctype_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype_base</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::ctype_base
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::istrstream -->
<SECT2>
<!--libgroup-->
<TITLE>Class istrstream</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for istrstream</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::istrstream class
is described by <XREF LINKEND="cls-277">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-277">
<TITLE>vtable for istrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for istrstream</primary></indexterm>typeinfo for istrstream</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::~istrstream &lsqb;in-charge]()</primary></indexterm>istrstream::~istrstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::~istrstream &lsqb;in-charge deleting]()</primary></indexterm>istrstream::~istrstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::istrstream  class
is described by <XREF LINKEND="rtti-278">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-278">
<TITLE>typeinfo for istrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for istrstream</primary></indexterm>typeinfo name for istrstream</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class istrstream</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::istrstream specified in <XREF linkend="tbl-libstdcxx-clr-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clr-ints">
<TITLE>libstdcxx - Class istrstream Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;in-charge](char const*, long)</primary></indexterm>istrstream::istrstream&lsqb;in-charge](char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;not-in-charge](char*, long)</primary></indexterm>istrstream::istrstream&lsqb;not-in-charge](char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;in-charge](char*, long)</primary></indexterm>istrstream::istrstream&lsqb;in-charge](char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to istrstream::~istrstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to istrstream::~istrstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clr-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;not-in-charge](char const*, long)</primary></indexterm>istrstream::istrstream&lsqb;not-in-charge](char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to istrstream::~istrstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to istrstream::~istrstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clr-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clr-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clr-ints">[2]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::money_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::money_base  class
is described by <XREF LINKEND="rtti-279">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-279">
<TITLE>typeinfo for money_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_base</primary></indexterm>typeinfo name for money_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_base</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::money_base
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::moneypunct<char, (bool)0> -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct<char, (bool)0></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;char, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;char, (bool)0&gt; class
is described by <XREF LINKEND="cls-280">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-280">
<TITLE>vtable for moneypunct&lt;char, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct&lt;char, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct&lt;char, (bool)0&gt;  class
is described by <XREF LINKEND="rtti-281">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-281">
<TITLE>typeinfo for moneypunct&lt;char, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;char, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct&lt;char, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct<char, (bool)0></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::moneypunct<char, (bool)0> specified in <XREF linkend="tbl-libstdcxx-cls-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cls-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<char, (bool)0>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct<char, (bool)0>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cls-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<char, (bool)0>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct<char, (bool)0>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cls-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<char, (bool)0>::moneypunct&lsqb;in-charge](unsigned long)</primary></indexterm>moneypunct<char, (bool)0>::moneypunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cls-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<char, (bool)0>::moneypunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>moneypunct<char, (bool)0>::moneypunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cls-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cls-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::moneypunct<char, (bool)1> -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct<char, (bool)1></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;char, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;char, (bool)1&gt; class
is described by <XREF LINKEND="cls-282">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-282">
<TITLE>vtable for moneypunct&lt;char, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct&lt;char, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct&lt;char, (bool)1&gt;  class
is described by <XREF LINKEND="rtti-283">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-283">
<TITLE>typeinfo for moneypunct&lt;char, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;char, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct&lt;char, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct<char, (bool)1></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::moneypunct<char, (bool)1> specified in <XREF linkend="tbl-libstdcxx-clt-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clt-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<char, (bool)1>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct<char, (bool)1>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<char, (bool)1>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct<char, (bool)1>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<char, (bool)1>::moneypunct&lsqb;in-charge](unsigned long)</primary></indexterm>moneypunct<char, (bool)1>::moneypunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<char, (bool)1>::moneypunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>moneypunct<char, (bool)1>::moneypunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clt-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::moneypunct<wchar_t, (bool)0> -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct<wchar_t, (bool)0></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;wchar_t, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;wchar_t, (bool)0&gt; class
is described by <XREF LINKEND="cls-284">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-284">
<TITLE>vtable for moneypunct&lt;wchar_t, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct&lt;wchar_t, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct&lt;wchar_t, (bool)0&gt;  class
is described by <XREF LINKEND="rtti-285">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-285">
<TITLE>typeinfo for moneypunct&lt;wchar_t, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct&lt;wchar_t, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct<wchar_t, (bool)0></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::moneypunct<wchar_t, (bool)0> specified in <XREF linkend="tbl-libstdcxx-clu-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clu-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<wchar_t, (bool)0>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct<wchar_t, (bool)0>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<wchar_t, (bool)0>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct<wchar_t, (bool)0>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<wchar_t, (bool)0>::moneypunct&lsqb;in-charge](unsigned long)</primary></indexterm>moneypunct<wchar_t, (bool)0>::moneypunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<wchar_t, (bool)0>::moneypunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>moneypunct<wchar_t, (bool)0>::moneypunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clu-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::moneypunct<wchar_t, (bool)1> -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct<wchar_t, (bool)1></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;wchar_t, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;wchar_t, (bool)1&gt; class
is described by <XREF LINKEND="cls-286">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-286">
<TITLE>vtable for moneypunct&lt;wchar_t, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct&lt;wchar_t, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct&lt;wchar_t, (bool)1&gt;  class
is described by <XREF LINKEND="rtti-287">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-287">
<TITLE>typeinfo for moneypunct&lt;wchar_t, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct&lt;wchar_t, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct<wchar_t, (bool)1></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::moneypunct<wchar_t, (bool)1> specified in <XREF linkend="tbl-libstdcxx-clv-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clv-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<wchar_t, (bool)1>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct<wchar_t, (bool)1>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<wchar_t, (bool)1>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct<wchar_t, (bool)1>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<wchar_t, (bool)1>::moneypunct&lsqb;in-charge](unsigned long)</primary></indexterm>moneypunct<wchar_t, (bool)1>::moneypunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct<wchar_t, (bool)1>::moneypunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>moneypunct<wchar_t, (bool)1>::moneypunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clv-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::ostrstream -->
<SECT2>
<!--libgroup-->
<TITLE>Class ostrstream</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ostrstream</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ostrstream class
is described by <XREF LINKEND="cls-288">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-288">
<TITLE>vtable for ostrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ostrstream</primary></indexterm>typeinfo for ostrstream</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::~ostrstream &lsqb;in-charge]()</primary></indexterm>ostrstream::~ostrstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::~ostrstream &lsqb;in-charge deleting]()</primary></indexterm>ostrstream::~ostrstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ostrstream  class
is described by <XREF LINKEND="rtti-289">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-289">
<TITLE>typeinfo for ostrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ostrstream</primary></indexterm>typeinfo name for ostrstream</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ostrstream</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::ostrstream specified in <XREF linkend="tbl-libstdcxx-clw-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clw-ints">
<TITLE>libstdcxx - Class ostrstream Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to ostrstream::~ostrstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to ostrstream::~ostrstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to ostrstream::~ostrstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to ostrstream::~ostrstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clw-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::__timepunct<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class __timepunct<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __timepunct&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__timepunct&lt;char&gt; class
is described by <XREF LINKEND="cls-290">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-290">
<TITLE>vtable for __timepunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;char&gt;</primary></indexterm>typeinfo for __timepunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge]()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge deleting]()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__timepunct&lt;char&gt;  class
is described by <XREF LINKEND="rtti-291">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-291">
<TITLE>typeinfo for __timepunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;char&gt;</primary></indexterm>typeinfo name for __timepunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __timepunct<char></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::__timepunct<char> specified in <XREF linkend="tbl-libstdcxx-clx-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clx-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct<char>::_M_put(char*, unsigned long, char const*, tm const*) const</primary></indexterm>__timepunct<char>::_M_put(char*, unsigned long, char const*, tm const*) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct<char>::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>__timepunct<char>::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct<char>::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>__timepunct<char>::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct<char>::__timepunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>__timepunct<char>::__timepunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct<char>::__timepunct&lsqb;in-charge](unsigned long)</primary></indexterm>__timepunct<char>::__timepunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clx-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::__timepunct<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class __timepunct<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __timepunct&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__timepunct&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-292">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-292">
<TITLE>vtable for __timepunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;wchar_t&gt;</primary></indexterm>typeinfo for __timepunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge]()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge deleting]()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__timepunct&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-293">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-293">
<TITLE>typeinfo for __timepunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;wchar_t&gt;</primary></indexterm>typeinfo name for __timepunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __timepunct<wchar_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::__timepunct<wchar_t> specified in <XREF linkend="tbl-libstdcxx-cly-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cly-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct<wchar_t>::_M_put(wchar_t*, unsigned long, wchar_t const*, tm const*) const</primary></indexterm>__timepunct<wchar_t>::_M_put(wchar_t*, unsigned long, wchar_t const*, tm const*) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct<wchar_t>::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>__timepunct<wchar_t>::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct<wchar_t>::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>__timepunct<wchar_t>::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct<wchar_t>::__timepunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>__timepunct<wchar_t>::__timepunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct<wchar_t>::__timepunct&lsqb;in-charge](unsigned long)</primary></indexterm>__timepunct<wchar_t>::__timepunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cly-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::logic_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class logic_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for logic_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::logic_error class
is described by <XREF LINKEND="cls-294">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-294">
<TITLE>vtable for logic_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for logic_error</primary></indexterm>typeinfo for logic_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;in-charge]()</primary></indexterm>logic_error::~logic_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;in-charge deleting]()</primary></indexterm>logic_error::~logic_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::logic_error  class
is described by <XREF LINKEND="rtti-295">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-295">
<TITLE>typeinfo for logic_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for logic_error</primary></indexterm>typeinfo name for logic_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class logic_error</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::logic_error
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::range_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class range_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for range_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::range_error class
is described by <XREF LINKEND="cls-296">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-296">
<TITLE>vtable for range_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for range_error</primary></indexterm>typeinfo for range_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error &lsqb;in-charge]()</primary></indexterm>range_error::~range_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error &lsqb;in-charge deleting]()</primary></indexterm>range_error::~range_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::range_error  class
is described by <XREF LINKEND="rtti-297">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-297">
<TITLE>typeinfo for range_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for range_error</primary></indexterm>typeinfo name for range_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class range_error</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::range_error
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::codecvt_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::codecvt_base  class
is described by <XREF LINKEND="rtti-298">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-298">
<TITLE>typeinfo for codecvt_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_base</primary></indexterm>typeinfo name for codecvt_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt_base</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::codecvt_base
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::ctype_byname<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_byname<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ctype_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-299">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-299">
<TITLE>vtable for ctype_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_byname&lt;char&gt;</primary></indexterm>typeinfo for ctype_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge]()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge deleting]()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_is(unsigned short, char) const</primary></indexterm>ctype&lt;char&gt;::do_is(unsigned short, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_is(char const*, char const*, unsigned short*) const</primary></indexterm>ctype&lt;char&gt;::do_is(char const*, char const*, unsigned short*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_scan_is(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_scan_is(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_scan_not(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_scan_not(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char, char) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ctype_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-300">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-300">
<TITLE>typeinfo for ctype_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_byname&lt;char&gt;</primary></indexterm>typeinfo name for ctype_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype_byname<char></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::ctype_byname<char> specified in <XREF linkend="tbl-libstdcxx-clz-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clz-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname<char>::ctype_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>ctype_byname<char>::ctype_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname<char>::ctype_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>ctype_byname<char>::ctype_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clz-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::ctype_byname<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_byname<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class ctype_byname<wchar_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::ctype_byname<wchar_t> specified in <XREF linkend="tbl-libstdcxx-cma-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cma-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname<wchar_t>::ctype_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>ctype_byname<wchar_t>::ctype_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-10-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname<wchar_t>::ctype_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>ctype_byname<wchar_t>::ctype_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-10-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-10-tbl-libstdcxx-cma-ints">[1]</TITLE><para>Linux Standard Base</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::domain_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class domain_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for domain_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::domain_error class
is described by <XREF LINKEND="cls-301">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-301">
<TITLE>vtable for domain_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for domain_error</primary></indexterm>typeinfo for domain_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error &lsqb;in-charge]()</primary></indexterm>domain_error::~domain_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error &lsqb;in-charge deleting]()</primary></indexterm>domain_error::~domain_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::domain_error  class
is described by <XREF LINKEND="rtti-302">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-302">
<TITLE>typeinfo for domain_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for domain_error</primary></indexterm>typeinfo name for domain_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class domain_error</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::domain_error
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::length_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class length_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for length_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::length_error class
is described by <XREF LINKEND="cls-303">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-303">
<TITLE>vtable for length_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for length_error</primary></indexterm>typeinfo for length_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error &lsqb;in-charge]()</primary></indexterm>length_error::~length_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error &lsqb;in-charge deleting]()</primary></indexterm>length_error::~length_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::length_error  class
is described by <XREF LINKEND="rtti-304">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-304">
<TITLE>typeinfo for length_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for length_error</primary></indexterm>typeinfo name for length_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class length_error</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::length_error
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::out_of_range -->
<SECT2>
<!--libgroup-->
<TITLE>Class out_of_range</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for out_of_range</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::out_of_range class
is described by <XREF LINKEND="cls-305">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-305">
<TITLE>vtable for out_of_range</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for out_of_range</primary></indexterm>typeinfo for out_of_range</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range &lsqb;in-charge]()</primary></indexterm>out_of_range::~out_of_range &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range &lsqb;in-charge deleting]()</primary></indexterm>out_of_range::~out_of_range &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::out_of_range  class
is described by <XREF LINKEND="rtti-306">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-306">
<TITLE>typeinfo for out_of_range</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for out_of_range</primary></indexterm>typeinfo name for out_of_range</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class out_of_range</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::out_of_range
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::strstreambuf -->
<SECT2>
<!--libgroup-->
<TITLE>Class strstreambuf</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for strstreambuf</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::strstreambuf class
is described by <XREF LINKEND="cls-307">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-307">
<TITLE>vtable for strstreambuf</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for strstreambuf</primary></indexterm>typeinfo for strstreambuf</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::~strstreambuf &lsqb;in-charge]()</primary></indexterm>strstreambuf::~strstreambuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::~strstreambuf &lsqb;in-charge deleting]()</primary></indexterm>strstreambuf::~strstreambuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::strstreambuf  class
is described by <XREF LINKEND="rtti-308">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-308">
<TITLE>typeinfo for strstreambuf</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for strstreambuf</primary></indexterm>typeinfo name for strstreambuf</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class strstreambuf</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::strstreambuf specified in <XREF linkend="tbl-libstdcxx-cmb-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmb-ints">
<TITLE>libstdcxx - Class strstreambuf Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, long)</primary></indexterm>strstreambuf::setbuf(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::_M_alloc(unsigned long)</primary></indexterm>strstreambuf::_M_alloc(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](void* (*)(unsigned long), void (*)(void*))</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](void* (*)(unsigned long), void (*)(void*))<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::_M_setup(char*, char*, long)</primary></indexterm>strstreambuf::_M_setup(char*, char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](void* (*)(unsigned long), void (*)(void*))</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](void* (*)(unsigned long), void (*)(void*))<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](signed char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](signed char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char*, long, signed char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char*, long, signed char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](char*, long, char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](char*, long, char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](signed char*, long, signed char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](signed char*, long, signed char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char*, long, unsigned char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char*, long, unsigned char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](char*, long, char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](char*, long, char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char*, long, unsigned char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char*, long, unsigned char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmb-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::bad_exception -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_exception</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_exception</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_exception class
is described by <XREF LINKEND="cls-309">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-309">
<TITLE>vtable for bad_exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_exception</primary></indexterm>typeinfo for bad_exception</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;in-charge]()</primary></indexterm>bad_exception::~bad_exception &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;in-charge deleting]()</primary></indexterm>bad_exception::~bad_exception &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_exception  class
is described by <XREF LINKEND="rtti-310">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-310">
<TITLE>typeinfo for bad_exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_exception</primary></indexterm>typeinfo name for bad_exception</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_exception</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::bad_exception
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_filebuf<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_filebuf<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-311">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-311">
<TITLE>vtable for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge]()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-312">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-312">
<TITLE>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_filebuf<char, char_traits<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_filebuf<char, std::char_traits<char> > specified in <XREF linkend="tbl-libstdcxx-cmc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmc-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf<char, char_traits<char> >::_M_convert_to_external(char*, long, long&, long&)</primary></indexterm>basic_filebuf<char, char_traits<char> >::_M_convert_to_external(char*, long, long&, long&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf<char, char_traits<char> >::xsgetn(char*, long)</primary></indexterm>basic_filebuf<char, char_traits<char> >::xsgetn(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf<char, char_traits<char> >::setbuf(char*, long)</primary></indexterm>basic_filebuf<char, char_traits<char> >::setbuf(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf<char, char_traits<char> >::xsputn(char const*, long)</primary></indexterm>basic_filebuf<char, char_traits<char> >::xsputn(char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmc-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_filebuf<wchar_t, std::char_traits<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_filebuf<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-313">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-313">
<TITLE>vtable for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge]()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-314">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-314">
<TITLE>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_filebuf<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_filebuf<wchar_t, std::char_traits<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cmd-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmd-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf<wchar_t, char_traits<wchar_t> >::_M_convert_to_external(wchar_t*, long, long&, long&)</primary></indexterm>basic_filebuf<wchar_t, char_traits<wchar_t> >::_M_convert_to_external(wchar_t*, long, long&, long&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf<wchar_t, char_traits<wchar_t> >::xsputn(wchar_t const*, long)</primary></indexterm>basic_filebuf<wchar_t, char_traits<wchar_t> >::xsputn(wchar_t const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf<wchar_t, char_traits<wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf<wchar_t, char_traits<wchar_t> >::setbuf(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_fstream<wchar_t, char_traits<wchar_t> >::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_fstream<wchar_t, char_traits<wchar_t> >::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmd-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf<wchar_t, char_traits<wchar_t> >::xsgetn(wchar_t*, long)</primary></indexterm>basic_filebuf<wchar_t, char_traits<wchar_t> >::xsgetn(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmd-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmd-ints">[2]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_fstream<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_fstream<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_fstream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-315">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-315">
<TITLE>vtable for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_fstream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-316">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-316">
<TITLE>typeinfo for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_fstream<char, char_traits<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_fstream<char, std::char_traits<char> > specified in <XREF linkend="tbl-libstdcxx-cme-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cme-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_fstream<char, char_traits<char> >::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_fstream<char, char_traits<char> >::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cme-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_fstream<char, char_traits<char> >::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_fstream<char, char_traits<char> >::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cme-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_fstream<char, char_traits<char> >::~basic_fstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_fstream<char, char_traits<char> >::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cme-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_fstream<char, char_traits<char> >::~basic_fstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_fstream<char, char_traits<char> >::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cme-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cme-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_fstream<wchar_t, std::char_traits<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_fstream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_fstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-317">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-317">
<TITLE>vtable for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_fstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-318">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-318">
<TITLE>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_fstream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_fstream<wchar_t, std::char_traits<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cmf-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmf-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_fstream<wchar_t, char_traits<wchar_t> >::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_fstream<wchar_t, char_traits<wchar_t> >::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_fstream<wchar_t, char_traits<wchar_t> >::~basic_fstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_fstream<wchar_t, char_traits<wchar_t> >::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_fstream<wchar_t, char_traits<wchar_t> >::~basic_fstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_fstream<wchar_t, char_traits<wchar_t> >::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmf-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_istream<wchar_t, std::char_traits<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-319">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-319">
<TITLE>vtable for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge]()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_istream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-320">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-320">
<TITLE>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_istream<wchar_t, std::char_traits<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cmg-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmg-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<wchar_t, char_traits<wchar_t> >::get(wchar_t*, long)</primary></indexterm>basic_istream<wchar_t, char_traits<wchar_t> >::get(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<wchar_t, char_traits<wchar_t> >::getline(wchar_t*, long, wchar_t)</primary></indexterm>basic_istream<wchar_t, char_traits<wchar_t> >::getline(wchar_t*, long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<wchar_t, char_traits<wchar_t> >::get(wchar_t*, long, wchar_t)</primary></indexterm>basic_istream<wchar_t, char_traits<wchar_t> >::get(wchar_t*, long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<wchar_t, char_traits<wchar_t> >::readsome(wchar_t*, long)</primary></indexterm>basic_istream<wchar_t, char_traits<wchar_t> >::readsome(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<wchar_t, char_traits<wchar_t> >::read(wchar_t*, long)</primary></indexterm>basic_istream<wchar_t, char_traits<wchar_t> >::read(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istream<wchar_t, char_traits<wchar_t> >::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istream<wchar_t, char_traits<wchar_t> >::~basic_istream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmg-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<wchar_t, char_traits<wchar_t> >::ignore(long, unsigned)</primary></indexterm>basic_istream<wchar_t, char_traits<wchar_t> >::ignore(long, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istream<wchar_t, char_traits<wchar_t> >::~basic_istream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istream<wchar_t, char_traits<wchar_t> >::~basic_istream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmg-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream<wchar_t, char_traits<wchar_t> >::getline(wchar_t*, long)</primary></indexterm>basic_istream<wchar_t, char_traits<wchar_t> >::getline(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmg-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmg-ints">[2]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_ostream<wchar_t, std::char_traits<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-321">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-321">
<TITLE>vtable for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge]()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-322">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-322">
<TITLE>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_ostream<wchar_t, std::char_traits<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cmh-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmh-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream<wchar_t, char_traits<wchar_t> >::write(wchar_t const*, long)</primary></indexterm>basic_ostream<wchar_t, char_traits<wchar_t> >::write(wchar_t const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostream<wchar_t, char_traits<wchar_t> >::~basic_ostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostream<wchar_t, char_traits<wchar_t> >::~basic_ostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmh-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostream<wchar_t, char_traits<wchar_t> >::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostream<wchar_t, char_traits<wchar_t> >::~basic_ostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmh-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmh-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmh-ints">[2]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::messages_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::messages_base  class
is described by <XREF LINKEND="rtti-323">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-323">
<TITLE>typeinfo for messages_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_base</primary></indexterm>typeinfo name for messages_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages_base</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::messages_base
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::runtime_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class runtime_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for runtime_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::runtime_error class
is described by <XREF LINKEND="cls-324">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-324">
<TITLE>vtable for runtime_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for runtime_error</primary></indexterm>typeinfo for runtime_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;in-charge]()</primary></indexterm>runtime_error::~runtime_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;in-charge deleting]()</primary></indexterm>runtime_error::~runtime_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::runtime_error  class
is described by <XREF LINKEND="rtti-325">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-325">
<TITLE>typeinfo for runtime_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for runtime_error</primary></indexterm>typeinfo name for runtime_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class runtime_error</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::runtime_error
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_ifstream<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ifstream<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-326">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-326">
<TITLE>vtable for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-327">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-327">
<TITLE>typeinfo for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ifstream<char, char_traits<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_ifstream<char, std::char_traits<char> > specified in <XREF linkend="tbl-libstdcxx-cmi-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmi-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ifstream<char, char_traits<char> >::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ifstream<char, char_traits<char> >::~basic_ifstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ifstream<char, char_traits<char> >::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ifstream<char, char_traits<char> >::~basic_ifstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmi-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_ifstream<wchar_t, std::char_traits<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ifstream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ifstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-328">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-328">
<TITLE>vtable for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ifstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-329">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-329">
<TITLE>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ifstream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_ifstream<wchar_t, std::char_traits<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cmj-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmj-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ifstream<wchar_t, char_traits<wchar_t> >::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ifstream<wchar_t, char_traits<wchar_t> >::~basic_ifstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ifstream<wchar_t, char_traits<wchar_t> >::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ifstream<wchar_t, char_traits<wchar_t> >::~basic_ifstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmj-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_iostream<wchar_t, std::char_traits<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_iostream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_iostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-330">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-330">
<TITLE>vtable for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_iostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-331">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-331">
<TITLE>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>11</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2050</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_iostream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_iostream<wchar_t, std::char_traits<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cmk-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmk-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_iostream<wchar_t, char_traits<wchar_t> >::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_iostream<wchar_t, char_traits<wchar_t> >::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_iostream<wchar_t, char_traits<wchar_t> >::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_iostream<wchar_t, char_traits<wchar_t> >::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_iostream<wchar_t, char_traits<wchar_t> >::~basic_iostream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_iostream<wchar_t, char_traits<wchar_t> >::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_iostream<wchar_t, char_traits<wchar_t> >::~basic_iostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_iostream<wchar_t, char_traits<wchar_t> >::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmk-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_ofstream<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ofstream<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-332">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-332">
<TITLE>vtable for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-333">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-333">
<TITLE>typeinfo for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ofstream<char, char_traits<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_ofstream<char, std::char_traits<char> > specified in <XREF linkend="tbl-libstdcxx-cml-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cml-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ofstream<char, char_traits<char> >::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ofstream<char, char_traits<char> >::~basic_ofstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ofstream<char, char_traits<char> >::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ofstream<char, char_traits<char> >::~basic_ofstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cml-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_ofstream<wchar_t, std::char_traits<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ofstream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ofstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-334">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-334">
<TITLE>vtable for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ofstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-335">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-335">
<TITLE>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ofstream<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_ofstream<wchar_t, std::char_traits<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cmm-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmm-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ofstream<wchar_t, char_traits<wchar_t> >::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ofstream<wchar_t, char_traits<wchar_t> >::~basic_ofstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ofstream<wchar_t, char_traits<wchar_t> >::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ofstream<wchar_t, char_traits<wchar_t> >::~basic_ofstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmm-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::codecvt_byname<char, char, __mbstate_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_byname<char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt_byname&lt;char, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-336">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-336">
<TITLE>vtable for codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt_byname&lt;char, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-337">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-337">
<TITLE>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt_byname<char, char, __mbstate_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::codecvt_byname<char, char, __mbstate_t> specified in <XREF linkend="tbl-libstdcxx-cmn-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmn-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname<char, char, __mbstate_t>::codecvt_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>codecvt_byname<char, char, __mbstate_t>::codecvt_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname<char, char, __mbstate_t>::codecvt_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>codecvt_byname<char, char, __mbstate_t>::codecvt_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmn-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::codecvt_byname<wchar_t, char, __mbstate_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_byname<wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-338">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-338">
<TITLE>vtable for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-339">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-339">
<TITLE>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Class data for collate_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate_byname&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-340">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-340">
<TITLE>vtable for collate_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for collate_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge]()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge deleting]()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate_byname&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-341">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-341">
<TITLE>typeinfo for collate_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for collate_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt_byname<wchar_t, char, __mbstate_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::codecvt_byname<wchar_t, char, __mbstate_t> specified in <XREF linkend="tbl-libstdcxx-cmo-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmo-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname<wchar_t, char, __mbstate_t>::codecvt_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>codecvt_byname<wchar_t, char, __mbstate_t>::codecvt_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname<wchar_t>::collate_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>collate_byname<wchar_t>::collate_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname<wchar_t, char, __mbstate_t>::codecvt_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>codecvt_byname<wchar_t, char, __mbstate_t>::codecvt_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname<wchar_t>::collate_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>collate_byname<wchar_t>::collate_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmo-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::collate_byname<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate_byname<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for collate_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-342">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-342">
<TITLE>vtable for collate_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;char&gt;</primary></indexterm>typeinfo for collate_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge]()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge deleting]()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_transform(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_transform(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_hash(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_hash(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-343">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-343">
<TITLE>typeinfo for collate_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;char&gt;</primary></indexterm>typeinfo name for collate_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class collate_byname<char></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::collate_byname<char> specified in <XREF linkend="tbl-libstdcxx-cmp-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmp-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname<char>::collate_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>collate_byname<char>::collate_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname<char>::collate_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>collate_byname<char>::collate_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmp-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::collate_byname<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate_byname<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class collate_byname<wchar_t></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::collate_byname<wchar_t>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::overflow_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class overflow_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for overflow_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::overflow_error class
is described by <XREF LINKEND="cls-344">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-344">
<TITLE>vtable for overflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for overflow_error</primary></indexterm>typeinfo for overflow_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error &lsqb;in-charge]()</primary></indexterm>overflow_error::~overflow_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error &lsqb;in-charge deleting]()</primary></indexterm>overflow_error::~overflow_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::overflow_error  class
is described by <XREF LINKEND="rtti-345">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-345">
<TITLE>typeinfo for overflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for overflow_error</primary></indexterm>typeinfo name for overflow_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class overflow_error</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::overflow_error
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_streambuf<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_streambuf<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-346">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-346">
<TITLE>vtable for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge]()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-347">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-347">
<TITLE>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_streambuf<char, char_traits<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_streambuf<char, std::char_traits<char> > specified in <XREF linkend="tbl-libstdcxx-cmq-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmq-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<char, char_traits<char> >::sgetn(char*, long)</primary></indexterm>basic_streambuf<char, char_traits<char> >::sgetn(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<char, char_traits<char> >::xsgetn(char*, long)</primary></indexterm>basic_streambuf<char, char_traits<char> >::xsgetn(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<char, char_traits<char> >::sputn(char const*, long)</primary></indexterm>basic_streambuf<char, char_traits<char> >::sputn(char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<char, char_traits<char> >::xsputn(char const*, long)</primary></indexterm>basic_streambuf<char, char_traits<char> >::xsputn(char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<char, char_traits<char> >::setbuf(char*, long)</primary></indexterm>basic_streambuf<char, char_traits<char> >::setbuf(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<char, char_traits<char> >::pubsetbuf(char*, long)</primary></indexterm>basic_streambuf<char, char_traits<char> >::pubsetbuf(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmq-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_streambuf<wchar_t, std::char_traits<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_streambuf<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_streambuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-348">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-348">
<TITLE>vtable for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge]()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_streambuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-349">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-349">
<TITLE>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_streambuf<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_streambuf<wchar_t, std::char_traits<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cmr-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmr-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<wchar_t, char_traits<wchar_t> >::sgetn(wchar_t*, long)</primary></indexterm>basic_streambuf<wchar_t, char_traits<wchar_t> >::sgetn(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<wchar_t, char_traits<wchar_t> >::xsgetn(wchar_t*, long)</primary></indexterm>basic_streambuf<wchar_t, char_traits<wchar_t> >::xsgetn(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<wchar_t, char_traits<wchar_t> >::sputn(wchar_t const*, long)</primary></indexterm>basic_streambuf<wchar_t, char_traits<wchar_t> >::sputn(wchar_t const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<wchar_t, char_traits<wchar_t> >::xsputn(wchar_t const*, long)</primary></indexterm>basic_streambuf<wchar_t, char_traits<wchar_t> >::xsputn(wchar_t const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<wchar_t, char_traits<wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf<wchar_t, char_traits<wchar_t> >::setbuf(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf<wchar_t, char_traits<wchar_t> >::pubsetbuf(wchar_t*, long)</primary></indexterm>basic_streambuf<wchar_t, char_traits<wchar_t> >::pubsetbuf(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmr-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringbuf<char, char_traits<char>, allocator<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-350">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-350">
<TITLE>vtable for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-351">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-351">
<TITLE>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringbuf<char, char_traits<char>, allocator<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > specified in <XREF linkend="tbl-libstdcxx-cms-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cms-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf<char, char_traits<char>, allocator<char> >::_M_really_sync(unsigned long, unsigned long)</primary></indexterm>basic_stringbuf<char, char_traits<char>, allocator<char> >::_M_really_sync(unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf<char, char_traits<char>, allocator<char> >::setbuf(char*, long)</primary></indexterm>basic_stringbuf<char, char_traits<char>, allocator<char> >::setbuf(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cms-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringbuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-352">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-352">
<TITLE>vtable for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_stringbuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-353">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-353">
<TITLE>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cmt-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmt-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_M_really_sync(unsigned long, unsigned long)</primary></indexterm>basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::_M_really_sync(unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::setbuf(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmt-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::messages_byname<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages_byname<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-354">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-354">
<TITLE>vtable for messages_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;char&gt;</primary></indexterm>typeinfo for messages_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge]()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge deleting]()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_close(int) const</primary></indexterm>messages&lt;char&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::messages_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-355">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-355">
<TITLE>typeinfo for messages_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;char&gt;</primary></indexterm>typeinfo name for messages_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages_byname<char></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::messages_byname<char> specified in <XREF linkend="tbl-libstdcxx-cmu-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmu-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname<char>::messages_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>messages_byname<char>::messages_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname<char>::messages_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>messages_byname<char>::messages_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmu-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::messages_byname<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages_byname<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages_byname&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-356">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-356">
<TITLE>vtable for messages_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for messages_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge]()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge deleting]()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_close(int) const</primary></indexterm>messages&lt;wchar_t&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::messages_byname&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-357">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-357">
<TITLE>typeinfo for messages_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for messages_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages_byname<wchar_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::messages_byname<wchar_t> specified in <XREF linkend="tbl-libstdcxx-cmv-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmv-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname<wchar_t>::messages_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>messages_byname<wchar_t>::messages_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname<wchar_t>::messages_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>messages_byname<wchar_t>::messages_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmv-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::numpunct_byname<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct_byname<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-358">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-358">
<TITLE>vtable for numpunct_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;char&gt;</primary></indexterm>typeinfo for numpunct_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge]()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge deleting]()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;char&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;char&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_grouping() const</primary></indexterm>numpunct&lt;char&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_truename() const</primary></indexterm>numpunct&lt;char&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_falsename() const</primary></indexterm>numpunct&lt;char&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-359">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-359">
<TITLE>typeinfo for numpunct_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;char&gt;</primary></indexterm>typeinfo name for numpunct_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct_byname<char></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::numpunct_byname<char> specified in <XREF linkend="tbl-libstdcxx-cmw-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmw-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname<char>::numpunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>numpunct_byname<char>::numpunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname<char>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>numpunct_byname<char>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmw-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::numpunct_byname<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct_byname<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct_byname&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-360">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-360">
<TITLE>vtable for numpunct_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for numpunct_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge]()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge deleting]()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_grouping() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_truename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_falsename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct_byname&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-361">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-361">
<TITLE>typeinfo for numpunct_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for numpunct_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct_byname<wchar_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::numpunct_byname<wchar_t> specified in <XREF linkend="tbl-libstdcxx-cmx-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmx-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname<wchar_t>::numpunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>numpunct_byname<wchar_t>::numpunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname<wchar_t>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>numpunct_byname<wchar_t>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmx-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get_byname<char, istreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get_byname&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-362">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-362">
<TITLE>vtable for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_get_byname&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-363">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-363">
<TITLE>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get_byname<char, istreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > > specified in <XREF linkend="tbl-libstdcxx-cmy-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmy-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname<char, istreambuf_iterator<char, char_traits<char> > >::time_get_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>time_get_byname<char, istreambuf_iterator<char, char_traits<char> > >::time_get_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname<char, istreambuf_iterator<char, char_traits<char> > >::time_get_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>time_get_byname<char, istreambuf_iterator<char, char_traits<char> > >::time_get_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmy-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get_byname<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get_byname&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-364">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-364">
<TITLE>vtable for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_get_byname&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-365">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-365">
<TITLE>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get_byname<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > specified in <XREF linkend="tbl-libstdcxx-cmz-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmz-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_get_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>time_get_byname<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_get_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_get_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>time_get_byname<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_get_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmz-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::time_put_byname<char, std::ostreambuf_iterator<char, std::char_traits<char> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put_byname<char, ostreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_put_byname&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-366">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-366">
<TITLE>vtable for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_put_byname&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-367">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-367">
<TITLE>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put_byname<char, ostreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::time_put_byname<char, std::ostreambuf_iterator<char, std::char_traits<char> > > specified in <XREF linkend="tbl-libstdcxx-cna-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cna-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname<char, ostreambuf_iterator<char, char_traits<char> > >::time_put_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>time_put_byname<char, ostreambuf_iterator<char, char_traits<char> > >::time_put_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname<char, ostreambuf_iterator<char, char_traits<char> > >::time_put_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>time_put_byname<char, ostreambuf_iterator<char, char_traits<char> > >::time_put_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cna-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::time_put_byname<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put_byname<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_put_byname&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-368">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-368">
<TITLE>vtable for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_put_byname&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-369">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-369">
<TITLE>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put_byname<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::time_put_byname<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > specified in <XREF linkend="tbl-libstdcxx-cnb-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnb-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_put_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>time_put_byname<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_put_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_put_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>time_put_byname<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_put_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnb-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::underflow_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class underflow_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for underflow_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::underflow_error class
is described by <XREF LINKEND="cls-370">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-370">
<TITLE>vtable for underflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for underflow_error</primary></indexterm>typeinfo for underflow_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error &lsqb;in-charge]()</primary></indexterm>underflow_error::~underflow_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error &lsqb;in-charge deleting]()</primary></indexterm>underflow_error::~underflow_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::underflow_error  class
is described by <XREF LINKEND="rtti-371">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-371">
<TITLE>typeinfo for underflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for underflow_error</primary></indexterm>typeinfo name for underflow_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class underflow_error</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::underflow_error
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::invalid_argument -->
<SECT2>
<!--libgroup-->
<TITLE>Class invalid_argument</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for invalid_argument</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::invalid_argument class
is described by <XREF LINKEND="cls-372">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-372">
<TITLE>vtable for invalid_argument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for invalid_argument</primary></indexterm>typeinfo for invalid_argument</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument &lsqb;in-charge]()</primary></indexterm>invalid_argument::~invalid_argument &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument &lsqb;in-charge deleting]()</primary></indexterm>invalid_argument::~invalid_argument &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::invalid_argument  class
is described by <XREF LINKEND="rtti-373">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-373">
<TITLE>typeinfo for invalid_argument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for invalid_argument</primary></indexterm>typeinfo name for invalid_argument</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class invalid_argument</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::invalid_argument
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::moneypunct_byname<char, (bool)0> -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname<char, (bool)0></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;char, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;char, (bool)0&gt; class
is described by <XREF LINKEND="cls-374">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-374">
<TITLE>vtable for moneypunct_byname&lt;char, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;char, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;char, (bool)0&gt;  class
is described by <XREF LINKEND="rtti-375">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-375">
<TITLE>typeinfo for moneypunct_byname&lt;char, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;char, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname<char, (bool)0></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::moneypunct_byname<char, (bool)0> specified in <XREF linkend="tbl-libstdcxx-cnc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnc-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname<char, (bool)0>::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname<char, (bool)0>::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname<char, (bool)0>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname<char, (bool)0>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnc-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::moneypunct_byname<char, (bool)1> -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname<char, (bool)1></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;char, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;char, (bool)1&gt; class
is described by <XREF LINKEND="cls-376">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-376">
<TITLE>vtable for moneypunct_byname&lt;char, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;char, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;char, (bool)1&gt;  class
is described by <XREF LINKEND="rtti-377">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-377">
<TITLE>typeinfo for moneypunct_byname&lt;char, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;char, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname<char, (bool)1></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::moneypunct_byname<char, (bool)1> specified in <XREF linkend="tbl-libstdcxx-cnd-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnd-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname<char, (bool)1>::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname<char, (bool)1>::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname<char, (bool)1>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname<char, (bool)1>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnd-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::moneypunct_byname<wchar_t, (bool)0> -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname<wchar_t, (bool)0></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;wchar_t, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;wchar_t, (bool)0&gt; class
is described by <XREF LINKEND="cls-378">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-378">
<TITLE>vtable for moneypunct_byname&lt;wchar_t, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;wchar_t, (bool)0&gt;  class
is described by <XREF LINKEND="rtti-379">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-379">
<TITLE>typeinfo for moneypunct_byname&lt;wchar_t, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname<wchar_t, (bool)0></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::moneypunct_byname<wchar_t, (bool)0> specified in <XREF linkend="tbl-libstdcxx-cne-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cne-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname<wchar_t, (bool)0>::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname<wchar_t, (bool)0>::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname<wchar_t, (bool)0>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname<wchar_t, (bool)0>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cne-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::moneypunct_byname<wchar_t, (bool)1> -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname<wchar_t, (bool)1></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;wchar_t, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;wchar_t, (bool)1&gt; class
is described by <XREF LINKEND="cls-380">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-380">
<TITLE>vtable for moneypunct_byname&lt;wchar_t, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;wchar_t, (bool)1&gt;  class
is described by <XREF LINKEND="rtti-381">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-381">
<TITLE>typeinfo for moneypunct_byname&lt;wchar_t, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname<wchar_t, (bool)1></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::moneypunct_byname<wchar_t, (bool)1> specified in <XREF linkend="tbl-libstdcxx-cnf-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnf-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname<wchar_t, (bool)1>::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname<wchar_t, (bool)1>::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname<wchar_t, (bool)1>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname<wchar_t, (bool)1>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnf-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringstream<char, char_traits<char>, allocator<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-382">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-382">
<TITLE>vtable for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-383">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-383">
<TITLE>typeinfo for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringstream<char, char_traits<char>, allocator<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > specified in <XREF linkend="tbl-libstdcxx-cng-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cng-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_stringstream<char, char_traits<char>, allocator<char> >::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_stringstream<char, char_traits<char>, allocator<char> >::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_stringstream<char, char_traits<char>, allocator<char> >::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_stringstream<char, char_traits<char>, allocator<char> >::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_stringstream<char, char_traits<char>, allocator<char> >::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_stringstream<char, char_traits<char>, allocator<char> >::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_stringstream<char, char_traits<char>, allocator<char> >::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_stringstream<char, char_traits<char>, allocator<char> >::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cng-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-384">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-384">
<TITLE>vtable for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_stringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-385">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-385">
<TITLE>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cnh-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnh-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnh-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istringstream<char, char_traits<char>, allocator<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-386">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-386">
<TITLE>vtable for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-387">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-387">
<TITLE>typeinfo for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istringstream<char, char_traits<char>, allocator<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> > specified in <XREF linkend="tbl-libstdcxx-cni-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cni-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istringstream<char, char_traits<char>, allocator<char> >::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istringstream<char, char_traits<char>, allocator<char> >::~basic_istringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cni-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istringstream<char, char_traits<char>, allocator<char> >::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istringstream<char, char_traits<char>, allocator<char> >::~basic_istringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cni-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cni-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-388">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-388">
<TITLE>vtable for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_istringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-389">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-389">
<TITLE>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cnj-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnj-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_istringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_istringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnj-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostringstream<char, char_traits<char>, allocator<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-390">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-390">
<TITLE>vtable for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-391">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-391">
<TITLE>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostringstream<char, char_traits<char>, allocator<char> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> > specified in <XREF linkend="tbl-libstdcxx-cnk-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnk-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostringstream<char, char_traits<char>, allocator<char> >::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostringstream<char, char_traits<char>, allocator<char> >::~basic_ostringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostringstream<char, char_traits<char>, allocator<char> >::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostringstream<char, char_traits<char>, allocator<char> >::~basic_ostringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnk-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-392">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-392">
<TITLE>vtable for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ostringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-393">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-393">
<TITLE>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > specified in <XREF linkend="tbl-libstdcxx-cnl-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnl-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_ostringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t> >::~basic_ostringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnl-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::__ctype_abstract_base<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class __ctype_abstract_base<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __ctype_abstract_base&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__ctype_abstract_base&lt;char&gt; class
is described by <XREF LINKEND="cls-394">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-394">
<TITLE>vtable for __ctype_abstract_base&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;char&gt;</primary></indexterm>typeinfo for __ctype_abstract_base&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge]()</primary></indexterm>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__ctype_abstract_base&lt;char&gt;  class
is described by <XREF LINKEND="rtti-395">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-395">
<TITLE>typeinfo for __ctype_abstract_base&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __ctype_abstract_base&lt;char&gt;</primary></indexterm>typeinfo name for __ctype_abstract_base&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_base</primary></indexterm>typeinfo for ctype_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __ctype_abstract_base<char></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::__ctype_abstract_base<char>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::__ctype_abstract_base<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class __ctype_abstract_base<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__ctype_abstract_base&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-396">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-396">
<TITLE>vtable for __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;</primary></indexterm>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge]()</primary></indexterm>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__ctype_abstract_base&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-397">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-397">
<TITLE>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __ctype_abstract_base&lt;wchar_t&gt;</primary></indexterm>typeinfo name for __ctype_abstract_base&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_base</primary></indexterm>typeinfo for ctype_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __ctype_abstract_base<wchar_t></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::__ctype_abstract_base<wchar_t>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::__codecvt_abstract_base<char, char, __mbstate_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class __codecvt_abstract_base<char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class __codecvt_abstract_base<char, char, __mbstate_t></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::__codecvt_abstract_base<char, char, __mbstate_t>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::__codecvt_abstract_base<wchar_t, char, __mbstate_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class __codecvt_abstract_base<wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-398">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-398">
<TITLE>vtable for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()</primary></indexterm>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-399">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-399">
<TITLE>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_base</primary></indexterm>typeinfo for codecvt_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __codecvt_abstract_base<wchar_t, char, __mbstate_t></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::ctype<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ctype&lt;char&gt; class
is described by <XREF LINKEND="cls-400">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-400">
<TITLE>vtable for ctype&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;char&gt;</primary></indexterm>typeinfo for ctype&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype &lsqb;in-charge]()</primary></indexterm>ctype&lt;char&gt;::~ctype &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype &lsqb;in-charge deleting]()</primary></indexterm>ctype&lt;char&gt;::~ctype &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_is(unsigned short, char) const</primary></indexterm>ctype&lt;char&gt;::do_is(unsigned short, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_is(char const*, char const*, unsigned short*) const</primary></indexterm>ctype&lt;char&gt;::do_is(char const*, char const*, unsigned short*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_scan_is(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_scan_is(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_scan_not(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_scan_not(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char, char) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ctype&lt;char&gt;  class
is described by <XREF LINKEND="rtti-401">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-401">
<TITLE>typeinfo for ctype&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype&lt;char&gt;</primary></indexterm>typeinfo name for ctype&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype<char></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::ctype<char> specified in <XREF linkend="tbl-libstdcxx-cnm-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnm-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get<char, istreambuf_iterator<char, char_traits<char> > >::_M_extract_num(istreambuf_iterator<char, char_traits<char> >&, istreambuf_iterator<char, char_traits<char> >&, int&, int, int, unsigned long, ctype<char> const&, _Ios_Iostate&) const</primary></indexterm>time_get<char, istreambuf_iterator<char, char_traits<char> > >::_M_extract_num(istreambuf_iterator<char, char_traits<char> >&, istreambuf_iterator<char, char_traits<char> >&, int&, int, int, unsigned long, ctype<char> const&, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype<char>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned short const*, bool, unsigned long)</primary></indexterm>ctype<char>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned short const*, bool, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype<char>::ctype&lsqb;in-charge](__locale_struct*, unsigned short const*, bool, unsigned long)</primary></indexterm>ctype<char>::ctype&lsqb;in-charge](__locale_struct*, unsigned short const*, bool, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype<char>::ctype&lsqb;not-in-charge](unsigned short const*, bool, unsigned long)</primary></indexterm>ctype<char>::ctype&lsqb;not-in-charge](unsigned short const*, bool, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype<char>::ctype&lsqb;in-charge](unsigned short const*, bool, unsigned long)</primary></indexterm>ctype<char>::ctype&lsqb;in-charge](unsigned short const*, bool, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnm-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::ctype<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ctype&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-402">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-402">
<TITLE>vtable for ctype&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;wchar_t&gt;</primary></indexterm>typeinfo for ctype&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge]()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge deleting]()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_is(unsigned short, wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_is(unsigned short, wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_is(wchar_t const*, wchar_t const*, unsigned short*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_is(wchar_t const*, wchar_t const*, unsigned short*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_toupper(wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_toupper(wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_toupper(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_toupper(wchar_t*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_tolower(wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_tolower(wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_tolower(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_tolower(wchar_t*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_widen(char) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_widen(char const*, char const*, wchar_t*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_widen(char const*, char const*, wchar_t*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_narrow(wchar_t, char) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_narrow(wchar_t, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_narrow(wchar_t const*, wchar_t const*, char, char*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_narrow(wchar_t const*, wchar_t const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ctype&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-403">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-403">
<TITLE>typeinfo for ctype&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype&lt;wchar_t&gt;</primary></indexterm>typeinfo name for ctype&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype<wchar_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::ctype<wchar_t> specified in <XREF linkend="tbl-libstdcxx-cnn-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnn-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype<wchar_t>::ctype&lsqb;in-charge](__locale_struct*, unsigned long)</primary></indexterm>ctype<wchar_t>::ctype&lsqb;in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype<wchar_t>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned long)</primary></indexterm>ctype<wchar_t>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype<wchar_t>::ctype&lsqb;in-charge](unsigned long)</primary></indexterm>ctype<wchar_t>::ctype&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype<wchar_t>::ctype&lsqb;not-in-charge](unsigned long)</primary></indexterm>ctype<wchar_t>::ctype&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnn-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::codecvt<char, char, __mbstate_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt<char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt&lt;char, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-404">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-404">
<TITLE>vtable for codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt&lt;char, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-405">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-405">
<TITLE>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Class data for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__codecvt_abstract_base&lt;char, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-406">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-406">
<TITLE>vtable for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()</primary></indexterm>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-407">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-407">
<TITLE>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_base</primary></indexterm>typeinfo for codecvt_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt<char, char, __mbstate_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::codecvt<char, char, __mbstate_t> specified in <XREF linkend="tbl-libstdcxx-cno-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cno-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt<char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</primary></indexterm>codecvt<char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cno-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt<char, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned long)</primary></indexterm>codecvt<char, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cno-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt<char, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned long)</primary></indexterm>codecvt<char, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cno-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cno-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::codecvt<wchar_t, char, __mbstate_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt<wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt&lt;wchar_t, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-408">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-408">
<TITLE>vtable for codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt&lt;wchar_t, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-409">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-409">
<TITLE>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt<wchar_t, char, __mbstate_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::codecvt<wchar_t, char, __mbstate_t> specified in <XREF linkend="tbl-libstdcxx-cnp-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnp-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt<wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</primary></indexterm>codecvt<wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt<wchar_t, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned long)</primary></indexterm>codecvt<wchar_t, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt<wchar_t, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned long)</primary></indexterm>codecvt<wchar_t, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnp-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::collate<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for collate&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate&lt;char&gt; class
is described by <XREF LINKEND="cls-410">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-410">
<TITLE>vtable for collate&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;char&gt;</primary></indexterm>typeinfo for collate&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate &lsqb;in-charge]()</primary></indexterm>collate&lt;char&gt;::~collate &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate &lsqb;in-charge deleting]()</primary></indexterm>collate&lt;char&gt;::~collate &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_transform(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_transform(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_hash(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_hash(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate&lt;char&gt;  class
is described by <XREF LINKEND="rtti-411">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-411">
<TITLE>typeinfo for collate&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;char&gt;</primary></indexterm>typeinfo name for collate&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class collate<char></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::collate<char> specified in <XREF linkend="tbl-libstdcxx-cnq-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnq-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate<char>::_M_transform(char*, char const*, unsigned long) const</primary></indexterm>collate<char>::_M_transform(char*, char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate<char>::collate&lsqb;not-in-charge](__locale_struct*, unsigned long)</primary></indexterm>collate<char>::collate&lsqb;not-in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate<char>::collate&lsqb;in-charge](__locale_struct*, unsigned long)</primary></indexterm>collate<char>::collate&lsqb;in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate<char>::collate&lsqb;not-in-charge](unsigned long)</primary></indexterm>collate<char>::collate&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate<char>::collate&lsqb;in-charge](unsigned long)</primary></indexterm>collate<char>::collate&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnq-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::collate<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for collate&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-412">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-412">
<TITLE>vtable for collate&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;wchar_t&gt;</primary></indexterm>typeinfo for collate&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge]()</primary></indexterm>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge deleting]()</primary></indexterm>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-413">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-413">
<TITLE>typeinfo for collate&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;wchar_t&gt;</primary></indexterm>typeinfo name for collate&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class collate<wchar_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::collate<wchar_t> specified in <XREF linkend="tbl-libstdcxx-cnr-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnr-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned long) const</primary></indexterm>collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate<wchar_t>::collate&lsqb;not-in-charge](__locale_struct*, unsigned long)</primary></indexterm>collate<wchar_t>::collate&lsqb;not-in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate<wchar_t>::collate&lsqb;in-charge](__locale_struct*, unsigned long)</primary></indexterm>collate<wchar_t>::collate&lsqb;in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate<wchar_t>::collate&lsqb;not-in-charge](unsigned long)</primary></indexterm>collate<wchar_t>::collate&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate<wchar_t>::collate&lsqb;in-charge](unsigned long)</primary></indexterm>collate<wchar_t>::collate&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnr-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_get<char, istreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-414">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-414">
<TITLE>vtable for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge]()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-415">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-415">
<TITLE>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_get<char, istreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > specified in <XREF linkend="tbl-libstdcxx-cns-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cns-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get<char, istreambuf_iterator<char, char_traits<char> > >::num_get&lsqb;in-charge](unsigned long)</primary></indexterm>num_get<char, istreambuf_iterator<char, char_traits<char> > >::num_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get<char, istreambuf_iterator<char, char_traits<char> > >::num_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>num_get<char, istreambuf_iterator<char, char_traits<char> > >::num_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cns-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::num_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-416">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-416">
<TITLE>vtable for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge]()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::num_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-417">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-417">
<TITLE>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > specified in <XREF linkend="tbl-libstdcxx-cnt-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnt-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::num_get&lsqb;in-charge](unsigned long)</primary></indexterm>num_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::num_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::num_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>num_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::num_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnt-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_put<char, ostreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-418">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-418">
<TITLE>vtable for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge]()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-419">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-419">
<TITLE>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_put<char, ostreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > specified in <XREF linkend="tbl-libstdcxx-cnu-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnu-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put<char, ostreambuf_iterator<char, char_traits<char> > >::num_put&lsqb;in-charge](unsigned long)</primary></indexterm>num_put<char, ostreambuf_iterator<char, char_traits<char> > >::num_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put<char, ostreambuf_iterator<char, char_traits<char> > >::num_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>num_put<char, ostreambuf_iterator<char, char_traits<char> > >::num_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnu-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-420">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-420">
<TITLE>vtable for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge]()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-421">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-421">
<TITLE>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > specified in <XREF linkend="tbl-libstdcxx-cnv-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnv-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::num_put&lsqb;in-charge](unsigned long)</primary></indexterm>num_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::num_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::num_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>num_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::num_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnv-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::bad_cast -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_cast</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_cast</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_cast class
is described by <XREF LINKEND="cls-422">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-422">
<TITLE>vtable for bad_cast</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_cast</primary></indexterm>typeinfo for bad_cast</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;in-charge]()</primary></indexterm>bad_cast::~bad_cast &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;in-charge deleting]()</primary></indexterm>bad_cast::~bad_cast &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_cast  class
is described by <XREF LINKEND="rtti-423">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-423">
<TITLE>typeinfo for bad_cast</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_cast</primary></indexterm>typeinfo name for bad_cast</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_cast</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::bad_cast
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::ios_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class ios_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ios_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::ios_base  class
is described by <XREF LINKEND="rtti-424">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-424">
<TITLE>typeinfo for ios_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base</primary></indexterm>typeinfo name for ios_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ios_base</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::ios_base
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::messages<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages&lt;char&gt; class
is described by <XREF LINKEND="cls-425">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-425">
<TITLE>vtable for messages&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;char&gt;</primary></indexterm>typeinfo for messages&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages &lsqb;in-charge]()</primary></indexterm>messages&lt;char&gt;::~messages &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages &lsqb;in-charge deleting]()</primary></indexterm>messages&lt;char&gt;::~messages &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_close(int) const</primary></indexterm>messages&lt;char&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::messages&lt;char&gt;  class
is described by <XREF LINKEND="rtti-426">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-426">
<TITLE>typeinfo for messages&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages&lt;char&gt;</primary></indexterm>typeinfo name for messages&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_base</primary></indexterm>typeinfo for messages_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages<char></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::messages<char> specified in <XREF linkend="tbl-libstdcxx-cnw-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnw-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages<char>::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>messages<char>::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages<char>::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>messages<char>::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages<char>::messages&lsqb;in-charge](unsigned long)</primary></indexterm>messages<char>::messages&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages<char>::messages&lsqb;not-in-charge](unsigned long)</primary></indexterm>messages<char>::messages&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnw-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::messages<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-427">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-427">
<TITLE>vtable for messages&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;wchar_t&gt;</primary></indexterm>typeinfo for messages&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge]()</primary></indexterm>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge deleting]()</primary></indexterm>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_close(int) const</primary></indexterm>messages&lt;wchar_t&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::messages&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-428">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-428">
<TITLE>typeinfo for messages&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages&lt;wchar_t&gt;</primary></indexterm>typeinfo name for messages&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_base</primary></indexterm>typeinfo for messages_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages<wchar_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::messages<wchar_t> specified in <XREF linkend="tbl-libstdcxx-cnx-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnx-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages<wchar_t>::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>messages<wchar_t>::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages<wchar_t>::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>messages<wchar_t>::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages<wchar_t>::messages&lsqb;in-charge](unsigned long)</primary></indexterm>messages<wchar_t>::messages&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages<wchar_t>::messages&lsqb;not-in-charge](unsigned long)</primary></indexterm>messages<wchar_t>::messages&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnx-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::numpunct<char> -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct<char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct&lt;char&gt; class
is described by <XREF LINKEND="cls-429">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-429">
<TITLE>vtable for numpunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;char&gt;</primary></indexterm>typeinfo for numpunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge]()</primary></indexterm>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge deleting]()</primary></indexterm>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;char&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;char&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_grouping() const</primary></indexterm>numpunct&lt;char&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_truename() const</primary></indexterm>numpunct&lt;char&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_falsename() const</primary></indexterm>numpunct&lt;char&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct&lt;char&gt;  class
is described by <XREF LINKEND="rtti-430">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-430">
<TITLE>typeinfo for numpunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;char&gt;</primary></indexterm>typeinfo name for numpunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct<char></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::numpunct<char> specified in <XREF linkend="tbl-libstdcxx-cny-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cny-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct<char>::numpunct&lsqb;in-charge](__locale_struct*, unsigned long)</primary></indexterm>numpunct<char>::numpunct&lsqb;in-charge](__locale_struct*, unsigned long)</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct<char>::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned long)</primary></indexterm>numpunct<char>::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct<char>::numpunct&lsqb;in-charge](unsigned long)</primary></indexterm>numpunct<char>::numpunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct<char>::numpunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>numpunct<char>::numpunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-0-tbl-libstdcxx-cny-ints">[1]</TITLE><para></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cny-ints">[2]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::numpunct<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct<wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-431">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-431">
<TITLE>vtable for numpunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;wchar_t&gt;</primary></indexterm>typeinfo for numpunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge]()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge deleting]()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_grouping() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_truename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_falsename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-432">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-432">
<TITLE>typeinfo for numpunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;wchar_t&gt;</primary></indexterm>typeinfo name for numpunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct<wchar_t></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::numpunct<wchar_t> specified in <XREF linkend="tbl-libstdcxx-cnz-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnz-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct<wchar_t>::numpunct&lsqb;in-charge](__locale_struct*, unsigned long)</primary></indexterm>numpunct<wchar_t>::numpunct&lsqb;in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct<wchar_t>::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned long)</primary></indexterm>numpunct<wchar_t>::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct<wchar_t>::numpunct&lsqb;in-charge](unsigned long)</primary></indexterm>numpunct<wchar_t>::numpunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct<wchar_t>::numpunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>numpunct<wchar_t>::numpunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnz-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get<char, istreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-433">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-433">
<TITLE>vtable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge]()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-434">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-434">
<TITLE>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get<char, istreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > specified in <XREF linkend="tbl-libstdcxx-coa-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coa-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get<char, istreambuf_iterator<char, char_traits<char> > >::_M_extract_num(istreambuf_iterator<char, char_traits<char> >&, istreambuf_iterator<char, char_traits<char> >&, int&, int, int, unsigned long, ctype<char> const&, _Ios_Iostate&) const</primary></indexterm>time_get<char, istreambuf_iterator<char, char_traits<char> > >::_M_extract_num(istreambuf_iterator<char, char_traits<char> >&, istreambuf_iterator<char, char_traits<char> >&, int&, int, int, unsigned long, ctype<char> const&, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-coa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get<char, istreambuf_iterator<char, char_traits<char> > >::time_get&lsqb;in-charge](unsigned long)</primary></indexterm>time_get<char, istreambuf_iterator<char, char_traits<char> > >::time_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get<char, istreambuf_iterator<char, char_traits<char> > >::_M_extract_name(istreambuf_iterator<char, char_traits<char> >&, istreambuf_iterator<char, char_traits<char> >&, int&, char const**, unsigned long, _Ios_Iostate&) const</primary></indexterm>time_get<char, istreambuf_iterator<char, char_traits<char> > >::_M_extract_name(istreambuf_iterator<char, char_traits<char> >&, istreambuf_iterator<char, char_traits<char> >&, int&, char const**, unsigned long, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-coa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get<char, istreambuf_iterator<char, char_traits<char> > >::time_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>time_get<char, istreambuf_iterator<char, char_traits<char> > >::time_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coa-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-435">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-435">
<TITLE>vtable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge]()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-436">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-436">
<TITLE>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > specified in <XREF linkend="tbl-libstdcxx-cob-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cob-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::_M_extract_num(istreambuf_iterator<wchar_t, char_traits<wchar_t> >&, istreambuf_iterator<wchar_t, char_traits<wchar_t> >&, int&, int, int, unsigned long, ctype<wchar_t> const&, _Ios_Iostate&) const</primary></indexterm>time_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::_M_extract_num(istreambuf_iterator<wchar_t, char_traits<wchar_t> >&, istreambuf_iterator<wchar_t, char_traits<wchar_t> >&, int&, int, int, unsigned long, ctype<wchar_t> const&, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cob-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_get&lsqb;in-charge](unsigned long)</primary></indexterm>time_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cob-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::_M_extract_name(istreambuf_iterator<wchar_t, char_traits<wchar_t> >&, istreambuf_iterator<wchar_t, char_traits<wchar_t> >&, int&, wchar_t const**, unsigned long, _Ios_Iostate&) const</primary></indexterm>time_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::_M_extract_name(istreambuf_iterator<wchar_t, char_traits<wchar_t> >&, istreambuf_iterator<wchar_t, char_traits<wchar_t> >&, int&, wchar_t const**, unsigned long, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cob-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>time_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cob-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cob-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put<char, ostreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-437">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-437">
<TITLE>vtable for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge]()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-438">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-438">
<TITLE>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put<char, ostreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > specified in <XREF linkend="tbl-libstdcxx-coc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coc-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put<char, ostreambuf_iterator<char, char_traits<char> > >::time_put&lsqb;in-charge](unsigned long)</primary></indexterm>time_put<char, ostreambuf_iterator<char, char_traits<char> > >::time_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put<char, ostreambuf_iterator<char, char_traits<char> > >::time_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>time_put<char, ostreambuf_iterator<char, char_traits<char> > >::time_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coc-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-439">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-439">
<TITLE>vtable for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge]()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-440">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-440">
<TITLE>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > specified in <XREF linkend="tbl-libstdcxx-cod-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cod-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_put&lsqb;in-charge](unsigned long)</primary></indexterm>time_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>time_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::time_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cod-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::bad_alloc -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_alloc</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_alloc</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_alloc class
is described by <XREF LINKEND="cls-441">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-441">
<TITLE>vtable for bad_alloc</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_alloc</primary></indexterm>typeinfo for bad_alloc</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc &lsqb;in-charge]()</primary></indexterm>bad_alloc::~bad_alloc &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc &lsqb;in-charge deleting]()</primary></indexterm>bad_alloc::~bad_alloc &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_alloc  class
is described by <XREF LINKEND="rtti-442">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-442">
<TITLE>typeinfo for bad_alloc</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_alloc</primary></indexterm>typeinfo name for bad_alloc</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_alloc</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::bad_alloc
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_ios<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ios<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-443">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-443">
<TITLE>vtable for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge]()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-444">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-444">
<TITLE>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base</primary></indexterm>typeinfo for ios_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>1026</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ios<char, char_traits<char> ></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::basic_ios<char, std::char_traits<char> >
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_ios<wchar_t, std::char_traits<wchar_t> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ios<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ios&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-445">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-445">
<TITLE>vtable for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge]()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ios&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-446">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-446">
<TITLE>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base</primary></indexterm>typeinfo for ios_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2050</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ios<wchar_t, char_traits<wchar_t> ></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::basic_ios<wchar_t, std::char_traits<wchar_t> >
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::exception -->
<SECT2>
<!--libgroup-->
<TITLE>Class exception</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for exception</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::exception class
is described by <XREF LINKEND="cls-447">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-447">
<TITLE>vtable for exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for exception</primary></indexterm>typeinfo for exception</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception &lsqb;in-charge]()</primary></indexterm>exception::~exception &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception &lsqb;in-charge deleting]()</primary></indexterm>exception::~exception &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::exception  class
is described by <XREF LINKEND="rtti-448">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-448">
<TITLE>typeinfo for exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for exception</primary></indexterm>typeinfo name for exception</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class exception</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::exception
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_get<char, istreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-449">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-449">
<TITLE>vtable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge]()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-450">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-450">
<TITLE>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_get<char, istreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > specified in <XREF linkend="tbl-libstdcxx-coe-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coe-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get<char, istreambuf_iterator<char, char_traits<char> > >::money_get&lsqb;in-charge](unsigned long)</primary></indexterm>money_get<char, istreambuf_iterator<char, char_traits<char> > >::money_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get<char, istreambuf_iterator<char, char_traits<char> > >::money_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>money_get<char, istreambuf_iterator<char, char_traits<char> > >::money_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coe-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-451">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-451">
<TITLE>vtable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge]()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-452">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-452">
<TITLE>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > specified in <XREF linkend="tbl-libstdcxx-cof-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cof-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::money_get&lsqb;in-charge](unsigned long)</primary></indexterm>money_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::money_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::money_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>money_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t> > >::money_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cof-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_put<char, ostreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-453">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-453">
<TITLE>vtable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge]()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-454">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-454">
<TITLE>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_put<char, ostreambuf_iterator<char, char_traits<char> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > specified in <XREF linkend="tbl-libstdcxx-cog-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cog-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put<char, ostreambuf_iterator<char, char_traits<char> > >::money_put&lsqb;in-charge](unsigned long)</primary></indexterm>money_put<char, ostreambuf_iterator<char, char_traits<char> > >::money_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put<char, ostreambuf_iterator<char, char_traits<char> > >::money_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>money_put<char, ostreambuf_iterator<char, char_traits<char> > >::money_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cog-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-455">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-455">
<TITLE>vtable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge]()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-456">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-456">
<TITLE>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > ></TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > specified in <XREF linkend="tbl-libstdcxx-coh-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coh-ints">
<TITLE> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::money_put&lsqb;in-charge](unsigned long)</primary></indexterm>money_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::money_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::money_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>money_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t> > >::money_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coh-ints">[1]</TITLE><para>ISO/IEC 14882: 1998(E) Programming languages --C++</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::strstream -->
<SECT2>
<!--libgroup-->
<TITLE>Class strstream</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for strstream</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::strstream class
is described by <XREF LINKEND="cls-457">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-457">
<TITLE>vtable for strstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for strstream</primary></indexterm>typeinfo for strstream</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstream::~strstream &lsqb;in-charge]()</primary></indexterm>strstream::~strstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>strstream::~strstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::strstream  class
is described by <XREF LINKEND="rtti-458">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-458">
<TITLE>typeinfo for strstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for strstream</primary></indexterm>typeinfo name for strstream</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class strstream</TITLE>
<PARA>
An LSB conforming implementation shall provide the functions
for Class std::strstream specified in <XREF linkend="tbl-libstdcxx-coi-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coi-ints">
<TITLE>libstdcxx - Class strstream Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to strstream::~strstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to strstream::~strstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to strstream::~strstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to strstream::~strstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to strstream::~strstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to strstream::~strstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coi-ints">[1]</TITLE><para>Itanium C++ ABI (Revision: 1.75)</para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::time_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::time_base  class
is described by <XREF LINKEND="rtti-459">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-459">
<TITLE>typeinfo for time_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_base</primary></indexterm>typeinfo name for time_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_base</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::time_base
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::type_info class
is described by <XREF LINKEND="cls-460">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-460">
<TITLE>vtable for type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for type_info</primary></indexterm>typeinfo for type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;in-charge]()</primary></indexterm>type_info::~type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;in-charge deleting]()</primary></indexterm>type_info::~type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::type_info  class
is described by <XREF LINKEND="rtti-461">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-461">
<TITLE>typeinfo for type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for type_info</primary></indexterm>typeinfo name for type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class type_info</TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::type_info
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_istream<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istream<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_istream<char, char_traits<char> ></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::basic_istream<char, std::char_traits<char> >
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class std::basic_ostream<char, std::char_traits<char> > -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostream<char, char_traits<char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_ostream<char, char_traits<char> ></TITLE>
<PARA>
No external functions are defined for libstdcxx - Class std::basic_ostream<char, std::char_traits<char> >
</PARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libstdcxx-ddefs>
<TITLE>Data Definitions for libstdcxx</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO/IEC 9899 C Language serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<SECT1 ID=libstdcxxman>
<TITLE>Interface Definitions for libstdcxx</TITLE>
<PARA>
</PARA>
<!-- MISSING DEFINITION FOR __cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR __cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR __cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR __cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR __cxxabiv1::__vmi_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const -->
<!-- Lets just hope nobody notices -->
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.54 2004/06/21 21:28:18 nick Exp 0 -->


</CHAPTER>

</PART>
