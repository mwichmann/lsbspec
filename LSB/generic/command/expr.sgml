<REFENTRY id="expr">
<REFMETA><REFENTRYTITLE>
expr
</REFENTRYTITLE></REFMETA>
<REFNAMEDIV>
<REFNAME>expr</REFNAME>
<REFPURPOSE>
evaluate expressions
</REFPURPOSE>
</REFNAMEDIV>

<REFSECT1>
<TITLE>Description</TITLE>
<PARA>
<COMMAND>expr</COMMAND> is as specified in the SUS but supports
extra operands as listed below.
</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Extra Operands</TITLE>
<VARIABLELIST>

<VARLISTENTRY>
<TERM>match STRING REGEXP</TERM>
<LISTITEM>
<PARA>
is same as STRING : REGEXP.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>substr STRING POS LENGTH</TERM>
<LISTITEM>
<PARA>
is substring of STRING, POS counted from 1.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>index STRING CHARS</TERM>
<LISTITEM>
<PARA>
is index in STRING where any CHARS is found, or 0.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>length STRING</TERM>
<LISTITEM>
<PARA>
is length of STRING.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>quote STRING</TERM>
<LISTITEM>
<PARA>
interprets TOKEN as a string, even if it is a keyword like `match' or
an operator like `/'.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>
</REFSECT1>

</REFENTRY>
