<REFENTRY id="rsync">
<REFMETA><REFENTRYTITLE>rsync</REFENTRYTITLE></REFMETA>

<REFNAMEDIV>
<REFNAME>rsync</REFNAME>

<REFPURPOSE>
faster, flexible replacement for rcp
</REFPURPOSE>

</REFNAMEDIV>

<REFSYNOPSISDIV>
<SYNOPSIS>
rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST
rsync [OPTION]... [USER@]HOST:SRC DEST
rsync [OPTION]... SRC [SRC]... DEST
rsync [OPTION]... [USER@]HOST::SRC [DEST]
rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST
rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]
</SYNOPSIS>
</REFSYNOPSISDIV>


<REFSECT1>
<TITLE>Description</TITLE>
<PARA>
rsync is a program that behaves in much the same way that rcp does,
but has many more options and uses the rsync remote-update protocol to
greatly speedup file transfers when the destination file already
exists.
</para>

<para>
The rsync remote-update protocol allows rsync to transfer just the
differences between two sets of files across the network link, using
an efficient checksum-search algorithm described in the technical
report that accompanies this package.
</para>


</REFSECT1>

<REFSECT1>
<title>Standard Options</title>
<variablelist>

<varlistentry>
<term>--version</term>
<listitem>
<para>
print the rsync version number and exit
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-v, --verbose</term>
<listitem>
<para>
This option increases the amount of information you are given during
the transfer.  By default, rsync works silently. A single -v will give
you information about what files are being transferred and a brief
summary at the end. Two -v flags will give you information on what
files are being skipped and slightly more information at the end.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-q, --quiet</term>
<listitem>
<para>
This option decreases the amount of information you are given during
the transfer, notably suppressing information messages from the remote
server.  This flag is useful when invoking rsync from cron.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-I, --ignore-times</term>
<listitem>
<para>
Normally rsync will skip any files that are already the same length
and have the same time-stamp.  This option turns off this behavior.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-c, --checksum</term>
<listitem>
<para>
This forces the sender to checksum all files using a 128-bit MD4
checksum before transfer. The checksum is then explicitly checked on
the receiver and any files of the same name which already exist and
have the same checksum and size on the receiver are skipped.  This
option can be quite slow.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-a, --archive</term>
<listitem>
<para>
A shortcut for specifying recursion and to preserve all attributes.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-r, --recursive</term>
<listitem>
<para>
This tells rsync to copy directories recursively.  If you don´t
specify this then rsync won´t copy directories at all.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-R, --relative</term>
<listitem>
<para>
Use relative paths. This means that the full path names specified on
the command line are sent to the server rather than just the last
parts of the filenames.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-b, --backup</term>
<listitem>
<para>
With this option preexisting destination files are renamed with a ~
extension as each file is transferred.  You can control the backup
suffix using the --suffix option.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--backup-dir=DIR</term>
<listitem>
<para>
In combination with the --backup option, this tells rsync to store all
backups in the specified directory. This is very useful for
incremental backups.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--suffix=SUFFIX</term>
<listitem>
<para>
This option allows you to override the default backup suffix used with
the -b option. The default is a ~.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-u, --update</term>
<listitem>
<para>
This forces rsync to skip any files for which the destination file
already exists and has a date later than the source file.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-l, --links</term>
<listitem>
<para>
This tells rsync to recreate symbolic links on the remote system to be
the same as the local system.  Without this option, all symbolic links
are skipped.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-L, --copy-links</term>
<listitem>
<para>
This tells rsync to transfer the file referenced by a symbolic link,
rather than recreating the link.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--copy-unsafe-links</term>
<listitem>
<para>
This tells rsync to treat symbolic links that point outside the source
tree like ordinary files.  Absolute symlinks are also treated like
ordinary files, and so are any symlinks in the source path itself when
--relative is used.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--safe-links</term>
<listitem>
<para>
This tells rsync to ignore any symbolic links which point outside the
destination tree.  All absolute symlinks are also ignored.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-H, --hard-links</term>
<listitem>
<para>
This tells rsync to recreate hard links on the remote system to be the
same as the local system.  Without this option hard links are treated
like regular files.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-W, --whole-file</term>
<listitem>
<para>
With this option the incremental rsync algorithm is not used and the
whole file is sent as-is instead. This may be useful when using rsync
with a local machine.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-p, --perms</term>
<listitem>
<para>
This option causes rsync to update the remote permissions to be the
same as the local permissions.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-o, --owner</term>
<listitem>
<para>
This option causes rsync to update the remote owner of the file to be
the same as the local owner.  This is only available to the
super-user.  Note that if the source system is a daemon using chroot,
the --numeric-ids option is implied because the source system cannot
get access to the usernames.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-g, --group</term>
<listitem>
<para>
This option causes rsync to update the remote group of the file to be
the same as the local group.  If the receiving system is not running as
the super-user, only groups that the receiver is a member of will be
preserved (by group name, not group id number).
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-D, --devices</term>
<listitem>
<para>
This option causes rsync to transfer character and block device
information to the remote system to recreate these devices. This
option is only available to the super-user.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-t, --times</term>
<listitem>
<para>
This tells rsync to transfer modification times along with the files
and update them on the remote system.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-n, --dry-run</term>
<listitem>
<para>
This tells rsync to not do any file transfers, instead it will just
report the actions it would have taken.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-x, --one-file-system</term>
<listitem>
<para>
This tells rsync not to cross filesystem boundaries when recursing.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--existing</term>
<listitem>
<para>
This tells rsync not to create any new files - only update files that
already exist on the destination.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--max-delete=NUM</term>
<listitem>
<para>
This  tells rsync not to delete more than NUM files
or directories.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--delete</term>
<listitem>
<para>
This tells rsync to delete any files on the receiving side that aren´t
on the sending side.  Files that are excluded from transfer are
excluded from being deleted unless you use --delete-excluded.
</para>
<para>
This option has no effect if directory recursion is not selected.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--delete-excluded</term>
<listitem>
<para>
In addition to deleting the files on the receiving side that are not
on the sending side, this tells rsync to also delete any files on the
receiving side that are excluded (see --exclude).
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--delete-after</term>
<listitem>
<para>
By default rsync does file deletions before transferring files to try
to ensure that there is sufficient space on the receiving filesystem.
If you want to delete after transferring then use the --delete-after
switch.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-B, --block-size=BLOCKSIZE</term>
<listitem>
<para>
This controls the block size used in the rsync algorithm. See the
technical report for details.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-e, --rsh=COMMAND</term>
<listitem>
<para>
This option allows you to specify the remote shell program to use for
communication between the local and remote copies of rsync.
</para>

<para>
You can also choose the remote shell program using the RSYNC_RSH
environment variable.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--rsync-path=PATH</term>
<listitem>
<para>
Use this to specify the path to the copy of rsync on the remote
machine. Note that this is the full path to the binary, not just the
directory that the binary is in.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--exclude=PATTERN</term>
<listitem>
<para>
This option allows you to selectively exclude certain files from the
list of files to be transferred. 
</para>

<para>
You may use as many --exclude options on the command line as you like
to build up the list of files to exclude.
</para>

</listitem>
</varlistentry>

<varlistentry>
<term>--exclude-from=FILE</term>
<listitem>
<para>
This option is similar to the --exclude option, but instead it adds
all exclude patterns listed in the file FILE to the exclude list.
Blank lines in FILE and lines starting with ´;´ or ´#´ are ignored.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--include=PATTERN</term>
<listitem>
<para>
This option tells rsync to not exclude the specified pattern of
filenames. This is useful as it allows you to build up quite complex
exclude/include rules.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--include-from=FILE</term>
<listitem>
<para>
This specifies a list of include patterns from a file.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-T, --temp-dir=DIR</term>
<listitem>
<para>
This option instructs rsync to use DIR as a scratch directory when
creating temporary copies of the files transferred on the receiving
side.  The default behavior is to create the temporary files in the
receiving directory.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-z, --compress</term>
<listitem>
<para>
With this option, rsync compresses any data from the source file(s)
which it sends to the destination machine.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--numeric-ids</term>
<listitem>
<para>
With this option rsync will transfer numeric group and user ids rather
than using user and group names and mapping them at both ends.
</para>

<para>
By default rsync will use the user name and group name to determine
what ownership to give files. The special uid 0 and the special group
0 are never mapped via user/group names even if the --numeric-ids
option is not specified.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--timeout=TIMEOUT</term>
<listitem>
<para>
This option allows you to set a maximum IO timeout in seconds. If no
data is transferred for the specified time then rsync will exit. The
default is 0, which means no timeout.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--port=PORT</term>
<listitem>
<para>
This specifies an alternate TCP port number to use rather than the
default port 873. This only has effect when using rsync to connect
to a remote rsync daemon.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--blocking-io</term>
<listitem>
<para>
This specifies whether rsync will use blocking IO when launching a
remote shell transport. You may find this is needed for some remote
shells that can´t handle the default non-blocking IO.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--partial</term>
<listitem>
<para>
By default, rsync will delete any partially transferred file if the
transfer is interrupted. In some circumstances it is more desirable to
keep partially transferred files.  Using the --partial option tells
rsync to keep the partial file which should make a subsequent transfer
of the rest of the file much faster.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--progress</term>
<listitem>
<para>
This option tells rsync to print information showing the progress of
the transfer.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>-P</term>
<listitem>
<para>
Equivalent to --partial --progress
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--password-file</term>
<listitem>
<para>
This option allows you to provide a password in a file for accessing a
remote rsync server. Note that this option is only useful when
accessing a rsync server using the built in transport, not when using
a remote shell as the transport. The file must not be world
readable. It should contain just the password as a single line.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>--bwlimit=KBPS</term>
<listitem>
<para>
This option allows you to specify a maximum transfer rate in kilobytes
per second. A value of zero specifies no limit.
</para>
</listitem>
</varlistentry>

</variablelist>
</REFSECT1>


</REFENTRY>
