<REFENTRY ID="baselib-setsockopt-2"> <REFMETA>
<REFENTRYTITLE>setsockopt</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>setsockopt
</REFNAME>
<REFPURPOSE>
set options on sockets
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>21 August 2003</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>setsockopt</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>sockfd</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>level</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>optname</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void 
  <PARAMETER><REPLACEABLE>*optval</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>socklen_t 
  <PARAMETER><REPLACEABLE>optlen</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>21 August 2003</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
In addition to the <FUNCTION>setsockopt</FUNCTION> options specified in
SUSv3, <FUNCTION>setsockopt</FUNCTION> also supports the options specified here.
</PARA>
<PARA>
The following <FUNCTION>setsockopt</FUNCTION> operations are provided for
<VARNAME>level</VARNAME> IPPROTO_IP:
</PARA>
<VARIABLELIST>

<VARLISTENTRY>
<TERM>
IP_MULTICAST_TTL
</TERM>
<LISTITEM>
<PARA>
Set or reads the time-to-live value of outgoing multicast packets for this
socket. <PARAMETER>optval</PARAMETER> is a pointer to an integer which contains
the new TTL value.
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
IP_MULTICAST_LOOP  
</TERM>
<LISTITEM>
<PARA>
Sets a boolean flag indicating whether multicast packets originating locally
should be looped back to the local sockets.
<PARAMETER>optval</PARAMETER> is a pointer to an integer which contains
the new flag value. 
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
IP_ADD_MEMBERSHIP  
</TERM>
<LISTITEM>
<PARA>
Join a multicast group.
<PARAMETER>optval</PARAMETER> is a pointer to a
<STRUCTNAME>ip_mreq</STRUCTNAME> structure. Before calling, the 
caller should fill in the <STRUCTFIELD>imr_multiaddr</STRUCTFIELD> 
field with the multicast group address and the
<STRUCTFIELD>imr_address</STRUCTFIELD> field with the address of the local
interface. If <STRUCTFIELD>imr_address</STRUCTFIELD> is set to INADDR_ANY,
then an appropriate interface is chosen by the system.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
IP_DROP_MEMBERSHIP  
</TERM>
<LISTITEM>
<PARA>
Leave a multicast group.
<PARAMETER>optval</PARAMETER> is a pointer to a
<STRUCTNAME>ip_mreq</STRUCTNAME> structure containing the same values as were
used with IP_ADD_MEMBERSHIP.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
IP_MULTICAST_IF  
</TERM>
<LISTITEM>
<PARA>
Set the local device for a multicast socket.
<PARAMETER>optval</PARAMETER> is a pointer to a
<STRUCTNAME>ip_mreq</STRUCTNAME> structure initialized in the same manner as
with IP_ADD_MEMBERSHIP.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>

<PARA>
The <STRUCTNAME>ip_mreq</STRUCTNAME> structure contains two
<STRUCTNAME>struct in_addr</STRUCTNAME> fields:
<STRUCTFIELD>imr_multiaddr</STRUCTFIELD> and
<STRUCTFIELD>imr_address</STRUCTFIELD>.
</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>

</REFENTRY>
