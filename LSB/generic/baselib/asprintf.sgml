<REFENTRY ID="baselib-asprintf"> <REFMETA>
<REFENTRYTITLE>asprintf</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>asprintf</REFNAME>
<REFPURPOSE>
write formatted output to a dynamically allocated string
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;stdio.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>asprintf</FUNCTION></FUNCDEF>
 <PARAMDEF>char ** restrict 
  <PARAMETER><REPLACEABLE>ptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char * restrict
  <PARAMETER><REPLACEABLE>format</REPLACEABLE></PARAMETER>
  <PARAMETER>...</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>asprintf()</FUNCTION> shall behave as
<FUNCTION>sprintf()</FUNCTION>, except that the output string
shall be dynamically allocated space of sufficient length to hold
the resulting string. The address of this dynamically allocated string
shall be stored in the location referenced by <PARAMETER>ptr</PARAMETER>.
</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
Refer to <FUNCTION>fprintf()</FUNCTION>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
Refer to <FUNCTION>fprintf()</FUNCTION>.
</PARA>
</REFSECT1>

</REFENTRY>

