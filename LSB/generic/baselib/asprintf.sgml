<REFENTRY ID="baselib-asprintf"> <REFMETA>
<REFENTRYTITLE>asprintf</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>asprintf</REFNAME>
<REFPURPOSE>
write formatted output to a string dynamically allocated with malloc and store the address of the string
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;stdio.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>extern int 
  <FUNCTION>asprintf</FUNCTION></FUNCDEF>
 <PARAMDEF>char **restrict 
  <PARAMETER><REPLACEABLE>ptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char *restrict
  <PARAMETER><REPLACEABLE>format</REPLACEABLE></PARAMETER>
  <PARAMETER>...</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>asprintf</FUNCTION> has the same behavior as 
<FUNCTION>sprintf</FUNCTION>, but calls <FUNCTION>malloc</FUNCTION> 
to dynamically allocate space for the output, and then puts the 
output string in that space.
</PARA>
<PARA>
<FUNCTION>asprintf</FUNCTION> stores the address of the string in 
<PARAMETER>ptr</PARAMETER>.
</PARA>

</REFSECT1>
</REFENTRY>

