<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=librt>
<TITLE>Interfaces for librt</TITLE>
<PARA>
<XREF LINKEND="lib-librt-def"> defines the library name and shared object name
for the librt library
</PARA>
<TABLE id="lib-librt-def">
<TITLE>librt Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>librt</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>librt.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.librt.1'>
[LFS] <XREF LINKEND="std.LFS">
</MEMBER>
<MEMBER ID='REFSTD.librt.2'>
[SUSv4] <XREF LINKEND="std.SUSv4">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Shared Memory Objects -->
<SECT2>
<!--libgroup-->
<TITLE>Shared Memory Objects</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Shared Memory Objects</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Shared Memory Objects specified in <XREF linkend="tbl-librt-share-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-librt-share-ints">
<TITLE>librt - Shared Memory Objects Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>shm_open</primary></indexterm>shm_open <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>shm_unlink</primary></indexterm>shm_unlink <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Asynchronous I/O -->
<SECT2>
<!--libgroup-->
<TITLE>Asynchronous I/O</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Asynchronous I/O</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Asynchronous I/O specified in <XREF linkend="tbl-librt-async-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-librt-async-ints">
<TITLE>librt - Asynchronous I/O Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>aio_cancel</primary></indexterm>aio_cancel <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>aio_cancel64</primary></indexterm>aio_cancel64 <LINK LINKEND="REFSTD.librt.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>aio_error</primary></indexterm>aio_error <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>aio_error64</primary></indexterm>aio_error64 <LINK LINKEND="REFSTD.librt.1">[LFS]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>aio_fsync</primary></indexterm>aio_fsync <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>aio_fsync64</primary></indexterm>aio_fsync64 <LINK LINKEND="REFSTD.librt.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>aio_read</primary></indexterm>aio_read <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>aio_read64</primary></indexterm>aio_read64 <LINK LINKEND="REFSTD.librt.1">[LFS]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>aio_return</primary></indexterm>aio_return <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>aio_return64</primary></indexterm>aio_return64 <LINK LINKEND="REFSTD.librt.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>aio_suspend</primary></indexterm>aio_suspend <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>aio_suspend64</primary></indexterm>aio_suspend64 <LINK LINKEND="REFSTD.librt.1">[LFS]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>aio_write</primary></indexterm>aio_write <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>aio_write64</primary></indexterm>aio_write64 <LINK LINKEND="REFSTD.librt.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>lio_listio</primary></indexterm>lio_listio(GLIBC_2.4) <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>lio_listio64</primary></indexterm>lio_listio64(GLIBC_2.4) <LINK LINKEND="REFSTD.librt.1">[LFS]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Clock -->
<SECT2>
<!--libgroup-->
<TITLE>Clock</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Clock</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Clock specified in <XREF linkend="tbl-librt-clock-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-librt-clock-ints">
<TITLE>librt - Clock Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>clock_getcpuclockid</primary></indexterm>clock_getcpuclockid <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>clock_getres</primary></indexterm>clock_getres <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>clock_gettime</primary></indexterm>clock_gettime <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>clock_nanosleep</primary></indexterm>clock_nanosleep <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clock_settime</primary></indexterm>clock_settime <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Timers -->
<SECT2>
<!--libgroup-->
<TITLE>Timers</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Timers</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Timers specified in <XREF linkend="tbl-librt-timer-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-librt-timer-ints">
<TITLE>librt - Timers Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>timer_create</primary></indexterm>timer_create <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>timer_delete</primary></indexterm>timer_delete <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>timer_getoverrun</primary></indexterm>timer_getoverrun <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>timer_gettime</primary></indexterm>timer_gettime <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>timer_settime</primary></indexterm>timer_settime <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Message Queues -->
<SECT2>
<!--libgroup-->
<TITLE>Message Queues</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Message Queues</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Message Queues specified in <XREF linkend="tbl-librt-messa-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-librt-messa-ints">
<TITLE>librt - Message Queues Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>mq_close</primary></indexterm>mq_close(GLIBC_2.3.4) <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mq_getattr</primary></indexterm>mq_getattr(GLIBC_2.3.4) <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mq_notify</primary></indexterm>mq_notify(GLIBC_2.3.4) <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mq_open</primary></indexterm>mq_open(GLIBC_2.3.4) <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mq_receive</primary></indexterm>mq_receive(GLIBC_2.3.4) <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mq_send</primary></indexterm>mq_send(GLIBC_2.3.4) <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mq_setattr</primary></indexterm>mq_setattr(GLIBC_2.3.4) <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mq_timedreceive</primary></indexterm>mq_timedreceive(GLIBC_2.3.4) <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mq_timedsend</primary></indexterm>mq_timedsend(GLIBC_2.3.4) <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mq_unlink</primary></indexterm>mq_unlink(GLIBC_2.3.4) <LINK LINKEND="REFSTD.librt.2">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=librt-ddefs>
<TITLE>Data Definitions for librt</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in librt.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>mqueue.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef int mqd_t;
struct mq_attr {
    long int mq_flags;
    long int mq_maxmsg;
    long int mq_msgsize;
    long int mq_curmsgs;
    long int __pad[4];
};
extern int mq_close(mqd_t __mqdes);
extern int mq_getattr(mqd_t __mqdes, struct mq_attr *__mqstat);
extern int mq_notify(mqd_t __mqdes, const struct sigevent *__notification);
extern mqd_t mq_open(const char *__name, int __oflag, ...);
extern ssize_t mq_receive(mqd_t __mqdes, char *__msg_ptr, size_t __msg_len,
			  unsigned int *__msg_prio);
extern int mq_send(mqd_t __mqdes, const char *__msg_ptr, size_t __msg_len,
		   unsigned int __msg_prio);
extern int mq_setattr(mqd_t __mqdes, const struct mq_attr *__mqstat,
		      struct mq_attr *__omqstat);
extern ssize_t mq_timedreceive(mqd_t __mqdes, char *__msg_ptr,
			       size_t __msg_len, unsigned int *__msg_prio,
			       const struct timespec *__abs_timeout);
extern int mq_timedsend(mqd_t __mqdes, const char *__msg_ptr,
			size_t __msg_len, unsigned int __msg_prio,
			const struct timespec *__abs_timeout);
extern int mq_unlink(const char *__name);
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
