<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.60 2004/07/13 18:49:08 nick Exp 0 -->
<!--    at Thu Jul 15 22:04:53 2004 -->
<SECT1 ID=libstdcxx>
<TITLE>Interfaces for libstdcxx</TITLE>
<PARA>
<XREF LINKEND="lib-libstdcxx-def"> defines the library name and shared object name
for the libstdcxx library
</PARA>
<TABLE id="lib-libstdcxx-def">
<TITLE>libstdcxx Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libstdcxx</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libstdc++.so.5</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
All symbols are in the <VARNAME>std::</VARNAME> namespace.
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
Itanium C++ ABI (Revision: 1.75)</MEMBER>
<MEMBER>
ISO/IEC 14882: 1998(E) Programming languages --C++</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name C++ Runtime Support -->
<SECT2>
<!--libgroup-->
<TITLE>C++ Runtime Support</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for C++ Runtime Support</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for C++ Runtime Support specified in <XREF linkend="tbl-libstdcxx-cxx-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cxx-ints">
<TITLE>libstdcxx - C++ Runtime Support Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__terminate(void (*)())</primary></indexterm>__cxxabiv1::__terminate(void (*)())(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__unexpected(void (*)())</primary></indexterm>__cxxabiv1::__unexpected(void (*)())(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::__verbose_terminate_handler()</primary></indexterm>__gnu_cxx::__verbose_terminate_handler()(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>unexpected()</primary></indexterm>unexpected()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>set_terminate(void (*)())</primary></indexterm>set_terminate(void (*)())(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>void __convert_to_v&lt;double&gt;(char const*, double&, _Ios_Iostate&, __locale_struct* const&, int)</primary></indexterm>void __convert_to_v&lt;double&gt;(char const*, double&, _Ios_Iostate&, __locale_struct* const&, int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>void __convert_to_v&lt;long double&gt;(char const*, long double&, _Ios_Iostate&, __locale_struct* const&, int)</primary></indexterm>void __convert_to_v&lt;long double&gt;(char const*, long double&, _Ios_Iostate&, __locale_struct* const&, int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>void __convert_to_v&lt;float&gt;(char const*, float&, _Ios_Iostate&, __locale_struct* const&, int)</primary></indexterm>void __convert_to_v&lt;float&gt;(char const*, float&, _Ios_Iostate&, __locale_struct* const&, int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>void __convert_to_v&lt;long&gt;(char const*, long&, _Ios_Iostate&, __locale_struct* const&, int)</primary></indexterm>void __convert_to_v&lt;long&gt;(char const*, long&, _Ios_Iostate&, __locale_struct* const&, int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>void __convert_to_v&lt;unsigned long&gt;(char const*, unsigned long&, _Ios_Iostate&, __locale_struct* const&, int)</primary></indexterm>void __convert_to_v&lt;unsigned long&gt;(char const*, unsigned long&, _Ios_Iostate&, __locale_struct* const&, int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>void __convert_to_v&lt;long long&gt;(char const*, long long&, _Ios_Iostate&, __locale_struct* const&, int)</primary></indexterm>void __convert_to_v&lt;long long&gt;(char const*, long long&, _Ios_Iostate&, __locale_struct* const&, int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>void __convert_to_v&lt;unsigned long long&gt;(char const*, unsigned long long&, _Ios_Iostate&, __locale_struct* const&, int)</primary></indexterm>void __convert_to_v&lt;unsigned long long&gt;(char const*, unsigned long long&, _Ios_Iostate&, __locale_struct* const&, int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>set_unexpected(void (*)())</primary></indexterm>set_unexpected(void (*)())(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>set_new_handler(void (*)())</primary></indexterm>set_new_handler(void (*)())(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_bad_cast()</primary></indexterm>__throw_bad_cast()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_bad_alloc()</primary></indexterm>__throw_bad_alloc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_bad_typeid()</primary></indexterm>__throw_bad_typeid()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>uncaught_exception()</primary></indexterm>uncaught_exception()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_ios_failure(char const*)</primary></indexterm>__throw_ios_failure(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_logic_error(char const*)</primary></indexterm>__throw_logic_error(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_range_error(char const*)</primary></indexterm>__throw_range_error(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_domain_error(char const*)</primary></indexterm>__throw_domain_error(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_length_error(char const*)</primary></indexterm>__throw_length_error(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_out_of_range(char const*)</primary></indexterm>__throw_out_of_range(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_bad_exception()</primary></indexterm>__throw_bad_exception()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_runtime_error(char const*)</primary></indexterm>__throw_runtime_error(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_overflow_error(char const*)</primary></indexterm>__throw_overflow_error(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_underflow_error(char const*)</primary></indexterm>__throw_underflow_error(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_invalid_argument(char const*)</primary></indexterm>__throw_invalid_argument(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;* __uninitialized_copy_aux&lt;__gnu_cxx::__normal_iterator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const*, vector&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;, allocator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt; &gt;, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*&gt;(__gnu_cxx::__normal_iterator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const*, vector&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;, allocator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const*, vector&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;, allocator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt; &gt;, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*, __false_type)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;* __uninitialized_copy_aux&lt;__gnu_cxx::__normal_iterator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const*, vector&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;, allocator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt; &gt;, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*&gt;(__gnu_cxx::__normal_iterator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const*, vector&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;, allocator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const*, vector&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;, allocator&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt; &gt;, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*, __false_type)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;* __uninitialized_fill_n_aux&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*, unsigned, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*, unsigned, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, __false_type)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;* __uninitialized_fill_n_aux&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*, unsigned, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*, unsigned, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, __false_type)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;* __uninitialized_fill_n_aux&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, __false_type)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;* __uninitialized_fill_n_aux&lt;basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;*, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, __false_type)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>terminate()</primary></indexterm>terminate()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator delete&lsqb;](void*)</primary></indexterm>operator delete&lsqb;](void*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator delete&lsqb;](void*, nothrow_t const&)</primary></indexterm>operator delete&lsqb;](void*, nothrow_t const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator delete(void*)</primary></indexterm>operator delete(void*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator delete(void*, nothrow_t const&)</primary></indexterm>operator delete(void*, nothrow_t const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator new&lsqb;](unsigned)</primary></indexterm>operator new&lsqb;](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator new&lsqb;](unsigned, nothrow_t const&)</primary></indexterm>operator new&lsqb;](unsigned, nothrow_t const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator new&lsqb;](unsigned long)</primary></indexterm>operator new&lsqb;](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator new&lsqb;](unsigned long, nothrow_t const&)</primary></indexterm>operator new&lsqb;](unsigned long, nothrow_t const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator new(unsigned)</primary></indexterm>operator new(unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator new(unsigned, nothrow_t const&)</primary></indexterm>operator new(unsigned, nothrow_t const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator new(unsigned long)</primary></indexterm>operator new(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator new(unsigned long, nothrow_t const&)</primary></indexterm>operator new(unsigned long, nothrow_t const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_allocate_exception</primary></indexterm>__cxa_allocate_exception(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_bad_cast</primary></indexterm>__cxa_bad_cast(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_bad_typeid</primary></indexterm>__cxa_bad_typeid(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_begin_catch</primary></indexterm>__cxa_begin_catch(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_call_unexpected</primary></indexterm>__cxa_call_unexpected(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_current_exception_type</primary></indexterm>__cxa_current_exception_type(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_demangle</primary></indexterm>__cxa_demangle(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_append</primary></indexterm>__cxa_dyn_string_append(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_append_char</primary></indexterm>__cxa_dyn_string_append_char(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_append_cstr</primary></indexterm>__cxa_dyn_string_append_cstr(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_clear</primary></indexterm>__cxa_dyn_string_clear(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_copy</primary></indexterm>__cxa_dyn_string_copy(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_copy_cstr</primary></indexterm>__cxa_dyn_string_copy_cstr(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_delete</primary></indexterm>__cxa_dyn_string_delete(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_eq</primary></indexterm>__cxa_dyn_string_eq(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_init</primary></indexterm>__cxa_dyn_string_init(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_insert</primary></indexterm>__cxa_dyn_string_insert(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_insert_char</primary></indexterm>__cxa_dyn_string_insert_char(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_insert_cstr</primary></indexterm>__cxa_dyn_string_insert_cstr(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_new</primary></indexterm>__cxa_dyn_string_new(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_prepend</primary></indexterm>__cxa_dyn_string_prepend(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_prepend_cstr</primary></indexterm>__cxa_dyn_string_prepend_cstr(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_release</primary></indexterm>__cxa_dyn_string_release(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_resize</primary></indexterm>__cxa_dyn_string_resize(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_dyn_string_substring</primary></indexterm>__cxa_dyn_string_substring(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_end_catch</primary></indexterm>__cxa_end_catch(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_free_exception</primary></indexterm>__cxa_free_exception(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_get_globals</primary></indexterm>__cxa_get_globals(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_get_globals_fast</primary></indexterm>__cxa_get_globals_fast(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_rethrow</primary></indexterm>__cxa_rethrow(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_throw</primary></indexterm>__cxa_throw(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_cctor</primary></indexterm>__cxa_vec_cctor(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_cleanup</primary></indexterm>__cxa_vec_cleanup(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_ctor</primary></indexterm>__cxa_vec_ctor(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_delete</primary></indexterm>__cxa_vec_delete(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_delete2</primary></indexterm>__cxa_vec_delete2(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_delete3</primary></indexterm>__cxa_vec_delete3(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_dtor</primary></indexterm>__cxa_vec_dtor(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_new</primary></indexterm>__cxa_vec_new(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_new2</primary></indexterm>__cxa_vec_new2(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_new3</primary></indexterm>__cxa_vec_new3(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__dynamic_cast</primary></indexterm>__dynamic_cast(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gxx_personality_v0</primary></indexterm>__gxx_personality_v0(CXXABI_1.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cxx-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cxx-ints">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for C++ Runtime Support specified in <XREF linkend="tbl-libstdcxx-cxx-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cxx-data">
<TITLE>libstdcxx - C++ Runtime Support Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_c</primary></indexterm>messages_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_w</primary></indexterm>messages_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_c</primary></indexterm>numpunct_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_w</primary></indexterm>numpunct_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_c</primary></indexterm>time_get_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_w</primary></indexterm>time_get_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_c</primary></indexterm>time_put_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_w</primary></indexterm>time_put_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get_c</primary></indexterm>money_get_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get_w</primary></indexterm>money_get_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put_c</primary></indexterm>money_put_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put_w</primary></indexterm>money_put_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>timepunct_c</primary></indexterm>timepunct_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>timepunct_w</primary></indexterm>timepunct_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_S_bit_count</primary></indexterm>_S_bit_count(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_S_first_one</primary></indexterm>_S_first_one(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>c_locale_impl</primary></indexterm>c_locale_impl(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_fc</primary></indexterm>moneypunct_fc(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_fw</primary></indexterm>moneypunct_fw(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_tc</primary></indexterm>moneypunct_tc(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_tw</primary></indexterm>moneypunct_tw(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>cin</primary></indexterm>cin(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>cerr</primary></indexterm>cerr(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>clog</primary></indexterm>clog(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>cout</primary></indexterm>cout(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>wcin</primary></indexterm>wcin(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>wcerr</primary></indexterm>wcerr(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>wclog</primary></indexterm>wclog(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>wcout</primary></indexterm>wcout(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>buf_cin</primary></indexterm>buf_cin(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_c</primary></indexterm>ctype_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_w</primary></indexterm>ctype_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>nothrow</primary></indexterm>nothrow(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>buf_cerr</primary></indexterm>buf_cerr(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>buf_cout</primary></indexterm>buf_cout(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>buf_wcin</primary></indexterm>buf_wcin(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>c_locale</primary></indexterm>c_locale(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>buf_wcerr</primary></indexterm>buf_wcerr(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>buf_wcout</primary></indexterm>buf_wcout(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_c</primary></indexterm>codecvt_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_w</primary></indexterm>codecvt_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_c</primary></indexterm>collate_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_w</primary></indexterm>collate_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>facet_vec</primary></indexterm>facet_vec(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get_c</primary></indexterm>num_get_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get_w</primary></indexterm>num_get_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put_c</primary></indexterm>num_put_c(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put_w</primary></indexterm>num_put_w(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cxx-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name C++ type descriptors for built-in types -->
<SECT2>
<!--libgroup-->
<TITLE>C++ type descriptors for built-in types</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for C++ type descriptors for built-in types</TITLE>
<PARA>
No external methods are defined for libstdcxx - C++ type descriptors for built-in types
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for C++ type descriptors for built-in types specified in <XREF linkend="tbl-libstdcxx-1-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-1-data">
<TITLE>libstdcxx - C++ type descriptors for built-in types Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for signed char const*</primary></indexterm>typeinfo for signed char const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bool const*</primary></indexterm>typeinfo for bool const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for char const*</primary></indexterm>typeinfo for char const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for double const*</primary></indexterm>typeinfo for double const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long double const*</primary></indexterm>typeinfo for long double const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for float const*</primary></indexterm>typeinfo for float const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned char const*</primary></indexterm>typeinfo for unsigned char const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for int const*</primary></indexterm>typeinfo for int const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned const*</primary></indexterm>typeinfo for unsigned const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long const*</primary></indexterm>typeinfo for long const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long const*</primary></indexterm>typeinfo for unsigned long const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for short const*</primary></indexterm>typeinfo for short const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned short const*</primary></indexterm>typeinfo for unsigned short const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for void const*</primary></indexterm>typeinfo for void const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for wchar_t const*</primary></indexterm>typeinfo for wchar_t const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long long const*</primary></indexterm>typeinfo for long long const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long long const*</primary></indexterm>typeinfo for unsigned long long const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for signed char*</primary></indexterm>typeinfo for signed char*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bool*</primary></indexterm>typeinfo for bool*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for char*</primary></indexterm>typeinfo for char*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for double*</primary></indexterm>typeinfo for double*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long double*</primary></indexterm>typeinfo for long double*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for float*</primary></indexterm>typeinfo for float*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned char*</primary></indexterm>typeinfo for unsigned char*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for int*</primary></indexterm>typeinfo for int*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned*</primary></indexterm>typeinfo for unsigned*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long*</primary></indexterm>typeinfo for long*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long*</primary></indexterm>typeinfo for unsigned long*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for short*</primary></indexterm>typeinfo for short*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned short*</primary></indexterm>typeinfo for unsigned short*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for void*</primary></indexterm>typeinfo for void*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for wchar_t*</primary></indexterm>typeinfo for wchar_t*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long long*</primary></indexterm>typeinfo for long long*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long long*</primary></indexterm>typeinfo for unsigned long long*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for signed char</primary></indexterm>typeinfo for signed char(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bool</primary></indexterm>typeinfo for bool(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for char</primary></indexterm>typeinfo for char(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for double</primary></indexterm>typeinfo for double(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long double</primary></indexterm>typeinfo for long double(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for float</primary></indexterm>typeinfo for float(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned char</primary></indexterm>typeinfo for unsigned char(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for int</primary></indexterm>typeinfo for int(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned</primary></indexterm>typeinfo for unsigned(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long</primary></indexterm>typeinfo for long(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long</primary></indexterm>typeinfo for unsigned long(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for short</primary></indexterm>typeinfo for short(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned short</primary></indexterm>typeinfo for unsigned short(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for void</primary></indexterm>typeinfo for void(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for wchar_t</primary></indexterm>typeinfo for wchar_t(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long long</primary></indexterm>typeinfo for long long(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long long</primary></indexterm>typeinfo for unsigned long long(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for signed char const*</primary></indexterm>typeinfo name for signed char const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bool const*</primary></indexterm>typeinfo name for bool const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for char const*</primary></indexterm>typeinfo name for char const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for double const*</primary></indexterm>typeinfo name for double const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long double const*</primary></indexterm>typeinfo name for long double const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for float const*</primary></indexterm>typeinfo name for float const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned char const*</primary></indexterm>typeinfo name for unsigned char const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for int const*</primary></indexterm>typeinfo name for int const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned const*</primary></indexterm>typeinfo name for unsigned const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long const*</primary></indexterm>typeinfo name for long const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long const*</primary></indexterm>typeinfo name for unsigned long const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for short const*</primary></indexterm>typeinfo name for short const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned short const*</primary></indexterm>typeinfo name for unsigned short const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for void const*</primary></indexterm>typeinfo name for void const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for wchar_t const*</primary></indexterm>typeinfo name for wchar_t const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long long const*</primary></indexterm>typeinfo name for long long const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long long const*</primary></indexterm>typeinfo name for unsigned long long const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for signed char*</primary></indexterm>typeinfo name for signed char*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bool*</primary></indexterm>typeinfo name for bool*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for char*</primary></indexterm>typeinfo name for char*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for double*</primary></indexterm>typeinfo name for double*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long double*</primary></indexterm>typeinfo name for long double*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for float*</primary></indexterm>typeinfo name for float*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned char*</primary></indexterm>typeinfo name for unsigned char*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for int*</primary></indexterm>typeinfo name for int*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned*</primary></indexterm>typeinfo name for unsigned*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long*</primary></indexterm>typeinfo name for long*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long*</primary></indexterm>typeinfo name for unsigned long*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for short*</primary></indexterm>typeinfo name for short*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned short*</primary></indexterm>typeinfo name for unsigned short*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for void*</primary></indexterm>typeinfo name for void*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for wchar_t*</primary></indexterm>typeinfo name for wchar_t*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long long*</primary></indexterm>typeinfo name for long long*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long long*</primary></indexterm>typeinfo name for unsigned long long*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for signed char</primary></indexterm>typeinfo name for signed char(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bool</primary></indexterm>typeinfo name for bool(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for char</primary></indexterm>typeinfo name for char(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for double</primary></indexterm>typeinfo name for double(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long double</primary></indexterm>typeinfo name for long double(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for float</primary></indexterm>typeinfo name for float(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned char</primary></indexterm>typeinfo name for unsigned char(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for int</primary></indexterm>typeinfo name for int(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned</primary></indexterm>typeinfo name for unsigned(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long</primary></indexterm>typeinfo name for long(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long</primary></indexterm>typeinfo name for unsigned long(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for short</primary></indexterm>typeinfo name for short(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned short</primary></indexterm>typeinfo name for unsigned short(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for void</primary></indexterm>typeinfo name for void(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for wchar_t</primary></indexterm>typeinfo name for wchar_t(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long long</primary></indexterm>typeinfo name for long long(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long long</primary></indexterm>typeinfo name for unsigned long long(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-1-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-1-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<long double> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;long double&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;long double&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;long double&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;long double&gt; specified in <XREF linkend="tbl-libstdcxx-str-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-str-data">
<TITLE>libstdcxx - struct numeric_limits&lt;long double&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::has_denorm</primary></indexterm>numeric_limits&lt;long double&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_bounded</primary></indexterm>numeric_limits&lt;long double&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_integer</primary></indexterm>numeric_limits&lt;long double&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::round_style</primary></indexterm>numeric_limits&lt;long double&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::has_infinity</primary></indexterm>numeric_limits&lt;long double&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::max_exponent</primary></indexterm>numeric_limits&lt;long double&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::min_exponent</primary></indexterm>numeric_limits&lt;long double&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;long double&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_specialized</primary></indexterm>numeric_limits&lt;long double&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;long double&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;long double&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;long double&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;long double&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;long double&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::radix</primary></indexterm>numeric_limits&lt;long double&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::traps</primary></indexterm>numeric_limits&lt;long double&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::digits</primary></indexterm>numeric_limits&lt;long double&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::digits10</primary></indexterm>numeric_limits&lt;long double&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_exact</primary></indexterm>numeric_limits&lt;long double&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_iec559</primary></indexterm>numeric_limits&lt;long double&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_modulo</primary></indexterm>numeric_limits&lt;long double&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_signed</primary></indexterm>numeric_limits&lt;long double&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-str-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-str-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct __numeric_limits_base -->
<SECT2>
<!--libgroup-->
<TITLE>struct __numeric_limits_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct __numeric_limits_base</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct __numeric_limits_base
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct __numeric_limits_base specified in <XREF linkend="tbl-libstdcxx-sts-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sts-data">
<TITLE>libstdcxx - struct __numeric_limits_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::has_denorm</primary></indexterm>__numeric_limits_base::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_bounded</primary></indexterm>__numeric_limits_base::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_integer</primary></indexterm>__numeric_limits_base::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::round_style</primary></indexterm>__numeric_limits_base::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::has_infinity</primary></indexterm>__numeric_limits_base::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::max_exponent</primary></indexterm>__numeric_limits_base::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::min_exponent</primary></indexterm>__numeric_limits_base::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::has_quiet_NaN</primary></indexterm>__numeric_limits_base::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_specialized</primary></indexterm>__numeric_limits_base::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::max_exponent10</primary></indexterm>__numeric_limits_base::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::min_exponent10</primary></indexterm>__numeric_limits_base::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::has_denorm_loss</primary></indexterm>__numeric_limits_base::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::tinyness_before</primary></indexterm>__numeric_limits_base::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::has_signaling_NaN</primary></indexterm>__numeric_limits_base::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::radix</primary></indexterm>__numeric_limits_base::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::traps</primary></indexterm>__numeric_limits_base::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::digits</primary></indexterm>__numeric_limits_base::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::digits10</primary></indexterm>__numeric_limits_base::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_exact</primary></indexterm>__numeric_limits_base::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_iec559</primary></indexterm>__numeric_limits_base::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_modulo</primary></indexterm>__numeric_limits_base::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_signed</primary></indexterm>__numeric_limits_base::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-sts-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<long long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;long long&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;long long&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;long long&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;long long&gt; specified in <XREF linkend="tbl-libstdcxx-stt-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stt-data">
<TITLE>libstdcxx - struct numeric_limits&lt;long long&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::has_denorm</primary></indexterm>numeric_limits&lt;long long&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_bounded</primary></indexterm>numeric_limits&lt;long long&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_integer</primary></indexterm>numeric_limits&lt;long long&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::round_style</primary></indexterm>numeric_limits&lt;long long&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::has_infinity</primary></indexterm>numeric_limits&lt;long long&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::max_exponent</primary></indexterm>numeric_limits&lt;long long&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::min_exponent</primary></indexterm>numeric_limits&lt;long long&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;long long&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_specialized</primary></indexterm>numeric_limits&lt;long long&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;long long&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;long long&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;long long&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;long long&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;long long&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::radix</primary></indexterm>numeric_limits&lt;long long&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::traps</primary></indexterm>numeric_limits&lt;long long&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::digits</primary></indexterm>numeric_limits&lt;long long&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::digits10</primary></indexterm>numeric_limits&lt;long long&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_exact</primary></indexterm>numeric_limits&lt;long long&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_iec559</primary></indexterm>numeric_limits&lt;long long&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_modulo</primary></indexterm>numeric_limits&lt;long long&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_signed</primary></indexterm>numeric_limits&lt;long long&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-stt-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned long long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned long long&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned long long&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;unsigned long long&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;unsigned long long&gt; specified in <XREF linkend="tbl-libstdcxx-stu-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stu-data">
<TITLE>libstdcxx - struct numeric_limits&lt;unsigned long long&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::has_denorm</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_bounded</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_integer</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::round_style</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::has_infinity</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::max_exponent</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::min_exponent</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_specialized</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::radix</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::traps</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::digits</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::digits10</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_exact</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_iec559</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_modulo</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_signed</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-stu-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<float> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;float&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;float&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;float&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;float&gt; specified in <XREF linkend="tbl-libstdcxx-stv-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stv-data">
<TITLE>libstdcxx - struct numeric_limits&lt;float&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::has_denorm</primary></indexterm>numeric_limits&lt;float&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_bounded</primary></indexterm>numeric_limits&lt;float&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_integer</primary></indexterm>numeric_limits&lt;float&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::round_style</primary></indexterm>numeric_limits&lt;float&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::has_infinity</primary></indexterm>numeric_limits&lt;float&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::max_exponent</primary></indexterm>numeric_limits&lt;float&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::min_exponent</primary></indexterm>numeric_limits&lt;float&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;float&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_specialized</primary></indexterm>numeric_limits&lt;float&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;float&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;float&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;float&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;float&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;float&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::radix</primary></indexterm>numeric_limits&lt;float&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::traps</primary></indexterm>numeric_limits&lt;float&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::digits</primary></indexterm>numeric_limits&lt;float&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::digits10</primary></indexterm>numeric_limits&lt;float&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_exact</primary></indexterm>numeric_limits&lt;float&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_iec559</primary></indexterm>numeric_limits&lt;float&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_modulo</primary></indexterm>numeric_limits&lt;float&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_signed</primary></indexterm>numeric_limits&lt;float&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-stv-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<double> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;double&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;double&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;double&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;double&gt; specified in <XREF linkend="tbl-libstdcxx-stw-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stw-data">
<TITLE>libstdcxx - struct numeric_limits&lt;double&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::has_denorm</primary></indexterm>numeric_limits&lt;double&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_bounded</primary></indexterm>numeric_limits&lt;double&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_integer</primary></indexterm>numeric_limits&lt;double&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::round_style</primary></indexterm>numeric_limits&lt;double&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::has_infinity</primary></indexterm>numeric_limits&lt;double&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::max_exponent</primary></indexterm>numeric_limits&lt;double&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::min_exponent</primary></indexterm>numeric_limits&lt;double&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;double&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_specialized</primary></indexterm>numeric_limits&lt;double&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;double&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;double&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;double&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;double&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;double&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::radix</primary></indexterm>numeric_limits&lt;double&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::traps</primary></indexterm>numeric_limits&lt;double&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::digits</primary></indexterm>numeric_limits&lt;double&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::digits10</primary></indexterm>numeric_limits&lt;double&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_exact</primary></indexterm>numeric_limits&lt;double&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_iec559</primary></indexterm>numeric_limits&lt;double&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_modulo</primary></indexterm>numeric_limits&lt;double&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_signed</primary></indexterm>numeric_limits&lt;double&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-stw-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<short> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;short&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;short&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;short&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;short&gt; specified in <XREF linkend="tbl-libstdcxx-stx-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stx-data">
<TITLE>libstdcxx - struct numeric_limits&lt;short&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::has_denorm</primary></indexterm>numeric_limits&lt;short&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_bounded</primary></indexterm>numeric_limits&lt;short&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_integer</primary></indexterm>numeric_limits&lt;short&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::round_style</primary></indexterm>numeric_limits&lt;short&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::has_infinity</primary></indexterm>numeric_limits&lt;short&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::max_exponent</primary></indexterm>numeric_limits&lt;short&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::min_exponent</primary></indexterm>numeric_limits&lt;short&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;short&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_specialized</primary></indexterm>numeric_limits&lt;short&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;short&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;short&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;short&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;short&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;short&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::radix</primary></indexterm>numeric_limits&lt;short&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::traps</primary></indexterm>numeric_limits&lt;short&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::digits</primary></indexterm>numeric_limits&lt;short&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::digits10</primary></indexterm>numeric_limits&lt;short&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_exact</primary></indexterm>numeric_limits&lt;short&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_iec559</primary></indexterm>numeric_limits&lt;short&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_modulo</primary></indexterm>numeric_limits&lt;short&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_signed</primary></indexterm>numeric_limits&lt;short&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-stx-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned short> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned short&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned short&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;unsigned short&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;unsigned short&gt; specified in <XREF linkend="tbl-libstdcxx-sty-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sty-data">
<TITLE>libstdcxx - struct numeric_limits&lt;unsigned short&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::has_denorm</primary></indexterm>numeric_limits&lt;unsigned short&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_bounded</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_integer</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::round_style</primary></indexterm>numeric_limits&lt;unsigned short&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::has_infinity</primary></indexterm>numeric_limits&lt;unsigned short&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::max_exponent</primary></indexterm>numeric_limits&lt;unsigned short&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::min_exponent</primary></indexterm>numeric_limits&lt;unsigned short&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;unsigned short&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_specialized</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;unsigned short&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;unsigned short&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;unsigned short&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;unsigned short&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;unsigned short&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::radix</primary></indexterm>numeric_limits&lt;unsigned short&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::traps</primary></indexterm>numeric_limits&lt;unsigned short&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::digits</primary></indexterm>numeric_limits&lt;unsigned short&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::digits10</primary></indexterm>numeric_limits&lt;unsigned short&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_exact</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_iec559</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_modulo</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_signed</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-sty-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<int> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;int&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;int&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;int&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;int&gt; specified in <XREF linkend="tbl-libstdcxx-stz-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stz-data">
<TITLE>libstdcxx - struct numeric_limits&lt;int&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::has_denorm</primary></indexterm>numeric_limits&lt;int&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_bounded</primary></indexterm>numeric_limits&lt;int&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_integer</primary></indexterm>numeric_limits&lt;int&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::round_style</primary></indexterm>numeric_limits&lt;int&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::has_infinity</primary></indexterm>numeric_limits&lt;int&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::max_exponent</primary></indexterm>numeric_limits&lt;int&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::min_exponent</primary></indexterm>numeric_limits&lt;int&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;int&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_specialized</primary></indexterm>numeric_limits&lt;int&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;int&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;int&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;int&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;int&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;int&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::radix</primary></indexterm>numeric_limits&lt;int&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::traps</primary></indexterm>numeric_limits&lt;int&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::digits</primary></indexterm>numeric_limits&lt;int&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::digits10</primary></indexterm>numeric_limits&lt;int&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_exact</primary></indexterm>numeric_limits&lt;int&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_iec559</primary></indexterm>numeric_limits&lt;int&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_modulo</primary></indexterm>numeric_limits&lt;int&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_signed</primary></indexterm>numeric_limits&lt;int&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-stz-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned int> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned int&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned int&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;unsigned int&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;unsigned int&gt; specified in <XREF linkend="tbl-libstdcxx-sua-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sua-data">
<TITLE>libstdcxx - struct numeric_limits&lt;unsigned int&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::has_denorm</primary></indexterm>numeric_limits&lt;unsigned&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::is_bounded</primary></indexterm>numeric_limits&lt;unsigned&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::is_integer</primary></indexterm>numeric_limits&lt;unsigned&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::round_style</primary></indexterm>numeric_limits&lt;unsigned&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::has_infinity</primary></indexterm>numeric_limits&lt;unsigned&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::max_exponent</primary></indexterm>numeric_limits&lt;unsigned&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::min_exponent</primary></indexterm>numeric_limits&lt;unsigned&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;unsigned&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::is_specialized</primary></indexterm>numeric_limits&lt;unsigned&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;unsigned&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;unsigned&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;unsigned&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;unsigned&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;unsigned&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::radix</primary></indexterm>numeric_limits&lt;unsigned&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::traps</primary></indexterm>numeric_limits&lt;unsigned&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::digits</primary></indexterm>numeric_limits&lt;unsigned&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::digits10</primary></indexterm>numeric_limits&lt;unsigned&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::is_exact</primary></indexterm>numeric_limits&lt;unsigned&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::is_iec559</primary></indexterm>numeric_limits&lt;unsigned&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::is_modulo</primary></indexterm>numeric_limits&lt;unsigned&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned&gt;::is_signed</primary></indexterm>numeric_limits&lt;unsigned&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-sua-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;long&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;long&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;long&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;long&gt; specified in <XREF linkend="tbl-libstdcxx-sub-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sub-data">
<TITLE>libstdcxx - struct numeric_limits&lt;long&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::has_denorm</primary></indexterm>numeric_limits&lt;long&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_bounded</primary></indexterm>numeric_limits&lt;long&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_integer</primary></indexterm>numeric_limits&lt;long&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::round_style</primary></indexterm>numeric_limits&lt;long&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::has_infinity</primary></indexterm>numeric_limits&lt;long&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::max_exponent</primary></indexterm>numeric_limits&lt;long&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::min_exponent</primary></indexterm>numeric_limits&lt;long&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;long&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_specialized</primary></indexterm>numeric_limits&lt;long&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;long&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;long&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;long&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;long&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;long&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::radix</primary></indexterm>numeric_limits&lt;long&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::traps</primary></indexterm>numeric_limits&lt;long&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::digits</primary></indexterm>numeric_limits&lt;long&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::digits10</primary></indexterm>numeric_limits&lt;long&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_exact</primary></indexterm>numeric_limits&lt;long&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_iec559</primary></indexterm>numeric_limits&lt;long&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_modulo</primary></indexterm>numeric_limits&lt;long&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_signed</primary></indexterm>numeric_limits&lt;long&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-sub-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned long&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned long&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;unsigned long&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;unsigned long&gt; specified in <XREF linkend="tbl-libstdcxx-suc-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-suc-data">
<TITLE>libstdcxx - struct numeric_limits&lt;unsigned long&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::has_denorm</primary></indexterm>numeric_limits&lt;unsigned long&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_bounded</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_integer</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::round_style</primary></indexterm>numeric_limits&lt;unsigned long&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::has_infinity</primary></indexterm>numeric_limits&lt;unsigned long&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::max_exponent</primary></indexterm>numeric_limits&lt;unsigned long&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::min_exponent</primary></indexterm>numeric_limits&lt;unsigned long&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;unsigned long&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_specialized</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;unsigned long&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;unsigned long&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;unsigned long&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;unsigned long&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;unsigned long&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::radix</primary></indexterm>numeric_limits&lt;unsigned long&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::traps</primary></indexterm>numeric_limits&lt;unsigned long&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::digits</primary></indexterm>numeric_limits&lt;unsigned long&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::digits10</primary></indexterm>numeric_limits&lt;unsigned long&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_exact</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_iec559</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_modulo</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_signed</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-suc-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;wchar_t&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;wchar_t&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-sud-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sud-data">
<TITLE>libstdcxx - struct numeric_limits&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::has_denorm</primary></indexterm>numeric_limits&lt;wchar_t&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_bounded</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_integer</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::round_style</primary></indexterm>numeric_limits&lt;wchar_t&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::has_infinity</primary></indexterm>numeric_limits&lt;wchar_t&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::max_exponent</primary></indexterm>numeric_limits&lt;wchar_t&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::min_exponent</primary></indexterm>numeric_limits&lt;wchar_t&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;wchar_t&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_specialized</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;wchar_t&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;wchar_t&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;wchar_t&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;wchar_t&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;wchar_t&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::radix</primary></indexterm>numeric_limits&lt;wchar_t&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::traps</primary></indexterm>numeric_limits&lt;wchar_t&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::digits</primary></indexterm>numeric_limits&lt;wchar_t&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::digits10</primary></indexterm>numeric_limits&lt;wchar_t&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_exact</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_iec559</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_modulo</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_signed</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-sud-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned char> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned char&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;unsigned char&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;unsigned char&gt; specified in <XREF linkend="tbl-libstdcxx-sue-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sue-data">
<TITLE>libstdcxx - struct numeric_limits&lt;unsigned char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::has_denorm</primary></indexterm>numeric_limits&lt;unsigned char&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_bounded</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_integer</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::round_style</primary></indexterm>numeric_limits&lt;unsigned char&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::has_infinity</primary></indexterm>numeric_limits&lt;unsigned char&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::max_exponent</primary></indexterm>numeric_limits&lt;unsigned char&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::min_exponent</primary></indexterm>numeric_limits&lt;unsigned char&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;unsigned char&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_specialized</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;unsigned char&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;unsigned char&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;unsigned char&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;unsigned char&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;unsigned char&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::radix</primary></indexterm>numeric_limits&lt;unsigned char&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::traps</primary></indexterm>numeric_limits&lt;unsigned char&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::digits</primary></indexterm>numeric_limits&lt;unsigned char&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::digits10</primary></indexterm>numeric_limits&lt;unsigned char&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_exact</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_iec559</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_modulo</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_signed</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-sue-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<signed char> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;signed char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;signed char&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;signed char&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;signed char&gt; specified in <XREF linkend="tbl-libstdcxx-suf-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-suf-data">
<TITLE>libstdcxx - struct numeric_limits&lt;signed char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::has_denorm</primary></indexterm>numeric_limits&lt;signed char&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_bounded</primary></indexterm>numeric_limits&lt;signed char&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_integer</primary></indexterm>numeric_limits&lt;signed char&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::round_style</primary></indexterm>numeric_limits&lt;signed char&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::has_infinity</primary></indexterm>numeric_limits&lt;signed char&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::max_exponent</primary></indexterm>numeric_limits&lt;signed char&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::min_exponent</primary></indexterm>numeric_limits&lt;signed char&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;signed char&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_specialized</primary></indexterm>numeric_limits&lt;signed char&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;signed char&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;signed char&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;signed char&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;signed char&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;signed char&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::radix</primary></indexterm>numeric_limits&lt;signed char&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::traps</primary></indexterm>numeric_limits&lt;signed char&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::digits</primary></indexterm>numeric_limits&lt;signed char&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::digits10</primary></indexterm>numeric_limits&lt;signed char&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_exact</primary></indexterm>numeric_limits&lt;signed char&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_iec559</primary></indexterm>numeric_limits&lt;signed char&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_modulo</primary></indexterm>numeric_limits&lt;signed char&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_signed</primary></indexterm>numeric_limits&lt;signed char&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-suf-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<char> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;char&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;char&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-sug-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sug-data">
<TITLE>libstdcxx - struct numeric_limits&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::has_denorm</primary></indexterm>numeric_limits&lt;char&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_bounded</primary></indexterm>numeric_limits&lt;char&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_integer</primary></indexterm>numeric_limits&lt;char&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::round_style</primary></indexterm>numeric_limits&lt;char&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::has_infinity</primary></indexterm>numeric_limits&lt;char&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::max_exponent</primary></indexterm>numeric_limits&lt;char&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::min_exponent</primary></indexterm>numeric_limits&lt;char&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;char&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_specialized</primary></indexterm>numeric_limits&lt;char&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;char&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;char&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;char&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;char&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;char&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::radix</primary></indexterm>numeric_limits&lt;char&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::traps</primary></indexterm>numeric_limits&lt;char&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::digits</primary></indexterm>numeric_limits&lt;char&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::digits10</primary></indexterm>numeric_limits&lt;char&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_exact</primary></indexterm>numeric_limits&lt;char&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_iec559</primary></indexterm>numeric_limits&lt;char&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_modulo</primary></indexterm>numeric_limits&lt;char&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_signed</primary></indexterm>numeric_limits&lt;char&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-sug-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<bool> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;bool&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;bool&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;bool&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;bool&gt; specified in <XREF linkend="tbl-libstdcxx-suh-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-suh-data">
<TITLE>libstdcxx - struct numeric_limits&lt;bool&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::has_denorm</primary></indexterm>numeric_limits&lt;bool&gt;::has_denorm(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_bounded</primary></indexterm>numeric_limits&lt;bool&gt;::is_bounded(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_integer</primary></indexterm>numeric_limits&lt;bool&gt;::is_integer(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::round_style</primary></indexterm>numeric_limits&lt;bool&gt;::round_style(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::has_infinity</primary></indexterm>numeric_limits&lt;bool&gt;::has_infinity(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::max_exponent</primary></indexterm>numeric_limits&lt;bool&gt;::max_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::min_exponent</primary></indexterm>numeric_limits&lt;bool&gt;::min_exponent(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;bool&gt;::has_quiet_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_specialized</primary></indexterm>numeric_limits&lt;bool&gt;::is_specialized(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;bool&gt;::max_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;bool&gt;::min_exponent10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;bool&gt;::has_denorm_loss(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;bool&gt;::tinyness_before(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;bool&gt;::has_signaling_NaN(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::radix</primary></indexterm>numeric_limits&lt;bool&gt;::radix(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::traps</primary></indexterm>numeric_limits&lt;bool&gt;::traps(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::digits</primary></indexterm>numeric_limits&lt;bool&gt;::digits(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::digits10</primary></indexterm>numeric_limits&lt;bool&gt;::digits10(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_exact</primary></indexterm>numeric_limits&lt;bool&gt;::is_exact(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_iec559</primary></indexterm>numeric_limits&lt;bool&gt;::is_iec559(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_modulo</primary></indexterm>numeric_limits&lt;bool&gt;::is_modulo(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_signed</primary></indexterm>numeric_limits&lt;bool&gt;::is_signed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-suh-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSaIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class allocator&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for allocator&lt;char&gt;</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class allocator&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::allocator&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cla-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cla-ints">
<TITLE>libstdcxx - Class allocator&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::address(char const&) const</primary></indexterm>allocator&lt;char&gt;::address(char const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::address(char&) const</primary></indexterm>allocator&lt;char&gt;::address(char&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::max_size() const</primary></indexterm>allocator&lt;char&gt;::max_size() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::deallocate(char*, unsigned)</primary></indexterm>allocator&lt;char&gt;::deallocate(char*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::deallocate(char*, unsigned long)</primary></indexterm>allocator&lt;char&gt;::deallocate(char*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::destroy(char*)</primary></indexterm>allocator&lt;char&gt;::destroy(char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::allocate(unsigned, void const*)</primary></indexterm>allocator&lt;char&gt;::allocate(unsigned, void const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::allocate(unsigned long, void const*)</primary></indexterm>allocator&lt;char&gt;::allocate(unsigned long, void const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::construct(char*, char const&)</primary></indexterm>allocator&lt;char&gt;::construct(char*, char const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::allocator&lsqb;in-charge](allocator&lt;char&gt; const&)</primary></indexterm>allocator&lt;char&gt;::allocator&lsqb;in-charge](allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::allocator&lsqb;in-charge]()</primary></indexterm>allocator&lt;char&gt;::allocator&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::allocator&lsqb;not-in-charge](allocator&lt;char&gt; const&)</primary></indexterm>allocator&lt;char&gt;::allocator&lsqb;not-in-charge](allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::allocator&lsqb;not-in-charge]()</primary></indexterm>allocator&lt;char&gt;::allocator&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::~allocator &lsqb;in-charge]()</primary></indexterm>allocator&lt;char&gt;::~allocator &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char&gt;::~allocator &lsqb;not-in-charge]()</primary></indexterm>allocator&lt;char&gt;::~allocator &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cla-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSaIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class allocator&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for allocator&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class allocator&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::allocator&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-clb-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clb-ints">
<TITLE>libstdcxx - Class allocator&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::address(wchar_t const&) const</primary></indexterm>allocator&lt;wchar_t&gt;::address(wchar_t const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::address(wchar_t&) const</primary></indexterm>allocator&lt;wchar_t&gt;::address(wchar_t&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::max_size() const</primary></indexterm>allocator&lt;wchar_t&gt;::max_size() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::deallocate(wchar_t*, unsigned)</primary></indexterm>allocator&lt;wchar_t&gt;::deallocate(wchar_t*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::deallocate(wchar_t*, unsigned long)</primary></indexterm>allocator&lt;wchar_t&gt;::deallocate(wchar_t*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::destroy(wchar_t*)</primary></indexterm>allocator&lt;wchar_t&gt;::destroy(wchar_t*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::allocate(unsigned, void const*)</primary></indexterm>allocator&lt;wchar_t&gt;::allocate(unsigned, void const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::allocate(unsigned long, void const*)</primary></indexterm>allocator&lt;wchar_t&gt;::allocate(unsigned long, void const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::construct(wchar_t*, wchar_t const&)</primary></indexterm>allocator&lt;wchar_t&gt;::construct(wchar_t*, wchar_t const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::allocator&lsqb;in-charge](allocator&lt;wchar_t&gt; const&)</primary></indexterm>allocator&lt;wchar_t&gt;::allocator&lsqb;in-charge](allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::allocator&lsqb;in-charge]()</primary></indexterm>allocator&lt;wchar_t&gt;::allocator&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::allocator&lsqb;not-in-charge](allocator&lt;wchar_t&gt; const&)</primary></indexterm>allocator&lt;wchar_t&gt;::allocator&lsqb;not-in-charge](allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::allocator&lsqb;not-in-charge]()</primary></indexterm>allocator&lt;wchar_t&gt;::allocator&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::~allocator &lsqb;in-charge]()</primary></indexterm>allocator&lt;wchar_t&gt;::~allocator &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t&gt;::~allocator &lsqb;not-in-charge]()</primary></indexterm>allocator&lt;wchar_t&gt;::~allocator &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clb-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name facet functions -->
<SECT2>
<!--libgroup-->
<TITLE>facet functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for facet functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for facet functions specified in <XREF linkend="tbl-libstdcxx-fac-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-fac-ints">
<TITLE>libstdcxx - facet functions Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;moneypunct&lt;char, (bool)0&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;moneypunct&lt;char, (bool)0&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;moneypunct&lt;wchar_t, (bool)0&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;moneypunct&lt;wchar_t, (bool)0&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;ctype&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;ctype&lt;wchar_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;codecvt&lt;char, char, __mbstate_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;codecvt&lt;char, char, __mbstate_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;codecvt&lt;wchar_t, char, __mbstate_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;codecvt&lt;wchar_t, char, __mbstate_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;collate&lt;char&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;collate&lt;char&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;collate&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;collate&lt;wchar_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;messages&lt;char&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;messages&lt;char&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;messages&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;messages&lt;wchar_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;numpunct&lt;char&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;numpunct&lt;char&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;numpunct&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;numpunct&lt;wchar_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt; const& use_facet&lt;moneypunct&lt;char, (bool)0&gt; &gt;(locale const&)</primary></indexterm>moneypunct&lt;char, (bool)0&gt; const& use_facet&lt;moneypunct&lt;char, (bool)0&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt; const& use_facet&lt;moneypunct&lt;char, (bool)1&gt; &gt;(locale const&)</primary></indexterm>moneypunct&lt;char, (bool)1&gt; const& use_facet&lt;moneypunct&lt;char, (bool)1&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt; const& use_facet&lt;moneypunct&lt;wchar_t, (bool)0&gt; &gt;(locale const&)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt; const& use_facet&lt;moneypunct&lt;wchar_t, (bool)0&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt; const& use_facet&lt;moneypunct&lt;wchar_t, (bool)1&gt; &gt;(locale const&)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt; const& use_facet&lt;moneypunct&lt;wchar_t, (bool)1&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt; const& use_facet&lt;__timepunct&lt;char&gt; &gt;(locale const&)</primary></indexterm>__timepunct&lt;char&gt; const& use_facet&lt;__timepunct&lt;char&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt; const& use_facet&lt;__timepunct&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>__timepunct&lt;wchar_t&gt; const& use_facet&lt;__timepunct&lt;wchar_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt; const& use_facet&lt;ctype&lt;char&gt; &gt;(locale const&)</primary></indexterm>ctype&lt;char&gt; const& use_facet&lt;ctype&lt;char&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt; const& use_facet&lt;ctype&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>ctype&lt;wchar_t&gt; const& use_facet&lt;ctype&lt;wchar_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt; const& use_facet&lt;codecvt&lt;char, char, __mbstate_t&gt; &gt;(locale const&)</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt; const& use_facet&lt;codecvt&lt;char, char, __mbstate_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt; const& use_facet&lt;codecvt&lt;wchar_t, char, __mbstate_t&gt; &gt;(locale const&)</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt; const& use_facet&lt;codecvt&lt;wchar_t, char, __mbstate_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt; const& use_facet&lt;collate&lt;char&gt; &gt;(locale const&)</primary></indexterm>collate&lt;char&gt; const& use_facet&lt;collate&lt;char&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt; const& use_facet&lt;collate&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>collate&lt;wchar_t&gt; const& use_facet&lt;collate&lt;wchar_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt; const& use_facet&lt;messages&lt;char&gt; &gt;(locale const&)</primary></indexterm>messages&lt;char&gt; const& use_facet&lt;messages&lt;char&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt; const& use_facet&lt;messages&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>messages&lt;wchar_t&gt; const& use_facet&lt;messages&lt;wchar_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt; const& use_facet&lt;numpunct&lt;char&gt; &gt;(locale const&)</primary></indexterm>numpunct&lt;char&gt; const& use_facet&lt;numpunct&lt;char&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt; const& use_facet&lt;numpunct&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>numpunct&lt;wchar_t&gt; const& use_facet&lt;numpunct&lt;wchar_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-fac-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for facet functions specified in <XREF linkend="tbl-libstdcxx-fac-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-fac-data">
<TITLE>libstdcxx - facet functions Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for signed char const*</primary></indexterm>typeinfo for signed char const*(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-fac-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-fac-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSbE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_string</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_string</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_string specified in <XREF linkend="tbl-libstdcxx-clc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clc-ints">
<TITLE>libstdcxx - Class basic_string Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_of(wchar_t const*, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_of(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_of(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_of(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_of(wchar_t, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_of(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t const*, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t const*, unsigned, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t const*, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_of(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::get_allocator() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::get_allocator() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t const*, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t const*, unsigned, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t const*, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_last_not_of(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t const*, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t const*, unsigned, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t const*, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find_first_not_of(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::at(unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::at(unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::at(unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::at(unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::end() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::end() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_is_leaked() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_is_leaked() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_is_shared() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_is_shared() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::copy(wchar_t*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::copy(wchar_t*, unsigned, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::copy(wchar_t*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::copy(wchar_t*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::data() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::data() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t const*, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t const*, unsigned, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t const*, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::find(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rend() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rend() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::size() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::size() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::begin() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::begin() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::c_str() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::c_str() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::empty() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::empty() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t const*, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t const*, unsigned, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t const*, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rfind(wchar_t, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_rep() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_rep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::length() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::length() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rbegin() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rbegin() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::substr(unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::substr(unsigned, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::substr(unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::substr(unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_data() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_data() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_fold(unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_fold(unsigned, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_fold(unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_fold(unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_iend() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_iend() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(wchar_t const*) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned, unsigned, wchar_t const*) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned, unsigned, wchar_t const*) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned, unsigned, wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned, unsigned, wchar_t const*, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned long, unsigned long, wchar_t const*) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned long, unsigned long, wchar_t const*) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned long, unsigned long, wchar_t const*, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned long, unsigned long, wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned long, unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned long, unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned long, unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(unsigned long, unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_check(unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_check(unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_check(unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_check(unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::capacity() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::capacity() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::max_size() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::max_size() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_ibegin() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_ibegin() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator&lsqb;](unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator&lsqb;](unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator&lsqb;](unsigned long) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator&lsqb;](unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, input_iterator_tag)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, input_iterator_tag)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, input_iterator_tag)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, input_iterator_tag)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace&lt;wchar_t const*&gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, input_iterator_tag)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace&lt;wchar_t const*&gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, input_iterator_tag)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace&lt;wchar_t*&gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t*, wchar_t*, input_iterator_tag)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace&lt;wchar_t*&gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t*, wchar_t*, input_iterator_tag)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Alloc_hider::_Alloc_hider&lsqb;in-charge](wchar_t*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Alloc_hider::_Alloc_hider&lsqb;in-charge](wchar_t*, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Alloc_hider::_Alloc_hider&lsqb;not-in-charge](wchar_t*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Alloc_hider::_Alloc_hider&lsqb;not-in-charge](wchar_t*, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_leak_hard()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_leak_hard()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_construct(unsigned, wchar_t, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_construct(unsigned, wchar_t, allocator&lt;wchar_t&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_construct(unsigned long, wchar_t, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_construct(unsigned long, wchar_t, allocator&lt;wchar_t&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_empty_rep()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_empty_rep()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, wchar_t const*, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, wchar_t const*, wchar_t const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, wchar_t*, wchar_t*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, wchar_t*, wchar_t*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace_safe&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace_safe&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace_safe&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace_safe&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace_safe&lt;wchar_t const*&gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace_safe&lt;wchar_t const*&gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace_safe&lt;wchar_t*&gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t*, wchar_t*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;& basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_replace_safe&lt;wchar_t*&gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t*, wchar_t*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::at(unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::at(unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::at(unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::at(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::end()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::end()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_destroy(allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_destroy(allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_dispose(allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_dispose(allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_refcopy()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_refcopy()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_refdata()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_refdata()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_set_leaked()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_set_leaked()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_set_sharable()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_set_sharable()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_grab(allocator&lt;wchar_t&gt; const&, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_grab(allocator&lt;wchar_t&gt; const&, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_clone(allocator&lt;wchar_t&gt; const&, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_clone(allocator&lt;wchar_t&gt; const&, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_clone(allocator&lt;wchar_t&gt; const&, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_clone(allocator&lt;wchar_t&gt; const&, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_create(unsigned, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_create(unsigned, allocator&lt;wchar_t&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_create(unsigned long, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_create(unsigned long, allocator&lt;wchar_t&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::operator&lsqb;](unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::operator&lsqb;](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::operator&lsqb;](unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::operator&lsqb;](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rend()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rend()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::swap(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::swap(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::begin()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::begin()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::clear()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::clear()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(unsigned, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(unsigned long, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(wchar_t const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(wchar_t const*, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(wchar_t const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(wchar_t const*, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(wchar_t const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(unsigned, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(unsigned long, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(wchar_t const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(wchar_t const*, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(wchar_t const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(wchar_t const*, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(wchar_t const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(unsigned, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(unsigned long, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, unsigned, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, unsigned long, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned, wchar_t const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned, wchar_t const*, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned, wchar_t const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned, unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned, unsigned, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned long, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned long, wchar_t const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned long, wchar_t const*, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned long, wchar_t const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned long, unsigned long, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(unsigned long, unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rbegin()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rbegin()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::resize(unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::resize(unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::resize(unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::resize(unsigned, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::resize(unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::resize(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::resize(unsigned long, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::resize(unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_data(wchar_t*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_data(wchar_t*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_leak()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_leak()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, wchar_t const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t*, wchar_t*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t*, wchar_t*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, unsigned, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, unsigned long, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned, unsigned, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned, unsigned, wchar_t const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned, unsigned, wchar_t const*, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned, unsigned, wchar_t const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned, unsigned, unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned, unsigned, unsigned, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned long, unsigned long, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned long, unsigned long, wchar_t const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned long, unsigned long, wchar_t const*, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned long, unsigned long, wchar_t const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned long, unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned long, unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned long, unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned long, unsigned long, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned long, unsigned long, unsigned long, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(unsigned long, unsigned long, unsigned long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::reserve(unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::reserve(unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::reserve(unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::reserve(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_mutate(unsigned, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_mutate(unsigned, unsigned, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_mutate(unsigned long, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_mutate(unsigned long, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::push_back(wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::push_back(wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](wchar_t const*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](wchar_t const*, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](wchar_t const*, unsigned long, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](wchar_t const*, unsigned long, allocator&lt;wchar_t&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long, allocator&lt;wchar_t&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](unsigned long, wchar_t, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge](unsigned long, wchar_t, allocator&lt;wchar_t&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge]()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge]&lt;wchar_t const*&gt;(wchar_t const*, wchar_t const*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge]&lt;wchar_t const*&gt;(wchar_t const*, wchar_t const*, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge]&lt;wchar_t*&gt;(wchar_t*, wchar_t*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;in-charge]&lt;wchar_t*&gt;(wchar_t*, wchar_t*, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](wchar_t const*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](wchar_t const*, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](wchar_t const*, unsigned long, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](wchar_t const*, unsigned long, allocator&lt;wchar_t&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, unsigned long, unsigned long, allocator&lt;wchar_t&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](unsigned, wchar_t, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](unsigned, wchar_t, allocator&lt;wchar_t&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](unsigned long, wchar_t, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge](unsigned long, wchar_t, allocator&lt;wchar_t&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge]()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;wchar_t const*&gt;(wchar_t const*, wchar_t const*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;wchar_t const*&gt;(wchar_t const*, wchar_t const*, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;wchar_t*&gt;(wchar_t*, wchar_t*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;wchar_t*&gt;(wchar_t*, wchar_t*, allocator&lt;wchar_t&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_string &lsqb;in-charge]()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_string &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_string &lsqb;not-in-charge]()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_string &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(wchar_t const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator&lsqb;](unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator&lsqb;](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator&lsqb;](unsigned long)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator&lsqb;](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(wchar_t const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; operator+&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; operator+&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; operator+&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; operator+&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; operator+&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; operator+&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; operator+&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; operator+&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clc-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_string specified in <XREF linkend="tbl-libstdcxx-clc-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clc-data">
<TITLE>libstdcxx - Class basic_string Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_empty_rep_storage</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_empty_rep_storage(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_max_size</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_max_size(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_terminal</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_terminal(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::npos</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::npos(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clc-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cld-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cld-ints">
<TITLE>libstdcxx - Class istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_get() const</primary></indexterm>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_get() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cld-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cld-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cle-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cle-ints">
<TITLE>libstdcxx - Class istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;::_M_get() const</primary></indexterm>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;::_M_get() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cle-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cle-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt6gsliceE -->
<SECT2>
<!--libgroup-->
<TITLE>Class gslice</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for gslice</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class gslice</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::gslice specified in <XREF linkend="tbl-libstdcxx-clf-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clf-ints">
<TITLE>libstdcxx - Class gslice Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>gslice::_Indexer::_Indexer&lsqb;in-charge](unsigned, valarray&lt;unsigned&gt; const&, valarray&lt;unsigned&gt; const&)</primary></indexterm>gslice::_Indexer::_Indexer&lsqb;in-charge](unsigned, valarray&lt;unsigned&gt; const&, valarray&lt;unsigned&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>gslice::_Indexer::_Indexer&lsqb;in-charge](unsigned long, valarray&lt;unsigned long&gt; const&, valarray&lt;unsigned long&gt; const&)</primary></indexterm>gslice::_Indexer::_Indexer&lsqb;in-charge](unsigned long, valarray&lt;unsigned long&gt; const&, valarray&lt;unsigned long&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>gslice::_Indexer::_Indexer&lsqb;not-in-charge](unsigned, valarray&lt;unsigned&gt; const&, valarray&lt;unsigned&gt; const&)</primary></indexterm>gslice::_Indexer::_Indexer&lsqb;not-in-charge](unsigned, valarray&lt;unsigned&gt; const&, valarray&lt;unsigned&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>gslice::_Indexer::_Indexer&lsqb;not-in-charge](unsigned long, valarray&lt;unsigned long&gt; const&, valarray&lt;unsigned long&gt; const&)</primary></indexterm>gslice::_Indexer::_Indexer&lsqb;not-in-charge](unsigned long, valarray&lt;unsigned long&gt; const&, valarray&lt;unsigned long&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clf-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt12__basic_fileIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __basic_file&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __basic_file&lt;char&gt;</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __basic_file&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__basic_file&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-clg-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clg-ints">
<TITLE>libstdcxx - Class __basic_file&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::is_open() const</primary></indexterm>__basic_file&lt;char&gt;::is_open() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::sys_ungetc(int)</primary></indexterm>__basic_file&lt;char&gt;::sys_ungetc(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::_M_open_mode(_Ios_Openmode, int&, int&, char*)</primary></indexterm>__basic_file&lt;char&gt;::_M_open_mode(_Ios_Openmode, int&, int&, char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::fd()</primary></indexterm>__basic_file&lt;char&gt;::fd()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::open(char const*, _Ios_Openmode, int)</primary></indexterm>__basic_file&lt;char&gt;::open(char const*, _Ios_Openmode, int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::sync()</primary></indexterm>__basic_file&lt;char&gt;::sync()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::close()</primary></indexterm>__basic_file&lt;char&gt;::close()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::xsgetn(char*, int)</primary></indexterm>__basic_file&lt;char&gt;::xsgetn(char*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::xsgetn(char*, long)</primary></indexterm>__basic_file&lt;char&gt;::xsgetn(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::xsputn(char const*, int)</primary></indexterm>__basic_file&lt;char&gt;::xsputn(char const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::xsputn(char const*, long)</primary></indexterm>__basic_file&lt;char&gt;::xsputn(char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>__basic_file&lt;char&gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::seekpos(long, _Ios_Openmode)</primary></indexterm>__basic_file&lt;char&gt;::seekpos(long, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::sys_getc()</primary></indexterm>__basic_file&lt;char&gt;::sys_getc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::sys_open(_IO_FILE*, _Ios_Openmode)</primary></indexterm>__basic_file&lt;char&gt;::sys_open(_IO_FILE*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::sys_open(int, _Ios_Openmode, bool)</primary></indexterm>__basic_file&lt;char&gt;::sys_open(int, _Ios_Openmode, bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::__basic_file&lsqb;in-charge](pthread_mutex_t*)</primary></indexterm>__basic_file&lt;char&gt;::__basic_file&lsqb;in-charge](pthread_mutex_t*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::__basic_file&lsqb;not-in-charge](pthread_mutex_t*)</primary></indexterm>__basic_file&lt;char&gt;::__basic_file&lsqb;not-in-charge](pthread_mutex_t*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::~__basic_file &lsqb;in-charge]()</primary></indexterm>__basic_file&lt;char&gt;::~__basic_file &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::~__basic_file &lsqb;not-in-charge]()</primary></indexterm>__basic_file&lt;char&gt;::~__basic_file &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clg-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt24__default_alloc_templateILb1ELi0EEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __default_alloc_template&lt;(bool)1, (int)0&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __default_alloc_template&lt;(bool)1, (int)0&gt;</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __default_alloc_template&lt;(bool)1, (int)0&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__default_alloc_template&lt;(bool)1, (int)0&gt; specified in <XREF linkend="tbl-libstdcxx-clh-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clh-ints">
<TITLE>libstdcxx - Class __default_alloc_template&lt;(bool)1, (int)0&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::deallocate(void*, unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::deallocate(void*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::deallocate(void*, unsigned long)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::deallocate(void*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::reallocate(void*, unsigned, unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::reallocate(void*, unsigned, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::reallocate(void*, unsigned long, unsigned long)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::reallocate(void*, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_round_up(unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_round_up(unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_round_up(unsigned long)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_round_up(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_force_new</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_force_new(GLIBCPP_3.2.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_chunk_alloc(unsigned, int&)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_chunk_alloc(unsigned, int&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_chunk_alloc(unsigned long, int&)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_chunk_alloc(unsigned long, int&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_freelist_index(unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_freelist_index(unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_freelist_index(unsigned long)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_freelist_index(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_Lock::_Lock&lsqb;in-charge]()</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_Lock::_Lock&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_Lock::_Lock&lsqb;not-in-charge]()</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_Lock::_Lock&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_Lock::~_Lock &lsqb;in-charge]()</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_Lock::~_Lock &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_Lock::~_Lock &lsqb;not-in-charge]()</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_Lock::~_Lock &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::allocate(unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::allocate(unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::allocate(unsigned long)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::allocate(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_refill(unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_refill(unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_refill(unsigned long)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_refill(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clh-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__default_alloc_template&lt;(bool)1, (int)0&gt; specified in <XREF linkend="tbl-libstdcxx-clh-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clh-data">
<TITLE>libstdcxx - Class __default_alloc_template&lt;(bool)1, (int)0&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_end_free</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_end_free(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_free_list</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_free_list(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_heap_size</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_heap_size(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_start_free</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_start_free(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_node_allocator_lock</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0&gt;::_S_node_allocator_lock(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clh-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt8valarrayIjEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class valarray&lt;unsigned&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for valarray&lt;unsigned&gt;</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class valarray&lt;unsigned&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::valarray&lt;unsigned&gt; specified in <XREF linkend="tbl-libstdcxx-cli-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cli-ints">
<TITLE>libstdcxx - Class valarray&lt;unsigned&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned&gt;::size() const</primary></indexterm>valarray&lt;unsigned&gt;::size() const<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned long&gt;::size() const</primary></indexterm>valarray&lt;unsigned long&gt;::size() const<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned&gt;::valarray&lsqb;in-charge](valarray&lt;unsigned&gt; const&)</primary></indexterm>valarray&lt;unsigned&gt;::valarray&lsqb;in-charge](valarray&lt;unsigned&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned&gt;::valarray&lsqb;in-charge](unsigned)</primary></indexterm>valarray&lt;unsigned&gt;::valarray&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned&gt;::valarray&lsqb;not-in-charge](valarray&lt;unsigned&gt; const&)</primary></indexterm>valarray&lt;unsigned&gt;::valarray&lsqb;not-in-charge](valarray&lt;unsigned&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned&gt;::valarray&lsqb;not-in-charge](unsigned)</primary></indexterm>valarray&lt;unsigned&gt;::valarray&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned&gt;::~valarray &lsqb;in-charge]()</primary></indexterm>valarray&lt;unsigned&gt;::~valarray &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned&gt;::~valarray &lsqb;not-in-charge]()</primary></indexterm>valarray&lt;unsigned&gt;::~valarray &lsqb;not-in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned&gt;::operator&lsqb;](unsigned)</primary></indexterm>valarray&lt;unsigned&gt;::operator&lsqb;](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned long&gt;::valarray&lsqb;in-charge](valarray&lt;unsigned long&gt; const&)</primary></indexterm>valarray&lt;unsigned long&gt;::valarray&lsqb;in-charge](valarray&lt;unsigned long&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned long&gt;::valarray&lsqb;in-charge](unsigned long)</primary></indexterm>valarray&lt;unsigned long&gt;::valarray&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned long&gt;::valarray&lsqb;not-in-charge](valarray&lt;unsigned long&gt; const&)</primary></indexterm>valarray&lt;unsigned long&gt;::valarray&lsqb;not-in-charge](valarray&lt;unsigned long&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned long&gt;::valarray&lsqb;not-in-charge](unsigned long)</primary></indexterm>valarray&lt;unsigned long&gt;::valarray&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned long&gt;::~valarray &lsqb;in-charge]()</primary></indexterm>valarray&lt;unsigned long&gt;::~valarray &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned long&gt;::~valarray &lsqb;not-in-charge]()</primary></indexterm>valarray&lt;unsigned long&gt;::~valarray &lsqb;not-in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned long&gt;::operator&lsqb;](unsigned long)</primary></indexterm>valarray&lt;unsigned long&gt;::operator&lsqb;](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cli-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cli-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSsE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clj-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clj-ints">
<TITLE>libstdcxx - Class basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_of(char const*, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_of(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_of(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_of(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_of(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_of(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_of(char, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_of(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_of(char const*, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_of(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_of(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_of(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_of(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_of(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_of(char, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_of(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::get_allocator() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::get_allocator() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_not_of(char const*, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_not_of(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_not_of(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_not_of(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_not_of(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_not_of(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_not_of(char, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_last_not_of(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_not_of(char const*, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_not_of(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_not_of(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_not_of(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_not_of(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_not_of(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_not_of(char, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find_first_not_of(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::at(unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::at(unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::end() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::end() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_is_leaked() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_is_leaked() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_is_shared() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_is_shared() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::copy(char*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::copy(char*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::data() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::data() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find(char const*, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find(char, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::find(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rend() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rend() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::size() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::size() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::begin() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::begin() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::c_str() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::c_str() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::empty() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::empty() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rfind(char const*, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rfind(char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rfind(char const*, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rfind(char const*, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rfind(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rfind(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rfind(char, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rfind(char, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_rep() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_rep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::length() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::length() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rbegin() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rbegin() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::substr(unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::substr(unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_data() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_data() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_fold(unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_fold(unsigned, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_fold(unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_fold(unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_iend() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_iend() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(char const*) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(unsigned long, unsigned long, char const*) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(unsigned long, unsigned long, char const*) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(unsigned long, unsigned long, char const*, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(unsigned long, unsigned long, char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(unsigned long, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(unsigned long, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(unsigned long, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(unsigned long, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_check(unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_check(unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_check(unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_check(unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::capacity() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::capacity() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::max_size() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::max_size() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_ibegin() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_ibegin() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator&lsqb;](unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator&lsqb;](unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator&lsqb;](unsigned long) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator&lsqb;](unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace&lt;__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, input_iterator_tag)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace&lt;__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, input_iterator_tag)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, input_iterator_tag)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, input_iterator_tag)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace&lt;char const*&gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*, char const*, input_iterator_tag)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace&lt;char const*&gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*, char const*, input_iterator_tag)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace&lt;char*&gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char*, char*, input_iterator_tag)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace&lt;char*&gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char*, char*, input_iterator_tag)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider&lsqb;in-charge](char*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider&lsqb;in-charge](char*, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider&lsqb;not-in-charge](char*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider&lsqb;not-in-charge](char*, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_leak_hard()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_leak_hard()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_construct(unsigned, char, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_construct(unsigned, char, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_construct(unsigned long, char, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_construct(unsigned long, char, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_empty_rep()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_empty_rep()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, char const*, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, char const*, char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, char*, char*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, char*, char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace_safe&lt;__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace_safe&lt;__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace_safe&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace_safe&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace_safe&lt;char const*&gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace_safe&lt;char const*&gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*, char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace_safe&lt;char*&gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char*, char*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;& basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_replace_safe&lt;char*&gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char*, char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::at(unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::at(unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::at(unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::at(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::end()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::end()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_destroy(allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_destroy(allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_dispose(allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_dispose(allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_refcopy()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_refcopy()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_refdata()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_refdata()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_set_leaked()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_set_leaked()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_set_sharable()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_set_sharable()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_grab(allocator&lt;char&gt; const&, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_grab(allocator&lt;char&gt; const&, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_clone(allocator&lt;char&gt; const&, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_clone(allocator&lt;char&gt; const&, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_clone(allocator&lt;char&gt; const&, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_clone(allocator&lt;char&gt; const&, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_create(unsigned, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_create(unsigned, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_create(unsigned long, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_create(unsigned long, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::operator&lsqb;](unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::operator&lsqb;](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::operator&lsqb;](unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::operator&lsqb;](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rend()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rend()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::swap(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::swap(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::begin()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::begin()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::clear()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::clear()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::erase(unsigned long, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::erase(unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(char const*, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(unsigned long, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(char const*, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(unsigned long, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, unsigned long, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(unsigned long, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(unsigned long, char const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(unsigned long, char const*, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(unsigned long, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(unsigned long, unsigned long, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(unsigned long, unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rbegin()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rbegin()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::resize(unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::resize(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::resize(unsigned long, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::resize(unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_data(char*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_data(char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_leak()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_leak()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*, char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char*, char*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char*, char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, unsigned long, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(unsigned long, unsigned long, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(unsigned long, unsigned long, char const*)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(unsigned long, unsigned long, char const*, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(unsigned long, unsigned long, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(unsigned long, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(unsigned long, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(unsigned long, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(unsigned long, unsigned long, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(unsigned long, unsigned long, unsigned long, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(unsigned long, unsigned long, unsigned long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::reserve(unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::reserve(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_mutate(unsigned, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_mutate(unsigned, unsigned, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::push_back(char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::push_back(char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](char const*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](char const*, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](char const*, unsigned, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](char const*, unsigned, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](char const*, unsigned long, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](char const*, unsigned long, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned, unsigned, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned, unsigned, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](unsigned, char, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](unsigned, char, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](unsigned long, char, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge](unsigned long, char, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge]()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge]&lt;char const*&gt;(char const*, char const*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge]&lt;char const*&gt;(char const*, char const*, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge]&lt;char*&gt;(char*, char*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;in-charge]&lt;char*&gt;(char*, char*, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](char const*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](char const*, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](char const*, unsigned, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](char const*, unsigned, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](char const*, unsigned long, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](char const*, unsigned long, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned, unsigned, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned, unsigned, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, unsigned long, unsigned long, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](unsigned, char, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](unsigned, char, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](unsigned long, char, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge](unsigned long, char, allocator&lt;char&gt; const&)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge]()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;char const*&gt;(char const*, char const*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;char const*&gt;(char const*, char const*, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;char*&gt;(char*, char*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lsqb;not-in-charge]&lt;char*&gt;(char*, char*, allocator&lt;char&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_string &lsqb;in-charge]()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_string &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_string &lsqb;not-in-charge]()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_string &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator&lsqb;](unsigned long)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator&lsqb;](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clj-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clj-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clj-data">
<TITLE>libstdcxx - Class basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_empty_rep_storage</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_empty_rep_storage(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_max_size</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_max_size(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_terminal</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_terminal(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::npos</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::npos(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clj-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt6localeE -->
<SECT2>
<!--libgroup-->
<TITLE>Class locale</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class locale</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::locale specified in <XREF linkend="tbl-libstdcxx-clk-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clk-ints">
<TITLE>libstdcxx - Class locale Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::name() const</primary></indexterm>locale::name() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::operator==(locale const&) const</primary></indexterm>locale::operator==(locale const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_M_coalesce(locale const&, locale const&, unsigned)</primary></indexterm>locale::_M_coalesce(locale const&, locale const&, unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_S_normalize_category(unsigned)</primary></indexterm>locale::_S_normalize_category(unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::id::id&lsqb;in-charge]()</primary></indexterm>locale::id::id&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::id::id&lsqb;not-in-charge]()</primary></indexterm>locale::id::id&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_M_install_facet(locale::id const*, locale::facet*)</primary></indexterm>locale::_Impl::_M_install_facet(locale::id const*, locale::facet*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_M_replace_facet(locale::_Impl const*, locale::id const*)</primary></indexterm>locale::_Impl::_M_replace_facet(locale::_Impl const*, locale::id const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_M_replace_category(locale::_Impl const*, locale::id const* const*)</primary></indexterm>locale::_Impl::_M_replace_category(locale::_Impl const*, locale::id const* const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_M_replace_categories(locale::_Impl const*, unsigned)</primary></indexterm>locale::_Impl::_M_replace_categories(locale::_Impl const*, unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](char const*, unsigned)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](locale::facet**, unsigned, bool)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](locale::facet**, unsigned, bool)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](locale::facet**, unsigned long, bool)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](locale::facet**, unsigned long, bool)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](locale::_Impl const&, unsigned)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](locale::_Impl const&, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](locale::_Impl const&, unsigned long)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](locale::_Impl const&, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](locale::facet**, unsigned, bool)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](locale::facet**, unsigned, bool)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](locale::facet**, unsigned long, bool)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](locale::facet**, unsigned long, bool)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](locale::_Impl const&, unsigned)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](locale::_Impl const&, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](locale::_Impl const&, unsigned long)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](locale::_Impl const&, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::~_Impl &lsqb;in-charge]()</primary></indexterm>locale::_Impl::~_Impl &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::~_Impl &lsqb;not-in-charge]()</primary></indexterm>locale::_Impl::~_Impl &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::global(locale const&)</primary></indexterm>locale::global(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::classic()</primary></indexterm>locale::classic()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge](char const*)</primary></indexterm>locale::locale&lsqb;in-charge](char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge](locale::_Impl*)</primary></indexterm>locale::locale&lsqb;in-charge](locale::_Impl*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge](locale const&)</primary></indexterm>locale::locale&lsqb;in-charge](locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge](locale const&, char const*, unsigned)</primary></indexterm>locale::locale&lsqb;in-charge](locale const&, char const*, unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge](locale const&, locale const&, unsigned)</primary></indexterm>locale::locale&lsqb;in-charge](locale const&, locale const&, unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge]()</primary></indexterm>locale::locale&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge](char const*)</primary></indexterm>locale::locale&lsqb;not-in-charge](char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge](locale::_Impl*)</primary></indexterm>locale::locale&lsqb;not-in-charge](locale::_Impl*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge](locale const&)</primary></indexterm>locale::locale&lsqb;not-in-charge](locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge](locale const&, char const*, unsigned)</primary></indexterm>locale::locale&lsqb;not-in-charge](locale const&, char const*, unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge](locale const&, locale const&, unsigned)</primary></indexterm>locale::locale&lsqb;not-in-charge](locale const&, locale const&, unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge]()</primary></indexterm>locale::locale&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::~locale &lsqb;in-charge]()</primary></indexterm>locale::~locale &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::~locale &lsqb;not-in-charge]()</primary></indexterm>locale::~locale &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::operator=(locale const&)</primary></indexterm>locale::operator=(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clk-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::locale specified in <XREF linkend="tbl-libstdcxx-clk-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clk-data">
<TITLE>libstdcxx - Class locale Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_S_classic</primary></indexterm>locale::_S_classic(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_S_num_categories</primary></indexterm>locale::_S_num_categories(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::id::_S_highwater</primary></indexterm>locale::id::_S_highwater(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::all</primary></indexterm>locale::all(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::none</primary></indexterm>locale::none(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::time</primary></indexterm>locale::time(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_S_id_time</primary></indexterm>locale::_Impl::_S_id_time(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_S_id_ctype</primary></indexterm>locale::_Impl::_S_id_ctype(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_S_id_collate</primary></indexterm>locale::_Impl::_S_id_collate(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_S_id_numeric</primary></indexterm>locale::_Impl::_S_id_numeric(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_S_id_messages</primary></indexterm>locale::_Impl::_S_id_messages(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_S_id_monetary</primary></indexterm>locale::_Impl::_S_id_monetary(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_S_facet_categories</primary></indexterm>locale::_Impl::_S_facet_categories(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::ctype</primary></indexterm>locale::ctype(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::collate</primary></indexterm>locale::collate(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::numeric</primary></indexterm>locale::numeric(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::messages</primary></indexterm>locale::messages(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::monetary</primary></indexterm>locale::monetary(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_S_global</primary></indexterm>locale::_S_global(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clk-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv116__enum_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__enum_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__enum_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__enum_type_info class
is described by <XREF LINKEND="cls-243">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-243">
<TITLE>vtable for __cxxabiv1::__enum_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo for __cxxabiv1::__enum_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__enum_type_info  class
is described by <XREF LINKEND="rtti-240">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-240">
<TITLE>typeinfo for __cxxabiv1::__enum_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__enum_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__enum_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__enum_type_info specified in <XREF linkend="tbl-libstdcxx-cll-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cll-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__enum_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cll-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cll-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;not-in-charge]()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cll-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cll-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__enum_type_info specified in <XREF linkend="tbl-libstdcxx-cll-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cll-data">
<TITLE>libstdcxx - Class __cxxabiv1::__enum_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo for __cxxabiv1::__enum_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cll-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__enum_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cll-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__enum_type_info</primary></indexterm>vtable for __cxxabiv1::__enum_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cll-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cll-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv117__array_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__array_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__array_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__array_type_info class
is described by <XREF LINKEND="cls-244">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-244">
<TITLE>vtable for __cxxabiv1::__array_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo for __cxxabiv1::__array_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__array_type_info  class
is described by <XREF LINKEND="rtti-241">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-241">
<TITLE>typeinfo for __cxxabiv1::__array_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__array_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__array_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__array_type_info specified in <XREF linkend="tbl-libstdcxx-clm-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clm-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__array_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;not-in-charge]()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clm-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__array_type_info specified in <XREF linkend="tbl-libstdcxx-clm-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clm-data">
<TITLE>libstdcxx - Class __cxxabiv1::__array_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo for __cxxabiv1::__array_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__array_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__array_type_info</primary></indexterm>vtable for __cxxabiv1::__array_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clm-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv117__class_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__class_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__class_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__class_type_info class
is described by <XREF LINKEND="cls-239">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-239">
<TITLE>vtable for __cxxabiv1::__class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__class_type_info  class
is described by <XREF LINKEND="rtti-242">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-242">
<TITLE>typeinfo for __cxxabiv1::__class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__class_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__class_type_info specified in <XREF linkend="tbl-libstdcxx-cln-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cln-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__class_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;not-in-charge]()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cln-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__class_type_info specified in <XREF linkend="tbl-libstdcxx-cln-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cln-data">
<TITLE>libstdcxx - Class __cxxabiv1::__class_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__class_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__class_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cln-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cln-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv117__pbase_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__pbase_type_info class
is described by <XREF LINKEND="cls-245">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-245">
<TITLE>vtable for __cxxabiv1::__pbase_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pbase_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__pbase_type_info  class
is described by <XREF LINKEND="rtti-246">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-246">
<TITLE>typeinfo for __cxxabiv1::__pbase_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pbase_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__pbase_type_info specified in <XREF linkend="tbl-libstdcxx-clo-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clo-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__pbase_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;not-in-charge]()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clo-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__pbase_type_info specified in <XREF linkend="tbl-libstdcxx-clo-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clo-data">
<TITLE>libstdcxx - Class __cxxabiv1::__pbase_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pbase_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pbase_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__pbase_type_info</primary></indexterm>vtable for __cxxabiv1::__pbase_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clo-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv119__pointer_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__pointer_type_info class
is described by <XREF LINKEND="cls-247">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-247">
<TITLE>vtable for __cxxabiv1::__pointer_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__is_pointer_p() const</primary></indexterm>__cxxabiv1::__pointer_type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__pointer_type_info  class
is described by <XREF LINKEND="rtti-248">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-248">
<TITLE>typeinfo for __cxxabiv1::__pointer_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__pointer_type_info specified in <XREF linkend="tbl-libstdcxx-clp-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clp-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__pointer_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;not-in-charge]()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__is_pointer_p() const</primary></indexterm>__cxxabiv1::__pointer_type_info::__is_pointer_p() const(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clp-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__pointer_type_info specified in <XREF linkend="tbl-libstdcxx-clp-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clp-data">
<TITLE>libstdcxx - Class __cxxabiv1::__pointer_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clp-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clp-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__pointer_type_info</primary></indexterm>vtable for __cxxabiv1::__pointer_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clp-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clp-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv120__function_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__function_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__function_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__function_type_info class
is described by <XREF LINKEND="cls-249">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-249">
<TITLE>vtable for __cxxabiv1::__function_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo for __cxxabiv1::__function_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::__is_function_p() const</primary></indexterm>__cxxabiv1::__function_type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__function_type_info  class
is described by <XREF LINKEND="rtti-250">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-250">
<TITLE>typeinfo for __cxxabiv1::__function_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__function_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__function_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__function_type_info specified in <XREF linkend="tbl-libstdcxx-clq-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clq-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__function_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;not-in-charge]()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::__is_function_p() const</primary></indexterm>__cxxabiv1::__function_type_info::__is_function_p() const(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clq-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__function_type_info specified in <XREF linkend="tbl-libstdcxx-clq-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clq-data">
<TITLE>libstdcxx - Class __cxxabiv1::__function_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo for __cxxabiv1::__function_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__function_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__function_type_info</primary></indexterm>vtable for __cxxabiv1::__function_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clq-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv120__si_class_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__si_class_type_info class
is described by <XREF LINKEND="cls-251">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-251">
<TITLE>vtable for __cxxabiv1::__si_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__si_class_type_info  class
is described by <XREF LINKEND="rtti-252">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-252">
<TITLE>typeinfo for __cxxabiv1::__si_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__si_class_type_info specified in <XREF linkend="tbl-libstdcxx-clr-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clr-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__si_class_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;not-in-charge]()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clr-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__si_class_type_info specified in <XREF linkend="tbl-libstdcxx-clr-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clr-data">
<TITLE>libstdcxx - Class __cxxabiv1::__si_class_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__si_class_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__si_class_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clr-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv121__vmi_class_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__vmi_class_type_info class
is described by <XREF LINKEND="cls-253">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-253">
<TITLE>vtable for __cxxabiv1::__vmi_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__vmi_class_type_info  class
is described by <XREF LINKEND="rtti-254">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-254">
<TITLE>typeinfo for __cxxabiv1::__vmi_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__vmi_class_type_info specified in <XREF linkend="tbl-libstdcxx-cls-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cls-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__vmi_class_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cls-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cls-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;not-in-charge]()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cls-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cls-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cls-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__vmi_class_type_info specified in <XREF linkend="tbl-libstdcxx-cls-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cls-data">
<TITLE>libstdcxx - Class __cxxabiv1::__vmi_class_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__vmi_class_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cls-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__vmi_class_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cls-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cls-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cls-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv123__fundamental_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__fundamental_type_info class
is described by <XREF LINKEND="cls-255">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-255">
<TITLE>vtable for __cxxabiv1::__fundamental_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo for __cxxabiv1::__fundamental_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__fundamental_type_info  class
is described by <XREF LINKEND="rtti-256">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-256">
<TITLE>typeinfo for __cxxabiv1::__fundamental_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__fundamental_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__fundamental_type_info specified in <XREF linkend="tbl-libstdcxx-clt-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clt-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__fundamental_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;not-in-charge]()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clt-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__fundamental_type_info specified in <XREF linkend="tbl-libstdcxx-clt-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clt-data">
<TITLE>libstdcxx - Class __cxxabiv1::__fundamental_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo for __cxxabiv1::__fundamental_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__fundamental_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__fundamental_type_info</primary></indexterm>vtable for __cxxabiv1::__fundamental_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clt-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv129__pointer_to_member_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__pointer_to_member_type_info class
is described by <XREF LINKEND="cls-257">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-257">
<TITLE>vtable for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_to_member_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__pointer_to_member_type_info  class
is described by <XREF LINKEND="rtti-258">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-258">
<TITLE>typeinfo for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_to_member_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__pointer_to_member_type_info specified in <XREF linkend="tbl-libstdcxx-clu-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clu-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__pointer_to_member_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;not-in-charge]()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clu-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__pointer_to_member_type_info specified in <XREF linkend="tbl-libstdcxx-clu-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clu-data">
<TITLE>libstdcxx - Class __cxxabiv1::__pointer_to_member_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_to_member_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_to_member_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>vtable for __cxxabiv1::__pointer_to_member_type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clu-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN9__gnu_cxx13stdio_filebufIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __gnu_cxx::stdio_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-259">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-259">
<TITLE>vtable for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __gnu_cxx::stdio_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-260">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-260">
<TITLE>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __gnu_cxx::stdio_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clv-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clv-ints">
<TITLE>libstdcxx - Class __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::fd()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::fd()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;not-in-charge]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~stdio_filebuf &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clv-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __gnu_cxx::stdio_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clv-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clv-data">
<TITLE>libstdcxx - Class __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clv-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN9__gnu_cxx13stdio_filebufIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __gnu_cxx::stdio_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-261">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-261">
<TITLE>vtable for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __gnu_cxx::stdio_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-262">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-262">
<TITLE>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __gnu_cxx::stdio_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clw-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clw-ints">
<TITLE>libstdcxx - Class __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fd()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fd()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge deleting]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;not-in-charge]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~stdio_filebuf &lsqb;not-in-charge]()(CXXABI_1.2.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clw-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __gnu_cxx::stdio_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clw-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clw-data">
<TITLE>libstdcxx - Class __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clw-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt6locale5facetE -->
<SECT2>
<!--libgroup-->
<TITLE>Class locale::facet</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for locale::facet</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::locale::facet class
is described by <XREF LINKEND="cls-263">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-263">
<TITLE>vtable for locale::facet</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet &lsqb;in-charge]()</primary></indexterm>locale::facet::~facet &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet &lsqb;in-charge deleting]()</primary></indexterm>locale::facet::~facet &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::locale::facet  class
is described by <XREF LINKEND="rtti-264">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-264">
<TITLE>typeinfo for locale::facet</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for locale::facet</primary></indexterm>typeinfo name for locale::facet</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class locale::facet</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::locale::facet specified in <XREF linkend="tbl-libstdcxx-clx-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clx-ints">
<TITLE>libstdcxx - Class locale::facet Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::_M_add_reference()</primary></indexterm>locale::facet::_M_add_reference()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::_S_clone_c_locale(__locale_struct*&)</primary></indexterm>locale::facet::_S_clone_c_locale(__locale_struct*&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::_S_create_c_locale(__locale_struct*&, char const*, __locale_struct*)</primary></indexterm>locale::facet::_S_create_c_locale(__locale_struct*&, char const*, __locale_struct*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::_M_remove_reference()</primary></indexterm>locale::facet::_M_remove_reference()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::_S_destroy_c_locale(__locale_struct*&)</primary></indexterm>locale::facet::_S_destroy_c_locale(__locale_struct*&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::facet&lsqb;in-charge](unsigned)</primary></indexterm>locale::facet::facet&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::facet&lsqb;in-charge](unsigned long)</primary></indexterm>locale::facet::facet&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::facet&lsqb;not-in-charge](unsigned)</primary></indexterm>locale::facet::facet&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::facet&lsqb;not-in-charge](unsigned long)</primary></indexterm>locale::facet::facet&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet &lsqb;in-charge deleting]()</primary></indexterm>locale::facet::~facet &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet &lsqb;in-charge]()</primary></indexterm>locale::facet::~facet &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet &lsqb;not-in-charge]()</primary></indexterm>locale::facet::~facet &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clx-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::locale::facet specified in <XREF linkend="tbl-libstdcxx-clx-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clx-data">
<TITLE>libstdcxx - Class locale::facet Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::_S_c_locale</primary></indexterm>locale::facet::_S_c_locale(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clx-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for locale::facet</primary></indexterm>typeinfo name for locale::facet(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clx-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for locale::facet</primary></indexterm>vtable for locale::facet(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clx-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clx-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clx-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt8ios_base7failureE -->
<SECT2>
<!--libgroup-->
<TITLE>Class ios_base::failure</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ios_base::failure</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ios_base::failure class
is described by <XREF LINKEND="cls-265">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-265">
<TITLE>vtable for ios_base::failure</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base::failure</primary></indexterm>typeinfo for ios_base::failure</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure &lsqb;in-charge]()</primary></indexterm>ios_base::failure::~failure &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure &lsqb;in-charge deleting]()</primary></indexterm>ios_base::failure::~failure &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::what() const</primary></indexterm>ios_base::failure::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ios_base::failure  class
is described by <XREF LINKEND="rtti-266">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-266">
<TITLE>typeinfo for ios_base::failure</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base::failure</primary></indexterm>typeinfo name for ios_base::failure</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ios_base::failure</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ios_base::failure specified in <XREF linkend="tbl-libstdcxx-cly-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cly-ints">
<TITLE>libstdcxx - Class ios_base::failure Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::what() const</primary></indexterm>ios_base::failure::what() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cly-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ios_base::failure specified in <XREF linkend="tbl-libstdcxx-cly-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cly-data">
<TITLE>libstdcxx - Class ios_base::failure Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base::failure</primary></indexterm>typeinfo for ios_base::failure(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cly-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base::failure</primary></indexterm>typeinfo name for ios_base::failure(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cly-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ios_base::failure</primary></indexterm>vtable for ios_base::failure(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cly-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cly-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSdE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-267">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-267">
<TITLE>vtable for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-268">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-268">
<TITLE>typeinfo for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>11</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2050</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clz-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clz-ints">
<TITLE>libstdcxx - Class basic_iostream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream&lsqb;in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream&lsqb;in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream&lsqb;not-in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream&lsqb;not-in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;not-in-charge]()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-clz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-clz-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clz-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clz-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clz-data">
<TITLE>libstdcxx - Class basic_iostream&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>VTT for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-clz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-clz-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSiE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istream&lt;char, char_traints&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istream&lt;char, std::char_traints&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-269">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-269">
<TITLE>vtable for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge]()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_istream&lt;char, std::char_traints&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-270">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-270">
<TITLE>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istream&lt;char, char_traints&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_istream&lt;char, std::char_traints&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cma-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cma-ints">
<TITLE>libstdcxx - Class basic_istream&lt;char, char_traints&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::gcount() const</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::gcount() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(char*, int)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(char*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(char*, int, char)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(char*, int, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(char*, long)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(char*, long, char)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(char*, long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;&, char)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;&, char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(char&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get(char&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::get()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::peek()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::peek()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::read(char*, int)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::read(char*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::read(char*, long)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::read(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::sync()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::sync()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::seekg(fpos&lt;__mbstate_t&gt;)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::seekg(fpos&lt;__mbstate_t&gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::seekg(long, _Ios_Seekdir)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::seekg(long, _Ios_Seekdir)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::tellg()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::tellg()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::unget()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::unget()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::ignore(int, int)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::ignore(int, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::ignore(long, int)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::ignore(long, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::sentry::sentry&lsqb;in-charge](basic_istream&lt;char, char_traints&lt;char&gt; &gt;&, bool)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::sentry::sentry&lsqb;in-charge](basic_istream&lt;char, char_traints&lt;char&gt; &gt;&, bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::sentry::sentry&lsqb;not-in-charge](basic_istream&lt;char, char_traints&lt;char&gt; &gt;&, bool)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::sentry::sentry&lsqb;not-in-charge](basic_istream&lt;char, char_traints&lt;char&gt; &gt;&, bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::sentry::operator bool()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::sentry::operator bool()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::getline(char*, int)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::getline(char*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::getline(char*, int, char)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::getline(char*, int, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::getline(char*, long)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::getline(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::getline(char*, long, char)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::getline(char*, long, char)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::putback(char)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::putback(char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::readsome(char*, int)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::readsome(char*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::readsome(char*, long)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::readsome(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::basic_istream&lsqb;in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::basic_istream&lsqb;in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::basic_istream&lsqb;not-in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::basic_istream&lsqb;not-in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge]()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;not-in-charge]()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(basic_istream&lt;char, char_traints&lt;char&gt; &gt;& (*)(basic_istream&lt;char, char_traints&lt;char&gt; &gt;&))</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(basic_istream&lt;char, char_traints&lt;char&gt; &gt;& (*)(basic_istream&lt;char, char_traints&lt;char&gt; &gt;&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(ios_base& (*)(ios_base&))</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(ios_base& (*)(ios_base&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(basic_ios&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ios&lt;char, char_traits&lt;char&gt; &gt;&))</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(basic_ios&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ios&lt;char, char_traits&lt;char&gt; &gt;&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(void*&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(void*&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(bool&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(bool&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(double&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(double&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(long double&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(long double&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(float&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(float&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(int&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(int&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(unsigned&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(unsigned&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(long&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(long&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(unsigned long&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(unsigned long&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(short&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(short&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(unsigned short&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(unsigned short&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(long long&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(long long&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(unsigned long long&)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char&gt; &gt;::operator&gt;&gt;(unsigned long long&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cma-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cma-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cma-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istream&lt;char, char_traints&lt;char&gt; &gt;::~basic_istream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cma-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cma-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cma-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_istream&lt;char, std::char_traints&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cma-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cma-data">
<TITLE>libstdcxx - Class basic_istream&lt;char, char_traints&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;char, char_traints&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cma-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_istream&lt;char, char_traints&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cma-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</primary></indexterm>VTT for basic_istream&lt;char, char_traints&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cma-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_istream&lt;char, char_traints&lt;char&gt; &gt;</primary></indexterm>vtable for basic_istream&lt;char, char_traints&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cma-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cma-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-271">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-271">
<TITLE>vtable for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge]()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-272">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-272">
<TITLE>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmb-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmb-ints">
<TITLE>libstdcxx - Class basic_ostream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::put(char)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::put(char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::flush()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::flush()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::seekp(fpos&lt;__mbstate_t&gt;)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::seekp(fpos&lt;__mbstate_t&gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::seekp(long, _Ios_Seekdir)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::seekp(long, _Ios_Seekdir)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::tellp()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::tellp()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::write(char const*, int)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::write(char const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::write(char const*, long)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::write(char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry&lsqb;in-charge](basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry&lsqb;in-charge](basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry&lsqb;not-in-charge](basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry&lsqb;not-in-charge](basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::~sentry &lsqb;in-charge]()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::~sentry &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::~sentry &lsqb;not-in-charge]()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::~sentry &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::operator bool()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::operator bool()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream&lsqb;in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream&lsqb;in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream&lsqb;not-in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream&lsqb;not-in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge]()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;not-in-charge]()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&))</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(ios_base& (*)(ios_base&))</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(ios_base& (*)(ios_base&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_ios&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ios&lt;char, char_traits&lt;char&gt; &gt;&))</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_ios&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ios&lt;char, char_traits&lt;char&gt; &gt;&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(void const*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(void const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(bool)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(double)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(double)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long double)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long double)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(float)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(float)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(int)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned long)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(short)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(short)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned short)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned short)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long long)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned long long)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned long long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmb-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmb-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmb-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmb-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmb-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmb-data">
<TITLE>libstdcxx - Class basic_ostream&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>VTT for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmb-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10__num_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class __num_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __num_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::__num_base  class
is described by <XREF LINKEND="rtti-273">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-273">
<TITLE>typeinfo for __num_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __num_base</primary></indexterm>typeinfo name for __num_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __num_base</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__num_base specified in <XREF linkend="tbl-libstdcxx-cmc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmc-ints">
<TITLE>libstdcxx - Class __num_base Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__num_base::_S_format_int(ios_base const&, char*, char, char)</primary></indexterm>__num_base::_S_format_int(ios_base const&, char*, char, char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__num_base::_S_format_float(ios_base const&, char*, char, int)</primary></indexterm>__num_base::_S_format_float(ios_base const&, char*, char, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__num_base::_S_format_float(ios_base const&, char*, char, long)</primary></indexterm>__num_base::_S_format_float(ios_base const&, char*, char, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmc-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__num_base specified in <XREF linkend="tbl-libstdcxx-cmc-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmc-data">
<TITLE>libstdcxx - Class __num_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__num_base::_S_atoms</primary></indexterm>__num_base::_S_atoms(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmc-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __num_base</primary></indexterm>typeinfo name for __num_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmc-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmc-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmc-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10bad_typeid -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_typeid</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_typeid</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_typeid class
is described by <XREF LINKEND="cls-274">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-274">
<TITLE>vtable for bad_typeid</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_typeid</primary></indexterm>typeinfo for bad_typeid</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;in-charge]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;in-charge deleting]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_typeid  class
is described by <XREF LINKEND="rtti-275">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-275">
<TITLE>typeinfo for bad_typeid</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_typeid</primary></indexterm>typeinfo name for bad_typeid</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_typeid</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::bad_typeid specified in <XREF linkend="tbl-libstdcxx-cmd-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmd-ints">
<TITLE>libstdcxx - Class bad_typeid Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;in-charge deleting]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;in-charge]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;not-in-charge]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmd-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::bad_typeid specified in <XREF linkend="tbl-libstdcxx-cmd-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmd-data">
<TITLE>libstdcxx - Class bad_typeid Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_typeid</primary></indexterm>typeinfo for bad_typeid(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmd-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_typeid</primary></indexterm>typeinfo name for bad_typeid(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmd-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for bad_typeid</primary></indexterm>vtable for bad_typeid(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmd-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmd-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10ctype_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::ctype_base  class
is described by <XREF LINKEND="rtti-276">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-276">
<TITLE>typeinfo for ctype_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_base</primary></indexterm>typeinfo name for ctype_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype_base</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::ctype_base
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ctype_base specified in <XREF linkend="tbl-libstdcxx-cme-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cme-data">
<TITLE>libstdcxx - Class ctype_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::alnum</primary></indexterm>ctype_base::alnum(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::alpha</primary></indexterm>ctype_base::alpha(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::cntrl</primary></indexterm>ctype_base::cntrl(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::digit</primary></indexterm>ctype_base::digit(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::graph</primary></indexterm>ctype_base::graph(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::lower</primary></indexterm>ctype_base::lower(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::print</primary></indexterm>ctype_base::print(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::punct</primary></indexterm>ctype_base::punct(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::space</primary></indexterm>ctype_base::space(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::upper</primary></indexterm>ctype_base::upper(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::xdigit</primary></indexterm>ctype_base::xdigit(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_base</primary></indexterm>typeinfo for ctype_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cme-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_base</primary></indexterm>typeinfo name for ctype_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cme-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cme-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cme-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10istrstream -->
<SECT2>
<!--libgroup-->
<TITLE>Class istrstream</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for istrstream</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::istrstream class
is described by <XREF LINKEND="cls-277">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-277">
<TITLE>vtable for istrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for istrstream</primary></indexterm>typeinfo for istrstream</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::~istrstream &lsqb;in-charge]()</primary></indexterm>istrstream::~istrstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::~istrstream &lsqb;in-charge deleting]()</primary></indexterm>istrstream::~istrstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::istrstream  class
is described by <XREF LINKEND="rtti-278">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-278">
<TITLE>typeinfo for istrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for istrstream</primary></indexterm>typeinfo name for istrstream</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class istrstream</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::istrstream specified in <XREF linkend="tbl-libstdcxx-cmf-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmf-ints">
<TITLE>libstdcxx - Class istrstream Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::rdbuf() const</primary></indexterm>istrstream::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::str()</primary></indexterm>istrstream::str()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;in-charge](char const*)</primary></indexterm>istrstream::istrstream&lsqb;in-charge](char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;in-charge](char const*, int)</primary></indexterm>istrstream::istrstream&lsqb;in-charge](char const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;in-charge](char const*, long)</primary></indexterm>istrstream::istrstream&lsqb;in-charge](char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;in-charge](char*)</primary></indexterm>istrstream::istrstream&lsqb;in-charge](char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;in-charge](char*, int)</primary></indexterm>istrstream::istrstream&lsqb;in-charge](char*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;in-charge](char*, long)</primary></indexterm>istrstream::istrstream&lsqb;in-charge](char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;not-in-charge](char const*)</primary></indexterm>istrstream::istrstream&lsqb;not-in-charge](char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;not-in-charge](char const*, int)</primary></indexterm>istrstream::istrstream&lsqb;not-in-charge](char const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;not-in-charge](char const*, long)</primary></indexterm>istrstream::istrstream&lsqb;not-in-charge](char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;not-in-charge](char*)</primary></indexterm>istrstream::istrstream&lsqb;not-in-charge](char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;not-in-charge](char*, int)</primary></indexterm>istrstream::istrstream&lsqb;not-in-charge](char*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;not-in-charge](char*, long)</primary></indexterm>istrstream::istrstream&lsqb;not-in-charge](char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::~istrstream &lsqb;in-charge deleting]()</primary></indexterm>istrstream::~istrstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::~istrstream &lsqb;in-charge]()</primary></indexterm>istrstream::~istrstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::~istrstream &lsqb;not-in-charge]()</primary></indexterm>istrstream::~istrstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to istrstream::~istrstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to istrstream::~istrstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to istrstream::~istrstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to istrstream::~istrstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cmf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to istrstream::~istrstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to istrstream::~istrstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to istrstream::~istrstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to istrstream::~istrstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmf-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmf-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::istrstream specified in <XREF linkend="tbl-libstdcxx-cmf-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmf-data">
<TITLE>libstdcxx - Class istrstream Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for istrstream</primary></indexterm>typeinfo for istrstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for istrstream</primary></indexterm>typeinfo name for istrstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for istrstream</primary></indexterm>VTT for istrstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for istrstream</primary></indexterm>vtable for istrstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmf-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10money_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::money_base  class
is described by <XREF LINKEND="rtti-279">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-279">
<TITLE>typeinfo for money_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_base</primary></indexterm>typeinfo name for money_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_base</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::money_base specified in <XREF linkend="tbl-libstdcxx-cmg-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmg-ints">
<TITLE>libstdcxx - Class money_base Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_base::_S_construct_pattern(char, char, char)</primary></indexterm>money_base::_S_construct_pattern(char, char, char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmg-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::money_base specified in <XREF linkend="tbl-libstdcxx-cmg-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmg-data">
<TITLE>libstdcxx - Class money_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_base::_S_default_pattern</primary></indexterm>money_base::_S_default_pattern(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmg-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmg-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_base</primary></indexterm>typeinfo name for money_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmg-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmg-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmg-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10moneypunctIcLb0EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;char, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;char, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;char, (bool)0&gt; class
is described by <XREF LINKEND="cls-280">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-280">
<TITLE>vtable for moneypunct&lt;char, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct&lt;char, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct&lt;char, (bool)0&gt;  class
is described by <XREF LINKEND="rtti-281">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-281">
<TITLE>typeinfo for moneypunct&lt;char, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;char, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct&lt;char, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;char, (bool)0&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct&lt;char, (bool)0&gt; specified in <XREF linkend="tbl-libstdcxx-cmh-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmh-ints">
<TITLE>libstdcxx - Class moneypunct&lt;char, (bool)0&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::neg_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::pos_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::curr_symbol() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::frac_digits() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_neg_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_pos_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::negative_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::positive_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_curr_symbol() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_frac_digits() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_negative_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_positive_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::grouping() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;in-charge](unsigned)</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;in-charge](unsigned long)</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;not-in-charge](unsigned)</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::moneypunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;not-in-charge]()</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::~moneypunct &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmh-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct&lt;char, (bool)0&gt; specified in <XREF linkend="tbl-libstdcxx-cmh-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmh-data">
<TITLE>libstdcxx - Class moneypunct&lt;char, (bool)0&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for moneypunct&lt;char, (bool)0&gt;::id</primary></indexterm>guard variable for moneypunct&lt;char, (bool)0&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::id</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::intl</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::intl(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct&lt;char, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;char, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct&lt;char, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct&lt;char, (bool)0&gt;</primary></indexterm>vtable for moneypunct&lt;char, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmh-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmh-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10moneypunctIcLb1EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;char, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;char, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;char, (bool)1&gt; class
is described by <XREF LINKEND="cls-282">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-282">
<TITLE>vtable for moneypunct&lt;char, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct&lt;char, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct&lt;char, (bool)1&gt;  class
is described by <XREF LINKEND="rtti-283">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-283">
<TITLE>typeinfo for moneypunct&lt;char, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;char, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct&lt;char, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;char, (bool)1&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct&lt;char, (bool)1&gt; specified in <XREF linkend="tbl-libstdcxx-cmi-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmi-ints">
<TITLE>libstdcxx - Class moneypunct&lt;char, (bool)1&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::neg_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::pos_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::curr_symbol() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::frac_digits() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_neg_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_pos_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::negative_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::positive_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_curr_symbol() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_frac_digits() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_negative_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_positive_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::grouping() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;in-charge](unsigned)</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;in-charge](unsigned long)</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;not-in-charge](unsigned)</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::moneypunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;not-in-charge]()</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::~moneypunct &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmi-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct&lt;char, (bool)1&gt; specified in <XREF linkend="tbl-libstdcxx-cmi-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmi-data">
<TITLE>libstdcxx - Class moneypunct&lt;char, (bool)1&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for moneypunct&lt;char, (bool)1&gt;::id</primary></indexterm>guard variable for moneypunct&lt;char, (bool)1&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::id</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::intl</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::intl(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct&lt;char, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;char, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct&lt;char, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct&lt;char, (bool)1&gt;</primary></indexterm>vtable for moneypunct&lt;char, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmi-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmi-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10moneypunctIwLb0EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;wchar_t, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;wchar_t, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;wchar_t, (bool)0&gt; class
is described by <XREF LINKEND="cls-284">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-284">
<TITLE>vtable for moneypunct&lt;wchar_t, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct&lt;wchar_t, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct&lt;wchar_t, (bool)0&gt;  class
is described by <XREF LINKEND="rtti-285">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-285">
<TITLE>typeinfo for moneypunct&lt;wchar_t, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct&lt;wchar_t, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;wchar_t, (bool)0&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct&lt;wchar_t, (bool)0&gt; specified in <XREF linkend="tbl-libstdcxx-cmj-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmj-ints">
<TITLE>libstdcxx - Class moneypunct&lt;wchar_t, (bool)0&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::neg_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::pos_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::curr_symbol() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::frac_digits() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_neg_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_pos_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::negative_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::positive_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_curr_symbol() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_frac_digits() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_negative_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_positive_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;in-charge](unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;in-charge](unsigned long)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;not-in-charge](unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::moneypunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;not-in-charge]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::~moneypunct &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmj-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct&lt;wchar_t, (bool)0&gt; specified in <XREF linkend="tbl-libstdcxx-cmj-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmj-data">
<TITLE>libstdcxx - Class moneypunct&lt;wchar_t, (bool)0&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for moneypunct&lt;wchar_t, (bool)0&gt;::id</primary></indexterm>guard variable for moneypunct&lt;wchar_t, (bool)0&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::id</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::intl</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::intl(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct&lt;wchar_t, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct&lt;wchar_t, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct&lt;wchar_t, (bool)0&gt;</primary></indexterm>vtable for moneypunct&lt;wchar_t, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmj-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmj-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10moneypunctIwLb1EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;wchar_t, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;wchar_t, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;wchar_t, (bool)1&gt; class
is described by <XREF LINKEND="cls-286">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-286">
<TITLE>vtable for moneypunct&lt;wchar_t, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct&lt;wchar_t, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct&lt;wchar_t, (bool)1&gt;  class
is described by <XREF LINKEND="rtti-287">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-287">
<TITLE>typeinfo for moneypunct&lt;wchar_t, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct&lt;wchar_t, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;wchar_t, (bool)1&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct&lt;wchar_t, (bool)1&gt; specified in <XREF linkend="tbl-libstdcxx-cmk-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmk-ints">
<TITLE>libstdcxx - Class moneypunct&lt;wchar_t, (bool)1&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::neg_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::pos_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::curr_symbol() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::frac_digits() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_neg_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_pos_format() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::negative_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::positive_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_curr_symbol() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_frac_digits() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_negative_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_positive_sign() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;in-charge](unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;in-charge](unsigned long)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;not-in-charge](unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::moneypunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;not-in-charge]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::~moneypunct &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmk-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct&lt;wchar_t, (bool)1&gt; specified in <XREF linkend="tbl-libstdcxx-cmk-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmk-data">
<TITLE>libstdcxx - Class moneypunct&lt;wchar_t, (bool)1&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for moneypunct&lt;wchar_t, (bool)1&gt;::id</primary></indexterm>guard variable for moneypunct&lt;wchar_t, (bool)1&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::id</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::intl</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::intl(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmk-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct&lt;wchar_t, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct&lt;wchar_t, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct&lt;wchar_t, (bool)1&gt;</primary></indexterm>vtable for moneypunct&lt;wchar_t, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmk-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmk-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10ostrstream -->
<SECT2>
<!--libgroup-->
<TITLE>Class ostrstream</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ostrstream</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ostrstream class
is described by <XREF LINKEND="cls-288">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-288">
<TITLE>vtable for ostrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ostrstream</primary></indexterm>typeinfo for ostrstream</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::~ostrstream &lsqb;in-charge]()</primary></indexterm>ostrstream::~ostrstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::~ostrstream &lsqb;in-charge deleting]()</primary></indexterm>ostrstream::~ostrstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ostrstream  class
is described by <XREF LINKEND="rtti-289">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-289">
<TITLE>typeinfo for ostrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ostrstream</primary></indexterm>typeinfo name for ostrstream</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ostrstream</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ostrstream specified in <XREF linkend="tbl-libstdcxx-cml-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cml-ints">
<TITLE>libstdcxx - Class ostrstream Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::rdbuf() const</primary></indexterm>ostrstream::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::pcount() const</primary></indexterm>ostrstream::pcount() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::str()</primary></indexterm>ostrstream::str()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::freeze(bool)</primary></indexterm>ostrstream::freeze(bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::ostrstream&lsqb;in-charge](char*, int, _Ios_Openmode)</primary></indexterm>ostrstream::ostrstream&lsqb;in-charge](char*, int, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::ostrstream&lsqb;in-charge]()</primary></indexterm>ostrstream::ostrstream&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::ostrstream&lsqb;not-in-charge](char*, int, _Ios_Openmode)</primary></indexterm>ostrstream::ostrstream&lsqb;not-in-charge](char*, int, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::ostrstream&lsqb;not-in-charge]()</primary></indexterm>ostrstream::ostrstream&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::~ostrstream &lsqb;in-charge deleting]()</primary></indexterm>ostrstream::~ostrstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::~ostrstream &lsqb;in-charge]()</primary></indexterm>ostrstream::~ostrstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::~ostrstream &lsqb;not-in-charge]()</primary></indexterm>ostrstream::~ostrstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to ostrstream::~ostrstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to ostrstream::~ostrstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to ostrstream::~ostrstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to ostrstream::~ostrstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to ostrstream::~ostrstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to ostrstream::~ostrstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cml-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to ostrstream::~ostrstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to ostrstream::~ostrstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cml-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cml-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cml-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ostrstream specified in <XREF linkend="tbl-libstdcxx-cml-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cml-data">
<TITLE>libstdcxx - Class ostrstream Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ostrstream</primary></indexterm>typeinfo for ostrstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cml-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ostrstream</primary></indexterm>typeinfo name for ostrstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cml-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for ostrstream</primary></indexterm>VTT for ostrstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cml-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ostrstream</primary></indexterm>vtable for ostrstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cml-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cml-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt11__timepunctIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __timepunct&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __timepunct&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__timepunct&lt;char&gt; class
is described by <XREF LINKEND="cls-290">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-290">
<TITLE>vtable for __timepunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;char&gt;</primary></indexterm>typeinfo for __timepunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge]()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge deleting]()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__timepunct&lt;char&gt;  class
is described by <XREF LINKEND="rtti-291">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-291">
<TITLE>typeinfo for __timepunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;char&gt;</primary></indexterm>typeinfo name for __timepunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __timepunct&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__timepunct&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cmm-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmm-ints">
<TITLE>libstdcxx - Class __timepunct&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_date_formats(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_date_formats(char const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_time_formats(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_time_formats(char const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_days_abbreviated(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_days_abbreviated(char const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_date_time_formats(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_date_time_formats(char const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_months_abbreviated(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_months_abbreviated(char const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_put(char*, unsigned, char const*, tm const*) const</primary></indexterm>__timepunct&lt;char&gt;::_M_put(char*, unsigned, char const*, tm const*) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_put(char*, unsigned long, char const*, tm const*) const</primary></indexterm>__timepunct&lt;char&gt;::_M_put(char*, unsigned long, char const*, tm const*) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_ampm(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_ampm(char const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_days(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_days(char const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_months(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_months(char const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_initialize_timepunct(__locale_struct*)</primary></indexterm>__timepunct&lt;char&gt;::_M_initialize_timepunct(__locale_struct*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>__timepunct&lt;char&gt;::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>__timepunct&lt;char&gt;::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::__timepunct&lsqb;in-charge](unsigned)</primary></indexterm>__timepunct&lt;char&gt;::__timepunct&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::__timepunct&lsqb;in-charge](unsigned long)</primary></indexterm>__timepunct&lt;char&gt;::__timepunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>__timepunct&lt;char&gt;::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>__timepunct&lt;char&gt;::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::__timepunct&lsqb;not-in-charge](unsigned)</primary></indexterm>__timepunct&lt;char&gt;::__timepunct&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::__timepunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>__timepunct&lt;char&gt;::__timepunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge deleting]()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge]()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct &lsqb;not-in-charge]()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;__timepunct&lt;char&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;__timepunct&lt;char&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmm-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__timepunct&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cmm-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmm-data">
<TITLE>libstdcxx - Class __timepunct&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for __timepunct&lt;char&gt;::id</primary></indexterm>guard variable for __timepunct&lt;char&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_S_timezones</primary></indexterm>__timepunct&lt;char&gt;::_S_timezones(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::id</primary></indexterm>__timepunct&lt;char&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;char&gt;</primary></indexterm>typeinfo for __timepunct&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;char&gt;</primary></indexterm>typeinfo name for __timepunct&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __timepunct&lt;char&gt;</primary></indexterm>vtable for __timepunct&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmm-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmm-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt11__timepunctIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __timepunct&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __timepunct&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__timepunct&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-292">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-292">
<TITLE>vtable for __timepunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;wchar_t&gt;</primary></indexterm>typeinfo for __timepunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge]()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge deleting]()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__timepunct&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-293">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-293">
<TITLE>typeinfo for __timepunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;wchar_t&gt;</primary></indexterm>typeinfo name for __timepunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __timepunct&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__timepunct&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cmn-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmn-ints">
<TITLE>libstdcxx - Class __timepunct&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_date_formats(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_date_formats(wchar_t const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_time_formats(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_time_formats(wchar_t const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_days_abbreviated(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_days_abbreviated(wchar_t const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_date_time_formats(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_date_time_formats(wchar_t const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_months_abbreviated(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_months_abbreviated(wchar_t const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_put(wchar_t*, unsigned, wchar_t const*, tm const*) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_put(wchar_t*, unsigned, wchar_t const*, tm const*) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_put(wchar_t*, unsigned long, wchar_t const*, tm const*) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_put(wchar_t*, unsigned long, wchar_t const*, tm const*) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_ampm(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_ampm(wchar_t const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_days(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_days(wchar_t const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_months(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_months(wchar_t const**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_initialize_timepunct(__locale_struct*)</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_initialize_timepunct(__locale_struct*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;in-charge](unsigned)</primary></indexterm>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;in-charge](unsigned long)</primary></indexterm>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;not-in-charge](unsigned)</primary></indexterm>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>__timepunct&lt;wchar_t&gt;::__timepunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge deleting]()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge]()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;not-in-charge]()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;__timepunct&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;__timepunct&lt;wchar_t&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmn-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__timepunct&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cmn-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmn-data">
<TITLE>libstdcxx - Class __timepunct&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for __timepunct&lt;wchar_t&gt;::id</primary></indexterm>guard variable for __timepunct&lt;wchar_t&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmn-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_S_timezones</primary></indexterm>__timepunct&lt;wchar_t&gt;::_S_timezones(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::id</primary></indexterm>__timepunct&lt;wchar_t&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;wchar_t&gt;</primary></indexterm>typeinfo for __timepunct&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmn-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;wchar_t&gt;</primary></indexterm>typeinfo name for __timepunct&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmn-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __timepunct&lt;wchar_t&gt;</primary></indexterm>vtable for __timepunct&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmn-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmn-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmn-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt11logic_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class logic_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for logic_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::logic_error class
is described by <XREF LINKEND="cls-294">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-294">
<TITLE>vtable for logic_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for logic_error</primary></indexterm>typeinfo for logic_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;in-charge]()</primary></indexterm>logic_error::~logic_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;in-charge deleting]()</primary></indexterm>logic_error::~logic_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::logic_error  class
is described by <XREF LINKEND="rtti-295">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-295">
<TITLE>typeinfo for logic_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for logic_error</primary></indexterm>typeinfo name for logic_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class logic_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::logic_error specified in <XREF linkend="tbl-libstdcxx-cmo-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmo-ints">
<TITLE>libstdcxx - Class logic_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::logic_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>logic_error::logic_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::logic_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>logic_error::logic_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;in-charge deleting]()</primary></indexterm>logic_error::~logic_error &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;in-charge]()</primary></indexterm>logic_error::~logic_error &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;not-in-charge]()</primary></indexterm>logic_error::~logic_error &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmo-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::logic_error specified in <XREF linkend="tbl-libstdcxx-cmo-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmo-data">
<TITLE>libstdcxx - Class logic_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for logic_error</primary></indexterm>typeinfo for logic_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for logic_error</primary></indexterm>typeinfo name for logic_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for logic_error</primary></indexterm>vtable for logic_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmo-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt11range_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class range_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for range_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::range_error class
is described by <XREF LINKEND="cls-296">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-296">
<TITLE>vtable for range_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for range_error</primary></indexterm>typeinfo for range_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error &lsqb;in-charge]()</primary></indexterm>range_error::~range_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error &lsqb;in-charge deleting]()</primary></indexterm>range_error::~range_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::range_error  class
is described by <XREF LINKEND="rtti-297">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-297">
<TITLE>typeinfo for range_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for range_error</primary></indexterm>typeinfo name for range_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class range_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::range_error specified in <XREF linkend="tbl-libstdcxx-cmp-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmp-ints">
<TITLE>libstdcxx - Class range_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>range_error::range_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>range_error::range_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>range_error::range_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>range_error::range_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error &lsqb;in-charge deleting]()</primary></indexterm>range_error::~range_error &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error &lsqb;in-charge]()</primary></indexterm>range_error::~range_error &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmp-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::range_error specified in <XREF linkend="tbl-libstdcxx-cmp-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmp-data">
<TITLE>libstdcxx - Class range_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for range_error</primary></indexterm>typeinfo for range_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmp-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for range_error</primary></indexterm>typeinfo name for range_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmp-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for range_error</primary></indexterm>vtable for range_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmp-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmp-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12codecvt_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::codecvt_base  class
is described by <XREF LINKEND="rtti-298">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-298">
<TITLE>typeinfo for codecvt_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_base</primary></indexterm>typeinfo name for codecvt_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt_base</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::codecvt_base
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::codecvt_base specified in <XREF linkend="tbl-libstdcxx-cmq-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmq-data">
<TITLE>libstdcxx - Class codecvt_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_base</primary></indexterm>typeinfo for codecvt_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_base</primary></indexterm>typeinfo name for codecvt_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmq-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12ctype_bynameIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ctype_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-299">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-299">
<TITLE>vtable for ctype_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_byname&lt;char&gt;</primary></indexterm>typeinfo for ctype_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge]()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge deleting]()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_is(unsigned short, char) const</primary></indexterm>ctype&lt;char&gt;::do_is(unsigned short, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_is(char const*, char const*, unsigned short*) const</primary></indexterm>ctype&lt;char&gt;::do_is(char const*, char const*, unsigned short*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_scan_is(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_scan_is(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_scan_not(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_scan_not(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char, char) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ctype_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-300">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-300">
<TITLE>typeinfo for ctype_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_byname&lt;char&gt;</primary></indexterm>typeinfo name for ctype_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype_byname&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ctype_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cmr-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmr-ints">
<TITLE>libstdcxx - Class ctype_byname&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::ctype_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>ctype_byname&lt;char&gt;::ctype_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::ctype_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>ctype_byname&lt;char&gt;::ctype_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge deleting]()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge]()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;not-in-charge]()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmr-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ctype_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cmr-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmr-data">
<TITLE>libstdcxx - Class ctype_byname&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_byname&lt;char&gt;</primary></indexterm>typeinfo for ctype_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_byname&lt;char&gt;</primary></indexterm>typeinfo name for ctype_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ctype_byname&lt;char&gt;</primary></indexterm>vtable for ctype_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmr-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12ctype_bynameIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class ctype_byname&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ctype_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cms-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cms-ints">
<TITLE>libstdcxx - Class ctype_byname&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t&gt;::ctype_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>ctype_byname&lt;wchar_t&gt;::ctype_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-87-tbl-libstdcxx-cms-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t&gt;::ctype_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>ctype_byname&lt;wchar_t&gt;::ctype_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-87-tbl-libstdcxx-cms-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t&gt;::ctype_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>ctype_byname&lt;wchar_t&gt;::ctype_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-87-tbl-libstdcxx-cms-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t&gt;::ctype_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>ctype_byname&lt;wchar_t&gt;::ctype_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-87-tbl-libstdcxx-cms-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t&gt;::~ctype_byname &lsqb;in-charge deleting]()</primary></indexterm>ctype_byname&lt;wchar_t&gt;::~ctype_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cms-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t&gt;::~ctype_byname &lsqb;in-charge]()</primary></indexterm>ctype_byname&lt;wchar_t&gt;::~ctype_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cms-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t&gt;::~ctype_byname &lsqb;not-in-charge]()</primary></indexterm>ctype_byname&lt;wchar_t&gt;::~ctype_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cms-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cms-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ctype_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cms-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cms-data">
<TITLE>libstdcxx - Class ctype_byname&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for ctype_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cms-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for ctype_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cms-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ctype_byname&lt;wchar_t&gt;</primary></indexterm>vtable for ctype_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cms-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cms-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12domain_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class domain_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for domain_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::domain_error class
is described by <XREF LINKEND="cls-301">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-301">
<TITLE>vtable for domain_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for domain_error</primary></indexterm>typeinfo for domain_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error &lsqb;in-charge]()</primary></indexterm>domain_error::~domain_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error &lsqb;in-charge deleting]()</primary></indexterm>domain_error::~domain_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::domain_error  class
is described by <XREF LINKEND="rtti-302">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-302">
<TITLE>typeinfo for domain_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for domain_error</primary></indexterm>typeinfo name for domain_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class domain_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::domain_error specified in <XREF linkend="tbl-libstdcxx-cmt-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmt-ints">
<TITLE>libstdcxx - Class domain_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::domain_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>domain_error::domain_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::domain_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>domain_error::domain_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error &lsqb;in-charge deleting]()</primary></indexterm>domain_error::~domain_error &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error &lsqb;in-charge]()</primary></indexterm>domain_error::~domain_error &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmt-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::domain_error specified in <XREF linkend="tbl-libstdcxx-cmt-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmt-data">
<TITLE>libstdcxx - Class domain_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for domain_error</primary></indexterm>typeinfo for domain_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for domain_error</primary></indexterm>typeinfo name for domain_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for domain_error</primary></indexterm>vtable for domain_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmt-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12length_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class length_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for length_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::length_error class
is described by <XREF LINKEND="cls-303">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-303">
<TITLE>vtable for length_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for length_error</primary></indexterm>typeinfo for length_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error &lsqb;in-charge]()</primary></indexterm>length_error::~length_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error &lsqb;in-charge deleting]()</primary></indexterm>length_error::~length_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::length_error  class
is described by <XREF LINKEND="rtti-304">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-304">
<TITLE>typeinfo for length_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for length_error</primary></indexterm>typeinfo name for length_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class length_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::length_error specified in <XREF linkend="tbl-libstdcxx-cmu-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmu-ints">
<TITLE>libstdcxx - Class length_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>length_error::length_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>length_error::length_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>length_error::length_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>length_error::length_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error &lsqb;in-charge deleting]()</primary></indexterm>length_error::~length_error &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error &lsqb;in-charge]()</primary></indexterm>length_error::~length_error &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmu-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::length_error specified in <XREF linkend="tbl-libstdcxx-cmu-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmu-data">
<TITLE>libstdcxx - Class length_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for length_error</primary></indexterm>typeinfo for length_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for length_error</primary></indexterm>typeinfo name for length_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for length_error</primary></indexterm>vtable for length_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmu-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12out_of_range -->
<SECT2>
<!--libgroup-->
<TITLE>Class out_of_range</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for out_of_range</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::out_of_range class
is described by <XREF LINKEND="cls-305">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-305">
<TITLE>vtable for out_of_range</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for out_of_range</primary></indexterm>typeinfo for out_of_range</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range &lsqb;in-charge]()</primary></indexterm>out_of_range::~out_of_range &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range &lsqb;in-charge deleting]()</primary></indexterm>out_of_range::~out_of_range &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::out_of_range  class
is described by <XREF LINKEND="rtti-306">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-306">
<TITLE>typeinfo for out_of_range</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for out_of_range</primary></indexterm>typeinfo name for out_of_range</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class out_of_range</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::out_of_range specified in <XREF linkend="tbl-libstdcxx-cmv-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmv-ints">
<TITLE>libstdcxx - Class out_of_range Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::out_of_range&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>out_of_range::out_of_range&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::out_of_range&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>out_of_range::out_of_range&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range &lsqb;in-charge deleting]()</primary></indexterm>out_of_range::~out_of_range &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range &lsqb;in-charge]()</primary></indexterm>out_of_range::~out_of_range &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmv-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::out_of_range specified in <XREF linkend="tbl-libstdcxx-cmv-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmv-data">
<TITLE>libstdcxx - Class out_of_range Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for out_of_range</primary></indexterm>typeinfo for out_of_range(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for out_of_range</primary></indexterm>typeinfo name for out_of_range(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for out_of_range</primary></indexterm>vtable for out_of_range(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmv-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12strstreambuf -->
<SECT2>
<!--libgroup-->
<TITLE>Class strstreambuf</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for strstreambuf</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::strstreambuf class
is described by <XREF LINKEND="cls-307">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-307">
<TITLE>vtable for strstreambuf</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for strstreambuf</primary></indexterm>typeinfo for strstreambuf</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::~strstreambuf &lsqb;in-charge]()</primary></indexterm>strstreambuf::~strstreambuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::~strstreambuf &lsqb;in-charge deleting]()</primary></indexterm>strstreambuf::~strstreambuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::strstreambuf  class
is described by <XREF LINKEND="rtti-308">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-308">
<TITLE>typeinfo for strstreambuf</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for strstreambuf</primary></indexterm>typeinfo name for strstreambuf</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class strstreambuf</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::strstreambuf specified in <XREF linkend="tbl-libstdcxx-cmw-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmw-ints">
<TITLE>libstdcxx - Class strstreambuf Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::pcount() const</primary></indexterm>strstreambuf::pcount() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::str()</primary></indexterm>strstreambuf::str()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::freeze(bool)</primary></indexterm>strstreambuf::freeze(bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::_M_free(char*)</primary></indexterm>strstreambuf::_M_free(char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>strstreambuf::seekoff(long, _Ios_Seekdir, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>strstreambuf::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::_M_alloc(unsigned)</primary></indexterm>strstreambuf::_M_alloc(unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::_M_alloc(unsigned long)</primary></indexterm>strstreambuf::_M_alloc(unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::_M_setup(char*, char*, int)</primary></indexterm>strstreambuf::_M_setup(char*, char*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::_M_setup(char*, char*, long)</primary></indexterm>strstreambuf::_M_setup(char*, char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::overflow(int)</primary></indexterm>strstreambuf::overflow(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::pbackfail(int)</primary></indexterm>strstreambuf::pbackfail(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::underflow()</primary></indexterm>strstreambuf::underflow()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](void* (*)(unsigned), void (*)(void*))</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](void* (*)(unsigned), void (*)(void*))<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](void* (*)(unsigned long), void (*)(void*))</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](void* (*)(unsigned long), void (*)(void*))<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](signed char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](signed char const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](signed char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](signed char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](char const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](signed char*, int, signed char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](signed char*, int, signed char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](signed char*, long, signed char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](signed char*, long, signed char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](char*, int, char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](char*, int, char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](char*, long, char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](char*, long, char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char*, int, unsigned char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char*, int, unsigned char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char*, long, unsigned char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char*, long, unsigned char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](void* (*)(unsigned), void (*)(void*))</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](void* (*)(unsigned), void (*)(void*))<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](void* (*)(unsigned long), void (*)(void*))</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](void* (*)(unsigned long), void (*)(void*))<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](char const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char const*, long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char*, int, signed char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char*, int, signed char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char*, long, signed char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char*, long, signed char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](char*, int, char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](char*, int, char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](char*, long, char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](char*, long, char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char*, int, unsigned char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char*, int, unsigned char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char*, long, unsigned char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char*, long, unsigned char*)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](long)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::~strstreambuf &lsqb;in-charge deleting]()</primary></indexterm>strstreambuf::~strstreambuf &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::~strstreambuf &lsqb;in-charge]()</primary></indexterm>strstreambuf::~strstreambuf &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::~strstreambuf &lsqb;not-in-charge]()</primary></indexterm>strstreambuf::~strstreambuf &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmw-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::strstreambuf specified in <XREF linkend="tbl-libstdcxx-cmw-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmw-data">
<TITLE>libstdcxx - Class strstreambuf Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for strstreambuf</primary></indexterm>typeinfo for strstreambuf(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for strstreambuf</primary></indexterm>typeinfo name for strstreambuf(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for strstreambuf</primary></indexterm>vtable for strstreambuf(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmw-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13bad_exception -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_exception</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_exception</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_exception class
is described by <XREF LINKEND="cls-309">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-309">
<TITLE>vtable for bad_exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_exception</primary></indexterm>typeinfo for bad_exception</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;in-charge]()</primary></indexterm>bad_exception::~bad_exception &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;in-charge deleting]()</primary></indexterm>bad_exception::~bad_exception &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_exception  class
is described by <XREF LINKEND="rtti-310">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-310">
<TITLE>typeinfo for bad_exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_exception</primary></indexterm>typeinfo name for bad_exception</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_exception</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::bad_exception specified in <XREF linkend="tbl-libstdcxx-cmx-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmx-ints">
<TITLE>libstdcxx - Class bad_exception Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;in-charge deleting]()</primary></indexterm>bad_exception::~bad_exception &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;in-charge]()</primary></indexterm>bad_exception::~bad_exception &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;not-in-charge]()</primary></indexterm>bad_exception::~bad_exception &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmx-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::bad_exception specified in <XREF linkend="tbl-libstdcxx-cmx-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmx-data">
<TITLE>libstdcxx - Class bad_exception Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_exception</primary></indexterm>typeinfo for bad_exception(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_exception</primary></indexterm>typeinfo name for bad_exception(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for bad_exception</primary></indexterm>vtable for bad_exception(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmx-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_filebufIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-311">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-311">
<TITLE>vtable for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge]()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-312">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-312">
<TITLE>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmy-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmy-ints">
<TITLE>libstdcxx - Class basic_filebuf&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::is_open() const</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::is_open() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_output_unshift()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_output_unshift()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_really_overflow(int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_really_overflow(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_set_determinate(long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_set_determinate(long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_is_indeterminate()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_is_indeterminate()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_underflow_common(bool)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_underflow_common(bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_set_indeterminate()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_set_indeterminate()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_convert_to_external(char*, int, int&, int&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_convert_to_external(char*, int, int&, int&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_convert_to_external(char*, long, long&, long&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_convert_to_external(char*, long, long&, long&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::sync()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::close()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::close()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::basic_filebuf&lsqb;in-charge]()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::basic_filebuf&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::basic_filebuf&lsqb;not-in-charge]()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::basic_filebuf&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge]()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;not-in-charge]()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmy-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmy-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmy-data">
<TITLE>libstdcxx - Class basic_filebuf&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmy-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmy-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmy-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmy-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_filebufIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-313">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-313">
<TITLE>vtable for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge]()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-314">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-314">
<TITLE>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmz-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmz-ints">
<TITLE>libstdcxx - Class basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open() const</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_output_unshift()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_output_unshift()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_really_overflow(unsigned)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_really_overflow(unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_set_determinate(long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_set_determinate(long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_is_indeterminate()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_is_indeterminate()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_underflow_common(bool)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_underflow_common(bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_set_indeterminate()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_set_indeterminate()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_convert_to_external(wchar_t*, int, int&, int&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_convert_to_external(wchar_t*, int, int&, int&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_convert_to_external(wchar_t*, long, long&, long&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_convert_to_external(wchar_t*, long, long&, long&)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_destroy_internal_buffer()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_destroy_internal_buffer()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_allocate_internal_buffer()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_allocate_internal_buffer()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_filebuf&lsqb;in-charge]()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_filebuf&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_filebuf&lsqb;not-in-charge]()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_filebuf&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge]()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;not-in-charge]()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cmz-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmz-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmz-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmz-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmz-data">
<TITLE>libstdcxx - Class basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cmz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cmz-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_fstreamIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_fstream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-315">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-315">
<TITLE>vtable for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_fstream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-316">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-316">
<TITLE>typeinfo for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_fstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cna-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cna-ints">
<TITLE>libstdcxx - Class basic_fstream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::close()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::close()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream&lsqb;in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream&lsqb;in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream&lsqb;in-charge]()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream&lsqb;not-in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream&lsqb;not-in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream&lsqb;not-in-charge]()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;not-in-charge]()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cna-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cna-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cna-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cna-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cna-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cna-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_fstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cna-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cna-data">
<TITLE>libstdcxx - Class basic_fstream&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cna-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cna-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>VTT for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cna-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cna-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cna-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_fstreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_fstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-317">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-317">
<TITLE>vtable for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_fstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-318">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-318">
<TITLE>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_fstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnb-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnb-ints">
<TITLE>libstdcxx - Class basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream&lsqb;in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream&lsqb;in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream&lsqb;in-charge]()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream&lsqb;not-in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream&lsqb;not-in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream&lsqb;not-in-charge]()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;not-in-charge]()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnb-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnb-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnb-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnb-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnb-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_fstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnb-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnb-data">
<TITLE>libstdcxx - Class basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnb-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_istreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-319">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-319">
<TITLE>vtable for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge]()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_istream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-320">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-320">
<TITLE>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_istream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnc-ints">
<TITLE>libstdcxx - Class basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gcount() const</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gcount() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t*, int)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t*, int, wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t*, int, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t*, long)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t*, long, wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t*, long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::peek()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::peek()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::read(wchar_t*, int)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::read(wchar_t*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::read(wchar_t*, long)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::read(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekg(fpos&lt;__mbstate_t&gt;)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekg(fpos&lt;__mbstate_t&gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekg(long, _Ios_Seekdir)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekg(long, _Ios_Seekdir)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tellg()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tellg()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::unget()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::unget()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::ignore(int, unsigned)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::ignore(int, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::ignore(long, unsigned)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::ignore(long, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry&lsqb;in-charge](basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, bool)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry&lsqb;in-charge](basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry&lsqb;not-in-charge](basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, bool)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry&lsqb;not-in-charge](basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::operator bool()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::operator bool()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getline(wchar_t*, int)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getline(wchar_t*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getline(wchar_t*, int, wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getline(wchar_t*, int, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getline(wchar_t*, long)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getline(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getline(wchar_t*, long, wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getline(wchar_t*, long, wchar_t)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::putback(wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::putback(wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::readsome(wchar_t*, int)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::readsome(wchar_t*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::readsome(wchar_t*, long)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::readsome(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream&lsqb;in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream&lsqb;in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream&lsqb;not-in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream&lsqb;not-in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge]()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;not-in-charge]()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(ios_base& (*)(ios_base&))</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(ios_base& (*)(ios_base&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(void*&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(void*&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(bool&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(bool&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(double&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(double&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long double&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long double&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(float&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(float&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(int&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(int&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned long&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned long&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(short&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(short&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned short&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned short&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long long&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long long&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned long long&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned long long&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& ws&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& ws&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& getline&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& getline&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& getline&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&, wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& getline&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&, wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;double&gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;double&gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;long double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;long double&gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;long double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;long double&gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;float, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;float&gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;float, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;float&gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t*)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setiosflags)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setiosflags)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setprecision)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setprecision)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Resetiosflags)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Resetiosflags)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setw)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setw)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setbase)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setbase)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setfill&lt;wchar_t&gt;)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setfill&lt;wchar_t&gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnc-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnc-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnc-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnc-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_istream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnc-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnc-data">
<TITLE>libstdcxx - Class basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnc-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_ostreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-321">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-321">
<TITLE>vtable for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge]()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-322">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-322">
<TITLE>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnd-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnd-ints">
<TITLE>libstdcxx - Class basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::put(wchar_t)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::put(wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::flush()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::flush()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekp(fpos&lt;__mbstate_t&gt;)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekp(fpos&lt;__mbstate_t&gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekp(long, _Ios_Seekdir)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekp(long, _Ios_Seekdir)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tellp()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tellp()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::write(wchar_t const*, int)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::write(wchar_t const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::write(wchar_t const*, long)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::write(wchar_t const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry&lsqb;in-charge](basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry&lsqb;in-charge](basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry&lsqb;not-in-charge](basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry&lsqb;not-in-charge](basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::~sentry &lsqb;in-charge]()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::~sentry &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::~sentry &lsqb;not-in-charge]()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::~sentry &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::operator bool()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::operator bool()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream&lsqb;in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream&lsqb;in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream&lsqb;not-in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream&lsqb;not-in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge]()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;not-in-charge]()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(ios_base& (*)(ios_base&))</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(ios_base& (*)(ios_base&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(void const*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(void const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(bool)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(double)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(double)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long double)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long double)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(float)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(float)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(int)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned long)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(short)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(short)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned short)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned short)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long long)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned long long)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned long long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& endl&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& endl&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& ends&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& ends&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& flush&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& flush&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;double&gt; const&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;double&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;long double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;long double&gt; const&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;long double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;long double&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;float, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;float&gt; const&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;float, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;float&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t const*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, char const*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setiosflags)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setiosflags)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setprecision)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setprecision)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Resetiosflags)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Resetiosflags)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setw)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setw)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setbase)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setbase)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setfill&lt;wchar_t&gt;)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setfill&lt;wchar_t&gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, char)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnd-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnd-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnd-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnd-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnd-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnd-data">
<TITLE>libstdcxx - Class basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnd-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnd-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnd-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnd-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnd-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13messages_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::messages_base  class
is described by <XREF LINKEND="rtti-323">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-323">
<TITLE>typeinfo for messages_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_base</primary></indexterm>typeinfo name for messages_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages_base</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::messages_base
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::messages_base specified in <XREF linkend="tbl-libstdcxx-cne-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cne-data">
<TITLE>libstdcxx - Class messages_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_base</primary></indexterm>typeinfo for messages_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cne-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_base</primary></indexterm>typeinfo name for messages_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cne-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cne-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13runtime_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class runtime_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for runtime_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::runtime_error class
is described by <XREF LINKEND="cls-324">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-324">
<TITLE>vtable for runtime_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for runtime_error</primary></indexterm>typeinfo for runtime_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;in-charge]()</primary></indexterm>runtime_error::~runtime_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;in-charge deleting]()</primary></indexterm>runtime_error::~runtime_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::runtime_error  class
is described by <XREF LINKEND="rtti-325">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-325">
<TITLE>typeinfo for runtime_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for runtime_error</primary></indexterm>typeinfo name for runtime_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class runtime_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::runtime_error specified in <XREF linkend="tbl-libstdcxx-cnf-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnf-ints">
<TITLE>libstdcxx - Class runtime_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::runtime_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>runtime_error::runtime_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::runtime_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>runtime_error::runtime_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;in-charge deleting]()</primary></indexterm>runtime_error::~runtime_error &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;in-charge]()</primary></indexterm>runtime_error::~runtime_error &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;not-in-charge]()</primary></indexterm>runtime_error::~runtime_error &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnf-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::runtime_error specified in <XREF linkend="tbl-libstdcxx-cnf-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnf-data">
<TITLE>libstdcxx - Class runtime_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for runtime_error</primary></indexterm>typeinfo for runtime_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for runtime_error</primary></indexterm>typeinfo name for runtime_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for runtime_error</primary></indexterm>vtable for runtime_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnf-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14basic_ifstreamIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-326">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-326">
<TITLE>vtable for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-327">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-327">
<TITLE>typeinfo for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cng-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cng-ints">
<TITLE>libstdcxx - Class basic_ifstream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::close()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::close()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream&lsqb;in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream&lsqb;in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream&lsqb;in-charge]()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream&lsqb;not-in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream&lsqb;not-in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream&lsqb;not-in-charge]()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;not-in-charge]()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cng-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cng-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cng-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cng-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cng-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cng-data">
<TITLE>libstdcxx - Class basic_ifstream&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cng-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cng-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>VTT for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cng-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cng-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cng-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14basic_ifstreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ifstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-328">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-328">
<TITLE>vtable for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ifstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-329">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-329">
<TITLE>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ifstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnh-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnh-ints">
<TITLE>libstdcxx - Class basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream&lsqb;in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream&lsqb;in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream&lsqb;in-charge]()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream&lsqb;not-in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream&lsqb;not-in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream&lsqb;not-in-charge]()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;not-in-charge]()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnh-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnh-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ifstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnh-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnh-data">
<TITLE>libstdcxx - Class basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnh-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14basic_iostreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_iostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-330">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-330">
<TITLE>vtable for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_iostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-331">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-331">
<TITLE>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>11</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2050</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_iostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cni-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cni-ints">
<TITLE>libstdcxx - Class basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream&lsqb;in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream&lsqb;in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream&lsqb;not-in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream&lsqb;not-in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;not-in-charge]()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cni-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cni-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cni-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cni-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cni-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cni-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_iostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cni-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cni-data">
<TITLE>libstdcxx - Class basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cni-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cni-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cni-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cni-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cni-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14basic_ofstreamIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-332">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-332">
<TITLE>vtable for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-333">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-333">
<TITLE>typeinfo for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnj-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnj-ints">
<TITLE>libstdcxx - Class basic_ofstream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::close()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::close()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream&lsqb;in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream&lsqb;in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream&lsqb;in-charge]()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream&lsqb;not-in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream&lsqb;not-in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream&lsqb;not-in-charge]()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;not-in-charge]()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnj-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnj-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnj-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnj-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnj-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnj-data">
<TITLE>libstdcxx - Class basic_ofstream&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>VTT for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnj-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14basic_ofstreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ofstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-334">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-334">
<TITLE>vtable for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ofstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-335">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-335">
<TITLE>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ofstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnk-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnk-ints">
<TITLE>libstdcxx - Class basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream&lsqb;in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream&lsqb;in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream&lsqb;in-charge]()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream&lsqb;not-in-charge](char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream&lsqb;not-in-charge](char const*, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream&lsqb;not-in-charge]()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;not-in-charge]()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnk-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cnk-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnk-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnk-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ofstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnk-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnk-data">
<TITLE>libstdcxx - Class basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnk-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14codecvt_bynameIcc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt_byname&lt;char, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-336">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-336">
<TITLE>vtable for codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt_byname&lt;char, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-337">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-337">
<TITLE>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::codecvt_byname&lt;char, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnl-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnl-ints">
<TITLE>libstdcxx - Class codecvt_byname&lt;char, char, __mbstate_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::codecvt_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::codecvt_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::codecvt_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::codecvt_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::codecvt_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::codecvt_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::codecvt_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::codecvt_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;not-in-charge]()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnl-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::codecvt_byname&lt;char, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnl-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnl-data">
<TITLE>libstdcxx - Class codecvt_byname&lt;char, char, __mbstate_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnl-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnl-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>vtable for codecvt_byname&lt;char, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnl-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnl-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14codecvt_bynameIwc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-338">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-338">
<TITLE>vtable for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-339">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-339">
<TITLE>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Class data for collate_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate_byname&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-340">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-340">
<TITLE>vtable for collate_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for collate_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge]()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge deleting]()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate_byname&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-341">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-341">
<TITLE>typeinfo for collate_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for collate_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnm-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnm-ints">
<TITLE>libstdcxx - Class codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::codecvt_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::codecvt_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::codecvt_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::codecvt_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::codecvt_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::codecvt_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::codecvt_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::codecvt_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;not-in-charge]()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::collate_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;wchar_t&gt;::collate_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::collate_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>collate_byname&lt;wchar_t&gt;::collate_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::collate_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;wchar_t&gt;::collate_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::collate_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>collate_byname&lt;wchar_t&gt;::collate_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge deleting]()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge]()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;not-in-charge]()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnm-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnm-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnm-data">
<TITLE>libstdcxx - Class codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for collate_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for collate_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>vtable for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for collate_byname&lt;wchar_t&gt;</primary></indexterm>vtable for collate_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnm-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14collate_bynameIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for collate_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-342">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-342">
<TITLE>vtable for collate_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;char&gt;</primary></indexterm>typeinfo for collate_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge]()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge deleting]()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_transform(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_transform(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_hash(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_hash(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-343">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-343">
<TITLE>typeinfo for collate_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;char&gt;</primary></indexterm>typeinfo name for collate_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class collate_byname&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::collate_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnn-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnn-ints">
<TITLE>libstdcxx - Class collate_byname&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::collate_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;char&gt;::collate_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::collate_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>collate_byname&lt;char&gt;::collate_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::collate_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;char&gt;::collate_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::collate_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>collate_byname&lt;char&gt;::collate_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge deleting]()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge]()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname &lsqb;not-in-charge]()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnn-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::collate_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnn-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnn-data">
<TITLE>libstdcxx - Class collate_byname&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;char&gt;</primary></indexterm>typeinfo for collate_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnn-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;char&gt;</primary></indexterm>typeinfo name for collate_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnn-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for collate_byname&lt;char&gt;</primary></indexterm>vtable for collate_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnn-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnn-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14collate_bynameIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class collate_byname&lt;wchar_t&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::collate_byname&lt;wchar_t&gt;
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14overflow_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class overflow_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for overflow_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::overflow_error class
is described by <XREF LINKEND="cls-344">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-344">
<TITLE>vtable for overflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for overflow_error</primary></indexterm>typeinfo for overflow_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error &lsqb;in-charge]()</primary></indexterm>overflow_error::~overflow_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error &lsqb;in-charge deleting]()</primary></indexterm>overflow_error::~overflow_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::overflow_error  class
is described by <XREF LINKEND="rtti-345">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-345">
<TITLE>typeinfo for overflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for overflow_error</primary></indexterm>typeinfo name for overflow_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class overflow_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::overflow_error specified in <XREF linkend="tbl-libstdcxx-cno-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cno-ints">
<TITLE>libstdcxx - Class overflow_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::overflow_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>overflow_error::overflow_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cno-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::overflow_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>overflow_error::overflow_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cno-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error &lsqb;in-charge deleting]()</primary></indexterm>overflow_error::~overflow_error &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cno-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error &lsqb;in-charge]()</primary></indexterm>overflow_error::~overflow_error &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cno-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cno-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::overflow_error specified in <XREF linkend="tbl-libstdcxx-cno-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cno-data">
<TITLE>libstdcxx - Class overflow_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for overflow_error</primary></indexterm>typeinfo for overflow_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cno-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for overflow_error</primary></indexterm>typeinfo name for overflow_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cno-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for overflow_error</primary></indexterm>vtable for overflow_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cno-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cno-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15basic_streambufIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-346">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-346">
<TITLE>vtable for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge]()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-347">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-347">
<TITLE>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnp-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnp-ints">
<TITLE>libstdcxx - Class basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::gptr() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::gptr() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pptr() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pptr() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::eback() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::eback() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::egptr() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::egptr() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::epptr() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::epptr() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbase() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbase() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::getloc() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::getloc() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubseekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubseekoff(long, _Ios_Seekdir, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubseekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubseekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_M_in_cur_move(long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_M_in_cur_move(long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_M_out_buf_size()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_M_out_buf_size()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_M_out_cur_move(long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_M_out_cur_move(long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_M_pback_create()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_M_pback_create()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_M_pback_destroy()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_M_pback_destroy()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setg(char*, char*, char*)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setg(char*, char*, char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setp(char*, char*)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setp(char*, char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::gbump(int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::gbump(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbump(int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbump(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sgetc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sgetc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sgetn(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sgetn(char*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sgetn(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sgetn(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputc(char)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputc(char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputn(char const*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputn(char const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputn(char const*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputn(char const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sbumpc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sbumpc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::snextc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::snextc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubsync()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubsync()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sungetc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sungetc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::in_avail()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::in_avail()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubimbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubimbue(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubsetbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubsetbuf(char*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubsetbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubsetbuf(char*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputbackc(char)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputbackc(char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf&lsqb;in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf&lsqb;in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf&lsqb;in-charge]()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf&lsqb;not-in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf&lsqb;not-in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf&lsqb;not-in-charge]()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge]()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;not-in-charge]()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::operator=(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::operator=(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnp-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnp-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnp-data">
<TITLE>libstdcxx - Class basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_S_pback_size</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::_S_pback_size(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnp-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnp-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnp-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnp-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnp-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15basic_streambufIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_streambuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-348">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-348">
<TITLE>vtable for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge]()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_streambuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-349">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-349">
<TITLE>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_streambuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnq-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnq-ints">
<TITLE>libstdcxx - Class basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gptr() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gptr() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pptr() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pptr() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::eback() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::eback() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::egptr() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::egptr() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::epptr() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::epptr() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbase() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbase() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getloc() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getloc() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubseekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubseekoff(long, _Ios_Seekdir, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubseekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubseekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_in_cur_move(long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_in_cur_move(long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_out_buf_size()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_out_buf_size()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_out_cur_move(long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_out_cur_move(long)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_pback_create()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_pback_create()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_pback_destroy()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_pback_destroy()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setg(wchar_t*, wchar_t*, wchar_t*)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setg(wchar_t*, wchar_t*, wchar_t*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setp(wchar_t*, wchar_t*)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setp(wchar_t*, wchar_t*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gbump(int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gbump(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbump(int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbump(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sgetc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sgetc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sgetn(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sgetn(wchar_t*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sgetn(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sgetn(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputc(wchar_t)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputc(wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputn(wchar_t const*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputn(wchar_t const*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputn(wchar_t const*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputn(wchar_t const*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sbumpc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sbumpc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::snextc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::snextc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubsync()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubsync()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sungetc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sungetc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::in_avail()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::in_avail()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubimbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubimbue(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubsetbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubsetbuf(wchar_t*, int)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubsetbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubsetbuf(wchar_t*, long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputbackc(wchar_t)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputbackc(wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf&lsqb;in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf&lsqb;in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf&lsqb;in-charge]()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf&lsqb;not-in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf&lsqb;not-in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf&lsqb;not-in-charge]()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge]()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;not-in-charge]()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator=(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator=(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnq-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_streambuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnq-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnq-data">
<TITLE>libstdcxx - Class basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_S_pback_size</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_S_pback_size(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnq-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15basic_stringbufIcSt11char_traitsIcESaIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-350">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-350">
<TITLE>vtable for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-351">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-351">
<TITLE>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnr-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnr-ints">
<TITLE>libstdcxx - Class basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_stringbuf_init(_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_stringbuf_init(_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::overflow(int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::overflow(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::pbackfail(int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::pbackfail(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::underflow()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::underflow()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf&lsqb;in-charge](_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf&lsqb;in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf&lsqb;not-in-charge](_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf&lsqb;not-in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnr-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnr-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnr-data">
<TITLE>libstdcxx - Class basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>vtable for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnr-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15basic_stringbufIwSt11char_traitsIwESaIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringbuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-352">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-352">
<TITLE>vtable for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_stringbuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-353">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-353">
<TITLE>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_stringbuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cns-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cns-ints">
<TITLE>libstdcxx - Class basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_stringbuf_init(_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_stringbuf_init(_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekoff(long, _Ios_Seekdir, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::overflow(unsigned)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::overflow(unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::pbackfail(unsigned)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::pbackfail(unsigned)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::underflow()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::underflow()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf&lsqb;in-charge](_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf&lsqb;in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf&lsqb;not-in-charge](_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf&lsqb;not-in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cns-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_stringbuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cns-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cns-data">
<TITLE>libstdcxx - Class basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cns-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cns-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cns-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cns-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15messages_bynameIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-354">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-354">
<TITLE>vtable for messages_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;char&gt;</primary></indexterm>typeinfo for messages_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge]()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge deleting]()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_close(int) const</primary></indexterm>messages&lt;char&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::messages_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-355">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-355">
<TITLE>typeinfo for messages_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;char&gt;</primary></indexterm>typeinfo name for messages_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages_byname&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::messages_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnt-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnt-ints">
<TITLE>libstdcxx - Class messages_byname&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::messages_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>messages_byname&lt;char&gt;::messages_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::messages_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>messages_byname&lt;char&gt;::messages_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::messages_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>messages_byname&lt;char&gt;::messages_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::messages_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>messages_byname&lt;char&gt;::messages_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge deleting]()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge]()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname &lsqb;not-in-charge]()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnt-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::messages_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnt-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnt-data">
<TITLE>libstdcxx - Class messages_byname&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;char&gt;</primary></indexterm>typeinfo for messages_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;char&gt;</primary></indexterm>typeinfo name for messages_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for messages_byname&lt;char&gt;</primary></indexterm>vtable for messages_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnt-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15messages_bynameIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages_byname&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-356">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-356">
<TITLE>vtable for messages_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for messages_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge]()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge deleting]()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_close(int) const</primary></indexterm>messages&lt;wchar_t&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::messages_byname&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-357">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-357">
<TITLE>typeinfo for messages_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for messages_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages_byname&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::messages_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnu-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnu-ints">
<TITLE>libstdcxx - Class messages_byname&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::messages_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>messages_byname&lt;wchar_t&gt;::messages_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::messages_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>messages_byname&lt;wchar_t&gt;::messages_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::messages_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>messages_byname&lt;wchar_t&gt;::messages_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::messages_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>messages_byname&lt;wchar_t&gt;::messages_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge deleting]()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge]()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;not-in-charge]()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnu-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::messages_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnu-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnu-data">
<TITLE>libstdcxx - Class messages_byname&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for messages_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for messages_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for messages_byname&lt;wchar_t&gt;</primary></indexterm>vtable for messages_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnu-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15numpunct_bynameIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-358">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-358">
<TITLE>vtable for numpunct_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;char&gt;</primary></indexterm>typeinfo for numpunct_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge]()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge deleting]()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;char&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;char&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_grouping() const</primary></indexterm>numpunct&lt;char&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_truename() const</primary></indexterm>numpunct&lt;char&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_falsename() const</primary></indexterm>numpunct&lt;char&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-359">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-359">
<TITLE>typeinfo for numpunct_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;char&gt;</primary></indexterm>typeinfo name for numpunct_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct_byname&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::numpunct_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnv-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnv-ints">
<TITLE>libstdcxx - Class numpunct_byname&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::numpunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;char&gt;::numpunct_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::numpunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>numpunct_byname&lt;char&gt;::numpunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;char&gt;::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::numpunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>numpunct_byname&lt;char&gt;::numpunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge deleting]()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge]()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;not-in-charge]()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnv-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::numpunct_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnv-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnv-data">
<TITLE>libstdcxx - Class numpunct_byname&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;char&gt;</primary></indexterm>typeinfo for numpunct_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;char&gt;</primary></indexterm>typeinfo name for numpunct_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for numpunct_byname&lt;char&gt;</primary></indexterm>vtable for numpunct_byname&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnv-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15numpunct_bynameIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct_byname&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-360">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-360">
<TITLE>vtable for numpunct_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for numpunct_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge]()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge deleting]()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_grouping() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_truename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_falsename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct_byname&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-361">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-361">
<TITLE>typeinfo for numpunct_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for numpunct_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct_byname&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::numpunct_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnw-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnw-ints">
<TITLE>libstdcxx - Class numpunct_byname&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::numpunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::numpunct_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::numpunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::numpunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::numpunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::numpunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge deleting]()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge]()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;not-in-charge]()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnw-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::numpunct_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnw-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnw-data">
<TITLE>libstdcxx - Class numpunct_byname&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for numpunct_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for numpunct_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>vtable for numpunct_byname&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnw-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnw-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15time_get_bynameIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get_byname&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-362">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-362">
<TITLE>vtable for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_get_byname&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-363">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-363">
<TITLE>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_get_byname&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnx-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnx-ints">
<TITLE>libstdcxx - Class time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;not-in-charge]()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnx-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_get_byname&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnx-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnx-data">
<TITLE>libstdcxx - Class time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnx-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnx-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15time_get_bynameIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get_byname&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-364">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-364">
<TITLE>vtable for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_get_byname&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-365">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-365">
<TITLE>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_get_byname&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cny-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cny-ints">
<TITLE>libstdcxx - Class time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;not-in-charge]()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cny-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_get_byname&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cny-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cny-data">
<TITLE>libstdcxx - Class time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cny-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cny-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cny-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cny-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15time_put_bynameIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_put_byname&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-366">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-366">
<TITLE>vtable for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_put_byname&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-367">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-367">
<TITLE>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_put_byname&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnz-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnz-ints">
<TITLE>libstdcxx - Class time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;not-in-charge]()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cnz-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_put_byname&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnz-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnz-data">
<TITLE>libstdcxx - Class time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cnz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cnz-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15time_put_bynameIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_put_byname&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-368">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-368">
<TITLE>vtable for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_put_byname&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-369">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-369">
<TITLE>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_put_byname&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coa-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coa-ints">
<TITLE>libstdcxx - Class time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-coa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-coa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;not-in-charge]()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coa-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_put_byname&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coa-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coa-data">
<TITLE>libstdcxx - Class time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coa-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coa-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coa-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coa-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15underflow_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class underflow_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for underflow_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::underflow_error class
is described by <XREF LINKEND="cls-370">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-370">
<TITLE>vtable for underflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for underflow_error</primary></indexterm>typeinfo for underflow_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error &lsqb;in-charge]()</primary></indexterm>underflow_error::~underflow_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error &lsqb;in-charge deleting]()</primary></indexterm>underflow_error::~underflow_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::underflow_error  class
is described by <XREF LINKEND="rtti-371">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-371">
<TITLE>typeinfo for underflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for underflow_error</primary></indexterm>typeinfo name for underflow_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class underflow_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::underflow_error specified in <XREF linkend="tbl-libstdcxx-cob-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cob-ints">
<TITLE>libstdcxx - Class underflow_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::underflow_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>underflow_error::underflow_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cob-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::underflow_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>underflow_error::underflow_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cob-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error &lsqb;in-charge deleting]()</primary></indexterm>underflow_error::~underflow_error &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cob-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error &lsqb;in-charge]()</primary></indexterm>underflow_error::~underflow_error &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cob-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cob-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::underflow_error specified in <XREF linkend="tbl-libstdcxx-cob-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cob-data">
<TITLE>libstdcxx - Class underflow_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for underflow_error</primary></indexterm>typeinfo for underflow_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cob-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for underflow_error</primary></indexterm>typeinfo name for underflow_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cob-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for underflow_error</primary></indexterm>vtable for underflow_error(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cob-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cob-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt16invalid_argument -->
<SECT2>
<!--libgroup-->
<TITLE>Class invalid_argument</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for invalid_argument</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::invalid_argument class
is described by <XREF LINKEND="cls-372">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-372">
<TITLE>vtable for invalid_argument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for invalid_argument</primary></indexterm>typeinfo for invalid_argument</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument &lsqb;in-charge]()</primary></indexterm>invalid_argument::~invalid_argument &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument &lsqb;in-charge deleting]()</primary></indexterm>invalid_argument::~invalid_argument &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::invalid_argument  class
is described by <XREF LINKEND="rtti-373">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-373">
<TITLE>typeinfo for invalid_argument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for invalid_argument</primary></indexterm>typeinfo name for invalid_argument</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class invalid_argument</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::invalid_argument specified in <XREF linkend="tbl-libstdcxx-coc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coc-ints">
<TITLE>libstdcxx - Class invalid_argument Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::invalid_argument&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>invalid_argument::invalid_argument&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::invalid_argument&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>invalid_argument::invalid_argument&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument &lsqb;in-charge deleting]()</primary></indexterm>invalid_argument::~invalid_argument &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument &lsqb;in-charge]()</primary></indexterm>invalid_argument::~invalid_argument &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coc-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::invalid_argument specified in <XREF linkend="tbl-libstdcxx-coc-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coc-data">
<TITLE>libstdcxx - Class invalid_argument Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for invalid_argument</primary></indexterm>typeinfo for invalid_argument(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for invalid_argument</primary></indexterm>typeinfo name for invalid_argument(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for invalid_argument</primary></indexterm>vtable for invalid_argument(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coc-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt17moneypunct_bynameIcLb0EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;char, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;char, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;char, (bool)0&gt; class
is described by <XREF LINKEND="cls-374">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-374">
<TITLE>vtable for moneypunct_byname&lt;char, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;char, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)0&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;char, (bool)0&gt;  class
is described by <XREF LINKEND="rtti-375">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-375">
<TITLE>typeinfo for moneypunct_byname&lt;char, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;char, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;char, (bool)0&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct_byname&lt;char, (bool)0&gt; specified in <XREF linkend="tbl-libstdcxx-cod-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cod-ints">
<TITLE>libstdcxx - Class moneypunct_byname&lt;char, (bool)0&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;not-in-charge]()</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::~moneypunct_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cod-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct_byname&lt;char, (bool)0&gt; specified in <XREF linkend="tbl-libstdcxx-cod-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cod-data">
<TITLE>libstdcxx - Class moneypunct_byname&lt;char, (bool)0&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0&gt;::intl</primary></indexterm>moneypunct_byname&lt;char, (bool)0&gt;::intl(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cod-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;char, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cod-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;char, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cod-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct_byname&lt;char, (bool)0&gt;</primary></indexterm>vtable for moneypunct_byname&lt;char, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cod-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cod-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cod-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt17moneypunct_bynameIcLb1EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;char, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;char, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;char, (bool)1&gt; class
is described by <XREF LINKEND="cls-376">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-376">
<TITLE>vtable for moneypunct_byname&lt;char, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;char, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)1&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;char, (bool)1&gt;  class
is described by <XREF LINKEND="rtti-377">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-377">
<TITLE>typeinfo for moneypunct_byname&lt;char, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;char, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;char, (bool)1&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct_byname&lt;char, (bool)1&gt; specified in <XREF linkend="tbl-libstdcxx-coe-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coe-ints">
<TITLE>libstdcxx - Class moneypunct_byname&lt;char, (bool)1&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;not-in-charge]()</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::~moneypunct_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coe-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct_byname&lt;char, (bool)1&gt; specified in <XREF linkend="tbl-libstdcxx-coe-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coe-data">
<TITLE>libstdcxx - Class moneypunct_byname&lt;char, (bool)1&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1&gt;::intl</primary></indexterm>moneypunct_byname&lt;char, (bool)1&gt;::intl(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coe-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;char, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coe-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;char, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coe-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct_byname&lt;char, (bool)1&gt;</primary></indexterm>vtable for moneypunct_byname&lt;char, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coe-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coe-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coe-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt17moneypunct_bynameIwLb0EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;wchar_t, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;wchar_t, (bool)0&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;wchar_t, (bool)0&gt; class
is described by <XREF LINKEND="cls-378">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-378">
<TITLE>vtable for moneypunct_byname&lt;wchar_t, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;wchar_t, (bool)0&gt;  class
is described by <XREF LINKEND="rtti-379">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-379">
<TITLE>typeinfo for moneypunct_byname&lt;wchar_t, (bool)0&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)0&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;wchar_t, (bool)0&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct_byname&lt;wchar_t, (bool)0&gt; specified in <XREF linkend="tbl-libstdcxx-cof-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cof-ints">
<TITLE>libstdcxx - Class moneypunct_byname&lt;wchar_t, (bool)0&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;not-in-charge]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::~moneypunct_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cof-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct_byname&lt;wchar_t, (bool)0&gt; specified in <XREF linkend="tbl-libstdcxx-cof-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cof-data">
<TITLE>libstdcxx - Class moneypunct_byname&lt;wchar_t, (bool)0&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0&gt;::intl</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0&gt;::intl(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cof-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cof-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)0&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cof-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct_byname&lt;wchar_t, (bool)0&gt;</primary></indexterm>vtable for moneypunct_byname&lt;wchar_t, (bool)0&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cof-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cof-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cof-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt17moneypunct_bynameIwLb1EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;wchar_t, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;wchar_t, (bool)1&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;wchar_t, (bool)1&gt; class
is described by <XREF LINKEND="cls-380">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-380">
<TITLE>vtable for moneypunct_byname&lt;wchar_t, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;wchar_t, (bool)1&gt;  class
is described by <XREF LINKEND="rtti-381">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-381">
<TITLE>typeinfo for moneypunct_byname&lt;wchar_t, (bool)1&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)1&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;wchar_t, (bool)1&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct_byname&lt;wchar_t, (bool)1&gt; specified in <XREF linkend="tbl-libstdcxx-cog-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cog-ints">
<TITLE>libstdcxx - Class moneypunct_byname&lt;wchar_t, (bool)1&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::moneypunct_byname&lsqb;in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;not-in-charge]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::~moneypunct_byname &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cog-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct_byname&lt;wchar_t, (bool)1&gt; specified in <XREF linkend="tbl-libstdcxx-cog-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cog-data">
<TITLE>libstdcxx - Class moneypunct_byname&lt;wchar_t, (bool)1&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1&gt;::intl</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1&gt;::intl(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cog-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cog-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)1&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cog-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct_byname&lt;wchar_t, (bool)1&gt;</primary></indexterm>vtable for moneypunct_byname&lt;wchar_t, (bool)1&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cog-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cog-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cog-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt18basic_stringstreamIcSt11char_traitsIcESaIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-382">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-382">
<TITLE>vtable for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-383">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-383">
<TITLE>typeinfo for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coh-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coh-ints">
<TITLE>libstdcxx - Class basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream&lsqb;in-charge](_Ios_Openmode)</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream&lsqb;in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream&lsqb;not-in-charge](_Ios_Openmode)</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream&lsqb;not-in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;not-in-charge]()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coh-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coh-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coh-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coh-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coh-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coh-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coh-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coh-data">
<TITLE>libstdcxx - Class basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>VTT for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>vtable for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coh-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coh-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt18basic_stringstreamIwSt11char_traitsIwESaIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-384">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-384">
<TITLE>vtable for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_stringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-385">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-385">
<TITLE>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_stringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coi-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coi-ints">
<TITLE>libstdcxx - Class basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream&lsqb;in-charge](_Ios_Openmode)</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream&lsqb;in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream&lsqb;not-in-charge](_Ios_Openmode)</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream&lsqb;not-in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;not-in-charge]()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coi-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coi-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_stringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coi-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coi-data">
<TITLE>libstdcxx - Class basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coi-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt19basic_istringstreamIcSt11char_traitsIcESaIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-386">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-386">
<TITLE>vtable for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-387">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-387">
<TITLE>typeinfo for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coj-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coj-ints">
<TITLE>libstdcxx - Class basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream&lsqb;in-charge](_Ios_Openmode)</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream&lsqb;in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream&lsqb;not-in-charge](_Ios_Openmode)</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream&lsqb;not-in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;not-in-charge]()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-coj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coj-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-coj-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coj-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coj-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coj-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coj-data">
<TITLE>libstdcxx - Class basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>VTT for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>vtable for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coj-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt19basic_istringstreamIwSt11char_traitsIwESaIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-388">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-388">
<TITLE>vtable for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_istringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-389">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-389">
<TITLE>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_istringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cok-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cok-ints">
<TITLE>libstdcxx - Class basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream&lsqb;in-charge](_Ios_Openmode)</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream&lsqb;in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream&lsqb;not-in-charge](_Ios_Openmode)</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream&lsqb;not-in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;not-in-charge]()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cok-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cok-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cok-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cok-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_istringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cok-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cok-data">
<TITLE>libstdcxx - Class basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cok-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cok-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cok-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cok-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cok-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-390">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-390">
<TITLE>vtable for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-391">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-391">
<TITLE>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-col-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-col-ints">
<TITLE>libstdcxx - Class basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream&lsqb;in-charge](_Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream&lsqb;in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream&lsqb;not-in-charge](_Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream&lsqb;not-in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;not-in-charge]()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-col-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-col-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-col-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-col-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-col-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-col-data">
<TITLE>libstdcxx - Class basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-col-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-col-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>VTT for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-col-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>vtable for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-col-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-col-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt19basic_ostringstreamIwSt11char_traitsIwESaIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-392">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-392">
<TITLE>vtable for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ostringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-393">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-393">
<TITLE>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ostringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-com-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-com-ints">
<TITLE>libstdcxx - Class basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream&lsqb;in-charge](_Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream&lsqb;in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream&lsqb;not-in-charge](_Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream&lsqb;not-in-charge](_Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;not-in-charge]()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-com-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-com-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-com-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-com-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ostringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-com-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-com-data">
<TITLE>libstdcxx - Class basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-com-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-com-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-com-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-com-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-com-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt21__ctype_abstract_baseIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __ctype_abstract_base&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __ctype_abstract_base&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__ctype_abstract_base&lt;char&gt; class
is described by <XREF LINKEND="cls-394">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-394">
<TITLE>vtable for __ctype_abstract_base&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;char&gt;</primary></indexterm>typeinfo for __ctype_abstract_base&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge]()</primary></indexterm>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__ctype_abstract_base&lt;char&gt;  class
is described by <XREF LINKEND="rtti-395">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-395">
<TITLE>typeinfo for __ctype_abstract_base&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __ctype_abstract_base&lt;char&gt;</primary></indexterm>typeinfo name for __ctype_abstract_base&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_base</primary></indexterm>typeinfo for ctype_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __ctype_abstract_base&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__ctype_abstract_base&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-con-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-con-ints">
<TITLE>libstdcxx - Class __ctype_abstract_base&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()(GLIBCPP_3.2.4)<LINK LINKEND="std-231-65-tbl-libstdcxx-con-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge]()</primary></indexterm>__ctype_abstract_base&lt;char&gt;::~__ctype_abstract_base &lsqb;in-charge]()(GLIBCPP_3.2.4)<LINK LINKEND="std-231-65-tbl-libstdcxx-con-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-con-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__ctype_abstract_base&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-con-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-con-data">
<TITLE>libstdcxx - Class __ctype_abstract_base&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;char&gt;</primary></indexterm>typeinfo for __ctype_abstract_base&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-con-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __ctype_abstract_base&lt;char&gt;</primary></indexterm>typeinfo name for __ctype_abstract_base&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-con-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __ctype_abstract_base&lt;char&gt;</primary></indexterm>vtable for __ctype_abstract_base&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-con-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-con-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt21__ctype_abstract_baseIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__ctype_abstract_base&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-396">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-396">
<TITLE>vtable for __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;</primary></indexterm>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge]()</primary></indexterm>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__ctype_abstract_base&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-397">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-397">
<TITLE>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __ctype_abstract_base&lt;wchar_t&gt;</primary></indexterm>typeinfo name for __ctype_abstract_base&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_base</primary></indexterm>typeinfo for ctype_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__ctype_abstract_base&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-coo-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coo-ints">
<TITLE>libstdcxx - Class __ctype_abstract_base&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge deleting]()(GLIBCPP_3.2.4)<LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge]()</primary></indexterm>__ctype_abstract_base&lt;wchar_t&gt;::~__ctype_abstract_base &lsqb;in-charge]()(GLIBCPP_3.2.4)<LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coo-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__ctype_abstract_base&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-coo-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coo-data">
<TITLE>libstdcxx - Class __ctype_abstract_base&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;</primary></indexterm>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __ctype_abstract_base&lt;wchar_t&gt;</primary></indexterm>typeinfo name for __ctype_abstract_base&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __ctype_abstract_base&lt;wchar_t&gt;</primary></indexterm>vtable for __ctype_abstract_base&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coo-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt23__codecvt_abstract_baseIcc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__codecvt_abstract_base&lt;char, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cop-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cop-ints">
<TITLE>libstdcxx - Class __codecvt_abstract_base&lt;char, char, __mbstate_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()(GLIBCPP_3.2.4)<LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()</primary></indexterm>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()(GLIBCPP_3.2.4)<LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cop-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__codecvt_abstract_base&lt;char, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cop-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cop-data">
<TITLE>libstdcxx - Class __codecvt_abstract_base&lt;char, char, __mbstate_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cop-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cop-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt23__codecvt_abstract_baseIwc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-398">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-398">
<TITLE>vtable for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()</primary></indexterm>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-399">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-399">
<TITLE>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_base</primary></indexterm>typeinfo for codecvt_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-coq-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coq-ints">
<TITLE>libstdcxx - Class __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()(GLIBCPP_3.2.4)<LINK LINKEND="std-231-65-tbl-libstdcxx-coq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()</primary></indexterm>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()(GLIBCPP_3.2.4)<LINK LINKEND="std-231-65-tbl-libstdcxx-coq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coq-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-coq-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coq-data">
<TITLE>libstdcxx - Class __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;char&gt;</primary></indexterm>typeinfo for ctype&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>vtable for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coq-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt5ctypeIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ctype&lt;char&gt; class
is described by <XREF LINKEND="cls-400">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-400">
<TITLE>vtable for ctype&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;char&gt;</primary></indexterm>typeinfo for ctype&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype &lsqb;in-charge]()</primary></indexterm>ctype&lt;char&gt;::~ctype &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype &lsqb;in-charge deleting]()</primary></indexterm>ctype&lt;char&gt;::~ctype &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_is(unsigned short, char) const</primary></indexterm>ctype&lt;char&gt;::do_is(unsigned short, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_is(char const*, char const*, unsigned short*) const</primary></indexterm>ctype&lt;char&gt;::do_is(char const*, char const*, unsigned short*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_scan_is(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_scan_is(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_scan_not(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_scan_not(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char, char) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ctype&lt;char&gt;  class
is described by <XREF LINKEND="rtti-401">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-401">
<TITLE>typeinfo for ctype&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype&lt;char&gt;</primary></indexterm>typeinfo name for ctype&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ctype&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cor-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cor-ints">
<TITLE>libstdcxx - Class ctype&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_scan_is(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_scan_is(unsigned short, char const*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_scan_not(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_scan_not(unsigned short, char const*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_is(char const*, char const*, unsigned short*) const</primary></indexterm>ctype&lt;char&gt;::do_is(char const*, char const*, unsigned short*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_is(unsigned short, char) const</primary></indexterm>ctype&lt;char&gt;::do_is(unsigned short, char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char, char) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char, char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, int, int, unsigned, ctype&lt;char&gt; const&, _Ios_Iostate&) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, int, int, unsigned, ctype&lt;char&gt; const&, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, int, int, unsigned long, ctype&lt;char&gt; const&, _Ios_Iostate&) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, int, int, unsigned long, ctype&lt;char&gt; const&, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::classic_table()</primary></indexterm>ctype&lt;char&gt;::classic_table()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::ctype&lsqb;in-charge](__locale_struct*, unsigned short const*, bool, unsigned long)</primary></indexterm>ctype&lt;char&gt;::ctype&lsqb;in-charge](__locale_struct*, unsigned short const*, bool, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::ctype&lsqb;in-charge](unsigned short const*, bool, unsigned long)</primary></indexterm>ctype&lt;char&gt;::ctype&lsqb;in-charge](unsigned short const*, bool, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::ctype&lsqb;not-in-charge](__locale_struct*, unsigned short const*, bool, unsigned long)</primary></indexterm>ctype&lt;char&gt;::ctype&lsqb;not-in-charge](__locale_struct*, unsigned short const*, bool, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::ctype&lsqb;not-in-charge](unsigned short const*, bool, unsigned long)</primary></indexterm>ctype&lt;char&gt;::ctype&lsqb;not-in-charge](unsigned short const*, bool, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype &lsqb;in-charge deleting]()</primary></indexterm>ctype&lt;char&gt;::~ctype &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype &lsqb;in-charge]()</primary></indexterm>ctype&lt;char&gt;::~ctype &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype &lsqb;not-in-charge]()</primary></indexterm>ctype&lt;char&gt;::~ctype &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;ctype&lt;char&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;ctype&lt;char&gt; &gt;(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cor-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ctype&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cor-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cor-data">
<TITLE>libstdcxx - Class ctype&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::table_size</primary></indexterm>ctype&lt;char&gt;::table_size(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::id</primary></indexterm>ctype&lt;char&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cor-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;char&gt;</primary></indexterm>typeinfo for ctype&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cor-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype&lt;char&gt;</primary></indexterm>typeinfo name for ctype&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cor-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ctype&lt;char&gt;</primary></indexterm>vtable for ctype&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cor-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cor-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cor-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt5ctypeIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ctype&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-402">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-402">
<TITLE>vtable for ctype&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;wchar_t&gt;</primary></indexterm>typeinfo for ctype&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge]()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge deleting]()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_is(unsigned short, wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_is(unsigned short, wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_is(wchar_t const*, wchar_t const*, unsigned short*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_is(wchar_t const*, wchar_t const*, unsigned short*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_toupper(wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_toupper(wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_toupper(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_toupper(wchar_t*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_tolower(wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_tolower(wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_tolower(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_tolower(wchar_t*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_widen(char) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_widen(char const*, char const*, wchar_t*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_widen(char const*, char const*, wchar_t*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_narrow(wchar_t, char) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_narrow(wchar_t, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_narrow(wchar_t const*, wchar_t const*, char, char*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_narrow(wchar_t const*, wchar_t const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ctype&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-403">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-403">
<TITLE>typeinfo for ctype&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype&lt;wchar_t&gt;</primary></indexterm>typeinfo name for ctype&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ctype&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cos-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cos-ints">
<TITLE>libstdcxx - Class ctype&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_tolower(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_tolower(wchar_t*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_tolower(wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_tolower(wchar_t) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_toupper(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_toupper(wchar_t*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_toupper(wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_toupper(wchar_t) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::_M_convert_to_wmask(unsigned short) const</primary></indexterm>ctype&lt;wchar_t&gt;::_M_convert_to_wmask(unsigned short) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_is(wchar_t const*, wchar_t const*, unsigned short*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_is(wchar_t const*, wchar_t const*, unsigned short*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_is(unsigned short, wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_is(unsigned short, wchar_t) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_widen(char const*, char const*, wchar_t*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_widen(char const*, char const*, wchar_t*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_widen(char) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_widen(char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_narrow(wchar_t const*, wchar_t const*, char, char*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_narrow(wchar_t const*, wchar_t const*, char, char*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_narrow(wchar_t, char) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_narrow(wchar_t, char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::ctype&lsqb;in-charge](__locale_struct*, unsigned long)</primary></indexterm>ctype&lt;wchar_t&gt;::ctype&lsqb;in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::ctype&lsqb;in-charge](unsigned long)</primary></indexterm>ctype&lt;wchar_t&gt;::ctype&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::ctype&lsqb;not-in-charge](__locale_struct*, unsigned long)</primary></indexterm>ctype&lt;wchar_t&gt;::ctype&lsqb;not-in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::ctype&lsqb;not-in-charge](unsigned long)</primary></indexterm>ctype&lt;wchar_t&gt;::ctype&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge deleting]()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge]()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype &lsqb;not-in-charge]()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cos-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ctype&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cos-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cos-data">
<TITLE>libstdcxx - Class ctype&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::id</primary></indexterm>ctype&lt;wchar_t&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cos-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;wchar_t&gt;</primary></indexterm>typeinfo for ctype&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cos-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype&lt;wchar_t&gt;</primary></indexterm>typeinfo name for ctype&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cos-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ctype&lt;wchar_t&gt;</primary></indexterm>vtable for ctype&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cos-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cos-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cos-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7codecvtIcc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt&lt;char, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-404">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-404">
<TITLE>vtable for codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt&lt;char, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-405">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-405">
<TITLE>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Class data for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__codecvt_abstract_base&lt;char, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-406">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-406">
<TITLE>vtable for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()</primary></indexterm>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;::~__codecvt_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-407">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-407">
<TITLE>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_base</primary></indexterm>typeinfo for codecvt_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::codecvt&lt;char, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cot-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cot-ints">
<TITLE>libstdcxx - Class codecvt&lt;char, char, __mbstate_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_max_length() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_max_length() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::codecvt&lsqb;in-charge](unsigned long)</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::codecvt&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::codecvt&lsqb;not-in-charge](unsigned long)</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::codecvt&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;not-in-charge]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cot-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::codecvt&lt;char, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cot-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cot-data">
<TITLE>libstdcxx - Class codecvt&lt;char, char, __mbstate_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::id</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cot-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cot-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cot-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cot-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt&lt;char, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cot-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</primary></indexterm>vtable for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cot-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>vtable for codecvt&lt;char, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cot-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cot-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cot-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7codecvtIwc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt&lt;wchar_t, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-408">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-408">
<TITLE>vtable for codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt&lt;wchar_t, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-409">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-409">
<TITLE>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::codecvt&lt;wchar_t, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cou-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cou-ints">
<TITLE>libstdcxx - Class codecvt&lt;wchar_t, char, __mbstate_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_max_length() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_max_length() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::codecvt&lsqb;in-charge](unsigned long)</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::codecvt&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::codecvt&lsqb;not-in-charge](unsigned long)</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::codecvt&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;not-in-charge]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cou-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::codecvt&lt;wchar_t, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cou-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cou-data">
<TITLE>libstdcxx - Class codecvt&lt;wchar_t, char, __mbstate_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::id</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cou-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cou-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cou-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>vtable for codecvt&lt;wchar_t, char, __mbstate_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cou-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cou-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cou-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7collateIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for collate&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate&lt;char&gt; class
is described by <XREF LINKEND="cls-410">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-410">
<TITLE>vtable for collate&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;char&gt;</primary></indexterm>typeinfo for collate&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate &lsqb;in-charge]()</primary></indexterm>collate&lt;char&gt;::~collate &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate &lsqb;in-charge deleting]()</primary></indexterm>collate&lt;char&gt;::~collate &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_transform(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_transform(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_hash(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_hash(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate&lt;char&gt;  class
is described by <XREF LINKEND="rtti-411">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-411">
<TITLE>typeinfo for collate&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;char&gt;</primary></indexterm>typeinfo name for collate&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class collate&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::collate&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cov-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cov-ints">
<TITLE>libstdcxx - Class collate&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::_M_compare(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::_M_compare(char const*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::_M_transform(char*, char const*, unsigned) const</primary></indexterm>collate&lt;char&gt;::_M_transform(char*, char const*, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const</primary></indexterm>collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_transform(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_transform(char const*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::hash(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::hash(char const*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::compare(char const*, char const*, char const*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_hash(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_hash(char const*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::transform(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::transform(char const*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::collate&lsqb;in-charge](__locale_struct*, unsigned)</primary></indexterm>collate&lt;char&gt;::collate&lsqb;in-charge](__locale_struct*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::collate&lsqb;in-charge](__locale_struct*, unsigned long)</primary></indexterm>collate&lt;char&gt;::collate&lsqb;in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::collate&lsqb;in-charge](unsigned)</primary></indexterm>collate&lt;char&gt;::collate&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::collate&lsqb;in-charge](unsigned long)</primary></indexterm>collate&lt;char&gt;::collate&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::collate&lsqb;not-in-charge](__locale_struct*, unsigned)</primary></indexterm>collate&lt;char&gt;::collate&lsqb;not-in-charge](__locale_struct*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::collate&lsqb;not-in-charge](__locale_struct*, unsigned long)</primary></indexterm>collate&lt;char&gt;::collate&lsqb;not-in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::collate&lsqb;not-in-charge](unsigned)</primary></indexterm>collate&lt;char&gt;::collate&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::collate&lsqb;not-in-charge](unsigned long)</primary></indexterm>collate&lt;char&gt;::collate&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate &lsqb;in-charge deleting]()</primary></indexterm>collate&lt;char&gt;::~collate &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate &lsqb;in-charge]()</primary></indexterm>collate&lt;char&gt;::~collate &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate &lsqb;not-in-charge]()</primary></indexterm>collate&lt;char&gt;::~collate &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cov-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::collate&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cov-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cov-data">
<TITLE>libstdcxx - Class collate&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for collate&lt;char&gt;::id</primary></indexterm>guard variable for collate&lt;char&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cov-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::id</primary></indexterm>collate&lt;char&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cov-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;char&gt;</primary></indexterm>typeinfo for collate&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cov-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;char&gt;</primary></indexterm>typeinfo name for collate&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cov-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for collate&lt;char&gt;</primary></indexterm>vtable for collate&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cov-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cov-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cov-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7collateIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for collate&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-412">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-412">
<TITLE>vtable for collate&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;wchar_t&gt;</primary></indexterm>typeinfo for collate&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge]()</primary></indexterm>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge deleting]()</primary></indexterm>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-413">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-413">
<TITLE>typeinfo for collate&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;wchar_t&gt;</primary></indexterm>typeinfo name for collate&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class collate&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::collate&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cow-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cow-ints">
<TITLE>libstdcxx - Class collate&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::_M_compare(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::_M_compare(wchar_t const*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::_M_transform(wchar_t*, wchar_t const*, unsigned) const</primary></indexterm>collate&lt;wchar_t&gt;::_M_transform(wchar_t*, wchar_t const*, unsigned) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::_M_transform(wchar_t*, wchar_t const*, unsigned long) const</primary></indexterm>collate&lt;wchar_t&gt;::_M_transform(wchar_t*, wchar_t const*, unsigned long) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::hash(wchar_t const*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::transform(wchar_t const*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::collate&lsqb;in-charge](__locale_struct*, unsigned)</primary></indexterm>collate&lt;wchar_t&gt;::collate&lsqb;in-charge](__locale_struct*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::collate&lsqb;in-charge](__locale_struct*, unsigned long)</primary></indexterm>collate&lt;wchar_t&gt;::collate&lsqb;in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::collate&lsqb;in-charge](unsigned)</primary></indexterm>collate&lt;wchar_t&gt;::collate&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::collate&lsqb;in-charge](unsigned long)</primary></indexterm>collate&lt;wchar_t&gt;::collate&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::collate&lsqb;not-in-charge](__locale_struct*, unsigned)</primary></indexterm>collate&lt;wchar_t&gt;::collate&lsqb;not-in-charge](__locale_struct*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::collate&lsqb;not-in-charge](__locale_struct*, unsigned long)</primary></indexterm>collate&lt;wchar_t&gt;::collate&lsqb;not-in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::collate&lsqb;not-in-charge](unsigned)</primary></indexterm>collate&lt;wchar_t&gt;::collate&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::collate&lsqb;not-in-charge](unsigned long)</primary></indexterm>collate&lt;wchar_t&gt;::collate&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge deleting]()</primary></indexterm>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge]()</primary></indexterm>collate&lt;wchar_t&gt;::~collate &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate &lsqb;not-in-charge]()</primary></indexterm>collate&lt;wchar_t&gt;::~collate &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cow-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::collate&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cow-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cow-data">
<TITLE>libstdcxx - Class collate&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for collate&lt;wchar_t&gt;::id</primary></indexterm>guard variable for collate&lt;wchar_t&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cow-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::id</primary></indexterm>collate&lt;wchar_t&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cow-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;wchar_t&gt;</primary></indexterm>typeinfo for collate&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cow-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;wchar_t&gt;</primary></indexterm>typeinfo name for collate&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cow-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for collate&lt;wchar_t&gt;</primary></indexterm>vtable for collate&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cow-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cow-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cow-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-414">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-414">
<TITLE>vtable for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge]()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-415">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-415">
<TITLE>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cox-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cox-ints">
<TITLE>libstdcxx - Class num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&, int&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&, int&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_float(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_float(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_get&lsqb;in-charge](unsigned)</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_get&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_get&lsqb;in-charge](unsigned long)</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_get&lsqb;not-in-charge](unsigned)</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_get&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge]()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;not-in-charge]()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cox-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cox-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cox-data">
<TITLE>libstdcxx - Class num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cox-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cox-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cox-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cox-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cox-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cox-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cox-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::num_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-416">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-416">
<TITLE>vtable for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge]()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::num_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-417">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-417">
<TITLE>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::num_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coy-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coy-ints">
<TITLE>libstdcxx - Class num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&, int&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&, int&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_float(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_float(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_get&lsqb;in-charge](unsigned)</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_get&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_get&lsqb;in-charge](unsigned long)</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_get&lsqb;not-in-charge](unsigned)</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_get&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge]()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;not-in-charge]()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coy-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::num_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coy-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coy-data">
<TITLE>libstdcxx - Class num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coy-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coy-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coy-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coy-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coy-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coy-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coy-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-418">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-418">
<TITLE>vtable for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge]()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-419">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-419">
<TITLE>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coz-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coz-ints">
<TITLE>libstdcxx - Class num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_widen_int(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char*, int) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_widen_int(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char*, int) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_int&lt;long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, char, long) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_int&lt;long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, char, long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_int&lt;unsigned long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, char, unsigned long) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_int&lt;unsigned long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, char, unsigned long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_int&lt;long long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, char, long long) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_int&lt;long long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, char, long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_int&lt;unsigned long long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, char, unsigned long long) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_int&lt;unsigned long long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, char, unsigned long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_widen_float(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char*, int) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_widen_float(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char*, int) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_float&lt;double&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, double) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_float&lt;double&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_float&lt;long double&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, long double) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_convert_float&lt;long double&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, long double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char const*, int) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char const*, int) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_put&lsqb;in-charge](unsigned)</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_put&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_put&lsqb;in-charge](unsigned long)</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_put&lsqb;not-in-charge](unsigned)</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_put&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::num_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge]()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;not-in-charge]()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coz-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coz-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coz-data">
<TITLE>libstdcxx - Class num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-coz-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-coz-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-coz-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-coz-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-420">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-420">
<TITLE>vtable for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge]()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-421">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-421">
<TITLE>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpa-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpa-ints">
<TITLE>libstdcxx - Class num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_widen_int(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char*, int) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_widen_int(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char*, int) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_int&lt;long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, char, long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_int&lt;long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, char, long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_int&lt;unsigned long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, char, unsigned long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_int&lt;unsigned long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, char, unsigned long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_int&lt;long long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, char, long long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_int&lt;long long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, char, long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_int&lt;unsigned long long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, char, unsigned long long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_int&lt;unsigned long long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, char, unsigned long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_widen_float(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char*, int) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_widen_float(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char*, int) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_float&lt;double&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, double) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_float&lt;double&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_float&lt;long double&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, long double) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_convert_float&lt;long double&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, long double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, wchar_t const*, int) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, wchar_t const*, int) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_put&lsqb;in-charge](unsigned)</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_put&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_put&lsqb;in-charge](unsigned long)</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_put&lsqb;not-in-charge](unsigned)</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_put&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::num_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge]()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;not-in-charge]()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpa-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpa-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpa-data">
<TITLE>libstdcxx - Class num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpa-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpa-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpa-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpa-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpa-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpa-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8bad_cast -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_cast</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_cast</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_cast class
is described by <XREF LINKEND="cls-422">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-422">
<TITLE>vtable for bad_cast</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_cast</primary></indexterm>typeinfo for bad_cast</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;in-charge]()</primary></indexterm>bad_cast::~bad_cast &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;in-charge deleting]()</primary></indexterm>bad_cast::~bad_cast &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_cast  class
is described by <XREF LINKEND="rtti-423">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-423">
<TITLE>typeinfo for bad_cast</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_cast</primary></indexterm>typeinfo name for bad_cast</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_cast</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::bad_cast specified in <XREF linkend="tbl-libstdcxx-cpb-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpb-ints">
<TITLE>libstdcxx - Class bad_cast Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;in-charge deleting]()</primary></indexterm>bad_cast::~bad_cast &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;in-charge]()</primary></indexterm>bad_cast::~bad_cast &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;not-in-charge]()</primary></indexterm>bad_cast::~bad_cast &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpb-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::bad_cast specified in <XREF linkend="tbl-libstdcxx-cpb-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpb-data">
<TITLE>libstdcxx - Class bad_cast Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_cast</primary></indexterm>typeinfo for bad_cast(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_cast</primary></indexterm>typeinfo name for bad_cast(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for bad_cast</primary></indexterm>vtable for bad_cast(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpb-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpb-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8ios_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class ios_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ios_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::ios_base  class
is described by <XREF LINKEND="rtti-424">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-424">
<TITLE>typeinfo for ios_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base</primary></indexterm>typeinfo name for ios_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ios_base</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ios_base specified in <XREF linkend="tbl-libstdcxx-cpc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpc-ints">
<TITLE>libstdcxx - Class ios_base Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::_M_grow_words(int)</primary></indexterm>ios_base::_M_grow_words(int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::sync_with_stdio(bool)</primary></indexterm>ios_base::sync_with_stdio(bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::_M_call_callbacks(ios_base::event)</primary></indexterm>ios_base::_M_call_callbacks(ios_base::event)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::register_callback(void (*)(ios_base::event, ios_base&, int), int)</primary></indexterm>ios_base::register_callback(void (*)(ios_base::event, ios_base&, int), int)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::_M_dispose_callbacks()</primary></indexterm>ios_base::_M_dispose_callbacks()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::_S_ios_create(bool)</primary></indexterm>ios_base::Init::_S_ios_create(bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::_S_ios_destroy()</primary></indexterm>ios_base::Init::_S_ios_destroy()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::Init&lsqb;in-charge]()</primary></indexterm>ios_base::Init::Init&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::Init&lsqb;not-in-charge]()</primary></indexterm>ios_base::Init::Init&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::~Init &lsqb;in-charge]()</primary></indexterm>ios_base::Init::~Init &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::~Init &lsqb;not-in-charge]()</primary></indexterm>ios_base::Init::~Init &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::imbue(locale const&)</primary></indexterm>ios_base::imbue(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::xalloc()</primary></indexterm>ios_base::xalloc()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::_M_init()</primary></indexterm>ios_base::_M_init()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::failure&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>ios_base::failure::failure&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::failure&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>ios_base::failure::failure&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure &lsqb;in-charge deleting]()</primary></indexterm>ios_base::failure::~failure &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure &lsqb;in-charge]()</primary></indexterm>ios_base::failure::~failure &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure &lsqb;not-in-charge]()</primary></indexterm>ios_base::failure::~failure &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::ios_base&lsqb;in-charge]()</primary></indexterm>ios_base::ios_base&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::ios_base&lsqb;not-in-charge]()</primary></indexterm>ios_base::ios_base&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::~ios_base &lsqb;in-charge]()</primary></indexterm>ios_base::~ios_base &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::~ios_base &lsqb;not-in-charge]()</primary></indexterm>ios_base::~ios_base &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpc-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ios_base specified in <XREF linkend="tbl-libstdcxx-cpc-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpc-data">
<TITLE>libstdcxx - Class ios_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::floatfield</primary></indexterm>ios_base::floatfield(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::scientific</primary></indexterm>ios_base::scientific(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::adjustfield</primary></indexterm>ios_base::adjustfield(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::_S_local_word_size</primary></indexterm>ios_base::_S_local_word_size(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::in</primary></indexterm>ios_base::in(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::app</primary></indexterm>ios_base::app(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::ate</primary></indexterm>ios_base::ate(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::beg</primary></indexterm>ios_base::beg(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::cur</primary></indexterm>ios_base::cur(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::dec</primary></indexterm>ios_base::dec(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::end</primary></indexterm>ios_base::end(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::hex</primary></indexterm>ios_base::hex(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::oct</primary></indexterm>ios_base::oct(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::out</primary></indexterm>ios_base::out(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::_S_ios_base_init</primary></indexterm>ios_base::Init::_S_ios_base_init(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::_S_synced_with_stdio</primary></indexterm>ios_base::Init::_S_synced_with_stdio(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::left</primary></indexterm>ios_base::left(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::fixed</primary></indexterm>ios_base::fixed(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::right</primary></indexterm>ios_base::right(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::trunc</primary></indexterm>ios_base::trunc(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::badbit</primary></indexterm>ios_base::badbit(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::binary</primary></indexterm>ios_base::binary(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::eofbit</primary></indexterm>ios_base::eofbit(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::skipws</primary></indexterm>ios_base::skipws(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failbit</primary></indexterm>ios_base::failbit(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::goodbit</primary></indexterm>ios_base::goodbit(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::showpos</primary></indexterm>ios_base::showpos(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::unitbuf</primary></indexterm>ios_base::unitbuf(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::internal</primary></indexterm>ios_base::internal(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::showbase</primary></indexterm>ios_base::showbase(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::basefield</primary></indexterm>ios_base::basefield(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::boolalpha</primary></indexterm>ios_base::boolalpha(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::showpoint</primary></indexterm>ios_base::showpoint(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::uppercase</primary></indexterm>ios_base::uppercase(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base</primary></indexterm>typeinfo for ios_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpc-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base</primary></indexterm>typeinfo name for ios_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpc-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpc-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpc-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8messagesIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages&lt;char&gt; class
is described by <XREF LINKEND="cls-425">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-425">
<TITLE>vtable for messages&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;char&gt;</primary></indexterm>typeinfo for messages&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages &lsqb;in-charge]()</primary></indexterm>messages&lt;char&gt;::~messages &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages &lsqb;in-charge deleting]()</primary></indexterm>messages&lt;char&gt;::~messages &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_close(int) const</primary></indexterm>messages&lt;char&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::messages&lt;char&gt;  class
is described by <XREF LINKEND="rtti-426">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-426">
<TITLE>typeinfo for messages&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages&lt;char&gt;</primary></indexterm>typeinfo name for messages&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_base</primary></indexterm>typeinfo for messages_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::messages&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cpd-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpd-ints">
<TITLE>libstdcxx - Class messages&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::_M_convert_to_char(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::_M_convert_to_char(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::_M_convert_from_char(char*) const</primary></indexterm>messages&lt;char&gt;::_M_convert_from_char(char*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;char&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&, char const*) const</primary></indexterm>messages&lt;char&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::close(int) const</primary></indexterm>messages&lt;char&gt;::close(int) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_close(int) const</primary></indexterm>messages&lt;char&gt;::do_close(int) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>messages&lt;char&gt;::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>messages&lt;char&gt;::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::messages&lsqb;in-charge](unsigned)</primary></indexterm>messages&lt;char&gt;::messages&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::messages&lsqb;in-charge](unsigned long)</primary></indexterm>messages&lt;char&gt;::messages&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>messages&lt;char&gt;::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>messages&lt;char&gt;::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::messages&lsqb;not-in-charge](unsigned)</primary></indexterm>messages&lt;char&gt;::messages&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::messages&lsqb;not-in-charge](unsigned long)</primary></indexterm>messages&lt;char&gt;::messages&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages &lsqb;in-charge deleting]()</primary></indexterm>messages&lt;char&gt;::~messages &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages &lsqb;in-charge]()</primary></indexterm>messages&lt;char&gt;::~messages &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages &lsqb;not-in-charge]()</primary></indexterm>messages&lt;char&gt;::~messages &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpd-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::messages&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cpd-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpd-data">
<TITLE>libstdcxx - Class messages&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for messages&lt;char&gt;::id</primary></indexterm>guard variable for messages&lt;char&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpd-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::id</primary></indexterm>messages&lt;char&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;char&gt;</primary></indexterm>typeinfo for messages&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpd-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages&lt;char&gt;</primary></indexterm>typeinfo name for messages&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpd-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for messages&lt;char&gt;</primary></indexterm>vtable for messages&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpd-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpd-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpd-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8messagesIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-427">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-427">
<TITLE>vtable for messages&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;wchar_t&gt;</primary></indexterm>typeinfo for messages&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge]()</primary></indexterm>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge deleting]()</primary></indexterm>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_close(int) const</primary></indexterm>messages&lt;wchar_t&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::messages&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-428">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-428">
<TITLE>typeinfo for messages&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages&lt;wchar_t&gt;</primary></indexterm>typeinfo name for messages&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_base</primary></indexterm>typeinfo for messages_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::messages&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cpe-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpe-ints">
<TITLE>libstdcxx - Class messages&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::_M_convert_to_char(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::_M_convert_to_char(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::_M_convert_from_char(char*) const</primary></indexterm>messages&lt;wchar_t&gt;::_M_convert_from_char(char*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;wchar_t&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&, char const*) const</primary></indexterm>messages&lt;wchar_t&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::close(int) const</primary></indexterm>messages&lt;wchar_t&gt;::close(int) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_close(int) const</primary></indexterm>messages&lt;wchar_t&gt;::do_close(int) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>messages&lt;wchar_t&gt;::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>messages&lt;wchar_t&gt;::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::messages&lsqb;in-charge](unsigned)</primary></indexterm>messages&lt;wchar_t&gt;::messages&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::messages&lsqb;in-charge](unsigned long)</primary></indexterm>messages&lt;wchar_t&gt;::messages&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>messages&lt;wchar_t&gt;::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)</primary></indexterm>messages&lt;wchar_t&gt;::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::messages&lsqb;not-in-charge](unsigned)</primary></indexterm>messages&lt;wchar_t&gt;::messages&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::messages&lsqb;not-in-charge](unsigned long)</primary></indexterm>messages&lt;wchar_t&gt;::messages&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge deleting]()</primary></indexterm>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge]()</primary></indexterm>messages&lt;wchar_t&gt;::~messages &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages &lsqb;not-in-charge]()</primary></indexterm>messages&lt;wchar_t&gt;::~messages &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpe-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::messages&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cpe-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpe-data">
<TITLE>libstdcxx - Class messages&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for messages&lt;wchar_t&gt;::id</primary></indexterm>guard variable for messages&lt;wchar_t&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpe-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::id</primary></indexterm>messages&lt;wchar_t&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;wchar_t&gt;</primary></indexterm>typeinfo for messages&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpe-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages&lt;wchar_t&gt;</primary></indexterm>typeinfo name for messages&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpe-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for messages&lt;wchar_t&gt;</primary></indexterm>vtable for messages&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpe-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpe-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpe-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8numpunctIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct&lt;char&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct&lt;char&gt; class
is described by <XREF LINKEND="cls-429">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-429">
<TITLE>vtable for numpunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;char&gt;</primary></indexterm>typeinfo for numpunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge]()</primary></indexterm>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge deleting]()</primary></indexterm>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;char&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;char&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_grouping() const</primary></indexterm>numpunct&lt;char&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_truename() const</primary></indexterm>numpunct&lt;char&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_falsename() const</primary></indexterm>numpunct&lt;char&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct&lt;char&gt;  class
is described by <XREF LINKEND="rtti-430">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-430">
<TITLE>typeinfo for numpunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;char&gt;</primary></indexterm>typeinfo name for numpunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::numpunct&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cpf-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpf-ints">
<TITLE>libstdcxx - Class numpunct&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_grouping() const</primary></indexterm>numpunct&lt;char&gt;::do_grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_truename() const</primary></indexterm>numpunct&lt;char&gt;::do_truename() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_falsename() const</primary></indexterm>numpunct&lt;char&gt;::do_falsename() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::decimal_point() const</primary></indexterm>numpunct&lt;char&gt;::decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::thousands_sep() const</primary></indexterm>numpunct&lt;char&gt;::thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;char&gt;::do_decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;char&gt;::do_thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::grouping() const</primary></indexterm>numpunct&lt;char&gt;::grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::truename() const</primary></indexterm>numpunct&lt;char&gt;::truename() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::falsename() const</primary></indexterm>numpunct&lt;char&gt;::falsename() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::_M_initialize_numpunct(__locale_struct*)</primary></indexterm>numpunct&lt;char&gt;::_M_initialize_numpunct(__locale_struct*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::numpunct&lsqb;in-charge](__locale_struct*, unsigned)</primary></indexterm>numpunct&lt;char&gt;::numpunct&lsqb;in-charge](__locale_struct*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::numpunct&lsqb;in-charge](__locale_struct*, unsigned long)</primary></indexterm>numpunct&lt;char&gt;::numpunct&lsqb;in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpf-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::numpunct&lsqb;in-charge](unsigned)</primary></indexterm>numpunct&lt;char&gt;::numpunct&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::numpunct&lsqb;in-charge](unsigned long)</primary></indexterm>numpunct&lt;char&gt;::numpunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned)</primary></indexterm>numpunct&lt;char&gt;::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned long)</primary></indexterm>numpunct&lt;char&gt;::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpf-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::numpunct&lsqb;not-in-charge](unsigned)</primary></indexterm>numpunct&lt;char&gt;::numpunct&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::numpunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>numpunct&lt;char&gt;::numpunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge deleting]()</primary></indexterm>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge]()</primary></indexterm>numpunct&lt;char&gt;::~numpunct &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct &lsqb;not-in-charge]()</primary></indexterm>numpunct&lt;char&gt;::~numpunct &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpf-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpf-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::numpunct&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cpf-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpf-data">
<TITLE>libstdcxx - Class numpunct&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for numpunct&lt;char&gt;::id</primary></indexterm>guard variable for numpunct&lt;char&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::id</primary></indexterm>numpunct&lt;char&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;char&gt;</primary></indexterm>typeinfo for numpunct&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;char&gt;</primary></indexterm>typeinfo name for numpunct&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for numpunct&lt;char&gt;</primary></indexterm>vtable for numpunct&lt;char&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpf-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpf-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpf-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8numpunctIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-431">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-431">
<TITLE>vtable for numpunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;wchar_t&gt;</primary></indexterm>typeinfo for numpunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge]()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge deleting]()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_grouping() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_truename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_falsename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-432">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-432">
<TITLE>typeinfo for numpunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;wchar_t&gt;</primary></indexterm>typeinfo name for numpunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::numpunct&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cpg-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpg-ints">
<TITLE>libstdcxx - Class numpunct&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_grouping() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_truename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_truename() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_falsename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_falsename() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::decimal_point() const</primary></indexterm>numpunct&lt;wchar_t&gt;::decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t&gt;::thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_decimal_point() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_thousands_sep() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::grouping() const</primary></indexterm>numpunct&lt;wchar_t&gt;::grouping() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::truename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::truename() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::falsename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::falsename() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::_M_initialize_numpunct(__locale_struct*)</primary></indexterm>numpunct&lt;wchar_t&gt;::_M_initialize_numpunct(__locale_struct*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::numpunct&lsqb;in-charge](__locale_struct*, unsigned)</primary></indexterm>numpunct&lt;wchar_t&gt;::numpunct&lsqb;in-charge](__locale_struct*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::numpunct&lsqb;in-charge](__locale_struct*, unsigned long)</primary></indexterm>numpunct&lt;wchar_t&gt;::numpunct&lsqb;in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::numpunct&lsqb;in-charge](unsigned long)</primary></indexterm>numpunct&lt;wchar_t&gt;::numpunct&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned)</primary></indexterm>numpunct&lt;wchar_t&gt;::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned long)</primary></indexterm>numpunct&lt;wchar_t&gt;::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::numpunct&lsqb;not-in-charge](unsigned long)</primary></indexterm>numpunct&lt;wchar_t&gt;::numpunct&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge deleting]()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge]()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;not-in-charge]()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpg-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::numpunct&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cpg-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpg-data">
<TITLE>libstdcxx - Class numpunct&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for numpunct&lt;wchar_t&gt;::id</primary></indexterm>guard variable for numpunct&lt;wchar_t&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpg-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::id</primary></indexterm>numpunct&lt;wchar_t&gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;wchar_t&gt;</primary></indexterm>typeinfo for numpunct&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpg-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;wchar_t&gt;</primary></indexterm>typeinfo name for numpunct&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpg-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for numpunct&lt;wchar_t&gt;</primary></indexterm>vtable for numpunct&lt;wchar_t&gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpg-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpg-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpg-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-433">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-433">
<TITLE>vtable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge]()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-434">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-434">
<TITLE>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cph-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cph-ints">
<TITLE>libstdcxx - Class time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::date_order() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, int, int, unsigned, ctype&lt;char&gt; const&, _Ios_Iostate&) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, int, int, unsigned, ctype&lt;char&gt; const&, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, int, int, unsigned long, ctype&lt;char&gt; const&, _Ios_Iostate&) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, int, int, unsigned long, ctype&lt;char&gt; const&, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_name(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, char const**, unsigned, _Ios_Iostate&) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_name(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, char const**, unsigned, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_name(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, char const**, unsigned long, _Ios_Iostate&) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_name(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, int&, char const**, unsigned long, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_via_format(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, ios_base&, _Ios_Iostate&, tm*, char const*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_via_format(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;&, ios_base&, _Ios_Iostate&, tm*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get&lsqb;in-charge](unsigned)</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get&lsqb;in-charge](unsigned long)</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get&lsqb;not-in-charge](unsigned)</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge]()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;not-in-charge]()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cph-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cph-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cph-data">
<TITLE>libstdcxx - Class time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cph-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cph-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cph-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cph-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cph-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cph-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cph-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-435">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-435">
<TITLE>vtable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge]()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-436">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-436">
<TITLE>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpi-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpi-ints">
<TITLE>libstdcxx - Class time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::date_order() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, int&, int, int, unsigned, ctype&lt;wchar_t&gt; const&, _Ios_Iostate&) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, int&, int, int, unsigned, ctype&lt;wchar_t&gt; const&, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, int&, int, int, unsigned long, ctype&lt;wchar_t&gt; const&, _Ios_Iostate&) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_num(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, int&, int, int, unsigned long, ctype&lt;wchar_t&gt; const&, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_name(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, int&, wchar_t const**, unsigned, _Ios_Iostate&) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_name(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, int&, wchar_t const**, unsigned, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_name(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, int&, wchar_t const**, unsigned long, _Ios_Iostate&) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_name(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, int&, wchar_t const**, unsigned long, _Ios_Iostate&) const<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_via_format(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, ios_base&, _Ios_Iostate&, tm*, wchar_t const*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_via_format(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, ios_base&, _Ios_Iostate&, tm*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get&lsqb;in-charge](unsigned)</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get&lsqb;in-charge](unsigned long)</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get&lsqb;not-in-charge](unsigned)</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge]()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;not-in-charge]()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpi-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpi-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpi-data">
<TITLE>libstdcxx - Class time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpi-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpi-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpi-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-437">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-437">
<TITLE>vtable for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge]()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-438">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-438">
<TITLE>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpj-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpj-ints">
<TITLE>libstdcxx - Class time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char const*, char const*) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char const*, char const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put&lsqb;in-charge](unsigned)</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put&lsqb;in-charge](unsigned long)</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put&lsqb;not-in-charge](unsigned)</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::time_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge]()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;not-in-charge]()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpj-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpj-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpj-data">
<TITLE>libstdcxx - Class time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpj-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpj-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpj-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-439">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-439">
<TITLE>vtable for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge]()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-440">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-440">
<TITLE>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpk-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpk-ints">
<TITLE>libstdcxx - Class time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, wchar_t const*, wchar_t const*) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, wchar_t const*, wchar_t const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put&lsqb;in-charge](unsigned)</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put&lsqb;in-charge](unsigned long)</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put&lsqb;not-in-charge](unsigned)</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::time_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge]()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;not-in-charge]()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpk-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpk-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpk-data">
<TITLE>libstdcxx - Class time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpk-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpk-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpk-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9bad_alloc -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_alloc</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_alloc</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_alloc class
is described by <XREF LINKEND="cls-441">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-441">
<TITLE>vtable for bad_alloc</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_alloc</primary></indexterm>typeinfo for bad_alloc</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc &lsqb;in-charge]()</primary></indexterm>bad_alloc::~bad_alloc &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc &lsqb;in-charge deleting]()</primary></indexterm>bad_alloc::~bad_alloc &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_alloc  class
is described by <XREF LINKEND="rtti-442">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-442">
<TITLE>typeinfo for bad_alloc</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_alloc</primary></indexterm>typeinfo name for bad_alloc</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_alloc</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::bad_alloc specified in <XREF linkend="tbl-libstdcxx-cpl-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpl-ints">
<TITLE>libstdcxx - Class bad_alloc Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc &lsqb;in-charge deleting]()</primary></indexterm>bad_alloc::~bad_alloc &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc &lsqb;in-charge]()</primary></indexterm>bad_alloc::~bad_alloc &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc &lsqb;not-in-charge]()</primary></indexterm>bad_alloc::~bad_alloc &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpl-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::bad_alloc specified in <XREF linkend="tbl-libstdcxx-cpl-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpl-data">
<TITLE>libstdcxx - Class bad_alloc Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_alloc</primary></indexterm>typeinfo for bad_alloc(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpl-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_alloc</primary></indexterm>typeinfo name for bad_alloc(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpl-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for bad_alloc</primary></indexterm>vtable for bad_alloc(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpl-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpl-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9basic_iosIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-443">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-443">
<TITLE>vtable for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge]()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-444">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-444">
<TITLE>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base</primary></indexterm>typeinfo for ios_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>1026</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpm-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpm-ints">
<TITLE>libstdcxx - Class basic_ios&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::exceptions() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::exceptions() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::_M_check_facet(locale::facet const*) const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::_M_check_facet(locale::facet const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::bad() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::bad() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::eof() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::eof() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::tie() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::tie() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fail() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fail() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fill() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fill() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::good() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::good() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::widen(char) const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::widen(char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::narrow(char, char) const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::narrow(char, char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdstate() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdstate() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::operator void*() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::operator void*() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::operator!() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::operator!() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::exceptions(_Ios_Iostate)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::exceptions(_Ios_Iostate)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::_M_cache_facets(locale const&)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::_M_cache_facets(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::tie(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::tie(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fill(char)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fill(char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::init(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::init(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::clear(_Ios_Iostate)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::clear(_Ios_Iostate)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdbuf(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdbuf(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::copyfmt(basic_ios&lt;char, char_traits&lt;char&gt; &gt; const&)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::copyfmt(basic_ios&lt;char, char_traits&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::setstate(_Ios_Iostate)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::setstate(_Ios_Iostate)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios&lsqb;in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios&lsqb;in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios&lsqb;in-charge]()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios&lsqb;not-in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios&lsqb;not-in-charge](basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios&lsqb;not-in-charge]()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge]()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;not-in-charge]()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpm-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpm-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpm-data">
<TITLE>libstdcxx - Class basic_ios&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ios&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_ios&lt;char, char_traits&lt;char&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpm-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpm-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9basic_iosIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ios&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-445">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-445">
<TITLE>vtable for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge]()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_ios&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-446">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-446">
<TITLE>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base</primary></indexterm>typeinfo for ios_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2050</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ios&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpn-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpn-ints">
<TITLE>libstdcxx - Class basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::exceptions() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::exceptions() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_check_facet(locale::facet const*) const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_check_facet(locale::facet const*) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::bad() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::bad() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::eof() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::eof() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tie() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tie() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fail() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fail() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fill() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fill() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::good() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::good() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::widen(char) const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::widen(char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::narrow(wchar_t, char) const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::narrow(wchar_t, char) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdstate() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdstate() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator void*() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator void*() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator!() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator!() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::exceptions(_Ios_Iostate)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::exceptions(_Ios_Iostate)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_cache_facets(locale const&)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_cache_facets(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tie(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tie(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fill(wchar_t)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fill(wchar_t)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::init(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::init(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::clear(_Ios_Iostate)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::clear(_Ios_Iostate)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::copyfmt(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::copyfmt(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setstate(_Ios_Iostate)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setstate(_Ios_Iostate)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios&lsqb;in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios&lsqb;in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios&lsqb;in-charge]()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios&lsqb;not-in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios&lsqb;not-in-charge](basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios&lsqb;not-in-charge]()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge]()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;not-in-charge]()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpn-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpn-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ios&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpn-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpn-data">
<TITLE>libstdcxx - Class basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpn-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpn-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpn-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpn-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9exception -->
<SECT2>
<!--libgroup-->
<TITLE>Class exception</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for exception</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::exception class
is described by <XREF LINKEND="cls-447">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-447">
<TITLE>vtable for exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for exception</primary></indexterm>typeinfo for exception</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception &lsqb;in-charge]()</primary></indexterm>exception::~exception &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception &lsqb;in-charge deleting]()</primary></indexterm>exception::~exception &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::exception  class
is described by <XREF LINKEND="rtti-448">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-448">
<TITLE>typeinfo for exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for exception</primary></indexterm>typeinfo name for exception</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class exception</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::exception specified in <XREF linkend="tbl-libstdcxx-cpo-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpo-ints">
<TITLE>libstdcxx - Class exception Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception &lsqb;in-charge deleting]()</primary></indexterm>exception::~exception &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception &lsqb;in-charge]()</primary></indexterm>exception::~exception &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception &lsqb;not-in-charge]()</primary></indexterm>exception::~exception &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpo-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpo-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::exception specified in <XREF linkend="tbl-libstdcxx-cpo-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpo-data">
<TITLE>libstdcxx - Class exception Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for exception</primary></indexterm>typeinfo for exception(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for exception</primary></indexterm>typeinfo name for exception(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for exception</primary></indexterm>vtable for exception(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpo-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpo-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-449">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-449">
<TITLE>vtable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge]()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-450">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-450">
<TITLE>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::money_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpp-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpp-ints">
<TITLE>libstdcxx - Class money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_get&lsqb;in-charge](unsigned)</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_get&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_get&lsqb;in-charge](unsigned long)</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_get&lsqb;not-in-charge](unsigned)</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_get&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge]()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;not-in-charge]()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpp-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::money_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpp-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpp-data">
<TITLE>libstdcxx - Class money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpp-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpp-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpp-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpp-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpp-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpp-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpp-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-451">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-451">
<TITLE>vtable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge]()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-452">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-452">
<TITLE>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::money_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpq-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpq-ints">
<TITLE>libstdcxx - Class money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_get&lsqb;in-charge](unsigned)</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_get&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_get&lsqb;in-charge](unsigned long)</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_get&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_get&lsqb;not-in-charge](unsigned)</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_get&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_get&lsqb;not-in-charge](unsigned long)</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_get&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge]()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;not-in-charge]()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpq-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::money_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpq-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpq-data">
<TITLE>libstdcxx - Class money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpq-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpq-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpq-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpq-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-453">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-453">
<TITLE>vtable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge]()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-454">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-454">
<TITLE>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::money_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpr-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpr-ints">
<TITLE>libstdcxx - Class money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_put&lsqb;in-charge](unsigned)</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_put&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_put&lsqb;in-charge](unsigned long)</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_put&lsqb;not-in-charge](unsigned)</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_put&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::money_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge]()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;not-in-charge]()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpr-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::money_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpr-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpr-data">
<TITLE>libstdcxx - Class money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpr-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpr-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpr-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpr-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-455">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-455">
<TITLE>vtable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge]()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-456">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-456">
<TITLE>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::money_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cps-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cps-ints">
<TITLE>libstdcxx - Class money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_put&lsqb;in-charge](unsigned)</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_put&lsqb;in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_put&lsqb;in-charge](unsigned long)</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_put&lsqb;in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_put&lsqb;not-in-charge](unsigned)</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_put&lsqb;not-in-charge](unsigned)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_put&lsqb;not-in-charge](unsigned long)</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::money_put&lsqb;not-in-charge](unsigned long)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge]()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;not-in-charge]()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cps-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::money_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cps-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cps-data">
<TITLE>libstdcxx - Class money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cps-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cps-data"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cps-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cps-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cps-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cps-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cps-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9strstream -->
<SECT2>
<!--libgroup-->
<TITLE>Class strstream</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for strstream</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::strstream class
is described by <XREF LINKEND="cls-457">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-457">
<TITLE>vtable for strstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for strstream</primary></indexterm>typeinfo for strstream</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstream::~strstream &lsqb;in-charge]()</primary></indexterm>strstream::~strstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>strstream::~strstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::strstream  class
is described by <XREF LINKEND="rtti-458">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-458">
<TITLE>typeinfo for strstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for strstream</primary></indexterm>typeinfo name for strstream</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class strstream</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::strstream specified in <XREF linkend="tbl-libstdcxx-cpt-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpt-ints">
<TITLE>libstdcxx - Class strstream Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstream::rdbuf() const</primary></indexterm>strstream::rdbuf() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstream::pcount() const</primary></indexterm>strstream::pcount() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstream::str()</primary></indexterm>strstream::str()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstream::freeze(bool)</primary></indexterm>strstream::freeze(bool)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstream::strstream&lsqb;in-charge](char*, int, _Ios_Openmode)</primary></indexterm>strstream::strstream&lsqb;in-charge](char*, int, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstream::strstream&lsqb;in-charge]()</primary></indexterm>strstream::strstream&lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstream::strstream&lsqb;not-in-charge](char*, int, _Ios_Openmode)</primary></indexterm>strstream::strstream&lsqb;not-in-charge](char*, int, _Ios_Openmode)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstream::strstream&lsqb;not-in-charge]()</primary></indexterm>strstream::strstream&lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>strstream::~strstream &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstream::~strstream &lsqb;in-charge]()</primary></indexterm>strstream::~strstream &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstream::~strstream &lsqb;not-in-charge]()</primary></indexterm>strstream::~strstream &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to strstream::~strstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cpt-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-16] to strstream::~strstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-16] to strstream::~strstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cpt-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to strstream::~strstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to strstream::~strstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to strstream::~strstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to strstream::~strstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to strstream::~strstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to strstream::~strstream &lsqb;in-charge]()<LINK LINKEND="std-231-65-tbl-libstdcxx-cpt-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to strstream::~strstream &lsqb;in-charge deleting]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cpt-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-24] to strstream::~strstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-24] to strstream::~strstream &lsqb;in-charge]()<LINK LINKEND="std-231-87-tbl-libstdcxx-cpt-ints"> &lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpt-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpt-ints">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::strstream specified in <XREF linkend="tbl-libstdcxx-cpt-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpt-data">
<TITLE>libstdcxx - Class strstream Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for strstream</primary></indexterm>typeinfo for strstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for strstream</primary></indexterm>typeinfo name for strstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for strstream</primary></indexterm>VTT for strstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for strstream</primary></indexterm>vtable for strstream(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpt-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpt-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9time_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::time_base  class
is described by <XREF LINKEND="rtti-459">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-459">
<TITLE>typeinfo for time_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_base</primary></indexterm>typeinfo name for time_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_base</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::time_base
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_base specified in <XREF linkend="tbl-libstdcxx-cpu-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpu-data">
<TITLE>libstdcxx - Class time_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_base</primary></indexterm>typeinfo name for time_base(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpu-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpu-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::type_info class
is described by <XREF LINKEND="cls-460">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-460">
<TITLE>vtable for type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for type_info</primary></indexterm>typeinfo for type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;in-charge]()</primary></indexterm>type_info::~type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;in-charge deleting]()</primary></indexterm>type_info::~type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::type_info  class
is described by <XREF LINKEND="rtti-461">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-461">
<TITLE>typeinfo for type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for type_info</primary></indexterm>typeinfo name for type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::type_info specified in <XREF linkend="tbl-libstdcxx-cpv-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpv-ints">
<TITLE>libstdcxx - Class type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;in-charge deleting]()</primary></indexterm>type_info::~type_info &lsqb;in-charge deleting]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;in-charge]()</primary></indexterm>type_info::~type_info &lsqb;in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;not-in-charge]()</primary></indexterm>type_info::~type_info &lsqb;not-in-charge]()(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpv-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpv-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::type_info specified in <XREF linkend="tbl-libstdcxx-cpv-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpv-data">
<TITLE>libstdcxx - Class type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for type_info</primary></indexterm>typeinfo for type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for type_info</primary></indexterm>typeinfo name for type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for type_info</primary></indexterm>vtable for type_info(GLIBCPP_3.2)<LINK LINKEND="std-231-87-tbl-libstdcxx-cpv-data"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-87-tbl-libstdcxx-cpv-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_istreamIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_istream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpw-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpw-ints">
<TITLE>libstdcxx - Class basic_istream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& ws&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& ws&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& getline&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& getline&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& getline&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&, char)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& getline&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&, char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, signed char*)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, signed char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char*)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, signed char&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, signed char&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, char*)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, char*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, char&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, char&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setiosflags)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setiosflags)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setprecision)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setprecision)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Resetiosflags)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Resetiosflags)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setw)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setw)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setbase)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setbase)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setfill&lt;char&gt;)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setfill&lt;char&gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;double, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;double&gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;double, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;double&gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;long double, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;long double&gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;long double, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;long double&gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;float, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;float&gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;float, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;float&gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cpw-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cpw-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_ostreamIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmb-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmb-ints">
<TITLE>libstdcxx - Class basic_ostream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& endl&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& endl&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& ends&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& ends&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& flush&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& flush&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, signed char const*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, signed char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, char const*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char const*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char const*)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, signed char)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, signed char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, char)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setiosflags)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setiosflags)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setprecision)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setprecision)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Resetiosflags)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Resetiosflags)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setw)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setw)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setbase)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setbase)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setfill&lt;char&gt;)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setfill&lt;char&gt;)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;double, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;double&gt; const&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;double, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;double&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;long double, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;long double&gt; const&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;long double, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;long double&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;float, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;float&gt; const&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;float, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;float&gt; const&)(GLIBCPP_3.2)<LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints"> &lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-231-65-tbl-libstdcxx-cmb-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libstdcxx-ddefs>
<TITLE>Data Definitions for libstdcxx</TITLE>
<PARA>
This section defines global identifiers and their values that are associated with interfaces contained in libstdcxx.
These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
These definitions are intended to supplement those provided in the referenced underlying specifications.
</PARA>
<PARA>
This specification uses ISO/IEC 9899 C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<!-- empty header file All/ctype -->
<!-- empty header file All/cxxabi.h -->
<!-- empty header file All/typeinfo -->
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.60 2004/07/13 18:49:08 nick Exp 0 -->
