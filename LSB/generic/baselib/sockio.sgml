<REFENTRY ID="baselib-sockio-2"> <REFMETA>
<REFENTRYTITLE>sockio</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>sockio
</REFNAME>
<REFPURPOSE>
socket ioctl commands
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>29 August 2002</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;sys/socket.h>

int ioctl(int sockfd, int request, char *argp);
</SYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>29 August 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
Socket ioctl commands are a subset of the ioctl(2) system calls which can
perform a variety of functions on sockets. The file descriptor
<replaceable>sockfd</replaceable> must contain the value of a file descriptor
which was created with the socket(2) or accept(2) system calls.
</PARA>
<PARA>
These commands apply to the underlying network interfaces, and affect the
entire system, not just the file descriptor used to issue the ioctl.
</PARA>
<PARA>
The following ioctls are provided:
</PARA>
<VARIABLELIST>

<VARLISTENTRY>
<TERM>
SIOCGIFCONF
</TERM>
<LISTITEM>
<PARA>
Gets the interface configuration list for the
system.<footnote><para>Similar to the if_nameindex family found in the
Single UNIX specification version 3 or the getifaddrs family found in
BSD.</para></footnote>
The parameter
<replaceable>argp</replaceable> is a pointer to a
<literal>struct ifconf</literal>.
Before calling, the caller must allocate the
<literal>ifc_ifcu.ifcu_req</literal> field to point to an array of
<literal>struct ifreq</literal> structures, and set
<literal>if_len</literal> to the size of this allocated array (in
bytes).  Upon return, <literal>if_len</literal> will contain the amount of
the array which was actually used (again in bytes).  If it is the same
as the length upon calling, the caller should assume that the array
was too small and try again with a larger array.
</PARA>
<para>
On success, this function can return any nonnegative
value.<footnote><para>Historical UNIX systems disagree on the meaning
of the return value.</para></footnote>
</para>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
SIOCGIFFLAGS  
</TERM>
<LISTITEM>
<PARA>
Gets the interface flags for the indicated interface.
The parameter <replaceable>argp</replaceable> is a pointer to a
<literal>struct ifreq</literal>.
Before calling, the caller should
fill in the ifr_name field with the interface name, and upon return
the ifr_ifru.ifru_flags field is set with the interface flags.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
SIOCGIFADDR  
</TERM>
<LISTITEM>
<PARA>
Gets the interface address list for the system. The parameter
<replaceable>argp</replaceable> is a pointer to a
<literal>struct ifreq</literal>.
Before calling, the caller should
fill in the ifr_name field with the interface name, and upon return
the ifr_ifru.ifru_addr field is set with the interface address.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
SIOCGIFNETMASK  
</TERM>
<LISTITEM>
<PARA>
Gets the network mask for the indicated interface. The parameter
<replaceable>argp</replaceable> is a pointer to a
<literal>struct ifreq</literal>.
Before calling, the caller should
fill in the ifr_name field with the interface name, and upon return
the ifr_ifru.ifru_netmask field is set with the network mask.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>

<!--
<para>

The <literal>struct sock</literal> structure contains at least the
following members:

</para>
-->

<para>The <literal>struct sockaddr</literal> structure is as specified
in the Single UNIX Specification.</para>

</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, zero is returned. On error, -1 is returned, and errno is set appropriately.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EBADF  
</TERM>
<LISTITEM>
<PARA>
<replaceable>sockfd</replaceable> is not a valid descriptor.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EFAULT 
</TERM>
<LISTITEM>
<PARA>
<replaceable>argp</replaceable> references an inaccessible memory area.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
ENOTTY 
</TERM>
<LISTITEM>
<PARA>
<replaceable>sockfd</replaceable> is not associated with a character special device.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
ENOTTY 
</TERM>
<LISTITEM>
<PARA>
The specified request does not apply to the kind of object that the descriptor
<replaceable>sockfd</replaceable> references.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EINVAL 
</TERM>
<LISTITEM>
<PARA>
<replaceable>request</replaceable> or <replaceable>argp</replaceable> is not valid.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>
</REFSECT1>

</REFENTRY>
