<REFENTRY ID="baselib---cxa-atexit"> <REFMETA>
<REFENTRYTITLE>__cxa_atexit</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__cxa_atexit</REFNAME>
<REFPURPOSE>
register a function to be called by exit or when a shared library is unloaded
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__cxa_atexit</FUNCTION></FUNCDEF>
 <PARAMDEF>void (*func) 
  <PARAMETER><REPLACEABLE>(void *)</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void 
  <PARAMETER><REPLACEABLE>*arg</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void 
  <PARAMETER><REPLACEABLE>*d</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__cxa_atexit</FUNCTION> registers a function to be called by 
exit or when a shared library is unloaded. 
</PARA>
<PARA>
The <FUNCTION>__cxa_atexit</FUNCTION> function is used to implement
<FUNCTION>atexit</FUNCTION>, as described in <XREF LINKEND=STD.SUSv3>.
Calling <synopsis>atexit(func)</synopsis> from the statically linked part of
an application shall be equivalent to
<synopsis>__cxa_atexit(func, NULL, NULL)</synopsis>.
</PARA>
<PARA>
<FUNCTION>__cxa_atexit</FUNCTION> is not in the source standard; 
it is only in the binary standard.
<FUNCTION>atexit</FUNCTION> is not in the binary standard; 
it is only in the source standard.
</PARA>
</REFSECT1>
</REFENTRY>

