<REFENTRY ID="baselib---cxa-atexit"> <REFMETA>
<REFENTRYTITLE>__cxa_atexit</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__cxa_atexit</REFNAME>
<REFPURPOSE>
register a function to be called by exit or when a shared library is unloaded
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__cxa_atexit</FUNCTION></FUNCDEF>
 <PARAMDEF>void (*<PARAMETER>func</PARAMETER>)
  <FUNCPARAMS>void *</FUNCPARAMS></PARAMDEF>
 <PARAMDEF>void *
  <PARAMETER>arg</PARAMETER></PARAMDEF>
 <PARAMDEF>void *
  <PARAMETER>dso_handle</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
As described in the <xref linkend="std.cxxabi">,
<FUNCTION>__cxa_atexit</FUNCTION> registers a destructor function to be called by 
<function>exit</function> or when a shared library is unloaded. 
When a shared library is unloaded, any destructor function associated with that
shared library, identified by <parameter>dso_handle</parameter>, shall be called
with the single argument <parameter>arg</parameter>, and then that function shall
be removed, or marked as complete, from the list of functions to run at 
<function>exit</function>.
On a call to <function>exit</function>,
any remaining functions registered shall be called 
with the single argument <parameter>arg</parameter>.
Destructor functions shall always be called in the reverse order to their
registration (i.e. the most recently registered function shall be called first),
</PARA>
<PARA>
The <FUNCTION>__cxa_atexit</FUNCTION> function is used to implement
<FUNCTION>atexit</FUNCTION>, as described in <XREF LINKEND=STD.SUSv3>.
Calling <literal>atexit(func)</literal> from the statically linked part of
an application shall be equivalent to
<literal>__cxa_atexit(func, NULL, NULL)</literal>.
</PARA>
<PARA>
<FUNCTION>__cxa_atexit</FUNCTION> is not in the source standard; 
it is only in the binary standard.
<NOTE><PARA>
<FUNCTION>atexit</FUNCTION> is not in the binary standard; 
it is only in the source standard.
</PARA></NOTE>
</PARA>
</REFSECT1>
</REFENTRY>

