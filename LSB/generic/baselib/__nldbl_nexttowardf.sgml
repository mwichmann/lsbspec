<REFENTRY ID="baselib---nldbl-nexttowardf"> <REFMETA>
<REFENTRYTITLE>__nldbl_nexttowardf</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__nldbl_nexttowardf
</REFNAME>
<REFPURPOSE>
find the next representable floating-point number
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>30 September 2008</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>float <FUNCTION>__nldbl_nexttowardf</FUNCTION></FUNCDEF>
 <PARAMDEF>float
  <PARAMETER>x</PARAMETER></PARAMDEF>
 <PARAMDEF>long double
  <PARAMETER>y</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
The interface <function>__nldbl_nexttowardf</function>
shall function in the same way 
as the interface <function>nexttowardf</function>,
except that <function>__nldbl_nexttowardf</function>
shall accept a 64-bit long double value 
(also known as double long double) 
as its second argument
where <function>nexttowardf</function> accepts 
a 128-bit long double value 
(also known as quad long double).
</para>
</REFSECT1>


<REFSECT1>
<TITLE>Application Usage (informative)
</TITLE>
<PARA>
With the transition to glibc 2.4,
the Linux Standard Base 4.0 generally specifies long double
values as 128 bits long, and interfaces that formerly
used 64-bit calculations, including <function>nexttowardf</function>,
now use 128-bit calculations.
</para>

<para>
However, if the 
<option>-mlong-double-64</option> compiler option is used, then the
<function>nexttowardf</function> interface is redirected 
to <function>__nldbl_nexttowardf</function>
and therefore also uses 64-bit calculations.
</para>
</REFSECT1>

</REFENTRY>
