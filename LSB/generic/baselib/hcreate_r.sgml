<REFENTRY ID="baselib-hcreate-r"> <REFMETA>
<REFENTRYTITLE>hcreate_r</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>hcreate_r
</REFNAME>
<REFPURPOSE>
allocate space for a hash search table, reentrantly
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>17 June 2008</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;search.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int
  <FUNCTION>hcreate_r</FUNCTION></FUNCDEF>
 <PARAMDEF>size_t
  <PARAMETER>nel</PARAMETER></PARAMDEF>
 <PARAMDEF>struct hsearch_data *
  <PARAMETER>htab</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>hcreate_r</FUNCTION> function is a reentrant version 
of the <FUNCTION>hcreate</FUNCTION> function.
</PARA>
<PARA>
<FUNCTION>hcreate_r</FUNCTION> shall initialize the object referenced by 
<PARAMETER>htab</PARAMETER> with a hash table containing at least 
<PARAMETER>nel</PARAMETER> elements. Unlike its non-reentrant equivalent, 
<FUNCTION>hcreate</FUNCTION>, the <FUNCTION>hcreate_r</FUNCTION> function 
may work with more than one hash table.
</PARA>
<PARA>
The memory for the <PARAMETER>htab</PARAMETER> object may be dynamically allocated. 
It must be initialized with <LITERAL>0</LITERAL> before <FUNCTION>hcreate_r</FUNCTION> is called.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <FUNCTION>hcreate_r</FUNCTION> shall return a non-zero value. 
</PARA>
<PARA>
On failure, <function>hcreate_r</function> shall return <LITERAL>0</LITERAL>. This usually happens 
because not enough memory was available.
</PARA>
</REFSECT1>

</REFENTRY>
