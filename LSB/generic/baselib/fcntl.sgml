<REFENTRY ID="baselib-fcntl-3"> <REFMETA>
<REFENTRYTITLE>fcntl</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>fcntl
</REFNAME>
<REFPURPOSE>
file control
</REFPURPOSE>
</REFNAMEDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>fcntl</FUNCTION> is as specified in 
<XREF LINKEND=STD.SUSv3>,
but with differences as listed below.
</PARA>

<REFSECT2>
<TITLE>Implementation may set <CONSTANT>O_LARGEFILE</CONSTANT>
</TITLE>
<PARA>
According to <XREF LINKEND="STD.SUSv3">,
only an application sets
<FUNCTION>fcntl</FUNCTION> flags, for example 
<constant>O_LARGEFILE</constant>. However, this specification
also allows an implementation to set the <constant>O_LARGEFILE</constant> 
flag in the case where the programming environment is one of
<simplelist type=inline>
<member><constant>_POSIX_V6_ILP32_OFFBIG</constant></member>
<member><constant>_POSIX_V6_LP64_OFF64</constant></member>
<member><constant>_POSIX_V6_LPBIG_OFFBIG</constant></member>
</simplelist>. See <command>getconf</command> and <command>c99</command>
in <xref linkend="std.SUSv3">
for a description of these environments.
Thus, calling <FUNCTION>fcntl</FUNCTION> with the 
<PARAMETER>F_GETFL</PARAMETER> command may return 
<constant>O_LARGEFILE</constant> as well as flags explicitly 
set by the application in the case that both the implementation and 
the application support an <type>off_t</type> of at least 64 bits.
</para>
</REFSECT2>


<REFSECT2>
<TITLE>Additional flags</TITLE>
<PARA>
In addition to the available values for <PARAMETER>cmd</PARAMETER>, as documented in <XREF LINKEND=STD.SUSv3>, this specification permits the following constants.
</PARA>
<PARA>
<CONSTANT>F_GETSIG</CONSTANT> shall get the number of the signal to be sent when input or output can occur. If the value is <LITERAL>0</LITERAL>, then <CONSTANT>SIGIO</CONSTANT> shall be sent. Otherwise, the value retrieved shall be the signal sent, and the signal handler can discover more information when installed with the <CONSTANT>SA_SIGINFO</CONSTANT> flag.
</PARA>
<PARA>
<CONSTANT>F_SETSIG</CONSTANT> shall set the number of the signal to be sent when input or output can occur. If the value is <LITERAL>0</LITERAL>, then <CONSTANT>SIGIO</CONSTANT> shall be sent. Otherwise, the value set shall be the signal to be sent, and the signal handler can discover more information when installed with the <CONSTANT>SA_SIGINFO</CONSTANT> flag.
</PARA>
<PARA>
<CONSTANT>F_GETLK64</CONSTANT> is analogous to the <CONSTANT>F_GETLK</CONSTANT> constant in <XREF LINKEND=STD.SUSv3>, but shall provide a 64-bit interface on non-64-bit architectures. It is identical to <CONSTANT>F_GETLK</CONSTANT> on a 64-bit machine, but is provided in 64-bit environments for source code consistency among architectures.
</PARA>
<PARA>
<CONSTANT>F_SETLK64</CONSTANT> is analogous to the <CONSTANT>F_SETLK</CONSTANT> constant in <XREF LINKEND=STD.SUSv3>, but shall provide a 64-bit interface on non-64-bit architectures. It is identical to <CONSTANT>F_SETLK</CONSTANT> on a 64-bit machine, but is provided in 64-bit environments for source code consistency among architectures.
</PARA>
<PARA>
<CONSTANT>F_SETLKW64</CONSTANT> is analogous to the <CONSTANT>F_SETLKW</CONSTANT> constant in <XREF LINKEND=STD.SUSv3>, but provides a 64-bit interface on non-64-bit architectures. It is identical to <CONSTANT>F_SETLKW</CONSTANT> on a 64-bit machine, but is provided in 64-bit environments for source code consistency among architectures.
</PARA>
</REFSECT2>

</REFSECT1>
</REFENTRY>
