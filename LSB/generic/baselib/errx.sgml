<refentry id="baselib-errx-3"> 
<refmeta>
<refentrytitle>errx</refentrytitle>
<refmiscinfo>Base Libraries</refmiscinfo>
</refmeta>
<refnamediv>
<refname>errx</refname>
<refpurpose>display formatted error message and exit</refpurpose>
</refnamediv>

<refsynopsisdiv>
<refsynopsisdivinfo>
<date>4 March 2001</date>
</refsynopsisdivinfo>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;err.h&gt;
</funcsynopsisinfo>
<funcprototype>
 <funcdef>void 
  <function>errx</function>
 </funcdef>
 <paramdef>int 
  <parameter><replaceable>eval</replaceable></parameter>
 </paramdef>
 <paramdef>const char *
  <parameter><replaceable>fmt</replaceable></parameter>
 </paramdef>
 <varargs>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>

<refsect1>
<refsect1info>
<date>2 April 2001</date>
</refsect1info>
<title>Description</title>
<para>
The <function>errx</function> function shall display a 
formatted error message on the standard error stream.
The last component of the program name, a colon 
character, and a space shall be output. If <parameter>fmt</parameter> is 
non-<literal>NULL</literal>, it shall be used as the format string
for the <function>printf</function> family of functions, and
the formatted error message, a colon 
character, and a space shall be output. The output shall be followed by a 
newline character.
</para>
<para>
<function>errx</function> does not return, but shall exit with the value of 
<parameter>eval</parameter>.
</para>
</refsect1>
<refsect1>
<title>Return Value</title>
<para>
None.
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<para>
None.
</para>
</refsect1>
<refsect1>
<title>See Also</title>
<para>
<function>error</function>, <function>err</function>
</para>
</refsect1>
<!--      4th Berkeley Distribution        June 9, 1993           -->
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</refentry>
