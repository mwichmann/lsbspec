<REFENTRY ID="baselib-error-n"> <REFMETA>
<REFENTRYTITLE>error</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>error</REFNAME>
<REFPURPOSE>
print error message
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>error</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>exitstatus</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>errnum</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char *
  <PARAMETER><REPLACEABLE>format</REPLACEABLE></PARAMETER></PARAMDEF>
  <VARARGS>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>error</FUNCTION> shall print a message to standard error.
</PARA>
<PARA>
<FUNCTION>error</FUNCTION> shall build the message from the following 
elements in their specified order:
<ORDEREDLIST NUMERATION="ARABIC">
<LISTITEM>
<PARA>
the program name. If the application has provided a function named 
<FUNCTION>error_print_progname</FUNCTION>, <FUNCTION>error</FUNCTION> 
shall call this to supply the program name; 
otherwise, <FUNCTION>error</FUNCTION> 
uses the content of the global variable <VARNAME>program_name</VARNAME>.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
the colon and space characters, then 
the result of using the printf-style <PARAMETER>format</PARAMETER> 
and the optional arguments.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
if <PARAMETER>errnum</PARAMETER> is nonzero, 
<FUNCTION>error</FUNCTION> shall add the colon and 
space characters, then the result of 
<LITERAL>strerror(<VARNAME>errnum</VARNAME>)</LITERAL>.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
a newline.
</PARA>
</LISTITEM>
</ORDEREDLIST>
</PARA>
<PARA>
If <PARAMETER>exitstatus</PARAMETER> is nonzero, 
<FUNCTION>error</FUNCTION> shall call
<LITERAL>exit(<VARNAME>exitstatus</VARNAME>)</LITERAL>.
</PARA>
<!-- There's an interaction with wide characters(?): this call makes
stderr narrow-oriented. Should put that in once we figure out what it
means and whether it would be bad in an Asian locale -->
</REFSECT1>
<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<FUNCTION>err</FUNCTION>, <FUNCTION>errx</FUNCTION>
</PARA>
</REFSECT1>
</REFENTRY>
