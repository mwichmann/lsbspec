<refentry id="libc---fgetws-unlocked-chk-1">

<refmeta>
<refentrytitle>__fgetws_unlocked_chk</refentrytitle>
<refmiscinfo>libc</refmiscinfo>
</refmeta>

<refnamediv>
<refname>__fgetws_unlocked_chk</refname>
<refpurpose>read a wide-character string from a FILE stream in a non-locking manner, with stack checking</refpurpose>
<indexterm id="ix-libc---fgetws-unlocked-chk-1">
	<primary>__fgetws_unlocked_chk</primary></indexterm>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;wchar.h&gt;
</funcsynopsisinfo><funcprototype>
<funcdef>wchar_t *
<function>__fgetws_unlocked_chk</function>
</funcdef>
<paramdef>wchar_t *
<parameter>ws</parameter>
</paramdef>
<paramdef>size_t
<parameter>strsize</parameter>
</paramdef>
<paramdef>int
<parameter>n</parameter>
</paramdef>
<paramdef>FILE *
<parameter>stream</parameter>
</paramdef>

</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The interface <function>__fgetws_unlocked_chk</function> shall function in the same
way as the interface <function>fgetws_unlocked</function>, except that
<function>__fgetws_unlocked_chk</function> shall check for stack overflow before
computing a result.  If an overflow is anticipated,
the function shall abort
and the program calling it shall exit.
</para>

<para>
The parameter <parameter>strsize</parameter> specifies the size of the object
pointed to by <parameter>stream</parameter>.
</para>
<para>
The <function>__fgetws_unlocked_chk</function> function is not in the source standard; 
it is only in the binary standard.
</para>
</refsect1>
</refentry>
