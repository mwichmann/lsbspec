<refentry id="libc---fwprintf-chk-1">

<refmeta>
<refentrytitle>__fwprintf_chk</refentrytitle>
<refmiscinfo>libc</refmiscinfo>
</refmeta>

<refnamediv>
<refname>__fwprintf_chk</refname>
<refpurpose>convert formatted wide-character output, with stack checking</refpurpose>
<indexterm id="ix-libc---fwprintf-chk-1">
	<primary>__fwprintf_chk</primary></indexterm>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;wchar.h&gt;
</funcsynopsisinfo><funcprototype>
<funcdef>int
<function>__fwprintf_chk</function>
</funcdef>
<paramdef>FILE *
<parameter>stream</parameter>
</paramdef>
<paramdef>int
<parameter>flag</parameter>
</paramdef>
<paramdef>const wchar_t *
<parameter>format</parameter>
</paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The interface <function>__fwprintf_chk</function> shall function in the same
way as the interface <function>fwprintf</function>, except that
<function>__fwprintf_chk</function> shall check for stack overflow before
computing a result, depending on the value of the
<parameter>flag</parameter> parameter.  If an overflow is anticipated,
the function shall abort
and the program calling it shall exit.
</para>
<para>
In general, the higher the value of <parameter>flag</parameter>,
the more security measures this interface shall take
in the form of checking the stack, parameter values, and so on.
</para>
<para>
The <function>__fwprintf_chk</function> function is not in the source standard; 
it is only in the binary standard.
</para>
</refsect1>
</refentry>
