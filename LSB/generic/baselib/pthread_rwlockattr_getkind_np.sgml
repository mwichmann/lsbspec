<refentry id="libpthread-pthread-rwlockattr-getkind-np-1">

<refmeta>
<refentrytitle>pthread_rwlockattr_getkind_np, pthread_rwlockattr_setkind_np</refentrytitle>
<refmiscinfo>libpthread</refmiscinfo>
</refmeta>

<refnamediv>
<refname>pthread_rwlockattr_getkind_np, pthread_rwlockattr_setkind_np</refname>
<refpurpose>get/set the read-write lock kind of the thread read-write lock attribute object</refpurpose>
<indexterm id="ix-pthread-rwlockattr-getkind-1">
	<primary>pthread_rwlockattr_getkind_np</primary></indexterm>
<indexterm id="ix-pthread-rwlockattr-getkind-2">
	<primary>pthread_rwlockattr_setkind_np</primary></indexterm>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;pthread.h&gt;
</funcsynopsisinfo>
<funcprototype>
<funcdef>int
<function>pthread_rwlockattr_getkind_np</function>
</funcdef>
<paramdef>const pthread_rwlockattr_t *
<parameter>attr</parameter>
</paramdef>
<paramdef>int *
<parameter>pref</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>int
<function>pthread_rwlockattr_setkind_np</function>
</funcdef>
<paramdef>pthread_rwlockattr_t *
<parameter>attr</parameter>
</paramdef>
<paramdef>int *
<parameter>pref</parameter>
</paramdef>
</funcprototype>

</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
The <function>pthread_rwlockattr_setkind_np</function> function sets the kind 
of read-write lock of the thread read-write lock attribute object referred to
by attr to the value specified with pref. The argument pref may be set
to <constant>PTHREAD_RWLOCK_PREFER_READER_NP</constant>,
<constant>PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP</constant>,
or <constant>PTHREAD_RWLOCK_PREFER_WRITER_NP</constant>.
The default lock setting is <constant>PTHREAD_RWLOCK_PREFER_READER_NP</constant>.
A thread may hold multiple read locks, i.e. read locks are recursive.
According to The Single Unix Specification, the behavior is unspecified when 
a reader tries to place a lock, and there is no write lock but writers are 
waiting. Giving preference to the reader, as is set by default with 
the <constant>PTHREAD_RWLOCK_PREFER_READER_NP</constant> value implies
that the reader will receive the requested lock, even if a writer is waiting.
As long as there are readers the writer will be starved. Setting the kind to
<constant>PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP</constant>, avoids writer
starvation as long as any read locking is not done in a recursive fashion.

The <function>pthread_rwlockattr_getkind_np</function> function returns the 
value of the read-write lock attribute of the thread read-write lock attribute
object referred to by <parameter>attr</parameter> in the pointer <parameter>pref</parameter>.
</para>
</refsect1>

<refsect1>
<title>Return Value</title>
<para>
<function>pthread_rwlockattr_setkind_np</function> function returns 0 on success; on error, it returns a non-zero error number.

<function>pthread_rwlockattr_setkind_np</function> function always returns 0.
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EINVAL
</TERM>
<LISTITEM>
<PARA>
<parameter>pref</parameter> is set to an unsupported value.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</refsect1>

<refsect1>
<title>Notes</title>
<para>
Setting the value read-write lock kind to <constant>PTHREAD_RWLOCK_PREFER_WRITER_NP</constant>,
results in the same behavior as setting the value to
<constant>PTHREAD_RWLOCK_PREFER_READER_NP</constant>. As long as a reader thread holds the
lock the thread holding a write lock will be starved. Setting the kind
value to <constant>PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP</constant>, allows the
writer to run. However, the writer may not be recursive as is implied by the name. 
</para>
</refsect1>

</refentry>
