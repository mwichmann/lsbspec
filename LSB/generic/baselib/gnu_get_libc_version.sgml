<refentry id="libc-gnu-get-libc-version-1">

<refmeta>
<refentrytitle>gnu_get_libc_version, gnu_get_libc_release</refentrytitle>
<refmiscinfo>libc</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gnu_get_libc_version, gnu_get_libc_release</refname>
<refpurpose>get glibc-specific version and release</refpurpose>
<indexterm id="ix-libc-gnu-get-libc-version-1">
	<primary>gnu_get_libc_version</primary></indexterm>
<indexterm id="ix-libc-gnu-get-libc-release-1">
	<primary>gnu_get_libc_release</primary></indexterm>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;gnu/libc-version.h&gt;
</funcsynopsisinfo>
<funcprototype>
<funcdef>const char *
<function>gnu_get_libc_version</function>
</funcdef>
<void>
</funcprototype>
<funcprototype>
<funcdef>const char *
<function>gnu_get_libc_release</function>
</funcdef>
<void>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
<function>gnu_get_libc_version</function>
returns a string that identifies the version of the C library
running the program making the call.
</para>
<para>
<function>gnu_get_libc_release</function>
returns a string indicates the release status of the C library
running the program making the call.  This will be a string such as
<literal>"stable"</literal>.
</para>
</refsect1>

<refsect1>
<title>Return Value</title>
<para>
The functions return strings.  The contents of these strings
are unspecified.
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<para>
No errors are defined.
</para>
</refsect1>

<refsect1>
<title>Notes</title>
<para>
These functions are specific to GNU libc (glibc).  This specification
does not require the implementation of libc to be glibc, although it
requires these functions.
</para>
<para>
The string returned by <function>gnu_get_libc_version</function>
will be a dotted version string, which may have meaning to 
developers otherwise familiar with glibc.  These functions have
been requested to aid in portability of software which also 
runs in non-LSB contexts, but decisions based on the return value
should be tempered by an understanding of what the behavioral
requirements of this specification are.  That is, it may or may 
not be useful to discover that a running system, for example,
has version <literal>"2.10.1"</literal> if that implies different 
behavior than described by this specification.
</para>
</refsect1>

</refentry>
