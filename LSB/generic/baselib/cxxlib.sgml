<PART ID=tocbaselib>
<TITLE>Base Libraries</TITLE>

<CHAPTER id=baselib>
<TITLE>Libraries</TITLE>

<PARA>
An LSB-conforming implementation shall support some base libraries which
provide interfaces for accessing the operating system, processor and other
hardware in the system.
</PARA>

<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.68 2005/03/30 04:12:27 anderson Exp 0 -->
<!--    at Wed Jun 15 02:25:59 2005 -->
<SECT1 ID=libstdcxx>
<TITLE>Interfaces for libstdcxx</TITLE>
<PARA>
<XREF LINKEND="lib-libstdcxx-def"> defines the library name and shared object name
for the libstdcxx library
</PARA>
<TABLE id="lib-libstdcxx-def">
<TITLE>libstdcxx Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libstdcxx</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libstdc++.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
Unless stated otherwise, all symbols are in the <VARNAME>std::</VARNAME> namespace.
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="std.CXXABI">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.ISOCXX">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name C++ Runtime Support -->
<SECT2>
<!--libgroup-->
<TITLE>C++ Runtime Support</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for C++ Runtime Support</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for C++ Runtime Support specified in <XREF linkend="tbl-libstdcxx-cxx-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cxx-ints">
<TITLE>libstdcxx - C++ Runtime Support Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::__atomic_add(int volatile*, int)</primary></indexterm>__gnu_cxx::__atomic_add(int volatile*, int)(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::__exchange_and_add(int volatile*, int)</primary></indexterm>__gnu_cxx::__exchange_and_add(int volatile*, int)(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::__verbose_terminate_handler()</primary></indexterm>__gnu_cxx::__verbose_terminate_handler()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>unexpected()</primary></indexterm>unexpected()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>set_terminate(void (*)())</primary></indexterm>set_terminate(void (*)())(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>set_unexpected(void (*)())</primary></indexterm>set_unexpected(void (*)())(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>set_new_handler(void (*)())</primary></indexterm>set_new_handler(void (*)())(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_bad_cast()</primary></indexterm>__throw_bad_cast()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_bad_alloc()</primary></indexterm>__throw_bad_alloc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_bad_typeid()</primary></indexterm>__throw_bad_typeid()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>uncaught_exception()</primary></indexterm>uncaught_exception()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_ios_failure(char const*)</primary></indexterm>__throw_ios_failure(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_logic_error(char const*)</primary></indexterm>__throw_logic_error(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_range_error(char const*)</primary></indexterm>__throw_range_error(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_domain_error(char const*)</primary></indexterm>__throw_domain_error(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_length_error(char const*)</primary></indexterm>__throw_length_error(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_out_of_range(char const*)</primary></indexterm>__throw_out_of_range(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_bad_exception()</primary></indexterm>__throw_bad_exception()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_runtime_error(char const*)</primary></indexterm>__throw_runtime_error(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_overflow_error(char const*)</primary></indexterm>__throw_overflow_error(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_underflow_error(char const*)</primary></indexterm>__throw_underflow_error(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__throw_invalid_argument(char const*)</primary></indexterm>__throw_invalid_argument(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>terminate()</primary></indexterm>terminate()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator delete&lsqb;](void*)</primary></indexterm>operator delete&lsqb;](void*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator delete&lsqb;](void*, nothrow_t const&)</primary></indexterm>operator delete&lsqb;](void*, nothrow_t const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator delete(void*)</primary></indexterm>operator delete(void*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>operator delete(void*, nothrow_t const&)</primary></indexterm>operator delete(void*, nothrow_t const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_allocate_exception</primary></indexterm>__cxa_allocate_exception(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_bad_cast</primary></indexterm>__cxa_bad_cast(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_bad_typeid</primary></indexterm>__cxa_bad_typeid(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_begin_catch</primary></indexterm>__cxa_begin_catch(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_call_unexpected</primary></indexterm>__cxa_call_unexpected(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_current_exception_type</primary></indexterm>__cxa_current_exception_type(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_demangle</primary></indexterm>__cxa_demangle(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_end_catch</primary></indexterm>__cxa_end_catch(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_free_exception</primary></indexterm>__cxa_free_exception(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_get_globals</primary></indexterm>__cxa_get_globals(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_get_globals_fast</primary></indexterm>__cxa_get_globals_fast(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_guard_abort</primary></indexterm>__cxa_guard_abort(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_guard_acquire</primary></indexterm>__cxa_guard_acquire(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_guard_release</primary></indexterm>__cxa_guard_release(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_rethrow</primary></indexterm>__cxa_rethrow(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_throw</primary></indexterm>__cxa_throw(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_cctor</primary></indexterm>__cxa_vec_cctor(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_cleanup</primary></indexterm>__cxa_vec_cleanup(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_ctor</primary></indexterm>__cxa_vec_ctor(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_delete</primary></indexterm>__cxa_vec_delete(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_delete2</primary></indexterm>__cxa_vec_delete2(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_delete3</primary></indexterm>__cxa_vec_delete3(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_dtor</primary></indexterm>__cxa_vec_dtor(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_new</primary></indexterm>__cxa_vec_new(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_new2</primary></indexterm>__cxa_vec_new2(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_vec_new3</primary></indexterm>__cxa_vec_new3(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__dynamic_cast</primary></indexterm>__dynamic_cast(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gxx_personality_v0</primary></indexterm>__gxx_personality_v0(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cxx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cxx-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cxx-ints">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for C++ Runtime Support specified in <XREF linkend="tbl-libstdcxx-cxx-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cxx-data">
<TITLE>libstdcxx - C++ Runtime Support Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>cin</primary></indexterm>cin(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>cerr</primary></indexterm>cerr(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>clog</primary></indexterm>clog(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>cout</primary></indexterm>cout(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>wcin</primary></indexterm>wcin(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>wcerr</primary></indexterm>wcerr(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>wclog</primary></indexterm>wclog(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>wcout</primary></indexterm>wcout(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>nothrow</primary></indexterm>nothrow(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cxx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cxx-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name C++ type descriptors for built-in types -->
<SECT2>
<!--libgroup-->
<TITLE>C++ type descriptors for built-in types</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for C++ type descriptors for built-in types</TITLE>
<PARA>
No external methods are defined for libstdcxx - C++ type descriptors for built-in types
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for C++ type descriptors for built-in types specified in <XREF linkend="tbl-libstdcxx-1-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-1-data">
<TITLE>libstdcxx - C++ type descriptors for built-in types Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for signed char const*</primary></indexterm>typeinfo for signed char const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bool const*</primary></indexterm>typeinfo for bool const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for char const*</primary></indexterm>typeinfo for char const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for double const*</primary></indexterm>typeinfo for double const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long double const*</primary></indexterm>typeinfo for long double const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for float const*</primary></indexterm>typeinfo for float const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned char const*</primary></indexterm>typeinfo for unsigned char const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for int const*</primary></indexterm>typeinfo for int const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned int const*</primary></indexterm>typeinfo for unsigned int const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long const*</primary></indexterm>typeinfo for long const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long const*</primary></indexterm>typeinfo for unsigned long const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for short const*</primary></indexterm>typeinfo for short const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned short const*</primary></indexterm>typeinfo for unsigned short const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for void const*</primary></indexterm>typeinfo for void const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for wchar_t const*</primary></indexterm>typeinfo for wchar_t const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long long const*</primary></indexterm>typeinfo for long long const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long long const*</primary></indexterm>typeinfo for unsigned long long const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for signed char*</primary></indexterm>typeinfo for signed char*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bool*</primary></indexterm>typeinfo for bool*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for char*</primary></indexterm>typeinfo for char*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for double*</primary></indexterm>typeinfo for double*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long double*</primary></indexterm>typeinfo for long double*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for float*</primary></indexterm>typeinfo for float*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned char*</primary></indexterm>typeinfo for unsigned char*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for int*</primary></indexterm>typeinfo for int*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned int*</primary></indexterm>typeinfo for unsigned int*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long*</primary></indexterm>typeinfo for long*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long*</primary></indexterm>typeinfo for unsigned long*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for short*</primary></indexterm>typeinfo for short*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned short*</primary></indexterm>typeinfo for unsigned short*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for void*</primary></indexterm>typeinfo for void*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for wchar_t*</primary></indexterm>typeinfo for wchar_t*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long long*</primary></indexterm>typeinfo for long long*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long long*</primary></indexterm>typeinfo for unsigned long long*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for signed char</primary></indexterm>typeinfo for signed char(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bool</primary></indexterm>typeinfo for bool(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for char</primary></indexterm>typeinfo for char(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for double</primary></indexterm>typeinfo for double(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long double</primary></indexterm>typeinfo for long double(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for float</primary></indexterm>typeinfo for float(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned char</primary></indexterm>typeinfo for unsigned char(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for int</primary></indexterm>typeinfo for int(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned int</primary></indexterm>typeinfo for unsigned int(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long</primary></indexterm>typeinfo for long(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long</primary></indexterm>typeinfo for unsigned long(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for short</primary></indexterm>typeinfo for short(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned short</primary></indexterm>typeinfo for unsigned short(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for void</primary></indexterm>typeinfo for void(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for wchar_t</primary></indexterm>typeinfo for wchar_t(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for long long</primary></indexterm>typeinfo for long long(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for unsigned long long</primary></indexterm>typeinfo for unsigned long long(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for signed char const*</primary></indexterm>typeinfo name for signed char const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bool const*</primary></indexterm>typeinfo name for bool const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for char const*</primary></indexterm>typeinfo name for char const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for double const*</primary></indexterm>typeinfo name for double const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long double const*</primary></indexterm>typeinfo name for long double const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for float const*</primary></indexterm>typeinfo name for float const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned char const*</primary></indexterm>typeinfo name for unsigned char const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for int const*</primary></indexterm>typeinfo name for int const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned int const*</primary></indexterm>typeinfo name for unsigned int const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long const*</primary></indexterm>typeinfo name for long const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long const*</primary></indexterm>typeinfo name for unsigned long const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for short const*</primary></indexterm>typeinfo name for short const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned short const*</primary></indexterm>typeinfo name for unsigned short const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for void const*</primary></indexterm>typeinfo name for void const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for wchar_t const*</primary></indexterm>typeinfo name for wchar_t const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long long const*</primary></indexterm>typeinfo name for long long const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long long const*</primary></indexterm>typeinfo name for unsigned long long const*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for signed char*</primary></indexterm>typeinfo name for signed char*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bool*</primary></indexterm>typeinfo name for bool*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for char*</primary></indexterm>typeinfo name for char*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for double*</primary></indexterm>typeinfo name for double*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long double*</primary></indexterm>typeinfo name for long double*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for float*</primary></indexterm>typeinfo name for float*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned char*</primary></indexterm>typeinfo name for unsigned char*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for int*</primary></indexterm>typeinfo name for int*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned int*</primary></indexterm>typeinfo name for unsigned int*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long*</primary></indexterm>typeinfo name for long*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long*</primary></indexterm>typeinfo name for unsigned long*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for short*</primary></indexterm>typeinfo name for short*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned short*</primary></indexterm>typeinfo name for unsigned short*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for void*</primary></indexterm>typeinfo name for void*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for wchar_t*</primary></indexterm>typeinfo name for wchar_t*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long long*</primary></indexterm>typeinfo name for long long*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long long*</primary></indexterm>typeinfo name for unsigned long long*(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for signed char</primary></indexterm>typeinfo name for signed char(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bool</primary></indexterm>typeinfo name for bool(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for char</primary></indexterm>typeinfo name for char(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for double</primary></indexterm>typeinfo name for double(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long double</primary></indexterm>typeinfo name for long double(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for float</primary></indexterm>typeinfo name for float(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned char</primary></indexterm>typeinfo name for unsigned char(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for int</primary></indexterm>typeinfo name for int(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned int</primary></indexterm>typeinfo name for unsigned int(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long</primary></indexterm>typeinfo name for long(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long</primary></indexterm>typeinfo name for unsigned long(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for short</primary></indexterm>typeinfo name for short(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned short</primary></indexterm>typeinfo name for unsigned short(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for void</primary></indexterm>typeinfo name for void(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for wchar_t</primary></indexterm>typeinfo name for wchar_t(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for long long</primary></indexterm>typeinfo name for long long(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for unsigned long long</primary></indexterm>typeinfo name for unsigned long long(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-1-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-1-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name C++ _Rb_tree -->
<SECT2>
<!--libgroup-->
<TITLE>C++ _Rb_tree</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for C++ _Rb_tree</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for C++ _Rb_tree specified in <XREF linkend="tbl-libstdcxx-2-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-2-ints">
<TITLE>libstdcxx - C++ _Rb_tree Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_Rb_tree_decrement(_Rb_tree_node_base const*)</primary></indexterm>_Rb_tree_decrement(_Rb_tree_node_base const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-2-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_Rb_tree_decrement(_Rb_tree_node_base*)</primary></indexterm>_Rb_tree_decrement(_Rb_tree_node_base*)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-2-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_Rb_tree_increment(_Rb_tree_node_base const*)</primary></indexterm>_Rb_tree_increment(_Rb_tree_node_base const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-2-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_Rb_tree_increment(_Rb_tree_node_base*)</primary></indexterm>_Rb_tree_increment(_Rb_tree_node_base*)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-2-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_Rb_tree_black_count(_Rb_tree_node_base const*, _Rb_tree_node_base const*)</primary></indexterm>_Rb_tree_black_count(_Rb_tree_node_base const*, _Rb_tree_node_base const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-2-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_Rb_tree_rotate_left(_Rb_tree_node_base*, _Rb_tree_node_base*&)</primary></indexterm>_Rb_tree_rotate_left(_Rb_tree_node_base*, _Rb_tree_node_base*&)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-2-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_Rb_tree_rotate_right(_Rb_tree_node_base*, _Rb_tree_node_base*&)</primary></indexterm>_Rb_tree_rotate_right(_Rb_tree_node_base*, _Rb_tree_node_base*&)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-2-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_Rb_tree_rebalance_for_erase(_Rb_tree_node_base*, _Rb_tree_node_base&)</primary></indexterm>_Rb_tree_rebalance_for_erase(_Rb_tree_node_base*, _Rb_tree_node_base&)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-2-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_Rb_tree_insert_and_rebalance(bool, _Rb_tree_node_base*, _Rb_tree_node_base*, _Rb_tree_node_base&)</primary></indexterm>_Rb_tree_insert_and_rebalance(bool, _Rb_tree_node_base*, _Rb_tree_node_base*, _Rb_tree_node_base&)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-2-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-10-tbl-libstdcxx-2-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9type_info -->
<SECT2>
<!--libgroup-->
<TITLE>Class type_info</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::type_info class
is described by <XREF LINKEND="cls-243-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-243-0">
<TITLE>Primary vtable for type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for type_info</primary></indexterm>typeinfo for type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info()</primary></indexterm>type_info::~type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info()</primary></indexterm>type_info::~type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::type_info  class
is described by <XREF LINKEND="rtti-240">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-240">
<TITLE>typeinfo for type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for type_info</primary></indexterm>typeinfo name for type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::type_info specified in <XREF linkend="tbl-libstdcxx-cla-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cla-ints">
<TITLE>libstdcxx - Class type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned int) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info()</primary></indexterm>type_info::~type_info()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info()</primary></indexterm>type_info::~type_info()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info()</primary></indexterm>type_info::~type_info()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cla-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cla-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::type_info specified in <XREF linkend="tbl-libstdcxx-cla-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cla-data">
<TITLE>libstdcxx - Class type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for type_info</primary></indexterm>typeinfo for type_info(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cla-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for type_info</primary></indexterm>typeinfo name for type_info(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cla-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for type_info</primary></indexterm>vtable for type_info(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cla-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cla-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv116__enum_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__enum_type_info</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __cxxabiv1::__enum_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__enum_type_info class
is described by <XREF LINKEND="cls-244-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-244-0">
<TITLE>Primary vtable for __cxxabiv1::__enum_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo for __cxxabiv1::__enum_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__enum_type_info  class
is described by <XREF LINKEND="rtti-241">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-241">
<TITLE>typeinfo for __cxxabiv1::__enum_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__enum_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__enum_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__enum_type_info specified in <XREF linkend="tbl-libstdcxx-clb-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clb-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__enum_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clb-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__enum_type_info specified in <XREF linkend="tbl-libstdcxx-clb-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clb-data">
<TITLE>libstdcxx - Class __cxxabiv1::__enum_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo for __cxxabiv1::__enum_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__enum_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__enum_type_info</primary></indexterm>vtable for __cxxabiv1::__enum_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clb-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv117__array_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__array_type_info</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __cxxabiv1::__array_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__array_type_info class
is described by <XREF LINKEND="cls-245-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-245-0">
<TITLE>Primary vtable for __cxxabiv1::__array_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo for __cxxabiv1::__array_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__array_type_info  class
is described by <XREF LINKEND="rtti-242">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-242">
<TITLE>typeinfo for __cxxabiv1::__array_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__array_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__array_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__array_type_info specified in <XREF linkend="tbl-libstdcxx-clc-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clc-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__array_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clc-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__array_type_info specified in <XREF linkend="tbl-libstdcxx-clc-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clc-data">
<TITLE>libstdcxx - Class __cxxabiv1::__array_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo for __cxxabiv1::__array_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__array_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__array_type_info</primary></indexterm>vtable for __cxxabiv1::__array_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clc-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv117__class_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__class_type_info</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __cxxabiv1::__class_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__class_type_info class
is described by <XREF LINKEND="cls-239-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-239-0">
<TITLE>Primary vtable for __cxxabiv1::__class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__class_type_info  class
is described by <XREF LINKEND="rtti-246">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-246">
<TITLE>typeinfo for __cxxabiv1::__class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__class_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__class_type_info specified in <XREF linkend="tbl-libstdcxx-cld-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cld-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__class_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cld-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cld-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cld-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned int) const(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cld-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cld-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cld-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cld-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__class_type_info specified in <XREF linkend="tbl-libstdcxx-cld-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cld-data">
<TITLE>libstdcxx - Class __cxxabiv1::__class_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__class_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cld-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__class_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cld-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cld-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cld-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv117__pbase_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__pbase_type_info class
is described by <XREF LINKEND="cls-247-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-247-0">
<TITLE>Primary vtable for __cxxabiv1::__pbase_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pbase_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__pbase_type_info  class
is described by <XREF LINKEND="rtti-248">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-248">
<TITLE>typeinfo for __cxxabiv1::__pbase_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pbase_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__pbase_type_info specified in <XREF linkend="tbl-libstdcxx-cle-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cle-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__pbase_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cle-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cle-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cle-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned int) const(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cle-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cle-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cle-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__pbase_type_info specified in <XREF linkend="tbl-libstdcxx-cle-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cle-data">
<TITLE>libstdcxx - Class __cxxabiv1::__pbase_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pbase_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cle-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pbase_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cle-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__pbase_type_info</primary></indexterm>vtable for __cxxabiv1::__pbase_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cle-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cle-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv119__pointer_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__pointer_type_info class
is described by <XREF LINKEND="cls-249-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-249-0">
<TITLE>Primary vtable for __cxxabiv1::__pointer_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__is_pointer_p() const</primary></indexterm>__cxxabiv1::__pointer_type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__pointer_type_info  class
is described by <XREF LINKEND="rtti-250">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-250">
<TITLE>typeinfo for __cxxabiv1::__pointer_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__pointer_type_info specified in <XREF linkend="tbl-libstdcxx-clf-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clf-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__pointer_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__is_pointer_p() const</primary></indexterm>__cxxabiv1::__pointer_type_info::__is_pointer_p() const(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clf-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__pointer_type_info specified in <XREF linkend="tbl-libstdcxx-clf-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clf-data">
<TITLE>libstdcxx - Class __cxxabiv1::__pointer_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__pointer_type_info</primary></indexterm>vtable for __cxxabiv1::__pointer_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clf-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv120__function_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__function_type_info</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __cxxabiv1::__function_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__function_type_info class
is described by <XREF LINKEND="cls-251-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-251-0">
<TITLE>Primary vtable for __cxxabiv1::__function_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo for __cxxabiv1::__function_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::__is_function_p() const</primary></indexterm>__cxxabiv1::__function_type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__function_type_info  class
is described by <XREF LINKEND="rtti-252">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-252">
<TITLE>typeinfo for __cxxabiv1::__function_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__function_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__function_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__function_type_info specified in <XREF linkend="tbl-libstdcxx-clg-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clg-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__function_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::__is_function_p() const</primary></indexterm>__cxxabiv1::__function_type_info::__is_function_p() const(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clg-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__function_type_info specified in <XREF linkend="tbl-libstdcxx-clg-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clg-data">
<TITLE>libstdcxx - Class __cxxabiv1::__function_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo for __cxxabiv1::__function_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clg-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__function_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clg-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__function_type_info</primary></indexterm>vtable for __cxxabiv1::__function_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clg-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clg-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv120__si_class_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__si_class_type_info class
is described by <XREF LINKEND="cls-253-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-253-0">
<TITLE>Primary vtable for __cxxabiv1::__si_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__si_class_type_info  class
is described by <XREF LINKEND="rtti-254">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-254">
<TITLE>typeinfo for __cxxabiv1::__si_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__si_class_type_info specified in <XREF linkend="tbl-libstdcxx-clh-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clh-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__si_class_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clh-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__si_class_type_info specified in <XREF linkend="tbl-libstdcxx-clh-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clh-data">
<TITLE>libstdcxx - Class __cxxabiv1::__si_class_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__si_class_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__si_class_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clh-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv121__vmi_class_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__vmi_class_type_info class
is described by <XREF LINKEND="cls-255-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-255-0">
<TITLE>Primary vtable for __cxxabiv1::__vmi_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__vmi_class_type_info  class
is described by <XREF LINKEND="rtti-256">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-256">
<TITLE>typeinfo for __cxxabiv1::__vmi_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__vmi_class_type_info specified in <XREF linkend="tbl-libstdcxx-cli-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cli-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__vmi_class_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cli-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cli-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cli-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cli-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cli-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__vmi_class_type_info specified in <XREF linkend="tbl-libstdcxx-cli-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cli-data">
<TITLE>libstdcxx - Class __cxxabiv1::__vmi_class_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__vmi_class_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cli-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__vmi_class_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cli-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-cli-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cli-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv123__fundamental_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__fundamental_type_info class
is described by <XREF LINKEND="cls-257-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-257-0">
<TITLE>Primary vtable for __cxxabiv1::__fundamental_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo for __cxxabiv1::__fundamental_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__fundamental_type_info  class
is described by <XREF LINKEND="rtti-258">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-258">
<TITLE>typeinfo for __cxxabiv1::__fundamental_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__fundamental_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__fundamental_type_info specified in <XREF linkend="tbl-libstdcxx-clj-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clj-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__fundamental_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clj-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__fundamental_type_info specified in <XREF linkend="tbl-libstdcxx-clj-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clj-data">
<TITLE>libstdcxx - Class __cxxabiv1::__fundamental_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo for __cxxabiv1::__fundamental_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__fundamental_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__fundamental_type_info</primary></indexterm>vtable for __cxxabiv1::__fundamental_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clj-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN10__cxxabiv129__pointer_to_member_type_infoE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __cxxabiv1::__pointer_to_member_type_info class
is described by <XREF LINKEND="cls-259-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-259-0">
<TITLE>Primary vtable for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_to_member_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the __cxxabiv1::__pointer_to_member_type_info  class
is described by <XREF LINKEND="rtti-260">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-260">
<TITLE>typeinfo for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_to_member_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __cxxabiv1::__pointer_to_member_type_info specified in <XREF linkend="tbl-libstdcxx-clk-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clk-ints">
<TITLE>libstdcxx - Class __cxxabiv1::__pointer_to_member_type_info Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned int) const(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clk-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __cxxabiv1::__pointer_to_member_type_info specified in <XREF linkend="tbl-libstdcxx-clk-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clk-data">
<TITLE>libstdcxx - Class __cxxabiv1::__pointer_to_member_type_info Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_to_member_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_to_member_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>vtable for __cxxabiv1::__pointer_to_member_type_info(CXXABI_1.3) <LINK LINKEND="std-231-87-tbl-libstdcxx-clk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clk-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN9__gnu_cxx13stdio_filebufIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __gnu_cxx::stdio_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-293-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-293-0">
<TITLE>Primary vtable for __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>Unspecified</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>Unspecified</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class __gnu_cxx::stdio_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __gnu_cxx::stdio_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cll-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cll-data">
<TITLE>libstdcxx - Class __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cll-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cll-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cll-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN9__gnu_cxx13stdio_filebufIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the __gnu_cxx::stdio_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-292-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-292-0">
<TITLE>Primary vtable for __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>Unspecified</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>Unspecified</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class __gnu_cxx::stdio_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __gnu_cxx::stdio_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clm-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clm-data">
<TITLE>libstdcxx - Class __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clm-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clm-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clm-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN9__gnu_cxx17__pool_alloc_baseE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __gnu_cxx::__pool_alloc_base</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class __gnu_cxx::__pool_alloc_base</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __gnu_cxx::__pool_alloc_base specified in <XREF linkend="tbl-libstdcxx-cln-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cln-ints">
<TITLE>libstdcxx - Class __gnu_cxx::__pool_alloc_base Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::__pool_alloc_base::_M_get_mutex()</primary></indexterm>__gnu_cxx::__pool_alloc_base::_M_get_mutex()(GLIBCXX_3.4.2) <LINK LINKEND="std-231-10-tbl-libstdcxx-cln-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-10-tbl-libstdcxx-cln-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clo-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clo-ints">
<TITLE>libstdcxx - Class __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;::file()</primary></indexterm>__gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;::file()(GLIBCXX_3.4.2) <LINK LINKEND="std-231-10-tbl-libstdcxx-clo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-10-tbl-libstdcxx-clo-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clo-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clo-data">
<TITLE>libstdcxx - Class __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-clo-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-clo-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for __gnu_cxx::stdio_sync_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-clo-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-10-tbl-libstdcxx-clo-data">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clp-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clp-ints">
<TITLE>libstdcxx - Class __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::file()</primary></indexterm>__gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::file()(GLIBCXX_3.4.2) <LINK LINKEND="std-231-10-tbl-libstdcxx-clp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-10-tbl-libstdcxx-clp-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-clp-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clp-data">
<TITLE>libstdcxx - Class __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-clp-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-clp-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for __gnu_cxx::stdio_sync_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-clp-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-10-tbl-libstdcxx-clp-data">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9exception -->
<SECT2>
<!--libgroup-->
<TITLE>Class exception</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for exception</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::exception class
is described by <XREF LINKEND="cls-261-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-261-0">
<TITLE>Primary vtable for exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for exception</primary></indexterm>typeinfo for exception</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception()</primary></indexterm>exception::~exception()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception()</primary></indexterm>exception::~exception()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::exception  class
is described by <XREF LINKEND="rtti-262">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-262">
<TITLE>typeinfo for exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for exception</primary></indexterm>typeinfo name for exception</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class exception</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::exception specified in <XREF linkend="tbl-libstdcxx-clq-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clq-ints">
<TITLE>libstdcxx - Class exception Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception()</primary></indexterm>exception::~exception()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception()</primary></indexterm>exception::~exception()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception()</primary></indexterm>exception::~exception()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-clq-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::exception specified in <XREF linkend="tbl-libstdcxx-clq-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clq-data">
<TITLE>libstdcxx - Class exception Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for exception</primary></indexterm>typeinfo for exception(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for exception</primary></indexterm>typeinfo name for exception(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for exception</primary></indexterm>vtable for exception(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clq-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10bad_typeid -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_typeid</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for bad_typeid</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_typeid class
is described by <XREF LINKEND="cls-263-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-263-0">
<TITLE>Primary vtable for bad_typeid</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_typeid</primary></indexterm>typeinfo for bad_typeid</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid()</primary></indexterm>bad_typeid::~bad_typeid()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid()</primary></indexterm>bad_typeid::~bad_typeid()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_typeid  class
is described by <XREF LINKEND="rtti-264">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-264">
<TITLE>typeinfo for bad_typeid</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_typeid</primary></indexterm>typeinfo name for bad_typeid</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class bad_typeid</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::bad_typeid specified in <XREF linkend="tbl-libstdcxx-clr-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clr-ints">
<TITLE>libstdcxx - Class bad_typeid Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid()</primary></indexterm>bad_typeid::~bad_typeid()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid()</primary></indexterm>bad_typeid::~bad_typeid()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid()</primary></indexterm>bad_typeid::~bad_typeid()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-clr-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::bad_typeid specified in <XREF linkend="tbl-libstdcxx-clr-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clr-data">
<TITLE>libstdcxx - Class bad_typeid Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_typeid</primary></indexterm>typeinfo for bad_typeid(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clr-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_typeid</primary></indexterm>typeinfo name for bad_typeid(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clr-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for bad_typeid</primary></indexterm>vtable for bad_typeid(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clr-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clr-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt11logic_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class logic_error</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for logic_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::logic_error class
is described by <XREF LINKEND="cls-265-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-265-0">
<TITLE>Primary vtable for logic_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for logic_error</primary></indexterm>typeinfo for logic_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error()</primary></indexterm>logic_error::~logic_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error()</primary></indexterm>logic_error::~logic_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::logic_error  class
is described by <XREF LINKEND="rtti-266">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-266">
<TITLE>typeinfo for logic_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for logic_error</primary></indexterm>typeinfo name for logic_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class logic_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::logic_error specified in <XREF linkend="tbl-libstdcxx-cls-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cls-ints">
<TITLE>libstdcxx - Class logic_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cls-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::logic_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>logic_error::logic_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cls-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::logic_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>logic_error::logic_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cls-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error()</primary></indexterm>logic_error::~logic_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cls-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error()</primary></indexterm>logic_error::~logic_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cls-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error()</primary></indexterm>logic_error::~logic_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cls-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cls-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::logic_error specified in <XREF linkend="tbl-libstdcxx-cls-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cls-data">
<TITLE>libstdcxx - Class logic_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for logic_error</primary></indexterm>typeinfo for logic_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cls-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for logic_error</primary></indexterm>typeinfo name for logic_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cls-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for logic_error</primary></indexterm>vtable for logic_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cls-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cls-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt11range_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class range_error</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for range_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::range_error class
is described by <XREF LINKEND="cls-267-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-267-0">
<TITLE>Primary vtable for range_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for range_error</primary></indexterm>typeinfo for range_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error()</primary></indexterm>range_error::~range_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error()</primary></indexterm>range_error::~range_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::range_error  class
is described by <XREF LINKEND="rtti-268">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-268">
<TITLE>typeinfo for range_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for range_error</primary></indexterm>typeinfo name for range_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class range_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::range_error specified in <XREF linkend="tbl-libstdcxx-clt-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clt-ints">
<TITLE>libstdcxx - Class range_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>range_error::range_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>range_error::range_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>range_error::range_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>range_error::range_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error()</primary></indexterm>range_error::~range_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error()</primary></indexterm>range_error::~range_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-clt-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::range_error specified in <XREF linkend="tbl-libstdcxx-clt-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clt-data">
<TITLE>libstdcxx - Class range_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for range_error</primary></indexterm>typeinfo for range_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for range_error</primary></indexterm>typeinfo name for range_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for range_error</primary></indexterm>vtable for range_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clt-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12domain_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class domain_error</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for domain_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::domain_error class
is described by <XREF LINKEND="cls-269-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-269-0">
<TITLE>Primary vtable for domain_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for domain_error</primary></indexterm>typeinfo for domain_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error()</primary></indexterm>domain_error::~domain_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error()</primary></indexterm>domain_error::~domain_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::domain_error  class
is described by <XREF LINKEND="rtti-270">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-270">
<TITLE>typeinfo for domain_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for domain_error</primary></indexterm>typeinfo name for domain_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class domain_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::domain_error specified in <XREF linkend="tbl-libstdcxx-clu-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clu-ints">
<TITLE>libstdcxx - Class domain_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::domain_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>domain_error::domain_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::domain_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>domain_error::domain_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error()</primary></indexterm>domain_error::~domain_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error()</primary></indexterm>domain_error::~domain_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-clu-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::domain_error specified in <XREF linkend="tbl-libstdcxx-clu-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clu-data">
<TITLE>libstdcxx - Class domain_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for domain_error</primary></indexterm>typeinfo for domain_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for domain_error</primary></indexterm>typeinfo name for domain_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for domain_error</primary></indexterm>vtable for domain_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clu-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12length_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class length_error</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for length_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::length_error class
is described by <XREF LINKEND="cls-271-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-271-0">
<TITLE>Primary vtable for length_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for length_error</primary></indexterm>typeinfo for length_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error()</primary></indexterm>length_error::~length_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error()</primary></indexterm>length_error::~length_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::length_error  class
is described by <XREF LINKEND="rtti-272">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-272">
<TITLE>typeinfo for length_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for length_error</primary></indexterm>typeinfo name for length_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class length_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::length_error specified in <XREF linkend="tbl-libstdcxx-clv-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clv-ints">
<TITLE>libstdcxx - Class length_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>length_error::length_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>length_error::length_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>length_error::length_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>length_error::length_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error()</primary></indexterm>length_error::~length_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error()</primary></indexterm>length_error::~length_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-clv-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::length_error specified in <XREF linkend="tbl-libstdcxx-clv-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clv-data">
<TITLE>libstdcxx - Class length_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for length_error</primary></indexterm>typeinfo for length_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for length_error</primary></indexterm>typeinfo name for length_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for length_error</primary></indexterm>vtable for length_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clv-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12out_of_range -->
<SECT2>
<!--libgroup-->
<TITLE>Class out_of_range</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for out_of_range</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::out_of_range class
is described by <XREF LINKEND="cls-273-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-273-0">
<TITLE>Primary vtable for out_of_range</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for out_of_range</primary></indexterm>typeinfo for out_of_range</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range()</primary></indexterm>out_of_range::~out_of_range()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range()</primary></indexterm>out_of_range::~out_of_range()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::out_of_range  class
is described by <XREF LINKEND="rtti-274">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-274">
<TITLE>typeinfo for out_of_range</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for out_of_range</primary></indexterm>typeinfo name for out_of_range</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class out_of_range</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::out_of_range specified in <XREF linkend="tbl-libstdcxx-clw-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clw-ints">
<TITLE>libstdcxx - Class out_of_range Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::out_of_range(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>out_of_range::out_of_range(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::out_of_range(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>out_of_range::out_of_range(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range()</primary></indexterm>out_of_range::~out_of_range()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range()</primary></indexterm>out_of_range::~out_of_range()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-clw-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::out_of_range specified in <XREF linkend="tbl-libstdcxx-clw-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clw-data">
<TITLE>libstdcxx - Class out_of_range Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for out_of_range</primary></indexterm>typeinfo for out_of_range(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for out_of_range</primary></indexterm>typeinfo name for out_of_range(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for out_of_range</primary></indexterm>vtable for out_of_range(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clw-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13bad_exception -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_exception</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for bad_exception</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_exception class
is described by <XREF LINKEND="cls-275-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-275-0">
<TITLE>Primary vtable for bad_exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_exception</primary></indexterm>typeinfo for bad_exception</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception()</primary></indexterm>bad_exception::~bad_exception()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception()</primary></indexterm>bad_exception::~bad_exception()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_exception  class
is described by <XREF LINKEND="rtti-276">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-276">
<TITLE>typeinfo for bad_exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_exception</primary></indexterm>typeinfo name for bad_exception</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class bad_exception</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::bad_exception specified in <XREF linkend="tbl-libstdcxx-clx-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clx-ints">
<TITLE>libstdcxx - Class bad_exception Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception()</primary></indexterm>bad_exception::~bad_exception()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception()</primary></indexterm>bad_exception::~bad_exception()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception()</primary></indexterm>bad_exception::~bad_exception()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-clx-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::bad_exception specified in <XREF linkend="tbl-libstdcxx-clx-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clx-data">
<TITLE>libstdcxx - Class bad_exception Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_exception</primary></indexterm>typeinfo for bad_exception(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_exception</primary></indexterm>typeinfo name for bad_exception(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for bad_exception</primary></indexterm>vtable for bad_exception(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clx-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13runtime_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class runtime_error</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for runtime_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::runtime_error class
is described by <XREF LINKEND="cls-277-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-277-0">
<TITLE>Primary vtable for runtime_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for runtime_error</primary></indexterm>typeinfo for runtime_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error()</primary></indexterm>runtime_error::~runtime_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error()</primary></indexterm>runtime_error::~runtime_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::runtime_error  class
is described by <XREF LINKEND="rtti-278">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-278">
<TITLE>typeinfo for runtime_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for runtime_error</primary></indexterm>typeinfo name for runtime_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class runtime_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::runtime_error specified in <XREF linkend="tbl-libstdcxx-cly-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cly-ints">
<TITLE>libstdcxx - Class runtime_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::runtime_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>runtime_error::runtime_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::runtime_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>runtime_error::runtime_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error()</primary></indexterm>runtime_error::~runtime_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error()</primary></indexterm>runtime_error::~runtime_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error()</primary></indexterm>runtime_error::~runtime_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cly-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cly-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::runtime_error specified in <XREF linkend="tbl-libstdcxx-cly-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cly-data">
<TITLE>libstdcxx - Class runtime_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for runtime_error</primary></indexterm>typeinfo for runtime_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cly-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for runtime_error</primary></indexterm>typeinfo name for runtime_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cly-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for runtime_error</primary></indexterm>vtable for runtime_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cly-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cly-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14overflow_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class overflow_error</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for overflow_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::overflow_error class
is described by <XREF LINKEND="cls-279-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-279-0">
<TITLE>Primary vtable for overflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for overflow_error</primary></indexterm>typeinfo for overflow_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error()</primary></indexterm>overflow_error::~overflow_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error()</primary></indexterm>overflow_error::~overflow_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::overflow_error  class
is described by <XREF LINKEND="rtti-280">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-280">
<TITLE>typeinfo for overflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for overflow_error</primary></indexterm>typeinfo name for overflow_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class overflow_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::overflow_error specified in <XREF linkend="tbl-libstdcxx-clz-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clz-ints">
<TITLE>libstdcxx - Class overflow_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::overflow_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>overflow_error::overflow_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::overflow_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>overflow_error::overflow_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error()</primary></indexterm>overflow_error::~overflow_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error()</primary></indexterm>overflow_error::~overflow_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-clz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-clz-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::overflow_error specified in <XREF linkend="tbl-libstdcxx-clz-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-clz-data">
<TITLE>libstdcxx - Class overflow_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for overflow_error</primary></indexterm>typeinfo for overflow_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for overflow_error</primary></indexterm>typeinfo name for overflow_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for overflow_error</primary></indexterm>vtable for overflow_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-clz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-clz-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15underflow_error -->
<SECT2>
<!--libgroup-->
<TITLE>Class underflow_error</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for underflow_error</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::underflow_error class
is described by <XREF LINKEND="cls-281-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-281-0">
<TITLE>Primary vtable for underflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for underflow_error</primary></indexterm>typeinfo for underflow_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error()</primary></indexterm>underflow_error::~underflow_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error()</primary></indexterm>underflow_error::~underflow_error()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::underflow_error  class
is described by <XREF LINKEND="rtti-282">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-282">
<TITLE>typeinfo for underflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for underflow_error</primary></indexterm>typeinfo name for underflow_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class underflow_error</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::underflow_error specified in <XREF linkend="tbl-libstdcxx-cma-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cma-ints">
<TITLE>libstdcxx - Class underflow_error Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::underflow_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>underflow_error::underflow_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::underflow_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>underflow_error::underflow_error(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error()</primary></indexterm>underflow_error::~underflow_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error()</primary></indexterm>underflow_error::~underflow_error()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cma-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cma-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::underflow_error specified in <XREF linkend="tbl-libstdcxx-cma-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cma-data">
<TITLE>libstdcxx - Class underflow_error Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for underflow_error</primary></indexterm>typeinfo for underflow_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cma-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for underflow_error</primary></indexterm>typeinfo name for underflow_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cma-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for underflow_error</primary></indexterm>vtable for underflow_error(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cma-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cma-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt16invalid_argument -->
<SECT2>
<!--libgroup-->
<TITLE>Class invalid_argument</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for invalid_argument</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::invalid_argument class
is described by <XREF LINKEND="cls-283-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-283-0">
<TITLE>Primary vtable for invalid_argument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for invalid_argument</primary></indexterm>typeinfo for invalid_argument</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument()</primary></indexterm>invalid_argument::~invalid_argument()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument()</primary></indexterm>invalid_argument::~invalid_argument()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::invalid_argument  class
is described by <XREF LINKEND="rtti-284">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-284">
<TITLE>typeinfo for invalid_argument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for invalid_argument</primary></indexterm>typeinfo name for invalid_argument</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class invalid_argument</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::invalid_argument specified in <XREF linkend="tbl-libstdcxx-cmb-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmb-ints">
<TITLE>libstdcxx - Class invalid_argument Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::invalid_argument(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>invalid_argument::invalid_argument(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::invalid_argument(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>invalid_argument::invalid_argument(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument()</primary></indexterm>invalid_argument::~invalid_argument()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument()</primary></indexterm>invalid_argument::~invalid_argument()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmb-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::invalid_argument specified in <XREF linkend="tbl-libstdcxx-cmb-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmb-data">
<TITLE>libstdcxx - Class invalid_argument Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for invalid_argument</primary></indexterm>typeinfo for invalid_argument(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for invalid_argument</primary></indexterm>typeinfo name for invalid_argument(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for invalid_argument</primary></indexterm>vtable for invalid_argument(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmb-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8bad_cast -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_cast</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for bad_cast</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_cast class
is described by <XREF LINKEND="cls-285-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-285-0">
<TITLE>Primary vtable for bad_cast</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_cast</primary></indexterm>typeinfo for bad_cast</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast()</primary></indexterm>bad_cast::~bad_cast()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast()</primary></indexterm>bad_cast::~bad_cast()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_cast  class
is described by <XREF LINKEND="rtti-286">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-286">
<TITLE>typeinfo for bad_cast</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_cast</primary></indexterm>typeinfo name for bad_cast</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class bad_cast</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::bad_cast specified in <XREF linkend="tbl-libstdcxx-cmc-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmc-ints">
<TITLE>libstdcxx - Class bad_cast Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast()</primary></indexterm>bad_cast::~bad_cast()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast()</primary></indexterm>bad_cast::~bad_cast()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast()</primary></indexterm>bad_cast::~bad_cast()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmc-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::bad_cast specified in <XREF linkend="tbl-libstdcxx-cmc-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmc-data">
<TITLE>libstdcxx - Class bad_cast Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_cast</primary></indexterm>typeinfo for bad_cast(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_cast</primary></indexterm>typeinfo name for bad_cast(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for bad_cast</primary></indexterm>vtable for bad_cast(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmc-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9bad_alloc -->
<SECT2>
<!--libgroup-->
<TITLE>Class bad_alloc</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for bad_alloc</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::bad_alloc class
is described by <XREF LINKEND="cls-287-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-287-0">
<TITLE>Primary vtable for bad_alloc</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_alloc</primary></indexterm>typeinfo for bad_alloc</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc()</primary></indexterm>bad_alloc::~bad_alloc()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc()</primary></indexterm>bad_alloc::~bad_alloc()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::bad_alloc  class
is described by <XREF LINKEND="rtti-288">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-288">
<TITLE>typeinfo for bad_alloc</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_alloc</primary></indexterm>typeinfo name for bad_alloc</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class bad_alloc</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::bad_alloc specified in <XREF linkend="tbl-libstdcxx-cmd-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmd-ints">
<TITLE>libstdcxx - Class bad_alloc Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc()</primary></indexterm>bad_alloc::~bad_alloc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc()</primary></indexterm>bad_alloc::~bad_alloc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc()</primary></indexterm>bad_alloc::~bad_alloc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmd-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::bad_alloc specified in <XREF linkend="tbl-libstdcxx-cmd-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmd-data">
<TITLE>libstdcxx - Class bad_alloc Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_alloc</primary></indexterm>typeinfo for bad_alloc(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmd-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_alloc</primary></indexterm>typeinfo name for bad_alloc(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmd-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for bad_alloc</primary></indexterm>vtable for bad_alloc(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmd-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmd-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct __numeric_limits_base -->
<SECT2>
<!--libgroup-->
<TITLE>struct __numeric_limits_base</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct __numeric_limits_base</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct __numeric_limits_base
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct __numeric_limits_base specified in <XREF linkend="tbl-libstdcxx-str-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-str-data">
<TITLE>libstdcxx - struct __numeric_limits_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::has_denorm</primary></indexterm>__numeric_limits_base::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_bounded</primary></indexterm>__numeric_limits_base::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_integer</primary></indexterm>__numeric_limits_base::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::round_style</primary></indexterm>__numeric_limits_base::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::has_infinity</primary></indexterm>__numeric_limits_base::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::max_exponent</primary></indexterm>__numeric_limits_base::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::min_exponent</primary></indexterm>__numeric_limits_base::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::has_quiet_NaN</primary></indexterm>__numeric_limits_base::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_specialized</primary></indexterm>__numeric_limits_base::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::max_exponent10</primary></indexterm>__numeric_limits_base::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::min_exponent10</primary></indexterm>__numeric_limits_base::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::has_denorm_loss</primary></indexterm>__numeric_limits_base::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::tinyness_before</primary></indexterm>__numeric_limits_base::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::has_signaling_NaN</primary></indexterm>__numeric_limits_base::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::radix</primary></indexterm>__numeric_limits_base::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::traps</primary></indexterm>__numeric_limits_base::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::digits</primary></indexterm>__numeric_limits_base::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::digits10</primary></indexterm>__numeric_limits_base::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_exact</primary></indexterm>__numeric_limits_base::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_iec559</primary></indexterm>__numeric_limits_base::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_modulo</primary></indexterm>__numeric_limits_base::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__numeric_limits_base::is_signed</primary></indexterm>__numeric_limits_base::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-str-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-str-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<long double> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;long double&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;long double&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;long double&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;long double&gt; specified in <XREF linkend="tbl-libstdcxx-sts-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sts-data">
<TITLE>libstdcxx - struct numeric_limits&lt;long double&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::has_denorm</primary></indexterm>numeric_limits&lt;long double&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_bounded</primary></indexterm>numeric_limits&lt;long double&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_integer</primary></indexterm>numeric_limits&lt;long double&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::round_style</primary></indexterm>numeric_limits&lt;long double&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::has_infinity</primary></indexterm>numeric_limits&lt;long double&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::max_exponent</primary></indexterm>numeric_limits&lt;long double&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::min_exponent</primary></indexterm>numeric_limits&lt;long double&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;long double&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_specialized</primary></indexterm>numeric_limits&lt;long double&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;long double&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;long double&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;long double&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;long double&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;long double&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::radix</primary></indexterm>numeric_limits&lt;long double&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::traps</primary></indexterm>numeric_limits&lt;long double&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::digits</primary></indexterm>numeric_limits&lt;long double&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::digits10</primary></indexterm>numeric_limits&lt;long double&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_exact</primary></indexterm>numeric_limits&lt;long double&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_iec559</primary></indexterm>numeric_limits&lt;long double&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_modulo</primary></indexterm>numeric_limits&lt;long double&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long double&gt;::is_signed</primary></indexterm>numeric_limits&lt;long double&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sts-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-sts-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<long long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;long long&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;long long&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;long long&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;long long&gt; specified in <XREF linkend="tbl-libstdcxx-stt-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stt-data">
<TITLE>libstdcxx - struct numeric_limits&lt;long long&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::has_denorm</primary></indexterm>numeric_limits&lt;long long&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_bounded</primary></indexterm>numeric_limits&lt;long long&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_integer</primary></indexterm>numeric_limits&lt;long long&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::round_style</primary></indexterm>numeric_limits&lt;long long&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::has_infinity</primary></indexterm>numeric_limits&lt;long long&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::max_exponent</primary></indexterm>numeric_limits&lt;long long&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::min_exponent</primary></indexterm>numeric_limits&lt;long long&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;long long&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_specialized</primary></indexterm>numeric_limits&lt;long long&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;long long&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;long long&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;long long&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;long long&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;long long&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::radix</primary></indexterm>numeric_limits&lt;long long&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::traps</primary></indexterm>numeric_limits&lt;long long&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::digits</primary></indexterm>numeric_limits&lt;long long&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::digits10</primary></indexterm>numeric_limits&lt;long long&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_exact</primary></indexterm>numeric_limits&lt;long long&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_iec559</primary></indexterm>numeric_limits&lt;long long&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_modulo</primary></indexterm>numeric_limits&lt;long long&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long long&gt;::is_signed</primary></indexterm>numeric_limits&lt;long long&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-stt-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned long long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned long long&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned long long&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;unsigned long long&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;unsigned long long&gt; specified in <XREF linkend="tbl-libstdcxx-stu-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stu-data">
<TITLE>libstdcxx - struct numeric_limits&lt;unsigned long long&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::has_denorm</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_bounded</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_integer</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::round_style</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::has_infinity</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::max_exponent</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::min_exponent</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_specialized</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::radix</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::traps</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::digits</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::digits10</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_exact</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_iec559</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_modulo</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long long&gt;::is_signed</primary></indexterm>numeric_limits&lt;unsigned long long&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-stu-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<float> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;float&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;float&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;float&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;float&gt; specified in <XREF linkend="tbl-libstdcxx-stv-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stv-data">
<TITLE>libstdcxx - struct numeric_limits&lt;float&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::has_denorm</primary></indexterm>numeric_limits&lt;float&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_bounded</primary></indexterm>numeric_limits&lt;float&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_integer</primary></indexterm>numeric_limits&lt;float&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::round_style</primary></indexterm>numeric_limits&lt;float&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::has_infinity</primary></indexterm>numeric_limits&lt;float&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::max_exponent</primary></indexterm>numeric_limits&lt;float&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::min_exponent</primary></indexterm>numeric_limits&lt;float&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;float&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_specialized</primary></indexterm>numeric_limits&lt;float&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;float&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;float&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;float&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;float&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;float&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::radix</primary></indexterm>numeric_limits&lt;float&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::traps</primary></indexterm>numeric_limits&lt;float&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::digits</primary></indexterm>numeric_limits&lt;float&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::digits10</primary></indexterm>numeric_limits&lt;float&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_exact</primary></indexterm>numeric_limits&lt;float&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_iec559</primary></indexterm>numeric_limits&lt;float&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_modulo</primary></indexterm>numeric_limits&lt;float&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;float&gt;::is_signed</primary></indexterm>numeric_limits&lt;float&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-stv-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<double> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;double&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;double&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;double&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;double&gt; specified in <XREF linkend="tbl-libstdcxx-stw-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stw-data">
<TITLE>libstdcxx - struct numeric_limits&lt;double&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::has_denorm</primary></indexterm>numeric_limits&lt;double&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_bounded</primary></indexterm>numeric_limits&lt;double&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_integer</primary></indexterm>numeric_limits&lt;double&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::round_style</primary></indexterm>numeric_limits&lt;double&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::has_infinity</primary></indexterm>numeric_limits&lt;double&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::max_exponent</primary></indexterm>numeric_limits&lt;double&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::min_exponent</primary></indexterm>numeric_limits&lt;double&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;double&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_specialized</primary></indexterm>numeric_limits&lt;double&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;double&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;double&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;double&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;double&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;double&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::radix</primary></indexterm>numeric_limits&lt;double&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::traps</primary></indexterm>numeric_limits&lt;double&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::digits</primary></indexterm>numeric_limits&lt;double&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::digits10</primary></indexterm>numeric_limits&lt;double&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_exact</primary></indexterm>numeric_limits&lt;double&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_iec559</primary></indexterm>numeric_limits&lt;double&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_modulo</primary></indexterm>numeric_limits&lt;double&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;double&gt;::is_signed</primary></indexterm>numeric_limits&lt;double&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-stw-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<short> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;short&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;short&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;short&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;short&gt; specified in <XREF linkend="tbl-libstdcxx-stx-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stx-data">
<TITLE>libstdcxx - struct numeric_limits&lt;short&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::has_denorm</primary></indexterm>numeric_limits&lt;short&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_bounded</primary></indexterm>numeric_limits&lt;short&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_integer</primary></indexterm>numeric_limits&lt;short&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::round_style</primary></indexterm>numeric_limits&lt;short&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::has_infinity</primary></indexterm>numeric_limits&lt;short&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::max_exponent</primary></indexterm>numeric_limits&lt;short&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::min_exponent</primary></indexterm>numeric_limits&lt;short&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;short&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_specialized</primary></indexterm>numeric_limits&lt;short&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;short&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;short&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;short&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;short&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;short&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::radix</primary></indexterm>numeric_limits&lt;short&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::traps</primary></indexterm>numeric_limits&lt;short&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::digits</primary></indexterm>numeric_limits&lt;short&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::digits10</primary></indexterm>numeric_limits&lt;short&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_exact</primary></indexterm>numeric_limits&lt;short&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_iec559</primary></indexterm>numeric_limits&lt;short&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_modulo</primary></indexterm>numeric_limits&lt;short&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;short&gt;::is_signed</primary></indexterm>numeric_limits&lt;short&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-stx-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned short> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned short&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned short&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;unsigned short&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;unsigned short&gt; specified in <XREF linkend="tbl-libstdcxx-sty-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sty-data">
<TITLE>libstdcxx - struct numeric_limits&lt;unsigned short&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::has_denorm</primary></indexterm>numeric_limits&lt;unsigned short&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_bounded</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_integer</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::round_style</primary></indexterm>numeric_limits&lt;unsigned short&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::has_infinity</primary></indexterm>numeric_limits&lt;unsigned short&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::max_exponent</primary></indexterm>numeric_limits&lt;unsigned short&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::min_exponent</primary></indexterm>numeric_limits&lt;unsigned short&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;unsigned short&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_specialized</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;unsigned short&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;unsigned short&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;unsigned short&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;unsigned short&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;unsigned short&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::radix</primary></indexterm>numeric_limits&lt;unsigned short&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::traps</primary></indexterm>numeric_limits&lt;unsigned short&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::digits</primary></indexterm>numeric_limits&lt;unsigned short&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::digits10</primary></indexterm>numeric_limits&lt;unsigned short&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_exact</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_iec559</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_modulo</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned short&gt;::is_signed</primary></indexterm>numeric_limits&lt;unsigned short&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sty-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-sty-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<int> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;int&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;int&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;int&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;int&gt; specified in <XREF linkend="tbl-libstdcxx-stz-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-stz-data">
<TITLE>libstdcxx - struct numeric_limits&lt;int&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::has_denorm</primary></indexterm>numeric_limits&lt;int&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_bounded</primary></indexterm>numeric_limits&lt;int&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_integer</primary></indexterm>numeric_limits&lt;int&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::round_style</primary></indexterm>numeric_limits&lt;int&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::has_infinity</primary></indexterm>numeric_limits&lt;int&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::max_exponent</primary></indexterm>numeric_limits&lt;int&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::min_exponent</primary></indexterm>numeric_limits&lt;int&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;int&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_specialized</primary></indexterm>numeric_limits&lt;int&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;int&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;int&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;int&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;int&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;int&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::radix</primary></indexterm>numeric_limits&lt;int&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::traps</primary></indexterm>numeric_limits&lt;int&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::digits</primary></indexterm>numeric_limits&lt;int&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::digits10</primary></indexterm>numeric_limits&lt;int&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_exact</primary></indexterm>numeric_limits&lt;int&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_iec559</primary></indexterm>numeric_limits&lt;int&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_modulo</primary></indexterm>numeric_limits&lt;int&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;int&gt;::is_signed</primary></indexterm>numeric_limits&lt;int&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-stz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-stz-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned int> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned int&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned int&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;unsigned int&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;unsigned int&gt; specified in <XREF linkend="tbl-libstdcxx-sua-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sua-data">
<TITLE>libstdcxx - struct numeric_limits&lt;unsigned int&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::has_denorm</primary></indexterm>numeric_limits&lt;unsigned int&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::is_bounded</primary></indexterm>numeric_limits&lt;unsigned int&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::is_integer</primary></indexterm>numeric_limits&lt;unsigned int&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::round_style</primary></indexterm>numeric_limits&lt;unsigned int&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::has_infinity</primary></indexterm>numeric_limits&lt;unsigned int&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::max_exponent</primary></indexterm>numeric_limits&lt;unsigned int&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::min_exponent</primary></indexterm>numeric_limits&lt;unsigned int&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;unsigned int&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::is_specialized</primary></indexterm>numeric_limits&lt;unsigned int&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;unsigned int&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;unsigned int&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;unsigned int&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;unsigned int&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;unsigned int&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::radix</primary></indexterm>numeric_limits&lt;unsigned int&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::traps</primary></indexterm>numeric_limits&lt;unsigned int&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::digits</primary></indexterm>numeric_limits&lt;unsigned int&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::digits10</primary></indexterm>numeric_limits&lt;unsigned int&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::is_exact</primary></indexterm>numeric_limits&lt;unsigned int&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::is_iec559</primary></indexterm>numeric_limits&lt;unsigned int&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::is_modulo</primary></indexterm>numeric_limits&lt;unsigned int&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned int&gt;::is_signed</primary></indexterm>numeric_limits&lt;unsigned int&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sua-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-sua-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;long&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;long&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;long&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;long&gt; specified in <XREF linkend="tbl-libstdcxx-sub-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sub-data">
<TITLE>libstdcxx - struct numeric_limits&lt;long&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::has_denorm</primary></indexterm>numeric_limits&lt;long&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_bounded</primary></indexterm>numeric_limits&lt;long&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_integer</primary></indexterm>numeric_limits&lt;long&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::round_style</primary></indexterm>numeric_limits&lt;long&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::has_infinity</primary></indexterm>numeric_limits&lt;long&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::max_exponent</primary></indexterm>numeric_limits&lt;long&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::min_exponent</primary></indexterm>numeric_limits&lt;long&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;long&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_specialized</primary></indexterm>numeric_limits&lt;long&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;long&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;long&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;long&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;long&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;long&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::radix</primary></indexterm>numeric_limits&lt;long&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::traps</primary></indexterm>numeric_limits&lt;long&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::digits</primary></indexterm>numeric_limits&lt;long&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::digits10</primary></indexterm>numeric_limits&lt;long&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_exact</primary></indexterm>numeric_limits&lt;long&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_iec559</primary></indexterm>numeric_limits&lt;long&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_modulo</primary></indexterm>numeric_limits&lt;long&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;long&gt;::is_signed</primary></indexterm>numeric_limits&lt;long&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sub-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-sub-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned long> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned long&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned long&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;unsigned long&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;unsigned long&gt; specified in <XREF linkend="tbl-libstdcxx-suc-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-suc-data">
<TITLE>libstdcxx - struct numeric_limits&lt;unsigned long&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::has_denorm</primary></indexterm>numeric_limits&lt;unsigned long&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_bounded</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_integer</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::round_style</primary></indexterm>numeric_limits&lt;unsigned long&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::has_infinity</primary></indexterm>numeric_limits&lt;unsigned long&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::max_exponent</primary></indexterm>numeric_limits&lt;unsigned long&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::min_exponent</primary></indexterm>numeric_limits&lt;unsigned long&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;unsigned long&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_specialized</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;unsigned long&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;unsigned long&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;unsigned long&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;unsigned long&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;unsigned long&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::radix</primary></indexterm>numeric_limits&lt;unsigned long&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::traps</primary></indexterm>numeric_limits&lt;unsigned long&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::digits</primary></indexterm>numeric_limits&lt;unsigned long&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::digits10</primary></indexterm>numeric_limits&lt;unsigned long&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_exact</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_iec559</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_modulo</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned long&gt;::is_signed</primary></indexterm>numeric_limits&lt;unsigned long&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-suc-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<wchar_t> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;wchar_t&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;wchar_t&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-sud-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sud-data">
<TITLE>libstdcxx - struct numeric_limits&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::has_denorm</primary></indexterm>numeric_limits&lt;wchar_t&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_bounded</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_integer</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::round_style</primary></indexterm>numeric_limits&lt;wchar_t&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::has_infinity</primary></indexterm>numeric_limits&lt;wchar_t&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::max_exponent</primary></indexterm>numeric_limits&lt;wchar_t&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::min_exponent</primary></indexterm>numeric_limits&lt;wchar_t&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;wchar_t&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_specialized</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;wchar_t&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;wchar_t&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;wchar_t&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;wchar_t&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;wchar_t&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::radix</primary></indexterm>numeric_limits&lt;wchar_t&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::traps</primary></indexterm>numeric_limits&lt;wchar_t&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::digits</primary></indexterm>numeric_limits&lt;wchar_t&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::digits10</primary></indexterm>numeric_limits&lt;wchar_t&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_exact</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_iec559</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_modulo</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;wchar_t&gt;::is_signed</primary></indexterm>numeric_limits&lt;wchar_t&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sud-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-sud-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<unsigned char> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned char&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;unsigned char&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;unsigned char&gt; specified in <XREF linkend="tbl-libstdcxx-sue-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sue-data">
<TITLE>libstdcxx - struct numeric_limits&lt;unsigned char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::has_denorm</primary></indexterm>numeric_limits&lt;unsigned char&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_bounded</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_integer</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::round_style</primary></indexterm>numeric_limits&lt;unsigned char&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::has_infinity</primary></indexterm>numeric_limits&lt;unsigned char&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::max_exponent</primary></indexterm>numeric_limits&lt;unsigned char&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::min_exponent</primary></indexterm>numeric_limits&lt;unsigned char&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;unsigned char&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_specialized</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;unsigned char&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;unsigned char&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;unsigned char&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;unsigned char&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;unsigned char&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::radix</primary></indexterm>numeric_limits&lt;unsigned char&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::traps</primary></indexterm>numeric_limits&lt;unsigned char&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::digits</primary></indexterm>numeric_limits&lt;unsigned char&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::digits10</primary></indexterm>numeric_limits&lt;unsigned char&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_exact</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_iec559</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_modulo</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;unsigned char&gt;::is_signed</primary></indexterm>numeric_limits&lt;unsigned char&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sue-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-sue-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<signed char> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;signed char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;signed char&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;signed char&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;signed char&gt; specified in <XREF linkend="tbl-libstdcxx-suf-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-suf-data">
<TITLE>libstdcxx - struct numeric_limits&lt;signed char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::has_denorm</primary></indexterm>numeric_limits&lt;signed char&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_bounded</primary></indexterm>numeric_limits&lt;signed char&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_integer</primary></indexterm>numeric_limits&lt;signed char&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::round_style</primary></indexterm>numeric_limits&lt;signed char&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::has_infinity</primary></indexterm>numeric_limits&lt;signed char&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::max_exponent</primary></indexterm>numeric_limits&lt;signed char&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::min_exponent</primary></indexterm>numeric_limits&lt;signed char&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;signed char&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_specialized</primary></indexterm>numeric_limits&lt;signed char&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;signed char&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;signed char&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;signed char&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;signed char&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;signed char&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::radix</primary></indexterm>numeric_limits&lt;signed char&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::traps</primary></indexterm>numeric_limits&lt;signed char&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::digits</primary></indexterm>numeric_limits&lt;signed char&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::digits10</primary></indexterm>numeric_limits&lt;signed char&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_exact</primary></indexterm>numeric_limits&lt;signed char&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_iec559</primary></indexterm>numeric_limits&lt;signed char&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_modulo</primary></indexterm>numeric_limits&lt;signed char&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;signed char&gt;::is_signed</primary></indexterm>numeric_limits&lt;signed char&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-suf-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<char> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;char&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;char&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-sug-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-sug-data">
<TITLE>libstdcxx - struct numeric_limits&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::has_denorm</primary></indexterm>numeric_limits&lt;char&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_bounded</primary></indexterm>numeric_limits&lt;char&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_integer</primary></indexterm>numeric_limits&lt;char&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::round_style</primary></indexterm>numeric_limits&lt;char&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::has_infinity</primary></indexterm>numeric_limits&lt;char&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::max_exponent</primary></indexterm>numeric_limits&lt;char&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::min_exponent</primary></indexterm>numeric_limits&lt;char&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;char&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_specialized</primary></indexterm>numeric_limits&lt;char&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;char&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;char&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;char&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;char&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;char&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::radix</primary></indexterm>numeric_limits&lt;char&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::traps</primary></indexterm>numeric_limits&lt;char&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::digits</primary></indexterm>numeric_limits&lt;char&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::digits10</primary></indexterm>numeric_limits&lt;char&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_exact</primary></indexterm>numeric_limits&lt;char&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_iec559</primary></indexterm>numeric_limits&lt;char&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_modulo</primary></indexterm>numeric_limits&lt;char&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;char&gt;::is_signed</primary></indexterm>numeric_limits&lt;char&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-sug-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-sug-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name struct numeric_limits<bool> -->
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;bool&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;bool&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - struct numeric_limits&lt;bool&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for struct numeric_limits&lt;bool&gt; specified in <XREF linkend="tbl-libstdcxx-suh-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-suh-data">
<TITLE>libstdcxx - struct numeric_limits&lt;bool&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::has_denorm</primary></indexterm>numeric_limits&lt;bool&gt;::has_denorm(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_bounded</primary></indexterm>numeric_limits&lt;bool&gt;::is_bounded(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_integer</primary></indexterm>numeric_limits&lt;bool&gt;::is_integer(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::round_style</primary></indexterm>numeric_limits&lt;bool&gt;::round_style(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::has_infinity</primary></indexterm>numeric_limits&lt;bool&gt;::has_infinity(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::max_exponent</primary></indexterm>numeric_limits&lt;bool&gt;::max_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::min_exponent</primary></indexterm>numeric_limits&lt;bool&gt;::min_exponent(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::has_quiet_NaN</primary></indexterm>numeric_limits&lt;bool&gt;::has_quiet_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_specialized</primary></indexterm>numeric_limits&lt;bool&gt;::is_specialized(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::max_exponent10</primary></indexterm>numeric_limits&lt;bool&gt;::max_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::min_exponent10</primary></indexterm>numeric_limits&lt;bool&gt;::min_exponent10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::has_denorm_loss</primary></indexterm>numeric_limits&lt;bool&gt;::has_denorm_loss(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::tinyness_before</primary></indexterm>numeric_limits&lt;bool&gt;::tinyness_before(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::has_signaling_NaN</primary></indexterm>numeric_limits&lt;bool&gt;::has_signaling_NaN(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::radix</primary></indexterm>numeric_limits&lt;bool&gt;::radix(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::traps</primary></indexterm>numeric_limits&lt;bool&gt;::traps(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::digits</primary></indexterm>numeric_limits&lt;bool&gt;::digits(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::digits10</primary></indexterm>numeric_limits&lt;bool&gt;::digits10(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_exact</primary></indexterm>numeric_limits&lt;bool&gt;::is_exact(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_iec559</primary></indexterm>numeric_limits&lt;bool&gt;::is_iec559(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_modulo</primary></indexterm>numeric_limits&lt;bool&gt;::is_modulo(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numeric_limits&lt;bool&gt;::is_signed</primary></indexterm>numeric_limits&lt;bool&gt;::is_signed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-suh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-suh-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10ctype_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_base</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for ctype_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::ctype_base  class
is described by <XREF LINKEND="rtti-289">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-289">
<TITLE>typeinfo for ctype_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_base</primary></indexterm>typeinfo name for ctype_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class ctype_base</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::ctype_base
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ctype_base specified in <XREF linkend="tbl-libstdcxx-cme-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cme-data">
<TITLE>libstdcxx - Class ctype_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::alnum</primary></indexterm>ctype_base::alnum(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::alpha</primary></indexterm>ctype_base::alpha(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::cntrl</primary></indexterm>ctype_base::cntrl(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::digit</primary></indexterm>ctype_base::digit(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::graph</primary></indexterm>ctype_base::graph(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::lower</primary></indexterm>ctype_base::lower(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::print</primary></indexterm>ctype_base::print(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::punct</primary></indexterm>ctype_base::punct(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::space</primary></indexterm>ctype_base::space(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::upper</primary></indexterm>ctype_base::upper(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_base::xdigit</primary></indexterm>ctype_base::xdigit(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cme-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_base</primary></indexterm>typeinfo for ctype_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cme-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_base</primary></indexterm>typeinfo name for ctype_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cme-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cme-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cme-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt21__ctype_abstract_baseIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __ctype_abstract_base&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __ctype_abstract_base&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__ctype_abstract_base&lt;char&gt; class
is described by <XREF LINKEND="cls-290-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-290-0">
<TITLE>Primary vtable for __ctype_abstract_base&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;char&gt;</primary></indexterm>typeinfo for __ctype_abstract_base&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __ctype_abstract_base&lt;char&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::__ctype_abstract_base&lt;char&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__ctype_abstract_base&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cmf-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmf-data">
<TITLE>libstdcxx - Class __ctype_abstract_base&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;char&gt;</primary></indexterm>typeinfo for __ctype_abstract_base&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __ctype_abstract_base&lt;char&gt;</primary></indexterm>typeinfo name for __ctype_abstract_base&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __ctype_abstract_base&lt;char&gt;</primary></indexterm>vtable for __ctype_abstract_base&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmf-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt21__ctype_abstract_baseIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__ctype_abstract_base&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-291-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-291-0">
<TITLE>Primary vtable for __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;</primary></indexterm>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __ctype_abstract_base&lt;wchar_t&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::__ctype_abstract_base&lt;wchar_t&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__ctype_abstract_base&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cmg-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmg-data">
<TITLE>libstdcxx - Class __ctype_abstract_base&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;</primary></indexterm>typeinfo for __ctype_abstract_base&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmg-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __ctype_abstract_base&lt;wchar_t&gt;</primary></indexterm>typeinfo name for __ctype_abstract_base&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmg-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __ctype_abstract_base&lt;wchar_t&gt;</primary></indexterm>vtable for __ctype_abstract_base&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmg-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmg-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt5ctypeIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for ctype&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ctype&lt;char&gt; class
is described by <XREF LINKEND="cls-294-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-294-0">
<TITLE>Primary vtable for ctype&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;char&gt;</primary></indexterm>typeinfo for ctype&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype()</primary></indexterm>ctype&lt;char&gt;::~ctype()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype()</primary></indexterm>ctype&lt;char&gt;::~ctype()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char, char) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class ctype&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ctype&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cmh-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmh-ints">
<TITLE>libstdcxx - Class ctype&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char*, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char*, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char, char) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char, char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::classic_table()</primary></indexterm>ctype&lt;char&gt;::classic_table()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype()</primary></indexterm>ctype&lt;char&gt;::~ctype()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype()</primary></indexterm>ctype&lt;char&gt;::~ctype()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::~ctype()</primary></indexterm>ctype&lt;char&gt;::~ctype()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;ctype&lt;char&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;ctype&lt;char&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmh-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ctype&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cmh-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmh-data">
<TITLE>libstdcxx - Class ctype&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::table_size</primary></indexterm>ctype&lt;char&gt;::table_size(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::id</primary></indexterm>ctype&lt;char&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;char&gt;</primary></indexterm>typeinfo for ctype&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmh-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype&lt;char&gt;</primary></indexterm>typeinfo name for ctype&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmh-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ctype&lt;char&gt;</primary></indexterm>vtable for ctype&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmh-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmh-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmh-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt5ctypeIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for ctype&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ctype&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-295-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-295-0">
<TITLE>Primary vtable for ctype&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;wchar_t&gt;</primary></indexterm>typeinfo for ctype&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_is(unsigned short, wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_is(unsigned short, wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_is(wchar_t const*, wchar_t const*, unsigned short*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_is(wchar_t const*, wchar_t const*, unsigned short*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_toupper(wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_toupper(wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_toupper(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_toupper(wchar_t*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_tolower(wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_tolower(wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_tolower(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_tolower(wchar_t*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_widen(char) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_widen(char const*, char const*, wchar_t*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_widen(char const*, char const*, wchar_t*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_narrow(wchar_t, char) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_narrow(wchar_t, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_narrow(wchar_t const*, wchar_t const*, char, char*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_narrow(wchar_t const*, wchar_t const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ctype&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-296">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-296">
<TITLE>typeinfo for ctype&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype&lt;wchar_t&gt;</primary></indexterm>typeinfo name for ctype&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class ctype&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ctype&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cmi-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmi-ints">
<TITLE>libstdcxx - Class ctype&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_tolower(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_tolower(wchar_t*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_tolower(wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_tolower(wchar_t) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_toupper(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_toupper(wchar_t*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_toupper(wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_toupper(wchar_t) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::_M_convert_to_wmask(unsigned short) const</primary></indexterm>ctype&lt;wchar_t&gt;::_M_convert_to_wmask(unsigned short) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_is(wchar_t const*, wchar_t const*, unsigned short*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_is(wchar_t const*, wchar_t const*, unsigned short*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_is(unsigned short, wchar_t) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_is(unsigned short, wchar_t) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_widen(char const*, char const*, wchar_t*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_widen(char const*, char const*, wchar_t*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_widen(char) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_widen(char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_narrow(wchar_t const*, wchar_t const*, char, char*) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_narrow(wchar_t const*, wchar_t const*, char, char*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::do_narrow(wchar_t, char) const</primary></indexterm>ctype&lt;wchar_t&gt;::do_narrow(wchar_t, char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::_M_initialize_ctype()</primary></indexterm>ctype&lt;wchar_t&gt;::_M_initialize_ctype()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::~ctype()</primary></indexterm>ctype&lt;wchar_t&gt;::~ctype()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmi-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ctype&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cmi-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmi-data">
<TITLE>libstdcxx - Class ctype&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt;::id</primary></indexterm>ctype&lt;wchar_t&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmi-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;wchar_t&gt;</primary></indexterm>typeinfo for ctype&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmi-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype&lt;wchar_t&gt;</primary></indexterm>typeinfo name for ctype&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmi-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ctype&lt;wchar_t&gt;</primary></indexterm>vtable for ctype&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmi-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmi-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmi-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12ctype_bynameIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for ctype_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ctype_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-297-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-297-0">
<TITLE>Primary vtable for ctype_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_byname&lt;char&gt;</primary></indexterm>typeinfo for ctype_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_toupper(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_toupper(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_tolower(char*, char const*) const</primary></indexterm>ctype&lt;char&gt;::do_tolower(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</primary></indexterm>ctype&lt;char&gt;::do_widen(char const*, char const*, char*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char, char) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</primary></indexterm>ctype&lt;char&gt;::do_narrow(char const*, char const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ctype_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-298">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-298">
<TITLE>typeinfo for ctype_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_byname&lt;char&gt;</primary></indexterm>typeinfo name for ctype_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class ctype_byname&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ctype_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cmj-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmj-ints">
<TITLE>libstdcxx - Class ctype_byname&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char&gt;::~ctype_byname()</primary></indexterm>ctype_byname&lt;char&gt;::~ctype_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmj-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ctype_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cmj-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmj-data">
<TITLE>libstdcxx - Class ctype_byname&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_byname&lt;char&gt;</primary></indexterm>typeinfo for ctype_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_byname&lt;char&gt;</primary></indexterm>typeinfo name for ctype_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ctype_byname&lt;char&gt;</primary></indexterm>vtable for ctype_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmj-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12ctype_bynameIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class ctype_byname&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ctype_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cmk-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmk-ints">
<TITLE>libstdcxx - Class ctype_byname&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t&gt;::~ctype_byname()</primary></indexterm>ctype_byname&lt;wchar_t&gt;::~ctype_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t&gt;::~ctype_byname()</primary></indexterm>ctype_byname&lt;wchar_t&gt;::~ctype_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t&gt;::~ctype_byname()</primary></indexterm>ctype_byname&lt;wchar_t&gt;::~ctype_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmk-ints">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ctype_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cmk-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmk-data">
<TITLE>libstdcxx - Class ctype_byname&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for ctype_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for ctype_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ctype_byname&lt;wchar_t&gt;</primary></indexterm>vtable for ctype_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmk-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSsE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cml-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cml-ints">
<TITLE>libstdcxx - Class basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::get_allocator() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::get_allocator() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::end() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::end() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_is_leaked() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_is_leaked() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_is_shared() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_is_shared() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::data() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::data() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rend() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rend() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::size() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::size() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::begin() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::begin() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::c_str() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::c_str() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::empty() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::empty() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_rep() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_rep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::length() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::length() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rbegin() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rbegin() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_data() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_data() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_iend() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_iend() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(char const*) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::compare(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::capacity() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::capacity() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::max_size() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::max_size() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_ibegin() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_ibegin() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider(char*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider(char*, allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider(char*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider(char*, allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_leak_hard()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_leak_hard()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_empty_rep()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_empty_rep()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, char const*, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, char const*, char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, char*, char*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_S_copy_chars(char*, char*, char*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::end()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::end()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_destroy(allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_destroy(allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_dispose(allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_dispose(allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_refcopy()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_refcopy()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_refdata()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_refdata()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_empty_rep()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_empty_rep()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_set_leaked()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_set_leaked()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_set_sharable()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_set_sharable()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_grab(allocator&lt;char&gt; const&, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_M_grab(allocator&lt;char&gt; const&, allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rend()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rend()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::swap(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::swap(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::begin()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::begin()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::clear()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::clear()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::append(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::assign(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rbegin()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rbegin()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_data(char*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_data(char*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_leak()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_leak()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char const*, char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char*, char*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, char*, char*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::push_back(char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::push_back(char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(char const*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(char const*, allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;char const*&gt;(char const*, char const*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;char const*&gt;(char const*, char const*, allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt;(char*, char*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt;(char*, char*, allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(char const*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(char const*, allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; &gt;, allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;char const*&gt;(char const*, char const*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;char const*&gt;(char const*, char const*, allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt;(char*, char*, allocator&lt;char&gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt;(char*, char*, allocator&lt;char&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_string()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_string()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_string()</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_string()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator=(char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::operator+=(char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cml-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cml-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cml-data">
<TITLE>libstdcxx - Class basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_max_size</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_max_size(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_terminal</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_terminal(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_empty_rep_storage</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_Rep::_S_empty_rep_storage(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::npos</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::npos(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cml-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cml-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSbIwSt11char_traitsIwESaIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_string&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmm-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmm-ints">
<TITLE>libstdcxx - Class basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::get_allocator() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::get_allocator() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::end() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::end() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_is_leaked() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_is_leaked() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_is_shared() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_is_shared() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::data() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::data() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rend() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rend() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::size() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::size() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::begin() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::begin() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::c_str() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::c_str() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::empty() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::empty() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_rep() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_rep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::length() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::length() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rbegin() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rbegin() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_data() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_data() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_iend() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_iend() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(wchar_t const*) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::compare(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::capacity() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::capacity() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::max_size() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::max_size() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_ibegin() const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_ibegin() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Alloc_hider::_Alloc_hider(wchar_t*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Alloc_hider::_Alloc_hider(wchar_t*, allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Alloc_hider::_Alloc_hider(wchar_t*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Alloc_hider::_Alloc_hider(wchar_t*, allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_leak_hard()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_leak_hard()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_empty_rep()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_empty_rep()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, wchar_t const*, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, wchar_t const*, wchar_t const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, wchar_t*, wchar_t*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_S_copy_chars(wchar_t*, wchar_t*, wchar_t*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::end()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::end()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_destroy(allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_destroy(allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_dispose(allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_dispose(allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_refcopy()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_refcopy()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_refdata()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_refdata()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_empty_rep()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_empty_rep()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_set_leaked()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_set_leaked()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_set_sharable()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_set_sharable()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_grab(allocator&lt;wchar_t&gt; const&, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_M_grab(allocator&lt;wchar_t&gt; const&, allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rend()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rend()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::swap(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::swap(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::begin()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::begin()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::clear()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::clear()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::erase(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(wchar_t const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::append(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(wchar_t const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::assign(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::insert(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rbegin()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rbegin()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_data(wchar_t*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_data(wchar_t*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_leak()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_leak()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t const*, wchar_t const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t*, wchar_t*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, wchar_t*, wchar_t*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::push_back(wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::push_back(wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(wchar_t const*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(wchar_t const*, allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;wchar_t const*&gt;(wchar_t const*, wchar_t const*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;wchar_t const*&gt;(wchar_t const*, wchar_t const*, allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;wchar_t*&gt;(wchar_t*, wchar_t*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;wchar_t*&gt;(wchar_t*, wchar_t*, allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(wchar_t const*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(wchar_t const*, allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; &gt;, allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;wchar_t const*&gt;(wchar_t const*, wchar_t const*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;wchar_t const*&gt;(wchar_t const*, wchar_t const*, allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;wchar_t*&gt;(wchar_t*, wchar_t*, allocator&lt;wchar_t&gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_string&lt;wchar_t*&gt;(wchar_t*, wchar_t*, allocator&lt;wchar_t&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_string()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_string()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_string()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_string()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(wchar_t const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator=(wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(wchar_t const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::operator+=(wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; operator+&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; operator+&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(char const*, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; operator+&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; operator+&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; operator+&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; operator+&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; operator+&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; operator+&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; operator+&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; operator+&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; operator+&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; operator+&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmm-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_string&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmm-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmm-data">
<TITLE>libstdcxx - Class basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_max_size</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_max_size(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_terminal</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_terminal(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_empty_rep_storage</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_Rep::_S_empty_rep_storage(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::npos</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::npos(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmm-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmm-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt18basic_stringstreamIcSt11char_traitsIcESaIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="vtt-300">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-300">
<TITLE>VTT for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt18basic_stringstreamIcSt11char_traitsIcESaIcEE</primary></indexterm>_ZTTSt18basic_stringstreamIcSt11char_traitsIcESaIcEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>10</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmn-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmn-ints">
<TITLE>libstdcxx - Class basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream(_Ios_Openmode)</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream(_Ios_Openmode)</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmn-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmn-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmn-data">
<TITLE>libstdcxx - Class basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmn-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmn-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>VTT for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmn-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>vtable for basic_stringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmn-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmn-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt18basic_stringstreamIwSt11char_traitsIwESaIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_stringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="vtt-302">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-302">
<TITLE>VTT for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt18basic_stringstreamIwSt11char_traitsIwESaIwEE</primary></indexterm>_ZTTSt18basic_stringstreamIwSt11char_traitsIwESaIwEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>10</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_stringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmo-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmo-ints">
<TITLE>libstdcxx - Class basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream(_Ios_Openmode)</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream(_Ios_Openmode)</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmo-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_stringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmo-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmo-data">
<TITLE>libstdcxx - Class basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmo-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmo-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmo-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmo-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmo-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt19basic_istringstreamIcSt11char_traitsIcESaIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="vtt-304">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-304">
<TITLE>VTT for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt19basic_istringstreamIcSt11char_traitsIcESaIcEE</primary></indexterm>_ZTTSt19basic_istringstreamIcSt11char_traitsIcESaIcEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmp-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmp-ints">
<TITLE>libstdcxx - Class basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream(_Ios_Openmode)</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream(_Ios_Openmode)</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_istringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_istringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmp-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmp-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmp-data">
<TITLE>libstdcxx - Class basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmp-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmp-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>VTT for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmp-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>vtable for basic_istringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmp-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmp-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt19basic_istringstreamIwSt11char_traitsIwESaIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_istringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="vtt-306">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-306">
<TITLE>VTT for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt19basic_istringstreamIwSt11char_traitsIwESaIwEE</primary></indexterm>_ZTTSt19basic_istringstreamIwSt11char_traitsIwESaIwEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_istringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmq-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmq-ints">
<TITLE>libstdcxx - Class basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream(_Ios_Openmode)</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream(_Ios_Openmode)</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_istringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_istringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmq-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_istringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmq-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmq-data">
<TITLE>libstdcxx - Class basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmq-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="vtt-308">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-308">
<TITLE>VTT for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE</primary></indexterm>_ZTTSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmr-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmr-ints">
<TITLE>libstdcxx - Class basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream(_Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream(_Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_ostringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_ostringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmr-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmr-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmr-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmr-data">
<TITLE>libstdcxx - Class basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmr-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmr-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>VTT for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmr-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>vtable for basic_ostringstream&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmr-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmr-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt19basic_ostringstreamIwSt11char_traitsIwESaIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_ostringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="vtt-310">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-310">
<TITLE>VTT for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt19basic_ostringstreamIwSt11char_traitsIwESaIwEE</primary></indexterm>_ZTTSt19basic_ostringstreamIwSt11char_traitsIwESaIwEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ostringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cms-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cms-ints">
<TITLE>libstdcxx - Class basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream(_Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream(_Ios_Openmode)</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_ostringstream(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_ostringstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cms-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cms-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ostringstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cms-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cms-data">
<TITLE>libstdcxx - Class basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cms-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cms-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cms-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cms-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cms-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15basic_stringbufIcSt11char_traitsIcESaIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-311-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-311-0">
<TITLE>Primary vtable for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::underflow()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::underflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::pbackfail(int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::pbackfail(int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::overflow(int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::overflow(int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-312">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-312">
<TITLE>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmt-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmt-ints">
<TITLE>libstdcxx - Class basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_update_egptr()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_update_egptr()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_stringbuf_init(_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::_M_stringbuf_init(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::str(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::overflow(int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::overflow(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::pbackfail(int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::pbackfail(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::underflow()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::underflow()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf(_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf(_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::basic_stringbuf(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;::~basic_stringbuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmt-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmt-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmt-data">
<TITLE>libstdcxx - Class basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;</primary></indexterm>vtable for basic_stringbuf&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmt-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15basic_stringbufIwSt11char_traitsIwESaIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_stringbuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-313-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-313-0">
<TITLE>Primary vtable for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::underflow()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::underflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::overflow(unsigned int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::overflow(unsigned int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_stringbuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-314">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-314">
<TITLE>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_stringbuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmu-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmu-ints">
<TITLE>libstdcxx - Class basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_update_egptr()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_update_egptr()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_stringbuf_init(_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::_M_stringbuf_init(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::str(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::overflow(unsigned int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::overflow(unsigned int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::underflow()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::underflow()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf(_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf(_Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::basic_stringbuf(_Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;::~basic_stringbuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmu-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_stringbuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmu-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmu-data">
<TITLE>libstdcxx - Class basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmu-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSd -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="vtt-316">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-316">
<TITLE>VTT for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSd</primary></indexterm>_ZTTSd</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>7</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmv-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmv-ints">
<TITLE>libstdcxx - Class basic_iostream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::basic_iostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_iostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, signed char*)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, signed char*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmv-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmv-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmv-data">
<TITLE>libstdcxx - Class basic_iostream&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>VTT for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_iostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmv-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14basic_iostreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_iostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_iostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="vtt-318">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-318">
<TITLE>VTT for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt14basic_iostreamIwSt11char_traitsIwEE</primary></indexterm>_ZTTSt14basic_iostreamIwSt11char_traitsIwEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>7</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_iostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmw-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmw-ints">
<TITLE>libstdcxx - Class basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_iostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_iostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmw-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_iostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmw-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmw-data">
<TITLE>libstdcxx - Class basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmw-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSi -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_istream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="vtt-320">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-320">
<TITLE>VTT for basic_istream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSi</primary></indexterm>_ZTTSi</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_istream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmx-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmx-ints">
<TITLE>libstdcxx - Class basic_istream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::gcount() const</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::gcount() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::sentry::operator bool() const</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::sentry::operator bool() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::get(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::get(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::get(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;&, char)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::get(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;&, char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::get(char&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::get(char&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::get()</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::peek()</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::peek()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::sync()</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::sync()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::seekg(fpos&lt;__mbstate_t&gt;)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::seekg(fpos&lt;__mbstate_t&gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::tellg()</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::tellg()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::unget()</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::unget()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, bool)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, bool)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, bool)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, bool)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::putback(char)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::putback(char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::basic_istream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::basic_istream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::basic_istream()</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::basic_istream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::basic_istream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::basic_istream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::basic_istream()</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::basic_istream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::~basic_istream()</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::~basic_istream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::~basic_istream()</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::~basic_istream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::~basic_istream()</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::~basic_istream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&))</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(ios_base& (*)(ios_base&))</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(ios_base& (*)(ios_base&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(basic_ios&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ios&lt;char, char_traits&lt;char&gt; &gt;&))</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(basic_ios&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ios&lt;char, char_traits&lt;char&gt; &gt;&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(void*&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(void*&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(bool&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(bool&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(double&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(double&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(long double&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(long double&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(float&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(float&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(int&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(int&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(unsigned int&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(unsigned int&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(long&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(long&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(unsigned long&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(unsigned long&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(short&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(short&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(unsigned short&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(unsigned short&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(long long&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(long long&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(unsigned long long&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;::operator&gt;&gt;(unsigned long long&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& ws&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& ws&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& getline&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& getline&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& getline&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&, char)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& getline&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&, char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char*)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, signed char&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, signed char&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, char*)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, char*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, char&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, char&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setiosflags)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setiosflags)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setprecision)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setprecision)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Resetiosflags)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Resetiosflags)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setw)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setw)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setbase)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setbase)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setfill&lt;char&gt;)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, _Setfill&lt;char&gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;double, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;double&gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;double, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;double&gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;long double, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;long double&gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;long double, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;long double&gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;float, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;float&gt;&)</primary></indexterm>basic_istream&lt;char, char_traits&lt;char&gt; &gt;& operator&gt;&gt;&lt;float, char, char_traits&lt;char&gt; &gt;(basic_istream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;float&gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmx-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmx-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmx-data">
<TITLE>libstdcxx - Class basic_istream&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_istream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_istream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>VTT for basic_istream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_istream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_istream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmx-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_istreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_istream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_istream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="vtt-322">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-322">
<TITLE>VTT for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt13basic_istreamIwSt11char_traitsIwEE</primary></indexterm>_ZTTSt13basic_istreamIwSt11char_traitsIwEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_istream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmy-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmy-ints">
<TITLE>libstdcxx - Class basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gcount() const</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gcount() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::operator bool() const</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::operator bool() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get(wchar_t&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::peek()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::peek()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekg(fpos&lt;__mbstate_t&gt;)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekg(fpos&lt;__mbstate_t&gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tellg()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tellg()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::unget()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::unget()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, bool)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, bool)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, bool)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, bool)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::putback(wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::putback(wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_istream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(ios_base& (*)(ios_base&))</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(ios_base& (*)(ios_base&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(void*&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(void*&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(bool&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(bool&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(double&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(double&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long double&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long double&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(float&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(float&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(int&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(int&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned int&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned int&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned long&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned long&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(short&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(short&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned short&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned short&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long long&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(long long&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned long long&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&gt;&gt;(unsigned long long&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& ws&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& ws&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& getline&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& getline&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& getline&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&, wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& getline&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&, wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;double&gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;double&gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;long double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;long double&gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;long double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;long double&gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;float, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;float&gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;float, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;float&gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t*)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setiosflags)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setiosflags)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setprecision)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setprecision)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Resetiosflags)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Resetiosflags)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setw)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setw)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setbase)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setbase)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setfill&lt;wchar_t&gt;)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setfill&lt;wchar_t&gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&gt;&gt;&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmy-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_istream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmy-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmy-data">
<TITLE>libstdcxx - Class basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmy-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmy-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmy-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmy-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmy-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSo -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="vtt-324">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-324">
<TITLE>VTT for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSo</primary></indexterm>_ZTTSo</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmz-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmz-ints">
<TITLE>libstdcxx - Class basic_ostream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::operator bool() const</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::operator bool() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::put(char)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::put(char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::flush()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::flush()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::seekp(fpos&lt;__mbstate_t&gt;)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::seekp(fpos&lt;__mbstate_t&gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::tellp()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::tellp()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::sentry(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::~sentry()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::~sentry()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::~sentry()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::sentry::~sentry()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::basic_ostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&))</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(ios_base& (*)(ios_base&))</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(ios_base& (*)(ios_base&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_ios&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ios&lt;char, char_traits&lt;char&gt; &gt;&))</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_ios&lt;char, char_traits&lt;char&gt; &gt;& (*)(basic_ios&lt;char, char_traits&lt;char&gt; &gt;&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(void const*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(void const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(bool)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(bool)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(double)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(double)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long double)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long double)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(float)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(float)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(int)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned int)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned long)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned long)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(short)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(short)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned short)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned short)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long long)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(long long)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned long long)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned long long)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& endl&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& endl&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& ends&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& ends&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& flush&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& flush&lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, signed char const*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, signed char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, char const*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char const*)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, signed char)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, signed char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, char)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, unsigned char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setiosflags)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setiosflags)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setprecision)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setprecision)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Resetiosflags)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Resetiosflags)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setw)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setw)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setbase)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setbase)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setfill&lt;char&gt;)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, _Setfill&lt;char&gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;double, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;double&gt; const&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;double, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;double&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;long double, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;long double&gt; const&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;long double, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;long double&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;float, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;float&gt; const&)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char&gt; &gt;& operator&lt;&lt; &lt;float, char, char_traits&lt;char&gt; &gt;(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;&, complex&lt;float&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cmz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cmz-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cmz-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cmz-data">
<TITLE>libstdcxx - Class basic_ostream&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>VTT for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_ostream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cmz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cmz-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_ostreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_ostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="vtt-326">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-326">
<TITLE>VTT for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt13basic_ostreamIwSt11char_traitsIwEE</primary></indexterm>_ZTTSt13basic_ostreamIwSt11char_traitsIwEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cna-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cna-ints">
<TITLE>libstdcxx - Class basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::operator bool() const</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::operator bool() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::put(wchar_t)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::put(wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::flush()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::flush()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekp(fpos&lt;__mbstate_t&gt;)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekp(fpos&lt;__mbstate_t&gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tellp()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tellp()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::sentry(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::~sentry()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::~sentry()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::~sentry()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sentry::~sentry()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(ios_base& (*)(ios_base&))</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(ios_base& (*)(ios_base&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& (*)(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&))(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(void const*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(void const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(bool)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(bool)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(double)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(double)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long double)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long double)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(float)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(float)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(int)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned int)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned long)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned long)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(short)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(short)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned short)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned short)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long long)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(long long)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned long long)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator&lt;&lt;(unsigned long long)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& endl&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& endl&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& ends&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& ends&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& flush&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& flush&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;double&gt; const&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;double&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;long double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;long double&gt; const&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;long double, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;long double&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;float, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;float&gt; const&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;float, wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, complex&lt;float&gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t const*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, char const*)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setiosflags)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setiosflags)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setprecision)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setprecision)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Resetiosflags)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Resetiosflags)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setw)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setw)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setbase)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setbase)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setfill&lt;wchar_t&gt;)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, _Setfill&lt;wchar_t&gt;)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, char)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;& operator&lt;&lt; &lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cna-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cna-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cna-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cna-data">
<TITLE>libstdcxx - Class basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cna-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cna-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cna-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cna-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cna-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_fstreamIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_fstream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_fstream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="vtt-328">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-328">
<TITLE>VTT for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt13basic_fstreamIcSt11char_traitsIcEE</primary></indexterm>_ZTTSt13basic_fstreamIcSt11char_traitsIcEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>10</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_fstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnb-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnb-ints">
<TITLE>libstdcxx - Class basic_fstream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::close()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::close()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream(char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream(char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::basic_fstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_fstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnb-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_fstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnb-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnb-data">
<TITLE>libstdcxx - Class basic_fstream&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>VTT for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_fstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnb-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_fstreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_fstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_fstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="vtt-330">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-330">
<TITLE>VTT for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt13basic_fstreamIwSt11char_traitsIwEE</primary></indexterm>_ZTTSt13basic_fstreamIwSt11char_traitsIwEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>10</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_fstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnc-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnc-ints">
<TITLE>libstdcxx - Class basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream(char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream(char const*, _Ios_Openmode)</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_fstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_fstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnc-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_fstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnc-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnc-data">
<TITLE>libstdcxx - Class basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnc-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14basic_ifstreamIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="vtt-332">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-332">
<TITLE>VTT for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE</primary></indexterm>_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnd-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnd-ints">
<TITLE>libstdcxx - Class basic_ifstream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::close()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::close()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream(char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream(char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ifstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ifstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnd-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnd-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnd-data">
<TITLE>libstdcxx - Class basic_ifstream&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnd-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnd-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>VTT for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnd-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_ifstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnd-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnd-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14basic_ifstreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ifstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_ifstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="vtt-334">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-334">
<TITLE>VTT for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt14basic_ifstreamIwSt11char_traitsIwEE</primary></indexterm>_ZTTSt14basic_ifstreamIwSt11char_traitsIwEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ifstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cne-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cne-ints">
<TITLE>libstdcxx - Class basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream(char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream(char const*, _Ios_Openmode)</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ifstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ifstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cne-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cne-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ifstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cne-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cne-data">
<TITLE>libstdcxx - Class basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cne-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cne-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cne-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cne-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cne-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cne-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cne-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cne-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14basic_ofstreamIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="vtt-336">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-336">
<TITLE>VTT for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE</primary></indexterm>_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnf-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnf-ints">
<TITLE>libstdcxx - Class basic_ofstream&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::close()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::close()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::is_open()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream(char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream(char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::basic_ofstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;::~basic_ofstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnf-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnf-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnf-data">
<TITLE>libstdcxx - Class basic_ofstream&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>VTT for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_ofstream&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnf-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14basic_ofstreamIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ofstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described in the architecture specific document.
</PARA>
<PARA>
The VTT for the std::basic_ofstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="vtt-338">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="vtt-338">
<TITLE>VTT for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>VTT Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>_ZTTSt14basic_ofstreamIwSt11char_traitsIwEE</primary></indexterm>_ZTTSt14basic_ofstreamIwSt11char_traitsIwEE</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Number of Entries</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ofstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cng-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cng-ints">
<TITLE>libstdcxx - Class basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream(char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream(char const*, _Ios_Openmode)</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ofstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ofstream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cng-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cng-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ofstream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cng-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cng-data">
<TITLE>libstdcxx - Class basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cng-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cng-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>VTT for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>VTT for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cng-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cng-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cng-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15basic_streambufIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-339-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-339-0">
<TITLE>Primary vtable for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-340">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-340">
<TITLE>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnh-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnh-ints">
<TITLE>libstdcxx - Class basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::gptr() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::gptr() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pptr() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pptr() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::eback() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::eback() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::egptr() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::egptr() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::epptr() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::epptr() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbase() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbase() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::getloc() const</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::getloc() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubseekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubseekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setg(char*, char*, char*)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setg(char*, char*, char*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setp(char*, char*)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::setp(char*, char*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sync()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::gbump(int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::gbump(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbump(int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbump(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sgetc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sgetc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputc(char)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputc(char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sbumpc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sbumpc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::snextc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::snextc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubsync()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubsync()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sungetc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sungetc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::in_avail()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::in_avail()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubimbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pubimbue(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputbackc(char)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::sputbackc(char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::basic_streambuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_streambuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::operator=(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::operator=(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnh-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnh-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnh-data">
<TITLE>libstdcxx - Class basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnh-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15basic_streambufIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_streambuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-341-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-341-0">
<TITLE>Primary vtable for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_streambuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-342">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-342">
<TITLE>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_streambuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cni-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cni-ints">
<TITLE>libstdcxx - Class basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gptr() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gptr() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pptr() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pptr() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::eback() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::eback() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::egptr() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::egptr() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::epptr() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::epptr() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbase() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbase() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getloc() const</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::getloc() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubseekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubseekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setg(wchar_t*, wchar_t*, wchar_t*)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setg(wchar_t*, wchar_t*, wchar_t*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setp(wchar_t*, wchar_t*)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setp(wchar_t*, wchar_t*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gbump(int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::gbump(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbump(int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbump(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sgetc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sgetc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputc(wchar_t)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputc(wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sbumpc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sbumpc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::snextc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::snextc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubsync()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubsync()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sungetc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sungetc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::in_avail()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::in_avail()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubimbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pubimbue(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputbackc(wchar_t)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sputbackc(wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_streambuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_streambuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator=(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator=(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cni-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cni-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_filebufIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-343-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-343-0">
<TITLE>Primary vtable for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;::uflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;  class
is described by <XREF LINKEND="rtti-344">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-344">
<TITLE>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnj-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnj-ints">
<TITLE>libstdcxx - Class basic_filebuf&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::is_open() const</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::is_open() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_create_pback()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_create_pback()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_destroy_pback()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_destroy_pback()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_terminate_output()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_terminate_output()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::sync()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::sync()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::close()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::close()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::overflow(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::pbackfail(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::showmanyc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::underflow()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::basic_filebuf()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::basic_filebuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::basic_filebuf()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::basic_filebuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;::~basic_filebuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnj-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnj-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnj-data">
<TITLE>libstdcxx - Class basic_filebuf&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_filebuf&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnj-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13basic_filebufIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; class
is described by <XREF LINKEND="cls-345-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-345-0">
<TITLE>Primary vtable for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::uflow()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;11&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;12&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;13&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::basic_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;  class
is described by <XREF LINKEND="rtti-346">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-346">
<TITLE>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnk-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnk-ints">
<TITLE>libstdcxx - Class basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open() const</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::is_open() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_create_pback()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_create_pback()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_destroy_pback()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_destroy_pback()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_terminate_output()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_terminate_output()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_destroy_internal_buffer()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_destroy_internal_buffer()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_allocate_internal_buffer()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_allocate_internal_buffer()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::open(char const*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::sync()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::close()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::seekpos(fpos&lt;__mbstate_t&gt;, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::overflow(unsigned int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::pbackfail(unsigned int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::showmanyc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::underflow()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_filebuf()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_filebuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_filebuf()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_filebuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_filebuf()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_istream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ostream()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnk-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_filebuf&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnk-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnk-data">
<TITLE>libstdcxx - Class basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnk-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8ios_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class ios_base</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for ios_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::ios_base  class
is described by <XREF LINKEND="rtti-347">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-347">
<TITLE>typeinfo for ios_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base</primary></indexterm>typeinfo name for ios_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class ios_base</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ios_base specified in <XREF linkend="tbl-libstdcxx-cnl-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnl-ints">
<TITLE>libstdcxx - Class ios_base Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::_M_grow_words(int, bool)</primary></indexterm>ios_base::_M_grow_words(int, bool)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::sync_with_stdio(bool)</primary></indexterm>ios_base::sync_with_stdio(bool)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::register_callback(void (*)(ios_base::event, ios_base&, int), int)</primary></indexterm>ios_base::register_callback(void (*)(ios_base::event, ios_base&, int), int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::Init()</primary></indexterm>ios_base::Init::Init()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::Init()</primary></indexterm>ios_base::Init::Init()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::~Init()</primary></indexterm>ios_base::Init::~Init()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::Init::~Init()</primary></indexterm>ios_base::Init::~Init()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::imbue(locale const&)</primary></indexterm>ios_base::imbue(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::xalloc()</primary></indexterm>ios_base::xalloc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::_M_init()</primary></indexterm>ios_base::_M_init()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::failure(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>ios_base::failure::failure(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::failure(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)</primary></indexterm>ios_base::failure::failure(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure()</primary></indexterm>ios_base::failure::~failure()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure()</primary></indexterm>ios_base::failure::~failure()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure()</primary></indexterm>ios_base::failure::~failure()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::ios_base()</primary></indexterm>ios_base::ios_base()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::ios_base()</primary></indexterm>ios_base::ios_base()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::~ios_base()</primary></indexterm>ios_base::~ios_base()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::~ios_base()</primary></indexterm>ios_base::~ios_base()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::~ios_base()</primary></indexterm>ios_base::~ios_base()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnl-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ios_base specified in <XREF linkend="tbl-libstdcxx-cnl-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnl-data">
<TITLE>libstdcxx - Class ios_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::floatfield</primary></indexterm>ios_base::floatfield(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::scientific</primary></indexterm>ios_base::scientific(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::adjustfield</primary></indexterm>ios_base::adjustfield(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::in</primary></indexterm>ios_base::in(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::app</primary></indexterm>ios_base::app(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::ate</primary></indexterm>ios_base::ate(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::beg</primary></indexterm>ios_base::beg(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::cur</primary></indexterm>ios_base::cur(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::dec</primary></indexterm>ios_base::dec(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::end</primary></indexterm>ios_base::end(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::hex</primary></indexterm>ios_base::hex(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::oct</primary></indexterm>ios_base::oct(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::out</primary></indexterm>ios_base::out(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::left</primary></indexterm>ios_base::left(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::fixed</primary></indexterm>ios_base::fixed(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::right</primary></indexterm>ios_base::right(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::trunc</primary></indexterm>ios_base::trunc(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::badbit</primary></indexterm>ios_base::badbit(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::binary</primary></indexterm>ios_base::binary(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::eofbit</primary></indexterm>ios_base::eofbit(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::skipws</primary></indexterm>ios_base::skipws(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failbit</primary></indexterm>ios_base::failbit(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::goodbit</primary></indexterm>ios_base::goodbit(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::showpos</primary></indexterm>ios_base::showpos(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::unitbuf</primary></indexterm>ios_base::unitbuf(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::internal</primary></indexterm>ios_base::internal(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::showbase</primary></indexterm>ios_base::showbase(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::basefield</primary></indexterm>ios_base::basefield(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::boolalpha</primary></indexterm>ios_base::boolalpha(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::showpoint</primary></indexterm>ios_base::showpoint(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::uppercase</primary></indexterm>ios_base::uppercase(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base</primary></indexterm>typeinfo for ios_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnl-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base</primary></indexterm>typeinfo name for ios_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnl-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ios_base</primary></indexterm>vtable for ios_base(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnl-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnl-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9basic_iosIcSt11char_traitsIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt; class
is described by <XREF LINKEND="cls-348-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-348-0">
<TITLE>Primary vtable for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class basic_ios&lt;char, char_traits&lt;char&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnm-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnm-ints">
<TITLE>libstdcxx - Class basic_ios&lt;char, char_traits&lt;char&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::exceptions() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::exceptions() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::bad() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::bad() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::eof() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::eof() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::tie() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::tie() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fail() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fail() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fill() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fill() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::good() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::good() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::widen(char) const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::widen(char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::narrow(char, char) const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::narrow(char, char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdstate() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdstate() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::operator void*() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::operator void*() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::operator!() const</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::operator!() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::exceptions(_Ios_Iostate)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::exceptions(_Ios_Iostate)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::_M_setstate(_Ios_Iostate)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::_M_setstate(_Ios_Iostate)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::tie(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::tie(basic_ostream&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fill(char)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::fill(char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::init(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::init(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::clear(_Ios_Iostate)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::clear(_Ios_Iostate)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::imbue(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdbuf(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::rdbuf(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::copyfmt(basic_ios&lt;char, char_traits&lt;char&gt; &gt; const&)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::copyfmt(basic_ios&lt;char, char_traits&lt;char&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::setstate(_Ios_Iostate)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::setstate(_Ios_Iostate)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios(basic_streambuf&lt;char, char_traits&lt;char&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::basic_ios()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char&gt; &gt;::~basic_ios()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnm-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnm-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnm-data">
<TITLE>libstdcxx - Class basic_ios&lt;char, char_traits&lt;char&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnm-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>typeinfo name for basic_ios&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnm-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ios&lt;char, char_traits&lt;char&gt; &gt;</primary></indexterm>vtable for basic_ios&lt;char, char_traits&lt;char&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnm-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnm-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9basic_iosIwSt11char_traitsIwEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::basic_ios&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnn-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnn-ints">
<TITLE>libstdcxx - Class basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::exceptions() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::exceptions() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::bad() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::bad() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::eof() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::eof() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tie() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tie() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fail() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fail() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fill() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fill() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::good() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::good() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::widen(char) const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::widen(char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::narrow(wchar_t, char) const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::narrow(wchar_t, char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdstate() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdstate() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator void*() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator void*() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator!() const</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::operator!() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::exceptions(_Ios_Iostate)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::exceptions(_Ios_Iostate)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_setstate(_Ios_Iostate)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::_M_setstate(_Ios_Iostate)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tie(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::tie(basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fill(wchar_t)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::fill(wchar_t)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::init(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::init(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::clear(_Ios_Iostate)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::clear(_Ios_Iostate)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::imbue(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::rdbuf(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::copyfmt(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::copyfmt(basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setstate(_Ios_Iostate)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::setstate(_Ios_Iostate)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios(basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::basic_ios()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;::~basic_ios()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnn-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::basic_ios&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cnn-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnn-data">
<TITLE>libstdcxx - Class basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnn-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>typeinfo name for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnn-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;</primary></indexterm>vtable for basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnn-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnn-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt8ios_base7failureE -->
<SECT2>
<!--libgroup-->
<TITLE>Class ios_base::failure</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for ios_base::failure</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::ios_base::failure class
is described by <XREF LINKEND="cls-349-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-349-0">
<TITLE>Primary vtable for ios_base::failure</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base::failure</primary></indexterm>typeinfo for ios_base::failure</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure()</primary></indexterm>ios_base::failure::~failure()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure()</primary></indexterm>ios_base::failure::~failure()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::what() const</primary></indexterm>ios_base::failure::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::ios_base::failure  class
is described by <XREF LINKEND="rtti-350">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-350">
<TITLE>typeinfo for ios_base::failure</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base::failure</primary></indexterm>typeinfo name for ios_base::failure</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class ios_base::failure</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::ios_base::failure specified in <XREF linkend="tbl-libstdcxx-cno-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cno-ints">
<TITLE>libstdcxx - Class ios_base::failure Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::what() const</primary></indexterm>ios_base::failure::what() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cno-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cno-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::ios_base::failure specified in <XREF linkend="tbl-libstdcxx-cno-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cno-data">
<TITLE>libstdcxx - Class ios_base::failure Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base::failure</primary></indexterm>typeinfo for ios_base::failure(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cno-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base::failure</primary></indexterm>typeinfo name for ios_base::failure(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cno-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for ios_base::failure</primary></indexterm>vtable for ios_base::failure(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cno-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cno-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt11__timepunctIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __timepunct&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __timepunct&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__timepunct&lt;char&gt; class
is described by <XREF LINKEND="cls-351-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-351-0">
<TITLE>Primary vtable for __timepunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;char&gt;</primary></indexterm>typeinfo for __timepunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__timepunct&lt;char&gt;  class
is described by <XREF LINKEND="rtti-352">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-352">
<TITLE>typeinfo for __timepunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;char&gt;</primary></indexterm>typeinfo name for __timepunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __timepunct&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__timepunct&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnp-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnp-ints">
<TITLE>libstdcxx - Class __timepunct&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_am_pm_format(char const*) const</primary></indexterm>__timepunct&lt;char&gt;::_M_am_pm_format(char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_date_formats(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_date_formats(char const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_time_formats(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_time_formats(char const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_days_abbreviated(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_days_abbreviated(char const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_date_time_formats(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_date_time_formats(char const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_months_abbreviated(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_months_abbreviated(char const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_days(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_days(char const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_am_pm(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_am_pm(char const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_months(char const**) const</primary></indexterm>__timepunct&lt;char&gt;::_M_months(char const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_am_pm_format(wchar_t const*) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_am_pm_format(wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::_M_initialize_timepunct(__locale_struct*)</primary></indexterm>__timepunct&lt;char&gt;::_M_initialize_timepunct(__locale_struct*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::~__timepunct()</primary></indexterm>__timepunct&lt;char&gt;::~__timepunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;__timepunct&lt;char&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;__timepunct&lt;char&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnp-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__timepunct&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnp-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnp-data">
<TITLE>libstdcxx - Class __timepunct&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for __timepunct&lt;char&gt;::id</primary></indexterm>guard variable for __timepunct&lt;char&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnp-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt;::id</primary></indexterm>__timepunct&lt;char&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnp-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;char&gt;</primary></indexterm>typeinfo for __timepunct&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnp-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;char&gt;</primary></indexterm>typeinfo name for __timepunct&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnp-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __timepunct&lt;char&gt;</primary></indexterm>vtable for __timepunct&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnp-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnp-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnp-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt11__timepunctIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __timepunct&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __timepunct&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__timepunct&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-353-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-353-0">
<TITLE>Primary vtable for __timepunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;wchar_t&gt;</primary></indexterm>typeinfo for __timepunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::__timepunct&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-354">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-354">
<TITLE>typeinfo for __timepunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;wchar_t&gt;</primary></indexterm>typeinfo name for __timepunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __timepunct&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__timepunct&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnq-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnq-ints">
<TITLE>libstdcxx - Class __timepunct&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_date_formats(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_date_formats(wchar_t const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_time_formats(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_time_formats(wchar_t const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_days_abbreviated(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_days_abbreviated(wchar_t const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_date_time_formats(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_date_time_formats(wchar_t const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_months_abbreviated(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_months_abbreviated(wchar_t const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_days(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_days(wchar_t const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_am_pm(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_am_pm(wchar_t const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_months(wchar_t const**) const</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_months(wchar_t const**) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::_M_initialize_timepunct(__locale_struct*)</primary></indexterm>__timepunct&lt;wchar_t&gt;::_M_initialize_timepunct(__locale_struct*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::~__timepunct()</primary></indexterm>__timepunct&lt;wchar_t&gt;::~__timepunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;__timepunct&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;__timepunct&lt;wchar_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnq-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__timepunct&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnq-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnq-data">
<TITLE>libstdcxx - Class __timepunct&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for __timepunct&lt;wchar_t&gt;::id</primary></indexterm>guard variable for __timepunct&lt;wchar_t&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt;::id</primary></indexterm>__timepunct&lt;wchar_t&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnq-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;wchar_t&gt;</primary></indexterm>typeinfo for __timepunct&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;wchar_t&gt;</primary></indexterm>typeinfo name for __timepunct&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __timepunct&lt;wchar_t&gt;</primary></indexterm>vtable for __timepunct&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnq-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnq-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt13messages_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages_base</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for messages_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::messages_base  class
is described by <XREF LINKEND="rtti-355">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-355">
<TITLE>typeinfo for messages_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_base</primary></indexterm>typeinfo name for messages_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class messages_base</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::messages_base
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::messages_base specified in <XREF linkend="tbl-libstdcxx-cnr-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnr-data">
<TITLE>libstdcxx - Class messages_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_base</primary></indexterm>typeinfo for messages_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnr-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_base</primary></indexterm>typeinfo name for messages_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnr-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnr-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8messagesIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for messages&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages&lt;char&gt; class
is described by <XREF LINKEND="cls-356-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-356-0">
<TITLE>Primary vtable for messages&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;char&gt;</primary></indexterm>typeinfo for messages&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages()</primary></indexterm>messages&lt;char&gt;::~messages()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages()</primary></indexterm>messages&lt;char&gt;::~messages()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_close(int) const</primary></indexterm>messages&lt;char&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class messages&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::messages&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cns-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cns-ints">
<TITLE>libstdcxx - Class messages&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::_M_convert_to_char(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::_M_convert_to_char(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::_M_convert_from_char(char*) const</primary></indexterm>messages&lt;char&gt;::_M_convert_from_char(char*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;char&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&, char const*) const</primary></indexterm>messages&lt;char&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::close(int) const</primary></indexterm>messages&lt;char&gt;::close(int) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_close(int) const</primary></indexterm>messages&lt;char&gt;::do_close(int) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages()</primary></indexterm>messages&lt;char&gt;::~messages()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages()</primary></indexterm>messages&lt;char&gt;::~messages()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::~messages()</primary></indexterm>messages&lt;char&gt;::~messages()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cns-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::messages&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cns-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cns-data">
<TITLE>libstdcxx - Class messages&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for messages&lt;char&gt;::id</primary></indexterm>guard variable for messages&lt;char&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cns-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::id</primary></indexterm>messages&lt;char&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cns-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;char&gt;</primary></indexterm>typeinfo for messages&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cns-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages&lt;char&gt;</primary></indexterm>typeinfo name for messages&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cns-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for messages&lt;char&gt;</primary></indexterm>vtable for messages&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cns-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cns-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cns-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8messagesIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for messages&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-357-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-357-0">
<TITLE>Primary vtable for messages&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;wchar_t&gt;</primary></indexterm>typeinfo for messages&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages()</primary></indexterm>messages&lt;wchar_t&gt;::~messages()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages()</primary></indexterm>messages&lt;wchar_t&gt;::~messages()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_close(int) const</primary></indexterm>messages&lt;wchar_t&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class messages&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::messages&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnt-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnt-ints">
<TITLE>libstdcxx - Class messages&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::_M_convert_to_char(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::_M_convert_to_char(basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::_M_convert_from_char(char*) const</primary></indexterm>messages&lt;wchar_t&gt;::_M_convert_from_char(char*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;wchar_t&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&, char const*) const</primary></indexterm>messages&lt;wchar_t&gt;::open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::close(int) const</primary></indexterm>messages&lt;wchar_t&gt;::close(int) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_close(int) const</primary></indexterm>messages&lt;wchar_t&gt;::do_close(int) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages()</primary></indexterm>messages&lt;wchar_t&gt;::~messages()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages()</primary></indexterm>messages&lt;wchar_t&gt;::~messages()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::~messages()</primary></indexterm>messages&lt;wchar_t&gt;::~messages()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnt-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::messages&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnt-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnt-data">
<TITLE>libstdcxx - Class messages&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for messages&lt;wchar_t&gt;::id</primary></indexterm>guard variable for messages&lt;wchar_t&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::id</primary></indexterm>messages&lt;wchar_t&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnt-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;wchar_t&gt;</primary></indexterm>typeinfo for messages&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages&lt;wchar_t&gt;</primary></indexterm>typeinfo name for messages&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for messages&lt;wchar_t&gt;</primary></indexterm>vtable for messages&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnt-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnt-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnt-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15messages_bynameIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for messages_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-358-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-358-0">
<TITLE>Primary vtable for messages_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;char&gt;</primary></indexterm>typeinfo for messages_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;char&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>messages&lt;char&gt;::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt;::do_close(int) const</primary></indexterm>messages&lt;char&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::messages_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-359">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-359">
<TITLE>typeinfo for messages_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;char&gt;</primary></indexterm>typeinfo name for messages_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class messages_byname&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::messages_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnu-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnu-ints">
<TITLE>libstdcxx - Class messages_byname&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char&gt;::~messages_byname()</primary></indexterm>messages_byname&lt;char&gt;::~messages_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnu-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnu-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::messages_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnu-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnu-data">
<TITLE>libstdcxx - Class messages_byname&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;char&gt;</primary></indexterm>typeinfo for messages_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;char&gt;</primary></indexterm>typeinfo name for messages_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for messages_byname&lt;char&gt;</primary></indexterm>vtable for messages_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnu-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnu-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15messages_bynameIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class messages_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for messages_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::messages_byname&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-360-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-360-0">
<TITLE>Primary vtable for messages_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for messages_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_open(basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>messages&lt;wchar_t&gt;::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt;::do_close(int) const</primary></indexterm>messages&lt;wchar_t&gt;::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::messages_byname&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-361">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-361">
<TITLE>typeinfo for messages_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for messages_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class messages_byname&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::messages_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnv-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnv-ints">
<TITLE>libstdcxx - Class messages_byname&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t&gt;::~messages_byname()</primary></indexterm>messages_byname&lt;wchar_t&gt;::~messages_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnv-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnv-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::messages_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnv-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnv-data">
<TITLE>libstdcxx - Class messages_byname&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for messages_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for messages_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for messages_byname&lt;wchar_t&gt;</primary></indexterm>vtable for messages_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnv-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnv-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8numpunctIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for numpunct&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct&lt;char&gt; class
is described by <XREF LINKEND="cls-362-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-362-0">
<TITLE>Primary vtable for numpunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;char&gt;</primary></indexterm>typeinfo for numpunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct()</primary></indexterm>numpunct&lt;char&gt;::~numpunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct()</primary></indexterm>numpunct&lt;char&gt;::~numpunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;char&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;char&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_grouping() const</primary></indexterm>numpunct&lt;char&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_truename() const</primary></indexterm>numpunct&lt;char&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_falsename() const</primary></indexterm>numpunct&lt;char&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct&lt;char&gt;  class
is described by <XREF LINKEND="rtti-363">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-363">
<TITLE>typeinfo for numpunct&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;char&gt;</primary></indexterm>typeinfo name for numpunct&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class numpunct&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::numpunct&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnw-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnw-ints">
<TITLE>libstdcxx - Class numpunct&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_grouping() const</primary></indexterm>numpunct&lt;char&gt;::do_grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_truename() const</primary></indexterm>numpunct&lt;char&gt;::do_truename() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_falsename() const</primary></indexterm>numpunct&lt;char&gt;::do_falsename() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::decimal_point() const</primary></indexterm>numpunct&lt;char&gt;::decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::thousands_sep() const</primary></indexterm>numpunct&lt;char&gt;::thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;char&gt;::do_decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;char&gt;::do_thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::grouping() const</primary></indexterm>numpunct&lt;char&gt;::grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::truename() const</primary></indexterm>numpunct&lt;char&gt;::truename() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::falsename() const</primary></indexterm>numpunct&lt;char&gt;::falsename() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::_M_initialize_numpunct(__locale_struct*)</primary></indexterm>numpunct&lt;char&gt;::_M_initialize_numpunct(__locale_struct*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct()</primary></indexterm>numpunct&lt;char&gt;::~numpunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct()</primary></indexterm>numpunct&lt;char&gt;::~numpunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::~numpunct()</primary></indexterm>numpunct&lt;char&gt;::~numpunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnw-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::numpunct&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cnw-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnw-data">
<TITLE>libstdcxx - Class numpunct&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for numpunct&lt;char&gt;::id</primary></indexterm>guard variable for numpunct&lt;char&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::id</primary></indexterm>numpunct&lt;char&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnw-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;char&gt;</primary></indexterm>typeinfo for numpunct&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;char&gt;</primary></indexterm>typeinfo name for numpunct&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for numpunct&lt;char&gt;</primary></indexterm>vtable for numpunct&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnw-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnw-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnw-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8numpunctIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for numpunct&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-364-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-364-0">
<TITLE>Primary vtable for numpunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;wchar_t&gt;</primary></indexterm>typeinfo for numpunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_grouping() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_truename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_falsename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-365">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-365">
<TITLE>typeinfo for numpunct&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;wchar_t&gt;</primary></indexterm>typeinfo name for numpunct&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class numpunct&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::numpunct&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnx-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnx-ints">
<TITLE>libstdcxx - Class numpunct&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_grouping() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_truename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_truename() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_falsename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_falsename() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::decimal_point() const</primary></indexterm>numpunct&lt;wchar_t&gt;::decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t&gt;::thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::grouping() const</primary></indexterm>numpunct&lt;wchar_t&gt;::grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::truename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::truename() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::falsename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::falsename() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::_M_initialize_numpunct(__locale_struct*)</primary></indexterm>numpunct&lt;wchar_t&gt;::_M_initialize_numpunct(__locale_struct*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::~numpunct()</primary></indexterm>numpunct&lt;wchar_t&gt;::~numpunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnx-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::numpunct&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnx-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnx-data">
<TITLE>libstdcxx - Class numpunct&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for numpunct&lt;wchar_t&gt;::id</primary></indexterm>guard variable for numpunct&lt;wchar_t&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::id</primary></indexterm>numpunct&lt;wchar_t&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnx-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;wchar_t&gt;</primary></indexterm>typeinfo for numpunct&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;wchar_t&gt;</primary></indexterm>typeinfo name for numpunct&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for numpunct&lt;wchar_t&gt;</primary></indexterm>vtable for numpunct&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnx-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnx-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnx-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15numpunct_bynameIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for numpunct_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-366-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-366-0">
<TITLE>Primary vtable for numpunct_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;char&gt;</primary></indexterm>typeinfo for numpunct_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;char&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;char&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_grouping() const</primary></indexterm>numpunct&lt;char&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_truename() const</primary></indexterm>numpunct&lt;char&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt;::do_falsename() const</primary></indexterm>numpunct&lt;char&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-367">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-367">
<TITLE>typeinfo for numpunct_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;char&gt;</primary></indexterm>typeinfo name for numpunct_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class numpunct_byname&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::numpunct_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cny-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cny-ints">
<TITLE>libstdcxx - Class numpunct_byname&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char&gt;::~numpunct_byname()</primary></indexterm>numpunct_byname&lt;char&gt;::~numpunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cny-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cny-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::numpunct_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cny-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cny-data">
<TITLE>libstdcxx - Class numpunct_byname&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;char&gt;</primary></indexterm>typeinfo for numpunct_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cny-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;char&gt;</primary></indexterm>typeinfo name for numpunct_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cny-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for numpunct_byname&lt;char&gt;</primary></indexterm>vtable for numpunct_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cny-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cny-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15numpunct_bynameIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for numpunct_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::numpunct_byname&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-368-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-368-0">
<TITLE>Primary vtable for numpunct_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for numpunct_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_decimal_point() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_grouping() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_truename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt;::do_falsename() const</primary></indexterm>numpunct&lt;wchar_t&gt;::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::numpunct_byname&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-369">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-369">
<TITLE>typeinfo for numpunct_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for numpunct_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class numpunct_byname&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::numpunct_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnz-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnz-ints">
<TITLE>libstdcxx - Class numpunct_byname&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname()</primary></indexterm>numpunct_byname&lt;wchar_t&gt;::~numpunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cnz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cnz-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::numpunct_byname&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-cnz-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cnz-data">
<TITLE>libstdcxx - Class numpunct_byname&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for numpunct_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for numpunct_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for numpunct_byname&lt;wchar_t&gt;</primary></indexterm>vtable for numpunct_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cnz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cnz-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt23__codecvt_abstract_baseIcc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::__codecvt_abstract_base&lt;char, char, __mbstate_t&gt;
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt23__codecvt_abstract_baseIwc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-370-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-370-0">
<TITLE>Primary vtable for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-coa-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coa-data">
<TITLE>libstdcxx - Class __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coa-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coa-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>vtable for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coa-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-coa-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt12codecvt_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_base</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for codecvt_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::codecvt_base  class
is described by <XREF LINKEND="rtti-371">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-371">
<TITLE>typeinfo for codecvt_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_base</primary></indexterm>typeinfo name for codecvt_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class codecvt_base</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::codecvt_base
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::codecvt_base specified in <XREF linkend="tbl-libstdcxx-cob-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cob-data">
<TITLE>libstdcxx - Class codecvt_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_base</primary></indexterm>typeinfo for codecvt_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cob-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_base</primary></indexterm>typeinfo name for codecvt_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cob-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cob-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7codecvtIcc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt&lt;char, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-372-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-372-0">
<TITLE>Primary vtable for codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_max_length() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_max_length() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt&lt;char, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-373">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-373">
<TITLE>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Class data for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::__codecvt_abstract_base&lt;char, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-374-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-374-0">
<TITLE>Primary vtable for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary></primary></indexterm></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class codecvt&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::codecvt&lt;char, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-coc-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coc-ints">
<TITLE>libstdcxx - Class codecvt&lt;char, char, __mbstate_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_max_length() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_max_length() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt()</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::~codecvt()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coc-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::codecvt&lt;char, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-coc-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coc-data">
<TITLE>libstdcxx - Class codecvt&lt;char, char, __mbstate_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::id</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coc-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt&lt;char, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coc-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coc-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt&lt;char, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coc-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;</primary></indexterm>vtable for __codecvt_abstract_base&lt;char, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coc-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for codecvt&lt;char, char, __mbstate_t&gt;</primary></indexterm>vtable for codecvt&lt;char, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coc-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coc-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-coc-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7codecvtIwc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt&lt;wchar_t, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-375-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-375-0">
<TITLE>Primary vtable for codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_max_length() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_max_length() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt&lt;wchar_t, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-376">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-376">
<TITLE>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class codecvt&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::codecvt&lt;wchar_t, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cod-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cod-ints">
<TITLE>libstdcxx - Class codecvt&lt;wchar_t, char, __mbstate_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_max_length() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_max_length() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::~codecvt()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cod-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cod-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::codecvt&lt;wchar_t, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cod-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cod-data">
<TITLE>libstdcxx - Class codecvt&lt;wchar_t, char, __mbstate_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::id</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cod-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cod-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cod-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for codecvt&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>vtable for codecvt&lt;wchar_t, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cod-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cod-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cod-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14codecvt_bynameIcc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt_byname&lt;char, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-377-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-377-0">
<TITLE>Primary vtable for codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt;::do_max_length() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt;::do_max_length() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt_byname&lt;char, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-378">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-378">
<TITLE>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class codecvt_byname&lt;char, char, __mbstate_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::codecvt_byname&lt;char, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-coe-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coe-ints">
<TITLE>libstdcxx - Class codecvt_byname&lt;char, char, __mbstate_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t&gt;::~codecvt_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coe-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::codecvt_byname&lt;char, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-coe-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coe-data">
<TITLE>libstdcxx - Class codecvt_byname&lt;char, char, __mbstate_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt_byname&lt;char, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coe-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coe-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for codecvt_byname&lt;char, char, __mbstate_t&gt;</primary></indexterm>vtable for codecvt_byname&lt;char, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coe-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-coe-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14codecvt_bynameIwc11__mbstate_tE -->
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; class
is described by <XREF LINKEND="cls-379-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-379-0">
<TITLE>Primary vtable for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>See The Architecture Specific Specification</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_max_length() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt;::do_max_length() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;  class
is described by <XREF LINKEND="rtti-380">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-380">
<TITLE>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Class data for collate_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate_byname&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-381-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-381-0">
<TITLE>Primary vtable for collate_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for collate_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate_byname&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-382">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-382">
<TITLE>typeinfo for collate_byname&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for collate_byname&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cof-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cof-ints">
<TITLE>libstdcxx - Class codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;::~codecvt_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t&gt;::~collate_byname()</primary></indexterm>collate_byname&lt;wchar_t&gt;::~collate_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cof-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cof-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; specified in <XREF linkend="tbl-libstdcxx-cof-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cof-data">
<TITLE>libstdcxx - Class codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cof-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo for collate_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cof-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cof-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;wchar_t&gt;</primary></indexterm>typeinfo name for collate_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cof-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;</primary></indexterm>vtable for codecvt_byname&lt;wchar_t, char, __mbstate_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cof-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for collate_byname&lt;wchar_t&gt;</primary></indexterm>vtable for collate_byname&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cof-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cof-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7collateIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for collate&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate&lt;char&gt; class
is described by <XREF LINKEND="cls-383-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-383-0">
<TITLE>Primary vtable for collate&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;char&gt;</primary></indexterm>typeinfo for collate&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate()</primary></indexterm>collate&lt;char&gt;::~collate()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate()</primary></indexterm>collate&lt;char&gt;::~collate()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_transform(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_transform(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_hash(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_hash(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate&lt;char&gt;  class
is described by <XREF LINKEND="rtti-384">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-384">
<TITLE>typeinfo for collate&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;char&gt;</primary></indexterm>typeinfo name for collate&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class collate&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::collate&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cog-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cog-ints">
<TITLE>libstdcxx - Class collate&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::_M_compare(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::_M_compare(char const*, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_transform(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_transform(char const*, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::hash(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::hash(char const*, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::compare(char const*, char const*, char const*, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_hash(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_hash(char const*, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::transform(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::transform(char const*, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate()</primary></indexterm>collate&lt;char&gt;::~collate()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate()</primary></indexterm>collate&lt;char&gt;::~collate()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::~collate()</primary></indexterm>collate&lt;char&gt;::~collate()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cog-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cog-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::collate&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cog-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cog-data">
<TITLE>libstdcxx - Class collate&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for collate&lt;char&gt;::id</primary></indexterm>guard variable for collate&lt;char&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cog-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::id</primary></indexterm>collate&lt;char&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cog-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;char&gt;</primary></indexterm>typeinfo for collate&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cog-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;char&gt;</primary></indexterm>typeinfo name for collate&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cog-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for collate&lt;char&gt;</primary></indexterm>vtable for collate&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cog-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cog-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cog-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7collateIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for collate&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate&lt;wchar_t&gt; class
is described by <XREF LINKEND="cls-385-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-385-0">
<TITLE>Primary vtable for collate&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;wchar_t&gt;</primary></indexterm>typeinfo for collate&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate()</primary></indexterm>collate&lt;wchar_t&gt;::~collate()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate()</primary></indexterm>collate&lt;wchar_t&gt;::~collate()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate&lt;wchar_t&gt;  class
is described by <XREF LINKEND="rtti-386">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-386">
<TITLE>typeinfo for collate&lt;wchar_t&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;wchar_t&gt;</primary></indexterm>typeinfo name for collate&lt;wchar_t&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class collate&lt;wchar_t&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::collate&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-coh-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coh-ints">
<TITLE>libstdcxx - Class collate&lt;wchar_t&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::_M_compare(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::_M_compare(wchar_t const*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_transform(wchar_t const*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::hash(wchar_t const*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::do_hash(wchar_t const*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t&gt;::transform(wchar_t const*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate()</primary></indexterm>collate&lt;wchar_t&gt;::~collate()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate()</primary></indexterm>collate&lt;wchar_t&gt;::~collate()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::~collate()</primary></indexterm>collate&lt;wchar_t&gt;::~collate()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coh-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coh-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::collate&lt;wchar_t&gt; specified in <XREF linkend="tbl-libstdcxx-coh-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coh-data">
<TITLE>libstdcxx - Class collate&lt;wchar_t&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for collate&lt;wchar_t&gt;::id</primary></indexterm>guard variable for collate&lt;wchar_t&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt;::id</primary></indexterm>collate&lt;wchar_t&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coh-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;wchar_t&gt;</primary></indexterm>typeinfo for collate&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;wchar_t&gt;</primary></indexterm>typeinfo name for collate&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for collate&lt;wchar_t&gt;</primary></indexterm>vtable for collate&lt;wchar_t&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coh-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-coh-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coh-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14collate_bynameIcE -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for collate_byname&lt;char&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::collate_byname&lt;char&gt; class
is described by <XREF LINKEND="cls-387-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-387-0">
<TITLE>Primary vtable for collate_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;char&gt;</primary></indexterm>typeinfo for collate_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_compare(char const*, char const*, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_transform(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_transform(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt;::do_hash(char const*, char const*) const</primary></indexterm>collate&lt;char&gt;::do_hash(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::collate_byname&lt;char&gt;  class
is described by <XREF LINKEND="rtti-388">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-388">
<TITLE>typeinfo for collate_byname&lt;char&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;char&gt;</primary></indexterm>typeinfo name for collate_byname&lt;char&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class collate_byname&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::collate_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-coi-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coi-ints">
<TITLE>libstdcxx - Class collate_byname&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char&gt;::~collate_byname()</primary></indexterm>collate_byname&lt;char&gt;::~collate_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coi-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::collate_byname&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-coi-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coi-data">
<TITLE>libstdcxx - Class collate_byname&lt;char&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;char&gt;</primary></indexterm>typeinfo for collate_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coi-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;char&gt;</primary></indexterm>typeinfo name for collate_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coi-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for collate_byname&lt;char&gt;</primary></indexterm>vtable for collate_byname&lt;char&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coi-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-coi-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt14collate_bynameIwE -->
<SECT2>
<!--libgroup-->
<TITLE>Class collate_byname&lt;wchar_t&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class collate_byname&lt;wchar_t&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::collate_byname&lt;wchar_t&gt;
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9time_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_base</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for time_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::time_base  class
is described by <XREF LINKEND="rtti-389">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-389">
<TITLE>typeinfo for time_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_base</primary></indexterm>typeinfo name for time_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class time_base</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::time_base
</PARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_base specified in <XREF linkend="tbl-libstdcxx-coj-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coj-data">
<TITLE>libstdcxx - Class time_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_base</primary></indexterm>typeinfo name for time_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-coj-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15time_get_bynameIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get_byname&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-390-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-390-0">
<TITLE>Primary vtable for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_get_byname&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-391">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-391">
<TITLE>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_get_byname&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cok-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cok-ints">
<TITLE>libstdcxx - Class time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cok-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cok-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_get_byname&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cok-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cok-data">
<TITLE>libstdcxx - Class time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cok-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cok-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cok-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cok-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15time_get_bynameIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get_byname&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-392-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-392-0">
<TITLE>Primary vtable for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_get_byname&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-393">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-393">
<TITLE>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_get_byname&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-col-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-col-ints">
<TITLE>libstdcxx - Class time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-col-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-col-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_get_byname&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-col-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-col-data">
<TITLE>libstdcxx - Class time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-col-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-col-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-col-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-col-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15time_put_bynameIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_put_byname&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-394-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-394-0">
<TITLE>Primary vtable for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_put_byname&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-395">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-395">
<TITLE>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_put_byname&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-com-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-com-ints">
<TITLE>libstdcxx - Class time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-com-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-com-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_put_byname&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-com-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-com-data">
<TITLE>libstdcxx - Class time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-com-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-com-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-com-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-com-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt15time_put_bynameIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_put_byname&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-396-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-396-0">
<TITLE>Primary vtable for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::time_put_byname&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-397">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-397">
<TITLE>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_put_byname&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-con-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-con-ints">
<TITLE>libstdcxx - Class time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-con-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-con-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-con-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-con-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_put_byname&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-con-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-con-data">
<TITLE>libstdcxx - Class time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-con-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-con-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-con-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-con-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-398-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-398-0">
<TITLE>Primary vtable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coo-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coo-ints">
<TITLE>libstdcxx - Class time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::date_order() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_date_order() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_via_format(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*, char const*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_via_format(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_date(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_time(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get_year(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coo-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coo-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coo-data">
<TITLE>libstdcxx - Class time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coo-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coo-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coo-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coo-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coo-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-coo-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coo-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::time_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-399-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-399-0">
<TITLE>Primary vtable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cop-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cop-ints">
<TITLE>libstdcxx - Class time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::date_order() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_date_order() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_via_format(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*, wchar_t const*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_via_format(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, tm*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cop-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cop-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cop-data">
<TITLE>libstdcxx - Class time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cop-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cop-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cop-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cop-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cop-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cop-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cop-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coq-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coq-ints">
<TITLE>libstdcxx - Class time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char const*, char const*) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char const*, char const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, tm const*, char, char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~time_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coq-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coq-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-coq-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coq-data">
<TITLE>libstdcxx - Class time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coq-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coq-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-coq-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coq-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::time_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cor-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cor-ints">
<TITLE>libstdcxx - Class time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, wchar_t const*, wchar_t const*) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, wchar_t const*, wchar_t const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, tm const*, char, char) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~time_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cor-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cor-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::time_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cor-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cor-data">
<TITLE>libstdcxx - Class time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cor-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cor-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cor-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cor-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cor-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cor-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cor-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10moneypunctIcLb0EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;char, false&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for moneypunct&lt;char, false&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;char, false&gt; class
is described by <XREF LINKEND="cls-400-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-400-0">
<TITLE>Primary vtable for moneypunct&lt;char, false&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, false&gt;</primary></indexterm>typeinfo for moneypunct&lt;char, false&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;char, false&gt;::~moneypunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;char, false&gt;::~moneypunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;char, false&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct&lt;char, false&gt; specified in <XREF linkend="tbl-libstdcxx-cos-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cos-ints">
<TITLE>libstdcxx - Class moneypunct&lt;char, false&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::neg_format() const</primary></indexterm>moneypunct&lt;char, false&gt;::neg_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::pos_format() const</primary></indexterm>moneypunct&lt;char, false&gt;::pos_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::curr_symbol() const</primary></indexterm>moneypunct&lt;char, false&gt;::curr_symbol() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::frac_digits() const</primary></indexterm>moneypunct&lt;char, false&gt;::frac_digits() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::decimal_point() const</primary></indexterm>moneypunct&lt;char, false&gt;::decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_neg_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_pos_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::negative_sign() const</primary></indexterm>moneypunct&lt;char, false&gt;::negative_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::positive_sign() const</primary></indexterm>moneypunct&lt;char, false&gt;::positive_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::thousands_sep() const</primary></indexterm>moneypunct&lt;char, false&gt;::thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_curr_symbol() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_frac_digits() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_negative_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_positive_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::grouping() const</primary></indexterm>moneypunct&lt;char, false&gt;::grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)</primary></indexterm>moneypunct&lt;char, false&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;char, false&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;char, false&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;char, false&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cos-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct&lt;char, false&gt; specified in <XREF linkend="tbl-libstdcxx-cos-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cos-data">
<TITLE>libstdcxx - Class moneypunct&lt;char, false&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for moneypunct&lt;char, false&gt;::id</primary></indexterm>guard variable for moneypunct&lt;char, false&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cos-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::id</primary></indexterm>moneypunct&lt;char, false&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::intl</primary></indexterm>moneypunct&lt;char, false&gt;::intl(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cos-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, false&gt;</primary></indexterm>typeinfo for moneypunct&lt;char, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cos-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;char, false&gt;</primary></indexterm>typeinfo name for moneypunct&lt;char, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cos-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct&lt;char, false&gt;</primary></indexterm>vtable for moneypunct&lt;char, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cos-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cos-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cos-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10moneypunctIcLb1EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;char, true&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for moneypunct&lt;char, true&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;char, true&gt; class
is described by <XREF LINKEND="cls-401-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-401-0">
<TITLE>Primary vtable for moneypunct&lt;char, true&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, true&gt;</primary></indexterm>typeinfo for moneypunct&lt;char, true&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;char, true&gt;::~moneypunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;char, true&gt;::~moneypunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;char, true&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct&lt;char, true&gt; specified in <XREF linkend="tbl-libstdcxx-cot-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cot-ints">
<TITLE>libstdcxx - Class moneypunct&lt;char, true&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::neg_format() const</primary></indexterm>moneypunct&lt;char, true&gt;::neg_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::pos_format() const</primary></indexterm>moneypunct&lt;char, true&gt;::pos_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::curr_symbol() const</primary></indexterm>moneypunct&lt;char, true&gt;::curr_symbol() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::frac_digits() const</primary></indexterm>moneypunct&lt;char, true&gt;::frac_digits() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::decimal_point() const</primary></indexterm>moneypunct&lt;char, true&gt;::decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_neg_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_pos_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::negative_sign() const</primary></indexterm>moneypunct&lt;char, true&gt;::negative_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::positive_sign() const</primary></indexterm>moneypunct&lt;char, true&gt;::positive_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::thousands_sep() const</primary></indexterm>moneypunct&lt;char, true&gt;::thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_curr_symbol() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_frac_digits() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_negative_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_positive_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::grouping() const</primary></indexterm>moneypunct&lt;char, true&gt;::grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)</primary></indexterm>moneypunct&lt;char, true&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;char, true&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;char, true&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;char, true&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cot-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct&lt;char, true&gt; specified in <XREF linkend="tbl-libstdcxx-cot-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cot-data">
<TITLE>libstdcxx - Class moneypunct&lt;char, true&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for moneypunct&lt;char, true&gt;::id</primary></indexterm>guard variable for moneypunct&lt;char, true&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cot-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::id</primary></indexterm>moneypunct&lt;char, true&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::intl</primary></indexterm>moneypunct&lt;char, true&gt;::intl(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cot-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, true&gt;</primary></indexterm>typeinfo for moneypunct&lt;char, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cot-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;char, true&gt;</primary></indexterm>typeinfo name for moneypunct&lt;char, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cot-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct&lt;char, true&gt;</primary></indexterm>vtable for moneypunct&lt;char, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cot-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cot-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cot-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10moneypunctIwLb0EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;wchar_t, false&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for moneypunct&lt;wchar_t, false&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;wchar_t, false&gt; class
is described by <XREF LINKEND="cls-402-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-402-0">
<TITLE>Primary vtable for moneypunct&lt;wchar_t, false&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, false&gt;</primary></indexterm>typeinfo for moneypunct&lt;wchar_t, false&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::~moneypunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::~moneypunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;wchar_t, false&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct&lt;wchar_t, false&gt; specified in <XREF linkend="tbl-libstdcxx-cou-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cou-ints">
<TITLE>libstdcxx - Class moneypunct&lt;wchar_t, false&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::neg_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::pos_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::curr_symbol() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::frac_digits() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_neg_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_pos_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::negative_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::positive_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_curr_symbol() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_frac_digits() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_negative_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_positive_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::grouping() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cou-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct&lt;wchar_t, false&gt; specified in <XREF linkend="tbl-libstdcxx-cou-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cou-data">
<TITLE>libstdcxx - Class moneypunct&lt;wchar_t, false&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for moneypunct&lt;wchar_t, false&gt;::id</primary></indexterm>guard variable for moneypunct&lt;wchar_t, false&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cou-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::id</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::intl</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::intl(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cou-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, false&gt;</primary></indexterm>typeinfo for moneypunct&lt;wchar_t, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cou-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;wchar_t, false&gt;</primary></indexterm>typeinfo name for moneypunct&lt;wchar_t, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cou-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct&lt;wchar_t, false&gt;</primary></indexterm>vtable for moneypunct&lt;wchar_t, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cou-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cou-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cou-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10moneypunctIwLb1EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;wchar_t, true&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for moneypunct&lt;wchar_t, true&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct&lt;wchar_t, true&gt; class
is described by <XREF LINKEND="cls-403-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-403-0">
<TITLE>Primary vtable for moneypunct&lt;wchar_t, true&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, true&gt;</primary></indexterm>typeinfo for moneypunct&lt;wchar_t, true&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::~moneypunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::~moneypunct()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;wchar_t, true&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct&lt;wchar_t, true&gt; specified in <XREF linkend="tbl-libstdcxx-cov-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cov-ints">
<TITLE>libstdcxx - Class moneypunct&lt;wchar_t, true&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::neg_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::pos_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::curr_symbol() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::frac_digits() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_neg_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_pos_format() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::negative_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::positive_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_curr_symbol() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_frac_digits() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_decimal_point() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_negative_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_positive_sign() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_thousands_sep() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::grouping() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::grouping() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::_M_initialize_moneypunct(__locale_struct*, char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::~moneypunct()</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::~moneypunct()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cov-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct&lt;wchar_t, true&gt; specified in <XREF linkend="tbl-libstdcxx-cov-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cov-data">
<TITLE>libstdcxx - Class moneypunct&lt;wchar_t, true&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for moneypunct&lt;wchar_t, true&gt;::id</primary></indexterm>guard variable for moneypunct&lt;wchar_t, true&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cov-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::id</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::intl</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::intl(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cov-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, true&gt;</primary></indexterm>typeinfo for moneypunct&lt;wchar_t, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cov-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;wchar_t, true&gt;</primary></indexterm>typeinfo name for moneypunct&lt;wchar_t, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cov-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct&lt;wchar_t, true&gt;</primary></indexterm>vtable for moneypunct&lt;wchar_t, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cov-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cov-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cov-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt17moneypunct_bynameIcLb0EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;char, false&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for moneypunct_byname&lt;char, false&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;char, false&gt; class
is described by <XREF LINKEND="cls-404-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-404-0">
<TITLE>Primary vtable for moneypunct_byname&lt;char, false&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, false&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;char, false&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, false&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;char, false&gt;::~moneypunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, false&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;char, false&gt;::~moneypunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, false&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;char, false&gt;  class
is described by <XREF LINKEND="rtti-405">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-405">
<TITLE>typeinfo for moneypunct_byname&lt;char, false&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, false&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;char, false&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;char, false&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct_byname&lt;char, false&gt; specified in <XREF linkend="tbl-libstdcxx-cow-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cow-ints">
<TITLE>libstdcxx - Class moneypunct_byname&lt;char, false&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, false&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;char, false&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, false&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;char, false&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, false&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;char, false&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cow-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cow-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct_byname&lt;char, false&gt; specified in <XREF linkend="tbl-libstdcxx-cow-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cow-data">
<TITLE>libstdcxx - Class moneypunct_byname&lt;char, false&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, false&gt;::intl</primary></indexterm>moneypunct_byname&lt;char, false&gt;::intl(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cow-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, false&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;char, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cow-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, false&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;char, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cow-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct_byname&lt;char, false&gt;</primary></indexterm>vtable for moneypunct_byname&lt;char, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cow-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cow-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cow-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt17moneypunct_bynameIcLb1EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;char, true&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for moneypunct_byname&lt;char, true&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;char, true&gt; class
is described by <XREF LINKEND="cls-406-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-406-0">
<TITLE>Primary vtable for moneypunct_byname&lt;char, true&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, true&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;char, true&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, true&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;char, true&gt;::~moneypunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, true&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;char, true&gt;::~moneypunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;char, true&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;char, true&gt;  class
is described by <XREF LINKEND="rtti-407">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-407">
<TITLE>typeinfo for moneypunct_byname&lt;char, true&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, true&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;char, true&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;char, true&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct_byname&lt;char, true&gt; specified in <XREF linkend="tbl-libstdcxx-cox-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cox-ints">
<TITLE>libstdcxx - Class moneypunct_byname&lt;char, true&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, true&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;char, true&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, true&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;char, true&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, true&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;char, true&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cox-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cox-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct_byname&lt;char, true&gt; specified in <XREF linkend="tbl-libstdcxx-cox-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cox-data">
<TITLE>libstdcxx - Class moneypunct_byname&lt;char, true&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, true&gt;::intl</primary></indexterm>moneypunct_byname&lt;char, true&gt;::intl(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cox-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, true&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;char, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cox-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, true&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;char, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cox-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct_byname&lt;char, true&gt;</primary></indexterm>vtable for moneypunct_byname&lt;char, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cox-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cox-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cox-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt17moneypunct_bynameIwLb0EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;wchar_t, false&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for moneypunct_byname&lt;wchar_t, false&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;wchar_t, false&gt; class
is described by <XREF LINKEND="cls-408-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-408-0">
<TITLE>Primary vtable for moneypunct_byname&lt;wchar_t, false&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, false&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, false&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, false&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;wchar_t, false&gt;::~moneypunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, false&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;wchar_t, false&gt;::~moneypunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, false&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;wchar_t, false&gt;  class
is described by <XREF LINKEND="rtti-409">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-409">
<TITLE>typeinfo for moneypunct_byname&lt;wchar_t, false&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, false&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, false&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;wchar_t, false&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct_byname&lt;wchar_t, false&gt; specified in <XREF linkend="tbl-libstdcxx-coy-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coy-ints">
<TITLE>libstdcxx - Class moneypunct_byname&lt;wchar_t, false&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, false&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;wchar_t, false&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, false&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;wchar_t, false&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, false&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;wchar_t, false&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coy-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coy-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct_byname&lt;wchar_t, false&gt; specified in <XREF linkend="tbl-libstdcxx-coy-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coy-data">
<TITLE>libstdcxx - Class moneypunct_byname&lt;wchar_t, false&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, false&gt;::intl</primary></indexterm>moneypunct_byname&lt;wchar_t, false&gt;::intl(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coy-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, false&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coy-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, false&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coy-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct_byname&lt;wchar_t, false&gt;</primary></indexterm>vtable for moneypunct_byname&lt;wchar_t, false&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coy-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coy-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-coy-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt17moneypunct_bynameIwLb1EE -->
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;wchar_t, true&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for moneypunct_byname&lt;wchar_t, true&gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::moneypunct_byname&lt;wchar_t, true&gt; class
is described by <XREF LINKEND="cls-410-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-410-0">
<TITLE>Primary vtable for moneypunct_byname&lt;wchar_t, true&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, true&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, true&gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, true&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;wchar_t, true&gt;::~moneypunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, true&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;wchar_t, true&gt;::~moneypunct_byname()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;4&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;5&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;6&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;7&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;8&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;9&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;10&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt;::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, true&gt;::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::moneypunct_byname&lt;wchar_t, true&gt;  class
is described by <XREF LINKEND="rtti-411">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-411">
<TITLE>typeinfo for moneypunct_byname&lt;wchar_t, true&gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, true&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, true&gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;wchar_t, true&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::moneypunct_byname&lt;wchar_t, true&gt; specified in <XREF linkend="tbl-libstdcxx-coz-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coz-ints">
<TITLE>libstdcxx - Class moneypunct_byname&lt;wchar_t, true&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, true&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;wchar_t, true&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, true&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;wchar_t, true&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, true&gt;::~moneypunct_byname()</primary></indexterm>moneypunct_byname&lt;wchar_t, true&gt;::~moneypunct_byname()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coz-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coz-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::moneypunct_byname&lt;wchar_t, true&gt; specified in <XREF linkend="tbl-libstdcxx-coz-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-coz-data">
<TITLE>libstdcxx - Class moneypunct_byname&lt;wchar_t, true&gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, true&gt;::intl</primary></indexterm>moneypunct_byname&lt;wchar_t, true&gt;::intl(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-coz-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, true&gt;</primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coz-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, true&gt;</primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coz-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for moneypunct_byname&lt;wchar_t, true&gt;</primary></indexterm>vtable for moneypunct_byname&lt;wchar_t, true&gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-coz-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-coz-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-coz-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10money_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_base</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for money_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::money_base  class
is described by <XREF LINKEND="rtti-412">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-412">
<TITLE>typeinfo for money_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_base</primary></indexterm>typeinfo name for money_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class money_base</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::money_base specified in <XREF linkend="tbl-libstdcxx-cpa-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpa-ints">
<TITLE>libstdcxx - Class money_base Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_base::_S_construct_pattern(char, char, char)</primary></indexterm>money_base::_S_construct_pattern(char, char, char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpa-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::money_base specified in <XREF linkend="tbl-libstdcxx-cpa-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpa-data">
<TITLE>libstdcxx - Class money_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_base::_S_default_pattern</primary></indexterm>money_base::_S_default_pattern(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_base::_S_atoms</primary></indexterm>money_base::_S_atoms(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpa-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpa-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_base</primary></indexterm>typeinfo name for money_base(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpa-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpa-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cpa-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-413-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-413-0">
<TITLE>Primary vtable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-414">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-414">
<TITLE>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::money_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpb-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpb-ints">
<TITLE>libstdcxx - Class money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract&lt;false&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract&lt;false&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract&lt;true&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract&lt;true&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpb-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::money_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpb-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpb-data">
<TITLE>libstdcxx - Class money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpb-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpb-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cpb-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpb-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-415-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-415-0">
<TITLE>Primary vtable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-416">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-416">
<TITLE>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::money_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpc-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpc-ints">
<TITLE>libstdcxx - Class money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract&lt;false&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract&lt;false&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract&lt;true&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract&lt;true&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt;&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, _Ios_Iostate&, long double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpc-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::money_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpc-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpc-data">
<TITLE>libstdcxx - Class money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpc-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpc-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cpc-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpc-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-417-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-417-0">
<TITLE>Primary vtable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-418">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-418">
<TITLE>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::money_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpd-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpd-ints">
<TITLE>libstdcxx - Class money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, bool, ios_base&, char, long double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert&lt;false&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert&lt;false&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert&lt;true&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert&lt;true&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~money_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpd-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::money_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpd-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpd-data">
<TITLE>libstdcxx - Class money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpd-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpd-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpd-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpd-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpd-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cpd-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpd-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::money_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; class
is described by <XREF LINKEND="cls-419-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-419-0">
<TITLE>Primary vtable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;2&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;3&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::money_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt;  class
is described by <XREF LINKEND="rtti-420">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-420">
<TITLE>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::money_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpe-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpe-ints">
<TITLE>libstdcxx - Class money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, bool, ios_base&, wchar_t, long double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert&lt;false&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert&lt;false&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert&lt;true&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert&lt;true&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t&gt;, allocator&lt;wchar_t&gt; &gt; const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~money_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpe-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::money_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpe-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpe-data">
<TITLE>libstdcxx - Class money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpe-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpe-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpe-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpe-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpe-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cpe-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpe-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt6localeE -->
<SECT2>
<!--libgroup-->
<TITLE>Class locale</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class locale</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::locale specified in <XREF linkend="tbl-libstdcxx-cpf-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpf-ints">
<TITLE>libstdcxx - Class locale Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::id::_M_id() const</primary></indexterm>locale::id::_M_id() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::name() const</primary></indexterm>locale::name() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::operator==(locale const&) const</primary></indexterm>locale::operator==(locale const&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_M_coalesce(locale const&, locale const&, int)</primary></indexterm>locale::_M_coalesce(locale const&, locale const&, int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_S_normalize_category(int)</primary></indexterm>locale::_S_normalize_category(int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_M_install_facet(locale::id const*, locale::facet const*)</primary></indexterm>locale::_Impl::_M_install_facet(locale::id const*, locale::facet const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-cpf-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_M_replace_facet(locale::_Impl const*, locale::id const*)</primary></indexterm>locale::_Impl::_M_replace_facet(locale::_Impl const*, locale::id const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-cpf-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::~_Impl()</primary></indexterm>locale::_Impl::~_Impl()(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-cpf-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::~_Impl()</primary></indexterm>locale::_Impl::~_Impl()(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-cpf-ints">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::global(locale const&)</primary></indexterm>locale::global(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::classic()</primary></indexterm>locale::classic()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale(char const*)</primary></indexterm>locale::locale(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale(locale::_Impl*)</primary></indexterm>locale::locale(locale::_Impl*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale(locale const&)</primary></indexterm>locale::locale(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale(locale const&, locale const&, int)</primary></indexterm>locale::locale(locale const&, locale const&, int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale()</primary></indexterm>locale::locale()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale(char const*)</primary></indexterm>locale::locale(char const*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale(locale::_Impl*)</primary></indexterm>locale::locale(locale::_Impl*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale(locale const&)</primary></indexterm>locale::locale(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale(locale const&, char const*, int)</primary></indexterm>locale::locale(locale const&, char const*, int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale(locale const&, locale const&, int)</primary></indexterm>locale::locale(locale const&, locale const&, int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale()</primary></indexterm>locale::locale()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::~locale()</primary></indexterm>locale::~locale()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::~locale()</primary></indexterm>locale::~locale()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::operator=(locale const&)</primary></indexterm>locale::operator=(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpf-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-10-tbl-libstdcxx-cpf-ints">[2]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::locale specified in <XREF linkend="tbl-libstdcxx-cpf-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpf-data">
<TITLE>libstdcxx - Class locale Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::all</primary></indexterm>locale::all(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::none</primary></indexterm>locale::none(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::time</primary></indexterm>locale::time(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::ctype</primary></indexterm>locale::ctype(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::collate</primary></indexterm>locale::collate(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::numeric</primary></indexterm>locale::numeric(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::messages</primary></indexterm>locale::messages(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::monetary</primary></indexterm>locale::monetary(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpf-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpf-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt6locale5facetE -->
<SECT2>
<!--libgroup-->
<TITLE>Class locale::facet</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for locale::facet</TITLE>
<PARA>
</PARA>
<PARA>
The virtual table for the std::locale::facet class
is described by <XREF LINKEND="cls-421-0">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE id="cls-421-0">
<TITLE>Primary vtable for locale::facet</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Virtual Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;0&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet()</primary></indexterm>locale::facet::~facet()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc&lsqb;1&rsqb;:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet()</primary></indexterm>locale::facet::~facet()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA>
The Run Time Type Information for the std::locale::facet  class
is described by <XREF LINKEND="rtti-422">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-422">
<TITLE>typeinfo for locale::facet</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for locale::facet</primary></indexterm>typeinfo name for locale::facet</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class locale::facet</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::locale::facet specified in <XREF linkend="tbl-libstdcxx-cpg-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpg-ints">
<TITLE>libstdcxx - Class locale::facet Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::_S_get_c_locale()</primary></indexterm>locale::facet::_S_get_c_locale()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::_S_clone_c_locale(__locale_struct*&)</primary></indexterm>locale::facet::_S_clone_c_locale(__locale_struct*&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::_S_create_c_locale(__locale_struct*&, char const*, __locale_struct*)</primary></indexterm>locale::facet::_S_create_c_locale(__locale_struct*&, char const*, __locale_struct*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::_S_destroy_c_locale(__locale_struct*&)</primary></indexterm>locale::facet::_S_destroy_c_locale(__locale_struct*&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet()</primary></indexterm>locale::facet::~facet()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet()</primary></indexterm>locale::facet::~facet()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet()</primary></indexterm>locale::facet::~facet()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::locale(locale const&, char const*, int)</primary></indexterm>locale::locale(locale const&, char const*, int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpg-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::locale::facet specified in <XREF linkend="tbl-libstdcxx-cpg-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpg-data">
<TITLE>libstdcxx - Class locale::facet Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct_cache&lt;char&gt;::_S_timezones</primary></indexterm>__timepunct_cache&lt;char&gt;::_S_timezones(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct_cache&lt;wchar_t&gt;::_S_timezones</primary></indexterm>__timepunct_cache&lt;wchar_t&gt;::_S_timezones(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpg-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpg-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for locale::facet</primary></indexterm>typeinfo name for locale::facet(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpg-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for locale::facet</primary></indexterm>vtable for locale::facet(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpg-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpg-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cpg-data">[2]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name facet functions -->
<SECT2>
<!--libgroup-->
<TITLE>facet functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for facet functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for facet functions specified in <XREF linkend="tbl-libstdcxx-fac-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-fac-ints">
<TITLE>libstdcxx - facet functions Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>void __convert_to_v&lt;double&gt;(char const*, double&, _Ios_Iostate&, __locale_struct* const&)</primary></indexterm>void __convert_to_v&lt;double&gt;(char const*, double&, _Ios_Iostate&, __locale_struct* const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>void __convert_to_v&lt;long double&gt;(char const*, long double&, _Ios_Iostate&, __locale_struct* const&)</primary></indexterm>void __convert_to_v&lt;long double&gt;(char const*, long double&, _Ios_Iostate&, __locale_struct* const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>void __convert_to_v&lt;float&gt;(char const*, float&, _Ios_Iostate&, __locale_struct* const&)</primary></indexterm>void __convert_to_v&lt;float&gt;(char const*, float&, _Ios_Iostate&, __locale_struct* const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;moneypunct&lt;char, false&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;moneypunct&lt;char, false&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;moneypunct&lt;wchar_t, false&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;moneypunct&lt;wchar_t, false&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;ctype&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;ctype&lt;wchar_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;codecvt&lt;char, char, __mbstate_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;codecvt&lt;char, char, __mbstate_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;codecvt&lt;wchar_t, char, __mbstate_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;codecvt&lt;wchar_t, char, __mbstate_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;collate&lt;char&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;collate&lt;char&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;collate&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;collate&lt;wchar_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;messages&lt;char&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;messages&lt;char&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;messages&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;messages&lt;wchar_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;numpunct&lt;char&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;numpunct&lt;char&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;numpunct&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;numpunct&lt;wchar_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>bool has_facet&lt;money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>bool has_facet&lt;money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, false&gt; const& use_facet&lt;moneypunct&lt;char, false&gt; &gt;(locale const&)</primary></indexterm>moneypunct&lt;char, false&gt; const& use_facet&lt;moneypunct&lt;char, false&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, true&gt; const& use_facet&lt;moneypunct&lt;char, true&gt; &gt;(locale const&)</primary></indexterm>moneypunct&lt;char, true&gt; const& use_facet&lt;moneypunct&lt;char, true&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, false&gt; const& use_facet&lt;moneypunct&lt;wchar_t, false&gt; &gt;(locale const&)</primary></indexterm>moneypunct&lt;wchar_t, false&gt; const& use_facet&lt;moneypunct&lt;wchar_t, false&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, true&gt; const& use_facet&lt;moneypunct&lt;wchar_t, true&gt; &gt;(locale const&)</primary></indexterm>moneypunct&lt;wchar_t, true&gt; const& use_facet&lt;moneypunct&lt;wchar_t, true&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char&gt; const& use_facet&lt;__timepunct&lt;char&gt; &gt;(locale const&)</primary></indexterm>__timepunct&lt;char&gt; const& use_facet&lt;__timepunct&lt;char&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t&gt; const& use_facet&lt;__timepunct&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>__timepunct&lt;wchar_t&gt; const& use_facet&lt;__timepunct&lt;wchar_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char&gt; const& use_facet&lt;ctype&lt;char&gt; &gt;(locale const&)</primary></indexterm>ctype&lt;char&gt; const& use_facet&lt;ctype&lt;char&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t&gt; const& use_facet&lt;ctype&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>ctype&lt;wchar_t&gt; const& use_facet&lt;ctype&lt;wchar_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t&gt; const& use_facet&lt;codecvt&lt;char, char, __mbstate_t&gt; &gt;(locale const&)</primary></indexterm>codecvt&lt;char, char, __mbstate_t&gt; const& use_facet&lt;codecvt&lt;char, char, __mbstate_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t&gt; const& use_facet&lt;codecvt&lt;wchar_t, char, __mbstate_t&gt; &gt;(locale const&)</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t&gt; const& use_facet&lt;codecvt&lt;wchar_t, char, __mbstate_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char&gt; const& use_facet&lt;collate&lt;char&gt; &gt;(locale const&)</primary></indexterm>collate&lt;char&gt; const& use_facet&lt;collate&lt;char&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t&gt; const& use_facet&lt;collate&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>collate&lt;wchar_t&gt; const& use_facet&lt;collate&lt;wchar_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char&gt; const& use_facet&lt;messages&lt;char&gt; &gt;(locale const&)</primary></indexterm>messages&lt;char&gt; const& use_facet&lt;messages&lt;char&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t&gt; const& use_facet&lt;messages&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>messages&lt;wchar_t&gt; const& use_facet&lt;messages&lt;wchar_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char&gt; const& use_facet&lt;numpunct&lt;char&gt; &gt;(locale const&)</primary></indexterm>numpunct&lt;char&gt; const& use_facet&lt;numpunct&lt;char&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t&gt; const& use_facet&lt;numpunct&lt;wchar_t&gt; &gt;(locale const&)</primary></indexterm>numpunct&lt;wchar_t&gt; const& use_facet&lt;numpunct&lt;wchar_t&gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; const& use_facet&lt;money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; const& use_facet&lt;money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; &gt;(locale const&)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-fac-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-fac-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt10__num_base -->
<SECT2>
<!--libgroup-->
<TITLE>Class __num_base</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __num_base</TITLE>
<PARA>
</PARA>
<PARA>
The Run Time Type Information for the std::__num_base  class
is described by <XREF LINKEND="rtti-423">
</PARA>
<!--classdata-->
<!--table start-->
<TABLE ID="rtti-423">
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __num_base</primary></indexterm>typeinfo name for __num_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __num_base</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__num_base specified in <XREF linkend="tbl-libstdcxx-cph-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cph-ints">
<TITLE>libstdcxx - Class __num_base Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__num_base::_S_format_float(ios_base const&, char*, char)</primary></indexterm>__num_base::_S_format_float(ios_base const&, char*, char)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cph-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cph-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::__num_base specified in <XREF linkend="tbl-libstdcxx-cph-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cph-data">
<TITLE>libstdcxx - Class __num_base Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__num_base::_S_atoms_in</primary></indexterm>__num_base::_S_atoms_in(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cph-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__num_base::_S_atoms_out</primary></indexterm>__num_base::_S_atoms_out(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cph-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cph-data">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpi-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpi-ints">
<TITLE>libstdcxx - Class num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned int&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const</primary></indexterm>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned int&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;long&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;long&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned long&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned long&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned short&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned short&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;long long&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;long long&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned long long&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned long long&gt;(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_float(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_extract_float(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpi-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpi-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpi-data">
<TITLE>libstdcxx - Class num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpi-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpi-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpi-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpi-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpi-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cpi-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpi-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::num_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpj-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpj-ints">
<TITLE>libstdcxx - Class num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;unsigned int&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const</primary></indexterm>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;unsigned int&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;long&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;long&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;unsigned long&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;unsigned long&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;unsigned short&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;unsigned short&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;long long&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;long long&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;unsigned long long&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_int&lt;unsigned long long&gt;(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_float(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_extract_float(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, void*&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, bool&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long double&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, float&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned int&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned short&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, _Ios_Iostate&, unsigned long long&) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_get()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpj-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::num_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpj-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpj-data">
<TITLE>libstdcxx - Class num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpj-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpj-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cpj-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpj-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpk-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpk-ints">
<TITLE>libstdcxx - Class num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long long&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, double) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, long double) const</primary></indexterm>ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;long double&gt;(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, char, long double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, void const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, bool) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt;, ios_base&, char, unsigned long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::~num_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpk-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpk-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpk-data">
<TITLE>libstdcxx - Class num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>guard variable for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpk-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;</primary></indexterm>vtable for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpk-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cpk-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpk-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpl-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpl-ints">
<TITLE>libstdcxx - Class num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_int&lt;long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_int&lt;long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_int&lt;long long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_int&lt;long long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_int&lt;unsigned long long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_int&lt;unsigned long long&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_float&lt;double&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, double) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_float&lt;double&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_float&lt;long double&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, long double) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::_M_insert_float&lt;long double&gt;(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, char, long double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, void const*) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, bool) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long double) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt;, ios_base&, wchar_t, unsigned long long) const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::~num_put()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpl-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Class std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; specified in <XREF linkend="tbl-libstdcxx-cpl-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpl-data">
<TITLE>libstdcxx - Class num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt; Data Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>guard variable for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>guard variable for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;::id(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpl-data">&lsqb;2]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>typeinfo name for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>vtable for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;</primary></indexterm>vtable for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; &gt;(GLIBCXX_3.4) <LINK LINKEND="std-231-87-tbl-libstdcxx-cpl-data">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-87-tbl-libstdcxx-cpl-data">[1]</TITLE><para><XREF LINKEND=std.CXXABI></para></FORMALPARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpl-data">[2]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt6gsliceE -->
<SECT2>
<!--libgroup-->
<TITLE>Class gslice</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for gslice</TITLE>
<PARA>
</PARA>
</SECT3>


<SECT3>
<TITLE>Interfaces for Class gslice</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::gslice
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt12__basic_fileIcEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class __basic_file&lt;char&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for __basic_file&lt;char&gt;</TITLE>
<PARA>
</PARA>
</SECT3>


<SECT3>
<TITLE>Interfaces for Class __basic_file&lt;char&gt;</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::__basic_file&lt;char&gt; specified in <XREF linkend="tbl-libstdcxx-cpm-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpm-ints">
<TITLE>libstdcxx - Class __basic_file&lt;char&gt; Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::is_open() const</primary></indexterm>__basic_file&lt;char&gt;::is_open() const(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::fd()</primary></indexterm>__basic_file&lt;char&gt;::fd()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::file()</primary></indexterm>__basic_file&lt;char&gt;::file()(GLIBCXX_3.4.1) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::open(char const*, _Ios_Openmode, int)</primary></indexterm>__basic_file&lt;char&gt;::open(char const*, _Ios_Openmode, int)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::sync()</primary></indexterm>__basic_file&lt;char&gt;::sync()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::close()</primary></indexterm>__basic_file&lt;char&gt;::close()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::sys_open(_IO_FILE*, _Ios_Openmode)</primary></indexterm>__basic_file&lt;char&gt;::sys_open(_IO_FILE*, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::sys_open(int, _Ios_Openmode)</primary></indexterm>__basic_file&lt;char&gt;::sys_open(int, _Ios_Openmode)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::showmanyc()</primary></indexterm>__basic_file&lt;char&gt;::showmanyc()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::__basic_file(pthread_mutex_t*)</primary></indexterm>__basic_file&lt;char&gt;::__basic_file(pthread_mutex_t*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::__basic_file(pthread_mutex_t*)</primary></indexterm>__basic_file&lt;char&gt;::__basic_file(pthread_mutex_t*)(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::~__basic_file()</primary></indexterm>__basic_file&lt;char&gt;::~__basic_file()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char&gt;::~__basic_file()</primary></indexterm>__basic_file&lt;char&gt;::~__basic_file()(GLIBCXX_3.4) <LINK LINKEND="std-231-65-tbl-libstdcxx-cpm-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-65-tbl-libstdcxx-cpm-ints">[1]</TITLE><para><XREF LINKEND=std.ISOCXX></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt15_List_node_baseE -->
<SECT2>
<!--libgroup-->
<TITLE>Class _List_node_base</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Class _List_node_base</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic methods
for Class std::_List_node_base specified in <XREF linkend="tbl-libstdcxx-cpn-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE id="tbl-libstdcxx-cpn-ints">
<TITLE>libstdcxx - Class _List_node_base Function Interfaces</TITLE>
<TGROUP COLS=1>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_List_node_base::hook(_List_node_base*)</primary></indexterm>_List_node_base::hook(_List_node_base*)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-cpn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_List_node_base::swap(_List_node_base&, _List_node_base&)</primary></indexterm>_List_node_base::swap(_List_node_base&, _List_node_base&)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-cpn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_List_node_base::unhook()</primary></indexterm>_List_node_base::unhook()(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-cpn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_List_node_base::reverse()</primary></indexterm>_List_node_base::reverse()(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-cpn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>_List_node_base::transfer(_List_node_base*, _List_node_base*)</primary></indexterm>_List_node_base::transfer(_List_node_base*, _List_node_base*)(GLIBCXX_3.4) <LINK LINKEND="std-231-10-tbl-libstdcxx-cpn-ints">&lsqb;1]</LINK></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE><ANCHOR id="std-231-10-tbl-libstdcxx-cpn-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Class _ZNSt8valarrayIjEE -->
<SECT2>
<!--libgroup-->
<TITLE>Class valarray&lt;unsigned int&gt;</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Class data for valarray&lt;unsigned int&gt;</TITLE>
<PARA>
</PARA>
</SECT3>


<SECT3>
<TITLE>Interfaces for Class valarray&lt;unsigned int&gt;</TITLE>
<PARA>
No external methods are defined for libstdcxx - Class std::valarray&lt;unsigned int&gt;
</PARA>
</SECT3>
</SECT2>
</SECT1>
<!-- empty header file All/ctype -->
<!-- empty header file All/cxxabi.h -->
<!-- missing header file All/iosfwd -->
<!-- empty header file All/iostream -->
<!-- empty header file All/typeinfo -->
<SECT1 ID=libstdcxxman>
<TITLE>Interface Definitions for libstdcxx</TITLE>
<PARA>
The following interfaces are included in libstdcxx and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed above for libstdcxx shall behave as described
in the referenced base document.
</PARA>
<!-- MISSING DEFINITION FOR _ZN9__gnu_cxx17__pool_alloc_base12_M_get_mutexEv -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE4fileEv -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE4fileEv -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZNSt15_List_node_base4hookEPS_ -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZNSt15_List_node_base4swapERS_S0_ -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZNSt15_List_node_base6unhookEv -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZNSt15_List_node_base7reverseEv -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZNSt15_List_node_base8transferEPS_S0_ -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZNSt6locale5_Impl16_M_replace_facetEPKS0_PKNS_2idE -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZNSt6locale5_ImplD1Ev -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZNSt6locale5_ImplD2Ev -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_ -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_ -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_ -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZTIN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEEE -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZTIN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEEE -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZTSN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEEE -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZTSN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEEE -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZTVN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEEE -->
<!-- Lets just hope nobody notices -->
<!-- MISSING DEFINITION FOR _ZTVN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEEE -->
<!-- Lets just hope nobody notices -->
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.68 2005/03/30 04:12:27 anderson Exp 0 -->


</CHAPTER>

</PART>
