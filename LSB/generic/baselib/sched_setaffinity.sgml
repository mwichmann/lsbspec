<REFENTRY ID="baselib-sched-setaffinity"> <REFMETA>
<REFENTRYTITLE>sched_setaffinity</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>sched_setaffinity
</REFNAME>
<REFPURPOSE>
set the CPU affinity mask for a process
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>19 November 2008</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sched.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int <FUNCTION>sched_setaffinity</FUNCTION></FUNCDEF>
 <PARAMDEF>pid_t
  <PARAMETER>pid</PARAMETER></PARAMDEF>
 <PARAMDEF>unsigned int
  <PARAMETER>cpusetsize</PARAMETER></PARAMDEF>
 <PARAMDEF>cpu_set_t *
  <PARAMETER>mask</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>sched_setaffinity</FUNCTION>
shall set the CPU affinity mask for a process. 
</PARA>
<PARA>
The parameter <PARAMETER>pid</PARAMETER>
specifies the ID for the process. 
If <PARAMETER>pid</PARAMETER> is 0,
then the calling process is specified instead.
</PARA>
<PARA>
The parameter <PARAMETER>cpusetsize</PARAMETER> specifies 
the length of the data pointed to by
<PARAMETER>mask</PARAMETER>, in bytes.  
Normally, this parameter is specified as
<LITERAL>sizeof(cpu_set_t)</LITERAL>.
</PARA>
<PARA>
The parameter <PARAMETER>mask</PARAMETER>
specifies the new value for the CPU affinity mask. 
The structure pointed to by <PARAMETER>mask</PARAMETER>
represents the set of CPUs on which the process may run.
If <PARAMETER>mask</PARAMETER> does not specify one of the CPUs 
on which the specified process is currently running, 
then <FUNCTION>sched_setaffinity</FUNCTION>
shall migrate the process to one of those CPUs.
</PARA>
<PARA>
Setting the mask on a multiprocessor system can improve performance.
For example, 
setting the mask for one process to specify a particular CPU,
and then setting the mask of all other processes to exclude the CPU,
dedicates the CPU to the process
so that the process runs as fast as possible.
This technique also prevents loss of performance in case the process
terminates on one CPU and starts again on another, invalidating cache.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <FUNCTION>sched_setaffinity</FUNCTION>
shall return <LITERAL>0</LITERAL>.
</PARA>
<PARA>
On failure, <FUNCTION>sched_setaffinity</FUNCTION>
shall return <LITERAL>-1</LITERAL> and 
set <VARNAME>errno</VARNAME> as follows.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EFAULT
</TERM>
<LISTITEM>
<PARA>
Bad address.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EINVAL
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>mask</PARAMETER> does not specify any processors that exist in the system, 
or <PARAMETER>cpusetsize</PARAMETER> is smaller than the kernel's affinity mask. 
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EPERM
</TERM>
<LISTITEM>
<PARA>
Insufficient privileges.
The effective user ID of the process calling
<FUNCTION>sched_setaffinity</FUNCTION>
is not equal to the user ID or effective user ID of the specified process,
and the calling process does not have appropriate privileges.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
ESRCH
</TERM>
<LISTITEM>
<PARA>
The specified process could not be found.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>
</REFSECT1>

<REFSECT1>
<TITLE>See Also
</TITLE>
<PARA>
<FUNCTION>sched_setscheduler</FUNCTION>, <FUNCTION>sched_getaffinity</FUNCTION>.
</PARA>
</REFSECT1>

</REFENTRY>
