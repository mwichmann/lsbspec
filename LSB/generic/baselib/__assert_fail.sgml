<REFENTRY ID="baselib---assert-fail-1"> <REFMETA>
<REFENTRYTITLE>__assert_fail</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__assert_fail
</REFNAME>
<REFPURPOSE>abort the program after false assertion
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>30 January 2000</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>__assert_fail</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*assertion</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*file</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>unsigned int 
  <PARAMETER><REPLACEABLE>line</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*function</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>30 January 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>__assert_fail</FUNCTION> function is used to
implement the <FUNCTION>assert</FUNCTION> function of
<XREF LINKEND=STD.SUSv3>.
The <FUNCTION>__assert_fail</FUNCTION> function 
shall print the given <parameter>file</parameter> filename,
<parameter>line</parameter> line number, 
<parameter>function</parameter> function name and a message
on the standard error stream in an implementation defined format, and abort
program execution via the <function>abort</function> function.
For example:
<BLOCKQUOTE>
<PARA>
a.c:10: foobar: Assertion `a == b' failed.
</PARA>
</BLOCKQUOTE>
</PARA>
<PARA>
If <PARAMETER>function</PARAMETER> is <LITERAL>NULL</LITERAL>, 
<function>__assert_fail</function> shall omit
information about the function.
</PARA><PARA>
<PARAMETER>assertion</PARAMETER>, <PARAMETER>file</PARAMETER>, and
<PARAMETER>line</PARAMETER> shall be non-<LITERAL>NULL</LITERAL>.
</PARA>
<PARA>
The <FUNCTION>__assert_fail</FUNCTION> function
is not in the source standard; 
it is only in the binary standard.
The <FUNCTION>assert</FUNCTION> function is not in the binary standard;
it is only in the source standard.
</PARA>
</REFSECT1>
</REFENTRY>
