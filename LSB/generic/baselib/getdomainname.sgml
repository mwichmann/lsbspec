<REFENTRY ID="baselib-getdomainname"> <REFMETA>
<REFENTRYTITLE>getdomainname</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>getdomainname</REFNAME>
<REFPURPOSE>
get NIS domain name.
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<SYNOPSIS>
#include &lt;unistd.h&gt;

extern int getdomainname(char *name, size_t namelen);
</SYNOPSIS>
</REFSYNOPSISDIV>
<refsect1>
<title>Description</title>
<para>
If the Network Information System (NIS) is in use, 
<FUNCTION>getdomainname</FUNCTION> shall
copy the NIS domain name to the supplied buffer identified by 
<PARAMETER>name</PARAMETER>,
with maximum length <PARAMETER>namelen</PARAMETER>. 
If NIS is not in use, <FUNCTION>getdomainname</FUNCTION> shall
provide the string "(none)". If <PARAMETER>namelen</PARAMETER> is less 
the length of the string
to be copied, <FUNCTION>getdomainname</FUNCTION>
may either truncate the string to <PARAMETER>namelen</PARAMETER>
characters and place it in <PARAMETER>name</PARAMETER>
(without a terminating null character),
or may fail with EINVAL.
</PARA>
<PARA>
Note that the NIS domain name is not the same as the domain portion of
a fully qualified domain name (for example, in DNS).
</para>
</refsect1>

<refsect1>
<title>Return Value</title>
<para>
<FUNCTION>getdomainname</FUNCTION> returns 0 if successful; -1 if not (in which case <VARNAME>errno</VARNAME>
is set to indicate the error).
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EINVAL
</TERM>
<LISTITEM>
<PARA>
The buffer identified by <PARAMETER>name</PARAMETER> and 
<PARAMETER>namelen</PARAMETER> is of insufficient size to store the NIS domain name string, and the implementation considers this an error.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>

</REFENTRY>
