<REFENTRY ID="baselib-flock-2"> <REFMETA>
<REFENTRYTITLE>flock</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>flock</REFNAME>
<REFPURPOSE>
apply or remove an advisory lock on an open file
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
int flock(int fd, int operation);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
Apply or remove an advisory lock on an open file. The file is specified by fd. Valid operations are given below:
</PARA>
<VARIABLELIST>

<VARLISTENTRY>
<TERM>
LOCK_SH
</TERM>
<LISTITEM>
<PARA>
Shared lock. More than one process may hold a shared lock for a given file at a given time.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
LOCK_EX
</TERM>
<LISTITEM>
<PARA>
Exclusive lock. Only one process may hold an exclusive lock for a given file at a given time.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
LOCK_UN
</TERM>
<LISTITEM>
<PARA>
Unlock.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
LOCK_NB
</TERM>
<LISTITEM>
<PARA>
Don't block when locking. May be specified (by or'ing) along with one of the other operations.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<PARA>
A single file may not simultaneously have both shared and exclusive locks.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, zero is returned. On error, -1 is returned, and errno is set appropriately.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EWOULDBLOCK
</TERM>
<LISTITEM>
<PARA>
The file is locked and the LOCK_NB flag was selected.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>
