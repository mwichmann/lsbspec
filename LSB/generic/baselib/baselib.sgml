<PART ID=tocbaselib>
<TITLE>Base Libraries</TITLE>

<CHAPTER id=baselib>
<TITLE>Libraries</TITLE>

<PARA>
An LSB-conforming implementation shall support some base libraries which
provide interfaces for accessing the operating system, processor and other
hardware in the system.
</PARA>

<SECT1 ID=proginterp>
<TITLE>Program Interpreter</TITLE>
<PARA>
The Program Interpreter is specified in the appropriate
architecture-specific LSB specification.
</PARA>
</SECT1>


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->
<!--    at Tue Sep 28 23:06:20 2004 -->
<SECT1 ID=libc>
<TITLE>Interfaces for libc</TITLE>
<PARA>
<XREF LINKEND="lib-libc-def"> defines the library name and shared object name
for the libc library
</PARA>
<TABLE id="lib-libc-def">
<TITLE>libc Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libc</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>See archLSB.</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="std.LFS">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.SUSv2">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.SUSv3">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.SVID.3">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.SVID.4">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name RPC -->
<SECT2>
<!--libgroup-->
<TITLE>RPC</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for RPC</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for RPC specified in <XREF linkend="tbl-libc-rpc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-rpc-ints">
<TITLE>libc - RPC Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>authnone_create</primary></indexterm>authnone_create<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pmap_unset</primary></indexterm>pmap_unset<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_weakauth</primary></indexterm>svcerr_weakauth<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_float</primary></indexterm>xdr_float<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_u_char</primary></indexterm>xdr_u_char<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_create</primary></indexterm>clnt_create<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setdomainname</primary></indexterm>setdomainname<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>svctcp_create</primary></indexterm>svctcp_create<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_free</primary></indexterm>xdr_free<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_u_int</primary></indexterm>xdr_u_int<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_pcreateerror</primary></indexterm>clnt_pcreateerror<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svc_getreqset</primary></indexterm>svc_getreqset<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcudp_create</primary></indexterm>svcudp_create<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_int</primary></indexterm>xdr_int<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_u_long</primary></indexterm>xdr_u_long<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_perrno</primary></indexterm>clnt_perrno<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svc_register</primary></indexterm>svc_register<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_accepted_reply</primary></indexterm>xdr_accepted_reply<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_long</primary></indexterm>xdr_long<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_u_short</primary></indexterm>xdr_u_short<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_perror</primary></indexterm>clnt_perror<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svc_run</primary></indexterm>svc_run<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_array</primary></indexterm>xdr_array<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_opaque</primary></indexterm>xdr_opaque<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_union</primary></indexterm>xdr_union<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_spcreateerror</primary></indexterm>clnt_spcreateerror<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svc_sendreply</primary></indexterm>svc_sendreply<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_bool</primary></indexterm>xdr_bool<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_opaque_auth</primary></indexterm>xdr_opaque_auth<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_vector</primary></indexterm>xdr_vector<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_sperrno</primary></indexterm>clnt_sperrno<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_auth</primary></indexterm>svcerr_auth<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_bytes</primary></indexterm>xdr_bytes<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_pointer</primary></indexterm>xdr_pointer<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_void</primary></indexterm>xdr_void<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_sperror</primary></indexterm>clnt_sperror<LINK LINKEND="std-131-46-tbl-libc-rpc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_decode</primary></indexterm>svcerr_decode<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_callhdr</primary></indexterm>xdr_callhdr<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_reference</primary></indexterm>xdr_reference<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_wrapstring</primary></indexterm>xdr_wrapstring<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getdomainname</primary></indexterm>getdomainname<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_noproc</primary></indexterm>svcerr_noproc<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_callmsg</primary></indexterm>xdr_callmsg<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_rejected_reply</primary></indexterm>xdr_rejected_reply<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdrmem_create</primary></indexterm>xdrmem_create<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>key_decryptsession</primary></indexterm>key_decryptsession<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_noprog</primary></indexterm>svcerr_noprog<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_char</primary></indexterm>xdr_char<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_replymsg</primary></indexterm>xdr_replymsg<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdrrec_create</primary></indexterm>xdrrec_create<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pmap_getport</primary></indexterm>pmap_getport<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_progvers</primary></indexterm>svcerr_progvers<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_double</primary></indexterm>xdr_double<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_short</primary></indexterm>xdr_short<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdrrec_eof</primary></indexterm>xdrrec_eof<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pmap_set</primary></indexterm>pmap_set<LINK LINKEND="std-131-10-tbl-libc-rpc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_systemerr</primary></indexterm>svcerr_systemerr<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_enum</primary></indexterm>xdr_enum<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_string</primary></indexterm>xdr_string<LINK LINKEND="std-131-21-tbl-libc-rpc-ints"> [3]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-46-tbl-libc-rpc-ints">[1]</TITLE><para><XREF LINKEND=std.SVID.4></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-rpc-ints">[2]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-21-tbl-libc-rpc-ints">[3]</TITLE><para><XREF LINKEND=std.SVID.3></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name System Calls -->
<SECT2>
<!--libgroup-->
<TITLE>System Calls</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for System Calls</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for System Calls specified in <XREF linkend="tbl-libc-sys-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-sys-ints">
<TITLE>libc - System Calls Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__fxstat</primary></indexterm>__fxstat<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fchmod</primary></indexterm>fchmod<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getwd</primary></indexterm>getwd<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>read</primary></indexterm>read<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setrlimit</primary></indexterm>setrlimit<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__getpgid</primary></indexterm>__getpgid<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fchown</primary></indexterm>fchown<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>initgroups</primary></indexterm>initgroups<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>readdir</primary></indexterm>readdir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setrlimit64</primary></indexterm>setrlimit64<LINK LINKEND="std-131-35-tbl-libc-sys-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__lxstat</primary></indexterm>__lxstat<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fcntl</primary></indexterm>fcntl<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ioctl</primary></indexterm>ioctl<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>readdir_r</primary></indexterm>readdir_r<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setsid</primary></indexterm>setsid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xmknod</primary></indexterm>__xmknod<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fdatasync</primary></indexterm>fdatasync<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>kill</primary></indexterm>kill<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>readlink</primary></indexterm>readlink<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setuid</primary></indexterm>setuid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xstat</primary></indexterm>__xstat<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>flock</primary></indexterm>flock<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>killpg</primary></indexterm>killpg<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>readv</primary></indexterm>readv<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sleep</primary></indexterm>sleep<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>access</primary></indexterm>access<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fork</primary></indexterm>fork<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lchown</primary></indexterm>lchown<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>rename</primary></indexterm>rename<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>statvfs</primary></indexterm>statvfs<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acct</primary></indexterm>acct<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fstatvfs</primary></indexterm>fstatvfs<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>link</primary></indexterm>link<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>rmdir</primary></indexterm>rmdir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>stime</primary></indexterm>stime<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>alarm</primary></indexterm>alarm<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fsync</primary></indexterm>fsync<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lockf</primary></indexterm>lockf<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sbrk</primary></indexterm>sbrk<LINK LINKEND="std-131-5-tbl-libc-sys-ints"> [4]</LINK></ENTRY>
<ENTRY><indexterm><primary>symlink</primary></indexterm>symlink<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>brk</primary></indexterm>brk<LINK LINKEND="std-131-5-tbl-libc-sys-ints"> [4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftime</primary></indexterm>ftime<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lseek</primary></indexterm>lseek<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_get_priority_max</primary></indexterm>sched_get_priority_max<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sync</primary></indexterm>sync<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chdir</primary></indexterm>chdir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftruncate</primary></indexterm>ftruncate<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mkdir</primary></indexterm>mkdir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_get_priority_min</primary></indexterm>sched_get_priority_min<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sysconf</primary></indexterm>sysconf<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chmod</primary></indexterm>chmod<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getcontext</primary></indexterm>getcontext<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mkfifo</primary></indexterm>mkfifo<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_getparam</primary></indexterm>sched_getparam<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>time</primary></indexterm>time<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chown</primary></indexterm>chown<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getegid</primary></indexterm>getegid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mlock</primary></indexterm>mlock<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_getscheduler</primary></indexterm>sched_getscheduler<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>times</primary></indexterm>times<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chroot</primary></indexterm>chroot<LINK LINKEND="std-131-5-tbl-libc-sys-ints"> [4]</LINK></ENTRY>
<ENTRY><indexterm><primary>geteuid</primary></indexterm>geteuid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mlockall</primary></indexterm>mlockall<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_rr_get_interval</primary></indexterm>sched_rr_get_interval<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>truncate</primary></indexterm>truncate<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clock</primary></indexterm>clock<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgid</primary></indexterm>getgid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mmap</primary></indexterm>mmap<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_setparam</primary></indexterm>sched_setparam<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ulimit</primary></indexterm>ulimit<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>close</primary></indexterm>close<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgroups</primary></indexterm>getgroups<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mprotect</primary></indexterm>mprotect<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_setscheduler</primary></indexterm>sched_setscheduler<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>umask</primary></indexterm>umask<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>closedir</primary></indexterm>closedir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getitimer</primary></indexterm>getitimer<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>msync</primary></indexterm>msync<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_yield</primary></indexterm>sched_yield<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>uname</primary></indexterm>uname<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>creat</primary></indexterm>creat<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getloadavg</primary></indexterm>getloadavg<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>munlock</primary></indexterm>munlock<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>select</primary></indexterm>select<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>unlink</primary></indexterm>unlink<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>dup</primary></indexterm>dup<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpagesize</primary></indexterm>getpagesize<LINK LINKEND="std-131-5-tbl-libc-sys-ints"> [4]</LINK></ENTRY>
<ENTRY><indexterm><primary>munlockall</primary></indexterm>munlockall<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setcontext</primary></indexterm>setcontext<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>utime</primary></indexterm>utime<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>dup2</primary></indexterm>dup2<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpgid</primary></indexterm>getpgid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>munmap</primary></indexterm>munmap<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setegid</primary></indexterm>setegid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>utimes</primary></indexterm>utimes<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execl</primary></indexterm>execl<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpgrp</primary></indexterm>getpgrp<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nanosleep</primary></indexterm>nanosleep<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>seteuid</primary></indexterm>seteuid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfork</primary></indexterm>vfork<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execle</primary></indexterm>execle<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpid</primary></indexterm>getpid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nice</primary></indexterm>nice<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setgid</primary></indexterm>setgid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wait</primary></indexterm>wait<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execlp</primary></indexterm>execlp<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getppid</primary></indexterm>getppid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>open</primary></indexterm>open<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setitimer</primary></indexterm>setitimer<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wait3</primary></indexterm>wait3<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execv</primary></indexterm>execv<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpriority</primary></indexterm>getpriority<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>opendir</primary></indexterm>opendir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setpgid</primary></indexterm>setpgid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wait4</primary></indexterm>wait4<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execve</primary></indexterm>execve<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getrlimit</primary></indexterm>getrlimit<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pathconf</primary></indexterm>pathconf<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setpgrp</primary></indexterm>setpgrp<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>waitpid</primary></indexterm>waitpid<LINK LINKEND="std-131-10-tbl-libc-sys-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execvp</primary></indexterm>execvp<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getrusage</primary></indexterm>getrusage<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pause</primary></indexterm>pause<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setpriority</primary></indexterm>setpriority<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>write</primary></indexterm>write<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>exit</primary></indexterm>exit<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getsid</primary></indexterm>getsid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pipe</primary></indexterm>pipe<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setregid</primary></indexterm>setregid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>writev</primary></indexterm>writev<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fchdir</primary></indexterm>fchdir<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getuid</primary></indexterm>getuid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>poll</primary></indexterm>poll<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setreuid</primary></indexterm>setreuid<LINK LINKEND="std-131-67-tbl-libc-sys-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-sys-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-sys-ints">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-35-tbl-libc-sys-ints">[3]</TITLE><para><XREF LINKEND=std.LFS></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-sys-ints">[4]</TITLE><para><XREF LINKEND=std.SUSv2></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Standard I/O -->
<SECT2>
<!--libgroup-->
<TITLE>Standard I/O</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Standard I/O</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Standard I/O specified in <XREF linkend="tbl-libc-sta-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-sta-ints">
<TITLE>libc - Standard I/O Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_IO_feof</primary></indexterm>_IO_feof<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgetpos</primary></indexterm>fgetpos<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fsetpos</primary></indexterm>fsetpos<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putchar</primary></indexterm>putchar<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sscanf</primary></indexterm>sscanf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_IO_getc</primary></indexterm>_IO_getc<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgets</primary></indexterm>fgets<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftell</primary></indexterm>ftell<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putchar_unlocked</primary></indexterm>putchar_unlocked<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>telldir</primary></indexterm>telldir<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_IO_putc</primary></indexterm>_IO_putc<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgetwc_unlocked</primary></indexterm>fgetwc_unlocked<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftello</primary></indexterm>ftello<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>puts</primary></indexterm>puts<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tempnam</primary></indexterm>tempnam<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_IO_puts</primary></indexterm>_IO_puts<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fileno</primary></indexterm>fileno<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fwrite</primary></indexterm>fwrite<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putw</primary></indexterm>putw<LINK LINKEND="std-131-5-tbl-libc-sta-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>ungetc</primary></indexterm>ungetc<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asprintf</primary></indexterm>asprintf<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>flockfile</primary></indexterm>flockfile<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getc</primary></indexterm>getc<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>remove</primary></indexterm>remove<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vasprintf</primary></indexterm>vasprintf<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clearerr</primary></indexterm>clearerr<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fopen</primary></indexterm>fopen<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getc_unlocked</primary></indexterm>getc_unlocked<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>rewind</primary></indexterm>rewind<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vdprintf</primary></indexterm>vdprintf<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctermid</primary></indexterm>ctermid<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fprintf</primary></indexterm>fprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getchar</primary></indexterm>getchar<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>rewinddir</primary></indexterm>rewinddir<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfprintf</primary></indexterm>vfprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fclose</primary></indexterm>fclose<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fputc</primary></indexterm>fputc<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getchar_unlocked</primary></indexterm>getchar_unlocked<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>scanf</primary></indexterm>scanf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vprintf</primary></indexterm>vprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fdopen</primary></indexterm>fdopen<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fputs</primary></indexterm>fputs<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getw</primary></indexterm>getw<LINK LINKEND="std-131-5-tbl-libc-sta-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>seekdir</primary></indexterm>seekdir<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vsnprintf</primary></indexterm>vsnprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>feof</primary></indexterm>feof<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fread</primary></indexterm>fread<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pclose</primary></indexterm>pclose<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setbuf</primary></indexterm>setbuf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vsprintf</primary></indexterm>vsprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ferror</primary></indexterm>ferror<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>freopen</primary></indexterm>freopen<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>popen</primary></indexterm>popen<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setbuffer</primary></indexterm>setbuffer<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fflush</primary></indexterm>fflush<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fscanf</primary></indexterm>fscanf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>printf</primary></indexterm>printf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setvbuf</primary></indexterm>setvbuf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fflush_unlocked</primary></indexterm>fflush_unlocked<LINK LINKEND="std-131-10-tbl-libc-sta-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fseek</primary></indexterm>fseek<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putc</primary></indexterm>putc<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>snprintf</primary></indexterm>snprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetc</primary></indexterm>fgetc<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fseeko</primary></indexterm>fseeko<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putc_unlocked</primary></indexterm>putc_unlocked<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sprintf</primary></indexterm>sprintf<LINK LINKEND="std-131-67-tbl-libc-sta-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-sta-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-sta-ints">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-sta-ints">[3]</TITLE><para><XREF LINKEND=std.SUSv2></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Standard I/O specified in <XREF linkend="tbl-libc-sta-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-sta-data">
<TITLE>libc - Standard I/O Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>stderr</primary></indexterm>stderr<LINK LINKEND="std-131-67-tbl-libc-sta-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>stdin</primary></indexterm>stdin<LINK LINKEND="std-131-67-tbl-libc-sta-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>stdout</primary></indexterm>stdout<LINK LINKEND="std-131-67-tbl-libc-sta-data"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-sta-data">[1]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Signal Handling -->
<SECT2>
<!--libgroup-->
<TITLE>Signal Handling</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Signal Handling</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Signal Handling specified in <XREF linkend="tbl-libc-sig-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-sig-ints">
<TITLE>libc - Signal Handling Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__libc_current_sigrtmax</primary></indexterm>__libc_current_sigrtmax<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigaddset</primary></indexterm>sigaddset<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sighold</primary></indexterm>sighold<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigpause</primary></indexterm>sigpause<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigsuspend</primary></indexterm>sigsuspend<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__libc_current_sigrtmin</primary></indexterm>__libc_current_sigrtmin<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigaltstack</primary></indexterm>sigaltstack<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigignore</primary></indexterm>sigignore<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigpending</primary></indexterm>sigpending<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigtimedwait</primary></indexterm>sigtimedwait<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__sigsetjmp</primary></indexterm>__sigsetjmp<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigandset</primary></indexterm>sigandset<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>siginterrupt</primary></indexterm>siginterrupt<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigprocmask</primary></indexterm>sigprocmask<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigwait</primary></indexterm>sigwait<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__sysv_signal</primary></indexterm>__sysv_signal<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigblock</primary></indexterm>sigblock<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigisemptyset</primary></indexterm>sigisemptyset<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigqueue</primary></indexterm>sigqueue<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigwaitinfo</primary></indexterm>sigwaitinfo<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bsd_signal</primary></indexterm>bsd_signal<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigdelset</primary></indexterm>sigdelset<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigismember</primary></indexterm>sigismember<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigrelse</primary></indexterm>sigrelse<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>psignal</primary></indexterm>psignal<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigemptyset</primary></indexterm>sigemptyset<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>siglongjmp</primary></indexterm>siglongjmp<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigreturn</primary></indexterm>sigreturn<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>raise</primary></indexterm>raise<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigfillset</primary></indexterm>sigfillset<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>signal</primary></indexterm>signal<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigset</primary></indexterm>sigset<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sigaction</primary></indexterm>sigaction<LINK LINKEND="std-131-67-tbl-libc-sig-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>siggetmask</primary></indexterm>siggetmask<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigorset</primary></indexterm>sigorset<LINK LINKEND="std-131-10-tbl-libc-sig-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigstack</primary></indexterm>sigstack<LINK LINKEND="std-131-5-tbl-libc-sig-ints"> [3]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-sig-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-sig-ints">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-sig-ints">[3]</TITLE><para><XREF LINKEND=std.SUSv2></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Signal Handling specified in <XREF linkend="tbl-libc-sig-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-sig-data">
<TITLE>libc - Signal Handling Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_sys_siglist</primary></indexterm>_sys_siglist<LINK LINKEND="std-131-10-tbl-libc-sig-data"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-sig-data">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Localization Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Localization Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Localization Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Localization Functions specified in <XREF linkend="tbl-libc-loc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-loc-ints">
<TITLE>libc - Localization Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>bind_textdomain_codeset</primary></indexterm>bind_textdomain_codeset<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>catopen</primary></indexterm>catopen<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>dngettext</primary></indexterm>dngettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>iconv_open</primary></indexterm>iconv_open<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setlocale</primary></indexterm>setlocale<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bindtextdomain</primary></indexterm>bindtextdomain<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>dcgettext</primary></indexterm>dcgettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gettext</primary></indexterm>gettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>localeconv</primary></indexterm>localeconv<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>textdomain</primary></indexterm>textdomain<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catclose</primary></indexterm>catclose<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>dcngettext</primary></indexterm>dcngettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>iconv</primary></indexterm>iconv<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ngettext</primary></indexterm>ngettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catgets</primary></indexterm>catgets<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>dgettext</primary></indexterm>dgettext<LINK LINKEND="std-131-10-tbl-libc-loc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>iconv_close</primary></indexterm>iconv_close<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nl_langinfo</primary></indexterm>nl_langinfo<LINK LINKEND="std-131-67-tbl-libc-loc-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-loc-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-loc-ints">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Localization Functions specified in <XREF linkend="tbl-libc-loc-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-loc-data">
<TITLE>libc - Localization Functions Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_nl_msg_cat_cntr</primary></indexterm>_nl_msg_cat_cntr<LINK LINKEND="std-131-10-tbl-libc-loc-data"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-loc-data">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Socket Interface -->
<SECT2>
<!--libgroup-->
<TITLE>Socket Interface</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Socket Interface</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Socket Interface specified in <XREF linkend="tbl-libc-soc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-soc-ints">
<TITLE>libc - Socket Interface Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__h_errno_location</primary></indexterm>__h_errno_location<LINK LINKEND="std-131-10-tbl-libc-soc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostid</primary></indexterm>gethostid<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>listen</primary></indexterm>listen<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sendmsg</primary></indexterm>sendmsg<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>socketpair</primary></indexterm>socketpair<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>accept</primary></indexterm>accept<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostname</primary></indexterm>gethostname<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>recv</primary></indexterm>recv<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sendto</primary></indexterm>sendto<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bind</primary></indexterm>bind<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpeername</primary></indexterm>getpeername<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>recvfrom</primary></indexterm>recvfrom<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setsockopt</primary></indexterm>setsockopt<LINK LINKEND="std-131-10-tbl-libc-soc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bindresvport</primary></indexterm>bindresvport<LINK LINKEND="std-131-10-tbl-libc-soc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getsockname</primary></indexterm>getsockname<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>recvmsg</primary></indexterm>recvmsg<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>shutdown</primary></indexterm>shutdown<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>connect</primary></indexterm>connect<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getsockopt</primary></indexterm>getsockopt<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>send</primary></indexterm>send<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>socket</primary></indexterm>socket<LINK LINKEND="std-131-67-tbl-libc-soc-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-soc-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-soc-ints">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for Socket Interface specified in <XREF linkend="tbl-libc-soc-depints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-soc-depints">
<TITLE>libc - Socket Interface Deprecated Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gethostbyname_r</primary></indexterm>gethostbyname_r<LINK LINKEND="std-131-10-tbl-libc-soc-depints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-soc-depints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Wide Characters -->
<SECT2>
<!--libgroup-->
<TITLE>Wide Characters</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Wide Characters</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Wide Characters specified in <XREF linkend="tbl-libc-wid-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-wid-ints">
<TITLE>libc - Wide Characters Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__wcstod_internal</primary></indexterm>__wcstod_internal<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbsinit</primary></indexterm>mbsinit<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vwscanf</primary></indexterm>vwscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsnlen</primary></indexterm>wcsnlen<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoumax</primary></indexterm>wcstoumax<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstof_internal</primary></indexterm>__wcstof_internal<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbsnrtowcs</primary></indexterm>mbsnrtowcs<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcpcpy</primary></indexterm>wcpcpy<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsnrtombs</primary></indexterm>wcsnrtombs<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstouq</primary></indexterm>wcstouq<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstol_internal</primary></indexterm>__wcstol_internal<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbsrtowcs</primary></indexterm>mbsrtowcs<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcpncpy</primary></indexterm>wcpncpy<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcspbrk</primary></indexterm>wcspbrk<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcswcs</primary></indexterm>wcswcs<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstold_internal</primary></indexterm>__wcstold_internal<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbstowcs</primary></indexterm>mbstowcs<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcrtomb</primary></indexterm>wcrtomb<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsrchr</primary></indexterm>wcsrchr<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcswidth</primary></indexterm>wcswidth<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstoul_internal</primary></indexterm>__wcstoul_internal<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbtowc</primary></indexterm>mbtowc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscasecmp</primary></indexterm>wcscasecmp<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsrtombs</primary></indexterm>wcsrtombs<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsxfrm</primary></indexterm>wcsxfrm<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>btowc</primary></indexterm>btowc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putwc</primary></indexterm>putwc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscat</primary></indexterm>wcscat<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsspn</primary></indexterm>wcsspn<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wctob</primary></indexterm>wctob<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetwc</primary></indexterm>fgetwc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>putwchar</primary></indexterm>putwchar<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcschr</primary></indexterm>wcschr<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsstr</primary></indexterm>wcsstr<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wctomb</primary></indexterm>wctomb<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetws</primary></indexterm>fgetws<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>swprintf</primary></indexterm>swprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscmp</primary></indexterm>wcscmp<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstod</primary></indexterm>wcstod<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wctrans</primary></indexterm>wctrans<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fputwc</primary></indexterm>fputwc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>swscanf</primary></indexterm>swscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscoll</primary></indexterm>wcscoll<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstof</primary></indexterm>wcstof<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wctype</primary></indexterm>wctype<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fputws</primary></indexterm>fputws<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>towctrans</primary></indexterm>towctrans<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscpy</primary></indexterm>wcscpy<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoimax</primary></indexterm>wcstoimax<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcwidth</primary></indexterm>wcwidth<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fwide</primary></indexterm>fwide<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>towlower</primary></indexterm>towlower<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscspn</primary></indexterm>wcscspn<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstok</primary></indexterm>wcstok<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemchr</primary></indexterm>wmemchr<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fwprintf</primary></indexterm>fwprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>towupper</primary></indexterm>towupper<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsdup</primary></indexterm>wcsdup<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstol</primary></indexterm>wcstol<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemcmp</primary></indexterm>wmemcmp<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fwscanf</primary></indexterm>fwscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ungetwc</primary></indexterm>ungetwc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsftime</primary></indexterm>wcsftime<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstold</primary></indexterm>wcstold<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemcpy</primary></indexterm>wmemcpy<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getwc</primary></indexterm>getwc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfwprintf</primary></indexterm>vfwprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcslen</primary></indexterm>wcslen<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoll</primary></indexterm>wcstoll<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemmove</primary></indexterm>wmemmove<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getwchar</primary></indexterm>getwchar<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfwscanf</primary></indexterm>vfwscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsncasecmp</primary></indexterm>wcsncasecmp<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstombs</primary></indexterm>wcstombs<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemset</primary></indexterm>wmemset<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mblen</primary></indexterm>mblen<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vswprintf</primary></indexterm>vswprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsncat</primary></indexterm>wcsncat<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoq</primary></indexterm>wcstoq<LINK LINKEND="std-131-10-tbl-libc-wid-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wprintf</primary></indexterm>wprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mbrlen</primary></indexterm>mbrlen<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vswscanf</primary></indexterm>vswscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsncmp</primary></indexterm>wcsncmp<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoul</primary></indexterm>wcstoul<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wscanf</primary></indexterm>wscanf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mbrtowc</primary></indexterm>mbrtowc<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>vwprintf</primary></indexterm>vwprintf<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsncpy</primary></indexterm>wcsncpy<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoull</primary></indexterm>wcstoull<LINK LINKEND="std-131-67-tbl-libc-wid-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-wid-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-wid-ints">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name String Functions -->
<SECT2>
<!--libgroup-->
<TITLE>String Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for String Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for String Functions specified in <XREF linkend="tbl-libc-str-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-str-ints">
<TITLE>libc - String Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__mempcpy</primary></indexterm>__mempcpy<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>bzero</primary></indexterm>bzero<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcasestr</primary></indexterm>strcasestr<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strncasecmp</primary></indexterm>strncasecmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoimax</primary></indexterm>strtoimax<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__rawmemchr</primary></indexterm>__rawmemchr<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ffs</primary></indexterm>ffs<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcat</primary></indexterm>strcat<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strncat</primary></indexterm>strncat<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtok</primary></indexterm>strtok<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__stpcpy</primary></indexterm>__stpcpy<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>index</primary></indexterm>index<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strchr</primary></indexterm>strchr<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strncmp</primary></indexterm>strncmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtok_r</primary></indexterm>strtok_r<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strdup</primary></indexterm>__strdup<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memccpy</primary></indexterm>memccpy<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcmp</primary></indexterm>strcmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strncpy</primary></indexterm>strncpy<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtold</primary></indexterm>strtold<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtod_internal</primary></indexterm>__strtod_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memchr</primary></indexterm>memchr<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcoll</primary></indexterm>strcoll<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strndup</primary></indexterm>strndup<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoll</primary></indexterm>strtoll<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtof_internal</primary></indexterm>__strtof_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memcmp</primary></indexterm>memcmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcpy</primary></indexterm>strcpy<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strnlen</primary></indexterm>strnlen<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoq</primary></indexterm>strtoq<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtok_r</primary></indexterm>__strtok_r<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memcpy</primary></indexterm>memcpy<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcspn</primary></indexterm>strcspn<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strpbrk</primary></indexterm>strpbrk<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoull</primary></indexterm>strtoull<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtol_internal</primary></indexterm>__strtol_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memmove</primary></indexterm>memmove<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strdup</primary></indexterm>strdup<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strptime</primary></indexterm>strptime<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoumax</primary></indexterm>strtoumax<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtold_internal</primary></indexterm>__strtold_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memrchr</primary></indexterm>memrchr<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strerror</primary></indexterm>strerror<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strrchr</primary></indexterm>strrchr<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtouq</primary></indexterm>strtouq<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtoll_internal</primary></indexterm>__strtoll_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>memset</primary></indexterm>memset<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strerror_r</primary></indexterm>strerror_r<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strsep</primary></indexterm>strsep<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strverscmp</primary></indexterm>strverscmp<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtoul_internal</primary></indexterm>__strtoul_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>rindex</primary></indexterm>rindex<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strfmon</primary></indexterm>strfmon<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strsignal</primary></indexterm>strsignal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strxfrm</primary></indexterm>strxfrm<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtoull_internal</primary></indexterm>__strtoull_internal<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>stpcpy</primary></indexterm>stpcpy<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strfry</primary></indexterm>strfry<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strspn</primary></indexterm>strspn<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>swab</primary></indexterm>swab<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bcmp</primary></indexterm>bcmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>stpncpy</primary></indexterm>stpncpy<LINK LINKEND="std-131-10-tbl-libc-str-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strftime</primary></indexterm>strftime<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strstr</primary></indexterm>strstr<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bcopy</primary></indexterm>bcopy<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcasecmp</primary></indexterm>strcasecmp<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strlen</primary></indexterm>strlen<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtof</primary></indexterm>strtof<LINK LINKEND="std-131-67-tbl-libc-str-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-str-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-str-ints">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name IPC Functions -->
<SECT2>
<!--libgroup-->
<TITLE>IPC Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for IPC Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for IPC Functions specified in <XREF linkend="tbl-libc-ipc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-ipc-ints">
<TITLE>libc - IPC Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>ftok</primary></indexterm>ftok<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>msgrcv</primary></indexterm>msgrcv<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>semget</primary></indexterm>semget<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>shmctl</primary></indexterm>shmctl<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>msgctl</primary></indexterm>msgctl<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>msgsnd</primary></indexterm>msgsnd<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>semop</primary></indexterm>semop<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>shmdt</primary></indexterm>shmdt<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>msgget</primary></indexterm>msgget<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>semctl</primary></indexterm>semctl<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>shmat</primary></indexterm>shmat<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>shmget</primary></indexterm>shmget<LINK LINKEND="std-131-67-tbl-libc-ipc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-ipc-ints">[1]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Regular Expressions -->
<SECT2>
<!--libgroup-->
<TITLE>Regular Expressions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Regular Expressions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Regular Expressions specified in <XREF linkend="tbl-libc-reg-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-reg-ints">
<TITLE>libc - Regular Expressions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>regcomp</primary></indexterm>regcomp<LINK LINKEND="std-131-67-tbl-libc-reg-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>regerror</primary></indexterm>regerror<LINK LINKEND="std-131-67-tbl-libc-reg-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>regexec</primary></indexterm>regexec<LINK LINKEND="std-131-67-tbl-libc-reg-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>regfree</primary></indexterm>regfree<LINK LINKEND="std-131-67-tbl-libc-reg-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-reg-ints">[1]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for Regular Expressions specified in <XREF linkend="tbl-libc-reg-depints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-reg-depints">
<TITLE>libc - Regular Expressions Deprecated Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>advance</primary></indexterm>advance<LINK LINKEND="std-131-5-tbl-libc-reg-depints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>re_comp</primary></indexterm>re_comp<LINK LINKEND="std-131-5-tbl-libc-reg-depints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>re_exec</primary></indexterm>re_exec<LINK LINKEND="std-131-5-tbl-libc-reg-depints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>step</primary></indexterm>step<LINK LINKEND="std-131-5-tbl-libc-reg-depints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-reg-depints">[1]</TITLE><para><XREF LINKEND=std.SUSv2></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic deprecated data interfaces
for Regular Expressions specified in <XREF linkend="tbl-libc-reg-ddata">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupddata-->
<TABLE id="tbl-libc-reg-ddata">
<TITLE>libc - Regular Expressions Deprecated Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>loc1</primary></indexterm>loc1<LINK LINKEND="std-131-5-tbl-libc-reg-ddata"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>loc2</primary></indexterm>loc2<LINK LINKEND="std-131-5-tbl-libc-reg-ddata"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>locs</primary></indexterm>locs<LINK LINKEND="std-131-5-tbl-libc-reg-ddata"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-reg-ddata">[1]</TITLE><para><XREF LINKEND=std.SUSv2></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Character Type Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Character Type Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Character Type Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Character Type Functions specified in <XREF linkend="tbl-libc-cha-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-cha-ints">
<TITLE>libc - Character Type Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__ctype_b_loc</primary></indexterm>__ctype_b_loc(GLIBC_2.3)<LINK LINKEND="std-131-10-tbl-libc-cha-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isalpha</primary></indexterm>isalpha<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ispunct</primary></indexterm>ispunct<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswctype</primary></indexterm>iswctype<LINK LINKEND="std-131-10-tbl-libc-cha-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswupper</primary></indexterm>iswupper<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__ctype_get_mb_cur_max</primary></indexterm>__ctype_get_mb_cur_max<LINK LINKEND="std-131-10-tbl-libc-cha-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isascii</primary></indexterm>isascii<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>isspace</primary></indexterm>isspace<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswdigit</primary></indexterm>iswdigit<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswxdigit</primary></indexterm>iswxdigit<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__ctype_tolower_loc</primary></indexterm>__ctype_tolower_loc(GLIBC_2.3)<LINK LINKEND="std-131-10-tbl-libc-cha-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>iscntrl</primary></indexterm>iscntrl<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>isupper</primary></indexterm>isupper<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswgraph</primary></indexterm>iswgraph<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>isxdigit</primary></indexterm>isxdigit<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__ctype_toupper_loc</primary></indexterm>__ctype_toupper_loc(GLIBC_2.3)<LINK LINKEND="std-131-10-tbl-libc-cha-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isdigit</primary></indexterm>isdigit<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswalnum</primary></indexterm>iswalnum<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswlower</primary></indexterm>iswlower<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>toascii</primary></indexterm>toascii<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_tolower</primary></indexterm>_tolower<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>isgraph</primary></indexterm>isgraph<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswalpha</primary></indexterm>iswalpha<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswprint</primary></indexterm>iswprint<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tolower</primary></indexterm>tolower<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_toupper</primary></indexterm>_toupper<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>islower</primary></indexterm>islower<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswblank</primary></indexterm>iswblank<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswpunct</primary></indexterm>iswpunct<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>toupper</primary></indexterm>toupper<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>isalnum</primary></indexterm>isalnum<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>isprint</primary></indexterm>isprint<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswcntrl</primary></indexterm>iswcntrl<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswspace</primary></indexterm>iswspace<LINK LINKEND="std-131-67-tbl-libc-cha-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-cha-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-cha-ints">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Time Manipulation -->
<SECT2>
<!--libgroup-->
<TITLE>Time Manipulation</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Time Manipulation</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Time Manipulation specified in <XREF linkend="tbl-libc-tim-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-tim-ints">
<TITLE>libc - Time Manipulation Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>adjtime</primary></indexterm>adjtime<LINK LINKEND="std-131-10-tbl-libc-tim-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctime</primary></indexterm>ctime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>gmtime</primary></indexterm>gmtime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>localtime_r</primary></indexterm>localtime_r<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ualarm</primary></indexterm>ualarm<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asctime</primary></indexterm>asctime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctime_r</primary></indexterm>ctime_r<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>gmtime_r</primary></indexterm>gmtime_r<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mktime</primary></indexterm>mktime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asctime_r</primary></indexterm>asctime_r<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>difftime</primary></indexterm>difftime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>localtime</primary></indexterm>localtime<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tzset</primary></indexterm>tzset<LINK LINKEND="std-131-67-tbl-libc-tim-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-tim-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-tim-ints">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic deprecated functions
for Time Manipulation specified in <XREF linkend="tbl-libc-tim-depints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-tim-depints">
<TITLE>libc - Time Manipulation Deprecated Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>adjtimex</primary></indexterm>adjtimex<LINK LINKEND="std-131-10-tbl-libc-tim-depints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-tim-depints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Time Manipulation specified in <XREF linkend="tbl-libc-tim-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-tim-data">
<TITLE>libc - Time Manipulation Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__daylight</primary></indexterm>__daylight<LINK LINKEND="std-131-10-tbl-libc-tim-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>__tzname</primary></indexterm>__tzname<LINK LINKEND="std-131-10-tbl-libc-tim-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>timezone</primary></indexterm>timezone<LINK LINKEND="std-131-67-tbl-libc-tim-data"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__timezone</primary></indexterm>__timezone<LINK LINKEND="std-131-10-tbl-libc-tim-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>daylight</primary></indexterm>daylight<LINK LINKEND="std-131-67-tbl-libc-tim-data"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tzname</primary></indexterm>tzname<LINK LINKEND="std-131-67-tbl-libc-tim-data"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-tim-data">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-tim-data">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Terminal Interface Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Terminal Interface Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Terminal Interface Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Terminal Interface Functions specified in <XREF linkend="tbl-libc-ter-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-ter-ints">
<TITLE>libc - Terminal Interface Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>cfgetispeed</primary></indexterm>cfgetispeed<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cfsetispeed</primary></indexterm>cfsetispeed<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcdrain</primary></indexterm>tcdrain<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcgetattr</primary></indexterm>tcgetattr<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcsendbreak</primary></indexterm>tcsendbreak<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cfgetospeed</primary></indexterm>cfgetospeed<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cfsetospeed</primary></indexterm>cfsetospeed<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcflow</primary></indexterm>tcflow<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcgetpgrp</primary></indexterm>tcgetpgrp<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcsetattr</primary></indexterm>tcsetattr<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cfmakeraw</primary></indexterm>cfmakeraw<LINK LINKEND="std-131-10-tbl-libc-ter-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>cfsetspeed</primary></indexterm>cfsetspeed<LINK LINKEND="std-131-10-tbl-libc-ter-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcflush</primary></indexterm>tcflush<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcgetsid</primary></indexterm>tcgetsid<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcsetpgrp</primary></indexterm>tcsetpgrp<LINK LINKEND="std-131-67-tbl-libc-ter-ints"> [1]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-ter-ints">[1]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-ter-ints">[2]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name System Database Interface -->
<SECT2>
<!--libgroup-->
<TITLE>System Database Interface</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for System Database Interface</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for System Database Interface specified in <XREF linkend="tbl-libc-syt-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-syt-ints">
<TITLE>libc - System Database Interface Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>endgrent</primary></indexterm>endgrent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrgid</primary></indexterm>getgrgid<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getprotobynumber</primary></indexterm>getprotobynumber<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getservbyport</primary></indexterm>getservbyport<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setgrent</primary></indexterm>setgrent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endnetent</primary></indexterm>endnetent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrgid_r</primary></indexterm>getgrgid_r<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getprotoent</primary></indexterm>getprotoent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getservent</primary></indexterm>getservent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setgroups</primary></indexterm>setgroups<LINK LINKEND="std-131-10-tbl-libc-syt-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endprotoent</primary></indexterm>endprotoent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrnam</primary></indexterm>getgrnam<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwent</primary></indexterm>getpwent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutent</primary></indexterm>getutent<LINK LINKEND="std-131-10-tbl-libc-syt-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setnetent</primary></indexterm>setnetent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endpwent</primary></indexterm>endpwent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrnam_r</primary></indexterm>getgrnam_r<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwnam</primary></indexterm>getpwnam<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutent_r</primary></indexterm>getutent_r<LINK LINKEND="std-131-10-tbl-libc-syt-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>setprotoent</primary></indexterm>setprotoent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endservent</primary></indexterm>endservent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyaddr</primary></indexterm>gethostbyaddr<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwnam_r</primary></indexterm>getpwnam_r<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutxent</primary></indexterm>getutxent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setpwent</primary></indexterm>setpwent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endutent</primary></indexterm>endutent<LINK LINKEND="std-131-5-tbl-libc-syt-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyname</primary></indexterm>gethostbyname<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwuid</primary></indexterm>getpwuid<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutxid</primary></indexterm>getutxid<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setservent</primary></indexterm>setservent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endutxent</primary></indexterm>endutxent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getnetbyaddr</primary></indexterm>getnetbyaddr<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwuid_r</primary></indexterm>getpwuid_r<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutxline</primary></indexterm>getutxline<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setutent</primary></indexterm>setutent<LINK LINKEND="std-131-10-tbl-libc-syt-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getgrent</primary></indexterm>getgrent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getprotobyname</primary></indexterm>getprotobyname<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getservbyname</primary></indexterm>getservbyname<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pututxline</primary></indexterm>pututxline<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setutxent</primary></indexterm>setutxent<LINK LINKEND="std-131-67-tbl-libc-syt-ints"> [1]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-syt-ints">[1]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-syt-ints">[2]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-syt-ints">[3]</TITLE><para><XREF LINKEND=std.SUSv2></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Language Support -->
<SECT2>
<!--libgroup-->
<TITLE>Language Support</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Language Support</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Language Support specified in <XREF linkend="tbl-libc-lan-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-lan-ints">
<TITLE>libc - Language Support Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__libc_start_main</primary></indexterm>__libc_start_main<LINK LINKEND="std-131-10-tbl-libc-lan-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>__register_atfork</primary></indexterm>__register_atfork(GLIBC_2.3.2)<LINK LINKEND="std-131-10-tbl-libc-lan-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_obstack_begin</primary></indexterm>_obstack_begin<LINK LINKEND="std-131-10-tbl-libc-lan-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_obstack_newchunk</primary></indexterm>_obstack_newchunk<LINK LINKEND="std-131-10-tbl-libc-lan-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>obstack_free</primary></indexterm>obstack_free<LINK LINKEND="std-131-10-tbl-libc-lan-ints"> [1]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-lan-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Large File Support -->
<SECT2>
<!--libgroup-->
<TITLE>Large File Support</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Large File Support</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Large File Support specified in <XREF linkend="tbl-libc-lar-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-lar-ints">
<TITLE>libc - Large File Support Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__fxstat64</primary></indexterm>__fxstat64<LINK LINKEND="std-131-10-tbl-libc-lar-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fopen64</primary></indexterm>fopen64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftello64</primary></indexterm>ftello64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lseek64</primary></indexterm>lseek64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>readdir64</primary></indexterm>readdir64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__lxstat64</primary></indexterm>__lxstat64<LINK LINKEND="std-131-10-tbl-libc-lar-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>freopen64</primary></indexterm>freopen64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftruncate64</primary></indexterm>ftruncate64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mkstemp64</primary></indexterm>mkstemp64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>statvfs64</primary></indexterm>statvfs64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xstat64</primary></indexterm>__xstat64<LINK LINKEND="std-131-10-tbl-libc-lar-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fseeko64</primary></indexterm>fseeko64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftw64</primary></indexterm>ftw64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>mmap64</primary></indexterm>mmap64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>tmpfile64</primary></indexterm>tmpfile64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>creat64</primary></indexterm>creat64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fsetpos64</primary></indexterm>fsetpos64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getrlimit64</primary></indexterm>getrlimit64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nftw64</primary></indexterm>nftw64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>truncate64</primary></indexterm>truncate64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetpos64</primary></indexterm>fgetpos64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fstatvfs64</primary></indexterm>fstatvfs64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lockf64</primary></indexterm>lockf64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>open64</primary></indexterm>open64<LINK LINKEND="std-131-35-tbl-libc-lar-ints"> [2]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-lar-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-35-tbl-libc-lar-ints">[2]</TITLE><para><XREF LINKEND=std.LFS></para></FORMALPARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Standard Library -->
<SECT2>
<!--libgroup-->
<TITLE>Standard Library</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Standard Library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Standard Library specified in <XREF linkend="tbl-libc-stb-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-stb-ints">
<TITLE>libc - Standard Library Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_Exit</primary></indexterm>_Exit<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>dirname</primary></indexterm>dirname<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>glob</primary></indexterm>glob<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lsearch</primary></indexterm>lsearch<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>srand</primary></indexterm>srand<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__assert_fail</primary></indexterm>__assert_fail<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>div</primary></indexterm>div<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>glob64</primary></indexterm>glob64<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>makecontext</primary></indexterm>makecontext<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>srand48</primary></indexterm>srand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__cxa_atexit</primary></indexterm>__cxa_atexit<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>drand48</primary></indexterm>drand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>globfree</primary></indexterm>globfree<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>malloc</primary></indexterm>malloc<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>srandom</primary></indexterm>srandom<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__errno_location</primary></indexterm>__errno_location<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ecvt</primary></indexterm>ecvt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>globfree64</primary></indexterm>globfree64<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>memmem</primary></indexterm>memmem<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtod</primary></indexterm>strtod<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__fpending</primary></indexterm>__fpending<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>erand48</primary></indexterm>erand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>grantpt</primary></indexterm>grantpt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mkstemp</primary></indexterm>mkstemp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtol</primary></indexterm>strtol<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__getpagesize</primary></indexterm>__getpagesize<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>err</primary></indexterm>err<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>hcreate</primary></indexterm>hcreate<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mktemp</primary></indexterm>mktemp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoul</primary></indexterm>strtoul<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isinf</primary></indexterm>__isinf<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>error</primary></indexterm>error<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>hdestroy</primary></indexterm>hdestroy<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>mrand48</primary></indexterm>mrand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>swapcontext</primary></indexterm>swapcontext<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isinff</primary></indexterm>__isinff<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>errx</primary></indexterm>errx<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>hsearch</primary></indexterm>hsearch<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nftw</primary></indexterm>nftw<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>syslog</primary></indexterm>syslog<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isinfl</primary></indexterm>__isinfl<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fcvt</primary></indexterm>fcvt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>htonl</primary></indexterm>htonl<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nrand48</primary></indexterm>nrand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>system</primary></indexterm>system<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isnan</primary></indexterm>__isnan<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmtmsg</primary></indexterm>fmtmsg<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>htons</primary></indexterm>htons<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ntohl</primary></indexterm>ntohl<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tdelete</primary></indexterm>tdelete<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isnanf</primary></indexterm>__isnanf<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fnmatch</primary></indexterm>fnmatch<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>imaxabs</primary></indexterm>imaxabs<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ntohs</primary></indexterm>ntohs<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tfind</primary></indexterm>tfind<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isnanl</primary></indexterm>__isnanl<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fpathconf</primary></indexterm>fpathconf<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>imaxdiv</primary></indexterm>imaxdiv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>openlog</primary></indexterm>openlog<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tmpfile</primary></indexterm>tmpfile<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__sysconf</primary></indexterm>__sysconf<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>free</primary></indexterm>free<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_addr</primary></indexterm>inet_addr<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>perror</primary></indexterm>perror<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tmpnam</primary></indexterm>tmpnam<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_exit</primary></indexterm>_exit<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>freeaddrinfo</primary></indexterm>freeaddrinfo<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_ntoa</primary></indexterm>inet_ntoa<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_memalign</primary></indexterm>posix_memalign<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tsearch</primary></indexterm>tsearch<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_longjmp</primary></indexterm>_longjmp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftrylockfile</primary></indexterm>ftrylockfile<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_ntop</primary></indexterm>inet_ntop<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ptsname</primary></indexterm>ptsname<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ttyname</primary></indexterm>ttyname<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_setjmp</primary></indexterm>_setjmp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftw</primary></indexterm>ftw<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_pton</primary></indexterm>inet_pton<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>putenv</primary></indexterm>putenv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ttyname_r</primary></indexterm>ttyname_r<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>a64l</primary></indexterm>a64l<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>funlockfile</primary></indexterm>funlockfile<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>initstate</primary></indexterm>initstate<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>qsort</primary></indexterm>qsort<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>twalk</primary></indexterm>twalk<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>abort</primary></indexterm>abort<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gai_strerror</primary></indexterm>gai_strerror<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>insque</primary></indexterm>insque<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>rand</primary></indexterm>rand<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>unlockpt</primary></indexterm>unlockpt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>abs</primary></indexterm>abs<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gcvt</primary></indexterm>gcvt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isatty</primary></indexterm>isatty<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>rand_r</primary></indexterm>rand_r<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>unsetenv</primary></indexterm>unsetenv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atof</primary></indexterm>atof<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getaddrinfo</primary></indexterm>getaddrinfo<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>isblank</primary></indexterm>isblank<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>random</primary></indexterm>random<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>usleep</primary></indexterm>usleep<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atoi</primary></indexterm>atoi<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getcwd</primary></indexterm>getcwd<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>jrand48</primary></indexterm>jrand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>random_r</primary></indexterm>random_r<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>verrx</primary></indexterm>verrx<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atol</primary></indexterm>atol<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getdate</primary></indexterm>getdate<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>l64a</primary></indexterm>l64a<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>realloc</primary></indexterm>realloc<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfscanf</primary></indexterm>vfscanf<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atoll</primary></indexterm>atoll<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getenv</primary></indexterm>getenv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>labs</primary></indexterm>labs<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>realpath</primary></indexterm>realpath<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>vscanf</primary></indexterm>vscanf<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basename</primary></indexterm>basename<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getlogin</primary></indexterm>getlogin<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lcong48</primary></indexterm>lcong48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>remque</primary></indexterm>remque<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>vsscanf</primary></indexterm>vsscanf<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bsearch</primary></indexterm>bsearch<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getnameinfo</primary></indexterm>getnameinfo<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ldiv</primary></indexterm>ldiv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>seed48</primary></indexterm>seed48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>vsyslog</primary></indexterm>vsyslog<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>calloc</primary></indexterm>calloc<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getopt</primary></indexterm>getopt<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lfind</primary></indexterm>lfind<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setenv</primary></indexterm>setenv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>warn</primary></indexterm>warn<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>closelog</primary></indexterm>closelog<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getopt_long</primary></indexterm>getopt_long<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>llabs</primary></indexterm>llabs<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sethostid</primary></indexterm>sethostid<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>warnx</primary></indexterm>warnx<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>confstr</primary></indexterm>confstr<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getopt_long_only</primary></indexterm>getopt_long_only<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>lldiv</primary></indexterm>lldiv<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sethostname</primary></indexterm>sethostname<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>wordexp</primary></indexterm>wordexp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cuserid</primary></indexterm>cuserid<LINK LINKEND="std-131-5-tbl-libc-stb-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>getsubopt</primary></indexterm>getsubopt<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>longjmp</primary></indexterm>longjmp<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setlogmask</primary></indexterm>setlogmask<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>wordfree</primary></indexterm>wordfree<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>daemon</primary></indexterm>daemon<LINK LINKEND="std-131-10-tbl-libc-stb-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>gettimeofday</primary></indexterm>gettimeofday<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lrand48</primary></indexterm>lrand48<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setstate</primary></indexterm>setstate<LINK LINKEND="std-131-67-tbl-libc-stb-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-stb-ints">[1]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-stb-ints">[2]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-5-tbl-libc-stb-ints">[3]</TITLE><para><XREF LINKEND=std.SUSv2></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Standard Library specified in <XREF linkend="tbl-libc-stb-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-stb-data">
<TITLE>libc - Standard Library Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__environ</primary></indexterm>__environ<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>_sys_errlist</primary></indexterm>_sys_errlist<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>getdate_err</primary></indexterm>getdate_err<LINK LINKEND="std-131-67-tbl-libc-stb-data"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>opterr</primary></indexterm>opterr<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>optopt</primary></indexterm>optopt<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_environ</primary></indexterm>_environ<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>environ</primary></indexterm>environ<LINK LINKEND="std-131-67-tbl-libc-stb-data"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>optarg</primary></indexterm>optarg<LINK LINKEND="std-131-67-tbl-libc-stb-data"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>optind</primary></indexterm>optind<LINK LINKEND="std-131-10-tbl-libc-stb-data"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-131-10-tbl-libc-stb-data">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-131-67-tbl-libc-stb-data">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<!-- empty header file All/arpa/inet.h -->
<SECT1 ID=libc-ddefs>
<TITLE>Data Definitions for libc</TITLE>
<PARA>
This section defines global identifiers and their values that are associated with interfaces contained in libc.
These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
These definitions are intended to supplement those provided in the referenced underlying specifications.
</PARA>
<PARA>
This specification uses ISO/IEC 9899 C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>assert.h</TITLE>
<PARA>
The <filename>assert.h</filename> header shall define the
<function>assert</function> macro. It refers to the macro
<constant>NDEBUG</constant>, which is not defined in this
header.
If <constant>NDEBUG</constant> is defined before the inclusion of
this header, the <function>assert</function> macro shall be defined
as described below, otherwise the macro shall behave as described
in <function>assert</function> in ISO/IEC 9945 POSIX.
</PARA>
<SCREEN>

#define assert(expr)	((void)0)
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ctype.h</TITLE>
<PARA>
</PARA>
<SCREEN>

enum
{
  _ISupper, _ISlower, _ISalpha, _ISdigit, _ISxdigit, _ISspace, _ISprint,
    _ISgraph, _ISblank, _IScntrl, _ISpunct, _ISalnum
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>dirent.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct __dirstream DIR;

struct dirent
{
  long d_ino;
  off_t d_off;
  unsigned short d_reclen;
  unsigned char d_type;
  char d_name[256];
}
 ;
struct dirent64
{
  uint64_t d_ino;
  int64_t d_off;
  unsigned short d_reclen;
  unsigned char d_type;
  char d_name[256];
}
 ;
</SCREEN>
</SECT2>
<!-- empty header file All/endian.h -->
<SECT2>
<TITLE>errno.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define errno	(*__errno_location())

#define EPERM	1
#define ECHILD	10
#define ENETDOWN	100
#define ENETUNREACH	101
#define ENETRESET	102
#define ECONNABORTED	103
#define ECONNRESET	104
#define ENOBUFS	105
#define EISCONN	106
#define ENOTCONN	107
#define ESHUTDOWN	108
#define ETOOMANYREFS	109
#define EAGAIN	11
#define ETIMEDOUT	110
#define ECONNREFUSED	111
#define EHOSTDOWN	112
#define EHOSTUNREACH	113
#define EALREADY	114
#define EINPROGRESS	115
#define ESTALE	116
#define EUCLEAN	117
#define ENOTNAM	118
#define ENAVAIL	119
#define ENOMEM	12
#define EISNAM	120
#define EREMOTEIO	121
#define EDQUOT	122
#define ENOMEDIUM	123
#define EMEDIUMTYPE	124
#define ECANCELED	125
#define EACCES	13
#define EFAULT	14
#define ENOTBLK	15
#define EBUSY	16
#define EEXIST	17
#define EXDEV	18
#define ENODEV	19
#define ENOENT	2
#define ENOTDIR	20
#define EISDIR	21
#define EINVAL	22
#define ENFILE	23
#define EMFILE	24
#define ENOTTY	25
#define ETXTBSY	26
#define EFBIG	27
#define ENOSPC	28
#define ESPIPE	29
#define ESRCH	3
#define EROFS	30
#define EMLINK	31
#define EPIPE	32
#define EDOM	33
#define ERANGE	34
#define EDEADLK	35
#define ENAMETOOLONG	36
#define ENOLCK	37
#define ENOSYS	38
#define ENOTEMPTY	39
#define EINTR	4
#define ELOOP	40
#define ENOMSG	42
#define EIDRM	43
#define ECHRNG	44
#define EL2NSYNC	45
#define EL3HLT	46
#define EL3RST	47
#define ELNRNG	48
#define EUNATCH	49
#define EIO	5
#define ENOANO	55
#define EBADRQC	56
#define EBADSLT	57
#define EBFONT	59
#define ENXIO	6
#define ENOSTR	60
#define ENODATA	61
#define ETIME	62
#define ENOSR	63
#define ENONET	64
#define ENOPKG	65
#define EREMOTE	66
#define ENOLINK	67
#define EADV	68
#define ESRMNT	69
#define E2BIG	7
#define ECOMM	70
#define EPROTO	71
#define EMULTIHOP	72
#define EDOTDOT	73
#define EBADMSG	74
#define EOVERFLOW	75
#define ENOTUNIQ	76
#define EBADFD	77
#define EREMCHG	78
#define ELIBACC	79
#define ENOEXEC	8
#define ELIBBAD	80
#define ELIBSCN	81
#define ELIBMAX	82
#define ELIBEXEC	83
#define EILSEQ	84
#define ERESTART	85
#define ESTRPIPE	86
#define EUSERS	87
#define ENOTSOCK	88
#define EDESTADDRREQ	89
#define EBADF	9
#define EMSGSIZE	90
#define EPROTOTYPE	91
#define ENOPROTOOPT	92
#define EPROTONOSUPPORT	93
#define ESOCKTNOSUPPORT	94
#define EOPNOTSUPP	95
#define EPFNOSUPPORT	96
#define EAFNOSUPPORT	97
#define EADDRINUSE	98
#define EADDRNOTAVAIL	99
#define EWOULDBLOCK	EAGAIN
#define ENOTSUP	EOPNOTSUPP
</SCREEN>
</SECT2>
<SECT2>
<TITLE>fcntl.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define O_RDONLY	00
#define O_ACCMODE	0003
#define O_WRONLY	01
#define O_CREAT	0100
#define O_TRUNC	01000
#define O_SYNC	010000
#define O_RDWR	02
#define O_EXCL	0200
#define O_APPEND	02000
#define O_ASYNC	020000
#define O_NOCTTY	0400
#define O_NDELAY	04000
#define O_NONBLOCK	04000
#define FD_CLOEXEC	1

struct flock
{
  short l_type;
  short l_whence;
  off_t l_start;
  off_t l_len;
  pid_t l_pid;
}
 ;
struct flock64
{
  short l_type;
  short l_whence;
  loff_t l_start;
  loff_t l_len;
  pid_t l_pid;
}
 ;

#define F_DUPFD	0
#define F_RDLCK	0
#define F_GETFD	1
#define F_WRLCK	1
#define F_SETFD	2
#define F_UNLCK	2
#define F_GETFL	3
#define F_SETFL	4
#define F_GETLK	5
#define F_SETLK	6
#define F_SETLKW	7
#define F_SETOWN	8
#define F_GETOWN	9
</SCREEN>
</SECT2>
<!-- missing header file All/features.h -->
<SECT2>
<TITLE>fmtmsg.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define MM_HARD	1
#define MM_NRECOV	128
#define MM_UTIL	16
#define MM_SOFT	2
#define MM_OPSYS	32
#define MM_FIRM	4
#define MM_RECOVER	64
#define MM_APPL	8

#define MM_NOSEV	0
#define MM_HALT	1
#define MM_ERROR	2

#define MM_NULLLBL	((char *) 0)
</SCREEN>
</SECT2>
<SECT2>
<TITLE>fnmatch.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FNM_PATHNAME	(1&lt;&lt;0)
#define FNM_NOESCAPE	(1&lt;&lt;1)
#define FNM_PERIOD	(1&lt;&lt;2)
#define FNM_NOMATCH	1
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ftw.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FTW_D	FTW_D
#define FTW_DNR	FTW_DNR
#define FTW_DP	FTW_DP
#define FTW_F	FTW_F
#define FTW_NS	FTW_NS
#define FTW_SL	FTW_SL
#define FTW_SLN	FTW_SLN

enum
{
  FTW_F, FTW_D, FTW_DNR, FTW_NS, FTW_SL, FTW_DP, FTW_SLN
}
 ;

enum
{
  FTW_PHYS, FTW_MOUNT, FTW_CHDIR, FTW_DEPTH
}
 ;

struct FTW
{
  int base;
  int level;
}
 ;

typedef int (*__ftw_func_t) (char *__filename, struct stat * __status,
			     int __flag);
typedef int (*__ftw64_func_t) (char *__filename, struct stat64 * __status,
			       int __flag);
typedef int (*__nftw_func_t) (char *__filename, struct stat * __status,
			      int __flag, struct FTW * __info);
typedef int (*__nftw64_func_t) (char *__filename, struct stat64 * __status,
				int __flag, struct FTW * __info);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>getopt.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define no_argument	0
#define required_argument	1
#define optional_argument	2

struct option
{
  char *name;
  int has_arg;
  int *flag;
  int val;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glob.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define GLOB_ERR	(1&lt;&lt;0)
#define GLOB_MARK	(1&lt;&lt;1)
#define GLOB_BRACE	(1&lt;&lt;10)
#define GLOB_NOMAGIC	(1&lt;&lt;11)
#define GLOB_TILDE	(1&lt;&lt;12)
#define GLOB_ONLYDIR	(1&lt;&lt;13)
#define GLOB_TILDE_CHECK	(1&lt;&lt;14)
#define GLOB_NOSORT	(1&lt;&lt;2)
#define GLOB_DOOFFS	(1&lt;&lt;3)
#define GLOB_NOCHECK	(1&lt;&lt;4)
#define GLOB_APPEND	(1&lt;&lt;5)
#define GLOB_NOESCAPE	(1&lt;&lt;6)
#define GLOB_PERIOD	(1&lt;&lt;7)
#define GLOB_MAGCHAR	(1&lt;&lt;8)
#define GLOB_ALTDIRFUNC	(1&lt;&lt;9)

#define GLOB_NOSPACE	1
#define GLOB_ABORTED	2
#define GLOB_NOMATCH	3
#define GLOB_NOSYS	4

typedef struct
{
  size_t gl_pathc;
  char **gl_pathv;
  size_t gl_offs;
  int gl_flags;
  void (*gl_closedir) (void *);
  struct dirent *(*gl_readdir) (void *);
  void *(*gl_opendir) (const char *);
  int (*gl_lstat) (const char *, struct stat *);
  int (*gl_stat) (const char *, struct stat *);
}
glob_t;

typedef struct
{
  size_t gl_pathc;
  char **gl_pathv;
  size_t gl_offs;
  int gl_flags;
  void (*gl_closedir) (void *);
  struct dirent64 *(*gl_readdir64) (void *);
  void *(*gl_opendir) (const char *);
  int (*gl_lstat) (const char *, struct stat *);
  int (*gl_stat) (const char *, struct stat *);
}
glob64_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>grp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct group
{
  char *gr_name;
  char *gr_passwd;
  gid_t gr_gid;
  char **gr_mem;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>iconv.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef void *iconv_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>inttypes.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef lldiv_t imaxdiv_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>langinfo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ABDAY_1	0x20000
#define ABDAY_2	0x20001
#define ABDAY_3	0x20002
#define ABDAY_4	0x20003
#define ABDAY_5	0x20004
#define ABDAY_6	0x20005
#define ABDAY_7	0x20006

#define DAY_1	0x20007
#define DAY_2	0x20008
#define DAY_3	0x20009
#define DAY_4	0x2000A
#define DAY_5	0x2000B
#define DAY_6	0x2000C
#define DAY_7	0x2000D

#define ABMON_1	0x2000E
#define ABMON_2	0x2000F
#define ABMON_3	0x20010
#define ABMON_4	0x20011
#define ABMON_5	0x20012
#define ABMON_6	0x20013
#define ABMON_7	0x20014
#define ABMON_8	0x20015
#define ABMON_9	0x20016
#define ABMON_10	0x20017
#define ABMON_11	0x20018
#define ABMON_12	0x20019

#define MON_1	0x2001A
#define MON_2	0x2001B
#define MON_3	0x2001C
#define MON_4	0x2001D
#define MON_5	0x2001E
#define MON_6	0x2001F
#define MON_7	0x20020
#define MON_8	0x20021
#define MON_9	0x20022
#define MON_10	0x20023
#define MON_11	0x20024
#define MON_12	0x20025

#define AM_STR	0x20026
#define PM_STR	0x20027

#define D_T_FMT	0x20028
#define D_FMT	0x20029
#define T_FMT	0x2002A
#define T_FMT_AMPM	0x2002B

#define ERA	0x2002C
#define ERA_D_FMT	0x2002E
#define ALT_DIGITS	0x2002F
#define ERA_D_T_FMT	0x20030
#define ERA_T_FMT	0x20031

#define CODESET	14

#define CRNCYSTR	0x4000F

#define RADIXCHAR	0x10000
#define THOUSEP	0x10001
#define YESEXPR	0x50000
#define NOEXPR	0x50001
#define YESSTR	0x50002
#define NOSTR	0x50003
</SCREEN>
</SECT2>
<!-- empty header file All/libgen.h -->
<!-- empty header file All/libintl.h -->
<SECT2>
<TITLE>limits.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define LLONG_MIN	(-LLONG_MAX-1LL)
#define ULLONG_MAX	18446744073709551615ULL
#define OPEN_MAX	256
#define PATH_MAX	4096
#define LLONG_MAX	9223372036854775807LL
#define SSIZE_MAX	LONG_MAX

#define MB_LEN_MAX	16

#define SCHAR_MIN	(-128)
#define SCHAR_MAX	127
#define UCHAR_MAX	255
#define CHAR_BIT	8

#define SHRT_MIN	(-32768)
#define SHRT_MAX	32767
#define USHRT_MAX	65535

#define INT_MIN	(-INT_MAX-1)
#define INT_MAX	2147483647
#define __INT_MAX__	2147483647
#define UINT_MAX	4294967295U

#define LONG_MIN	(-LONG_MAX-1L)
</SCREEN>
</SECT2>
<SECT2>
<TITLE>locale.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define LC_CTYPE	0
#define LC_NUMERIC	1
#define LC_TELEPHONE	10
#define LC_MEASUREMENT	11
#define LC_IDENTIFICATION	12
#define LC_TIME	2
#define LC_COLLATE	3
#define LC_MONETARY	4
#define LC_MESSAGES	5
#define LC_ALL	6
#define LC_PAPER	7
#define LC_NAME	8
#define LC_ADDRESS	9

struct lconv
{
  char *decimal_point;
  char *thousands_sep;
  char *grouping;
  char *int_curr_symbol;
  char *currency_symbol;
  char *mon_decimal_point;
  char *mon_thousands_sep;
  char *mon_grouping;
  char *positive_sign;
  char *negative_sign;
  char int_frac_digits;
  char frac_digits;
  char p_cs_precedes;
  char p_sep_by_space;
  char n_cs_precedes;
  char n_sep_by_space;
  char p_sign_posn;
  char n_sign_posn;
  char int_p_cs_precedes;
  char int_p_sep_by_space;
  char int_n_cs_precedes;
  char int_n_sep_by_space;
  char int_p_sign_posn;
  char int_n_sign_posn;
}
 ;

typedef struct __locale_struct
{
  struct locale_data *__locales[13];
  const unsigned short *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;
  const char *__names[13];
}
 *__locale_t;
</SCREEN>
</SECT2>
<!-- empty header file All/malloc.h -->
<!-- empty header file All/monetary.h -->
<!-- empty header file All/mqueue.h -->
<SECT2>
<TITLE>net/if.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define IF_NAMESIZE	16

#define IFF_UP	0x01
#define IFF_BROADCAST	0x02
#define IFF_DEBUG	0x04
#define IFF_LOOPBACK	0x08
#define IFF_POINTOPOINT	0x10
#define IFF_PROMISC	0x100
#define IFF_MULTICAST	0x1000
#define IFF_NOTRAILERS	0x20
#define IFF_RUNNING	0x40
#define IFF_NOARP	0x80

struct ifaddr
{
  struct sockaddr ifa_addr;
  union
  {
    struct sockaddr ifu_broadaddr;
    struct sockaddr ifu_dstaddr;
  }
  ifa_ifu;
  void *ifa_ifp;
  void *ifa_next;
}
 ;
#define IFNAMSIZ	IF_NAMESIZE

struct ifreq
{
  union
  {
    char ifrn_name[IFNAMSIZ];
  }
  ifr_ifrn;
  union
  {
    struct sockaddr ifru_addr;
    struct sockaddr ifru_dstaddr;
    struct sockaddr ifru_broadaddr;
    struct sockaddr ifru_netmask;
    struct sockaddr ifru_hwaddr;
    short ifru_flags;
    int ifru_ivalue;
    int ifru_mtu;
    char ifru_slave[IFNAMSIZ];
    char ifru_newname[IFNAMSIZ];
    caddr_t ifru_data;
    struct ifmap ifru_map;
  }
  ifr_ifru;
}
 ;

struct ifconf
{
  int ifc_len;
  union
  {
    caddr_t ifcu_buf;
    struct ifreq *ifcu_req;
  }
  ifc_ifcu;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netdb.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define h_errno	(*__h_errno_location ())
#define NETDB_INTERNAL	-1
#define NETDB_SUCCESS	0
#define HOST_NOT_FOUND	1
#define IPPORT_RESERVED	1024
#define NI_MAXHOST	1025
#define TRY_AGAIN	2
#define NO_RECOVERY	3
#define NI_MAXSERV	32
#define NO_DATA	4
#define h_addr	h_addr_list[0]
#define NO_ADDRESS	NO_DATA

struct servent
{
  char *s_name;
  char **s_aliases;
  int s_port;
  char *s_proto;
}
 ;
struct hostent
{
  char *h_name;
  char **h_aliases;
  int h_addrtype;
  int h_length;
  char **h_addr_list;
}
 ;
struct protoent
{
  char *p_name;
  char **p_aliases;
  int p_proto;
}
 ;
struct netent
{
  char *n_name;
  char **n_aliases;
  int n_addrtype;
  unsigned int n_net;
}
 ;
#define AI_PASSIVE	0x0001
#define AI_CANONNAME	0x0002
#define AI_NUMERICHOST	0x0004

struct addrinfo
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  socklen_t ai_addrlen;
  struct sockaddr *ai_addr;
  char *ai_canonname;
  struct addrinfo *ai_next;
}
 ;
#define NI_NUMERICHOST	1
#define NI_DGRAM	16
#define NI_NUMERICSERV	2
#define NI_NOFQDN	4
#define NI_NAMEREQD	8

#define EAI_BADFLAGS	-1
#define EAI_MEMORY	-10
#define EAI_SYSTEM	-11
#define EAI_NONAME	-2
#define EAI_AGAIN	-3
#define EAI_FAIL	-4
#define EAI_NODATA	-5
#define EAI_FAMILY	-6
#define EAI_SOCKTYPE	-7
#define EAI_SERVICE	-8
#define EAI_ADDRFAMILY	-9
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/in.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define IPPROTO_IP	0
#define IPPROTO_ICMP	1
#define IPPROTO_UDP	17
#define IPPROTO_IGMP	2
#define IPPROTO_RAW	255
#define IPPROTO_IPV6	41
#define IPPROTO_ICMPV6	58
#define IPPROTO_TCP	6

typedef uint16_t in_port_t;

struct in_addr
{
  uint32_t s_addr;
}
 ;
typedef uint32_t in_addr_t;
#define INADDR_NONE	((in_addr_t) 0xffffffff)
#define INADDR_BROADCAST	(0xffffffff)
#define INADDR_ANY	0

struct in6_addr
{
  union
  {
    uint8_t u6_addr8[16];
    uint16_t u6_addr16[8];
    uint32_t u6_addr32[4];
  }
  in6_u;
}
 ;
#define IN6ADDR_ANY_INIT	{ { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }
#define IN6ADDR_LOOPBACK_INIT	{ { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

#define INET_ADDRSTRLEN	16

struct sockaddr_in
{
  sa_family_t sin_family;
  unsigned short sin_port;
  struct in_addr sin_addr;
  unsigned char sin_zero[8];
}
 ;
#define INET6_ADDRSTRLEN	46

struct sockaddr_in6
{
  unsigned short sin6_family;
  uint16_t sin6_port;
  uint32_t sin6_flowinfo;
  struct in6_addr sin6_addr;
  uint32_t sin6_scope_id;
}
 ;
#define SOL_IP	0
#define IP_TOS	1
#define IPV6_UNICAST_HOPS	16
#define IPV6_MULTICAST_IF	17
#define IPV6_MULTICAST_HOPS	18
#define IPV6_MULTICAST_LOOP	19
#define IPV6_JOIN_GROUP	20
#define IPV6_LEAVE_GROUP	21
#define IPV6_V6ONLY	26
#define IP_MULTICAST_IF	32
#define IP_MULTICAST_TTL	33
#define IP_MULTICAST_LOOP	34
#define IP_ADD_MEMBERSHIP	35
#define IP_DROP_MEMBERSHIP	36

struct ipv6_mreq
{
  struct in6_addr ipv6mr_multiaddr;
  int ipv6mr_interface;
}
 ;
struct ip_mreq
{
  struct in_addr imr_multiaddr;
  struct in_addr imr_interface;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/tcp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define TCP_NODELAY	1
#define SOL_TCP	6
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/udp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SOL_UDP	17
</SCREEN>
</SECT2>
<SECT2>
<TITLE>nl_types.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define NL_CAT_LOCALE	1
#define NL_SETD	1

typedef void *nl_catd;

typedef int nl_item;
</SCREEN>
</SECT2>
<!-- empty header file All/poll.h -->
<SECT2>
<TITLE>pty.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct winsize
{
  unsigned short ws_row;
  unsigned short ws_col;
  unsigned short ws_xpixel;
  unsigned short ws_ypixel;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>pwd.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct passwd
{
  char *pw_name;
  char *pw_passwd;
  uid_t pw_uid;
  gid_t pw_gid;
  char *pw_gecos;
  char *pw_dir;
  char *pw_shell;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>regex.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define RE_BACKSLASH_ESCAPE_IN_LISTS	((unsigned long int)1)
#define RE_BK_PLUS_QM	(RE_BACKSLASH_ESCAPE_IN_LISTS&lt;&lt;1)
#define RE_SYNTAX_AWK	(RE_BACKSLASH_ESCAPE_IN_LISTS|RE_DOT_NOT_NULL|RE_NO_BK_PARENS| RE_NO_BK_REFS| RE_NO_BK_VBAR| RE_NO_EMPTY_RANGES| RE_DOT_NEWLINE| RE_CONTEXT_INDEP_ANCHORS| RE_UNMATCHED_RIGHT_PAREN_ORD | RE_NO_GNU_OPS)
#define RE_CHAR_CLASSES	(RE_BK_PLUS_QM&lt;&lt;1)
#define RE_SYNTAX_GREP	(RE_BK_PLUS_QM|RE_CHAR_CLASSES|RE_HAT_LISTS_NOT_NEWLINE|RE_INTERVALS|RE_NEWLINE_ALT)
#define RE_CONTEXT_INDEP_ANCHORS	(RE_CHAR_CLASSES&lt;&lt;1)
#define RE_SYNTAX_EGREP	(RE_CHAR_CLASSES|RE_CONTEXT_INDEP_ANCHORS| RE_CONTEXT_INDEP_OPS|RE_HAT_LISTS_NOT_NEWLINE|RE_NEWLINE_ALT|RE_NO_BK_PARENS|RE_NO_BK_VBAR)
#define _RE_SYNTAX_POSIX_COMMON	(RE_CHAR_CLASSES|RE_DOT_NEWLINE|RE_DOT_NOT_NULL|RE_INTERVALS|RE_NO_EMPTY_RANGES)
#define RE_CONTEXT_INDEP_OPS	(RE_CONTEXT_INDEP_ANCHORS&lt;&lt;1)
#define RE_CONTEXT_INVALID_OPS	(RE_CONTEXT_INDEP_OPS&lt;&lt;1)
#define RE_DOT_NEWLINE	(RE_CONTEXT_INVALID_OPS&lt;&lt;1)
#define RE_INVALID_INTERVAL_ORD	(RE_DEBUG&lt;&lt;1)
#define RE_DOT_NOT_NULL	(RE_DOT_NEWLINE&lt;&lt;1)
#define RE_HAT_LISTS_NOT_NEWLINE	(RE_DOT_NOT_NULL&lt;&lt;1)
#define RE_INTERVALS	(RE_HAT_LISTS_NOT_NEWLINE&lt;&lt;1)
#define RE_LIMITED_OPS	(RE_INTERVALS&lt;&lt;1)
#define RE_NEWLINE_ALT	(RE_LIMITED_OPS&lt;&lt;1)
#define RE_NO_BK_BRACES	(RE_NEWLINE_ALT&lt;&lt;1)
#define RE_NO_BK_PARENS	(RE_NO_BK_BRACES&lt;&lt;1)
#define RE_NO_BK_REFS	(RE_NO_BK_PARENS&lt;&lt;1)
#define RE_NO_BK_VBAR	(RE_NO_BK_REFS&lt;&lt;1)
#define RE_NO_EMPTY_RANGES	(RE_NO_BK_VBAR&lt;&lt;1)
#define RE_UNMATCHED_RIGHT_PAREN_ORD	(RE_NO_EMPTY_RANGES&lt;&lt;1)
#define RE_DEBUG	(RE_NO_GNU_OPS&lt;&lt;1)
#define RE_NO_GNU_OPS	(RE_NO_POSIX_BACKTRACKING&lt;&lt;1)
#define RE_SYNTAX_POSIX_EGREP	(RE_SYNTAX_EGREP|RE_INTERVALS|RE_NO_BK_BRACES|RE_INVALID_INTERVAL_ORD)
#define RE_SYNTAX_POSIX_AWK	(RE_SYNTAX_POSIX_EXTENDED|RE_BACKSLASH_ESCAPE_IN_LISTS|RE_INTERVALS|RE_NO_GNU_OPS)
#define RE_NO_POSIX_BACKTRACKING	(RE_UNMATCHED_RIGHT_PAREN_ORD&lt;&lt;1)
#define RE_SYNTAX_POSIX_BASIC	(_RE_SYNTAX_POSIX_COMMON|RE_BK_PLUS_QM)
#define RE_SYNTAX_POSIX_EXTENDED	(_RE_SYNTAX_POSIX_COMMON|RE_CONTEXT_INDEP_ANCHORS|RE_CONTEXT_INDEP_OPS|RE_NO_BK_BRACES|RE_NO_BK_PARENS|RE_NO_BK_VBAR|RE_CONTEXT_INVALID_OPS|RE_UNMATCHED_RIGHT_PAREN_ORD)
#define RE_SYNTAX_POSIX_MINIMAL_EXTENDED	(_RE_SYNTAX_POSIX_COMMON|RE_CONTEXT_INDEP_ANCHORS|RE_CONTEXT_INVALID_OPS|RE_NO_BK_BRACES|RE_NO_BK_PARENS|RE_NO_BK_REFS|RE_NO_BK_VBAR|RE_UNMATCHED_RIGHT_PAREN_ORD)
#define RE_SYNTAX_POSIX_MINIMAL_BASIC	(_RE_SYNTAX_POSIX_COMMON|RE_LIMITED_OPS)
#define RE_SYNTAX_ED	RE_SYNTAX_POSIX_BASIC
#define RE_SYNTAX_SED	RE_SYNTAX_POSIX_BASIC

typedef unsigned long reg_syntax_t;

typedef struct re_pattern_buffer
{
  unsigned char *buffer;
  unsigned long allocated;
  unsigned long used;
  reg_syntax_t syntax;
  char *fastmap;
  char *translate;
  size_t re_nsub;
  unsigned int can_be_null:1;
  unsigned int regs_allocated:2;
  unsigned int fastmap_accurate:1;
  unsigned int no_sub:1;
  unsigned int not_bol:1;
  unsigned int not_eol:1;
  unsigned int newline_anchor:1;
}
regex_t;
typedef int regoff_t;
typedef struct
{
  regoff_t rm_so;
  regoff_t rm_eo;
}
regmatch_t;
#define REG_NOTEOL	(1&lt;&lt;1)
#define REG_ICASE	(REG_EXTENDED&lt;&lt;1)
#define REG_NEWLINE	(REG_ICASE&lt;&lt;1)
#define REG_NOSUB	(REG_NEWLINE&lt;&lt;1)
#define REG_NOMATCH	-1
#define REG_EXTENDED	1
#define REG_NOTBOL	1
</SCREEN>
</SECT2>
<!-- empty header file All/regexp.h -->
<SECT2>
<TITLE>rpc/auth.h</TITLE>
<PARA>
</PARA>
<SCREEN>

enum auth_stat
{
  AUTH_OK, AUTH_BADCRED = 1, AUTH_REJECTEDCRED = 2, AUTH_BADVERF =
    3, AUTH_REJECTEDVERF = 4, AUTH_TOOWEAK = 5, AUTH_INVALIDRESP =
    6, AUTH_FAILED = 7
}
 ;

union des_block
{
  struct
  {
    u_int32_t high;
    u_int32_t low;
  }
  key;
  char c[8];
}
 ;

struct opaque_auth
{
  enum_t oa_flavor;
  caddr_t oa_base;
  u_int oa_length;
}
 ;

typedef struct AUTH
{
  struct opaque_auth ah_cred;
  struct opaque_auth ah_verf;
  union des_block ah_key;
  struct auth_ops *ah_ops;
  caddr_t ah_private;
}
AUTH;

struct auth_ops
{
  void (*ah_nextverf) (struct AUTH *);
  int (*ah_marshal) (struct AUTH *, XDR *);
  int (*ah_validate) (struct AUTH *, struct opaque_auth *);
  int (*ah_refresh) (struct AUTH *);
  void (*ah_destroy) (struct AUTH *);
}
 ;
</SCREEN>
</SECT2>
<!-- empty header file All/rpc/auth_des.h -->
<!-- empty header file All/rpc/auth_unix.h -->
<SECT2>
<TITLE>rpc/clnt.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define clnt_control(cl,rq,in)	((*(cl)->cl_ops->cl_control)(cl,rq,in))
#define clnt_abort(rh)	((*(rh)->cl_ops->cl_abort)(rh))
#define clnt_call(rh, proc, xargs, argsp, xres, resp, secs)	((*(rh)->cl_ops->cl_call)(rh, proc, xargs, argsp, xres, resp, secs))
#define clnt_destroy(rh)	((*(rh)->cl_ops->cl_destroy)(rh))
#define clnt_freeres(rh,xres,resp)	((*(rh)->cl_ops->cl_freeres)(rh,xres,resp))
#define clnt_geterr(rh,errp)	((*(rh)->cl_ops->cl_geterr)(rh, errp))
#define NULLPROC	((u_long)0)
#define CLSET_TIMEOUT	1
#define CLGET_XID	10
#define CLSET_XID	11
#define CLGET_VERS	12
#define CLSET_VERS	13
#define CLGET_PROG	14
#define CLSET_PROG	15
#define CLGET_TIMEOUT	2
#define CLGET_SERVER_ADDR	3
#define CLSET_RETRY_TIMEOUT	4
#define CLGET_RETRY_TIMEOUT	5
#define CLGET_FD	6
#define CLGET_SVC_ADDR	7
#define CLSET_FD_CLOSE	8
#define CLSET_FD_NCLOSE	9

enum clnt_stat
{
  RPC_SUCCESS, RPC_CANTENCODEARGS = 1, RPC_CANTDECODERES = 2, RPC_CANTSEND =
    3, RPC_CANTRECV = 4, RPC_TIMEDOUT = 5, RPC_VERSMISMATCH =
    6, RPC_AUTHERROR = 7, RPC_PROGUNAVAIL = 8, RPC_PROGVERSMISMATCH =
    9, RPC_PROCUNAVAIL = 10, RPC_CANTDECODEARGS = 11, RPC_SYSTEMERROR =
    12, RPC_NOBROADCAST = 21, RPC_UNKNOWNHOST = 13, RPC_UNKNOWNPROTO =
    17, RPC_UNKNOWNADDR = 19, RPC_RPCBFAILURE = 14, RPC_PROGNOTREGISTERED =
    15, RPC_N2AXLATEFAILURE = 22, RPC_FAILED = 16, RPC_INTR =
    18, RPC_TLIERROR = 20, RPC_UDERROR = 23, RPC_INPROGRESS =
    24, RPC_STALERACHANDLE = 25
}
 ;
struct rpc_err
{
  enum clnt_stat re_status;
  union
  {
    int RE_errno;
    enum auth_stat RE_why;
    struct
    {
      u_long low;
      u_long high;
    }
    RE_vers;
    struct
    {
      long s1;
      long s2;
    }
    RE_lb;
  }
  ru;
}
 ;

typedef struct CLIENT
{
  struct AUTH *cl_auth;
  struct clnt_ops *cl_ops;
  caddr_t cl_private;
}
CLIENT;

struct clnt_ops
{
  enum clnt_stat (*cl_call) (struct CLIENT *, u_long, xdrproc_t, caddr_t,
			     xdrproc_t, caddr_t, struct timeval);
  void (*cl_abort) (void);
  void (*cl_geterr) (struct CLIENT *, struct rpc_err *);
    bool_t (*cl_freeres) (struct CLIENT *, xdrproc_t, caddr_t);
  void (*cl_destroy) (struct CLIENT *);
    bool_t (*cl_control) (struct CLIENT *, int, char *);
}
 ;
</SCREEN>
</SECT2>
<!-- empty header file All/rpc/rpc.h -->
<SECT2>
<TITLE>rpc/rpc_msg.h</TITLE>
<PARA>
</PARA>
<SCREEN>

enum msg_type
{
  CALL, REPLY = 1
}
 ;
enum reply_stat
{
  MSG_ACCEPTED, MSG_DENIED = 1
}
 ;
enum accept_stat
{
  SUCCESS, PROG_UNAVAIL = 1, PROG_MISMATCH = 2, PROC_UNAVAIL =
    3, GARBAGE_ARGS = 4, SYSTEM_ERR = 5
}
 ;
enum reject_stat
{
  RPC_MISMATCH, AUTH_ERROR = 1
}
 ;

struct accepted_reply
{
  struct opaque_auth ar_verf;
  enum accept_stat ar_stat;
  union
  {
    struct
    {
      unsigned long low;
      unsigned long high;
    }
    AR_versions;
    struct
    {
      caddr_t where;
      xdrproc_t proc;
    }
    AR_results;
  }
  ru;
}
 ;

struct rejected_reply
{
  enum reject_stat rj_stat;
  union
  {
    struct
    {
      unsigned long low;
      unsigned long high;
    }
    RJ_versions;
    enum auth_stat RJ_why;
  }
  ru;
}
 ;

struct reply_body
{
  enum reply_stat rp_stat;
  union
  {
    struct accepted_reply RP_ar;
    struct rejected_reply RP_dr;
  }
  ru;
}
 ;

struct call_body
{
  unsigned long cb_rpcvers;
  unsigned long cb_prog;
  unsigned long cb_vers;
  unsigned long cb_proc;
  struct opaque_auth cb_cred;
  struct opaque_auth cb_verf;
}
 ;

struct rpc_msg
{
  unsigned long rm_xid;
  enum msg_type rm_direction;
  union
  {
    struct call_body RM_cmb;
    struct reply_body RM_rmb;
  }
  ru;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>rpc/svc.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define svc_freeargs(xprt,xargs, argsp)	(*(xprt)->xp_ops->xp_freeargs)((xprt), (xargs), (argsp))
#define svc_getargs(xprt,xargs, argsp)	(*(xprt)->xp_ops->xp_getargs)((xprt), (xargs), (argsp))
#define RPC_ANYSOCK	-1

typedef struct SVCXPRT
{
  int xp_sock;
  u_short xp_port;
  struct xp_ops *xp_ops;
  int xp_addrlen;
  struct sockaddr_in xp_raddr;
  struct opaque_auth xp_verf;
  caddr_t xp_p1;
  caddr_t xp_p2;
  char xp_pad[256];
}
SVCXPRT;

struct svc_req
{
  rpcprog_t rq_prog;
  rpcvers_t rq_vers;
  rpcproc_t rq_proc;
  struct opaque_auth rq_cred;
  caddr_t rq_clntcred;
  SVCXPRT *rq_xprt;
}
 ;

typedef void (*__dispatch_fn_t) (struct svc_req *, SVCXPRT *);

struct xp_ops
{
  bool_t (*xp_recv) (SVCXPRT * __xprt, struct rpc_msg * __msg);
  enum xprt_stat (*xp_stat) (SVCXPRT * __xprt);
    bool_t (*xp_getargs) (SVCXPRT * __xprt, xdrproc_t __xdr_args,
			  caddr_t args_ptr);
    bool_t (*xp_reply) (SVCXPRT * __xprt, struct rpc_msg * __msg);
    bool_t (*xp_freeargs) (SVCXPRT * __xprt, xdrproc_t __xdr_args,
			   caddr_t args_ptr);
  void (*xp_destroy) (SVCXPRT * __xprt);
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>rpc/types.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef int bool_t;
typedef int enum_t;
typedef unsigned long rpcprog_t;
typedef unsigned long rpcvers_t;
typedef unsigned long rpcproc_t;
typedef unsigned long rpcprot_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>rpc/xdr.h</TITLE>
<PARA>
</PARA>
<SCREEN>

enum xdr_op
{
  XDR_ENCODE, XDR_DECODE, XDR_FREE
}
 ;
typedef struct XDR
{
  enum xdr_op x_op;
  struct xdr_ops *x_ops;
  caddr_t x_public;
  caddr_t x_private;
  caddr_t x_base;
  int x_handy;
}
XDR;

struct xdr_ops
{
  bool_t (*x_getlong) (XDR * __xdrs, long *__lp);
  bool_t (*x_putlong) (XDR * __xdrs, long *__lp);
  bool_t (*x_getbytes) (XDR * __xdrs, caddr_t __addr, u_int __len);
  bool_t (*x_putbytes) (XDR * __xdrs, char *__addr, u_int __len);
  u_int (*x_getpostn) (XDR * __xdrs);
  bool_t (*x_setpostn) (XDR * __xdrs, u_int __pos);
  int32_t *(*x_inline) (XDR * __xdrs, int __len);
  void (*x_destroy) (XDR * __xdrs);
    bool_t (*x_getint32) (XDR * __xdrs, int32_t * __ip);
    bool_t (*x_putint32) (XDR * __xdrs, int32_t * __ip);
}
 ;

typedef bool_t (*xdrproc_t) (XDR *, void *, ...);

struct xdr_discrim
{
  int value;
  xdrproc_t proc;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sched.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SCHED_OTHER	0
#define SCHED_FIFO	1
#define SCHED_RR	2

struct sched_param
{
  int sched_priority;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>search.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct entry
{
  char *key;
  void *data;
}
ENTRY;
typedef enum
{
  FIND, ENTER
}
ACTION;
typedef enum
{
  preorder, postorder, endorder, leaf
}
VISIT;

typedef void (*__action_fn_t) (void *__nodep, VISIT __value, int __level);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>setjmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define setjmp(env)	_setjmp(env)
#define sigsetjmp(a,b)	__sigsetjmp(a,b)

struct __jmp_buf_tag
{
  __jmp_buf __jmpbuf;
  int __mask_was_saved;
  sigset_t __saved_mask;
}
 ;

typedef struct __jmp_buf_tag jmp_buf[1];
typedef jmp_buf sigjmp_buf;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>signal.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SIGRTMAX	(__libc_current_sigrtmax ())
#define SIGRTMIN	(__libc_current_sigrtmin ())
#define SIG_BLOCK	0
#define SIG_UNBLOCK	1
#define SIG_SETMASK	2
#define NSIG	65

typedef int sig_atomic_t;
struct sigstack
{
  void *ss_sp;
  int ss_onstack;
}
 ;

typedef void (*sighandler_t) (int);
#define SIG_HOLD	((sighandler_t) 2)
#define SIG_ERR	((sighandler_t)-1)
#define SIG_DFL	((sighandler_t)0)
#define SIG_IGN	((sighandler_t)1)

#define SIGHUP	1
#define SIGUSR1	10
#define SIGSEGV	11
#define SIGUSR2	12
#define SIGPIPE	13
#define SIGALRM	14
#define SIGTERM	15
#define SIGSTKFLT	16
#define SIGCHLD	17
#define SIGCONT	18
#define SIGSTOP	19
#define SIGINT	2
#define SIGTSTP	20
#define SIGTTIN	21
#define SIGTTOU	22
#define SIGURG	23
#define SIGXCPU	24
#define SIGXFSZ	25
#define SIGVTALRM	26
#define SIGPROF	27
#define SIGWINCH	28
#define SIGIO	29
#define SIGQUIT	3
#define SIGPWR	30
#define SIGSYS	31
#define SIGUNUSED	31
#define SIGILL	4
#define SIGTRAP	5
#define SIGABRT	6
#define SIGIOT	6
#define SIGBUS	7
#define SIGFPE	8
#define SIGKILL	9
#define SIGCLD	SIGCHLD
#define SIGPOLL	SIGIO

#define SV_ONSTACK	(1&lt;&lt;0)
#define SV_INTERRUPT	(1&lt;&lt;1)
#define SV_RESETHAND	(1&lt;&lt;2)

typedef union sigval
{
  int sival_int;
  void *sival_ptr;
}
sigval_t;
#define SIGEV_SIGNAL	0
#define SIGEV_NONE	1
#define SIGEV_THREAD	2

typedef struct sigevent
{
  sigval_t sigev_value;
  int sigev_signo;
  int sigev_notify;
  union
  {
    int _pad[SIGEV_PAD_SIZE];
    struct
    {
      void (*sigev_thread_func) (sigval_t);
      void *_attribute;
    }
    _sigev_thread;
  }
  _sigev_un;
}
sigevent_t;
#define si_pid	_sifields._kill._pid
#define si_uid	_sifields._kill._uid
#define si_value	_sifields._rt._sigval
#define si_int	_sifields._rt._sigval.sival_int
#define si_ptr	_sifields._rt._sigval.sival_ptr
#define si_status	_sifields._sigchld._status
#define si_stime	_sifields._sigchld._stime
#define si_utime	_sifields._sigchld._utime
#define si_addr	_sifields._sigfault._addr
#define si_band	_sifields._sigpoll._band
#define si_fd	_sifields._sigpoll._fd
#define si_timer1	_sifields._timer._timer1
#define si_timer2	_sifields._timer._timer2

typedef struct siginfo
{
  int si_signo;
  int si_errno;
  int si_code;
  union
  {
    int _pad[SI_PAD_SIZE];
    struct
    {
      pid_t _pid;
      uid_t _uid;
    }
    _kill;
    struct
    {
      unsigned int _timer1;
      unsigned int _timer2;
    }
    _timer;
    struct
    {
      pid_t _pid;
      uid_t _uid;
      sigval_t _sigval;
    }
    _rt;
    struct
    {
      pid_t _pid;
      uid_t _uid;
      int _status;
      clock_t _utime;
      clock_t _stime;
    }
    _sigchld;
    struct
    {
      void *_addr;
    }
    _sigfault;
    struct
    {
      int _band;
      int _fd;
    }
    _sigpoll;
  }
  _sifields;
}
siginfo_t;
#define SI_QUEUE	-1
#define SI_TIMER	-2
#define SI_MESGQ	-3
#define SI_ASYNCIO	-4
#define SI_SIGIO	-5
#define SI_TKILL	-6
#define SI_ASYNCNL	-60
#define SI_USER	0
#define SI_KERNEL	0x80

#define ILL_ILLOPC	1
#define ILL_ILLOPN	2
#define ILL_ILLADR	3
#define ILL_ILLTRP	4
#define ILL_PRVOPC	5
#define ILL_PRVREG	6
#define ILL_COPROC	7
#define ILL_BADSTK	8

#define FPE_INTDIV	1
#define FPE_INTOVF	2
#define FPE_FLTDIV	3
#define FPE_FLTOVF	4
#define FPE_FLTUND	5
#define FPE_FLTRES	6
#define FPE_FLTINV	7
#define FPE_FLTSUB	8

#define SEGV_MAPERR	1
#define SEGV_ACCERR	2

#define BUS_ADRALN	1
#define BUS_ADRERR	2
#define BUS_OBJERR	3

#define TRAP_BRKPT	1
#define TRAP_TRACE	2

#define CLD_EXITED	1
#define CLD_KILLED	2
#define CLD_DUMPED	3
#define CLD_TRAPPED	4
#define CLD_STOPPED	5
#define CLD_CONTINUED	6

#define POLL_IN	1
#define POLL_OUT	2
#define POLL_MSG	3
#define POLL_ERR	4
#define POLL_PRI	5
#define POLL_HUP	6

typedef struct
{
  unsigned long sig[_SIGSET_NWORDS];
}
sigset_t;
#define SA_NOCLDSTOP	0x00000001
#define SA_NOCLDWAIT	0x00000002
#define SA_SIGINFO	0x00000004
#define SA_ONSTACK	0x08000000
#define SA_RESTART	0x10000000
#define SA_INTERRUPT	0x20000000
#define SA_NODEFER	0x40000000
#define SA_RESETHAND	0x80000000
#define SA_NOMASK	SA_NODEFER
#define SA_ONESHOT	SA_RESETHAND

typedef struct sigaltstack
{
  void *ss_sp;
  int ss_flags;
  size_t ss_size;
}
stack_t;
#define SS_ONSTACK	1
#define SS_DISABLE	2
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stddef.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define offsetof(TYPE,MEMBER)	((size_t)&amp ((TYPE*)0)->MEMBER)
#define NULL	(0L)

typedef int wchar_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdio.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define EOF	(-1)
#define P_tmpdir	"/tmp"
#define FOPEN_MAX	16
#define L_tmpnam	20
#define FILENAME_MAX	4096
#define BUFSIZ	8192
#define L_ctermid	9
#define L_cuserid	9

typedef struct
{
  off_t __pos;
  mbstate_t __state;
}
fpos_t;
typedef struct
{
  off64_t __pos;
  mbstate_t __state;
}
fpos64_t;

typedef struct _IO_FILE FILE;
#define _IOFBF	0
#define _IOLBF	1
#define _IONBF	2
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define MB_CUR_MAX	(__ctype_get_mb_cur_max())
#define EXIT_SUCCESS	0
#define EXIT_FAILURE	1
#define RAND_MAX	2147483647

typedef int (*__compar_fn_t) (const void *, const void *);
struct random_data
{
  int32_t *fptr;
  int32_t *rptr;
  int32_t *state;
  int rand_type;
  int rand_deg;
  int rand_sep;
  int32_t *end_ptr;
}
 ;

typedef struct
{
  int quot;
  int rem;
}
div_t;

typedef struct
{
  long quot;
  long rem;
}
ldiv_t;

typedef struct
{
  long long quot;
  long long rem;
}
lldiv_t;
</SCREEN>
</SECT2>
<!-- empty header file All/string.h -->
<SECT2>
<TITLE>sys/file.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define LOCK_SH	1
#define LOCK_EX	2
#define LOCK_NB	4
#define LOCK_UN	8
</SCREEN>
</SECT2>
<!-- empty header file All/sys/io.h -->
<!-- empty header file All/sys/ioctl.h -->
<SECT2>
<TITLE>sys/ipc.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define IPC_PRIVATE	((key_t)0)
#define IPC_RMID	0
#define IPC_CREAT	00001000
#define IPC_EXCL	00002000
#define IPC_NOWAIT	00004000
#define IPC_SET	1
#define IPC_STAT	2
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/mman.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define MAP_FAILED	((void*)-1)
#define PROT_NONE	0x0
#define MAP_SHARED	0x01
#define MAP_PRIVATE	0x02
#define PROT_READ	0x1
#define MAP_FIXED	0x10
#define PROT_WRITE	0x2
#define MAP_ANONYMOUS	0x20
#define PROT_EXEC	0x4
#define MS_ASYNC	1
#define MS_INVALIDATE	2
#define MS_SYNC	4
#define MAP_ANON	MAP_ANONYMOUS
</SCREEN>
</SECT2>
<!-- empty header file All/sys/mmap.h -->
<SECT2>
<TITLE>sys/msg.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define MSG_NOERROR	010000
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/param.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define NOFILE	256
#define MAXPATHLEN	4096
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/poll.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define POLLIN	0x0001
#define POLLPRI	0x0002
#define POLLOUT	0x0004
#define POLLERR	0x0008
#define POLLHUP	0x0010
#define POLLNVAL	0x0020

struct pollfd
{
  int fd;
  short events;
  short revents;
}
 ;
typedef unsigned long nfds_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/resource.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define RUSAGE_CHILDREN	(-1)
#define RUSAGE_BOTH	(-2)
#define RLIM_INFINITY	(~0UL)
#define RLIM_SAVED_CUR	-1
#define RLIM_SAVED_MAX	-1
#define RLIMIT_CPU	0
#define RUSAGE_SELF	0
#define RLIMIT_FSIZE	1
#define RLIMIT_DATA	2
#define RLIMIT_STACK	3
#define RLIMIT_CORE	4
#define RLIMIT_NOFILE	7
#define RLIMIT_AS	9

typedef unsigned long rlim_t;
typedef unsigned long long rlim64_t;
typedef int __rlimit_resource_t;

struct rlimit
{
  rlim_t rlim_cur;
  rlim_t rlim_max;
}
 ;
struct rlimit64
{
  rlim64_t rlim_cur;
  rlim64_t rlim_max;
}
 ;

struct rusage
{
  struct timeval ru_utime;
  struct timeval ru_stime;
  long ru_maxrss;
  long ru_ixrss;
  long ru_idrss;
  long ru_isrss;
  long ru_minflt;
  long ru_majflt;
  long ru_nswap;
  long ru_inblock;
  long ru_oublock;
  long ru_msgsnd;
  long ru_msgrcv;
  long ru_nsignals;
  long ru_nvcsw;
  long ru_nivcsw;
}
 ;

enum __priority_which
{
  PRIO_PROCESS, PRIO_PGRP = 1, PRIO_USER = 2
}
 ;
#define PRIO_PGRP	PRIO_PGRP
#define PRIO_PROCESS	PRIO_PROCESS
#define PRIO_USER	PRIO_USER

typedef enum __priority_which __priority_which_t;
</SCREEN>
</SECT2>
<!-- empty header file All/sys/select.h -->
<SECT2>
<TITLE>sys/sem.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SEM_UNDO	0x1000
#define GETPID	11
#define GETVAL	12
#define GETALL	13
#define GETNCNT	14
#define GETZCNT	15
#define SETVAL	16
#define SETALL	17

struct sembuf
{
  short sem_num;
  short sem_op;
  short sem_flg;
}
 ;
</SCREEN>
</SECT2>
<!-- empty header file All/sys/sendfile.h -->
<SECT2>
<TITLE>sys/shm.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SHM_RDONLY	010000
#define SHM_W	0200
#define SHM_RND	020000
#define SHM_R	0400
#define SHM_REMAP	040000
#define SHM_LOCK	11
#define SHM_UNLOCK	12
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/socket.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SHUT_RD	0
#define MSG_WAITALL	0x100
#define MSG_TRUNC	0x20
#define MSG_EOR	0x80
#define SIOCGIFCONF	0x8912
#define SIOCGIFFLAGS	0x8913
#define SIOCGIFADDR	0x8915
#define SIOCGIFNETMASK	0x891b
#define MSG_OOB	1
#define SHUT_WR	1
#define MSG_PEEK	2
#define SHUT_RDWR	2
#define MSG_DONTROUTE	4
#define MSG_CTRUNC	8
#define PF_UNSPEC	AF_UNSPEC

struct linger
{
  int l_onoff;
  int l_linger;
}
 ;
struct cmsghdr
{
  size_t cmsg_len;
  int cmsg_level;
  int cmsg_type;
}
 ;
struct iovec
{
  void *iov_base;
  size_t iov_len;
}
 ;

typedef unsigned short sa_family_t;
typedef unsigned int socklen_t;

struct sockaddr
{
  sa_family_t sa_family;
  char sa_data[14];
}
 ;
struct sockaddr_storage
{
  sa_family_t ss_family;
  __ss_aligntype __ss_align;
  char __ss_padding[(128 - (2 * sizeof (__ss_aligntype)))];
}
 ;

struct msghdr
{
  void *msg_name;
  int msg_namelen;
  struct iovec *msg_iov;
  size_t msg_iovlen;
  void *msg_control;
  size_t msg_controllen;
  unsigned int msg_flags;
}
 ;
#define AF_UNSPEC	0
#define AF_UNIX	1
#define AF_INET6	10
#define AF_INET	2

#define PF_INET	AF_INET
#define PF_INET6	AF_INET6
#define PF_UNIX	AF_UNIX

#define SOCK_STREAM	1
#define SOCK_PACKET	10
#define SOCK_DGRAM	2
#define SOCK_RAW	3
#define SOCK_RDM	4
#define SOCK_SEQPACKET	5

#define SOL_SOCKET	1
#define SO_DEBUG	1
#define SO_OOBINLINE	10
#define SO_NO_CHECK	11
#define SO_PRIORITY	12
#define SO_LINGER	13
#define SO_REUSEADDR	2
#define SOL_RAW	255
#define SO_TYPE	3
#define SO_ERROR	4
#define SO_DONTROUTE	5
#define SO_BROADCAST	6
#define SO_SNDBUF	7
#define SO_RCVBUF	8
#define SO_KEEPALIVE	9
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/stat.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define S_ISBLK(m)	(((m)&amp S_IFMT)==S_IFBLK)
#define S_ISCHR(m)	(((m)&amp S_IFMT)==S_IFCHR)
#define S_ISDIR(m)	(((m)&amp S_IFMT)==S_IFDIR)
#define S_ISFIFO(m)	(((m)&amp S_IFMT)==S_IFIFO)
#define S_ISLNK(m)	(((m)&amp S_IFMT)==S_IFLNK)
#define S_ISREG(m)	(((m)&amp S_IFMT)==S_IFREG)
#define S_ISSOCK(m)	(((m)&amp S_IFMT)==S_IFSOCK)
#define S_TYPEISMQ(buf)	((buf)->st_mode - (buf)->st_mode)
#define S_TYPEISSEM(buf)	((buf)->st_mode - (buf)->st_mode)
#define S_TYPEISSHM(buf)	((buf)->st_mode - (buf)->st_mode)
#define S_IRWXU	(S_IREAD|S_IWRITE|S_IEXEC)
#define S_IROTH	(S_IRGRP>>3)
#define S_IRGRP	(S_IRUSR>>3)
#define S_IRWXO	(S_IRWXG>>3)
#define S_IRWXG	(S_IRWXU>>3)
#define S_IWOTH	(S_IWGRP>>3)
#define S_IWGRP	(S_IWUSR>>3)
#define S_IXOTH	(S_IXGRP>>3)
#define S_IXGRP	(S_IXUSR>>3)
#define S_ISVTX	01000
#define S_IXUSR	0x0040
#define S_IWUSR	0x0080
#define S_IRUSR	0x0100
#define S_ISGID	0x0400
#define S_ISUID	0x0800
#define S_IFIFO	0x1000
#define S_IFCHR	0x2000
#define S_IFDIR	0x4000
#define S_IFBLK	0x6000
#define S_IFREG	0x8000
#define S_IFLNK	0xa000
#define S_IFSOCK	0xc000
#define S_IFMT	0xf000
#define st_atime	st_atim.tv_sec
#define st_ctime	st_ctim.tv_sec
#define st_mtime	st_mtim.tv_sec
#define S_IREAD	S_IRUSR
#define S_IWRITE	S_IWUSR
#define S_IEXEC	S_IXUSR
</SCREEN>
</SECT2>
<!-- empty header file All/sys/statfs.h -->
<!-- empty header file All/sys/statvfs.h -->
<SECT2>
<TITLE>sys/time.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ITIMER_REAL	0
#define ITIMER_VIRTUAL	1
#define ITIMER_PROF	2

struct timezone
{
  int tz_minuteswest;
  int tz_dsttime;
}
 ;

typedef int __itimer_which_t;

struct timespec
{
  time_t tv_sec;
  long tv_nsec;
}
 ;

struct timeval
{
  time_t tv_sec;
  suseconds_t tv_usec;
}
 ;

struct itimerval
{
  struct timeval it_interval;
  struct timeval it_value;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/timeb.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct timeb
{
  time_t time;
  unsigned short millitm;
  short timezone;
  short dstflag;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/times.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct tms
{
  clock_t tms_utime;
  clock_t tms_stime;
  clock_t tms_cutime;
  clock_t tms_cstime;
}
 ;
</SCREEN>
</SECT2>
<!-- empty header file All/sys/timex.h -->
<SECT2>
<TITLE>sys/types.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FD_ISSET(d,set)	((set)->fds_bits[((d)/(8*sizeof(long)))]&amp (1&lt;&lt;((d)%(8*sizeof(long)))))
#define FD_CLR(d,set)	((set)->fds_bits[((d)/(8*sizeof(long)))]&amp =~(1&lt;&lt;((d)%(8*sizeof(long)))))
#define FD_SET(d,set)	((set)->fds_bits[((d)/(8*sizeof(long)))]|=(1&lt;&lt;((d)%(8*sizeof(long)))))
#define FALSE	0
#define TRUE	1
#define FD_SETSIZE	1024
#define FD_ZERO(fdsetp)	bzero(fdsetp, sizeof(*(fdsetp)))

typedef signed char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef unsigned char u_int8_t;
typedef unsigned short u_int16_t;
typedef unsigned int u_int32_t;
typedef unsigned int uid_t;
typedef int pid_t;
typedef unsigned long off_t;
typedef int key_t;
typedef long suseconds_t;
typedef unsigned int u_int;
typedef struct
{
  int __val[2];
}
fsid_t;
typedef unsigned int useconds_t;
typedef unsigned long blksize_t;
typedef long fd_mask;
typedef int timer_t;
typedef int clockid_t;

typedef unsigned int id_t;

typedef unsigned long long ino64_t;
typedef long long loff_t;
typedef unsigned long blkcnt_t;
typedef unsigned long fsblkcnt_t;
typedef unsigned long fsfilcnt_t;
typedef unsigned long long blkcnt64_t;
typedef unsigned long long fsblkcnt64_t;
typedef unsigned long long fsfilcnt64_t;
typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned long u_long;

typedef unsigned long ino_t;
typedef unsigned int gid_t;
typedef unsigned long long dev_t;
typedef unsigned int mode_t;
typedef unsigned long nlink_t;
typedef char *caddr_t;

typedef struct
{
  unsigned long fds_bits[__FDSET_LONGS];
}
fd_set;

typedef long clock_t;
typedef long time_t;
</SCREEN>
</SECT2>
<!-- empty header file All/sys/uio.h -->
<SECT2>
<TITLE>sys/un.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define UNIX_PATH_MAX	108

struct sockaddr_un
{
  sa_family_t sun_family;
  char sun_path[UNIX_PATH_MAX];
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/utsname.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SYS_NMLN	65

struct utsname
{
  char sysname[65];
  char nodename[65];
  char release[65];
  char version[65];
  char machine[65];
  char domainname[65];
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/wait.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define WIFSIGNALED(status)	(!WIFSTOPPED(status) &amp & !WIFEXITED(status))
#define WIFSTOPPED(status)	(((status) &amp  0xff) == 0x7f)
#define WEXITSTATUS(status)	(((status) &amp  0xff00) >> 8)
#define WTERMSIG(status)	((status) &amp  0x7f)
#define WCOREDUMP(status)	((status) &amp  0x80)
#define WIFEXITED(status)	(WTERMSIG(status) == 0)
#define WNOHANG	0x00000001
#define WUNTRACED	0x00000002
#define WCOREFLAG	0x80
#define WSTOPSIG(status)	WEXITSTATUS(status)

typedef enum
{
  P_ALL, P_PID, P_PGID
}
idtype_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>syslog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define LOG_EMERG	0
#define LOG_PRIMASK	0x07
#define LOG_ALERT	1
#define LOG_CRIT	2
#define LOG_ERR	3
#define LOG_WARNING	4
#define LOG_NOTICE	5
#define LOG_INFO	6
#define LOG_DEBUG	7

#define LOG_KERN	(0&lt;&lt;3)
#define LOG_AUTHPRIV	(10&lt;&lt;3)
#define LOG_FTP	(11&lt;&lt;3)
#define LOG_USER	(1&lt;&lt;3)
#define LOG_MAIL	(2&lt;&lt;3)
#define LOG_DAEMON	(3&lt;&lt;3)
#define LOG_AUTH	(4&lt;&lt;3)
#define LOG_SYSLOG	(5&lt;&lt;3)
#define LOG_LPR	(6&lt;&lt;3)
#define LOG_NEWS	(7&lt;&lt;3)
#define LOG_UUCP	(8&lt;&lt;3)
#define LOG_CRON	(9&lt;&lt;3)
#define LOG_FACMASK	0x03f8

#define LOG_LOCAL0	(16&lt;&lt;3)
#define LOG_LOCAL1	(17&lt;&lt;3)
#define LOG_LOCAL2	(18&lt;&lt;3)
#define LOG_LOCAL3	(19&lt;&lt;3)
#define LOG_LOCAL4	(20&lt;&lt;3)
#define LOG_LOCAL5	(21&lt;&lt;3)
#define LOG_LOCAL6	(22&lt;&lt;3)
#define LOG_LOCAL7	(23&lt;&lt;3)

#define LOG_UPTO(pri)	((1 &lt;&lt; ((pri)+1)) - 1)
#define LOG_MASK(pri)	(1 &lt;&lt; (pri))

#define LOG_PID	0x01
#define LOG_CONS	0x02
#define LOG_ODELAY	0x04
#define LOG_NDELAY	0x08
#define LOG_NOWAIT	0x10
#define LOG_PERROR	0x20
</SCREEN>
</SECT2>
<SECT2>
<TITLE>termios.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define TCIFLUSH	0
#define TCOOFF	0
#define TCSANOW	0
#define BS0	0000000
#define CR0	0000000
#define FF0	0000000
#define NL0	0000000
#define TAB0	0000000
#define VT0	0000000
#define OPOST	0000001
#define OCRNL	0000010
#define ONOCR	0000020
#define ONLRET	0000040
#define OFILL	0000100
#define OFDEL	0000200
#define NL1	0000400
#define TCOFLUSH	1
#define TCOON	1
#define TCSADRAIN	1
#define TCIOFF	2
#define TCIOFLUSH	2
#define TCSAFLUSH	2
#define TCION	3

typedef unsigned int speed_t;
typedef unsigned char cc_t;
typedef unsigned int tcflag_t;
#define NCCS	32

struct termios
{
  tcflag_t c_iflag;
  tcflag_t c_oflag;
  tcflag_t c_cflag;
  tcflag_t c_lflag;
  cc_t c_line;
  cc_t c_cc[NCCS];
  speed_t c_ispeed;
  speed_t c_ospeed;
}
 ;
#define VINTR	0
#define VQUIT	1
#define VLNEXT	15
#define VERASE	2
#define VKILL	3
#define VEOF	4

#define IGNBRK	0000001
#define BRKINT	0000002
#define IGNPAR	0000004
#define PARMRK	0000010
#define INPCK	0000020
#define ISTRIP	0000040
#define INLCR	0000100
#define IGNCR	0000200
#define ICRNL	0000400
#define IXANY	0004000
#define IMAXBEL	0020000

#define CS5	0000000

#define ECHO	0000010

#define B0	0000000
#define B50	0000001
#define B75	0000002
#define B110	0000003
#define B134	0000004
#define B150	0000005
#define B200	0000006
#define B300	0000007
#define B600	0000010
#define B1200	0000011
#define B1800	0000012
#define B2400	0000013
#define B4800	0000014
#define B9600	0000015
#define B19200	0000016
#define B38400	0000017
</SCREEN>
</SECT2>
<SECT2>
<TITLE>time.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define CLK_TCK	((clock_t)__sysconf(2))
#define CLOCK_REALTIME	0
#define TIMER_ABSTIME	1
#define CLOCKS_PER_SEC	1000000l

struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
  long tm_gmtoff;
  char *tm_zone;
}
 ;
struct itimerspec
{
  struct timespec it_interval;
  struct timespec it_value;
}
 ;
</SCREEN>
</SECT2>
<!-- empty header file All/ucontext.h -->
<SECT2>
<TITLE>ulimit.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define UL_GETFSIZE	1
#define UL_SETFSIZE	2
</SCREEN>
</SECT2>
<SECT2>
<TITLE>unistd.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SEEK_SET	0
#define STDIN_FILENO	0
#define SEEK_CUR	1
#define STDOUT_FILENO	1
#define SEEK_END	2
#define STDERR_FILENO	2

typedef long long off64_t;
#define F_OK	0
#define X_OK	1
#define W_OK	2
#define R_OK	4

#define _POSIX_VDISABLE	'\0'
#define _POSIX_CHOWN_RESTRICTED	1
#define _POSIX_JOB_CONTROL	1
#define _POSIX_NO_TRUNC	1
#define _POSIX_SHELL	1
#define _POSIX_FSYNC	200112
#define _POSIX_MAPPED_FILES	200112
#define _POSIX_MEMLOCK	200112
#define _POSIX_MEMLOCK_RANGE	200112
#define _POSIX_MEMORY_PROTECTION	200112
#define _POSIX_SEMAPHORES	200112
#define _POSIX_SHARED_MEMORY_OBJECTS	200112
#define _POSIX_TIMERS	200112
#define _POSIX2_C_BIND	200112L
#define _POSIX2_VERSION	200112L
#define _POSIX_THREADS	200112L
#define _POSIX_VERSION	200112L

#define _PC_LINK_MAX	0
#define _PC_MAX_CANON	1
#define _PC_ASYNC_IO	10
#define _PC_PRIO_IO	11
#define _PC_FILESIZEBITS	13
#define _PC_REC_INCR_XFER_SIZE	14
#define _PC_REC_MIN_XFER_SIZE	16
#define _PC_REC_XFER_ALIGN	17
#define _PC_ALLOC_SIZE_MIN	18
#define _PC_MAX_INPUT	2
#define _PC_2_SYMLINKS	20
#define _PC_NAME_MAX	3
#define _PC_PATH_MAX	4
#define _PC_PIPE_BUF	5
#define _PC_CHOWN_RESTRICTED	6
#define _PC_NO_TRUNC	7
#define _PC_VDISABLE	8
#define _PC_SYNC_IO	9

#define _SC_ARG_MAX	0
#define _SC_CHILD_MAX	1
#define _SC_PRIORITY_SCHEDULING	10
#define _SC_TIMERS	11
#define _SC_ASYNCHRONOUS_IO	12
#define _SC_XBS5_ILP32_OFF32	125
#define _SC_XBS5_ILP32_OFFBIG	126
#define _SC_XBS5_LP64_OFF64	127
#define _SC_XBS5_LPBIG_OFFBIG	128
#define _SC_XOPEN_LEGACY	129
#define _SC_PRIORITIZED_IO	13
#define _SC_XOPEN_REALTIME	130
#define _SC_XOPEN_REALTIME_THREADS	131
#define _SC_ADVISORY_INFO	132
#define _SC_BARRIERS	133
#define _SC_CLOCK_SELECTION	137
#define _SC_CPUTIME	138
#define _SC_THREAD_CPUTIME	139
#define _SC_SYNCHRONIZED_IO	14
#define _SC_MONOTONIC_CLOCK	149
#define _SC_FSYNC	15
#define _SC_READER_WRITER_LOCKS	153
#define _SC_SPIN_LOCKS	154
#define _SC_REGEXP	155
#define _SC_SHELL	157
#define _SC_SPAWN	159
#define _SC_MAPPED_FILES	16
#define _SC_SPORADIC_SERVER	160
#define _SC_THREAD_SPORADIC_SERVER	161
#define _SC_TIMEOUTS	164
#define _SC_TYPED_MEMORY_OBJECTS	165
#define _SC_2_PBS_ACCOUNTING	169
#define _SC_MEMLOCK	17
#define _SC_2_PBS_LOCATE	170
#define _SC_2_PBS_MESSAGE	171
#define _SC_2_PBS_TRACK	172
#define _SC_SYMLOOP_MAX	173
#define _SC_2_PBS_CHECKPOINT	175
#define _SC_V6_ILP32_OFF32	176
#define _SC_V6_ILP32_OFFBIG	177
#define _SC_V6_LP64_OFF64	178
#define _SC_V6_LPBIG_OFFBIG	179
#define _SC_MEMLOCK_RANGE	18
#define _SC_HOST_NAME_MAX	180
#define _SC_TRACE	181
#define _SC_TRACE_EVENT_FILTER	182
#define _SC_TRACE_INHERIT	183
#define _SC_TRACE_LOG	184
#define _SC_MEMORY_PROTECTION	19
#define _SC_CLK_TCK	2
#define _SC_MESSAGE_PASSING	20
#define _SC_SEMAPHORES	21
#define _SC_SHARED_MEMORY_OBJECTS	22
#define _SC_AIO_LISTIO_MAX	23
#define _SC_AIO_MAX	24
#define _SC_AIO_PRIO_DELTA_MAX	25
#define _SC_DELAYTIMER_MAX	26
#define _SC_MQ_OPEN_MAX	27
#define _SC_MQ_PRIO_MAX	28
#define _SC_VERSION	29
#define _SC_NGROUPS_MAX	3
#define _SC_PAGESIZE	30
#define _SC_PAGE_SIZE	30
#define _SC_RTSIG_MAX	31
#define _SC_SEM_NSEMS_MAX	32
#define _SC_SEM_VALUE_MAX	33
#define _SC_SIGQUEUE_MAX	34
#define _SC_TIMER_MAX	35
#define _SC_BC_BASE_MAX	36
#define _SC_BC_DIM_MAX	37
#define _SC_BC_SCALE_MAX	38
#define _SC_BC_STRING_MAX	39
#define _SC_OPEN_MAX	4
#define _SC_COLL_WEIGHTS_MAX	40
#define _SC_EXPR_NEST_MAX	42
#define _SC_LINE_MAX	43
#define _SC_RE_DUP_MAX	44
#define _SC_2_VERSION	46
#define _SC_2_C_BIND	47
#define _SC_2_C_DEV	48
#define _SC_2_FORT_DEV	49
#define _SC_STREAM_MAX	5
#define _SC_2_FORT_RUN	50
#define _SC_2_SW_DEV	51
#define _SC_2_LOCALEDEF	52
#define _SC_TZNAME_MAX	6
#define _SC_IOV_MAX	60
#define _SC_THREADS	67
#define _SC_THREAD_SAFE_FUNCTIONS	68
#define _SC_GETGR_R_SIZE_MAX	69
#define _SC_JOB_CONTROL	7
#define _SC_GETPW_R_SIZE_MAX	70
#define _SC_LOGIN_NAME_MAX	71
#define _SC_TTY_NAME_MAX	72
#define _SC_THREAD_DESTRUCTOR_ITERATIONS	73
#define _SC_THREAD_KEYS_MAX	74
#define _SC_THREAD_STACK_MIN	75
#define _SC_THREAD_THREADS_MAX	76
#define _SC_THREAD_ATTR_STACKADDR	77
#define _SC_THREAD_ATTR_STACKSIZE	78
#define _SC_THREAD_PRIORITY_SCHEDULING	79
#define _SC_SAVED_IDS	8
#define _SC_THREAD_PRIO_INHERIT	80
#define _SC_THREAD_PRIO_PROTECT	81
#define _SC_THREAD_PROCESS_SHARED	82
#define _SC_ATEXIT_MAX	87
#define _SC_PASS_MAX	88
#define _SC_XOPEN_VERSION	89
#define _SC_REALTIME_SIGNALS	9
#define _SC_XOPEN_UNIX	91
#define _SC_XOPEN_CRYPT	92
#define _SC_XOPEN_ENH_I18N	93
#define _SC_XOPEN_SHM	94
#define _SC_2_CHAR_TERM	95
#define _SC_2_C_VERSION	96
#define _SC_2_UPE	97

#define _CS_PATH	0
#define _POSIX_REGEXP	1
#define _CS_XBS5_ILP32_OFF32_CFLAGS	1100
#define _CS_XBS5_ILP32_OFF32_LDFLAGS	1101
#define _CS_XBS5_ILP32_OFF32_LIBS	1102
#define _CS_XBS5_ILP32_OFF32_LINTFLAGS	1103
#define _CS_XBS5_ILP32_OFFBIG_CFLAGS	1104
#define _CS_XBS5_ILP32_OFFBIG_LDFLAGS	1105
#define _CS_XBS5_ILP32_OFFBIG_LIBS	1106
#define _CS_XBS5_ILP32_OFFBIG_LINTFLAGS	1107
#define _CS_XBS5_LP64_OFF64_CFLAGS	1108
#define _CS_XBS5_LP64_OFF64_LDFLAGS	1109
#define _CS_XBS5_LP64_OFF64_LIBS	1110
#define _CS_XBS5_LP64_OFF64_LINTFLAGS	1111
#define _CS_XBS5_LPBIG_OFFBIG_CFLAGS	1112
#define _CS_XBS5_LPBIG_OFFBIG_LDFLAGS	1113
#define _CS_XBS5_LPBIG_OFFBIG_LIBS	1114
#define _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS	1115

#define _XOPEN_REALTIME	1
#define _XOPEN_XPG4	1
#define _XOPEN_XCU_VERSION	4
#define _XOPEN_VERSION	500

#define F_ULOCK	0
#define F_LOCK	1
#define F_TLOCK	2
#define F_TEST	3
</SCREEN>
</SECT2>
<SECT2>
<TITLE>utime.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct utimbuf
{
  time_t actime;
  time_t modtime;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>utmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define UT_HOSTSIZE	256
#define UT_LINESIZE	32
#define UT_NAMESIZE	32

struct exit_status
{
  short e_termination;
  short e_exit;
}
 ;

#define EMPTY	0
#define RUN_LVL	1
#define BOOT_TIME	2
#define NEW_TIME	3
#define OLD_TIME	4
#define INIT_PROCESS	5
#define LOGIN_PROCESS	6
#define USER_PROCESS	7
#define DEAD_PROCESS	8
#define ACCOUNTING	9
</SCREEN>
</SECT2>
<!-- empty header file All/utmpx.h -->
<SECT2>
<TITLE>wchar.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define WEOF	(0xffffffffu)
#define WCHAR_MAX	0x7FFFFFFF
#define WCHAR_MIN	0x80000000
</SCREEN>
</SECT2>
<SECT2>
<TITLE>wctype.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef unsigned long wctype_t;
typedef unsigned int wint_t;
typedef const int32_t *wctrans_t;
typedef struct
{
  int count;
  wint_t value;
}
__mbstate_t;

typedef __mbstate_t mbstate_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>wordexp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

enum
{
  WRDE_DOOFFS, WRDE_APPEND, WRDE_NOCMD, WRDE_REUSE, WRDE_SHOWERR, WRDE_UNDEF,
    __WRDE_FLAGS
}
 ;

typedef struct
{
  int we_wordc;
  char **we_wordv;
  int we_offs;
}
wordexp_t;

enum
{
  WRDE_NOSYS, WRDE_NOSPACE, WRDE_BADCHAR, WRDE_BADVAL, WRDE_CMDSUB,
    WRDE_SYNTAX
}
 ;
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libcman>
<TITLE>Interface Definitions for libc</TITLE>
<PARA>
The following interfaces are included in libc and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed above for libc shall behave as described
in the referenced base document.
</PARA>
<REFENTRY ID="baselib--IO-feof-3"> <REFMETA>
<REFENTRYTITLE>_IO_feof</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_IO_feof
</REFNAME>
<REFPURPOSE>
alias for feof
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>_IO_feof</FUNCTION></FUNCDEF>
 <PARAMDEF>_IO_FILE 
  <PARAMETER><REPLACEABLE>*__fp</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_IO_feof</FUNCTION> tests the end-of-file indicator for the 
stream pointed to by <PARAMETER>__fp</PARAMETER>, returning a non-zero 
value if it is set.  
</PARA>
<PARA>
<FUNCTION>_IO_feof</FUNCTION> is not in the source standard; it is only 
in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--IO-getc-3"> <REFMETA>
<REFENTRYTITLE>_IO_getc</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_IO_getc
</REFNAME>
<REFPURPOSE>
alias for getc
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>_IO_getc</FUNCTION></FUNCDEF>
 <PARAMDEF>_IO_FILE
  <PARAMETER><REPLACEABLE>*__fp</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_IO_getc</FUNCTION> reads the next character from 
<PARAMETER>__fp</PARAMETER> and returns it as an unsigned char cast 
to an int, or <VARNAME>EOF</VARNAME> on end-of-file or error.
</PARA>
<PARA>
<FUNCTION>_IO_getc</FUNCTION> is not in the source standard; it is 
only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--IO-putc-3"> <REFMETA>
<REFENTRYTITLE>_IO_putc</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_IO_putc
</REFNAME>
<REFPURPOSE>
alias for putc
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>_IO_putc</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__c</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>_IO_FILE 
  <PARAMETER><REPLACEABLE>*__fp</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_IO_putc</FUNCTION> writes the character 
<PARAMETER>__c</PARAMETER>, cast to an unsigned char, to 
<PARAMETER>__fp</PARAMETER>.
</PARA>
<PARA>
<FUNCTION>_IO_putc</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--IO-puts-3"> <REFMETA>
<REFENTRYTITLE>_IO_puts</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_IO_puts
</REFNAME>
<REFPURPOSE>
alias for puts
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>_IO_puts</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*__c</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_IO_puts</FUNCTION> writes the string <PARAMETER>__s</PARAMETER> 
and a trailing newline to <VARNAME>stdout</VARNAME>.
</PARA>
<PARA>
<FUNCTION>_IO_puts</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---assert-fail-1"> <REFMETA>
<REFENTRYTITLE>__assert_fail</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__assert_fail
</REFNAME>
<REFPURPOSE>abort the program after false assertion
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>30 January 2000</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>__assert_fail</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*assertion</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*file</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>unsigned int 
  <PARAMETER><REPLACEABLE>line</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*function</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>30 January 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>__assert_fail</FUNCTION> function is used to
implement the <FUNCTION>assert</FUNCTION> function of
<XREF LINKEND=STD.SUSv3>.
The <FUNCTION>__assert_fail</FUNCTION> function 
shall print the given <parameter>file</parameter> filename,
<parameter>line</parameter> line number, 
<parameter>function</parameter> function name and a message
on the standard error stream in an implementation defined format, and abort
program execution via the <function>abort</function> function.
For example:
<BLOCKQUOTE>
<PARA>
a.c:10: foobar: Assertion a == b failed.
</PARA>
</BLOCKQUOTE>
</PARA>
<PARA>
If <PARAMETER>function</PARAMETER> is <LITERAL>NULL</LITERAL>, 
<function>__assert_fail</function> shall omit
information about the function.
</PARA><PARA>
<PARAMETER>assertion</PARAMETER>, <PARAMETER>file</PARAMETER>, and
<PARAMETER>line</PARAMETER> shall be non-<LITERAL>NULL</LITERAL>.
</PARA>
<PARA>
The <FUNCTION>__assert_fail</FUNCTION> function
is not in the source standard; 
it is only in the binary standard.
The <FUNCTION>assert</FUNCTION> function is not in the binary standard;
it is only in the source standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---ctype-b-loc"> <REFMETA>
<REFENTRYTITLE>__ctype_b_loc</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__ctype_b_loc</REFNAME>
<REFPURPOSE>
accessor function for __ctype_b array for ctype functions
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 July 2004</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;ctype.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
  <FUNCDEF>const unsigned short int
    <FUNCTION>**ctype_b_loc</FUNCTION>
  </FUNCDEF>
  <VOID>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>8 July 2004</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>__ctype_b_loc</FUNCTION>
function shall return a pointer into an array of
characters in the current locale that contains characteristics for each
character in the current character set. The array shall contain a total of 
<CONSTANT>384</CONSTANT>
characters, and can be indexed with any signed or unsigned char (i.e. with an
index value between <CONSTANT>-128</CONSTANT> and 
<CONSTANT>255</CONSTANT>). If the application is multithreaded, the 
array shall be local to the current thread. 
</PARA>
<PARA>
This interface is not in the source standard; it is only in the binary standard.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>The <FUNCTION>__ctype_b_loc</FUNCTION> function shall return a pointer
to the array of characters to be used for the <FUNCTION>ctype</FUNCTION>
family of functions (see <FILENAME>&lt;ctype.h&gt;</FILENAME>).
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib---ctype-get-mb-cur-max-1"> <REFMETA>
<REFENTRYTITLE>__ctype_get_mb_cur_max</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__ctype_get_mb_cur_max</REFNAME>
<REFPURPOSE>
maximum length of a multibyte character in the current locale
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>size_t 
  <FUNCTION>__ctype_get_mb_cur_max</FUNCTION></FUNCDEF>
  <VOID>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__ctype_get_mb_cur_max</FUNCTION> returns the maximum 
length of a multibyte character in the current locale.
</PARA>
<PARA>
<FUNCTION>__ctype_get_mb_cur_max</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="libutil---ctype-tolower-loc"> <REFMETA>
<REFENTRYTITLE>__ctype_tolower_loc</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__ctype_tolower_loc
</REFNAME>
<REFPURPOSE>
accessor function for __ctype_b_tolower array for ctype tolower() function
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 July 2004</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;ctype.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int32_t
  <FUNCTION>**__ctype_tolower_loc</FUNCTION></FUNCDEF>
  <VOID>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>8 July 2004</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>__ctype_tolower_loc</FUNCTION>
function shall return a pointer into an array
characters in the current locale that contains lower case equivalents for each
character in the current character set. The array shall contain a total of 384
characters, and can be indexed with any signed or unsigned char (i.e. with an
index value between -128 and 255). If the application is multithreaded, the 
array shall be local to the current thread. 
</PARA>
<PARA>
This interface is not in the source standard; it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="libutil---ctype-toupper-loc"> <REFMETA>
<REFENTRYTITLE>__ctype_toupper_loc</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__ctype_toupper_loc
</REFNAME>
<REFPURPOSE>
accessor function for <function>__ctype_b_toupper</function>
array for ctype <function>toupper()</function> function
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 July 2004</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;ctype.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int32_t
  <FUNCTION>**__ctype_toupper_loc</FUNCTION></FUNCDEF>
  <VOID>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>8 July 2004</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>__ctype_toupper_loc</FUNCTION>
function shall return a pointer into an array
characters in the current locale that contains upper case equivalents for each
character in the current character set. The array shall contain a total of 384
characters, and can be indexed with any signed or unsigned char (i.e. with an
index value between -128 and 255). If the application is multithreaded, the 
array shall be local to the current thread. 
</PARA>
<PARA>
This interface is not in the source standard; it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---cxa-atexit"> <REFMETA>
<REFENTRYTITLE>__cxa_atexit</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__cxa_atexit</REFNAME>
<REFPURPOSE>
register a function to be called by exit or when a shared library is unloaded
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__cxa_atexit</FUNCTION></FUNCDEF>
 <PARAMDEF>void (*func) 
  <PARAMETER><REPLACEABLE>(void *)</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void 
  <PARAMETER><REPLACEABLE>*arg</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void 
  <PARAMETER><REPLACEABLE>*dso_handle</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__cxa_atexit</FUNCTION> registers a function to be called by 
exit or when a shared library is unloaded. 
</PARA>
<PARA>
The <FUNCTION>__cxa_atexit</FUNCTION> function is used to implement
<FUNCTION>atexit</FUNCTION>, as described in <XREF LINKEND=STD.SUSv3>.
Calling <synopsis>atexit(func)</synopsis> from the statically linked part of
an application shall be equivalent to
<synopsis>__cxa_atexit(func, NULL, NULL)</synopsis>.
</PARA>
<PARA>
<FUNCTION>__cxa_atexit</FUNCTION> is not in the source standard; 
it is only in the binary standard.
<FUNCTION>atexit</FUNCTION> is not in the binary standard; 
it is only in the source standard.
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-daylight-1"> <REFMETA>
<REFENTRYTITLE>__daylight</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__daylight
</REFNAME>
<REFPURPOSE>
Daylight savings time flag
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<SYNOPSIS>
int <VARNAME>__daylight</VARNAME>;
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
The integer variable <VARNAME>__daylight</VARNAME> 
shall implement the daylight savings time flag <VARNAME>daylight</VARNAME>
as specified in the 
<XREF LINKEND="std.SUSv3"> header file <FILENAME>&lt;time.h&gt;</FILENAME>.
</PARA>
<PARA>
<VARNAME>__daylight</VARNAME> is not in the source standard;
it is only in the binary standard. <VARNAME>daylight</VARNAME>
is not in the binary standard; it is only in the source standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---environ"> <REFMETA>
<REFENTRYTITLE>__environ</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__environ</REFNAME>
<REFPURPOSE>
alias for environ - user environment 
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
extern char <VARNAME>**__environ</VARNAME>;
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<VARNAME>__environ</VARNAME> is an alias for <VARNAME>environ</VARNAME>
- user environment.
</PARA>
<PARA>
<VARNAME>__environ</VARNAME> has the same specification as 
<VARNAME>environ</VARNAME>.
</PARA>
<PARA>
<VARNAME>__environ</VARNAME> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-errno-location-1"> <REFMETA>
<REFENTRYTITLE>__errno_location</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__errno_location
</REFNAME>
<REFPURPOSE>address of errno variable
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>15 February 2000</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>*__errno_location</FUNCTION></FUNCDEF>
  <VOID>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>15 February 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
</PARA><PARA>
<FUNCTION>__errno_location</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---fpending"> <REFMETA>
<REFENTRYTITLE>__fpending</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__fpending</REFNAME>
<REFPURPOSE>
returns in bytes the amount of output pending on a stream
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;stdio_ext.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>size_t 
  <FUNCTION>__fpending</FUNCTION></FUNCDEF>
 <PARAMDEF>FILE 
  <PARAMETER><REPLACEABLE>*stream</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__fpending</FUNCTION> returns the amount of output in bytes 
pending on a stream.
</PARA>

<PARA>
<FUNCTION>__fpending</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>


<!-- content in __xstat.sgml -->

<!-- content in __xstat64.sgml -->

<REFENTRY ID="baselib---getpagesize"> <REFMETA>
<REFENTRYTITLE>__getpagesize</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__getpagesize</REFNAME>
<REFPURPOSE>
alias for getpagesize - get current page size 
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>29 May 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__getpagesize</FUNCTION></FUNCDEF>
  <VOID>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>29 May 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__getpagesize</FUNCTION> is an alias for 
<FUNCTION>getpagesize</FUNCTION> - get current page size.
</PARA>
<PARA>
<FUNCTION>__getpagesize</FUNCTION> has the same specification as 
<FUNCTION>getpagesize</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__getpagesize</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib---getpgid-1"> <REFMETA>
<REFENTRYTITLE>__getpgid</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__getpgid</REFNAME>
<REFPURPOSE>
get the process group id
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>pid_t 
  <FUNCTION>__getpgid</FUNCTION></FUNCDEF>
 <PARAMDEF>pid_t 
  <PARAMETER><REPLACEABLE>pid</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__getpgid</FUNCTION> has the same specification as 
<FUNCTION>getpgid</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__getpgid</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-h-errno-location-1"> <REFMETA>
<REFENTRYTITLE>__h_errno_location</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__h_errno_location
</REFNAME>
<REFPURPOSE>address of h_errno variable
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>15 February 2000</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>*__h_errno_location</FUNCTION></FUNCDEF>
  <VOID> 
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>15 February 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__h_errno_location</FUNCTION> returns the address of the 
<VARNAME>h_errno</VARNAME> variable, where <VARNAME>h_errno</VARNAME> 
is as specified in the <CITETITLE PUBWORK="BOOK">Single Unix 
Specification</CITETITLE>.
</PARA>
<PARA>
<FUNCTION>__h_errno_location</FUNCTION> is not in the source standard; 
it is only in the binary standard. Note that <VARNAME>h_errno</VARNAME> 
itself is only in the source standard; it is not in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---isinf"> <REFMETA>
<REFENTRYTITLE>__isinf</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__isinf</REFNAME>
<REFPURPOSE>
test for infinity
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__isinf</FUNCTION></FUNCDEF>
 <PARAMDEF>double 
  <PARAMETER><REPLACEABLE>arg</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__isinf</FUNCTION> has the same specification as 
<FUNCTION>isinf</FUNCTION> in the <CITETITLE PUBWORK="BOOK">Single
UNIX Specification, Version 3</CITETITLE>, except that the argument 
type for <FUNCTION>__isinf</FUNCTION> is known to be double.
</PARA>
<PARA>
<FUNCTION>__isinf</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---isinff"> <REFMETA>
<REFENTRYTITLE>__isinff</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__isinff</REFNAME>
<REFPURPOSE>
test for infinity
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__isinff</FUNCTION></FUNCDEF>
 <PARAMDEF>float 
  <PARAMETER><REPLACEABLE>arg</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__isinff</FUNCTION> has the same specification as 
<FUNCTION>isinf</FUNCTION> in the <CITETITLE PUBWORK="BOOK">Single
UNIX Specification, Version 3</CITETITLE>, except that the argument 
type for <FUNCTION>__isinff</FUNCTION> is known to be float.
</PARA>
<PARA>
<FUNCTION>__isinff</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---isinfl"> <REFMETA>
<REFENTRYTITLE>__isinfl</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__isinfl</REFNAME>
<REFPURPOSE>
test for infinity
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__isinfl</FUNCTION></FUNCDEF>
 <PARAMDEF>long double 
  <PARAMETER><REPLACEABLE>arg</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__isinfl</FUNCTION> has the same specification as 
<FUNCTION>isinf</FUNCTION> in the <CITETITLE PUBWORK="BOOK">Single
UNIX Specification, Version 3</CITETITLE>, except that the argument 
type for <FUNCTION>__isinfl</FUNCTION> is known to be long double.
</PARA>
<PARA>
<FUNCTION>__isinfl</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---isnan"> <REFMETA>
<REFENTRYTITLE>__isnan</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__isnan</REFNAME>
<REFPURPOSE>
test for infinity
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__isnan</FUNCTION></FUNCDEF>
 <PARAMDEF>double 
  <PARAMETER><REPLACEABLE>arg</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__isnan</FUNCTION> has the same specification as 
<FUNCTION>isnan</FUNCTION> in the <CITETITLE PUBWORK="BOOK">Single
UNIX Specification, Version 3</CITETITLE>, except that the argument 
type for <FUNCTION>__isnan</FUNCTION> is known to be double.
</PARA>
<PARA>
<FUNCTION>__isnan</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---isnanf"> <REFMETA>
<REFENTRYTITLE>__isnanf</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__isnanf</REFNAME>
<REFPURPOSE>
test for infinity
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__isnanf</FUNCTION></FUNCDEF>
 <PARAMDEF>float 
  <PARAMETER><REPLACEABLE>arg</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__isnanf</FUNCTION> has the same specification as 
<FUNCTION>isnan</FUNCTION> in the <CITETITLE PUBWORK="BOOK">Single
UNIX Specification, Version 3</CITETITLE>, except that the argument 
type for <FUNCTION>__isnanf</FUNCTION> is known to be float.
</PARA>
<PARA>
<FUNCTION>__isnanf</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---isnanl"> <REFMETA>
<REFENTRYTITLE>__isnanl</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__isnanl</REFNAME>
<REFPURPOSE>
test for infinity
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__isnanl</FUNCTION></FUNCDEF>
 <PARAMDEF>long double 
  <PARAMETER><REPLACEABLE>arg</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__isnanl</FUNCTION> has the same specification as 
<FUNCTION>isnan</FUNCTION> in the <CITETITLE PUBWORK="BOOK">Single
UNIX Specification, Version 3</CITETITLE>, except that the argument 
type for <FUNCTION>__isnanl</FUNCTION> is known to be long double.
</PARA>
<PARA>
<FUNCTION>__isnanl</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---libc-current-sigrtmax-1"> <REFMETA>
<REFENTRYTITLE>__libc_current_sigrtmax</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__libc_current_sigrtmax</REFNAME>
<REFPURPOSE>return number of available real-time signal with lowest priority
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__libc_current_sigrtmax</FUNCTION></FUNCDEF>
  <VOID>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__libc_current_sigrtmax</FUNCTION> returns the number of 
an available real-time signal with the lowest priority.
</PARA>
<PARA>
<FUNCTION>__libc_current_sigrtmax</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---libc-current-sigrtmin-1"> <REFMETA>
<REFENTRYTITLE>__libc_current_sigrtmin</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__libc_current_sigrtmin</REFNAME>
<REFPURPOSE>
return number of available real-time signal with highest priority
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__libc_current_sigrtmin</FUNCTION></FUNCDEF>
  <VOID>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__libc_current_sigrtmin</FUNCTION> returns the number of 
an available real-time signal with the highest priority.
</PARA>
<PARA>
<FUNCTION>__libc_current_sigrtmin</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---libc-start-main-"> <REFMETA>
<REFENTRYTITLE>__libc_start_main</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__libc_start_main
</REFNAME>
<REFPURPOSE>
initialization routine
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int
  <FUNCTION>__libc_start_main</FUNCTION></FUNCDEF>
 <PARAMDEF>int (*main) (int, char**, char**)</PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>argc</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char *__unbounded *__unbounded 
  <PARAMETER><REPLACEABLE>ubp_av</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void (*init) (void)</PARAMDEF>
 <PARAMDEF>void (*fini) (void)</PARAMDEF>
 <PARAMDEF>void (*rtld_fini) (void)</PARAMDEF>
 <PARAMDEF>void (*__unbounded
  <REPLACEABLE>stack_end</REPLACEABLE>)</PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>__libc_start_main</FUNCTION> function shall
initialize the process, call the <parameter>main</parameter> function
with appropriate arguments, and handle the return from <function>
main</function>.
</PARA>
<PARA>
<FUNCTION>__libc_start_main</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>

</REFENTRY>

<REFENTRY ID="libutil---lxstat-2"> <REFMETA>
<REFENTRYTITLE>__lxstat</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__lxstat
</REFNAME>
<REFPURPOSE>inline wrapper around call to lxstat
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;ctype.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__lxstat</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>version</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>*__path</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>stat</STRUCTNAME> 
  <PARAMETER>*__statbuf</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__lxstat</FUNCTION> is an inline wrapper around call to 
<FUNCTION>lxstat</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__lxstat</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<!-- content in __xstat64.sgml -->

<REFENTRY ID="baselib---mempcpy"> <REFMETA>
<REFENTRYTITLE>__mempcpy</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__mempcpy</REFNAME>
<REFPURPOSE>
copy given number of bytes of source to destination
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>ptr_t 
  <FUNCTION>__mempcpy</FUNCTION></FUNCDEF>
 <PARAMDEF>ptr_t restrict 
  <PARAMETER><REPLACEABLE>dest</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const ptr_t restrict 
  <PARAMETER><REPLACEABLE>src</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>n</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__mempcpy</FUNCTION> copies <PARAMETER>n</PARAMETER> 
bytes of source to destination, returning pointer to bytes after 
the last written byte.
</PARA>
<PARA>
<FUNCTION>__mempcpy</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib---rawmemchr"> <REFMETA>
<REFENTRYTITLE>__rawmemchr</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__rawmemchr</REFNAME>
<REFPURPOSE>
scan memory
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>ptr_t 
  <FUNCTION>__rawmemchr</FUNCTION></FUNCDEF>
 <PARAMDEF>const ptr_t 
  <PARAMETER><REPLACEABLE>s</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>c</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__rawmemchr</FUNCTION> searches in <PARAMETER>s</PARAMETER> 
for <PARAMETER>c</PARAMETER>.
</PARA>
<PARA>
<FUNCTION>__rawmemchr</FUNCTION> is a weak alias to 
<FUNCTION>rawmemchr</FUNCTION>. It is similar to 
<FUNCTION>memchr</FUNCTION>, but it has no length limit. 
</PARA>
<PARA>
<FUNCTION>__rawmemchr</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib--register-atfork"> <REFMETA>
<REFENTRYTITLE>__register_atfork</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__register_atfork
</REFNAME>
<REFPURPOSE>
alias for register_atfork
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>11 July 2004</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__register_atfork</FUNCTION></FUNCDEF>
 <PARAMDEF>void
  <PARAMETER><REPLACEABLE>(*prepare)()</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void
  <PARAMETER><REPLACEABLE>(*parent)()</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void
  <PARAMETER><REPLACEABLE>(*child)()</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void
  <PARAMETER><REPLACEABLE>*__dso_handle</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>11 July 2004</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__register_atfork</FUNCTION> implements
<FUNCTION>pthread_atfork</FUNCTION> as specified in <XREF LINKEND="std.SUSv3">.
The additional parameter <PARAMETER>__dso_handle</PARAMETER> allows a shared
object to pass in it's handle so that functions registered by
<FUNCTION>__register_atfork</FUNCTION> can be unregistered by the runtime when
the shared object is unloaded.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---sigsetjmp-1"> <REFMETA>
<REFENTRYTITLE>__sigsetjmp</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__sigsetjmp</REFNAME>
<REFPURPOSE>
save stack context for non-local goto
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__sigsetjmp</FUNCTION></FUNCDEF>
 <PARAMDEF>jmp_buf 
  <PARAMETER><REPLACEABLE>env</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>savemask</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__sigsetjmp</FUNCTION> has the same behavior as 
<FUNCTION>sigsetjmp</FUNCTION> as specified by 
<XREF LINKEND=STD.SUSv3>.
</PARA>
<PARA>
<FUNCTION>__sigsetjmp</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="libutil---stpcpy-2"> <REFMETA>
<REFENTRYTITLE>__stpcpy</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__stpcpy
</REFNAME>
<REFPURPOSE>copy a string returning a pointer to its end
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*__stpcpy</FUNCTION></FUNCDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>*dest</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*src</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__stpcpy</FUNCTION> copies the string <PARAMETER>src</PARAMETER> 
(including the terminating <LITERAL>/0</LITERAL> character) to the array 
<PARAMETER>dest</PARAMETER>. The strings may not overlap, and 
<PARAMETER>dest</PARAMETER> must be large enough to receive the copy.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>__stpcpy</FUNCTION> returns a pointer to the end of the string 
<PARAMETER>dest</PARAMETER> (that is, the address of the terminating 
<LITERAL>NULL</LITERAL> character) rather than the beginning.
</PARA>
<PARA>
<FUNCTION>__stpcpy</FUNCTION> has the same specification as 
<FUNCTION>stpcpy</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__stpcpy</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strdup-1"> <REFMETA>
<REFENTRYTITLE>__strdup</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strdup</REFNAME>
<REFPURPOSE>
alias for strdup
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*__strdup</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>string</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__strdup</FUNCTION> has the same specification as 
<FUNCTION>strdup</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__strdup</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strtod-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtod_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtod_internal
</REFNAME>
<REFPURPOSE>underlying function for strtod
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>double 
  <FUNCTION>__strtod_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*__nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>**__endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>__group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__strtod_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__strtod_internal(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>, <LITERAL>0</LITERAL>)</FUNCTION> 
has the same specification as 
<FUNCTION>strtod(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__strtod_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-strtof-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtof_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtof_internal
</REFNAME>
<REFPURPOSE>underlying function for strtof
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>float 
  <FUNCTION>__strtof_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*__nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>**__endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>__group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__strtof_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__strtof_internal(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>, <LITERAL>0</LITERAL>)</FUNCTION> 
has the same specification as 
<FUNCTION>strtof(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__strtof_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strtok-r-1"> <REFMETA>
<REFENTRYTITLE>__strtok_r</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtok_r</REFNAME>
<REFPURPOSE>
alias for strtok_r
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*__strtok_r</FUNCTION></FUNCDEF>
 <PARAMDEF>char *__restrict 
  <PARAMETER><REPLACEABLE>s</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>__const char *__restrict 
  <PARAMETER><REPLACEABLE>delim</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char **__restrict 
  <PARAMETER><REPLACEABLE>save_ptr</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__strtok_r</FUNCTION> has the same specification as 
<FUNCTION>strtok_r</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__strtok_r</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strtol-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtol_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtol_internal
</REFNAME>
<REFPURPOSE>alias for strtol
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>15 February 2000</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>long int 
  <FUNCTION>__strtol_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*__nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>**__endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__base</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>15 February 2000</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>__group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__strtol_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__strtol_internal(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>, <PARAMETER>__base</PARAMETER>, 
<LITERAL>0</LITERAL>)</FUNCTION> has the same specification as 
<FUNCTION>strtol(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>, <PARAMETER>__base</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__strtol_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strtold-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtold_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtold_internal</REFNAME>
<REFPURPOSE>underlying function for strtold
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>long double  
  <FUNCTION>__strtold_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*__nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>**__endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>__group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__strtold_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__strtold_internal(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>, <LITERAL>0</LITERAL>)</FUNCTION> 
has the same specification as 
<FUNCTION>strtold(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__strtold_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strtoll-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtoll_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtoll_internal</REFNAME>
<REFPURPOSE>underlying function for strtoll
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>long long 
  <FUNCTION>__strtoll_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*__nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>**__endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__base</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>__group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__strtoll_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__strtoll_internal(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>, <PARAMETER>__base</PARAMETER>, 
<LITERAL>0</LITERAL>)</FUNCTION> has the same specification as 
<FUNCTION>strtoll(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>, <PARAMETER>__base</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__strtoll_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-strtoul-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtoul_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtoul_internal
</REFNAME>
<REFPURPOSE>underlying function for strtoul
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>unsigned long int 
  <FUNCTION>__strtoul_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*__nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>**__endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__base</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>__group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__strtoul_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__strtoul_internal(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>, <PARAMETER>__base</PARAMETER>, 
<LITERAL>0</LITERAL>)</FUNCTION> has the same specification as 
<FUNCTION>strtoul(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>, <PARAMETER>__base</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__strtoul_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---strtoull-internal-1"> <REFMETA>
<REFENTRYTITLE>__strtoull_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__strtoull_internal</REFNAME>
<REFPURPOSE>underlying function for strtoull
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>unsigned long long 
  <FUNCTION>__strtoull_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*__nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>**__endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__base</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>__group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>__group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__strtoull_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__strtoull_internal(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>, <PARAMETER>__base</PARAMETER>, 
<LITERAL>0</LITERAL>)</FUNCTION> has the same specification as 
<FUNCTION>strtoull(<PARAMETER>__nptr</PARAMETER>, 
<PARAMETER>__endptr</PARAMETER>, <PARAMETER>__base</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__strtoull_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---sysconf"> <REFMETA>
<REFENTRYTITLE>__sysconf</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__sysconf</REFNAME>
<REFPURPOSE>
get configuration information at runtime
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;unistd.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>long 
  <FUNCTION>__sysconf</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>name</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__sysconf</FUNCTION> gets configuration information at runtime.
</PARA>
<PARA>
<FUNCTION>__sysconf</FUNCTION> is weak alias to 
<FUNCTION>sysconf</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__sysconf</FUNCTION> has the same specification as 
<FUNCTION>sysconf</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__sysconf</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib---sysv-signal-1"> <REFMETA>
<REFENTRYTITLE>__sysv_signal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__sysv_signal</REFNAME>
<REFPURPOSE>
signal handling
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>__sighandler_t 
  <FUNCTION>__sysv_signal</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>sig</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>__sighandler_t 
  <PARAMETER><REPLACEABLE>handler</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__sysv_signal</FUNCTION> has the same behavior as 
<FUNCTION>signal</FUNCTION> as specified by 
<XREF LINKEND=STD.SUSv3>.
</PARA>
<PARA>
<FUNCTION>__sysv_signal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-timezone-1"> <REFMETA>
<REFENTRYTITLE>__timezone</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>
</REFNAME>
<REFPURPOSE>
global variable containing timezone
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<SYNOPSIS>
long int <VARNAME>__timezone</VARNAME>;
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__timezone</FUNCTION> has the same specification as 
<FUNCTION>timezone</FUNCTION> in the 
<CITETITLE PUBWORK="BOOK"><XREF LINKEND=STD.SUSv3></CITETITLE>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-tzname-1"> <REFMETA>
<REFENTRYTITLE>__tzname</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>
</REFNAME>
<REFPURPOSE>
global variable containing the timezone
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<SYNOPSIS>
char <VARNAME>*__tzname</VARNAME>[2];
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__tzname</FUNCTION> has the same specification as 
<FUNCTION>tzname</FUNCTION> in the 
<CITETITLE PUBWORK="BOOK"><XREF LINKEND=STD.SUSv3></CITETITLE>.
</PARA>
<PARA>
Note that the array size of <LITERAL>2</LITERAL> is explicit in the 
<CITETITLE PUBWORK="BOOK"><XREF LINKEND=STD.SUSv3>
</CITETITLE>, but not in the
<CITETITLE PUBWORK="BOOK"><XREF LINKEND=STD.SUSv2>
</CITETITLE>.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstod-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstod_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstod_internal</REFNAME>
<REFPURPOSE>underlying function for wcstod
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>double 
  <FUNCTION>__wcstod_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const wchar_t 
  <PARAMETER><REPLACEABLE>*nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>wchar_t 
  <PARAMETER><REPLACEABLE>**endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__wcstod_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__wcstod_internal(<PARAMETER>nptr</PARAMETER>, 
<PARAMETER>endptr</PARAMETER>, <LITERAL>0</LITERAL>)</FUNCTION> 
has the same specification as 
<FUNCTION>wcstod(<PARAMETER>nptr</PARAMETER>, 
<PARAMETER>endptr</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__wcstod_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstof-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstof_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstof_internal</REFNAME>
<REFPURPOSE>underlying function for wcstof
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>float 
  <FUNCTION>__wcstof_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const wchar_t 
  <PARAMETER><REPLACEABLE>*nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>wchar_t 
  <PARAMETER><REPLACEABLE>**endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__wcstof_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__wcstof_internal(<PARAMETER>nptr</PARAMETER>, 
<PARAMETER>endptr</PARAMETER>, <LITERAL>0</LITERAL>)</FUNCTION> 
has the same specification as 
<FUNCTION>wcstof(<PARAMETER>nptr</PARAMETER>, 
<PARAMETER>endptr</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__wcstof_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstol-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstol_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstol_internal</REFNAME>
<REFPURPOSE>underlying function for wcstol
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>long 
  <FUNCTION>__wcstol_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const wchar_t 
  <PARAMETER><REPLACEABLE>*nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>wchar_t 
  <PARAMETER><REPLACEABLE>**endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>base</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__wcstol_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__wcstol_internal(<PARAMETER>nptr</PARAMETER>, 
<PARAMETER>endptr</PARAMETER>, <PARAMETER>base</PARAMETER>, 
<LITERAL>0</LITERAL>)</FUNCTION> has the same specification as 
<FUNCTION>wcstol(<PARAMETER>nptr</PARAMETER>, 
<PARAMETER>endptr</PARAMETER>, <PARAMETER>base</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__wcstol_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstold-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstold_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstold_internal</REFNAME>
<REFPURPOSE>underlying function for wcstold
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>long double 
  <FUNCTION>__wcstold_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const wchar_t 
  <PARAMETER><REPLACEABLE>*nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>wchar_t 
  <PARAMETER><REPLACEABLE>**endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__wcstold_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__wcstold_internal(<PARAMETER>nptr</PARAMETER>, 
<PARAMETER>endptr</PARAMETER>, <LITERAL>0</LITERAL>)</FUNCTION> 
has the same specification as 
<FUNCTION>wcstold(<PARAMETER>nptr</PARAMETER>, 
<PARAMETER>endptr</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__wcstold_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---wcstoul-internal-1"> <REFMETA>
<REFENTRYTITLE>__wcstoul_internal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__wcstoul_internal</REFNAME>
<REFPURPOSE>underlying function for wcstoul
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>unsigned long 
  <FUNCTION>__wcstoul_internal</FUNCTION></FUNCDEF>
 <PARAMDEF>const wchar_t *restrict 
  <PARAMETER><REPLACEABLE>nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>wchar_t **restrict 
  <PARAMETER><REPLACEABLE>endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>base</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<PARAMETER>group</PARAMETER> shall be <LITERAL>0</LITERAL> or the 
behavior of <FUNCTION>__wcstoul_internal</FUNCTION> is undefined. 
</PARA>
<PARA>
<FUNCTION>__wcstoul_internal(<PARAMETER>nptr</PARAMETER>, 
<PARAMETER>endptr</PARAMETER>, <PARAMETER>base</PARAMETER>, 
<LITERAL>0</LITERAL>)</FUNCTION> has the same specification as 
<FUNCTION>wcstoul(<PARAMETER>nptr</PARAMETER>, 
<PARAMETER>endptr</PARAMETER>, <PARAMETER>base</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>__wcstoul_internal</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib---xmknod-1"> <REFMETA>
<REFENTRYTITLE>__xmknod</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__xmknod</REFNAME>
<REFPURPOSE>
make block or character special file
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>4 March 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__xmknod</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>ver</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*path</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>mode_t 
  <PARAMETER><REPLACEABLE>mode</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>dev_t 
  <PARAMETER><REPLACEABLE>*dev</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>__xmknod</FUNCTION> shall implement the
<FUNCTION>mknod</FUNCTION> interface from <XREF LINKEND=STD.SUSv3>.
</PARA>
<PARA>
<FUNCTION>__xmknod(<LITERAL>1</LITERAL>, 
<PARAMETER>path</PARAMETER>, <PARAMETER>mode</PARAMETER>, 
<PARAMETER>dev</PARAMETER>)</FUNCTION> has the same specification as 
<FUNCTION>mknod(<PARAMETER>path</PARAMETER>, 
<PARAMETER>mode</PARAMETER>, <PARAMETER>dev</PARAMETER>)</FUNCTION>.
</PARA>
<PARA>
<PARAMETER>ver</PARAMETER> shall be <LITERAL>1</LITERAL> or the 
behavior of <FUNCTION>__xmknod</FUNCTION> is undefined. 
</PARA>
<PARA>
The <FUNCTION>__xmknod</FUNCTION> function is not in the source standard; 
it is only in the binary standard.
The <FUNCTION>mknod</FUNCTION> function is not in the binary standard; 
it is only in the source standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-xstat-1"> <REFMETA>
<REFENTRYTITLE>__xstat</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__xstat
</REFNAME>
<REFPURPOSE>Get File Status
</REFPURPOSE>
<INDEXTERM ID="ix-baselib-xstat-1"><PRIMARY>stat</PRIMARY></INDEXTERM>
<INDEXTERM ID="ix-baselib-xstat-2"><PRIMARY>xstat</PRIMARY></INDEXTERM>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>4 March 1996</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sys/stat.h&gt;
#include &lt;unistd.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__xstat</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>ver</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*path</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>stat</STRUCTNAME> 
  <PARAMETER>*stat_buf</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__lxstat</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>ver</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*path</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>stat</STRUCTNAME> 
  <PARAMETER>*stat_buf</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__fxstat</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>ver</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>fildes</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>stat</STRUCTNAME> 
  <PARAMETER>*stat_buf</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>5 March 1996</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The functions 
<function>__xstat</function>,
<function>__lxstat</function>, and
<function>__fxstat</function> shall implement
the <XREF LINKEND=STD.SUSv3> functions
<function>stat</function>,
<function>lstat</function>, and
<function>fstat</function> respectively.
</PARA>
<PARA>
<PARAMETER>ver</PARAMETER> shall be <LITERAL>3</LITERAL> or the 
behavior of these functions is undefined. 
</PARA>
<PARA>
<FUNCTION>__xstat(<LITERAL>3</LITERAL>, <PARAMETER>path</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> shall behave as
<FUNCTION>stat(<PARAMETER>path</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> as specified by 
<XREF LINKEND=STD.SUSv3>.
</PARA>
<PARA>
<FUNCTION>__lxstat(<LITERAL>3</LITERAL>, <PARAMETER>path</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> shall behave as
<FUNCTION>lstat(<PARAMETER>path</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> as specified by 
<XREF LINKEND=STD.SUSv3>.
</PARA>
<PARA>
<FUNCTION>__fxstat(<LITERAL>3</LITERAL>, <PARAMETER>fildes</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> shall behave as
<FUNCTION>fstat(<PARAMETER>fildes</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> as specified by 
<XREF LINKEND=STD.SUSv3>.
</PARA>
<PARA>
<FUNCTION>__xstat</FUNCTION>, <FUNCTION>__lxstat</FUNCTION>, and 
<FUNCTION>__fxstat</FUNCTION> are not in the source standard; 
they are only in the binary standard.
</PARA>
<PARA>
<FUNCTION>stat</FUNCTION>, <FUNCTION>lstat</FUNCTION>, and  
<FUNCTION>fstat</FUNCTION> are not in the binary standard; 
they are only in the source standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-xstat64-1"> <REFMETA>
<REFENTRYTITLE>__xstat64</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__xstat64
</REFNAME>
<REFPURPOSE>Get File Status
</REFPURPOSE>
<INDEXTERM ID="ix-baselib-xstat64-1"><PRIMARY>stat64</PRIMARY></INDEXTERM>
<INDEXTERM ID="ix-baselib-xstat64-2"><PRIMARY>lstat64</PRIMARY></INDEXTERM>
<INDEXTERM ID="ix-baselib-xstat64-3"><PRIMARY>fstat64</PRIMARY></INDEXTERM>
<INDEXTERM ID="ix-baselib-xstat64-4"><PRIMARY>__xstat64</PRIMARY></INDEXTERM>
<INDEXTERM ID="ix-baselib-xstat64-5"><PRIMARY>__lxstat64</PRIMARY></INDEXTERM>
<INDEXTERM ID="ix-baselib-xstat64-6"><PRIMARY>__fxstat64</PRIMARY></INDEXTERM>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>4 Mar 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#define _LARGEFILE_SOURCE 1
#include &lt;sys/stat.h&gt;
#include &lt;unistd.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__xstat64</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>ver</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*path</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>stat64</STRUCTNAME> 
  <PARAMETER>*stat_buf</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__lxstat64</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>ver</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*path</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>stat64</STRUCTNAME> 
  <PARAMETER>*stat_buf</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>__fxstat64</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>ver</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>fildes</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>stat64</STRUCTNAME> 
  <PARAMETER>*stat_buf</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>4 March 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The functions 
<function>__xstat64</function>,
<function>__lxstat64</function>, and
<function>__fxstat64</function> shall implement
the <XREF LINKEND=STD.LFS> functions
<function>stat64</function>,
<function>lstat64</function>, and
<function>fstat64</function> respectively.
</PARA>
<PARA>
<PARAMETER>ver</PARAMETER> shall be <LITERAL>3</LITERAL> or the 
behavior of these functions is undefined. 
</PARA>
<PARA>
<FUNCTION>__xstat64(<LITERAL>3</LITERAL>, <PARAMETER>path</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> shall behave as
<FUNCTION>stat(<PARAMETER>path</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> as specified by 
<XREF LINKEND=STD.LFS>.
</PARA>
<PARA>
<FUNCTION>__lxstat64(<LITERAL>3</LITERAL>, <PARAMETER>path</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> shall behave as
<FUNCTION>lstat(<PARAMETER>path</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> as specified by 
<XREF LINKEND=STD.LFS>.
</PARA>
<PARA>
<FUNCTION>__fxstat64(<LITERAL>3</LITERAL>, <PARAMETER>fildes</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> shall behave as
<FUNCTION>fstat(<PARAMETER>fildes</PARAMETER>, 
<PARAMETER>stat_buf</PARAMETER>)</FUNCTION> as specified by 
<XREF LINKEND=STD.LFS>.
</PARA>
<PARA>
<FUNCTION>__xstat64</FUNCTION>, <FUNCTION>__lxstat64</FUNCTION>, and 
<FUNCTION>__fxstat64</FUNCTION> are not in the source standard; 
they are only in the binary standard.
</PARA>
<PARA>
<FUNCTION>stat64</FUNCTION>, <FUNCTION>lstat64</FUNCTION>, and  
<FUNCTION>fstat64</FUNCTION> are not in the binary standard; 
they are only in the source standard.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--environ"> <REFMETA>
<REFENTRYTITLE>_environ</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_environ</REFNAME>
<REFPURPOSE>
alias for environ - user environment 
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
extern char <VARNAME>**_environ</VARNAME>;
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<VARNAME>_environ</VARNAME> is an alias for 
<VARNAME>environ</VARNAME> - user environment.
</PARA>

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib--nl-msg-cat-cntr"> <REFMETA>
<REFENTRYTITLE>_nl_msg_cat_cntr</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_nl_msg_cat_cntr</REFNAME>
<REFPURPOSE>
new catalog load counter
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;libintl.h&gt;

extern int <VARNAME>_nl_msg_cat_cntr</VARNAME>;
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<VARNAME>_nl_msg_cat_cntr</VARNAME> is incremented each time a new
catalong is loaded. It is a variable defined in 
<FILENAME>loadmsgcat.c</FILENAME> and is used by Message catalogs 
for internationalization.  
</PARA>

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib--obstack-begin"> <REFMETA>
<REFENTRYTITLE>_obstack_begin</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_obstack_begin</REFNAME>
<REFPURPOSE>
initialize an obstack for use
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;obstack.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>_obstack_begin</FUNCTION></FUNCDEF>
 <PARAMDEF>struct obstack *</PARAMDEF>
 <PARAMDEF>int</PARAMDEF>
 <PARAMDEF>int</PARAMDEF>
 <PARAMDEF>void *(*) (long)</PARAMDEF>
 <PARAMDEF>void (*) (void *)</PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_obstack_begin</FUNCTION> initializes an obstack for use.
</PARA>

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib--obstack-newchunk"> <REFMETA>
<REFENTRYTITLE>_obstack_newchunk</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_obstack_newchunk</REFNAME>
<REFPURPOSE>
allocate a new current chunk of memory for the obstack
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;obstack.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>_obstack_newchunk</FUNCTION></FUNCDEF>
 <PARAMDEF>struct obstack *</PARAMDEF>
 <PARAMDEF>int</PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_obstack_newchunk</FUNCTION> allocates a new current chunk 
of memory for the obstack. 
</PARA>

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib--sys-errlist"> <REFMETA>
<REFENTRYTITLE>_sys_errlist</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_sys_errlist</REFNAME>
<REFPURPOSE>
array containing the "C" locale strings used by strerror()
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;stdio.h&gt;

extern const char *const <VARNAME>_sys_errlist</VARNAME>[];
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<VARNAME>_sys_errlist</VARNAME> is an array containing the "C" locale 
strings used by <FUNCTION>strerror</FUNCTION>. This normally should not 
be used directly. <FUNCTION>strerror</FUNCTION> provides all of the 
needed functionality.
</PARA>

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib--sys-siglist"> <REFMETA>
<REFENTRYTITLE>_sys_siglist</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_sys_siglist</REFNAME>
<REFPURPOSE>
array containing the names of the signal names
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;signal.h&gt;

extern const char *const <VARNAME>_sys_siglist</VARNAME>[NSIG];
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<VARNAME>_sys_siglist</VARNAME> is an array containing the names of 
the signal names.
</PARA>
<PARA>
The <VARNAME>_sys_siglist</VARNAME> array 
is only in the binary standard; it is not in the source standard.
Applications wishing to access the names of signals should use
the <function>strsignal</function> function.
</PARA>

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-acct-3"> <REFMETA>
<REFENTRYTITLE>acct</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>acct</REFNAME>
<REFPURPOSE>
switch process accounting on or off
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;dirent.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>acct</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*filename</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
When <PARAMETER>filename</PARAMETER> is the name of an existing file, 
<FUNCTION>acct</FUNCTION> turns accounting on and appends a record to
<PARAMETER>filename</PARAMETER> for each terminating process. When
<PARAMETER>filename</PARAMETER> is <LITERAL>NULL</LITERAL>,
<FUNCTION>acct</FUNCTION> turns accounting off.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
ENOSYS 
</TERM>
<LISTITEM>
<PARA>
<ACRONYM>BSD</ACRONYM> process accounting has not been enabled when 
the operating system kernel was compiled.  The kernel configuration 
parameter controlling this feature is 
<PARAMETER>CONFIG_BSD_PROCESS_ACCT</PARAMETER>.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
ENOMEM 
</TERM>
<LISTITEM>
<PARA>
Out of memory.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EPERM  
</TERM>
<LISTITEM>
<PARA>
The calling process has no permission to enable process accounting.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EACCES 
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>filename</PARAMETER> is not a regular file.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EIO    
</TERM>
<LISTITEM>
<PARA>
Error writing to the <PARAMETER>filename</PARAMETER>.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EUSERS 
</TERM>
<LISTITEM>
<PARA>
There are no more free file structures or we run out of memory.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-adjtime-2"> <REFMETA>
<REFENTRYTITLE>adjtime</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>adjtime
</REFNAME>
<REFPURPOSE>
correct the time to allow synchronization of the system clock
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;time.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>adjtime</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>const struct <STRUCTNAME>timeval</STRUCTNAME> 
  <PARAMETER>*delta</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>timeval</STRUCTNAME> 
  <PARAMETER>*olddelta</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>adjtime</FUNCTION> makes small adjustments to the system time 
as returned by <FUNCTION>gettimeofday</FUNCTION>(2), advancing or retarding 
it by the time specified by the timeval <PARAMETER>delta</PARAMETER>. 
If <PARAMETER>delta</PARAMETER> is negative, the clock is slowed down 
by incrementing it more slowly than normal until the correction is complete. 
If <PARAMETER>delta</PARAMETER> is positive, a larger increment than
normal is used. The skew used to perform the correction is generally a
fraction of one percent. Thus, the time is always a monotonically
increasing function. A time correction from an earlier call to
<FUNCTION>adjtime</FUNCTION> may not be finished when 
<FUNCTION>adjtime</FUNCTION> is called again. If
<PARAMETER>olddelta</PARAMETER> is non-<LITERAL>NULL</LITERAL>, the 
structure pointed to will contain, upon return, the number of microseconds 
still to be corrected from the earlier call.
</PARA>
<PARA>
<FUNCTION>adjtime</FUNCTION> may be used by time servers that synchronize 
the clocks of computers in a local area network. Such time servers would 
slow down the clocks of some machines and speed up the clocks of others to 
bring them to the average network time.
</PARA><PARA>
The <FUNCTION>adjtime</FUNCTION> is restricted to the super-user.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>
Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>
Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EFAULT
</TERM>
<LISTITEM>
<PARA>
An argument points outside the process's allocated address space.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EPERM
</TERM>
<LISTITEM>
<PARA>
The process's effective user ID is not that of the super-user.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>
</REFSECT1>
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</REFENTRY>

<REFENTRY ID="baselib-adjtimex-3"> <REFMETA>
<REFENTRYTITLE>adjtimex</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>adjtimex</REFNAME>
<REFPURPOSE>
tune kernel clock (DEPRECATED)
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sys/timex.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>adjtimex</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>timex</STRUCTNAME> 
  <PARAMETER>*buf</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>

<para>
The <function>adjtimex</function> function is deprecated from the LSB and
is expected to disappear from a future version of the LSB.
<footnote>
<para>
The LSB generally does not include interfaces unlikely to be used by
software applications.
</para>
</footnote>
</para>

<PARA>
Linux uses David L. Mills' clock adjustment algorithm (see 
<CITETITLE PUBWORK="ARTICLE">RFC 1305</CITETITLE>). 
<FUNCTION>adjtimex</FUNCTION> reads and optionally sets adjustment 
parameters for this algorithm. <FUNCTION>adjtimex</FUNCTION> takes 
a pointer to a <STRUCTNAME>timex</STRUCTNAME> structure, updates 
kernel parameters from field values, and returns the same structure 
with current kernel values. This structure is declared as follows:
<SYNOPSIS>
  struct timex {
            int  modes;          /* mode selector */
            long offset;         /* time offset (usec) */
            long freq;           /* frequency offset (scaled ppm) */
            long maxerror;       /* maximum error (usec) */
            long esterror;       /* estimated error (usec) */
            int  status;         /* clock command/status */
            long constant;       /* pll time constant */
            long precision;      /* clock precision (usec) (read only) */
            long tolerance;      /* clock frequency tolerance (ppm)
                                          (read only) */
            struct timeval time; /* current time (read only) */
            long tick;           /* usecs between clock ticks */
  };
</SYNOPSIS>
</PARA>
<PARA>
<STRUCTFIELD>modes</STRUCTFIELD> determines which parameters, if any, 
to set. <STRUCTFIELD>modes</STRUCTFIELD> may contain a bitwise-or 
combination of zero or more of the following bits:
<SYNOPSIS>
  #define ADJ_OFFSET            0x0001  /* time offset */
  #define ADJ_FREQUENCY         0x0002  /* frequency offset */
  #define ADJ_MAXERROR          0x0004  /* maximum time error */
  #define ADJ_ESTERROR          0x0008  /* estimated time error */
  #define ADJ_STATUS            0x0010  /* clock status */
  #define ADJ_TIMECONST         0x0020  /* pll time constant */
  #define ADJ_TICK              0x4000  /* tick value */
  #define ADJ_OFFSET_SINGLESHOT 0x8001  /* old-fashioned adjtime */
</SYNOPSIS>
</PARA>
<PARA>
Ordinary users are restricted to a <LITERAL>0</LITERAL> value for 
<STRUCTFIELD>modes</STRUCTFIELD>. Only the superuser may set any 
parameters.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <FUNCTION>adjtimex</FUNCTION> returns the clock state:
<SYNOPSIS>
  #define TIME_OK   0  /* clock synchronized */
  #define TIME_INS  1  /* insert leap second */
  #define TIME_DEL  2  /* delete leap second */
  #define TIME_OOP  3  /* leap second in progress */
  #define TIME_WAIT 4  /* leap second has occurred */
  #define TIME_BAD  5  /* clock not synchronized */
</SYNOPSIS>
</PARA>
<PARA>
On error, the global variable <VARNAME>errno</VARNAME> is set to
<LITERAL>-1</LITERAL>.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Errors
</TITLE>

<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EFAULT 
</TERM>
<LISTITEM>
<PARA>
<STRUCTNAME>buf</STRUCTNAME> does not point to writable memory.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EPERM  
</TERM>
<LISTITEM>
<PARA>
<STRUCTFIELD>buf.mode</STRUCTFIELD> is nonzero 
and the user is not super-user.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EINVAL 
</TERM>
<LISTITEM>
<PARA>
An attempt is made to set <STRUCTFIELD>buf.offset</STRUCTFIELD> 
to a value outside of the range <LITERAL>-131071</LITERAL> to 
<LITERAL>+131071</LITERAL>, or to set <STRUCTFIELD>buf.status</STRUCTFIELD> 
to a value other than those listed above, or to set 
<STRUCTFIELD>buf.tick</STRUCTFIELD> to a value outside of the range 
<LITERAL>900000</LITERAL>/<VARNAME>HZ</VARNAME> to 
<LITERAL>1100000</LITERAL>/<VARNAME>HZ</VARNAME>, where 
<VARNAME>HZ</VARNAME> is the system timer interrupt frequency.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>


<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-asprintf"> <REFMETA>
<REFENTRYTITLE>asprintf</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>asprintf</REFNAME>
<REFPURPOSE>
write formatted output to a dynamically allocated string
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;stdio.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>asprintf</FUNCTION></FUNCDEF>
 <PARAMDEF>char ** restrict 
  <PARAMETER><REPLACEABLE>ptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char * restrict
  <PARAMETER><REPLACEABLE>format</REPLACEABLE></PARAMETER>
  <PARAMETER>...</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>asprintf</FUNCTION> function shall behave as
<FUNCTION>sprintf</FUNCTION>, except that the output string
shall be dynamically allocated space of sufficient length to hold
the resulting string. The address of this dynamically allocated string
shall be stored in the location referenced by <PARAMETER>ptr</PARAMETER>.
</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
Refer to <FUNCTION>fprintf</FUNCTION>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
Refer to <FUNCTION>fprintf</FUNCTION>.
</PARA>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="baselib-bind-textdomain-codeset"> <REFMETA>
<REFENTRYTITLE>bind_textdomain_codeset</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>bind_textdomain_codeset</REFNAME>
<REFPURPOSE>
specify encoding for message retrieval
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;libintl.h>
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
  <FUNCDEF>char *
   <FUNCTION>bind_textdomain_codeset</FUNCTION>
  </FUNCDEF>
  <PARAMDEF>const char *
     <PARAMETER>domainname</PARAMETER>
  </PARAMDEF>
  <PARAMDEF>const char *
     <PARAMETER>codeset</PARAMETER>
  </PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <emphasis>bind_textdomain_codeset</emphasis> function can be used to
specify the output codeset for message catalogs for domain 
<parameter>domainname</parameter>.  The <parameter>codeset</parameter>
argument shall be a valid codeset name which can be used tor the
<parameter>iconv_open</parameter> function, or a null pointer.
If the <parameter>codeset</parameter> argument is the null pointer, then 
function returns the currently selected codeset for the domain with the name
<parameter>domainname</parameter>.  It shall return a null pointer if no
codeset has yet been selected
</PARA>
<PARA>
Each successive call to <function>bind_textdomain_codeset</function>
function overrrides the
settings made by the preceding call with the same <parameter>domainname</parameter>.
</PARA>
<PARA>
The <function>bind_textdomain_codeset</function> function shall return 
a pointer to a string containing the name of the selected codeset. 
The string shall be allocated
internally in the function and shall not be changed or freed by the user.
</PARA>
<PARA>
The <function>bind_textdomain_codeset</function> function returns
a pointer to a string containing the name of the selected codeset. 
The string is allocated internally in the function and
shall not be changed by the user.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Parameters</TITLE>
<VARIABLELIST>

<VARLISTENTRY>
<TERM>
domainname
</TERM>
<LISTITEM>
<PARA>
The <parameter>domainname</parameter> argument is applied to the currently 
active LC_MESSAGE locale.  It is equivalent in syntax and meaning to
the <parameter>domainname</parameter> argument 
to <parameter>textdomain</parameter>, except that the selection of the 
domain is valid only for the duration of
the call.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
codeset
</TERM>
<LISTITEM>
<PARA>
The name of the output codeset for the selected domain, or NULL to select
the current codeset.
</PARA>
<PARA>
If <PARAMETER>domainname</PARAMETER> is the null pointer, or is an empty
string, <FUNCTION>bind_textdomain_codeset</FUNCTION> shall fail, but need not
set <VarName>errno</VarName>.
</PARA>

</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
Returns the currently selected codeset name.  It returns a null
pointer if no codeset has yet been selected.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
ENOMEM
</TERM>
<LISTITEM>
<PARA>
Insufficient memory available to allocate return value.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>

<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<ulink url="baselib-gettext.html">gettext</ulink>, dgettext, ngettext, 
dngettext, dcgettext, dcngettext, textdomain,
bindtextdomain
</PARA>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="baselib-bindresvport-3"> <REFMETA>
<REFENTRYTITLE>bindresvport</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>bindresvport</REFNAME>
<REFPURPOSE>
bind socket to privileged IP port
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>29 May 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sys/types.h&gt;
#include &lt;rpc.rpc.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>bindresvport</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>sd</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>struct sockaddr_in 
  <PARAMETER><REPLACEABLE>*sin</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>29 May 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
If the process has appropriate privilege, the
<FUNCTION>bindresvport</FUNCTION> function shall bind
a socket to a privileged IP 
port.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
<CONSTANT>EPERM</CONSTANT>
</TERM>
<LISTITEM>
<PARA>
The process did not have appropriate privilege.
<PARAMETER>sd</PARAMETER>.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
<CONSTANT>EPFNOSUPPORT</CONSTANT>
</TERM>
<LISTITEM>
<PARA>
Address of <PARAMETER>sin</PARAMETER> did not match address family of
<PARAMETER>sd</PARAMETER>.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-bindtextdomain"> <REFMETA>
<REFENTRYTITLE>bindtextdomain</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>bindtextdomain</REFNAME>
<REFPURPOSE>
specify the location of a message catalog
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;libintl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*bindtextdomain</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*domainname</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*dirname</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>bindtextdomain</FUNCTION> shall set the the base
directory of the hierarchy containing message catalogs for a given message
domain.
</PARA>
<PARA>
The <FUNCTION>bindtextdomain</FUNCTION> function specifies that the 
<PARAMETER>domainname</PARAMETER> message catalog can be found in the 
<PARAMETER>dirname</PARAMETER> directory hierarchy, rather than in the 
system default locale data base.
</PARA>
<PARA>
If <PARAMETER>dirname</PARAMETER> is not 
<CONSTANT>NULL</CONSTANT>, the base directory for message catalogs 
belonging  to  domain 
<PARAMETER>domainname</PARAMETER> shall be set to 
<PARAMETER>dirname</PARAMETER>. 
If <PARAMETER>dirname</PARAMETER> is <CONSTANT>NULL</CONSTANT>,
the base directory for message catalogs shall not be altered.
</PARA>
<PARA>
The function shall make
copies of the argument strings as needed.
</PARA>
<PARA>
<PARAMETER>dirname</PARAMETER> can be an absolute or relative pathname.
<NOTE><PARA>Applications that wish to use <FUNCTION>chdir</FUNCTION>
should always use absolute pathnames to avoid misadvertently
selecting the wrong or non-existant directory.
</PARA></NOTE>
</PARA>
<PARA>
If <PARAMETER>domainname</PARAMETER> is the null pointer, or is an empty
string, <FUNCTION>bindtextdomain</FUNCTION> shall fail, but need not
set <VarName>errno</VarName>.
</PARA>
<PARA>
The <function>bindtextdomain</function> function shall return 
a pointer to a string containing the name of the selected directory. 
The string shall be allocated
internally in the function and shall not be changed or freed by the user.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
On success, <FUNCTION>bindtextdomain</FUNCTION> shall return a
pointer to a string containing the 
directory pathname currently bound to the domain. On failure, a 
<LITERAL>NULL</LITERAL> pointer is returned, and the global variable
<VarName>errno</VarName> may be set to indicate the error.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>

<PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM><CONSTANT>ENOMEM</CONSTANT></TERM>
<LISTITEM>
<PARA>
Insufficient memory was available.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<ulink url="baselib-gettext.html">gettext</ulink>, dgettext, ngettext, 
dngettext, dcgettext, dcngettext, textdomain,
bind_textdomain_codeset
</PARA>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="baselib-cfmakeraw-3"> <REFMETA>
<REFENTRYTITLE>cfmakeraw</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>cfmakeraw</REFNAME>
<REFPURPOSE>
get and set terminal attributes
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;termios.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>cfmakeraw</FUNCTION></FUNCDEF>
 <PARAMDEF>struct termios *termios_p</PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <function>cfmakeraw</function> function shall set the
attributes of the <structname>termios</structname> structure referenced
by <parameter>termios_p</parameter> as follows:
<SYNOPSIS>
  termios_p->c_iflag &= ~(IGNBRK|BRKINT|PARMRK|ISTRIP
                          |INLCR|IGNCR|ICRNL|IXON);

  termios_p->c_oflag &= ~OPOST;

  termios_p->c_lflag &= ~(ECHO|ECHONL|ICANON|ISIG|IEXTEN);

  termios_p->c_cflag &= ~(CSIZE|PARENB);

  termios_p->c_cflag |= CS8;
</SYNOPSIS>
</PARA>
<PARA>
<PARAMETER>termios_p</PARAMETER> shall point to a 
<STRUCTNAME>termios</STRUCTNAME> structure that contains the 
following members:
<SYNOPSIS>
  tcflag_t c_iflag;      /* input modes */
  tcflag_t c_oflag;      /* output modes */
  tcflag_t c_cflag;      /* control modes */
  tcflag_t c_lflag;      /* local modes */
  cc_t c_cc[NCCS];       /* control chars */
</SYNOPSIS>
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>


<REFENTRY ID="baselib-cfsetspeed-3"> <REFMETA>
<REFENTRYTITLE>cfsetspeed</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>cfsetspeed
</REFNAME>
<REFPURPOSE>
set terminal input and output data rate
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April  2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;termios.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>cfsetspeed</FUNCTION></FUNCDEF>
 <PARAMDEF>struct termios *t</PARAMDEF>
 <PARAMDEF>speedt 
  <PARAMETER><REPLACEABLE>speed</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>cfsetspeed</FUNCTION> sets the baud rate values in the 
<STRUCTNAME>termios</STRUCTNAME> structure. The effects of the 
function on the terminal as described below do not become effective, 
nor are all errors detected, until the <FUNCTION>tcsetattr</FUNCTION> 
function is called. Certain values for baud rates set in 
<STRUCTNAME>termios</STRUCTNAME> and passed to 
<FUNCTION>tcsetattr</FUNCTION> have special meanings.
</PARA>

<REFSECT2>
<TITLE>Getting and Setting the Baud Rate
</TITLE>
<PARA>
Input and output baud rates are found in the 
<STRUCTNAME>termios</STRUCTNAME> structure. The unsigned integer 
<STRUCTFIELD>speed_t</STRUCTFIELD> is typdef'd in the include file 
<FILENAME>termios.h</FILENAME>. The value of the integer corresponds 
directly to the baud rate being represented; however, the following 
symbolic values are defined.
<SYNOPSIS>
  #define B0      0
  #define B50     50
  #define B75     75
  #define B110    110
  #define B134    134
  #define B150    150
  #define B200    200
  #define B300    300
  #define B600    600
  #define B1200   1200
  #define B1800   1800
  #define B2400   2400
  #define B4800   4800
  #define B9600   9600
  #define B19200  19200
  #define B38400  38400
  #ifndef _POSIX_SOURCE
  #define EXTA    19200
  #define EXTB    38400
  #endif  /*_POSIX_SOURCE */
</SYNOPSIS>
</PARA>
<PARA>
<FUNCTION>cfsetspeed</FUNCTION> sets both the input and output baud 
rates in the <STRUCTNAME>termios</STRUCTNAME> structure referenced by 
<VARNAME>t</VARNAME> to <PARAMETER>speed</PARAMETER>.
</PARA>
</REFSECT2>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EINVAL
</TERM>
<LISTITEM>
<PARA>
Invalid <parameter>speed</parameter> argument
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>

<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</REFENTRY>

<refentry id="baselib-creat-1">

<refmeta>
<refentrytitle>creat</refentrytitle>
<refmiscinfo>Base Libraries</refmiscinfo>
</refmeta>

<refnamediv>
<refname>creat</refname>
<refpurpose>open a file</refpurpose>
<indexterm id="ix-baselib-creat-1">
  <primary>creat</primary></indexterm>
</refnamediv>

<refsect1>
<title>Description</title>

<para>
<function>creat</function> is as specified in 
<XREF LINKEND=STD.SUSv3>, but with differences as listed below.
</para>

<refsect2>
<title>May return <errorname>ENODEV</errorname> in 
place of <errorname>ENXIO</errorname>
</title>
<para>

Where the Single UNIX Specification specifies an ENXIO return, the
implementation may return either ENXIO or ENODEV.  Implementations are
encouraged to return ENXIO.
<footnote>
<para>
As of spring 2004, we don't know of any Linux kernel patches to switch
to ENXIO, but we believe that such a kernel patch would be accepted if
submitted.
</para>
</footnote>
</para>
</refsect2>

</refsect1>
</refentry>

<REFENTRY ID="baselib-daemon-3"> <REFMETA>
<REFENTRYTITLE>daemon</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>daemon</REFNAME>
<REFPURPOSE>
run in the background
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;unistd.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>daemon</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>nochdir</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>noclose</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>daemon</FUNCTION> function shall create a new process,
detached from the controlling terminal. If successful, the calling process
shall exit and the new process shall continue to execute the application
in the background.
If <PARAMETER>nochdir</PARAMETER> evaluates to true, the current directory
shall not be changed. Otherwise, 
<FUNCTION>daemon</FUNCTION> shall change the current working directory 
to the root (`/'). If <PARAMETER>noclose</PARAMETER> evaluates to true
the standard input, standard output, and standard error file
descriptors shall not be altered. Otherwise,
<FUNCTION>daemon</FUNCTION> shall close
the standard input, standard output and standard error file descriptors
and reopen them attached to 
<FILENAME>/dev/null</FILENAME>. 
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On error, <RETURNVALUE>-1</RETURNVALUE> is returned, and the global 
variable <VARNAME>errno</VARNAME> is set to any of the errors 
specified for the library functions <FUNCTION>fork</FUNCTION>(2) and 
<FUNCTION>setsid</FUNCTION>(2).
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-dcgettext"> <REFMETA>
<REFENTRYTITLE>dcgettext</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>dcgettext</REFNAME>
<REFPURPOSE>
perform domain and category specific lookup in message catalog
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;libintl.h&gt;
#include &lt;locale.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*dcgettext</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*domainname</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*msgid</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>category</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>dcgettext</FUNCTION> function
is a domain specified version 
of <FUNCTION>gettext</FUNCTION>.
</PARA>
<PARA>
The <function>dcgettext</function>
function shall lookup the translation in the current locale of the message
identified by <parameter>msgid</parameter> in the domain specified by 
<parameter>domainname</parameter> and in the locale
category specified by <parameter>category</parameter>. 
If <parameter>domainname</parameter> is NULL, the current default
domain shall be used. 
The <parameter>msgid</parameter> argument shall be a NULL-terminated 
string to be
matched in the catalogue. 
<parameter>category</parameter> shall specify the locale category to be used
for retrieving message strings. 
The category parameter shall be one of <parameter>LC_CTYPE</parameter>,
<parameter>LC_COLLATE</parameter>, 
<parameter>LC_MESSAGES</parameter>, 
<parameter>LC_MONETARY</parameter>,
<parameter>LC_NUMERIC</parameter>, 
or <parameter>LC_TIME</parameter>. 
The default domain
shall not be changed by a call to dcgettext.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
If a translation was found in one of the specified catalogs, it shall be
converted to the current locale's codeset and returned. The resulting
NULL-terminated string shall be allocated by the dcgettext function, and must
not be modified or freed. If no translation was found, or category was invalid,
<parameter>msgid</parameter> shall be returned.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
<FUNCTION>dcgettext</FUNCTION> shall not modify the 
<VARNAME>errno</VARNAME> global variable.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<ulink url="baselib-gettext.html">gettext</ulink>, dgettext, ngettext, 
dngettext, dcngettext, textdomain,
bindtextdomain, bind_textdomain_codeset
</PARA>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="baselib-dcngettext"> <REFMETA>
<REFENTRYTITLE>dcngettext</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>dcngettext</REFNAME>
<REFPURPOSE>
perform domain and category specific lookup in message catalog
with plural
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;libintl.h&gt;
#include &lt;locale.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*dcngettext</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*domainname</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*msgid1</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*msgid2</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>unsigned long int 
  <PARAMETER><REPLACEABLE>n</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>category</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>dcngettext</FUNCTION> function is a domain specific version of 
gettext, capable of
returning either a singular or plural form of the message. 
The <FUNCTION>dcngettext</FUNCTION>
function shall lookup the translation in the current locale of the message
identified by <PARAMETER>msgid1</PARAMETER>
in the domain specified by <PARAMETER>domainname</PARAMETER>
and in the locale
category specified by <PARAMETER>category</PARAMETER>. 
If <PARAMETER>domainname</PARAMETER> is NULL, the current default
domain shall be used. The <PARAMETER>msgid1</PARAMETER>
argument shall be a NULL-terminated string to
be matched in the catalogue. <PARAMETER>category</PARAMETER>
shall specify the locale category to be
used for retrieving message strings. The <PARAMETER>category</PARAMETER>
parameter shall be one of
<PARAMETER>LC_CTYPE</PARAMETER>, 
<PARAMETER>LC_COLLATE</PARAMETER>, 
<PARAMETER>LC_MESSAGES</PARAMETER>, 
<PARAMETER>LC_MONETARY</PARAMETER>, 
<PARAMETER>LC_NUMERIC</PARAMETER>, or 
<PARAMETER>LC_TIME</PARAMETER>. 
The
default domain shall not be changed by a call to <FUNCTION>dcgettext</FUNCTION>.
If <PARAMETER>n</PARAMETER> is 1 then the
singular version of the message is returned, otherwise one of the plural forms
is returned, depending on the value of <PARAMETER>n</PARAMETER> and the current locale settings.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
If a translation corresponding to the value of <PARAMETER>n</PARAMETER>
was found in one of the
specified catalogs for <PARAMETER>msgid1</PARAMETER>, 
it shall be converted to the current locale's
codeset and returned. The resulting NULL-terminated string 
shall be allocated by
the <FUNCTION>dcngettext</FUNCTION> function, 
and must not be modified or freed. If no translation
was found, or <PARAMETER>category</PARAMETER> was invalid, 
<PARAMETER>msgid1</PARAMETER> shall be returned 
if <PARAMETER>n</PARAMETER> has the value
1, otherwise <PARAMETER>msgid2</PARAMETER> shall be returned.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
<FUNCTION>dcngettext</FUNCTION> shall not modify the 
<VARNAME>errno</VARNAME> global variable.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<ulink url="baselib-gettext.html">gettext</ulink>, dgettext, ngettext, 
dngettext, dcgettext, textdomain,
bindtextdomain, bind_textdomain_codeset
</PARA>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="baselib-dgettext"> <REFMETA>
<REFENTRYTITLE>dgettext</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>dgettext</REFNAME>
<REFPURPOSE>
perform lookup in message catalog for the current LC_MESSAGES locale
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;libintl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*dgettext</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*domainname</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*msgid</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>dgettext</FUNCTION> is a domain specified version of 
<FUNCTION>gettext</FUNCTION>.
</PARA>
</REFSECT1>
<REFSECT1>

<TITLE>Parameters</TITLE>
<VARIABLELIST>

<VARLISTENTRY>
<TERM>
domainname
</TERM>
<LISTITEM>
<PARA>
<FUNCTION>dgettext</FUNCTION> applies 
<PARAMETER>domainname</PARAMETER> to the currently active 
<SYMBOL>LC_MESSAGE</SYMBOL> locale. This usage is equivalent in 
syntax and meaning to the <FUNCTION>textdomain</FUNCTION> function's
application of <PARAMETER>domainname</PARAMETER>, except that the 
selection of the domain in <FUNCTION>dgettext</FUNCTION> 
is valid only for the duration of the call.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
msgid
</TERM>
<LISTITEM>
<PARA>
a <LITERAL>NULL</LITERAL>-terminated string to be matched in the 
catalogue with respect to a specific domain and the current locale.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
On success of a <PARAMETER>msgid</PARAMETER> query, the translated 
<LITERAL>NULL</LITERAL>-terminated string is returned. On error, the 
original <PARAMETER>msgid</PARAMETER> is returned. The length of the
string returned is undetermined until <FUNCTION>dgettext</FUNCTION>
is called.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
<FUNCTION>dgettext</FUNCTION> will not modify the 
<VARNAME>errno</VARNAME> global variable.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<ulink url="baselib-gettext.html">gettext</ulink>, dgettext, ngettext, 
dngettext, dcgettext, dcngettext, textdomain,
bindtextdomain, bind_textdomain_codeset
</PARA>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="baselib-dngettext"> <REFMETA>
<REFENTRYTITLE>dngettext</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>dngettext</REFNAME>
<REFPURPOSE>
perform lookup in message catalog for the current locale
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;libintl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*dngettext</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*domainname</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*msgid1</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*msgid2</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>unsigned long int 
  <PARAMETER><REPLACEABLE>n</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>dngettext</FUNCTION> shall be equivalent to a call to
<PROGRAMLISTING>dcngettext(domainname, msgid1, msgid2, n, LC_MESSAGES)</PROGRAMLISTING>
See <FUNCTION>dgettext</FUNCTION>
for more information.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<ulink url="baselib-gettext.html">gettext</ulink>, dgettext, ngettext, 
dcgettext, dcngettext, textdomain,
bindtextdomain, bind_textdomain_codeset
</PARA>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="baselib-err-3"> <REFMETA>
<REFENTRYTITLE>err</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>err
</REFNAME>
<REFPURPOSE>display formatted error messages
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>4 March 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;err.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>err</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>eval</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*fmt</REPLACEABLE></PARAMETER>
  <PARAMETER>...</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>err</FUNCTION> function
shall display a formatted error message on the standard
error stream.
First, <function>err</function> shall write
the last component of the program name, a colon
character, and a space character. If <PARAMETER>fmt</PARAMETER> is non-NULL, it shall be used as a
format string for the <FUNCTION>printf</FUNCTION>
family of functions, and <function>err</function> shall
write the formatted message, a
colon character, and a space.
Finally,  the error message
string affiliated with the current value of the global variable 
<VarName>errno</VarName> shall be
written, followed by a newline character.
</PARA>
<PARA>
The <FUNCTION>err</FUNCTION> function shall not return, 
the program shall terminate with the exit value of <PARAMETER>eval</PARAMETER>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<FUNCTION>error</FUNCTION>, <FUNCTION>errx</FUNCTION>
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>
<!--      4th Berkeley Distribution        June 9, 1993           -->
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</REFENTRY>

<REFENTRY ID="baselib-error-n"> <REFMETA>
<REFENTRYTITLE>error</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>error</REFNAME>
<REFPURPOSE>
print error message
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>error</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>exitstatus</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>errnum</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*format</REPLACEABLE></PARAMETER>
  <PARAMETER>...</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>error</FUNCTION> shall print a message to standard error.
</PARA>
<PARA>
<FUNCTION>error</FUNCTION> shall build the message from the following 
elements in their specified order:
<ORDEREDLIST NUMERATION="ARABIC">
<LISTITEM>
<PARA>
the program name. If the application has provided a function named 
<FUNCTION>error_print_progname</FUNCTION>, <FUNCTION>error</FUNCTION> 
shall call this to supply the program name; 
otherwise, <FUNCTION>error</FUNCTION> 
uses the content of the global variable <VARNAME>program_name</VARNAME>.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
the colon and space characters, then 
the result of using the printf-style <PARAMETER>format</PARAMETER> 
and the optional arguments.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
if <PARAMETER>errnum</PARAMETER> is nonzero, 
<FUNCTION>error</FUNCTION> shall add the colon and 
space characters, then the result of 
<FUNCTION>strerror(<VARNAME>errnum</VARNAME>)</FUNCTION>.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
a newline.
</PARA>
</LISTITEM>
</ORDEREDLIST>
</PARA>
<PARA>
If <PARAMETER>exitstatus</PARAMETER> is nonzero, 
<FUNCTION>error</FUNCTION> shall call
<FUNCTION>exit(<VARNAME>exitstatus</VARNAME>)</FUNCTION>.
</PARA>
<!-- There's an interaction with wide characters(?): this call makes
stderr narrow-oriented. Should put that in once we figure out what it
means and whether it would be bad in an Asian locale -->
</REFSECT1>
<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<FUNCTION>err</FUNCTION>, <FUNCTION>errx</FUNCTION>
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-errx-3"> <REFMETA>
<REFENTRYTITLE>errx</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>errx
</REFNAME>
<REFPURPOSE>display formatted error message and exit
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>4 March 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;err.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>errx</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>eval</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*fmt</REPLACEABLE></PARAMETER>
  <PARAMETER>...</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>errx</FUNCTION> function shall display a formatted error message on the 
standard error stream. The last component of the program name, a colon 
character, and a space shall be output. If <PARAMETER>fmt</PARAMETER> is 
non-<LITERAL>NULL</LITERAL>, it shall be used as the format string
for the <FUNCTION>printf</FUNCTION> family of functions, and
the formatted error message, a colon 
character, and a space shall be output. The output shall be followed by a 
newline character.
</PARA>
<PARA>
<FUNCTION>errx</FUNCTION> does not return, but shall exit with the value of 
<PARAMETER>eval</PARAMETER>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<FUNCTION>error</FUNCTION>, <FUNCTION>err</FUNCTION>
</PARA>
</REFSECT1>
<!--      4th Berkeley Distribution        June 9, 1993           -->
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</REFENTRY>

<REFENTRY ID="baselib-fcntl-3"> <REFMETA>
<REFENTRYTITLE>fcntl</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>fcntl
</REFNAME>
<REFPURPOSE>
file control
</REFPURPOSE>
</REFNAMEDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>fcntl</FUNCTION> is as specified in 
<XREF LINKEND=STD.SUSv3>,
but with differences as listed below.
</PARA>

<REFSECT2>
<TITLE>Implementation may set O_LARGEFILE
</TITLE>
<PARA>
According to the <CITETITLE PUBWORK="BOOK">Single UNIX 
Specification</CITETITLE>, only an application sets
<FUNCTION>fcntl</FUNCTION> flags, for example 
<EMPHASIS>O_LARGEFILE</EMPHASIS>. However, this specification
also allows an implementation to set <EMPHASIS>O_LARGEFILE</EMPHASIS> 
in the case where the system default behavior matches the 
<EMPHASIS>O_LARGEFILE</EMPHASIS> behavior,
for example if <COMPUTEROUTPUT>sizeof(off_t)</COMPUTEROUTPUT> is 8.
Thus, calling <FUNCTION>fcntl</FUNCTION> with the 
<PARAMETER>F_GETFL</PARAMETER> command may return 
<EMPHASIS>O_LARGEFILE</EMPHASIS> as well as flags explicitly 
set by the application.
</PARA>
</REFSECT2>

</REFSECT1>
</REFENTRY>

<refentry id="baselib-fflush-unlocked-1">

<refmeta>
<refentrytitle>fflush_unlocked</refentrytitle>
<refmiscinfo>Base Libraries</refmiscinfo>
</refmeta>

<refnamediv>
<refname>fflush_unlocked</refname>
<refpurpose>non thread safe fflush</refpurpose>
<indexterm id="ix-baselib-fflush-unlocked-1">
  <primary>fflush_unlocked</primary></indexterm>
</refnamediv>

<refsect1>
<title>Description</title>

<para>
<function>fflush_unlocked</function> is the same as
<function>fflush</function> except that it need not be thread safe.
That is, it may only be invoked in the ways which are legal for
<function>getc_unlocked</function>.
</para>

</refsect1>
</refentry>

<refentry id="baselib-fgetwc-unlocked-1">

<refmeta>
<refentrytitle>fgetwc_unlocked</refentrytitle>
<refmiscinfo>Base Libraries</refmiscinfo>
</refmeta>

<refnamediv>
<refname>fgetwc_unlocked</refname>
<refpurpose>non thread safe fgetwc</refpurpose>
<indexterm id="ix-baselib-fgetwc-unlocked-1">
  <primary>fgetwc_unlocked</primary></indexterm>
</refnamediv>

<refsect1>
<title>Description</title>

<para>
<function>fgetwc_unlocked</function> is the same as
<function>fgetwc</function> except that it need not be thread safe.
That is, it may only be invoked in the ways which are legal for
<function>getc_unlocked</function>.
</para>

</refsect1>
</refentry>

<REFENTRY ID="baselib-flock-2"> <REFMETA>
<REFENTRYTITLE>flock</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>flock</REFNAME>
<REFPURPOSE>
apply or remove an advisory lock on an open file
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>flock</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>fd</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>operation</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>flock</FUNCTION> applies or removes an advisory 
lock on the open file <PARAMETER>fd</PARAMETER>. Valid 
<PARAMETER>operation</PARAMETER> types are:
</PARA>
<VARIABLELIST>

<VARLISTENTRY>
<TERM>
LOCK_SH
</TERM>
<LISTITEM>
<PARA>
Shared lock. More than one process may hold a shared lock for a given file at a given time.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
LOCK_EX
</TERM>
<LISTITEM>
<PARA>
Exclusive lock. Only one process may hold an exclusive lock for a given file at a given time.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
LOCK_UN
</TERM>
<LISTITEM>
<PARA>
Unlock.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
LOCK_NB
</TERM>
<LISTITEM>
<PARA>
Don't block when locking. May be specified (by 
<EMPHASIS>or</EMPHASIS>ing) along with one of 
the other operations.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<PARA>
A single file may not simultaneously have both shared and exclusive locks.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EWOULDBLOCK
</TERM>
<LISTITEM>
<PARA>
The file is locked and the <LITERAL>LOCK_NB</LITERAL> flag was selected.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>

<refentry id="baselib-fopen-1">

<refmeta>
<refentrytitle>fopen</refentrytitle>
<refmiscinfo>Base Libraries</refmiscinfo>
</refmeta>

<refnamediv>
<refname>fopen</refname>
<refpurpose>open a file</refpurpose>
<indexterm id="ix-baselib-fopen-1">
  <primary>fopen</primary></indexterm>
</refnamediv>

<refsect1>
<title>Description</title>

<para>
<function>fopen</function> is as specified in 
<XREF LINKEND=STD.SUSv3>, but with differences as listed below.
</para>

<refsect2>
<title>May return <errorname>ENODEV</errorname> in 
place of <errorname>ENXIO</errorname>
</title>
<para>

Where the Single UNIX Specification specifies an ENXIO return, the
implementation may return either ENXIO or ENODEV.  Implementations are
encouraged to return ENXIO.
<footnote>
<para>
As of spring 2004, we don't know of any Linux kernel patches to switch
to ENXIO, but we believe that such a kernel patch would be accepted if
submitted.
</para>
</footnote>
</para>
</refsect2>

</refsect1>
</refentry>

<refentry id="baselib-freopen-1">

<refmeta>
<refentrytitle>freopen</refentrytitle>
<refmiscinfo>Base Libraries</refmiscinfo>
</refmeta>

<refnamediv>
<refname>freopen</refname>
<refpurpose>open a file</refpurpose>
<indexterm id="ix-baselib-freopen-1">
  <primary>freopen</primary></indexterm>
</refnamediv>

<refsect1>
<title>Description</title>

<para>
<function>freopen</function> is as specified in 
<XREF LINKEND=STD.SUSv3>, but with differences as listed below.
</para>

<refsect2>
<title>May return <errorname>ENODEV</errorname> in 
place of <errorname>ENXIO</errorname>
</title>
<para>

Where the Single UNIX Specification specifies an ENXIO return, the
implementation may return either ENXIO or ENODEV.  Implementations are
encouraged to return ENXIO.
<footnote>
<para>
As of spring 2004, we don't know of any Linux kernel patches to switch
to ENXIO, but we believe that such a kernel patch would be accepted if
submitted.
</para>
</footnote>
</para>
</refsect2>

</refsect1>
</refentry>

<REFENTRY ID="baselib-getdomainname"> <REFMETA>
<REFENTRYTITLE>getdomainname</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>getdomainname</REFNAME>
<REFPURPOSE>
get NIS domain name (DEPRECATED).
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;unistd.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
  <FUNCDEF>int 
    <FUNCTION>getdomainname</FUNCTION>
  </FUNCDEF>
  <PARAMDEF>char *
    <PARAMETER>name</PARAMETER>
  </PARAMDEF>
  <PARAMDEF>size_t
    <PARAMETER>namelen</PARAMETER>
  </PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<refsect1>
<title>Description</title>
<para>
If the Network Information System (NIS) is in use, 
<FUNCTION>getdomainname</FUNCTION> shall
copy the NIS domain name to the supplied buffer identified by 
<PARAMETER>name</PARAMETER>,
with maximum length <PARAMETER>namelen</PARAMETER>. 
If the NIS domain name is not currently set, 
<FUNCTION>getdomainname</FUNCTION> shall
copy the string "(none)" to the <PARAMETER>name</PARAMETER>.
If <PARAMETER>namelen</PARAMETER> is less 
the length of the string
to be copied, <FUNCTION>getdomainname</FUNCTION>
may either truncate the string to <PARAMETER>namelen</PARAMETER>
characters and place it in <PARAMETER>name</PARAMETER>
(without a terminating null character),
or may fail with EINVAL.
</PARA>
<PARA>
Note that the NIS domain name is not the same as the domain portion of
a fully qualified domain name (for example, in DNS).
</para>
</refsect1>

<refsect1>
<title>Return Value</title>
<para>
On success,
<FUNCTION>getdomainname</FUNCTION> shall return 
<RETURNVALUE>0</RETURNVALUE>. Otherwise, it shall return
<RETURNVALUE>-1</RETURNVALUE> and set <VARNAME>errno</VARNAME>
to indicate the error).
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EINVAL
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>name</PARAMETER> was a null pointer.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
EINVAL
</TERM>
<LISTITEM>
<PARA>
The buffer identified by <PARAMETER>name</PARAMETER> and 
<PARAMETER>namelen</PARAMETER> is of insufficient size to store the NIS domain name string, and the implementation considers this an error.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>Future Directions</TITLE>
<PARA>
The LSB does not include other NIS interfaces, and a future version
of this specification may deprecate this interface.
Application developers should avoid using this interface where possible.
</PARA>
</REFSECT1>

</REFENTRY>

<REFENTRY ID="baselib-gethostbyname-r-3"> <REFMETA>
<REFENTRYTITLE>gethostbyname_r</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>gethostbyname_r
</REFNAME>
<REFPURPOSE>
find network host database entry matching host name (DEPRECATED)
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>gethostbyname_r</FUNCTION></FUNCDEF>
 <PARAMDEF>__const char *__restrict 
  <PARAMETER><REPLACEABLE>__name</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>hostent</STRUCTNAME> *__restrict 
  <PARAMETER>__result_buf</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>char *__restrict  
  <PARAMETER><REPLACEABLE>__buf</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>__buflen</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>hostent</STRUCTNAME>
  **__restrict <PARAMETER>__result</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>int *__restrict 
  <PARAMETER><REPLACEABLE>__h_errnop</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<TITLE>Description
</TITLE>

<para>
The <function>gethostbyname_r</function> function is deprecated;
applications should call <function>getaddrinfo</function> instead.
</para>

<PARA>
<FUNCTION>gethostbyname_r</FUNCTION> is a reentrant version of 
<FUNCTION>gethostbyname</FUNCTION> that searches the network host 
database for a host name match.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-getloadavg-3"> <REFMETA>
<REFENTRYTITLE>getloadavg</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>getloadavg
</REFNAME>
<REFPURPOSE>
get system load averages
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>4 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;stdlib.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>getloadavg</FUNCTION></FUNCDEF>
 <PARAMDEF>double 
  <PARAMETER><REPLACEABLE>loadavg</REPLACEABLE>[]</PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>nelem</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>getloadavg</FUNCTION> returns the number of processes in 
the system run queue averaged over various periods of time. Up to 
<PARAMETER>nelem</PARAMETER> samples are retrieved and assigned to 
successive elements of <PARAMETER>loadavg</PARAMETER>[]. The system 
imposes a maximum of <LITERAL>3</LITERAL> samples, representing 
averages over the last <LITERAL>1</LITERAL>, <LITERAL>5</LITERAL>, 
and <LITERAL>15</LITERAL> minutes, respectively.
</PARA>
</REFSECT1>
<!--     BSDI BSD/OS                      June 4, 1993       -->
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</REFENTRY>

<REFENTRY ID="libutil-getopt-3"> <REFMETA>
<REFENTRYTITLE>getopt</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>getopt</REFNAME>
<REFPURPOSE>
parse command line options
</REFPURPOSE>
<INDEXTERM ID="ix-libutil-getopt-3"><PRIMARY>getopt</PRIMARY></INDEXTERM>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>20 March 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>getopt</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>argc</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char * const 
  <PARAMETER><REPLACEABLE>argv</REPLACEABLE>[]</PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*optstring</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
<SYNOPSIS>
extern char <VARNAME>*optarg</VARNAME>;
extern int <VARNAME>optind</VARNAME>, <VARNAME>opterr</VARNAME>, <VARNAME>optopt</VARNAME>;
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>20 March 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>getopt</FUNCTION> function shall parse command line arguments.
as described in <XREF LINKEND=STD.SUSv3>, with the following exceptions,
where LSB and POSIX specifications vary.
LSB systems shall
implement the modified behaviors described below.
</PARA>
<REFSECT2>
<TITLE>Argument Ordering</TITLE>
<PARA>
The <function>getopt</function> function can process command line arguments
referenced by <parameter>argv</parameter> in one of three ways:
<VARIABLELIST>
<VARLISTENTRY>
<TERM>PERMUTE</TERM><LISTITEM><PARA>the order of arguments in
<parameter>argv</parameter> is altered so that all options (and
their arguments) are moved in front of all of the operands.
This is the default behavior.</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>REQUIRE_ORDER</TERM><LISTITEM><PARA>The arguments in
<parameter>argv</parameter> are processed in exactly the order
given, and option processing stops when the first non-option argument
is reached, or when the element of argv is "--". This ordering
can be enforced either by setting the environment variable
<VARNAME>POSIXLY_CORRECT</VARNAME>, or by setting the first character
of <parameter>optstring</parameter> to '+'.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>RETURN_IN_ORDER</TERM><LISTITEM><PARA>The order of arguments
is not altered, and all arguments are processed. Non-option arguments
(operands) are handled as if they were the argument to an option with
the value 1 ('\001'). This ordering is selected by setting the first
character of <parameter>optstring</parameter> to '-';
</PARA></LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
</REFSECT2>
<REFSECT2>
<TITLE>Option Characteristics</TITLE>
<PARA>
<EMPHASIS>LSB</EMPHASIS> specifies that:
<ITEMIZEDLIST MARK=BULLET>
<LISTITEM>
<PARA>
an element of <PARAMETER>argv</PARAMETER> that starts with 
"<TOKEN>-</TOKEN>" (and is not exactly "<TOKEN>-</TOKEN>" or 
"<TOKEN>--</TOKEN>") is an option element.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
characters of an option element, aside from the initial 
"<TOKEN>-</TOKEN>", are option characters.
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</PARA>
<PARA>
<EMPHASIS>POSIX</EMPHASIS> specifies that:
<ITEMIZEDLIST MARK=BULLET>
<LISTITEM>
<PARA>
applications using <FUNCTION>getopt</FUNCTION> shall obey the following 
syntax guidelines:
<ITEMIZEDLIST MARK=BULLET>
<LISTITEM>
<PARA>
option name is a single alphanumeric character from the portable character set
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
option is preceded by the '<TOKEN>-</TOKEN>' delimiter character
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
options without option-arguments should be accepted when grouped behind 
one '<TOKEN>-</TOKEN>' delimiter
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
each option and option-argument is a separate argument
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
option-arguments are not optional
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
all options should precede operands on the command line
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
the argument "<TOKEN>--</TOKEN>" is accepted as a delimiter 
indicating the end of options and the consideration of subsequent 
arguments, if any, as operands
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
historical implementations of <FUNCTION>getopt</FUNCTION> support 
other characters as options as an allowed extension, but applications 
that use extensions are not maximally portable.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
support for multi-byte option characters is only possible when such 
characters can be represented as type <LITERAL>int</LITERAL>.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
applications that call any utility with a first operand starting with 
'<TOKEN>-</TOKEN>' should usually specify "<TOKEN>--</TOKEN>" 
to mark the end of the options. Standard utilities that do not support 
this guideline indicate that fact in the OPTIONS section of the utility 
description.
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</PARA>
</REFSECT2>
<REFSECT2>
<TITLE>Extensions</TITLE>
<PARA>
<EMPHASIS>LSB</EMPHASIS> specifies that:
<ITEMIZEDLIST MARK=BULLET>
<LISTITEM>
<PARA>
if a character is followed by two colons, the option takes an optional 
arg; if there is text in the current <PARAMETER>argv</PARAMETER> element, 
it is returned in <PARAMETER>optarg</PARAMETER>, otherwise 
<PARAMETER>optarg</PARAMETER> is set to <LITERAL>0</LITERAL>.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
if <PARAMETER>optstring</PARAMETER> contains <LITERAL>W</LITERAL> followed 
by a semi-colon (<TOKEN>;</TOKEN>),
then <LITERAL>-W foo</LITERAL> is treated as the 
long option <LITERAL>--foo</LITERAL>. 
<NOTE><PARA>See <function>getopt_long</function> for a description
of long options.</PARA></NOTE>
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
The first character of <PARAMETER>optstring</PARAMETER> shall modify 
the behavior of <FUNCTION>getopt</FUNCTION> as follows:
<ITEMIZEDLIST MARK=BULLET>
<LISTITEM>
<PARA>
if the first character is '+', then 
<CONSTANT>REQUIRE_ORDER</CONSTANT> processing shall be in
effect (see above)
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
if the first character is '-', then 
<CONSTANT>RETURN_IN_ORDER</CONSTANT> processing shall be in
effect (see above)
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
if the first character is ':', then 
<FUNCTION>getopt</FUNCTION> shall return ':' instead of '?'
to indicate a missing option argument. 
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</PARA>
<PARA>
<EMPHASIS>POSIX</EMPHASIS> specifies that:
<ITEMIZEDLIST MARK=BULLET>
<LISTITEM>
<PARA>
the <OPTION>-W</OPTION> option is reserved for implementation extensions.
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</PARA>
</REFSECT2>
<REFSECT2>
<TITLE>Return Values</TITLE>
<PARA>
<EMPHASIS>LSB</EMPHASIS> specifies the following additional
<FUNCTION>getopt</FUNCTION> return values:
<ITEMIZEDLIST MARK=BULLET>
<LISTITEM>
<PARA>
<RETURNVALUE>'\001'</RETURNVALUE> is returned
if <CONSTANT>RETURN_IN_ORDER</CONSTANT> argument ordering is in effect,
and the next argument is an operand, not an option. The argument is
available in <varname>optarg</varname>.
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
Any other return value has the same meaning as for
<EMPHASIS>POSIX</EMPHASIS>.
</PARA>
<PARA>
<EMPHASIS>POSIX</EMPHASIS> specifies the following 
<FUNCTION>getopt</FUNCTION> return values:
<ITEMIZEDLIST MARK=BULLET>
<LISTITEM>
<PARA>
the next option character is returned, if found successfully.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
'<RETURNVALUE>:</RETURNVALUE>' is returned if a parameter is missing for 
one of the options and the first character of <VARNAME>optstring</VARNAME> is 
'<TOKEN>:</TOKEN>'.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
'<RETURNVALUE>?</RETURNVALUE>' is returned if an unknown option 
character not in <VARNAME>optstring</VARNAME> is encountered, or if 
<FUNCTION>getopt</FUNCTION> detects a missing argument and the first 
character of <VARNAME>optstring</VARNAME> is not '<TOKEN>:</TOKEN>'.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
<RETURNVALUE>-1</RETURNVALUE> is returned for the end of the option list.
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</PARA>
</REFSECT2>
<REFSECT2>
<TITLE>Environment Variables</TITLE>
<PARA>
<EMPHASIS>LSB</EMPHASIS> specifies that:
<ITEMIZEDLIST MARK=BULLET>
<LISTITEM>
<PARA>
if the variable <VARNAME>POSIXLY_CORRECT</VARNAME> is set, option 
processing stops as soon as a non-option argument is encountered.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
if <VARNAME>POSIXLY_CORRECT</VARNAME> is set, <EMPHASIS>LSB</EMPHASIS> 
<FUNCTION>getopt</FUNCTION> conforms to <EMPHASIS>
<XREF LINKEND="STD.SUSv3"></EMPHASIS>.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
the variable <VARNAME>_<replaceable>[PID]</replaceable>_GNU_nonoption_argv_flags_</VARNAME>
(where <replaceable>[PID]</replaceable> is the process ID for the 
current process), contains a space separated list of arguments that should
not be treated as arguments even though they appear to be so.
<NOTE><TITLE>Rationale</TITLE><PARA>
This was 
used by bash 2.0 to communicate to <EMPHASIS>GNU</EMPHASIS> libc which 
arguments resulted from wildcard expansion and so should not be 
considered as options. This behavior was removed in bash version 
2.01, but the support remains in <EMPHASIS>GNU</EMPHASIS> libc.
</PARA></NOTE>
This behavior is DEPRECATED in this version of the LSB; future revisions
of this specification may not include this requirement.
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</PARA>
</REFSECT2>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-getopt-long-3"> <REFMETA>
<REFENTRYTITLE>getopt_long</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>getopt_long</REFNAME>
<REFPURPOSE>
parse command line options
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#define _GNU_SOURCE
#include &lt;getopt.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>getopt_long</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>argc</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char * const 
  <PARAMETER><REPLACEABLE>argv</REPLACEABLE>[]</PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*opstring</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>const struct <STRUCTNAME>option</STRUCTNAME> 
  <PARAMETER>*longopts</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>*longindex</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>getopt_long</FUNCTION> works like <FUNCTION>getopt</FUNCTION> 
except that it also accepts long options, started out by two dashes. 
Long option names may be abbreviated if the abbreviation is unique or 
is an exact match for some defined option. A long option may take a 
parameter, of the form <LITERAL>--arg=param</LITERAL> or 
<LITERAL>--arg param</LITERAL>.
</PARA>
<PARA>
<PARAMETER>longopts</PARAMETER> is a pointer to the first element of an 
array of struct <STRUCTNAME>option</STRUCTNAME> declared in 
<FILENAME>getopt.h</FILENAME> as:
<SYNOPSIS>
  struct option {
             const char *name;
             int has_arg;
             int *flag;
             int val;
  };
</SYNOPSIS>
</PARA>
<PARA>
The fields in this structure have the following meaning:
<VARIABLELIST>
<VARLISTENTRY>
<TERM><STRUCTFIELD>name</STRUCTFIELD></TERM>
<LISTITEM><PARA>The name of the long option.</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>has_arg</STRUCTFIELD></TERM>
<LISTITEM><PARA>
One of: 
<SIMPLELIST>
<MEMBER>
<constant>no_argument</constant> (or 0) if the option does not take an argument,
</MEMBER>
<MEMBER>
<constant>required_argument</constant> (or 1) if the option requires an argument,  or
</MEMBER>
<MEMBER>
<constant>optional_argument</constant>  (or  2) if the option takes an optional argument.
</MEMBER>
</SIMPLELIST>
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>flag</STRUCTFIELD></TERM>
<LISTITEM><PARA>
specifies how results are returned for a long option.   
If  flag
is  <constant>NULL</constant>,  then  
<function>getopt_long</function> shall return <structfield>val</structfield>.
(For example, the
calling program may set val to the equivalent short option character.)
Otherwise, <function>getopt_long</function> returns 
<RETURNVALUE>0</RETURNVALUE>, and <structfield>flag</structfield> shall point to
a variable which shall be set to <structfield>val</structfield>
if the option is found, but left unchanged if the option is not found.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>val</STRUCTFIELD></TERM>
<LISTITEM><PARA>The value to return, or to load into the variable pointed to
by flag.
</PARA></LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>getopt_long</FUNCTION> returns the option character if a short 
option was found successfully, or "<RETURNVALUE>:</RETURNVALUE>" if 
there was a missing parameter for one of the options, or 
"<RETURNVALUE>?</RETURNVALUE>" for an unknown option character, or 
<RETURNVALUE>-1</RETURNVALUE> for the end of the option list.
</PARA>
<PARA>
For a long option, 
<function>getopt_long</function> returns <structfield>val</structfield> 
if <structfield>flag</structfield> is <LITERAL>NULL</LITERAL>, and <RETURNVALUE>0</RETURNVALUE> 
otherwise. Error and <RETURNVALUE>-1</RETURNVALUE> returns are the 
same as for <FUNCTION>getopt</FUNCTION>, plus 
"<RETURNVALUE>?</RETURNVALUE>" for an ambiguous match or an 
extraneous parameter.
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-getopt-long-only-3"> <REFMETA>
<REFENTRYTITLE>getopt_long_only</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>getopt_long_only</REFNAME>
<REFPURPOSE>
parse command line options
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#define _GNU_SOURCE
#include &lt;getopt.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>getopt_long_only</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>argc</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char * const 
  <PARAMETER><REPLACEABLE>argv</REPLACEABLE>[]</PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*optstring</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>const struct <STRUCTNAME>option</STRUCTNAME> 
  <PARAMETER>*longopts</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>*longindex</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>getopt_long_only</FUNCTION> is like 
<FUNCTION>getopt_long</FUNCTION>, but "<TOKEN>-</TOKEN>" as well as 
"<TOKEN>--</TOKEN>" can indicate a long option. If an option that 
starts with "<TOKEN>-</TOKEN>" (not "<TOKEN>--</TOKEN>") doesn't 
match a long option, but does match a short option, it is parsed as 
a short option instead.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>getopt_long_only</FUNCTION> returns the option character if the 
option was found successfully, or "<RETURNVALUE>:</RETURNVALUE>" if 
there was a missing parameter for one of the options, or 
"<RETURNVALUE>?</RETURNVALUE>" for an unknown option character, or 
<RETURNVALUE>-1</RETURNVALUE> for the end of the option list.
</PARA>
<PARA>
<FUNCTION>getopt_long_only</FUNCTION> also returns the option character 
when a short option is recognized. For a long option, they return val 
if flag is <LITERAL>NULL</LITERAL>, and <RETURNVALUE>0</RETURNVALUE> 
otherwise. Error and <RETURNVALUE>-1</RETURNVALUE> returns are the 
same as for <FUNCTION>getopt</FUNCTION>, plus 
"<RETURNVALUE>?</RETURNVALUE>" for an ambiguous match or an 
extraneous parameter.
</PARA>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-gettext"> <REFMETA>
<REFENTRYTITLE>gettext</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>gettext</REFNAME>
<REFPURPOSE>
Search message catalogs for a string
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;libintl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*gettext</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*msgid</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description</TITLE>
<PARA>
The <FUNCTION>gettext</FUNCTION> function shall search the currently 
selected message catalogs for a string identified by the string
<PARAMETER>msgid</PARAMETER>. If a string is located, 
that string shall be returned.
</PARA>
<PARA>
The <FUNCTION>gettext</FUNCTION> function is equivalent to
<FUNCTION>dcgettext(NULL, msgid, LC_MESSAGES)</FUNCTION>.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>

<PARA>
If a string is found in the currently selected message catalogs for
<PARAMETER>msgid</PARAMETER>, then a pointer to that string shall be returned.
Otherwise, a pointer to <PARAMETER>msgid</PARAMETER> shall be returned.
</PARA>
<PARA>
Applications shall not modify the string returned by <FUNCTION>
gettext</FUNCTION>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>None.</PARA>
<PARA>
The <FUNCTION>gettext</FUNCTION> function shall not modify 
<VARNAME>errno</VARNAME>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
dgettext, ngettext, 
dngettext, dcgettext, dcngettext, textdomain,
bindtextdomain, bind_textdomain_codeset
</PARA>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="baselib-getutent-3"> <REFMETA>
<REFENTRYTITLE>getutent</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>getutent
</REFNAME>
<REFPURPOSE>
access user accounting database entries	
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April  2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;utmp.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>struct 
  <FUNCTION><STRUCTNAME>utmp</STRUCTNAME> 
  *getutent</FUNCTION></FUNCDEF>
 <VOID> 
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>getutent</FUNCTION> function shall read the
next entry from the user accounting database.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
Upon successful completion, <function>getutent</function>
shall return a 
pointer to a <structname>utmp</structname> structure containing a copy
of the requested entry in the user accounting database.
Otherwise, a null pointer shall be returned. The return value may point
to a static area which is overwritten by a subsequent call to
<function>getutid</function> or <function>getutline</function>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<PARA>
None defined.
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-getutent-r-3"> <REFMETA>
<REFENTRYTITLE>getutent_r</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>getutent_r
</REFNAME>
<REFPURPOSE>
access user accounting database entries
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>29 May 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>getutent_r</FUNCTION></FUNCDEF>
 <PARAMDEF>struct utmp *
  <PARAMETER>buffer</PARAMETER></PARAMDEF>
 <PARAMDEF>struct utmp **
  <PARAMETER>result</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>29 May 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>getutent_r</FUNCTION> function is a reentrant version of the 
<FUNCTION>getutent</FUNCTION> function.
On entry, <parameter>buffer</parameter> should point to a user supplied
buffer to which the next entry in the database will be copied, and
<parameter>result</parameter> should point to a location where the
result will be stored.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
On success, <function>getutent_r</function> shall return 0 and set
the location referenced by <parameter>result</parameter> to a pointer
to <parameter>buffer</parameter>. Otherwise, <function>getutent_r</function>
shall return <constant>-1</constant> and set the location referenced
by <parameter>result</parameter> to <constant>NULL</constant>.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-glob64"> <REFMETA>
<REFENTRYTITLE>glob64</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>glob64</REFNAME>
<REFPURPOSE>
find pathnames matching a pattern  (Large File Support)
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>20 December 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;glob.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>glob64</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*pattern</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>flags</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <FUNCPARAMS>*errfunc</FUNCPARAMS> 
  <FUNCPARAMS>const char *, int</FUNCPARAMS</PARAMDEF>
 <PARAMDEF>glob64_t 
  <PARAMETER><REPLACEABLE>*pglob</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>glob64</FUNCTION> function is a large-file
version of the <FUNCTION>glob</FUNCTION> defined in
<XREF LINKEND=STD.SUSv3>.
It shall search for pathnames matching
<PARAMETER>pattern</PARAMETER> according to the rules used by
the shell, <FILENAME>/bin/sh</FILENAME>.
No tilde expansion or parameter substitution is done; see
<FUNCTION>wordexp</FUNCTION>.
</PARA>
<PARA>
The results of a <FUNCTION>glob64</FUNCTION>
call are stored in the structure pointed to by <PARAMETER>pglob</PARAMETER>,
which is a <VARNAME>glob64_t</VARNAME> declared in 
<FILENAME>glob.h</FILENAME> with the following members:

<SYNOPSIS>
typedef struct
{
  size_t <STRUCTFIELD>gl_pathc</STRUCTFIELD>;
  char **<STRUCTFIELD>gl_pathv</STRUCTFIELD>;
  size_t <STRUCTFIELD>gl_offs</STRUCTFIELD>;
  int <STRUCTFIELD>gl_flags</STRUCTFIELD>;
  void (*<STRUCTFIELD>gl_closedir</STRUCTFIELD>) (void *);
  struct dirent64 *(*<STRUCTFIELD>gl_readdir64</STRUCTFIELD>) (void *);
  void *(*<STRUCTFIELD>gl_opendir</STRUCTFIELD>) (const char *);
  int (*<STRUCTFIELD>gl_lstat</STRUCTFIELD>) (const char *, struct stat *);
  int (*<STRUCTFIELD>gl_stat</STRUCTFIELD>) (const char *, struct stat *);
}
glob64_t;
</SYNOPSIS>
</PARA>
<PARA>
Structure members with the same name as corresponding members of a 
<VARNAME>glob_t</VARNAME> as
defined in <XREF LINKEND=STD.SUSv3> shall have the same purpose.
</PARA>
<PARA>
Other members are defined as follows:
<VARIABLELIST>
<VARLISTENTRY>
<TERM><STRUCTFIELD>gl_flags</STRUCTFIELD></TERM>
<LISTITEM><PARA>reserved for internal use
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>gl_closedir</STRUCTFIELD></TERM>
<LISTITEM><PARA>pointer to a function capable of closing a directory opened by 
<STRUCTFIELD>gl_opendir</STRUCTFIELD>
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>gl_readdir64</STRUCTFIELD></TERM>
<LISTITEM><PARA>pointer to a function capable of reading entries in a large 
directory
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>gl_opendir</STRUCTFIELD></TERM>
<LISTITEM><PARA>pointer to a function capable of opening a large directory
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>gl_stat</STRUCTFIELD></TERM>
<LISTITEM><PARA>pointer to a function capable of returning file status 
for a large file
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><STRUCTFIELD>gl_lstat</STRUCTFIELD></TERM>
<LISTITEM><PARA>pointer to a function capable of returning file status 
information for a large file or symbolic link
</PARA></LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
<PARA>
A large file or large directory is one with a size greater than 
<CONSTANT>4294967295</CONSTANT> bytes.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. Other possible 
returns are:
</PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
GLOB_NOSPACE
</TERM>
<LISTITEM>
<PARA>
out of memory
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
GLOB_ABORTED
</TERM>
<LISTITEM>
<PARA>
read error
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
GLOB_NOMATCH
</TERM>
<LISTITEM>
<PARA>
no match found
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-globfree64"> <REFMETA>
<REFENTRYTITLE>globfree64</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>globfree64</REFNAME>
<REFPURPOSE>
free memory from glob64() (Large File Support)
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>20 December 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;glob.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>globfree64</FUNCTION></FUNCDEF>
 <PARAMDEF>glob64_t 
  <PARAMETER><REPLACEABLE>*pglob</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>globfree64</FUNCTION> frees the dynamically allocated 
storage from an earlier call to <FUNCTION>glob64</FUNCTION>.
</PARA>
<PARA>
<FUNCTION>globfree64</FUNCTION> is a 64-bit version of 
<FUNCTION>globfree</FUNCTION>.
</PARA>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-initgroups-3"> <REFMETA>
<REFENTRYTITLE>initgroups</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>initgroups
</REFNAME>
<REFPURPOSE>
initialize the supplementary group access list
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;grp.h&gt;
#include &lt;sys/types.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>initgroups</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*user</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>gid_t 
  <PARAMETER><REPLACEABLE>group</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
If the process has appropriate privilege,
the <FUNCTION>initgroups</FUNCTION> function shall initialize the 
Supplementary Group IDs for the current process
by reading the group database and using all groups of which 
<PARAMETER>user</PARAMETER> is a member. The additional group 
<PARAMETER>group</PARAMETER> is also added to the list.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EPERM  
</TERM>
<LISTITEM>
<PARA>
The calling process does not have sufficient privileges.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
ENOMEM 
</TERM>
<LISTITEM>
<PARA>
Insufficient memory to allocate group information structure.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>

<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<FUNCTION>setgroups</FUNCTION>
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-ioctl-2"> <REFMETA>
<REFENTRYTITLE>ioctl</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>ioctl
</REFNAME>
<REFPURPOSE>
control device
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>29 August 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sys/ioctl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>ioctl</FUNCTION>
 </FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>d</REPLACEABLE></PARAMETER>
 </PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>request</REPLACEABLE></PARAMETER>
 </PARAMDEF>
 <PARAMDEF>
  <PARAMETER>...</PARAMETER>
 </PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>29 August 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>ioctl</FUNCTION> function shall manipulate the underlying device 
parameters of special files. <PARAMETER>d</PARAMETER> shall be 
an open file descriptor referring to a special file.
The <FUNCTION>ioctl</FUNCTION> function shall take three parameters;
the type and value of the third parameter 
is dependent on the device and <PARAMETER>request</PARAMETER>.
</PARA>
<PARA>
Conforming LSB applications shall not call <FUNCTION>ioctl</FUNCTION> 
except in situations explicitly stated in this specification.
</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. 
An <FUNCTION>ioctl</FUNCTION> may use the return value as an
output parameter and return a non-negative value on success. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EBADF  
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>d</PARAMETER> is not a valid descriptor.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EFAULT 
</TERM>
<LISTITEM>
<PARA>
The third parameter references an inaccessible memory area.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
ENOTTY 
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>d</PARAMETER> is not associated with a character special device.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
ENOTTY 
</TERM>
<LISTITEM>
<PARA>
The specified request does not apply to the kind of object that
<PARAMETER>d</PARAMETER> references.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EINVAL 
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>request</PARAMETER> or the third parameter is not valid.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>
</REFSECT1>

</REFENTRY>
<REFENTRY ID="baselib-sockio-2"> <REFMETA>
<REFENTRYTITLE>sockio</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>sockio
</REFNAME>
<REFPURPOSE>
socket ioctl commands
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>29 August 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sys/socket.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netinet/in.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>ioctl</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>sockfd</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>request</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>*argp</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>29 August 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
Socket <function>ioctl</function> commands are a subset of the 
<FUNCTION>ioctl</FUNCTION> calls, which can perform a variety of 
functions on sockets. <PARAMETER>sockfd</PARAMETER> shall contain 
the value of a file descriptor that was created with the 
<FUNCTION>socket</FUNCTION> or <FUNCTION>accept</FUNCTION> calls.
</PARA>
<PARA>
Socket <function>ioctl</function> commands apply to the underlying 
network interfaces, and affect the entire system, not just the file 
descriptor used to issue the <FUNCTION>ioctl</FUNCTION>.
</PARA>
<PARA>
The following values for <parameter>request</parameter>
are accepted:
</PARA>
<VARIABLELIST>

<VARLISTENTRY>
<TERM>
SIOCGIFCONF
</TERM>
<LISTITEM>
<PARA>
Gets the interface configuration list for the system.
<NOTE>
<PARA>
<SYMBOL>SIOCGIFCONF</SYMBOL> is similar to the 
<FUNCTION>if_nameindex</FUNCTION> family found in the
<XREF LINKEND=STD.SUSv3>
or the <FUNCTION>getifaddrs</FUNCTION> 
family found in <ACRONYM>BSD</ACRONYM> derived systems.
</PARA>
</NOTE>
<PARAMETER>argp</PARAMETER> shall point to a
<STRUCTNAME>ifconf</STRUCTNAME> structure, as described in
<filename>&lt;net/if.h&gt;</filename>. Before calling, the caller 
shall set the
<STRUCTFIELD>ifc_ifcu.ifcu_req</STRUCTFIELD> field 
to point to an array of <STRUCTNAME>ifreq</STRUCTNAME> structures, and 
set <STRUCTFIELD>ifc_len</STRUCTFIELD> to the size in bytes of this allocated 
array. Upon return, <STRUCTFIELD>ifc_len</STRUCTFIELD> 
will contain the size in bytes of the array which was actually used.
If it is the same as the length upon calling, the caller 
should assume that the array was too small and try again with a 
larger array.
</PARA>
<PARA>
On success, <SYMBOL>SIOCGIFCONF</SYMBOL> can return any nonnegative value.
<NOTE><TITLE>Rationale</TITLE>
<PARA>
Historical UNIX systems disagree on the meaning of the return value.
</PARA>
</NOTE>
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
SIOCGIFFLAGS  
</TERM>
<LISTITEM>
<PARA>
Gets the interface flags for the indicated interface.
<PARAMETER>argp</PARAMETER> shall point to a 
<STRUCTNAME>ifreq</STRUCTNAME> structure. Before calling, the 
caller should fill in the <STRUCTFIELD>ifr_name</STRUCTFIELD> 
field with the interface name, and upon return, the 
<STRUCTFIELD>ifr_ifru.ifru_flags</STRUCTFIELD> field is set 
with the interface flags.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
SIOCGIFADDR  
</TERM>
<LISTITEM>
<PARA>
Gets the interface address for the given interface.
<PARAMETER>argp</PARAMETER> shall point to a
<STRUCTNAME>ifreq</STRUCTNAME> structure. Before calling, the 
caller should fill in the <STRUCTFIELD>ifr_name</STRUCTFIELD> 
field with the interface name, and upon return, the 
<STRUCTFIELD>ifr_ifru.ifru_addr</STRUCTFIELD> field is set 
with the interface address.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
SIOCGIFNETMASK  
</TERM>
<LISTITEM>
<PARA>
Gets the network mask for the given interface. 
<PARAMETER>argp</PARAMETER> shall point to a
<STRUCTNAME>ifreq</STRUCTNAME> structure. Before calling, the 
caller should fill in the <STRUCTFIELD>ifr_name</STRUCTFIELD> 
field with the interface name, and upon return, the 
<STRUCTFIELD>ifr_ifru.ifru_netmask</STRUCTFIELD> field is set 
with the network mask.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
FIONREAD  
</TERM>
<LISTITEM>
<PARA>
Returns the amount of queued unread data in the receive buffer.
<PARAMETER>argp</PARAMETER> shall point to an integer where the result is to be placed.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>

<!--
<PARA>
The <STRUCTNAME>sockaddr</STRUCTNAME> structure is as specified in 
<XREF LINKEND=STD.SUSv3>.
</PARA>
-->
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, if <parameter>request</parameter> is
<TOKEN>SIOCGIFCONF</TOKEN>, a non-negative integer shall be returned.
If request is not <TOKEN>SIOCGIFCONF</TOKEN>, on success 
<RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EBADF  
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>sockfd</PARAMETER> is not a valid descriptor.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EFAULT 
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>argp</PARAMETER> references an inaccessible memory area.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
ENOTTY 
</TERM>
<LISTITEM>
<PARA>
The specified <PARAMETER>request</PARAMETER> does not apply to the kind of 
object that the descriptor <PARAMETER>sockfd</PARAMETER> references.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EINVAL 
</TERM>
<LISTITEM>
<PARA>
Either <PARAMETER>request</PARAMETER> or <PARAMETER>argp</PARAMETER>
is invalid.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
ENOTCONN 
</TERM>
<LISTITEM>
<PARA>
The operation is only defined on a connected socket, but the socket wasn't
connected.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="baselib-iswctype-3"> <REFMETA>
<REFENTRYTITLE>iswctype</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>iswctype
</REFNAME>
<REFPURPOSE>
wide character classification
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;wctype.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>iswctype</FUNCTION></FUNCDEF>
 <PARAMDEF>wint_t 
  <PARAMETER><REPLACEABLE>wc</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>wctype_t 
  <PARAMETER><REPLACEABLE>desc</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>iswctype</FUNCTION> tests <PARAMETER>wc</PARAMETER> to 
determine if it is a wide character whose property is designated by 
the character class <PARAMETER>desc</PARAMETER>.
</PARA>
<PARA>
<PARAMETER>desc</PARAMETER> shall be a character property descriptor 
returned by the <FUNCTION>wctype</FUNCTION> function.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
If <PARAMETER>wc</PARAMETER> belongs to the character class 
<PARAMETER>desc</PARAMETER>, a nonzero value 
is returned. Otherwise, <RETURNVALUE>0</RETURNVALUE> is returned. 
</PARA>
<PARA>
Note that if <PARAMETER>wc</PARAMETER> is <SYMBOL>WEOF</SYMBOL>, 
<RETURNVALUE>0</RETURNVALUE> is returned.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Notes
</TITLE>
<PARA>
The behavior of <FUNCTION>iswctype</FUNCTION> depends on the 
<VARNAME>LC_CTYPE</VARNAME> category of the current locale.
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-kill-3"> <REFMETA>
<REFENTRYTITLE>kill</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>kill
</REFNAME>
<REFPURPOSE>
send a signal
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;signal.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>kill</FUNCTION></FUNCDEF>
 <PARAMDEF>pid_t 
  <PARAMETER><REPLACEABLE>pid</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>sig</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>kill</FUNCTION> is as specified in the
<CITETITLE PUBWORK="BOOK">
<XREF LINKEND='STD.SUSv3'>
</CITETITLE>, but with differences as listed below.
</PARA>

<REFSECT2>
<TITLE>Process ID -1 doesn't affect calling process
</TITLE>
<PARA>
If <PARAMETER>pid</PARAMETER> is specified as <LITERAL>-1</LITERAL>,
<PARAMETER>sig</PARAMETER> shall not be sent to the calling process.
Other than this, the rules in the <CITETITLE PUBWORK="BOOK">
<XREF LINKEND='STD.SUSv3'>
</CITETITLE> apply.
<NOTE><TITLE>Rationale</TITLE>
<PARA>
This was a deliberate Linus decision after an unpopular experiment in
including the calling process in the 2.5.1 kernel.  See "What does it
mean to signal everybody?", Linux Weekly News, 20 December 2001,
<ulink url="http://lwn.net/2001/1220/kernel.php3"
>http://lwn.net/2001/1220/kernel.php3</ulink>
</PARA>
</NOTE>
</PARA>
</REFSECT2>

</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-mbsnrtowcs-3"> <REFMETA>
<REFENTRYTITLE>mbsnrtowcs</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>mbsnrtowcs
</REFNAME>
<REFPURPOSE>
convert a multibyte string to a wide character string
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;wchar.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>size_t 
  <FUNCTION>mbsnrtowcs</FUNCTION></FUNCDEF>
 <PARAMDEF>wchar_t 
  <PARAMETER><REPLACEABLE>*dest</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>**src</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>nms</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>len</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>mbstate_t 
  <PARAMETER><REPLACEABLE>*ps</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>mbsnrtowcs</FUNCTION> is like <FUNCTION>mbsrtowcs</FUNCTION>, 
except that the number of bytes to be converted, starting at 
<PARAMETER>src</PARAMETER>, is limited to <PARAMETER>nms</PARAMETER>.
</PARA>
<PARA>
If <PARAMETER>dest</PARAMETER> is not a 
<LITERAL>NULL</LITERAL> pointer, <FUNCTION>mbsnrtowcs</FUNCTION> 
converts at most <PARAMETER>nms</PARAMETER> bytes from the multibyte 
string <PARAMETER>src</PARAMETER> to a wide-character string starting 
at <PARAMETER>dest</PARAMETER>. At most, <PARAMETER>len</PARAMETER> 
wide characters are written to <PARAMETER>dest</PARAMETER>. The  
state <PARAMETER>ps</PARAMETER> is updated.
</PARA>
<PARA>
The conversion is effectively performed by repeatedly calling:
<SYNOPSIS> 
mbrtowc(dest, *src, n, ps)</SYNOPSIS>
where <PARAMETER>n</PARAMETER> is some positive number, as long as this 
call succeeds, and then incrementing <PARAMETER>dest</PARAMETER> by one 
and <PARAMETER>src</PARAMETER> by the number of bytes consumed.
</PARA>
<PARA>
The conversion can stop for three reasons:
</PARA>
<PARA>
<ITEMIZEDLIST MARK='BULLET'>
<LISTITEM>
<PARA>
An invalid multibyte sequence has been encountered. In this case 
<PARAMETER>src</PARAMETER> is left pointing to the invalid multibyte 
sequence, (size_t)(-1) is returned, and <VARNAME>errno</VARNAME> is 
set to <ERRORNAME>EILSEQ</ERRORNAME>.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
The <PARAMETER>nms</PARAMETER> limit forces a stop, or 
<PARAMETER>len</PARAMETER> non-<TOKEN>L'\0'</TOKEN> wide characters 
have been stored at <PARAMETER>dest</PARAMETER>. In this case, 
<PARAMETER>src</PARAMETER> is left pointing to the next multibyte 
sequence to be converted, and the number of wide characters written 
to <PARAMETER>dest</PARAMETER> is returned.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
The multibyte string has been completely converted, including the 
terminating <TOKEN>'\0'</TOKEN> (which has the side effect of bringing 
back <PARAMETER>ps</PARAMETER> to the initial state). In this case, 
<PARAMETER>src</PARAMETER> is set to <LITERAL>NULL</LITERAL>, and the 
number of wide characters written to <PARAMETER>dest</PARAMETER>, 
excluding the terminating <TOKEN>L'\0'</TOKEN> character, is returned.
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</PARA>
<PARA>
If <PARAMETER>dest</PARAMETER> is <LITERAL>NULL</LITERAL>, 
<PARAMETER>len</PARAMETER> is ignored, and the conversion proceeds 
as above, except that the converted wide characters are not written 
out to memory, and that no destination length limit exists.
</PARA>
<PARA>
In both of the above cases, if <PARAMETER>ps</PARAMETER> is a 
<LITERAL>NULL</LITERAL> pointer, a static anonymous state only known 
to <FUNCTION>mbsnrtowcs</FUNCTION> is used instead.
</PARA>
<PARA>
The programmer shall ensure that there is room for at least 
<PARAMETER>len</PARAMETER> wide characters at <PARAMETER>dest</PARAMETER>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>mbsnrtowcs</FUNCTION> returns the number of wide characters 
that make up the converted part of the wide character string, not 
including the terminating null wide character. If an invalid multibyte 
sequence was encountered, (size_t)(-1) is returned, and the global
variable <VARNAME>errno</VARNAME> is set to <ERRORNAME>EILSEQ</ERRORNAME>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Notes
</TITLE>
<PARA>
The behavior of <FUNCTION>mbsnrtowcs</FUNCTION> depends on the 
<VARNAME>LC_CTYPE</VARNAME> category of the current locale.
</PARA>
<PARA>
Passing <TOKEN>NULL</TOKEN> as <PARAMETER>ps</PARAMETER> is not 
multi-thread safe.
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-memmem-3"> <REFMETA>
<REFENTRYTITLE>memmem</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>memmem</REFNAME>
<REFPURPOSE>
locate bytes
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#define _GNU_SOURCE
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>*memmem</FUNCTION></FUNCDEF>
 <PARAMDEF>const void 
  <PARAMETER><REPLACEABLE>*haystack</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>haystacklen</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const void 
  <PARAMETER><REPLACEABLE>*needle</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>needlelen</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>memmem</FUNCTION> finds the start of the first 
occurrence of the byte array referenced by 
<PARAMETER>needle</PARAMETER> 
of length <PARAMETER>needlelen</PARAMETER> in the memory 
area <PARAMETER>haystack</PARAMETER> of length 
<PARAMETER>haystacklen</PARAMETER>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>memmem</FUNCTION> returns a pointer to the beginning 
of the byte array, or <LITERAL>NULL</LITERAL> if the byte array 
is not found.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Notes
</TITLE>
<PARA>
Earlier versions of the C library contained a
<function>memmem</function> with various problems, and application
developers should treat this function with care.
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-memrchr"> <REFMETA>
<REFENTRYTITLE>memrchr</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>memrchr</REFNAME>
<REFPURPOSE>
scan memory for a character
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>*memrchr</FUNCTION></FUNCDEF>
 <PARAMDEF>const void 
  <PARAMETER><REPLACEABLE>*s</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>c</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>n</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>memrchr</FUNCTION> function shall locate the last
occurence of <PARAMETER>c</PARAMETER> (converted to an unsigned char)
in the initial <PARAMETER>n</PARAMETER> bytes (each interpreted as
an unsigned char) of the object pointed to by
<PARAMETER>s</PARAMETER>.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
The <function>memrchr</function> shall return a pointer to the located
byte, or a null pointer if the byte does not occur in the object.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>No errors are defined.</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>See Also</TITLE>
<PARA><FUNCTION>memchr</FUNCTION></PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-ngettext"> <REFMETA>
<REFENTRYTITLE>ngettext</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>ngettext</REFNAME>
<REFPURPOSE>
Search message catalogs for plural string
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>16 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;libintl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*ngettext</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*msgid1</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*msgid2</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>unsigned long int 
  <PARAMETER><REPLACEABLE>n</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>16 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>ngettext</FUNCTION> function shall search the currently 
selected message catalogs for a string matching the singular string
<PARAMETER>msgid1</PARAMETER>. If a string is located, and if
<PARAMETER>n</PARAMETER> is 1, that string shall be returned.
If <PARAMETER>n</PARAMETER> is not 1, a pluralized version
(dependant on <PARAMETER>n</PARAMETER>) of the string shall be returned.
</PARA>
<PARA>
The <FUNCTION>ngettext</FUNCTION> function is equivalent to
<FUNCTION>dcngettext(NULL, msgid1, msgid2, n, LC_MESSAGES)</FUNCTION>.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>

<PARA>
If a string is found in the currently selected message catalogs for
<PARAMETER>msgid1</PARAMETER>, then if <PARAMETER>n</PARAMETER> is
<CONSTANT>1</CONSTANT> a pointer to the located string shall be returned.
If <PARAMETER>n</PARAMETER> is not <CONSTANT>1</CONSTANT>, a pointer to an
appropriately pluralized version of the string shall be returned.
If no message could be found in the currently selected mesage catalogs,
then if <PARAMETER>n</PARAMETER> is <CONSTANT>1</CONSTANT>,
a pointer to <PARAMETER>msgid1</PARAMETER> shall be returned, otherwise
a pointer to <PARAMETER>msgid2</PARAMETER> shall be returned.
</PARA>
<PARA>
Applications shall not modify the string returned by <FUNCTION>
ngettext</FUNCTION>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>None.</PARA>
<PARA>
The <FUNCTION>ngettext</FUNCTION> function shall not modify 
<VARNAME>errno</VARNAME>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<ulink url="baselib-gettext.html">gettext</ulink>, dgettext, ngettext, 
dngettext, dcgettext, dcngettext, textdomain,
bindtextdomain, bind_textdomain_codeset
</PARA>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="baselib-obstack-free"> <REFMETA>
<REFENTRYTITLE>obstack_free</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>obstack_free</REFNAME>
<REFPURPOSE>
free an object in the obstack
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;obstack.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>obstack_free</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>obstack</STRUCTNAME> 
  <PARAMETER>*obstack</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>void 
  <PARAMETER><REPLACEABLE>*block</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>obstack_free</FUNCTION> frees an object in the obstack.
</PARA>

</REFSECT1>
</REFENTRY>


<refentry id="baselib-open-1">

<refmeta>
<refentrytitle>open</refentrytitle>
<refmiscinfo>Base Libraries</refmiscinfo>
</refmeta>

<refnamediv>
<refname>open</refname>
<refpurpose>open a file</refpurpose>
<indexterm id="ix-baselib-open-1">
  <primary>open</primary></indexterm>
</refnamediv>

<refsect1>
<title>Synopsis</title>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sys/stat.h&gt;
#include &lt;fcntl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
<FUNCDEF>int
 <FUNCTION>open</FUNCTION>
</FUNCDEF>
<PARAMDEF>const char
  <PARAMETER><REPLACEABLE>*path</REPLACEABLE></PARAMETER>
</PARAMDEF>
<PARAMDEF>int
  <PARAMETER><REPLACEABLE>oflag</REPLACEABLE></PARAMETER>
</PARAMDEF>
<PARAMDEF>
  <PARAMETER>...</PARAMETER>
</PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</refsect1>
<refsect1>
<title>Description</title>

<para>
The <function>open</function> function shall behave as specified in 
<CITETITLE><XREF LINKEND="STD.SUSV3"></CITETITLE>, 
except with differences as listed below.
</para>

<refsect2>
<title>May return <errorname>ENODEV</errorname> in 
place of <errorname>ENXIO</errorname>
</title>
<para>

Where <XREF LINKEND="STD.SUSV3"> specifies an <errorname>ENXIO</errorname>
return, a conforming
implementation may return either <errorname>ENXIO</errorname>
or <errorname>ENODEV</errorname>.  Implementations are
encouraged to return <errorname>ENXIO</errorname>.
<note>
<TITLE>Rationale</TITLE>
<para>
As of spring 2004, no Linux kernel patches to switch
to <errorname>ENXIO</errorname> are known, but it is
believed that such a kernel patch would be accepted if
submitted.
</para>
</note>
</para>
</refsect2>

</refsect1>
</refentry>

<REFENTRY ID="baselib-opterr-3"> <REFMETA>
<REFENTRYTITLE>opterr</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>opterr
</REFNAME>
<REFPURPOSE>
external variable used in getopt()
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
extern int <VARNAME>opterr</VARNAME>;
</SYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<VARNAME>opterr</VARNAME> is used as a flag to suppress an 
error message generated by <FUNCTION>getopt</FUNCTION>. When 
<VARNAME>opterr</VARNAME> is set to <LITERAL>0</LITERAL>, it 
suppresses the error message generated by <FUNCTION>getopt</FUNCTION>
when that function does not recognize an option character.
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--      Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-optind-3"> <REFMETA>
<REFENTRYTITLE>optind</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>optind
</REFNAME>
<REFPURPOSE>
external variable used in getopt()
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
extern int <VARNAME>optind</VARNAME>;
</SYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<VARNAME>optind</VARNAME> holds the current index of the array 
<VARNAME>argv</VARNAME>[], which contains the command line options 
being parsed by <FUNCTION>getopt</FUNCTION>.
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--      Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-optopt-3"> <REFMETA>
<REFENTRYTITLE>optopt</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>optopt
</REFNAME>
<REFPURPOSE>
external variable used in getopt()
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
extern int <VARNAME>optopt</VARNAME>;
</SYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<VARNAME>optopt</VARNAME> holds the unknown option character when 
that option character is not recognized by <FUNCTION>getopt</FUNCTION>.
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--      Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-pmap-getport-3"> <REFMETA>
<REFENTRYTITLE>pmap_getport</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>pmap_getport</REFNAME>
<REFPURPOSE>
Find the port number assigned to a service registered with a
portmapper.
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>6 June 2003</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;pmap_clnt.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>u_short 
  <FUNCTION>*pmap_getport</FUNCTION></FUNCDEF>
 <PARAMDEF>struct sockaddr_in
  <PARAMETER><REPLACEABLE>*address</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>__const u_long
  <PARAMETER><REPLACEABLE>program</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>__const u_long
  <PARAMETER><REPLACEABLE>*version</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>u_int 
  <PARAMETER><REPLACEABLE>protocol</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>6 June 2003</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>pmap_getport</FUNCTION> function shall
return the port number assigned to a service registered with a
RPC Binding service running on a given target system,
using the protocol described in
<XREF LINKEND="STD.RFC1833">.
The <function>pmap_getport</function> function shall be called given the
RPC program number <parameter>program</parameter>,
the program version <parameter>version</parameter>, and transport
protocol <parameter>protocol</parameter>. Conforming implementations shall
support both <constant>IPPROTO_UDP</constant> and 
<constant>IPPROTO_TCP</constant> protocols. On entry,
<parameter>address</parameter> shall specify the address of the 
system on which the portmapper to be
contacted resides. The value of <varname>address->sin_port</varname>
shall be ignored, and the standard
value for the portmapper port shall always be used.
</PARA>
<NOTE><PARA>Security and network restrictions may prevent a
conforming application from contacting a remote RPC Binding
Service.</PARA></NOTE>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, the <FUNCTION>pmap_getport</FUNCTION> function shall return 
the port number in host byte order of the RPC application
registered with the remote portmapper. On failure, 
if either the program was not
registered or the remote portmapper service could not be reached, 
the <function>pmap_getport</function> function
shall return 0. If the remote portmap service could not be reached, the status
is left in the global variable <varname>rpc_createerr</varname>.
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFENTRY>


<REFENTRY ID="baselib-pmap-set-3"> <REFMETA>
<REFENTRYTITLE>pmap_set</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>pmap_set</REFNAME>
<REFPURPOSE>
Establishes mapping to machine's RPC Bind service.
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>12 June 2003</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;rpc/pmap_clnt.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>
  <FUNCTION>*pmap_set</FUNCTION></FUNCDEF>
 <PARAMDEF>__const u_long
  <PARAMETER><REPLACEABLE>program</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>__const u_long
  <PARAMETER><REPLACEABLE>version</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int
  <PARAMETER><REPLACEABLE>protocol</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>u_short
  <PARAMETER><REPLACEABLE>port</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>12 June 2003</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pmap_set</FUNCTION> establishes a mapping between the
triple <PARAMETER>[program,version,protocol]</PARAMETER> and
<PARAMETER>port</PARAMETER> on the machine's RPC Bind
service. The value of <PARAMETER>protocol</PARAMETER>
is most likely <VARNAME>IPPROTO_UDP</VARNAME> or <VARNAME>IPPROTO_TCP
</VARNAME>. Automatically done by <FUNCTION>svc_register</FUNCTION>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>pmap_set</FUNCTION> returns 1 if it suceeds, 0 otherwise.
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFENTRY>


<REFENTRY ID="baselib-pmap-unset-3"> <REFMETA>
<REFENTRYTITLE>pmap_unset</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>pmap_unset</REFNAME>
<REFPURPOSE>
Destroys RPC Binding
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>17 June 2003</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;rpc/rpc.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void
  <FUNCTION>pmap_unset</FUNCTION></FUNCDEF>
 <PARAMDEF>u_long
  <PARAMETER><REPLACEABLE>prognum</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>u_long
  <PARAMETER><REPLACEABLE>versnum</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>17 June 2003</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
As a user interface to the RPC Bind service, 
<FUNCTION>pmap_unset</FUNCTION> destroys all mapping between the triple 
[<PARAMETER>prognum</PARAMETER>,<PARAMETER>versnum</PARAMETER>,
<PARAMETER>*</PARAMETER>] and <VARNAME>ports</VARNAME> on the machine's 
RPC Bind service.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>pmap_unset</FUNCTION> returns 1 if it succeeds, zero otherwise.
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFENTRY>


<REFENTRY ID="baselib-psignal-3"> <REFMETA>
<REFENTRYTITLE>psignal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>psignal</REFNAME>
<REFPURPOSE>
print signal message
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;signal.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>psignal</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>sig</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*s</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
<SYNOPSIS>
extern const char *const <VARNAME>sys_siglist</VARNAME>[]
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>psignal</FUNCTION> function shall 
display a message on the <varname>stderr</varname> stream.
If <PARAMETER>s</PARAMETER> is not the null pointer, and does 
not point to an empty string (e.g. <LITERAL>"\0"</LITERAL>), the
message shall consist 
of the string <PARAMETER>s</PARAMETER>, a colon, a space, and a string 
describing the signal number <PARAMETER>sig</PARAMETER>; otherwise
<function>psignal</function> shall display only a message describing
the signal number <PARAMETER>sig</PARAMETER>. If 
<PARAMETER>sig</PARAMETER> is invalid, the message displayed shall 
indicate an unknown signal.
</PARA>
<PARA>
The array <VARNAME>sys_siglist</VARNAME> holds the signal description 
strings indexed by signal number.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>psignal</FUNCTION> returns no value.
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-random-r-3"> <REFMETA>
<REFENTRYTITLE>random_r</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>random_r
</REFNAME>
<REFPURPOSE>
generate random number
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>29 May 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>random_r</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>random_data</STRUCTNAME> *__restrict
  <PARAMETER>__buf</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>int32_t *__restrict 
  <PARAMETER><REPLACEABLE>__result</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>29 May 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>random_r</FUNCTION> is a reentrant version of 
<FUNCTION>random</FUNCTION>, which generates a pseudorandom number.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Future Directions</TITLE>
<PARA>
Since this function requires support from other functions not specified in
this specification (most notably <function>initstate_r</function>), a future
version of theis specification may deprecate this interface.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-setbuffer-3"> <REFMETA>
<REFENTRYTITLE>setbuffer</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>setbuffer
</REFNAME>
<REFPURPOSE>
stream buffering operation
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;stdio.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>setbuffer</FUNCTION></FUNCDEF>
 <PARAMDEF>FILE 
  <PARAMETER><REPLACEABLE>*stream</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>*buf</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>size</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>setbuffer</FUNCTION> is an alias for the call to 
<FUNCTION>setvbuf</FUNCTION>. It works the same, except that the 
size of the buffer in <FUNCTION>setbuffer</FUNCTION> is up to 
the caller, rather than being determined by the default 
<PARAMETER>BUFSIZ</PARAMETER>.  
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-setdomainname"> <REFMETA>
<REFENTRYTITLE>setdomainname</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>setdomainname</REFNAME>
<REFPURPOSE>
set NIS domain name (DEPRECATED).
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;unistd.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
  <FUNCDEF>int
    <FUNCTION>setdomainname</FUNCTION>
  </FUNCDEF>
  <PARAMDEF>char *
    <PARAMETER>name</PARAMETER>
  </PARAMDEF>
  <PARAMDEF>size_t
    <PARAMETER>namelen</PARAMETER>
  </PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<refsect1>
<title>Description</title>
<para>
If NIS is in use, set the NIS domain name.  Note that this is not
the same as the domain name which provides the domain portion of a
fully qualified domain name (for example, in DNS).  If NIS is not in
use, this function may set the domain name anyway, or it may fail.
</para>
<para>
This call shall fail unless the caller has appropriate privileges.
</para>
<para>
<PARAMETER>namelen</PARAMETER>
shall be the length of the string pointed to by <PARAMETER>name</PARAMETER>.
</para>
</refsect1>

<refsect1>
<title>Return Value</title>
<para>
On success, <function>setdomainname</function> shall return
<RETURNVALUE>0</RETURNVALUE>. Otherwise,
it shall return <RETURNVALUE>-1</RETURNVALUE> and set <VARNAME>errno</VARNAME>
to indicate the error.
</para>
</refsect1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM><CONSTANT>EPERM</CONSTANT></TERM>
<LISTITEM><PARA>The process did not have sufficient privilege to set 
the domain name.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><CONSTANT>EINVAL</CONSTANT></TERM>
<LISTITEM><PARA><PARAMETER>name</PARAMETER> is a null pointer.
</PARA></LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-setgroups-2"> <REFMETA>
<REFENTRYTITLE>setgroups</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>setgroups
</REFNAME>
<REFPURPOSE>
set list of supplementary group IDs
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;grp.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>setgroups</FUNCTION></FUNCDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>size</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const gid_t 
  <PARAMETER><REPLACEABLE>*list</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
If the process has appropriate privilege,
the <FUNCTION>setgroups</FUNCTION> function shall set
the supplementary group IDs for 
the current process. <PARAMETER>list</PARAMETER> shall reference
an array of <PARAMETER>size</PARAMETER> group IDs. A process
may have at most <CONSTANT>NGROUPS_MAX</CONSTANT> supplementary
group IDs.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On successful completion, <RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the <VARNAME>errno</VARNAME> is set to indicate the error.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EFAULT 
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>list</PARAMETER> has an invalid address.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
EPERM
</TERM>
<LISTITEM>
<PARA>
The process does not have appropriate privileges.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
EINVAL
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>size</PARAMETER> is greater than <VARNAME>NGROUPS_MAX</VARNAME>.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>



<REFENTRY ID="baselib-sethostid-2"> <REFMETA>
<REFENTRYTITLE>sethostid</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>sethostid
</REFNAME>
<REFPURPOSE>
set the unique identifier of the current host
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;unistd.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>sethostid</FUNCTION></FUNCDEF>
 <PARAMDEF>long int 
  <PARAMETER><REPLACEABLE>hostid</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>sethostid</FUNCTION> sets a unique 32-bit identifier for 
the current machine. The 32-bit identifier is intended to be unique 
among all UNIX systems in existence. This normally resembles the 
Internet address for the local machine as returned by 
<FUNCTION>gethostbyname</FUNCTION>(3), and thus usually never needs 
to be set.
</PARA>
<PARA>
The <FUNCTION>sethostid</FUNCTION> call is restricted to the superuser.
</PARA>
<PARA>
<PARAMETER>hostid</PARAMETER> is stored in the file 
<FILENAME>/etc/hostid</FILENAME>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>gethostid</FUNCTION> returns the 32-bit identifier for the 
current host as set by <FUNCTION>sethostid</FUNCTION>(2).
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Files
</TITLE>
<PARA>
<FILENAME>/etc/hostid</FILENAME>
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-sethostname-2"> <REFMETA>
<REFENTRYTITLE>sethostname</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>sethostname
</REFNAME>
<REFPURPOSE>
set host name
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;unistd.h&gt;
#include &lt;sys/param.h.h&gt;
#include &lt;sys/utsname.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>sethostname</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*name</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>len</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
If the process has appropriate privileges, the
<FUNCTION>sethostname</FUNCTION> function shall change the host name for the 
current macine. The <PARAMETER>name</PARAMETER> shall point to a
null-terminated string of at most <PARAMETER>len</PARAMETER> bytes
that holds the new hostname.
</PARA>
<PARA>
If the symbol <CONSTANT>HOST_NAME_MAX</CONSTANT> is defined, or if
<FUNCTION>sysconf(_SC_HOST_NAME_MAX)</FUNCTION> returns a value greater
than 0, this value shall represent the maximum length of the new hostname.
Otherwise, if the symbol <CONSTANT>MAXHOSTLEN</CONSTANT> is defined, this value
shall represent the maximum length for the new hostname. If none of these
values are defined, the maximum length shall be the sixe of the
<structfield>nodename</structfield> field of the
<structname>utsname</structname> structure.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EINVAL 
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>len</PARAMETER> is negative or larger than the maximum allowed size.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EPERM  
</TERM>
<LISTITEM>
<PARA>
the process did not have appropriate privilege.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EFAULT 
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>name</PARAMETER> is an invalid address.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>

<REFSECT1>
<TITLE>Rationale
</TITLE>
<PARA>
<XREF LINKEND=STD.SUSv3>
guarantees that:
<BLOCKQUOTE>
<PARA>
Maximum length of a host name (not including the terminating null) 
as returned from the <function>gethostname</function> function shall be at least 255 bytes.
</PARA>
</BLOCKQUOTE>
</PARA>
<PARA>
The glibc C library does not define <CONSTANT>HOST_NAME_MAX</CONSTANT>,
and although it provides the name <CONSTANT>_SC_HOST_NAME_MAX</CONSTANT>
a call to <FUNCTION>sysconf</FUNCTION> returns <RETURNVALUE>-1</RETURNVALUE>
and does not alter <varname>errno</varname> in this case (indicating that
there is no restriction on the hostname length). However, the glibc
manual idicates that some implementations may have 
<CONSTANT>MAXHOSTNAMELEN</CONSTANT> as a means of detecting the maximum length,
while the Linux kernel at release 2.4 and 2.6 stores this hostname
in the <structname>utsname</structname> structure.
While the glibc manual suggests simply shortening the name until
<function>sethostname</function> succeeds, the LSB requires
that one of the first four mechanisms works.
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-setsockopt-2"> <REFMETA>
<REFENTRYTITLE>setsockopt</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>setsockopt
</REFNAME>
<REFPURPOSE>
set options on sockets
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>21 August 2003</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>setsockopt</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>sockfd</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>level</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>optname</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void 
  <PARAMETER><REPLACEABLE>*optval</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>socklen_t 
  <PARAMETER><REPLACEABLE>optlen</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>21 August 2003</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
In addition to the <FUNCTION>setsockopt</FUNCTION> options specified in
SUSv3, <FUNCTION>setsockopt</FUNCTION> also supports the options specified here.
</PARA>
<PARA>
The following <FUNCTION>setsockopt</FUNCTION> operations are provided for
<VARNAME>level</VARNAME> IPPROTO_IP:
</PARA>
<VARIABLELIST>

<VARLISTENTRY>
<TERM>
IP_MULTICAST_TTL
</TERM>
<LISTITEM>
<PARA>
Set or reads the time-to-live value of outgoing multicast packets for this
socket. <PARAMETER>optval</PARAMETER> is a pointer to an integer which contains
the new TTL value.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
IP_MULTICAST_LOOP  
</TERM>
<LISTITEM>
<PARA>
Sets a boolean flag indicating whether multicast packets originating locally
should be looped back to the local sockets.
<PARAMETER>optval</PARAMETER> is a pointer to an integer which contains
the new flag value. 
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
IP_ADD_MEMBERSHIP  
</TERM>
<LISTITEM>
<PARA>
Join a multicast group.
<PARAMETER>optval</PARAMETER> is a pointer to a
<STRUCTNAME>ip_mreq</STRUCTNAME> structure. Before calling, the 
caller should fill in the <STRUCTFIELD>imr_multiaddr</STRUCTFIELD> 
field with the multicast group address and the
<STRUCTFIELD>imr_address</STRUCTFIELD> field with the address of the local
interface. If <STRUCTFIELD>imr_address</STRUCTFIELD> is set to INADDR_ANY,
then an appropriate interface is chosen by the system.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
IP_DROP_MEMBERSHIP  
</TERM>
<LISTITEM>
<PARA>
Leave a multicast group.
<PARAMETER>optval</PARAMETER> is a pointer to a
<STRUCTNAME>ip_mreq</STRUCTNAME> structure containing the same values as were
used with IP_ADD_MEMBERSHIP.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
IP_MULTICAST_IF  
</TERM>
<LISTITEM>
<PARA>
Set the local device for a multicast socket.
<PARAMETER>optval</PARAMETER> is a pointer to a
<STRUCTNAME>ip_mreq</STRUCTNAME> structure initialized in the same manner as
with IP_ADD_MEMBERSHIP.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>

<PARA>
The <STRUCTNAME>ip_mreq</STRUCTNAME> structure contains two
<STRUCTNAME>struct in_addr</STRUCTNAME> fields:
<STRUCTFIELD>imr_multiaddr</STRUCTFIELD> and
<STRUCTFIELD>imr_address</STRUCTFIELD>.
</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>

</REFENTRY>

<REFENTRY ID="baselib-setutent-3"> <REFMETA>
<REFENTRYTITLE>setutent</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>setutent
</REFNAME>
<REFPURPOSE>
access user accounting database entries
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;utmp.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>setutent</FUNCTION></FUNCDEF>
 <VOID>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>setutent</FUNCTION> function shall 
reset the user accounting database such that the next
call to <function>getutent</function> shall be return the first
record in the database.
It is recommended to
call it before any of the other functions that operate on
the user accounting databases (e.g.
<function>getutent</function>)
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-sigandset"> <REFMETA>
<REFENTRYTITLE>sigandset</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>sigandset</REFNAME>
<REFPURPOSE>
build a new signal set by combining the two input sets using logical AND
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;signal.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>sigandset</FUNCTION></FUNCDEF>
 <PARAMDEF>sigset_t 
  <PARAMETER><REPLACEABLE>*set</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const sigset_t 
  <PARAMETER><REPLACEABLE>*left</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const sigset_t 
  <PARAMETER><REPLACEABLE>*right</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>sigandset</FUNCTION> shall combine the two signal 
sets referenced
by <PARAMETER>left</PARAMETER> and <PARAMETER>right</PARAMETER>,
using a logical AND operation, and shall place the result in the location
referenced by <PARAMETER>set</PARAMETER>,
The resulting signal set shall contain only signals that are in both
the set referenced by <PARAMETER>left</PARAMETER> and the set referenced by
<PARAMETER>right</PARAMETER>.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
On success, <function>sigandset</function> shall return <returnvalue>0
</returnvalue>. Otherise, <function>sigandset</function> shall return
<returnvalue>-1</returnvalue> and set <varname>errno</varname> to indicate
the error.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM><CONSTANT>EINVAL</CONSTANT></TERM>
<LISTITEM>
<PARA>
One or more of 
<PARAMETER>set</PARAMETER>,
<PARAMETER>left</PARAMETER>, or
<PARAMETER>right</PARAMETER> was a null pointer.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<function>sigorset</function>
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-sigblock-2"> <REFMETA>
<REFENTRYTITLE>sigblock</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>sigblock
</REFNAME>
<REFPURPOSE>
manipulate the signal mask
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include _BSD_SOURCE
#include &lt;signal.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>sigblock</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>mask</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>sigblock</FUNCTION> function shall add
the signals corresponding to the bits set in 
<PARAMETER>mask</PARAMETER> to the set of signals currently 
being blocked from delivery.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
The <FUNCTION>sigblock</FUNCTION> function shall return the
previous signal mask.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Notes
</TITLE>
<PARA>
<FUNCTION>sigblock</FUNCTION> is made obsolete by 
<FUNCTION>sigprocmask</FUNCTION>(2). A future version of this specification
may deprecate this function.
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-siggetmask-2"> <REFMETA>
<REFENTRYTITLE>siggetmask</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>siggetmask
</REFNAME>
<REFPURPOSE>
manipulate the signal mask
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#define _BSD_SOURCE
#include &lt;signal.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>siggetmask</FUNCTION></FUNCDEF>
 <VOID>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>siggetmask</FUNCTION> function shall 
return the current set of masked signals.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Notes
</TITLE>
<PARA>
<FUNCTION>siggetmask</FUNCTION> is made obsolete by 
<FUNCTION>sigprocmask</FUNCTION>(2).
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-sigisemptyset"> <REFMETA>
<REFENTRYTITLE>sigisemptyset</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>sigisemptyset</REFNAME>
<REFPURPOSE>
check for empty signal set
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;signal.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>sigisemptyset</FUNCTION></FUNCDEF>
 <PARAMDEF>const sigset_t 
  <PARAMETER><REPLACEABLE>*set</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>sigisemptyset</FUNCTION> function shall
check for empty signal set referenced by <PARAMETER>set</PARAMETER>. 
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
The <FUNCTION>sigisemptyset</FUNCTION> function shall return
a positive non-zero value if the signal set referenced by 
<PARAMETER>set</PARAMETER> is empty, or zero if this set is empty.
On error, <FUNCTION>sigisemptyset</FUNCTION> shall return <returnvalue>-1
</returnvalue> and set <varname>errno</varname> to indicate the error.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</Title>
<PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM><CONSTANT>EINVAL</CONSTANT></TERM>
<LISTITEM>
<PARA>
<PARAMETER>set</PARAMETER> is a null pointer.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
</REFSECT1>
</REFENTRY>



<REFENTRY ID="baselib-sigorset"> <REFMETA>
<REFENTRYTITLE>sigorset</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>sigorset</REFNAME>
<REFPURPOSE>
build a new signal set by combining the two input sets using logical OR
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;signal.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>sigorset</FUNCTION></FUNCDEF>
 <PARAMDEF>sigset_t 
  <PARAMETER><REPLACEABLE>*set</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const sigset_t 
  <PARAMETER><REPLACEABLE>*left</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const sigset_t 
  <PARAMETER><REPLACEABLE>*right</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>sigorset</FUNCTION> shall combine the two signal 
sets referenced
by <PARAMETER>left</PARAMETER> and <PARAMETER>right</PARAMETER>,
using a logical OR operation, and shall place the result in the location
referenced by <PARAMETER>set</PARAMETER>,
The resulting signal set shall contain only signals that are in either
the set referenced by <PARAMETER>left</PARAMETER> or the set referenced by
<PARAMETER>right</PARAMETER>.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
On success, <function>sigorset</function> shall return <returnvalue>0
</returnvalue>. Otherise, <function>sigorset</function> shall return
<returnvalue>-1</returnvalue> and set <varname>errno</varname> to indicate
the error.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM><CONSTANT>EINVAL</CONSTANT></TERM>
<LISTITEM>
<PARA>
One or more of 
<PARAMETER>set</PARAMETER>,
<PARAMETER>left</PARAMETER>, or
<PARAMETER>right</PARAMETER> was a null pointer.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>See Also</TITLE>
<PARA>
<function>sigorset</function>
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-sigreturn-2"> <REFMETA>
<REFENTRYTITLE>sigreturn</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>sigreturn
</REFNAME>
<REFPURPOSE>
return from signal handler and cleanup stack frame
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>sigreturn</FUNCTION></FUNCDEF>
 <PARAMDEF>unsigned long 
  <PARAMETER><REPLACEABLE>__unused</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <function>sigreturn</function> function is used by the system 
to cleanup after a signal handler has returned.
This function is not in the source standard; it is only in the binary standard.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>sigreturn</FUNCTION> never returns.
</PARA>
</REFSECT1>

<!-- LDP GENERAL PUBLIC LICENSE  -->
<!-- Version 1a, November 1998   -->

</REFENTRY>

<REFENTRY ID="baselib-stime-2"> <REFMETA>
<REFENTRYTITLE>stime</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>stime
</REFNAME>
<REFPURPOSE>
set time
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#define _SVID_SOURCE
#include &lt;time.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>stime</FUNCTION></FUNCDEF>
 <PARAMDEF>time_t 
  <PARAMETER><REPLACEABLE>*t</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
If the process has appropriate privilege, the <FUNCTION>stime</FUNCTION>
function shall set the system's idea of the time and date. 
Time, referenced by <PARAMETER>t</PARAMETER>, is measured in seconds 
from the epoch (defined in
<XREF LINKEND=STD.SUSv3> as 00:00:00 UTC January 1, 1970).
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <function>stime</function> shall return 
<RETURNVALUE>0</RETURNVALUE>.
Otherwise, <function>stime</function> shall return 
<RETURNVALUE>-1</RETURNVALUE> and
<VARNAME>errno</VARNAME> shall be set to indicate the error.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
<CONSTANT>
EPERM
</CONSTANT>
</TERM>
<LISTITEM>
<PARA>
The process does not have appropriate privilege.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
<CONSTANT>
EINVAL
</CONSTANT>
</TERM>
<LISTITEM>
<PARA>
<PARAMETER>t</PARAMETER> is a null pointer.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--      Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-stpcpy-3"> <REFMETA>
<REFENTRYTITLE>stpcpy</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>stpcpy</REFNAME>
<REFPURPOSE>
copy a string returning a pointer to its end
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*stpcpy</FUNCTION></FUNCDEF>
 <PARAMDEF>char * restrict
  <PARAMETER><REPLACEABLE>dest</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char * restrict
  <PARAMETER><REPLACEABLE>src</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>stpcpy</FUNCTION> function shall
copy the string pointed to by 
<PARAMETER>src</PARAMETER> (including the terminating '\0'
character) to the array pointed to by <PARAMETER>dest</PARAMETER>. 
The strings may not overlap, and the destination string 
<PARAMETER>dest</PARAMETER> shall be large enough to receive the copy.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>stpcpy</FUNCTION> returns a pointer to the end of the string 
<PARAMETER>dest</PARAMETER> (that is, the address of the terminating 
'\0' character) rather than the beginning.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Example
</TITLE>
<PARA>
This program uses <FUNCTION>stpcpy</FUNCTION> to concatenate 
<LITERAL>foo</LITERAL> and <LITERAL>bar</LITERAL> to produce 
<LITERAL>foobar</LITERAL>, which it then prints.
<SYNOPSIS>
  #include &lt;string.h>

  int
  main (void)
  {
    char buffer[256];
    char *to = buffer;
    to = stpcpy (to, "foo");
    to = stpcpy (to, "bar");
    printf ("%s\n", buffer);
  }
</SYNOPSIS>
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-stpncpy-3"> <REFMETA>
<REFENTRYTITLE>stpncpy</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>stpncpy</REFNAME>
<REFPURPOSE>
copy a fixed-size string, returning a pointer to its end
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*stpncpy</FUNCTION></FUNCDEF>
 <PARAMDEF>char * restrict
  <PARAMETER><REPLACEABLE>dest</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char * restrict
  <PARAMETER><REPLACEABLE>src</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>n</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>stpncpy</FUNCTION> function
shall copy at most <PARAMETER>n</PARAMETER> 
characters from the string pointed to by <PARAMETER>src</PARAMETER>, 
including the terminating <TOKEN>\0</TOKEN> character, to the array 
pointed to by <PARAMETER>dest</PARAMETER>. Exactly <PARAMETER>n</PARAMETER>
characters are written at <PARAMETER>dest</PARAMETER>. If the length 
<FUNCTION>strlen</FUNCTION><PARAMETER>(src)</PARAMETER> is smaller than 
<PARAMETER>n</PARAMETER>, the remaining characters in 
<PARAMETER>dest</PARAMETER> are filled with <TOKEN>\0</TOKEN> characters. 
If the length <FUNCTION>strlen</FUNCTION><PARAMETER>(src)</PARAMETER> 
is greater than or equal to <PARAMETER>n</PARAMETER>, 
<PARAMETER>dest</PARAMETER> will not be <TOKEN>\0</TOKEN> terminated.
</PARA>
<PARA>
The strings may not overlap.
</PARA>
<PARA>
The programmer shall ensure that there is room for at least
<PARAMETER>n</PARAMETER> characters at <PARAMETER>dest</PARAMETER>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
The <FUNCTION>stpncpy</FUNCTION> function shall return
a pointer to the terminating 
<TOKEN>NULL</TOKEN> in <PARAMETER>dest</PARAMETER>, or, if 
<PARAMETER>dest</PARAMETER> is not <TOKEN>NULL</TOKEN>-terminated, 
<PARAMETER>dest</PARAMETER> + <PARAMETER>n</PARAMETER>.
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-strcasestr"> <REFMETA>
<REFENTRYTITLE>strcasestr</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>strcasestr</REFNAME>
<REFPURPOSE>
locate a substring ignoring case
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*strcasestr</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*s1</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*s2</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>strcasestr</FUNCTION> shall behave as 
<FUNCTION>strstr</FUNCTION>, 
except that it shall ignore the case of both strings.
The <FUNCTION>strcasestr</FUNCTION> function shall be locale aware;
that is <FUNCTION>strcasestr</FUNCTION> shall behave as if both
strings had been converted to lower case in the current locale
before the comparison is performed.

</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
Upon successful completion, 
<FUNCTION>strcasestr</FUNCTION> shall return a pointer to the located
string or a null pointer if the string is not found. 
If <PARAMETER>s2</PARAMETER> points to a string
with zero length, the function shall return <PARAMETER>s1</PARAMETER>.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-strerror-r"> <REFMETA>
<REFENTRYTITLE>strerror_r</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>strerror_r</REFNAME>
<REFPURPOSE>
reentrant version of strerror
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*strerror_r</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>errnum</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>*buf</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>buflen</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>strerror_r</FUNCTION> is a reentrant version of 
<FUNCTION>strerror</FUNCTION>. <FUNCTION>strerror_r</FUNCTION> 
returns a pointer to an error message corresponding to error number 
<PARAMETER>errnum</PARAMETER>. The returned pointer may point within 
the buffer <PARAMETER>buf</PARAMETER> (at most 
<PARAMETER>buflen</PARAMETER> bytes).
<NOTE>
<PARA>
Note the optional use of the buffer, unlike the 
<FUNCTION>strerror_r</FUNCTION> found in 
<XREF LINKEND=STD.SUSv3>,
in which the message is always copied into the supplied buffer. 
The return types also differ.
</PARA>
</NOTE>

</PARA>

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-strfry-3"> <REFMETA>
<REFENTRYTITLE>strfry</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>strfry</REFNAME>
<REFPURPOSE>
randomize a string
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*strfry</FUNCTION></FUNCDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>*string</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>strfry</FUNCTION> randomizes the contents of 
<PARAMETER>string</PARAMETER> by using <FUNCTION>rand</FUNCTION>(3) 
to randomly swap characters in the string. The result is an anagram 
of <PARAMETER>string</PARAMETER>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>strfry</FUNCTION> returns a pointer to the randomized string.
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-strndup"> <REFMETA>
<REFENTRYTITLE>strndup</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>strndup</REFNAME>
<REFPURPOSE>
return a malloc'd copy of at most the specified number of bytes of a string 
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*strndup</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*string</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>n</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>strndup</FUNCTION> function shall return a 
<FUNCTION>malloc</FUNCTION>'d copy of at most <PARAMETER>n</PARAMETER> 
bytes of <PARAMETER>string</PARAMETER>. The resultant string shall be 
terminated even if no <TOKEN>NULL</TOKEN> terminator appears 
before <PARAMETER>string</PARAMETER>+<PARAMETER>n</PARAMETER>.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
On success, <function>strndup</function> shall return a pointer to a newly
allocated block of memory containing a copy of at most <parameter>n</parameter>
bytes of <parameter>string</parameter>. Otherwise, <function>strndup</function>
shall return <returnvalue>NULL</returnvalue> and set <varname>errno</varname>
to indicate the error.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
<CONSTANT>
ENOMEM
</CONSTANT>
</TERM>
<LISTITEM>
<PARA>
Insufficient memory available.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-strnlen-3"> <REFMETA>
<REFENTRYTITLE>strnlen</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>strnlen</REFNAME>
<REFPURPOSE>
determine the length of a fixed-size string
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>size_t 
  <FUNCTION>strnlen</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*s</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>maxlen</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>strnlen</FUNCTION> returns the number of characters in 
the string <PARAMETER>s</PARAMETER>, not including the terminating 
<TOKEN>\0</TOKEN> character, but at most <PARAMETER>maxlen</PARAMETER>. 
In doing this, <FUNCTION>strnlen</FUNCTION> looks only at the first 
<PARAMETER>maxlen</PARAMETER> characters at <PARAMETER>s</PARAMETER> 
and never beyond <PARAMETER>s</PARAMETER> + <PARAMETER>maxlen</PARAMETER>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>strnlen</FUNCTION> returns 
<FUNCTION>strlen</FUNCTION><PARAMETER>(s)</PARAMETER>, if that is less 
than <PARAMETER>maxlen</PARAMETER>, or <PARAMETER>maxlen</PARAMETER> if 
there is no <TOKEN>\0</TOKEN> character among the first 
<PARAMETER>maxlen</PARAMETER> characters pointed to by 
<PARAMETER>s</PARAMETER>.
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-strptime-3"> <REFMETA>
<REFENTRYTITLE>strptime</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>strptime
</REFNAME>
<REFPURPOSE>
parse a time string
</REFPURPOSE>
</REFNAMEDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>strptime</FUNCTION> shall behave as specified in the
<CITETITLE PUBWORK="BOOK"><XREF LINKEND=STD.SUSv3>
</CITETITLE> with differences as listed below.
</PARA>

<REFSECT2>
<TITLE>Number of leading zeroes may be limited
</TITLE>
<PARA>
The <CITETITLE PUBWORK="BOOK"><XREF LINKEND=STD.SUSv3>
</CITETITLE> specifies fields for which "leading zeros are
permitted but not required"; however, applications shall not expect to 
be able to supply more leading zeroes for these fields than would be 
implied by the range of the field. Implementations may choose to 
either match an input with excess leading zeroes, or treat this as a 
non-matching input.  For example, <VARNAME>%j</VARNAME> has a range of 
<LITERAL>001</LITERAL> to <LITERAL>366</LITERAL>, so <LITERAL>0</LITERAL>, 
<LITERAL>00</LITERAL>, <LITERAL>000</LITERAL>, <LITERAL>001</LITERAL>, 
and <LITERAL>045</LITERAL> are acceptable inputs, but inputs such as 
<LITERAL>0000</LITERAL>, <LITERAL>0366</LITERAL> and the like are not.
</PARA>
</REFSECT2>

</REFSECT1>

<REFSECT1>
<TITLE>Rationale
</TITLE>
<PARA>
<EMPHASIS>glibc</EMPHASIS> developers consider it appropriate behavior 
to forbid excess leading zeroes.  When trying to parse a given input
against several format strings, forbidding excess leading zeroes could
be helpful.  For example, if one matches <LITERAL>0011-12-26</LITERAL> 
against <LITERAL>%m-%d-%Y</LITERAL> and then against 
<LITERAL>%Y-%m-%d</LITERAL>, it seems useful for the first match to fail, 
as it would be perverse to parse that date as November 12, year 26.  
The second pattern parses it as December 26, year 11.
</PARA>
<PARA>
The <CITETITLE PUBWORK="BOOK"><XREF LINKEND=STD.SUSv3></CITETITLE> is 
not explicit that an unlimited number of leading zeroes are required, 
although it may imply this. The <ACRONYM>LSB</ACRONYM> explicitly 
allows implementations to have either behavior. Future versions of this 
standard may require implementations to forbid excess leading zeroes.
</PARA>
<PARA>
An Interpretation Request is
currently pending against <XREF LINKEND=STD.SUSV3> for this matter.
</PARA>
</REFSECT1>

</REFENTRY>

<REFENTRY ID="baselib-strsep-3"> <REFMETA>
<REFENTRYTITLE>strsep</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>strsep</REFNAME>
<REFPURPOSE>
extract token from string
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*strsep</FUNCTION></FUNCDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>**stringp</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*delim</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>strsep</FUNCTION> function shall find the first token
in the string referenced by the pointer <PARAMETER>stringp</PARAMETER>,
using the characters in <PARAMETER>delim</PARAMETER> as delimiters.
</PARA>
<PARA>
If <PARAMETER>stringp</PARAMETER> is <TOKEN>NULL</TOKEN>, 
<FUNCTION>strsep</FUNCTION> shall return <RETURNVALUE>NULL</RETURNVALUE> 
and do nothing else. 
</PARA>
<PARA>
If <PARAMETER>stringp</PARAMETER> is non-<TOKEN>NULL</TOKEN>, 
<FUNCTION>strsep</FUNCTION> shall find the first token in the 
string referenced by
<PARAMETER>stringp</PARAMETER>, where tokens are delimited by characters 
in the string <PARAMETER>delim</PARAMETER>. This token shall be terminated 
with a <TOKEN>\0</TOKEN> character by overwriting the delimiter, and 
<PARAMETER>stringp</PARAMETER> shall be updated to point past the token. In 
case no delimiter was found, the token is taken to be the entire string 
referenced by
<PARAMETER>stringp</PARAMETER>, and the location referenced by
<PARAMETER>stringp</PARAMETER> is 
made <TOKEN>NULL</TOKEN>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>strsep</FUNCTION> shall return a pointer to the 
beginning of the token.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Notes
</TITLE>
<PARA>
The <FUNCTION>strsep</FUNCTION> function was introduced as a replacement for 
<FUNCTION>strtok</FUNCTION>, since the latter cannot handle empty 
fields. However, <FUNCTION>strtok</FUNCTION> conforms to 
<XREF LINKEND=STD.ISOC99> and to <XREF LINKEND=STD.SUSv3> and hence is more portable.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>See Also
</TITLE>
<PARA>
<FUNCTION>strtok</FUNCTION>, <FUNCTION>strtok_r</FUNCTION>. 
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-strsignal-3"> <REFMETA>
<REFENTRYTITLE>strsignal</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>strsignal</REFNAME>
<REFPURPOSE>
return string describing signal
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#define _GNU_SOURCE
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*strsignal</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>sig</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
<SYNOPSIS>
extern const char * const <VARNAME>sys_siglist</VARNAME>[];
</SYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>strsignal</FUNCTION> function shall return a pointer to
a string describing the signal 
number <PARAMETER>sig</PARAMETER>. 
The string can only be used until the next call to <function>strsignal
</function>.
</PARA>
<PARA>
The array <VARNAME>sys_siglist</VARNAME> holds the signal description 
strings indexed by signal number. This array should not be accessed 
directly by applications.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
If <PARAMETER>sig</PARAMETER> is a valid signal number,
<FUNCTION>strsignal</FUNCTION> shall return a pointer to
the appropriate description 
string. Otherwise, <FUNCTION>strsignal</FUNCTION> shall return
either a pointer to the string <LITERAL>"unknown signal"</LITERAL>, or
a null pointer.
</PARA>
<PARA>
Although the function is not declared as returning a pointer to a constant
character string, applications shall not modify the returned string.
</PARA>


<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-strtoq-3"> <REFMETA>
<REFENTRYTITLE>strtoq</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>strtoq
</REFNAME>
<REFPURPOSE>
convert string value to a long or quad_t integer
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sys/types.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;limits.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>quadt 
  <FUNCTION>strtoq</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>**endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>base</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>strtoq</FUNCTION> converts the string <PARAMETER>nptr</PARAMETER> 
to a quadt value. The conversion is done according to the given base, which 
shall be between <LITERAL>2</LITERAL> and <LITERAL>36</LITERAL> inclusive, 
or be the special value <LITERAL>0</LITERAL>.
</PARA><PARA>
<PARAMETER>nptr</PARAMETER> may begin with an arbitrary amount of white 
space (as determined by <FUNCTION>isspace</FUNCTION>(3)), followed by a 
single optional <TOKEN>+</TOKEN> or <TOKEN>-</TOKEN> sign character. If 
<PARAMETER>base</PARAMETER> is <LITERAL>0</LITERAL> or <LITERAL>16</LITERAL>, 
the string may then include a <TOKEN>0x</TOKEN> prefix, and the number will 
be read in base 16; otherwise, a <LITERAL>0</LITERAL> base is taken as 
10 (decimal), unless the next character is <LITERAL>0</LITERAL>, in which 
case it is taken as 8 (octal).
</PARA><PARA>
The remainder of the string is converted to a long value in the obvious 
manner, stopping at the first character which is not a valid digit in the 
given base. (In bases above 10, the letter <LITERAL>A</LITERAL> in either 
upper or lower case represents 10, <LITERAL>B</LITERAL> represents 11, and 
so forth, with <LITERAL>Z</LITERAL> representing 35.)
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>strtoq</FUNCTION> returns the result of the conversion, 
unless the value would underflow or overflow. If an underflow occurs, 
<FUNCTION>strtoq</FUNCTION> returns <VARNAME>QUAD_MIN</VARNAME>. If 
an overflow occurs, <FUNCTION>strtoq</FUNCTION> returns 
<VARNAME>QUAD_MAX</VARNAME>. In both cases, the global variable 
<VARNAME>errno</VARNAME> is set to <ERRORNAME>ERANGE</ERRORNAME>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
ERANGE
</TERM>
<LISTITEM>
<PARA>
The given string was out of range; the value converted has been clamped.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</REFENTRY>

<REFENTRY ID="baselib-strtouq-3"> <REFMETA>
<REFENTRYTITLE>strtouq</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>strtouq
</REFNAME>
<REFPURPOSE>
convert a string to an uquad_t
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sys/types.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;limits.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>uquadt 
  <FUNCTION>strtouq</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>**endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>base</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>strtouq</FUNCTION> converts the string <PARAMETER>nptr</PARAMETER> 
to a uquadt value. The conversion is done according to the given base, which 
shall be between <LITERAL>2</LITERAL> and <LITERAL>36</LITERAL> inclusive, 
or be the special value <LITERAL>0</LITERAL>.
</PARA><PARA>
<PARAMETER>nptr</PARAMETER> may begin with an arbitrary amount of white 
space (as determined by <FUNCTION>isspace</FUNCTION>(3)), followed by a 
single optional <TOKEN>+</TOKEN> or <TOKEN>-</TOKEN> sign character. If 
<PARAMETER>base</PARAMETER> is <LITERAL>0</LITERAL> or <LITERAL>16</LITERAL>, 
the string may then include a <TOKEN>0x</TOKEN> prefix, and the number will 
be read in base 16; otherwise, a <LITERAL>0</LITERAL> base is taken as 
10 (decimal), unless the next character is <LITERAL>0</LITERAL>, in which 
case it is taken as 8 (octal).
</PARA><PARA>
The remainder of the string is converted to an unsigned long value in the 
obvious manner, stopping at the end of the string or at the first character 
that does not produce a valid digit in the given base. (In bases above 10, 
the letter <LITERAL>A</LITERAL> in either upper or lower case represents 10, 
<LITERAL>B</LITERAL> represents 11, and so forth, with <LITERAL>Z</LITERAL> 
representing 35.)
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>
Return Value
</TITLE>
<PARA>
On success, <FUNCTION>strtouq</FUNCTION> returns either the result of 
the conversion or, if there was a leading minus sign, the negation of 
the result of the conversion, unless the original (non-negated) value 
would overflow. In the case of an overflow the function returns 
<VARNAME>UQUAD_MAX</VARNAME> and the global variable <VARNAME>errno</VARNAME> 
is set to <ERRORNAME>ERANGE</ERRORNAME>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
ERANGE
</TERM>
<LISTITEM>
<PARA>
The given string was out of range; the value converted has been clamped.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</REFENTRY>

<REFENTRY ID="baselib-strverscmp"> <REFMETA>
<REFENTRYTITLE>strverscmp</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>strverscmp</REFNAME>
<REFPURPOSE>
compare strings holding name and indices/version numbers
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>strverscmp</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*s1</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*s2</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <function>strversmp</function> function shall compare two strings
in a similar manner to <function>strcmp</function>.
If <parameter>s1</parameter> and <parameter>s2</parameter>
contain no digits, <function>strversmp</function> shall
behave as <function>strcmp</function>.
</para>
<para>
The strings are compared by scanning from left to right.
If a digit or sequence of digits
is encountered in both strings at the same position,
the digit sequence is specially compared, as described
below. If the digit sequences compared equal, the string comparison
resumes in both <parameter>s1</parameter> and 
<parameter>s2</parameter> after the digit sequence.
</para>
<para>
Digit sequences are classified as either "integral" or
"fractional". A fractional digit sequence begins with
a <literal>'0'</literal>; otherwise the digit sequence
shall be treated as an intergral digit sequence.
</para>
<para>
If two integral digit sequences are encountered, they shall be
compared as integers for equality. A fractional digit sequence
shall always compare less than an integral digit sequence.
If two fractional digit sequences are being compared,
then if the common prefix contains only leading zeroes, the longer
part shall compare less than the shorter; otherwise the comparison
shall be strictly numeric.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Examples</TITLE>
<para>
<TABLE>
<TITLE>Examples</TITLE>
<TGROUP COLS=2>
<THEAD>
<ROW><ENTRY>Call</ENTRY><ENTRY>Return Value</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY><FUNCTION>strverscmp</FUNCTION>(
<PARAMETER>"no digit", "nodigit"</PARAMETER>)</ENTRY>
<ENTRY><RETURNVALUE>0</RETURNVALUE>
<LITERAL>/* same behavior as strcmp */</LITERAL></ENTRY></ROW>
<ROW><ENTRY><FUNCTION>strverscmp</FUNCTION>(
<PARAMETER>"item#99", "item#100"</PARAMETER>)</ENTRY>
<ENTRY><RETURNVALUE>&lt; 0</RETURNVALUE>
<LITERAL>/* same prefix, but 99 &lt; 100 */</LITERAL></ENTRY></ROW>
<ROW><ENTRY><FUNCTION>strverscmp</FUNCTION>(
<PARAMETER>"alpha1", "alpha001"</PARAMETER>)</ENTRY>
<ENTRY><RETURNVALUE>&gt; 0</RETURNVALUE>
<LITERAL>/* fractional part inferior to integral */</LITERAL></ENTRY></ROW>
<ROW><ENTRY><FUNCTION>strverscmp</FUNCTION>(
<PARAMETER>"part1_f012", "part1_f01"</PARAMETER>)</ENTRY>
<ENTRY><RETURNVALUE>&gt; 0</RETURNVALUE>
<LITERAL>/* two fractional parts */</LITERAL></ENTRY></ROW>
<ROW><ENTRY><FUNCTION>strverscmp</FUNCTION>(
<PARAMETER>"foo.009", "foo.0"</PARAMETER>)</ENTRY>
<ENTRY><RETURNVALUE>&lt; 0</RETURNVALUE>
<LITERAL>/* two fractional parts but with leading zeroes only */</LITERAL></ENTRY></ROW>

</TBODY>
</TGROUP>
</TABLE>
</para>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-svc-register-3"> <REFMETA>
<REFENTRYTITLE>svc_register</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>svc_register</REFNAME>
<REFPURPOSE>
Register Remote Procedure Call Interface
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>17 June 2003</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;rpc/rpc.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void
  <FUNCTION>svc_register</FUNCTION></FUNCDEF>
 <PARAMDEF>SVCXPRT
  <PARAMETER><REPLACEABLE>*xprt</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>u_long
  <PARAMETER><REPLACEABLE>prognum</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>u_long
  <PARAMETER><REPLACEABLE>versnum</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void
  <PARAMETER><REPLACEABLE>(*dispatch)()</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>u_long
  <PARAMETER><REPLACEABLE>protocol</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>17 June 2003</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>svc_register</FUNCTION> function shall associate
the program identified by <PARAMETER>prognum</PARAMETER> at version
<PARAMETER>versnum</PARAMETER>
with the service dispatch procedure, <PARAMETER>dispatch</PARAMETER>.
If <PARAMETER>protocol</PARAMETER> is zero, the service is not registered with the
<VARNAME>portmap</VARNAME> service.  If <PARAMETER>protocol</PARAMETER> is
non-zero, then a mapping of the triple [<PARAMETER>prognum</PARAMETER>,
<PARAMETER>versnum</PARAMETER>, <PARAMETER>protocol</PARAMETER>] to 
<VARNAME>xprt->xp_port</VARNAME> is established with the local 
<VARNAME>portmap</VARNAME> service.  The
procedure <PARAMETER>dispatch</PARAMETER> has the following form:
</PARA>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
<FUNCDEF>int
<FUNCTION>dispatch</FUNCTION></FUNCDEF>
<PARAMDEF>struct svc_req *
<PARAMETER>request</PARAMETER>
</PARAMDEF>
<PARAMDEF>SVCXPRT *
<PARAMETER>xprt</PARAMETER>
</PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>svc_register</FUNCTION> returns 
<RETURNVALUE>1</RETURNVALUE> if it succeeds, and 
<RETURNVALUE>zero</RETURNVALUE> 
otherwise.
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFENTRY>


<REFENTRY ID="baselib-svc-run-3"> <REFMETA>
<REFENTRYTITLE>svc_run</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>svc_run</REFNAME>
<REFPURPOSE>
Waits for RPC requests to arrive and calls service procedure.
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>12 June 2003</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;rpc/svc.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void
  <FUNCTION>svc_run</FUNCTION></FUNCDEF>
  <VOID>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>12 June 2003</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>svc_run</FUNCTION> function shall wait for RPC
requests to arrive, read and unpack each request, and dispatch
it to the appropriate registered handler.
Under normal conditions, <FUNCTION>svc_run</FUNCTION> shall not return;
it shall only return if serious errors occur that prevent further
processing.
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFENTRY>


<refentry id="BASELIB-SVC-SENDREPLY-3"> <refmeta>
<refentrytitle>svc_sendreply</refentrytitle>
<refmiscinfo>Base Libraries</refmiscinfo>
</refmeta>
<refnamediv>
<refname>svc_sendreply</refname>
<refpurpose>
called by RPC service's dispatch routine
</refpurpose>
</refnamediv>
<refsynopsisdiv>
<refsynopsisdivinfo>
<date>17 June 2003</date>
</refsynopsisdivinfo>
	<funcsynopsis> 
	<funcprototype> 
		<funcdef><function>svc_sendreply</function></funcdef> 
		<paramdef>SVCXPRT <parameter>*xprt</parameter></paramdef>
		<paramdef>xdrproc_t <parameter>outproc</parameter></paramdef>
		<paramdef>char <parameter>out</parameter></paramdef> 
</funcprototype> 
</funcsynopsis> 
</refsynopsisdiv>
<refsect1>

<title>Description
</title>
<para>Called by an RPC service's dispatch routine to send the  results of a remote procedure call.  
The parameter <parameter>xprt</parameter> is the request's associated transport handle; 
<parameter>outproc</parameter> is the XDR routine which is used  to  encode  the  results;  
and  <parameter>out</parameter>  is the address of the results.  
This routine returns one if it succeeds,  zero  other-wise.
</para>
</refsect1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</refentry>


<REFENTRY ID="baselib-svctcp-create-3"> <REFMETA>
<REFENTRYTITLE>svctcp_create</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>svctcp_create</REFNAME>
<REFPURPOSE>
Creates a TCP/IP-based RPC service transport.
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>17 June 2003</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;rpc/rpc.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>SVCXPRT
  <FUNCTION>*svctcp_create</FUNCTION></FUNCDEF>
 <PARAMDEF>int
  <PARAMETER><REPLACEABLE>sock</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>u_int
  <PARAMETER><REPLACEABLE>send_buf_size</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>u_int
  <PARAMETER><REPLACEABLE>recv_buf_size</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>17 June 2003</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>svctcp_create</FUNCTION> cretes a TCP/IP-based RPC service transport, 
to which it returns a pointer.  The transport is associated with the socket
<PARAMETER>sock</PARAMETER>, which may be <VARNAME>RPC_ANYSOCK</VARNAME>, in 
which case a new socket is created.  If the socket is not bound to a local TCP
port, ten this routine binds it to an arbitrary port.  Upon completion, 
<VARNAME>xprt->xp_sock</VARNAME> is the transport's socket descriptor,
and <VARNAME>xprt->xp_port</VARNAME> is the transport's port number.  Since 
TCP-based RPC uses buffered I/O, users may specify the size of buffers;
values of zero choose suitable defaults.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>svctcp_create</FUNCTION> returns NULL if it fails, or a pointer to 
the RPC service transport otherwise.
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFENTRY>


<refentry id="BASELIB-SVCUDP-CREATE-3"> 
	<refmeta>
	<refentrytitle>svcudp_create</refentrytitle>
	<refmiscinfo>Base Libraries</refmiscinfo>
	</refmeta>
	<refnamediv>
		<refname>svcudp_create</refname>
		<refpurpose>
		Creates a UDP-based RPC service transport.
		</refpurpose>
	</refnamediv>
	<refsynopsisdiv>
	
	<funcsynopsis> 
	<funcsynopsisinfo>SVCXPRT *</funcsynopsisinfo>	
	<funcprototype> 
		<funcdef><function>svcudp_create</function></funcdef> 
		<paramdef>int <parameter>sock</parameter></paramdef>		
	</funcprototype>	 	
	</funcsynopsis> 
	</refsynopsisdiv>
<refsect1>
<title>Description
</title>
<para>
This call is equivalent to <function>svcudp_bufcreate</function> 
<parameter>(sock, SZ, SZ)</parameter> 
for some default size SZ.
</para>
</refsect1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</refentry>


<REFENTRY ID="baselib-system-3"> <REFMETA>
<REFENTRYTITLE>system</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>system
</REFNAME>
<REFPURPOSE>
execute a shell command
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;stdlib.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>system</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*string</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>system</FUNCTION> executes a command specified in 
<PARAMETER>string</PARAMETER> by calling <LITERAL>/bin/sh -c 
string</LITERAL>, and returns after the command has been completed. 
During execution of the command, <VARNAME>SIGCHLD</VARNAME> will be 
blocked, and <VARNAME>SIGINT</VARNAME> and <VARNAME>SIGQUIT</VARNAME> 
will be ignored.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
The value <RETURNVALUE>127</RETURNVALUE> returned if the 
<FUNCTION>execve</FUNCTION> call for <LITERAL>/bin/sh</LITERAL> 
fails, <RETURNVALUE>-1</RETURNVALUE> if there was another error 
and the return code of the command otherwise.
</PARA>
<PARA>
If the value of string is <TOKEN>NULL</TOKEN>, <FUNCTION>system</FUNCTION> 
returns a nonzero value if the shell is available, 
and zero if not.
</PARA>
<PARA>
<FUNCTION>system</FUNCTION> does not affect the wait status of any 
other children.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Notes
</TITLE>
<PARA>
The fact that <FUNCTION>system</FUNCTION> ignores interrupts is often 
not what a program wants. <XREF LINKEND=STD.SUSv3>
describes some of the consequences; an 
additional consequence is that a program calling <FUNCTION>system</FUNCTION> 
from a loop cannot be reliably interrupted. Many programs will want to use 
the <FUNCTION>exec</FUNCTION>(3) family of functions instead.
</PARA>
<PARA>
Do not use <FUNCTION>system</FUNCTION> from a program with 
<VARNAME>suid</VARNAME> or <VARNAME>sgid</VARNAME> privileges, 
because strange values for some environment variables might be used 
to subvert system integrity. Use the <FUNCTION>exec</FUNCTION>(3) 
family of functions instead, but not <FUNCTION>execlp</FUNCTION>(3) 
or <FUNCTION>execvp</FUNCTION>(3). <FUNCTION>system</FUNCTION> will 
not, in fact, work properly from programs with <VARNAME>suid</VARNAME> 
or <VARNAME>sgid</VARNAME> privileges on systems on which 
<LITERAL>/bin/sh</LITERAL> is <EMPHASIS>bash</EMPHASIS> version 2, 
since <EMPHASIS>bash</EMPHASIS> 2 drops privileges on startup. 
(Debian uses a modified <EMPHASIS>bash</EMPHASIS> which does not do 
this when invoked as <LITERAL>sh</LITERAL>.)
</PARA>
<PARA>
The check for the availability of <LITERAL>/bin/sh</LITERAL> 
is not actually performed; it is always assumed to be available. 
<EMPHASIS>ISO C</EMPHASIS> specifies the check, but 
<EMPHASIS>POSIX.2</EMPHASIS> specifies that the return shall 
always be nonzero, since a system without the 
shell is not conforming, and it is this that is implemented.
</PARA>
<PARA>
It is possible for the shell command to return 
<RETURNVALUE>127</RETURNVALUE>, so that code is not a sure 
indication that the <FUNCTION>execve</FUNCTION> call failed; check 
the global variable <VARNAME>errno</VARNAME> to make sure.
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-textdomain"> <REFMETA>
<REFENTRYTITLE>textdomain</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>textdomain</REFNAME>
<REFPURPOSE>
set the current default message domain
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;libintl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char 
  <FUNCTION>*textdomain</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*domainname</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>textdomain</FUNCTION> function shall set
the current default message 
domain to <PARAMETER>domainname</PARAMETER>. 
Subsequent calls to <FUNCTION>gettext</FUNCTION> and 
<FUNCTION>ngettext</FUNCTION> use the default message domain.
</PARA>

<PARA>
If <PARAMETER>domainname</PARAMETER> is <TOKEN>NULL</TOKEN>, 
the default message domain shall not be altered.
</PARA>
<PARA>
If <PARAMETER>domainname</PARAMETER> is "", <FUNCTION>textdomain</FUNCTION>
shall reset the default domain to the system default of "messages". 
</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Return</TITLE>
<PARA>
On success, <FUNCTION>textdomain</FUNCTION> shall return the currently 
selected domain. Otherwise, a null pointer shall be returned, and
<VARNAME>errno</VARNAME> set to indicate the error.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
<CONSTANT>ENOMEM</CONSTANT>
</TERM>
<LISTITEM>
<PARA>
Insufficent memory available.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>

</REFENTRY>


<REFENTRY ID="baselib-unlink-3"> <REFMETA>
<REFENTRYTITLE>unlink</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>unlink
</REFNAME>
<REFPURPOSE>
remove a directory entry
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>unlink</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*path</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>unlink</FUNCTION> is as specified in the
<CITETITLE PUBWORK="BOOK">
<XREF LINKEND="STD.SUSV3">
</CITETITLE>, but with differences as listed below.
</PARA>
<PARA>
See also <xref linkend="exec-link-unlink" />.
</PARA>

<REFSECT2>
<TITLE>May return <ERRORNAME>EISDIR</ERRORNAME> on directories
</TITLE>
<PARA>
If <PARAMETER>path</PARAMETER> specifies a directory, the
implementation may return <ERRORNAME>EISDIR</ERRORNAME> 
instead of <ERRORNAME>EPERM</ERRORNAME> as specified by
<CITETITLE PUBWORK="BOOK">
<XREF LINKEND="STD.SUSV3">
</CITETITLE>.
<NOTE>
<TITLE>Rationale</TITLE>
<PARA>
The Linux kernel has deliberately chosen <ERRORNAME>EISDIR</ERRORNAME> 
for this case and does not expect to change (Al Viro, personal 
communication).
</PARA>
</NOTE>
</PARA>
</REFSECT2>

</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-vasprintf"> <REFMETA>
<REFENTRYTITLE>vasprintf</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>vasprintf</REFNAME>
<REFPURPOSE>
write formatted output to a dynamically allocated string
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;stdarg.h&gt;
#include &lt;stdio.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>vasprintf</FUNCTION></FUNCDEF>
 <PARAMDEF>char ** restrict 
  <PARAMETER><REPLACEABLE>ptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char * restrict 
  <PARAMETER><REPLACEABLE>format</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>va_list 
  <PARAMETER><REPLACEABLE>arg</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>vasprintf</FUNCTION> function shall write
formatted output to a 
dynamically allocated string, and store
the address of that string in the location
referenced by <PARAMETER>ptr</PARAMETER>.
It shall behave as <FUNCTION>asprintf</FUNCTION>,
except that instead of being called with a variable number
of arguments, it is called with an argument list as defined
by <FILENAME>&lt;stdarg.h&gt;</FILENAME>.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
Refer to <FUNCTION>fprintf</FUNCTION>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
Refer to <FUNCTION>fprintf</FUNCTION>.
</PARA>
</REFSECT1>

</REFENTRY>

<REFENTRY ID="baselib-vdprintf"> <REFMETA>
<REFENTRYTITLE>vdprintf</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>vdprintf</REFNAME>
<REFPURPOSE>
write formatted output to a file descriptor
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;stdio.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>vdprintf</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>fd</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char * restrict 
  <PARAMETER><REPLACEABLE>format</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>va_list 
  <PARAMETER><REPLACEABLE>arg</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>vdprintf</FUNCTION> shall behave as 
<FUNCTION>vfprintf</FUNCTION>, except that the first argument
is a file descriptor rather than a STDIO stream.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
Refer to <FUNCTION>fprintf</FUNCTION>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
Refer to <FUNCTION>fprintf</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-verrx-3"> <REFMETA>
<REFENTRYTITLE>verrx</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>verrx
</REFNAME>
<REFPURPOSE>display formatted error message and exit
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;stdarg.h&gt;
#include &lt;err.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>verrx</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>eval</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*fmt</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>va_list 
  <PARAMETER><REPLACEABLE>args</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>verrx</FUNCTION> shall behave as <FUNCTION>errx</FUNCTION>
except that instead of being called with a variable number
of arguments, it is called with an argument list as defined by
<FILENAME>&lt;stdarg.h&gt;</FILENAME>.
</PARA>
<PARA>
<FUNCTION>verrx</FUNCTION> does not return, but exits with the value 
of <PARAMETER>eval</PARAMETER>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>
<!--      4th Berkeley Distribution        June 9, 1993           -->
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</REFENTRY>

<REFENTRY ID="baselib-vsyslog-3"> <REFMETA>
<REFENTRYTITLE>vsyslog</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>vsyslog
</REFNAME>
<REFPURPOSE>
log to system log
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;stdarg.h&gt;
#include &lt;syslog.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>vsyslog</FUNCTION></FUNCDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>priority</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>*message</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>va_list 
  <PARAMETER><REPLACEABLE>arglist</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>vsyslog</FUNCTION> function
is identical to <FUNCTION>syslog</FUNCTION> 
as specified in <XREF LINKEND=STD.SUSv3>,
except that <PARAMETER>arglist</PARAMETER> 
(as defined by <FILENAME>stdarg.h</FILENAME>) replaces the variable 
number of arguments.
</PARA>
</REFSECT1>

</REFENTRY>

<REFENTRY ID="baselib-wait3-3"> <REFMETA>
<REFENTRYTITLE>wait3</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>wait3
</REFNAME>
<REFPURPOSE>
wait for child process
</REFPURPOSE>
</REFNAMEDIV>
<REFSECT1>
<TITLE>Description</TITLE>
<PARA>
<FUNCTION>wait3</FUNCTION> is as specified in the 
<XREF LINKEND=STD.SUSv2>
but with differences as listed below.
</PARA>
<REFSECT2>
<TITLE><SYMBOL>WCONTINUED</SYMBOL> and <SYMBOL>WIFCONTINUED</SYMBOL> optional</TITLE>
<PARA>
Implementations need not support the functionality of 
<SYMBOL>WCONTINUED</SYMBOL> or <SYMBOL>WIFCONTINUED</SYMBOL>.
</PARA>
</REFSECT2>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-wait4-2"> <REFMETA>
<REFENTRYTITLE>wait4</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>wait4
</REFNAME>
<REFPURPOSE>
wait for process termination, BSD style
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;sys/types.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/wait.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>pid_t 
  <FUNCTION>wait4</FUNCTION></FUNCDEF>
 <PARAMDEF>pid_t 
  <PARAMETER><REPLACEABLE>pid</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>*status</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>options</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>rusage</STRUCTNAME> 
  <PARAMETER>*rusage</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>wait4</FUNCTION> suspends execution of the current process 
until a child (as specified by <PARAMETER>pid</PARAMETER>) has exited, 
or until a signal is delivered whose action is to terminate the 
current process or to call a signal handling function. If a child (as 
requested by <PARAMETER>pid</PARAMETER>) has already exited by the 
time of the call (a so-called "zombie" process), the function returns 
immediately. Any system resources used by the child are freed.
</PARA><PARA>
The value of <PARAMETER>pid</PARAMETER> can be one of:
</PARA>

<VARIABLELIST>
<VARLISTENTRY>
<TERM>
&lt; -1   
</TERM>
<LISTITEM>
<PARA>
wait for any child process whose process group ID is equal to the 
absolute value of <PARAMETER>pid</PARAMETER>.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
-1     
</TERM>
<LISTITEM>
<PARA>
wait for any child process; this is equivalent to calling 
<FUNCTION>wait3</FUNCTION>.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
0      
</TERM>
<LISTITEM>
<PARA>
wait for any child process whose process group ID is equal to that of 
the calling process.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
&gt; 0    
</TERM>
<LISTITEM>
<PARA>
wait for the child whose process ID is equal to the value of 
<PARAMETER>pid</PARAMETER>.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>

<PARA>
The value of options is a bitwise or of zero or more of the following 
constants:
</PARA>

<VARIABLELIST>
<VARLISTENTRY>
<TERM>
WNOHANG
</TERM>
<LISTITEM>
<PARA>
return immediately if no child is there to be waited for.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
WUNTRACED
</TERM>
<LISTITEM>
<PARA>
return for children that are stopped, and whose status has not been 
reported.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<PARA>
If status is not <TOKEN>NULL</TOKEN>, <FUNCTION>wait4</FUNCTION> 
stores status information in the location 
<PARAMETER>status</PARAMETER>. This status can be evaluated with the 
following macros:
<NOTE>
<PARA>
These macros take the <VARNAME>status</VARNAME> value (an 
<LITERAL>int</LITERAL>) as an argument -- not a pointer to the 
value!
</PARA>
</NOTE>
</PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
WIFEXITED(status)
</TERM>
<LISTITEM>
<PARA>
is nonzero if the child exited normally.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
WEXITSTATUS(status)
</TERM>
<LISTITEM>
<PARA>
evaluates to the least significant eight bits of the return code of 
the child that terminated, which may have been set as the argument to 
a call to <FUNCTION>exit</FUNCTION> or as the argument for a return 
statement in the main program. This macro can only be evaluated if 
<FUNCTION>WIFEXITED</FUNCTION> returned nonzero.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
WIFSIGNALED(status)
</TERM>
<LISTITEM>
<PARA>
returns true if the child process exited because of a signal that was 
not caught.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
WTERMSIG(status)
</TERM>
<LISTITEM>
<PARA>
returns the number of the signal that caused the child process to 
terminate. This macro can only be evaluated if 
<FUNCTION>WIFSIGNALED</FUNCTION> returned nonzero.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
WIFSTOPPED(status)
</TERM>
<LISTITEM>
<PARA>
returns true if the child process that caused the return is currently 
stopped; this is only possible if the call was done using 
<FUNCTION>WUNTRACED</FUNCTION>.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
WSTOPSIG(status)
</TERM>

<LISTITEM>
<PARA>
returns the number of the signal that caused the child to stop. This 
macro can only be evaluated if <FUNCTION>WIFSTOPPED</FUNCTION> 
returned nonzero.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<PARA>
If <PARAMETER>rusage</PARAMETER> is not <TOKEN>NULL</TOKEN>, the 
struct <STRUCTNAME>rusage</STRUCTNAME> (as defined in 
<FILENAME>sys/resource.h</FILENAME>) that it points to will be filled 
with accounting information. (See <FUNCTION>getrusage</FUNCTION>(2) 
for details.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, the process ID of the child that exited is returned. On 
error, <RETURNVALUE>-1</RETURNVALUE> is returned (in particular, when 
no unwaited-for child processes of the specified kind exist), or 
<RETURNVALUE>0</RETURNVALUE> if <FUNCTION>WNOHANG</FUNCTION> was used 
and no child was available yet. In the latter two cases, the global 
variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors
</TITLE>

<VARIABLELIST>
<VARLISTENTRY>
<TERM>
ECHILD 
</TERM>
<LISTITEM>
<PARA>
No unwaited-for child process as specified does exist.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
ERESTARTSYS
</TERM>
<LISTITEM>
<PARA>
A <FUNCTION>WNOHANG</FUNCTION> was not set and an unblocked signal or
a <VARNAME>SIGCHILD</VARNAME> was caught. This error is returned by 
the system call. The library interface is not allowed to return 
<ERRORNAME>ERESTARTSYS</ERRORNAME>, but will return
<ERRORNAME>EINTR</ERRORNAME>.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-waitpid-3"> <REFMETA>
<REFENTRYTITLE>waitpid</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>waitpid
</REFNAME>
<REFPURPOSE>
wait for child process
</REFPURPOSE>
</REFNAMEDIV>
<REFSECT1>
<TITLE>Description</TITLE>
<PARA>
<FUNCTION>waitpid</FUNCTION> is as specified in 
<XREF LINKEND=STD.SUSv3>,
but with differences as listed below.
</PARA>

<REFSECT2>
<TITLE>Need not support <SYMBOL>WCONTINUED</SYMBOL> or
<SYMBOL>WIFCONTINUED</SYMBOL></TITLE>
<PARA>
Implementations need not support the functionality of 
<FUNCTION>WCONTINUED</FUNCTION> or <FUNCTION>WIFCONTINUED</FUNCTION>.
</PARA>
</REFSECT2>

</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-warn-3"> <REFMETA>
<REFENTRYTITLE>warn</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>warn
</REFNAME>
<REFPURPOSE>
formatted error messages
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;err.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>warn</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*fmt</REPLACEABLE></PARAMETER>
  <PARAMETER>...</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>warn</FUNCTION> function
shall display a formatted error message on the standard
error stream.
The output shall consist of the last component of the program name, a colon
character, and a space character. If <PARAMETER>fmt</PARAMETER> is non-NULL, it shall be used as a
format string for the <FUNCTION>printf</FUNCTION>
family of functions, and the formatted message, a
colon character, and a space are written to <VarName>stderr</VarName>.
Finally,  the error message
string affiliated with the current value of the global variable 
<VarName>errno</VarName> shall be
written to <VarName>stderr</VarName>, followed by a newline character.
</PARA>
</REFSECT1>

<!-- 4th Berkeley Distribution        June 9, 1993  -->
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-warnx-3"> <REFMETA>
<REFENTRYTITLE>warnx</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>warnx
</REFNAME>
<REFPURPOSE>
formatted error messages
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;err.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>warnx</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*fmt</REPLACEABLE></PARAMETER>
  <PARAMETER>...</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>warnx</FUNCTION> function shall display a formatted error message on the 
standard error stream. The last component of the program name, a colon 
character, and a space shall be output. If <PARAMETER>fmt</PARAMETER> is 
non-<LITERAL>NULL</LITERAL>, it shall be used as the format string
for the <FUNCTION>printf</FUNCTION> family of functions, and
the formatted error message, a colon 
character, and a space shall be output. The output shall be followed by a 
newline character.
</PARA>
</REFSECT1>
<!--        4th Berkeley Distribution        June 9, 1993    -->
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-wcpcpy-3"> <REFMETA>
<REFENTRYTITLE>wcpcpy</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>wcpcpy
</REFNAME>
<REFPURPOSE>
copy a wide character string, returning a pointer to its end
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;wchar.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>wchar_t 
  <FUNCTION>*wcpcpy</FUNCTION></FUNCDEF>
 <PARAMDEF>wchar_t 
  <PARAMETER><REPLACEABLE>*dest</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const wchar_t 
  <PARAMETER><REPLACEABLE>*src</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>wcpcpy</FUNCTION> is the wide-character equivalent of 
<FUNCTION>stpcpy</FUNCTION>. It copies the wide character string 
<PARAMETER>src</PARAMETER>, including the terminating 
<TOKEN>L'\0'</TOKEN> character, to the array <PARAMETER>dest</PARAMETER>.
</PARA>
<PARA>
The strings may not overlap.
</PARA>
<PARA>
The programmer shall ensure that there is room for at least 
<FUNCTION>wcslen</FUNCTION><PARAMETER>(src)</PARAMETER><LITERAL>+1</LITERAL> 
wide characters at <PARAMETER>dest</PARAMETER>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>wcpcpy</FUNCTION> returns a pointer to the end of the 
wide-character string <PARAMETER>dest</PARAMETER>, that is, a pointer to 
the terminating <TOKEN>L'\0'</TOKEN> character.
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-wcpncpy-3"> <REFMETA>
<REFENTRYTITLE>wcpncpy</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>wcpncpy
</REFNAME>
<REFPURPOSE>
copy a fixed-size string of wide characters, returning a pointer to its end
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;wchar.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>wchar_t 
  <FUNCTION>*wcpncpy</FUNCTION></FUNCDEF>
 <PARAMDEF>wchar_t 
  <PARAMETER><REPLACEABLE>*dest</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const wchar_t 
  <PARAMETER><REPLACEABLE>*src</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>n</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>wcpncpy</FUNCTION> is the wide-character equivalent of 
<FUNCTION>stpncpy</FUNCTION>. It copies at most <PARAMETER>n</PARAMETER> 
wide characters from the wide-character string <PARAMETER>src</PARAMETER>, 
including the terminating <TOKEN>L'\0'</TOKEN> character, to the 
array <PARAMETER>dest</PARAMETER>. Exactly <PARAMETER>n</PARAMETER> 
wide characters are written at <PARAMETER>dest</PARAMETER>. If the 
length <FUNCTION>wcslen</FUNCTION><PARAMETER>(src)</PARAMETER> is 
smaller than <PARAMETER>n</PARAMETER>, the remaining wide characters 
in the array <PARAMETER>dest</PARAMETER> are filled 
with <TOKEN>L'\0'</TOKEN> characters. If the length 
<FUNCTION>wcslen</FUNCTION><PARAMETER>(src)</PARAMETER> is greater 
than or equal to <PARAMETER>n</PARAMETER>, the string 
<PARAMETER>dest</PARAMETER> will not be <TOKEN>L'\0'</TOKEN> 
terminated.
</PARA>
<PARA>
The strings may not overlap.
</PARA>
<PARA>
The programmer shall ensure that there is room for at least 
<PARAMETER>n</PARAMETER> wide characters at <PARAMETER>dest</PARAMETER>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>wcpncpy</FUNCTION> returns a pointer to the wide character one past
the last non-null wide character written.
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-wcscasecmp-3"> <REFMETA>
<REFENTRYTITLE>wcscasecmp</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>wcscasecmp
</REFNAME>
<REFPURPOSE>
compare two wide-character strings, ignoring case
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;wchar.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>wcscasecmp</FUNCTION></FUNCDEF>
 <PARAMDEF>const wchar_t 
  <PARAMETER><REPLACEABLE>*s1</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const wchar_t 
  <PARAMETER><REPLACEABLE>*s2</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>wcscasecmp</FUNCTION> is the wide-character equivalent of 
<FUNCTION>strcasecmp</FUNCTION>. It compares the wide-character string 
<PARAMETER>s1</PARAMETER> and the wide-character string 
<PARAMETER>s2</PARAMETER>, ignoring case differences (towupper, towlower).
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>wcscasecmp</FUNCTION> returns <RETURNVALUE>0</RETURNVALUE> 
if the wide-character strings <PARAMETER>s1</PARAMETER> and 
<PARAMETER>s2</PARAMETER> are equal except for case distinctions. It 
returns a positive integer if <PARAMETER>s1</PARAMETER> is greater 
than <PARAMETER>s2</PARAMETER>, ignoring case. It returns a negative 
integer if <PARAMETER>s1</PARAMETER> is smaller than 
<PARAMETER>s2</PARAMETER>, ignoring case.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Notes
</TITLE>
<PARA>
The behavior of <FUNCTION>wcscasecmp</FUNCTION> depends upon the 
<VARNAME>LC_CTYPE</VARNAME> category of the current locale.
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-wcsdup-3"> <REFMETA>
<REFENTRYTITLE>wcsdup</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>wcsdup
</REFNAME>
<REFPURPOSE>
duplicate a wide-character string
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;wchar.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>wchar_t 
  <FUNCTION>*wcsdup</FUNCTION></FUNCDEF>
 <PARAMDEF>const wchar_t 
  <PARAMETER><REPLACEABLE>*s</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>wcsdup</FUNCTION> is the wide-character equivalent of 
<FUNCTION>strdup</FUNCTION>. It allocates and returns a new wide-character 
string whose initial contents is a duplicate of the wide-character string 
<PARAMETER>s</PARAMETER>.
</PARA>
<PARA>
Memory for the new wide-character string is obtained with 
<FUNCTION>malloc</FUNCTION>(3), and can be freed with 
<FUNCTION>free</FUNCTION>(3).
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>wcsdup</FUNCTION> returns a pointer to the new wide-character 
string, or <RETURNVALUE>NULL</RETURNVALUE> if sufficient memory was not 
available.
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="baselib-wcsncasecmp-3"> <REFMETA>
<REFENTRYTITLE>wcsncasecmp</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>wcsncasecmp</REFNAME>
<REFPURPOSE>
compare two fixed-size wide-character strings, ignoring case
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;wchar.h>

int wcsncasecmp(const wchar_t *s1, const wchar_t *s2, size_t n);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>wcsncasecmp</FUNCTION> is the wide-character equivalent of 
<FUNCTION>strncasecmp</FUNCTION>. It compares the wide-character string 
<PARAMETER>s1</PARAMETER> and the wide-character string 
<PARAMETER>s2</PARAMETER>, but at most <PARAMETER>n</PARAMETER> wide
characters from each string, ignoring case differences (towupper, towlower).
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>wcscasecmp</FUNCTION> returns <RETURNVALUE>0</RETURNVALUE> 
if the wide-character strings <PARAMETER>s1</PARAMETER> and 
<PARAMETER>s2</PARAMETER>, truncated to at most length 
<PARAMETER>n</PARAMETER>, are equal except for case distinctions. It 
returns a positive integer if truncated <PARAMETER>s1</PARAMETER> is 
greater than truncated <PARAMETER>s2</PARAMETER>, ignoring case. It 
returns a negative integer if truncated <PARAMETER>s1</PARAMETER> is 
smaller than truncated <PARAMETER>s2</PARAMETER>, ignoring case.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Notes
</TITLE>
<PARA>
The behavior of <FUNCTION>wcsncasecmp</FUNCTION> depends upon the 
<VARNAME>LC_CTYPE</VARNAME> category of the current locale.
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-wcsnlen-3"> <REFMETA>
<REFENTRYTITLE>wcsnlen</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>wcsnlen</REFNAME>
<REFPURPOSE>
determine the length of a fixed-size wide-character string
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;wchar.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>size_t 
  <FUNCTION>wcsnlen</FUNCTION></FUNCDEF>
 <PARAMDEF>const wchar_t 
  <PARAMETER><REPLACEABLE>*s</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>maxlen</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>wcsnlen</FUNCTION> is the wide-character equivalent of 
<FUNCTION>strnlen</FUNCTION>. It returns the number of wide-characters in 
the string <PARAMETER>s</PARAMETER>, not including the terminating 
<TOKEN>L'\0'</TOKEN> character, but at most <PARAMETER>maxlen</PARAMETER>. 
In doing this, <FUNCTION>wcsnlen</FUNCTION> looks only at the first 
<PARAMETER>maxlen</PARAMETER> wide-characters at <PARAMETER>s</PARAMETER> 
and never beyond <PARAMETER>s</PARAMETER> + <PARAMETER>maxlen</PARAMETER>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>wcsnlen</FUNCTION> returns 
<FUNCTION>wcslen</FUNCTION><PARAMETER>(s)</PARAMETER> if that is less than 
<PARAMETER>maxlen</PARAMETER>, or <PARAMETER>maxlen</PARAMETER> if there is 
no <TOKEN>L'\0'</TOKEN> character among the first 
<PARAMETER>maxlen</PARAMETER> wide characters pointed to by 
<PARAMETER>s</PARAMETER>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Notes
</TITLE>
<PARA>
The behavior of <FUNCTION>wcsncasecmp</FUNCTION> depends on the 
<VARNAME>LC_CTYPE</VARNAME> category of the current locale.
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-wcsnrtombs-3"> <REFMETA>
<REFENTRYTITLE>wcsnrtombs</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>wcsnrtombs</REFNAME>
<REFPURPOSE>
convert a wide character string to a multi-byte string
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;wchar.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>size_t 
  <FUNCTION>wcsnrtombs</FUNCTION></FUNCDEF>
 <PARAMDEF>char 
  <PARAMETER><REPLACEABLE>*dest</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const wchar_t 
  <PARAMETER><REPLACEABLE>**src</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>nwc</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>len</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>mbstate_t 
  <PARAMETER><REPLACEABLE>*ps</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>wcsnrtombs</FUNCTION> is like <FUNCTION>wcsrtombs</FUNCTION>,
except that the number of wide characters to be converted, starting at 
<PARAMETER>src</PARAMETER>, is limited to <PARAMETER>nwc</PARAMETER>.
</PARA>
<PARA>
If <PARAMETER>dest</PARAMETER> is not a <TOKEN>NULL</TOKEN> pointer, 
<FUNCTION>wcsnrtombs</FUNCTION> converts at most 
<PARAMETER>nwc</PARAMETER> wide characters from the wide-character 
string <PARAMETER>src</PARAMETER> to a multibyte string starting at 
<PARAMETER>dest</PARAMETER>. At most <PARAMETER>len</PARAMETER> bytes 
are written to <PARAMETER>dest</PARAMETER>. The  state 
<PARAMETER>ps</PARAMETER> is updated.
</PARA>
<PARA>
The conversion is effectively performed by repeatedly calling:
<SYNOPSIS>
wcrtomb(dest, *src, ps)</SYNOPSIS>
as long as this call succeeds, and then incrementing 
<PARAMETER>dest</PARAMETER> by the number of bytes written and 
<PARAMETER>src</PARAMETER> by <LITERAL>1</LITERAL>.
</PARA>
<PARA>
The conversion can stop for three reasons:
</PARA>
<PARA>
<ITEMIZEDLIST MARK='BULLET'>
<LISTITEM>
<PARA>
A wide character has been encountered that cannot be represented as a
multibyte sequence (according to the current locale). In this case 
<PARAMETER>src</PARAMETER> is left pointing to the invalid wide character, 
(size_t)(-1) is returned, and <VARNAME>errno</VARNAME> is 
set to <ERRORNAME>EILSEQ</ERRORNAME>.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
<PARAMETER>nws</PARAMETER> wide characters have been converted without
encountering a <TOKEN>L'\0'</TOKEN>, or the length limit forces a stop. 
In this case, <PARAMETER>src</PARAMETER> is left pointing to the next 
wide character to be converted, and the number bytes written to 
<PARAMETER>dest</PARAMETER> is returned.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
The wide-character string has been completely converted, including the 
terminating <TOKEN>L'\0'</TOKEN> (which has the side effect of bringing 
back <PARAMETER>ps</PARAMETER> to the initial state). In this case, 
<PARAMETER>src</PARAMETER> is set to <LITERAL>NULL</LITERAL>, and the 
number of bytes written to <PARAMETER>dest</PARAMETER>, excluding the 
terminating <TOKEN>L'\0'</TOKEN> byte, is returned.
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</PARA>
<PARA>
If <PARAMETER>dest</PARAMETER> is <LITERAL>NULL</LITERAL>, 
<PARAMETER>len</PARAMETER> is ignored, and the conversion proceeds 
as above, except that the converted bytes are not written 
out to memory, and that no destination length limit exists.
</PARA>
<PARA>
In both of the above cases, if <PARAMETER>ps</PARAMETER> is a 
<LITERAL>NULL</LITERAL> pointer, a static anonymous state only known 
to <FUNCTION>wcsnrtombs</FUNCTION> is used instead.
</PARA>
<PARA>
The programmer shall ensure that there is room for at least 
<PARAMETER>len</PARAMETER> bytes at <PARAMETER>dest</PARAMETER>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>wcsnrtombs</FUNCTION> returns the number of bytes that 
make up the converted part of multibyte sequence, not including 
the terminating L'\0' byte. If a wide character was 
encountered which could not be converted, (size_t)(-1) is returned, 
and the global variable <VARNAME>errno</VARNAME> set to 
<ERRORNAME>EILSEQ</ERRORNAME>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Notes
</TITLE>
<PARA>
The behavior of <FUNCTION>wcsnrtombs</FUNCTION> depends on the 
<VARNAME>LC_CTYPE</VARNAME> category of the current locale.
</PARA>
<PARA>
Passing <TOKEN>NULL</TOKEN> as <PARAMETER>ps</PARAMETER> is not 
multi-thread safe.
</PARA>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-wcstoq"> <REFMETA>
<REFENTRYTITLE>wcstoq</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>wcstoq</REFNAME>
<REFPURPOSE>
convert wide string to long long int representation
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;wchar.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>long long int 
  <FUNCTION>wcstoq</FUNCTION></FUNCDEF>
 <PARAMDEF>const wchar_t * restrict 
  <PARAMETER><REPLACEABLE>nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>wchar_t ** restrict 
  <PARAMETER><REPLACEABLE>endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>base</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>wcstoq</FUNCTION> function shall convert
the initial portion of the wide 
string <PARAMETER>nptr</PARAMETER> to <LITERAL>long long int</LITERAL> 
representation. It is identical to <FUNCTION>wcstoll</FUNCTION>.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
Refer to <FUNCTION>wcstoll</FUNCTION>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
Refer to <FUNCTION>wcstoll</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-wcstouq"> <REFMETA>
<REFENTRYTITLE>wcstouq</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>wcstouq</REFNAME>
<REFPURPOSE>
convert wide string to unsigned long long int representation
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;wchar.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>unsigned long long int 
  <FUNCTION>wcstouq</FUNCTION></FUNCDEF>
 <PARAMDEF>const wchar_t * restrict 
  <PARAMETER><REPLACEABLE>nptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>wchar_t ** restrict 
  <PARAMETER><REPLACEABLE>endptr</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>base</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>wcstouq</FUNCTION> function shall convert
the initial portion of the wide 
string <PARAMETER>nptr</PARAMETER> to <LITERAL>unsigned long long 
int</LITERAL> representation.
It is identical to <FUNCTION>wcstoull</FUNCTION>.
</PARA>

</REFSECT1>
<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
Refer to <FUNCTION>wcstoull</FUNCTION>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
Refer to <FUNCTION>wcstoull</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib-xdr-u-int-3"> <REFMETA>
<REFENTRYTITLE>xdr_u_int</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>xdr_u_int</REFNAME>
<REFPURPOSE>
library routines for external data representation
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>30 Oct 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>xdr_u_int</FUNCTION></FUNCDEF>
 <PARAMDEF>XDR * 
  <PARAMETER><REPLACEABLE>xdrs</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>unsigned int *
  <PARAMETER><REPLACEABLE>up</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>30 Oct 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>xdr_u_int</FUNCTION> is a filter primitive that translates between
C unsigned integers and their external representations.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>1</RETURNVALUE> is returned. 
On error, <RETURNVALUE>0</RETURNVALUE> is returned.
</PARA>
</REFSECT1>
</REFENTRY>

</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->
<!--    at Tue Sep 28 23:06:25 2004 -->
<SECT1 ID=libm>
<TITLE>Interfaces for libm</TITLE>
<PARA>
<XREF LINKEND="lib-libm-def"> defines the library name and shared object name
for the libm library
</PARA>
<TABLE id="lib-libm-def">
<TITLE>libm Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libm</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>See archLSB.</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="std.ISOC99">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.SUSv2">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Math -->
<SECT2>
<!--libgroup-->
<TITLE>Math</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Math</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Math specified in <XREF linkend="tbl-libm-mat-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libm-mat-ints">
<TITLE>libm - Math Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>acos</primary></indexterm>acos<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cexp</primary></indexterm>cexp<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>expf</primary></indexterm>expf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>jnf</primary></indexterm>jnf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>remquof</primary></indexterm>remquof<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acosf</primary></indexterm>acosf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cexpf</primary></indexterm>cexpf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>expl</primary></indexterm>expl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>jnl</primary></indexterm>jnl<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>remquol</primary></indexterm>remquol<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acosh</primary></indexterm>acosh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cexpl</primary></indexterm>cexpl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>expm1</primary></indexterm>expm1<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ldexp</primary></indexterm>ldexp<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>rint</primary></indexterm>rint<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acoshf</primary></indexterm>acoshf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cimag</primary></indexterm>cimag<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fabs</primary></indexterm>fabs<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ldexpf</primary></indexterm>ldexpf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>rintf</primary></indexterm>rintf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acoshl</primary></indexterm>acoshl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cimagf</primary></indexterm>cimagf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fabsf</primary></indexterm>fabsf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ldexpl</primary></indexterm>ldexpl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>rintl</primary></indexterm>rintl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acosl</primary></indexterm>acosl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cimagl</primary></indexterm>cimagl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fabsl</primary></indexterm>fabsl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgamma</primary></indexterm>lgamma<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>round</primary></indexterm>round<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asin</primary></indexterm>asin<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clog</primary></indexterm>clog<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fdim</primary></indexterm>fdim<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgamma_r</primary></indexterm>lgamma_r<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>roundf</primary></indexterm>roundf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinf</primary></indexterm>asinf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clog10</primary></indexterm>clog10<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fdimf</primary></indexterm>fdimf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgammaf</primary></indexterm>lgammaf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>roundl</primary></indexterm>roundl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinh</primary></indexterm>asinh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clog10f</primary></indexterm>clog10f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>fdiml</primary></indexterm>fdiml<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgammaf_r</primary></indexterm>lgammaf_r<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalb</primary></indexterm>scalb<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinhf</primary></indexterm>asinhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clog10l</primary></indexterm>clog10l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>feclearexcept</primary></indexterm>feclearexcept<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgammal</primary></indexterm>lgammal<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbf</primary></indexterm>scalbf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinhl</primary></indexterm>asinhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clogf</primary></indexterm>clogf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fegetenv</primary></indexterm>fegetenv<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lgammal_r</primary></indexterm>lgammal_r<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbl</primary></indexterm>scalbl<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinl</primary></indexterm>asinl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>clogl</primary></indexterm>clogl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fegetexceptflag</primary></indexterm>fegetexceptflag<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llrint</primary></indexterm>llrint<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbln</primary></indexterm>scalbln<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan</primary></indexterm>atan<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>conj</primary></indexterm>conj<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fegetround</primary></indexterm>fegetround<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llrintf</primary></indexterm>llrintf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalblnf</primary></indexterm>scalblnf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan2</primary></indexterm>atan2<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>conjf</primary></indexterm>conjf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>feholdexcept</primary></indexterm>feholdexcept<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llrintl</primary></indexterm>llrintl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalblnl</primary></indexterm>scalblnl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan2f</primary></indexterm>atan2f<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>conjl</primary></indexterm>conjl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>feraiseexcept</primary></indexterm>feraiseexcept<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llround</primary></indexterm>llround<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbn</primary></indexterm>scalbn<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan2l</primary></indexterm>atan2l<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>copysign</primary></indexterm>copysign<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fesetenv</primary></indexterm>fesetenv<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llroundf</primary></indexterm>llroundf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbnf</primary></indexterm>scalbnf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanf</primary></indexterm>atanf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>copysignf</primary></indexterm>copysignf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fesetexceptflag</primary></indexterm>fesetexceptflag<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>llroundl</primary></indexterm>llroundl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>scalbnl</primary></indexterm>scalbnl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanh</primary></indexterm>atanh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>copysignl</primary></indexterm>copysignl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fesetround</primary></indexterm>fesetround<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>log</primary></indexterm>log<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>significand</primary></indexterm>significand<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanhf</primary></indexterm>atanhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cos</primary></indexterm>cos<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fetestexcept</primary></indexterm>fetestexcept<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>log10</primary></indexterm>log10<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>significandf</primary></indexterm>significandf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanhl</primary></indexterm>atanhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cosf</primary></indexterm>cosf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>feupdateenv</primary></indexterm>feupdateenv<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>log10f</primary></indexterm>log10f<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>significandl</primary></indexterm>significandl<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanl</primary></indexterm>atanl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cosh</primary></indexterm>cosh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>finite</primary></indexterm>finite<LINK LINKEND="std-13-5-tbl-libm-mat-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>log10l</primary></indexterm>log10l<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sin</primary></indexterm>sin<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cabs</primary></indexterm>cabs<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>coshf</primary></indexterm>coshf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>finitef</primary></indexterm>finitef<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>log1p</primary></indexterm>log1p<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sincos</primary></indexterm>sincos<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cabsf</primary></indexterm>cabsf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>coshl</primary></indexterm>coshl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>finitel</primary></indexterm>finitel<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>logb</primary></indexterm>logb<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sincosf</primary></indexterm>sincosf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cabsl</primary></indexterm>cabsl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cosl</primary></indexterm>cosl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>floor</primary></indexterm>floor<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>logf</primary></indexterm>logf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sincosl</primary></indexterm>sincosl<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacos</primary></indexterm>cacos<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cpow</primary></indexterm>cpow<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>floorf</primary></indexterm>floorf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>logl</primary></indexterm>logl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sinf</primary></indexterm>sinf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacosf</primary></indexterm>cacosf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cpowf</primary></indexterm>cpowf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>floorl</primary></indexterm>floorl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lrint</primary></indexterm>lrint<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sinh</primary></indexterm>sinh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacosh</primary></indexterm>cacosh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cpowl</primary></indexterm>cpowl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fma</primary></indexterm>fma<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lrintf</primary></indexterm>lrintf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sinhf</primary></indexterm>sinhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacoshf</primary></indexterm>cacoshf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cproj</primary></indexterm>cproj<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmaf</primary></indexterm>fmaf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lrintl</primary></indexterm>lrintl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sinhl</primary></indexterm>sinhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacoshl</primary></indexterm>cacoshl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cprojf</primary></indexterm>cprojf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmal</primary></indexterm>fmal<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lround</primary></indexterm>lround<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sinl</primary></indexterm>sinl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacosl</primary></indexterm>cacosl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>cprojl</primary></indexterm>cprojl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmax</primary></indexterm>fmax<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lroundf</primary></indexterm>lroundf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sqrt</primary></indexterm>sqrt<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>carg</primary></indexterm>carg<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>creal</primary></indexterm>creal<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmaxf</primary></indexterm>fmaxf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>lroundl</primary></indexterm>lroundl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>sqrtf</primary></indexterm>sqrtf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cargf</primary></indexterm>cargf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>crealf</primary></indexterm>crealf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmaxl</primary></indexterm>fmaxl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>matherr</primary></indexterm>matherr<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sqrtl</primary></indexterm>sqrtl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cargl</primary></indexterm>cargl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>creall</primary></indexterm>creall<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmin</primary></indexterm>fmin<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>modf</primary></indexterm>modf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tan</primary></indexterm>tan<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casin</primary></indexterm>casin<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csin</primary></indexterm>csin<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fminf</primary></indexterm>fminf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>modff</primary></indexterm>modff<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tanf</primary></indexterm>tanf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinf</primary></indexterm>casinf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csinf</primary></indexterm>csinf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fminl</primary></indexterm>fminl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>modfl</primary></indexterm>modfl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tanh</primary></indexterm>tanh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinh</primary></indexterm>casinh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csinh</primary></indexterm>csinh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmod</primary></indexterm>fmod<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nan</primary></indexterm>nan<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tanhf</primary></indexterm>tanhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinhf</primary></indexterm>casinhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csinhf</primary></indexterm>csinhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmodf</primary></indexterm>fmodf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nanf</primary></indexterm>nanf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tanhl</primary></indexterm>tanhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinhl</primary></indexterm>casinhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csinhl</primary></indexterm>csinhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmodl</primary></indexterm>fmodl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nanl</primary></indexterm>nanl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tanl</primary></indexterm>tanl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinl</primary></indexterm>casinl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csinl</primary></indexterm>csinl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>frexp</primary></indexterm>frexp<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nearbyint</primary></indexterm>nearbyint<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tgamma</primary></indexterm>tgamma<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catan</primary></indexterm>catan<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csqrt</primary></indexterm>csqrt<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>frexpf</primary></indexterm>frexpf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nearbyintf</primary></indexterm>nearbyintf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tgammaf</primary></indexterm>tgammaf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanf</primary></indexterm>catanf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csqrtf</primary></indexterm>csqrtf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>frexpl</primary></indexterm>frexpl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nearbyintl</primary></indexterm>nearbyintl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>tgammal</primary></indexterm>tgammal<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanh</primary></indexterm>catanh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>csqrtl</primary></indexterm>csqrtl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gamma</primary></indexterm>gamma<LINK LINKEND="std-13-5-tbl-libm-mat-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>nextafter</primary></indexterm>nextafter<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>trunc</primary></indexterm>trunc<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanhf</primary></indexterm>catanhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctan</primary></indexterm>ctan<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gammaf</primary></indexterm>gammaf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nextafterf</primary></indexterm>nextafterf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>truncf</primary></indexterm>truncf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanhl</primary></indexterm>catanhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctanf</primary></indexterm>ctanf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>gammal</primary></indexterm>gammal<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>nextafterl</primary></indexterm>nextafterl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>truncl</primary></indexterm>truncl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanl</primary></indexterm>catanl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctanh</primary></indexterm>ctanh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>hypot</primary></indexterm>hypot<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nexttoward</primary></indexterm>nexttoward<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>y0</primary></indexterm>y0<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cbrt</primary></indexterm>cbrt<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctanhf</primary></indexterm>ctanhf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>hypotf</primary></indexterm>hypotf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nexttowardf</primary></indexterm>nexttowardf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>y0f</primary></indexterm>y0f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cbrtf</primary></indexterm>cbrtf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctanhl</primary></indexterm>ctanhl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>hypotl</primary></indexterm>hypotl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>nexttowardl</primary></indexterm>nexttowardl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>y0l</primary></indexterm>y0l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cbrtl</primary></indexterm>cbrtl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctanl</primary></indexterm>ctanl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ilogb</primary></indexterm>ilogb<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pow</primary></indexterm>pow<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>y1</primary></indexterm>y1<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccos</primary></indexterm>ccos<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>dremf</primary></indexterm>dremf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ilogbf</primary></indexterm>ilogbf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pow10</primary></indexterm>pow10<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>y1f</primary></indexterm>y1f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccosf</primary></indexterm>ccosf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>dreml</primary></indexterm>dreml<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>ilogbl</primary></indexterm>ilogbl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pow10f</primary></indexterm>pow10f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>y1l</primary></indexterm>y1l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccosh</primary></indexterm>ccosh<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erf</primary></indexterm>erf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j0</primary></indexterm>j0<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pow10l</primary></indexterm>pow10l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>yn</primary></indexterm>yn<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccoshf</primary></indexterm>ccoshf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erfc</primary></indexterm>erfc<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j0f</primary></indexterm>j0f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>powf</primary></indexterm>powf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ynf</primary></indexterm>ynf<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccoshl</primary></indexterm>ccoshl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erfcf</primary></indexterm>erfcf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j0l</primary></indexterm>j0l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>powl</primary></indexterm>powl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>ynl</primary></indexterm>ynl<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccosl</primary></indexterm>ccosl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erfcl</primary></indexterm>erfcl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j1</primary></indexterm>j1<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>remainder</primary></indexterm>remainder<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ceil</primary></indexterm>ceil<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erff</primary></indexterm>erff<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j1f</primary></indexterm>j1f<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>remainderf</primary></indexterm>remainderf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ceilf</primary></indexterm>ceilf<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>erfl</primary></indexterm>erfl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>j1l</primary></indexterm>j1l<LINK LINKEND="std-13-25-tbl-libm-mat-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>remainderl</primary></indexterm>remainderl<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ceill</primary></indexterm>ceill<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>exp</primary></indexterm>exp<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>jn</primary></indexterm>jn<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>remquo</primary></indexterm>remquo<LINK LINKEND="std-13-67-tbl-libm-mat-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-13-67-tbl-libm-mat-ints">[1]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<FORMALPARA><TITLE id="std-13-25-tbl-libm-mat-ints">[2]</TITLE><para><XREF LINKEND=std.ISOC99></para></FORMALPARA>
<FORMALPARA><TITLE id="std-13-5-tbl-libm-mat-ints">[3]</TITLE><para><XREF LINKEND=std.SUSv2></para></FORMALPARA>
<PARA>
An LSB conforming implementation shall provide the generic data interfaces
for Math specified in <XREF linkend="tbl-libm-mat-data">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libm-mat-data">
<TITLE>libm - Math Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>signgam</primary></indexterm>signgam<LINK LINKEND="std-13-67-tbl-libm-mat-data"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-13-67-tbl-libm-mat-data">[1]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libm-ddefs>
<TITLE>Data Definitions for libm</TITLE>
<PARA>
This section defines global identifiers and their values that are associated with interfaces contained in libm.
These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
These definitions are intended to supplement those provided in the referenced underlying specifications.
</PARA>
<PARA>
This specification uses ISO/IEC 9899 C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>complex.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define complex	_Complex
</SCREEN>
</SECT2>
<!-- missing header file All/float.h -->
<SECT2>
<TITLE>math.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define DOMAIN	1
#define SING	2

struct exception
{
  int type;
  char *name;
  double arg1;
  double arg2;
  double retval;
}
 ;
#define isinf(x)	(sizeof (x) == sizeof (float) ? __isinff (x): sizeof (x) == sizeof (double) ? __isinf (x) : __isinfl (x))
#define isnan(x)	(sizeof (x) == sizeof (float) ? __isnanf (x)  : sizeof (x) == sizeof (double) ? __isnan (x) : __isnanl (x))

#define HUGE_VAL	0x1.0p2047
#define HUGE_VALF	0x1.0p255f
#define HUGE_VALL	0x1.0p32767L

#define NAN	((float)0x7fc00000UL)
#define M_1_PI	0.31830988618379067154
#define M_LOG10E	0.43429448190325182765
#define M_2_PI	0.63661977236758134308
#define M_LN2	0.69314718055994530942
#define M_SQRT1_2	0.70710678118654752440
#define M_PI_4	0.78539816339744830962
#define M_2_SQRTPI	1.12837916709551257390
#define M_SQRT2	1.41421356237309504880
#define M_LOG2E	1.4426950408889634074
#define M_PI_2	1.57079632679489661923
#define M_LN10	2.30258509299404568402
#define M_E	2.7182818284590452354
#define M_PI	3.14159265358979323846
#define INFINITY	HUGE_VALF

#define MATH_ERRNO	1
#define MATH_ERREXCEPT	2
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->
<!--    at Tue Sep 28 23:06:26 2004 -->
<SECT1 ID=libpthread>
<TITLE>Interfaces for libpthread</TITLE>
<PARA>
<XREF LINKEND="lib-libpthread-def"> defines the library name and shared object name
for the libpthread library
</PARA>
<TABLE id="lib-libpthread-def">
<TITLE>libpthread Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpthread</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpthread.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="std.LFS">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Realtime Threads -->
<SECT2>
<!--libgroup-->
<TITLE>Realtime Threads</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Realtime Threads</TITLE>
<PARA>
No external functions are defined for libpthread - Realtime Threads
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Advanced Realtime Threads -->
<SECT2>
<!--libgroup-->
<TITLE>Advanced Realtime Threads</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Advanced Realtime Threads</TITLE>
<PARA>
No external functions are defined for libpthread - Advanced Realtime Threads
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Posix Threads -->
<SECT2>
<!--libgroup-->
<TITLE>Posix Threads</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Posix Threads</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Posix Threads specified in <XREF linkend="tbl-libpthread-pos-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpthread-pos-ints">
<TITLE>libpthread - Posix Threads Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_pthread_cleanup_pop</primary></indexterm>_pthread_cleanup_pop<LINK LINKEND="std-132-10-tbl-libpthread-pos-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cancel</primary></indexterm>pthread_cancel<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_join</primary></indexterm>pthread_join<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_destroy</primary></indexterm>pthread_rwlock_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setconcurrency</primary></indexterm>pthread_setconcurrency<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_pthread_cleanup_push</primary></indexterm>_pthread_cleanup_push<LINK LINKEND="std-132-10-tbl-libpthread-pos-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_broadcast</primary></indexterm>pthread_cond_broadcast<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_key_create</primary></indexterm>pthread_key_create<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_init</primary></indexterm>pthread_rwlock_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setspecific</primary></indexterm>pthread_setspecific<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pread</primary></indexterm>pread<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_destroy</primary></indexterm>pthread_cond_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_key_delete</primary></indexterm>pthread_key_delete<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_rdlock</primary></indexterm>pthread_rwlock_rdlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_sigmask</primary></indexterm>pthread_sigmask<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pread64</primary></indexterm>pread64<LINK LINKEND="std-132-35-tbl-libpthread-pos-ints"> [3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_init</primary></indexterm>pthread_cond_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_kill</primary></indexterm>pthread_kill<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_timedrdlock</primary></indexterm>pthread_rwlock_timedrdlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_testcancel</primary></indexterm>pthread_testcancel<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_destroy</primary></indexterm>pthread_attr_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_signal</primary></indexterm>pthread_cond_signal<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_destroy</primary></indexterm>pthread_mutex_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_timedwrlock</primary></indexterm>pthread_rwlock_timedwrlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pwrite</primary></indexterm>pwrite<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getdetachstate</primary></indexterm>pthread_attr_getdetachstate<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_timedwait</primary></indexterm>pthread_cond_timedwait<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_init</primary></indexterm>pthread_mutex_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_tryrdlock</primary></indexterm>pthread_rwlock_tryrdlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pwrite64</primary></indexterm>pwrite64<LINK LINKEND="std-132-35-tbl-libpthread-pos-ints"> [3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getguardsize</primary></indexterm>pthread_attr_getguardsize<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_wait</primary></indexterm>pthread_cond_wait<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_lock</primary></indexterm>pthread_mutex_lock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_trywrlock</primary></indexterm>pthread_rwlock_trywrlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_close</primary></indexterm>sem_close<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getschedparam</primary></indexterm>pthread_attr_getschedparam<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_destroy</primary></indexterm>pthread_condattr_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_trylock</primary></indexterm>pthread_mutex_trylock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_unlock</primary></indexterm>pthread_rwlock_unlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_destroy</primary></indexterm>sem_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getstackaddr</primary></indexterm>pthread_attr_getstackaddr<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_getpshared</primary></indexterm>pthread_condattr_getpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_unlock</primary></indexterm>pthread_mutex_unlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_wrlock</primary></indexterm>pthread_rwlock_wrlock<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_getvalue</primary></indexterm>sem_getvalue<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getstacksize</primary></indexterm>pthread_attr_getstacksize<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_init</primary></indexterm>pthread_condattr_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_destroy</primary></indexterm>pthread_mutexattr_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_destroy</primary></indexterm>pthread_rwlockattr_destroy<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_init</primary></indexterm>sem_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_init</primary></indexterm>pthread_attr_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_setpshared</primary></indexterm>pthread_condattr_setpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_getpshared</primary></indexterm>pthread_mutexattr_getpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_getpshared</primary></indexterm>pthread_rwlockattr_getpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_open</primary></indexterm>sem_open<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setdetachstate</primary></indexterm>pthread_attr_setdetachstate<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_create</primary></indexterm>pthread_create<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_gettype</primary></indexterm>pthread_mutexattr_gettype<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_init</primary></indexterm>pthread_rwlockattr_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_post</primary></indexterm>sem_post<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setguardsize</primary></indexterm>pthread_attr_setguardsize<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_detach</primary></indexterm>pthread_detach<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_init</primary></indexterm>pthread_mutexattr_init<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_setpshared</primary></indexterm>pthread_rwlockattr_setpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_timedwait</primary></indexterm>sem_timedwait<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setschedparam</primary></indexterm>pthread_attr_setschedparam<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_equal</primary></indexterm>pthread_equal<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_setpshared</primary></indexterm>pthread_mutexattr_setpshared<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_self</primary></indexterm>pthread_self<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_trywait</primary></indexterm>sem_trywait<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setstackaddr</primary></indexterm>pthread_attr_setstackaddr<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_exit</primary></indexterm>pthread_exit<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_settype</primary></indexterm>pthread_mutexattr_settype<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setcancelstate</primary></indexterm>pthread_setcancelstate<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_unlink</primary></indexterm>sem_unlink<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setstacksize</primary></indexterm>pthread_attr_setstacksize<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_getspecific</primary></indexterm>pthread_getspecific<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_once</primary></indexterm>pthread_once<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setcanceltype</primary></indexterm>pthread_setcanceltype<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_wait</primary></indexterm>sem_wait<LINK LINKEND="std-132-67-tbl-libpthread-pos-ints"> [2]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-132-10-tbl-libpthread-pos-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-132-67-tbl-libpthread-pos-ints">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
<FORMALPARA><TITLE id="std-132-35-tbl-libpthread-pos-ints">[3]</TITLE><para><XREF LINKEND=std.LFS></para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpthread-ddefs>
<TITLE>Data Definitions for libpthread</TITLE>
<PARA>
This section defines global identifiers and their values that are associated with interfaces contained in libpthread.
These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
These definitions are intended to supplement those provided in the referenced underlying specifications.
</PARA>
<PARA>
This specification uses ISO/IEC 9899 C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>pthread.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define PTHREAD_MUTEX_DEFAULT	1
#define PTHREAD_MUTEX_NORMAL	1
#define PTHREAD_MUTEX_TIMED_NP	1
#define PTHREAD_MUTEX_RECURSIVE	2
#define PTHREAD_RWLOCK_DEFAULT_NP	2
#define PTHREAD_MUTEX_ERRORCHECK	3
#define pthread_cleanup_pop(execute)	_pthread_cleanup_pop(&amp _buffer,(execute));}
#define __LOCK_INITIALIZER	{ 0, 0 }
#define PTHREAD_RWLOCK_INITIALIZER	{ __LOCK_INITIALIZER, 0, NULL, NULL, NULL,PTHREAD_RWLOCK_DEFAULT_NP, PTHREAD_PROCESS_PRIVATE }
#define PTHREAD_MUTEX_INITIALIZER	{0,0,0,PTHREAD_MUTEX_TIMED_NP,__LOCK_INITIALIZER}
#define pthread_cleanup_push(routine,arg)	{struct _pthread_cleanup_buffer _buffer;_pthread_cleanup_push(&amp _buffer,(routine),(arg));
#define PTHREAD_COND_INITIALIZER	{__LOCK_INITIALIZER,0}

struct _pthread_cleanup_buffer
{
  void (*__routine) (void *);
  void *__arg;
  int __canceltype;
  struct _pthread_cleanup_buffer *__prev;
}
 ;
typedef unsigned int pthread_key_t;
typedef int pthread_once_t;
typedef long long __pthread_cond_align_t;

typedef unsigned long pthread_t;
struct _pthread_fastlock
{
  long __status;
  int __spinlock;
}
 ;

typedef struct _pthread_descr_struct *_pthread_descr;

typedef struct
{
  int __m_reserved;
  int __m_count;
  _pthread_descr __m_owner;
  int __m_kind;
  struct _pthread_fastlock __m_lock;
}
pthread_mutex_t;
typedef struct
{
  int __mutexkind;
}
pthread_mutexattr_t;

typedef struct
{
  int __detachstate;
  int __schedpolicy;
  struct sched_param __schedparam;
  int __inheritsched;
  int __scope;
  size_t __guardsize;
  int __stackaddr_set;
  void *__stackaddr;
  unsigned long __stacksize;
}
pthread_attr_t;

typedef struct
{
  struct _pthread_fastlock __c_lock;
  _pthread_descr __c_waiting;
  char __padding[48 - sizeof (struct _pthread_fastlock) -
		 sizeof (_pthread_descr) - sizeof (__pthread_cond_align_t)];
  __pthread_cond_align_t __align;
}
pthread_cond_t;
typedef struct
{
  int __dummy;
}
pthread_condattr_t;

typedef struct _pthread_rwlock_t
{
  struct _pthread_fastlock __rw_lock;
  int __rw_readers;
  _pthread_descr __rw_writer;
  _pthread_descr __rw_read_waiting;
  _pthread_descr __rw_write_waiting;
  int __rw_kind;
  int __rw_pshared;
}
pthread_rwlock_t;
typedef struct
{
  int __lockkind;
  int __pshared;
}
pthread_rwlockattr_t;

#define PTHREAD_CREATE_JOINABLE	0
#define PTHREAD_INHERIT_SCHED	0
#define PTHREAD_ONCE_INIT	0
#define PTHREAD_PROCESS_PRIVATE	0
#define PTHREAD_CREATE_DETACHED	1
#define PTHREAD_EXPLICIT_SCHED	1
#define PTHREAD_PROCESS_SHARED	1

#define PTHREAD_CANCELED	((void*)-1)
#define PTHREAD_CANCEL_DEFERRED	0
#define PTHREAD_CANCEL_ENABLE	0
#define PTHREAD_CANCEL_ASYNCHRONOUS	1
#define PTHREAD_CANCEL_DISABLE	1
</SCREEN>
</SECT2>
<SECT2>
<TITLE>semaphore.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct
{
  struct _pthread_fastlock __sem_lock;
  int __sem_value;
  _pthread_descr __sem_waiting;
}
sem_t;
#define SEM_FAILED	((sem_t*)0)

#define SEM_VALUE_MAX	((int)((~0u)>>1))
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libpthreadman>
<TITLE>Interface Definitions for libpthread</TITLE>
<PARA>
The following interfaces are included in libpthread and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed above for libpthread shall behave as described
in the referenced base document.
</PARA>
<REFENTRY ID="baselib--pthread-cleanup-pop"> <REFMETA>
<REFENTRYTITLE>_pthread_cleanup_pop</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_pthread_cleanup_pop</REFNAME>
<REFPURPOSE>
establish cancellation handlers
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 July 2003</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;pthread.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>_pthread_cleanup_pop</FUNCTION></FUNCDEF>
 <PARAMDEF>struct _pthread_cleanup_buffer *</PARAMDEF>
 <PARAMDEF>int</PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 July 2003</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>_pthread_cleanup_pop</FUNCTION> function provides
an implementation of the <function>pthread_cleanup_pop</function> macro
described in
<CITETITLE PUBWORK="BOOK"><XREF LINKEND="STD.SUSv3"></CITETITLE>.
</PARA>
<PARA>
The <function>_pthread_cleanup_pop</function> function is not in the
source standard; it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>


<REFENTRY ID="baselib--pthread-cleanup-push"> <REFMETA>
<REFENTRYTITLE>_pthread_cleanup_push</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_pthread_cleanup_push</REFNAME>
<REFPURPOSE>
establish cancellation handlers
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 July 2003</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;pthread.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>_pthread_cleanup_push</FUNCTION></FUNCDEF>
 <PARAMDEF>struct _pthread_cleanup_buffer *</PARAMDEF>
 <PARAMDEF>void (*) (void *)</PARAMDEF>
 <PARAMDEF>void *</PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>2 July 2003</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>_pthread_cleanup_push</FUNCTION> function provides
an implementation of the <function>pthread_cleanup_push</function> macro
described in
<CITETITLE PUBWORK="BOOK"><XREF LINKEND="STD.SUSv3"></CITETITLE>.
</PARA>
<PARA>
The <function>_pthread_cleanup_push</function> function is not in the
source standard; it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>


</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->
<!--    at Tue Sep 28 23:06:29 2004 -->
<SECT1 ID=libgcc-s>
<TITLE>Interfaces for libgcc_s</TITLE>
<PARA>
<XREF LINKEND="lib-libgcc-s-def"> defines the library name and shared object name
for the libgcc_s library
</PARA>
<TABLE id="lib-libgcc-s-def">
<TITLE>libgcc_s Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgcc_s</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgcc_s.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
</PARA>
<!-- debug: database interface name Unwind Library -->
<SECT2>
<!--libgroup-->
<TITLE>Unwind Library</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Unwind Library</TITLE>
<PARA>
No external functions are defined for libgcc_s - Unwind Library
</PARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgcc-s-ddefs>
<TITLE>Data Definitions for libgcc_s</TITLE>
<PARA>
This section defines global identifiers and their values that are associated with interfaces contained in libgcc_s.
These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
These definitions are intended to supplement those provided in the referenced underlying specifications.
</PARA>
<PARA>
This specification uses ISO/IEC 9899 C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>unwind.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct dwarf_eh_base
{
  void *tbase;
  void *dbase;
  void *func;
}
 ;
struct _Unwind_Context;

typedef unsigned int _Unwind_Ptr;
typedef unsigned int _Unwind_Word;

typedef enum
{
  _URC_NO_REASON, _URC_FOREIGN_EXCEPTION_CAUGHT = 1, _URC_FATAL_PHASE2_ERROR =
    2, _URC_FATAL_PHASE1_ERROR = 3, _URC_NORMAL_STOP = 4, _URC_END_OF_STACK =
    5, _URC_HANDLER_FOUND = 6, _URC_INSTALL_CONTEXT =
    7, _URC_CONTINUE_UNWIND = 8
}
_Unwind_Reason_Code;

struct _Unwind_Exception
{
  _Unwind_Exception_Class;
  _Unwind_Exception_Cleanup_Fn;
  _Unwind_Word;
  _Unwind_Word;
}
 ;
#define _UA_SEARCH_PHASE	1
#define _UA_END_OF_STACK	16
#define _UA_CLEANUP_PHASE	2
#define _UA_HANDLER_FRAME	4
#define _UA_FORCE_UNWIND	8
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->
<!--    at Tue Sep 28 23:06:27 2004 -->
<SECT1 ID=libdl>
<TITLE>Interfaces for libdl</TITLE>
<PARA>
<XREF LINKEND="lib-libdl-def"> defines the library name and shared object name
for the libdl library
</PARA>
<TABLE id="lib-libdl-def">
<TITLE>libdl Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libdl</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libdl.so.2</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="std.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="std.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Dynamic Loader -->
<SECT2>
<!--libgroup-->
<TITLE>Dynamic Loader</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Dynamic Loader</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Dynamic Loader specified in <XREF linkend="tbl-libdl-dyn-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libdl-dyn-ints">
<TITLE>libdl - Dynamic Loader Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>dladdr</primary></indexterm>dladdr<LINK LINKEND="std-27-10-tbl-libdl-dyn-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>dlclose</primary></indexterm>dlclose<LINK LINKEND="std-27-67-tbl-libdl-dyn-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>dlerror</primary></indexterm>dlerror<LINK LINKEND="std-27-67-tbl-libdl-dyn-ints"> [2]</LINK></ENTRY>
<ENTRY><indexterm><primary>dlopen</primary></indexterm>dlopen<LINK LINKEND="std-27-10-tbl-libdl-dyn-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>dlsym</primary></indexterm>dlsym<LINK LINKEND="std-27-10-tbl-libdl-dyn-ints"> [1]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-27-10-tbl-libdl-dyn-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
<FORMALPARA><TITLE id="std-27-67-tbl-libdl-dyn-ints">[2]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libdl-ddefs>
<TITLE>Data Definitions for libdl</TITLE>
<PARA>
This section defines global identifiers and their values that are associated with interfaces contained in libdl.
These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
These definitions are intended to supplement those provided in the referenced underlying specifications.
</PARA>
<PARA>
This specification uses ISO/IEC 9899 C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>dlfcn.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define RTLD_NEXT	((void *) -1l)
#define RTLD_LOCAL	0
#define RTLD_LAZY	0x00001
#define RTLD_NOW	0x00002
#define RTLD_GLOBAL	0x00100

typedef struct
{
  char *dli_fname;
  void *dli_fbase;
  char *dli_sname;
  void *dli_saddr;
}
Dl_info;
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libdlman>
<TITLE>Interface Definitions for libdl</TITLE>
<PARA>
The following interfaces are included in libdl and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed above for libdl shall behave as described
in the referenced base document.
</PARA>
<REFENTRY ID="baselib-dladdr-3"> <REFMETA>
<REFENTRYTITLE>dladdr</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>dladdr
</REFNAME>
<REFPURPOSE>
find the shared object containing a given address
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April  2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;dlfcn.h&gt;

typedef struct {
             const char  <STRUCTFIELD>*dli_fname</STRUCTFIELD>;
             void        <STRUCTFIELD>*dli_fbase</STRUCTFIELD>;
             const char  <STRUCTFIELD>*dli_sname</STRUCTFIELD>;
             void        <STRUCTFIELD>*dli_saddr</STRUCTFIELD>;
} <STRUCTNAME>Dl_info</STRUCTNAME>;
</SYNOPSIS>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>dladdr</FUNCTION></FUNCDEF>
 <PARAMDEF>void 
  <PARAMETER><REPLACEABLE>*address</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>Dl_info *dlip</PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>dladdr</FUNCTION> function shall query the dynamic
linker for information about the shared object containing the 
address <PARAMETER>address</PARAMETER>. The information shall be returned
in the user supplied data structure referenced by <PARAMETER>dlip</PARAMETER>.
</PARA>
<PARA>
The structure shall contain at least the following members:
<VARIABLELIST>
<VARLISTENTRY>
<TERM><structfield>dli_fname</structfield></TERM>
<LISTITEM><PARA>
The pathname of the shared object containing the address
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><structfield>dli_fbase</structfield></TERM>
<LISTITEM><PARA>
The base address at which the shared object is
mapped into the address space of the calling process.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><structfield>dli_sname</structfield></TERM>
<LISTITEM><PARA>
The name of the nearest runtime symbol with  value
less than or equal to <PARAMETER>address</PARAMETER>.
Where possible, the symbol name shall be returned as it
would appear in C source code.
</PARA><PARA>
If no symbol with a suitable value is found,
both this field and <structfield>dli_saddr</structfield>
shall be set to <LITERAL>NULL</LITERAL>.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><structfield>dli_saddr</structfield></TERM>
<LISTITEM><PARA>
The value of the symbol returned in
<structfield>dli_sname</structfield>.
</PARA></LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
<PARA>
The behavior of <function>dladdr</function> is only
specified in dynamically linked programs.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
On success, <function>dladdr</function> shall return non-zero, and
the structure referenced by <parameter>dlip</parameter> shall be filled in
as described. Otherwise, <function>dladdr</function> shall return zero,
and the cause of the error can be fetched with <function>dlerr</function>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
See <function>dlerr</function>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>
Environment
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
<LITERAL>LD_LIBRARY_PATH</LITERAL>
</TERM>
<LISTITEM>
<PARA>
directory search-path for object files
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<!--      BSDI BSD/OS                    February 9, 1998    -->
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</REFENTRY>

<refentry id="baselib-dlopen-1"> <refmeta>
<refentrytitle>dlopen</refentrytitle>
<refmiscinfo>Base Libraries</refmiscinfo>
</refmeta>
<refnamediv>
<refname>dlopen
</refname>
<refpurpose>open dynamic object
</refpurpose>
<indexterm id="ix-baselib-dlopen-1"><primary>dlopen</primary></indexterm>
</refnamediv>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>08 July  2004</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;dlfcn.h&gt;
</SYNOPSIS>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void * 
  <FUNCTION>dlopen</FUNCTION></FUNCDEF>
 <PARAMDEF>const char
  <PARAMETER><REPLACEABLE>*filename</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int
  <PARAMETER><REPLACEABLE>flag</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<refsect1>
<title>Description</title>

<para>
<command>dlopen</command> shall behave as specified in 
<XREF LINKEND="STD.SUSv3">, but with additional behaviors listed below.
</para>

<para>
If the file argument does not contain a slash character, then the
system shall look for a library of that name in at least the following
directories, and use the first one which is found:

<itemizedlist>

<listitem><para>The directories specified by the 
<CONSTANT>DT_RPATH</CONSTANT> dynamic entry.
</para></listitem>

<listitem><para>The directories specified in the 
<constant>LD_LIBRARY_PATH</constant>
environment variable (which is a colon separated list of pathnames).
This step shall be skipped for setuid
and setgid executables.</para></listitem>

<listitem><para>A set of directories sufficient to contain the
libraries specified in this standard.

<footnote><para>Traditionally, <filename>/lib</filename> and
<filename>/usr/lib</filename>.  This case would also cover cases in
which the system used the mechanism of
<filename>/etc/ld.so.conf</filename> and
<filename>/etc/ld.so.cache</filename> to provide access.
</para>

<para>Example: An application which is not linked against libm may
choose to dlopen libm.</para></footnote>

</para></listitem>

</itemizedlist>

</para>

</refsect1>
</refentry>

<refentry id="baselib-dlsym-1">

<refmeta>
<refentrytitle>dlsym</refentrytitle>
<refmiscinfo>Base Libraries</refmiscinfo>
</refmeta>

<refnamediv>
<refname>dlsym</refname>
<refpurpose>obtain the address of a symbol from a dlopen object</refpurpose>
<indexterm id="ix-baselib-dlsym-1">
  <primary>dlsym</primary></indexterm>
</refnamediv>

<refsect1>
<title>Description</title>

<para>
<function>dlsym</function> is as specified in the
<XREF LINKEND="std.SUSv3">, but with differences as listed below.
</para>

<refsect2>
<title>The special purpose value for handle RTLD_NEXT</title>
<para>
The value RTLD_NEXT, which is reserved for future use shall be available,
with the behavior as described in <XREF LINKEND="std.SUSv3">.


</para>
</refsect2>

</refsect1>
</refentry>

</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->
<!--    at Tue Sep 28 23:06:28 2004 -->
<SECT1 ID=libcrypt>
<TITLE>Interfaces for libcrypt</TITLE>
<PARA>
<XREF LINKEND="lib-libcrypt-def"> defines the library name and shared object name
for the libcrypt library
</PARA>
<TABLE id="lib-libcrypt-def">
<TITLE>libcrypt Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libcrypt</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libcrypt.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="std.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Encryption -->
<SECT2>
<!--libgroup-->
<TITLE>Encryption</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Encryption</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Encryption specified in <XREF linkend="tbl-libcrypt-enc-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libcrypt-enc-ints">
<TITLE>libcrypt - Encryption Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>crypt</primary></indexterm>crypt<LINK LINKEND="std-29-67-tbl-libcrypt-enc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>encrypt</primary></indexterm>encrypt<LINK LINKEND="std-29-67-tbl-libcrypt-enc-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>setkey</primary></indexterm>setkey<LINK LINKEND="std-29-67-tbl-libcrypt-enc-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-29-67-tbl-libcrypt-enc-ints">[1]</TITLE><para><XREF LINKEND=std.SUSv3></para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<!-- empty header file All/crypt.h -->
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->
<!--    at Tue Sep 28 23:06:28 2004 -->
<SECT1 ID=libpam>
<TITLE>Interfaces for libpam</TITLE>
<PARA>
<XREF LINKEND="lib-libpam-def"> defines the library name and shared object name
for the libpam library
</PARA>
<TABLE id="lib-libpam-def">
<TITLE>libpam Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpam</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpam.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

<PARA>
A single service name, <VARNAME>other</VARNAME>, shall always be present.
The behavior of this service shall be determined by the system administrator.
Additional service names may also exist.
<FOOTNOTE>
<PARA>
Future versions of this specification might define additional
service names.
</PARA>
</FOOTNOTE>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="std.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Pluggable Authentication API -->
<SECT2>
<!--libgroup-->
<TITLE>Pluggable Authentication API</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Pluggable Authentication API</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Pluggable Authentication API specified in <XREF linkend="tbl-libpam-plu-ints">,
with the full functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpam-plu-ints">
<TITLE>libpam - Pluggable Authentication API Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>pam_acct_mgmt</primary></indexterm>pam_acct_mgmt<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pam_close_session</primary></indexterm>pam_close_session<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pam_get_item</primary></indexterm>pam_get_item<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pam_set_item</primary></indexterm>pam_set_item<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pam_strerror</primary></indexterm>pam_strerror<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pam_authenticate</primary></indexterm>pam_authenticate<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pam_end</primary></indexterm>pam_end<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pam_getenvlist</primary></indexterm>pam_getenvlist<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pam_setcred</primary></indexterm>pam_setcred<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pam_chauthtok</primary></indexterm>pam_chauthtok<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pam_fail_delay</primary></indexterm>pam_fail_delay<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pam_open_session</primary></indexterm>pam_open_session<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY><indexterm><primary>pam_start</primary></indexterm>pam_start<LINK LINKEND="std-233-10-tbl-libpam-plu-ints"> [1]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA><EMPHASIS>Referenced Specification(s)</EMPHASIS></PARA>
<FORMALPARA><TITLE id="std-233-10-tbl-libpam-plu-ints">[1]</TITLE><para><XREF LINKEND=std.LSB></para></FORMALPARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpam-ddefs>
<TITLE>Data Definitions for libpam</TITLE>
<PARA>
This section defines global identifiers and their values that are associated with interfaces contained in libpam.
These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
These definitions are intended to supplement those provided in the referenced underlying specifications.
</PARA>
<PARA>
This specification uses ISO/IEC 9899 C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>security/pam_appl.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef struct pam_handle pam_handle_t;
struct pam_message
{
  int msg_style;
  const char *msg;
}
 ;
struct pam_response
{
  char *resp;
  int resp_retcode;
}
 ;

struct pam_conv
{
  int (*conv) (int num_msg, const struct pam_message * *msg,
	       struct pam_response * *resp, void *appdata_ptr);
  void *appdata_ptr;
}
 ;
#define PAM_PROMPT_ECHO_OFF	1
#define PAM_PROMPT_ECHO_ON	2
#define PAM_ERROR_MSG	3
#define PAM_TEXT_INFO	4

#define PAM_SERVICE	1
#define PAM_USER	2
#define PAM_TTY	3
#define PAM_RHOST	4
#define PAM_CONV	5
#define PAM_RUSER	8
#define PAM_USER_PROMPT	9

#define PAM_SUCCESS	0
#define PAM_OPEN_ERR	1
#define PAM_USER_UNKNOWN	10
#define PAM_MAXTRIES	11
#define PAM_NEW_AUTHTOK_REQD	12
#define PAM_ACCT_EXPIRED	13
#define PAM_SESSION_ERR	14
#define PAM_CRED_UNAVAIL	15
#define PAM_CRED_EXPIRED	16
#define PAM_CRED_ERR	17
#define PAM_CONV_ERR	19
#define PAM_SYMBOL_ERR	2
#define PAM_AUTHTOK_ERR	20
#define PAM_AUTHTOK_RECOVER_ERR	21
#define PAM_AUTHTOK_LOCK_BUSY	22
#define PAM_AUTHTOK_DISABLE_AGING	23
#define PAM_TRY_AGAIN	24
#define PAM_ABORT	26
#define PAM_AUTHTOK_EXPIRED	27
#define PAM_BAD_ITEM	29
#define PAM_SERVICE_ERR	3
#define PAM_SYSTEM_ERR	4
#define PAM_BUF_ERR	5
#define PAM_PERM_DENIED	6
#define PAM_AUTH_ERR	7
#define PAM_CRED_INSUFFICIENT	8
#define PAM_AUTHINFO_UNAVAIL	9

#define PAM_DISALLOW_NULL_AUTHTOK	0x0001U
#define PAM_ESTABLISH_CRED	0x0002U
#define PAM_DELETE_CRED	0x0004U
#define PAM_REINITIALIZE_CRED	0x0008U
#define PAM_REFRESH_CRED	0x0010U
#define PAM_CHANGE_EXPIRED_AUTHTOK	0x0020U
#define PAM_SILENT	0x8000U
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libpamman>
<TITLE>Interface Definitions for libpam</TITLE>
<PARA>
The following interfaces are included in libpam and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed above for libpam shall behave as described
in the referenced base document.
</PARA>
<REFENTRY ID="baselib-pam-acct-mgmt"> <REFMETA>
<REFENTRYTITLE>pam_acct_mgmt</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_acct_mgmt</REFNAME>
<REFPURPOSE>
establish the status of a user's account
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>pam_acct_mgmt</FUNCTION></FUNCDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>flags</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_acct_mgmt</FUNCTION> establishes the account's usability 
and the user's accessibility to the system. It is typically called 
after the user has been authenticated.
</PARA>
<PARA>
<PARAMETER>flags</PARAMETER> may be specified as any valid flag (namely, 
one of those applicable to the <PARAMETER>flags</PARAMETER> argument of 
<FUNCTION>pam_authenticate</FUNCTION>). Additionally, the value of 
<PARAMETER>flags</PARAMETER> may be logically or'd 
with <CONSTANT>PAM_SILENT</CONSTANT>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SUCCESS
</TERM>
<LISTITEM>
<PARA>
Success.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_NEW_AUTHTOK_REQD
</TERM>
<LISTITEM>
<PARA>
User is valid, but user's authentication token has expired.
The correct response to this return-value is to require that the
user satisfy the <FUNCTION>pam_chauthtok</FUNCTION> function before 
obtaining service. It may not be possible for an application to do 
this. In such a case, the user should be denied access until the
account password is updated.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_ACCT_EXPIRED
</TERM>
<LISTITEM>
<PARA>
User is no longer permitted access to the system.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_AUTH_ERR
</TERM>
<LISTITEM>
<PARA>
Authentication error.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_PERM_DENIED
</TERM>
<LISTITEM>
<PARA>
User is not permitted to gain access at this time.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_USER_UNKNOWN
</TERM>
<LISTITEM>
<PARA>
User is not known to a module's account management component.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
May be translated to text with <FUNCTION>pam_strerror</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-authenticate"> <REFMETA>
<REFENTRYTITLE>pam_authenticate</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_authenticate</REFNAME>
<REFPURPOSE>
authenticate the user
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>pam_authenticate</FUNCTION></FUNCDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>flags</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_authenticate</FUNCTION> serves as an interface to the 
authentication mechanisms of the loaded modules. 
</PARA>
<PARA>
<PARAMETER>flags</PARAMETER> is an optional parameter that may
be specified by the following value:
</PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_DISALLOW_NULL_AUTHTOK
</TERM>
<LISTITEM>
<PARA>
Instruct the authentication modules to return <CONSTANT>PAM_AUTH_ERR</CONSTANT>
if the user does not have a registered authorization token.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<PARA>
Additionally, the value of <PARAMETER>flags</PARAMETER> may be 
logically or'd with <CONSTANT>PAM_SILENT</CONSTANT>.
</PARA>

<PARA>The process may need to be privileged in order to successfully
call this function.</PARA>

</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SUCCESS
</TERM>
<LISTITEM>
<PARA>
Success.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_AUTH_ERR
</TERM>
<LISTITEM>
<PARA>
User was not authenticated or process did not have sufficient privileges
to perform authentication.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_CRED_INSUFFICIENT
</TERM>
<LISTITEM>
<PARA>
Application does not have sufficient credentials to
authenticate the user.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_AUTHINFO_UNAVAIL
</TERM>
<LISTITEM>
<PARA>
Modules were not able to access the authentication information. This
might be due to a network or hardware failure, etc.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_USER_UNKNOWN
</TERM>
<LISTITEM>
<PARA>
Supplied username is not known to the authentication service.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_MAXTRIES
</TERM>
<LISTITEM>
<PARA>
One or more authentication modules has reached its limit of tries
authenticating the user. Do not try again.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_ABORT
</TERM>
<LISTITEM>
<PARA>
One or more authentication modules failed to load.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
May be translated to text with <FUNCTION>pam_strerror</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-chauthtok"> <REFMETA>
<REFENTRYTITLE>pam_chauthtok</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_chauthtok</REFNAME>
<REFPURPOSE>
change the authentication token for a given user
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>pam_chauthtok</FUNCTION></FUNCDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const int 
  <PARAMETER><REPLACEABLE>flags</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_chauthtok</FUNCTION> is used to change the 
authentication token for a given user as indicated by the state 
associated with the handle <PARAMETER>pamh</PARAMETER>.
</PARA>
<PARA>
<PARAMETER>flags</PARAMETER> is an optional parameter that may
be specified by the following value:
</PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_CHANGE_EXPIRED_AUTHTOK
</TERM>
<LISTITEM>
<PARA>
User's authentication token should only be changed if it has expired.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<PARA>
Additionally, the value of <PARAMETER>flags</PARAMETER> may be 
logically or'd with <CONSTANT>PAM_SILENT</CONSTANT>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>RETURN VALUE</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SUCCESS
</TERM>
<LISTITEM>
<PARA>
Success.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_AUTHTOK_ERR
</TERM>
<LISTITEM>
<PARA>
A module was unable to obtain the new authentication token.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_AUTHTOK_RECOVER_ERR
</TERM>
<LISTITEM>
<PARA>
A module was unable to obtain the old authentication token.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_AUTHTOK_LOCK_BUSY
</TERM>
<LISTITEM>
<PARA>
One or more modules were unable to change the authentication token
since it is currently locked.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_AUTHTOK_DISABLE_AGING
</TERM>
<LISTITEM>
<PARA>
Authentication token aging has been disabled for at least one of the modules.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_PERM_DENIED
</TERM>
<LISTITEM>
<PARA>
Permission denied.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_TRY_AGAIN
</TERM>
<LISTITEM>
<PARA>
Not all modules were in a position to update the authentication
token(s). In such a case, none of the user's authentication tokens 
are updated.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_USER_UNKNOWN
</TERM>
<LISTITEM>
<PARA>
User is not known to the authentication token changing service.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>ERRORS</TITLE>
<PARA>
May be translated to text with <FUNCTION>pam_strerror</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-close-session"> <REFMETA>
<REFENTRYTITLE>pam_close_session</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_close_session</REFNAME>
<REFPURPOSE>
indicate that an authenticated session has ended
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>pam_close_session</FUNCTION></FUNCDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>flags</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_close_session</FUNCTION> is used to indicate that 
an authenticated session has ended. It is used to inform the module 
that the user is exiting a session. It should be possible for the 
PAM library to open a session and close the same session from 
different applications.
</PARA>
<PARA>
<PARAMETER>flags</PARAMETER> may have the value
<CONSTANT>PAM_SILENT</CONSTANT> to indicate that no output 
should be generated as a result of this function call.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SUCCESS
</TERM>
<LISTITEM>
<PARA>
Success.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_SESSION_ERR
</TERM>
<LISTITEM>
<PARA>
One of the required loaded modules was unable to close a session for the user.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
May be translated to text with <FUNCTION>pam_strerror</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-end"> <REFMETA>
<REFENTRYTITLE>pam_end</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_end</REFNAME>
<REFPURPOSE>
terminate the use of the PAM library
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>pam_end</FUNCTION></FUNCDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>pam_status</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_end</FUNCTION> terminates use of the PAM library.
On success, the contents of <PARAMETER>*pamh</PARAMETER> are no 
longer valid, and all memory associated with it is invalid.
</PARA>
<PARA>
Normally, <PARAMETER>pam_status</PARAMETER> is passed the value 
<CONSTANT>PAM_SUCCESS</CONSTANT>, but in the event of an
unsuccessful service application, the appropriate PAM error 
return value should be used.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SUCCESS
</TERM>
<LISTITEM>
<PARA>
Success.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
May be translated to text with <FUNCTION>pam_strerror</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-fail-delay"> <REFMETA>
<REFENTRYTITLE>pam_fail_delay</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_fail_delay</REFNAME>
<REFPURPOSE>
specify delay time to use on authentication error
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>pam_fail_delay</FUNCTION></FUNCDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>unsigned int 
  <PARAMETER><REPLACEABLE>micro_sec</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_fail_delay</FUNCTION> specifies the minimum delay for the 
PAM library to use when an authentication error occurs. The actual delay 
can vary by as much at 25%. If this function is called multiple times, 
the longest time specified by any of the call will be used.
</PARA>
<PARA>
The delay is invoked if an authentication error occurs during the
<FUNCTION>pam_authenticate</FUNCTION> or <FUNCTION>pam_chauthtok</FUNCTION>
function calls.
</PARA>
<PARA>
Independent of the success of
<FUNCTION>pam_authenticate</FUNCTION> or <FUNCTION>pam_chauthtok</FUNCTION>,
the delay time is reset to its default value of 0 when the PAM library returns 
control to the application from these two functions.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SUCCESS
</TERM>
<LISTITEM>
<PARA>
Success.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
May be translated to text with <FUNCTION>pam_strerror</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-get-item"> <REFMETA>
<REFENTRYTITLE>pam_get_item</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_get_item</REFNAME>
<REFPURPOSE>
obtain the value of the indicated item.
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>pam_get_item</FUNCTION></FUNCDEF>
 <PARAMDEF>const pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>item_type</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const void 
  <PARAMETER><REPLACEABLE>**item</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_get_item</FUNCTION> obtains the value of the indicated
<PARAMETER>item_type</PARAMETER>. The possible values of
<PARAMETER>item_type</PARAMETER> are the same as listed for
<FUNCTION>pam_set_item</FUNCTION>.
</PARA>
<PARA>
On success, <PARAMETER>item</PARAMETER> contains a pointer to the
value of the corresponding item. Note that this is a pointer to the 
actual data and should not be <FUNCTION>free</FUNCTION>'d or over-written.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SUCCESS
</TERM>
<LISTITEM>
<PARA>
Success.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_PERM_DENIED
</TERM>
<LISTITEM>
<PARA>
Application passed a <CONSTANT>NULL</CONSTANT> pointer for
<VARNAME>item</VARNAME>.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_BAD_ITEM
</TERM>
<LISTITEM>
<PARA>
Application attempted to get an undefined item.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
May be translated to text with <FUNCTION>pam_strerror</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-getenvlist"> <REFMETA>
<REFENTRYTITLE>pam_getenvlist</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_getenvlist</REFNAME>
<REFPURPOSE>
returns a pointer to the complete PAM environment.
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>char * const 
  <FUNCTION>*pam_getenvlist</FUNCTION></FUNCDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_getenvlist</FUNCTION> returns a pointer to the complete 
PAM environment. This pointer points to an array of pointers to
<CONSTANT>NUL</CONSTANT>-terminated strings and must be terminated by a
<CONSTANT>NULL</CONSTANT> pointer. Each string has the form "name=value".
</PARA>
<PARA>
The PAM library module allocates memory for the returned value and the
associated strings. The calling application is responsible for freeing this
memory. 
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
<FUNCTION>pam_getenvlist</FUNCTION> returns an array of string pointers 
containing the PAM environment. On error, <CONSTANT>NULL</CONSTANT> 
is returned.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-open-session"> <REFMETA>
<REFENTRYTITLE>pam_open_session</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_open_session</REFNAME>
<REFPURPOSE>
used to indicate that an authenticated session has been initiated
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>pam_open_session</FUNCTION></FUNCDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>flags</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_handle_t</FUNCTION> is used to indicate that an 
authenticated session has begun. It is used to inform the module that 
the user is currently in a session. It should be possible for the PAM 
library to open a session and close the same session from different 
applications.
</PARA>
<PARA>
<PARAMETER>flags</PARAMETER> may have the value
<CONSTANT>PAM_SILENT</CONSTANT> to indicate that no output be
generated as a rsult of this function call.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SUCCESS
</TERM>
<LISTITEM>
<PARA>
Success.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_SESSION_ERR
</TERM>
<LISTITEM>
<PARA>
One of the loaded modules was unable to open a session for the user.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>ERRORS</TITLE>
<PARA>
May be translated to text with <FUNCTION>pam_strerror</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-set-item"> <REFMETA>
<REFENTRYTITLE>pam_set_item</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_set_item</REFNAME>
<REFPURPOSE>
(re)set the value of an item.
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>pam_set_item</FUNCTION></FUNCDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>item_type</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const void 
  <PARAMETER><REPLACEABLE>*item</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_set_item</FUNCTION> (re)sets the value of one of the 
following item_types:
</PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SERVICE
</TERM>
<LISTITEM>
<PARA>
service name
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_USER
</TERM>
<LISTITEM>
<PARA>
user name
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_TTY
</TERM>
<LISTITEM>
<PARA>
terminal name
</PARA>
<PARA>
The value for a device file should include the <FILENAME>/dev/</FILENAME> 
prefix. The value for graphical, X-based, applications should be the 
<VARNAME>$DISPLAY</VARNAME> variable.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_RHOST
</TERM>
<LISTITEM>
<PARA>
remote host name
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_CONV
</TERM>
<LISTITEM>
<PARA>
conversation structure
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_RUSER
</TERM>
<LISTITEM>
<PARA>
remote user name
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_USER_PROMPT
</TERM>
<LISTITEM>
<PARA>
string to be used when prompting for a user's name
</PARA>
<PARA>
The default value for this string is <LITERAL>Please enter 
username: </LITERAL>.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<PARA>
For all <PARAMETER>item_types</PARAMETER> other than
<CONSTANT>PAM_CONV</CONSTANT>, <PARAMETER>item</PARAMETER> is a pointer 
to a <CONSTANT>NULL</CONSTANT>-terminated character string. In the case 
of <CONSTANT>PAM_CONV</CONSTANT>, <PARAMETER>item</PARAMETER> points to
an initialized <STRUCTNAME>pam_conv</STRUCTNAME> structure.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SUCCESS
</TERM>
<LISTITEM>
<PARA>
Success.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_PERM_DENIED
</TERM>
<LISTITEM>
<PARA>
An attempt was made to replace the conversation structure with a
<CONSTANT>NULL</CONSTANT> value.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_BUF_ERR
</TERM>
<LISTITEM>
<PARA>
Function ran out of memory making a copy of the item.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_BAD_ITEM
</TERM>
<LISTITEM>
<PARA>
Application attempted to set an undefined item.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
May be translated to text with <FUNCTION>pam_strerror</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-setcred"> <REFMETA>
<REFENTRYTITLE>pam_setcred</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_setcred</REFNAME>
<REFPURPOSE>
set the module-specific credentials of the user
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>extern int 
  <FUNCTION>pam_setcred</FUNCTION></FUNCDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>flags</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_setcred</FUNCTION> sets the module-specific credentials of 
the user. It is usually called after the user has been authenticated,
after the account management function has been called and after a
session has been opened for the user.
</PARA>
<PARA>
<PARAMETER>flags</PARAMETER> maybe specified from among the following 
values:
</PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_ESTABLISH_CRED
</TERM>
<LISTITEM>
<PARA>
set credentials for the authentication service
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_DELETE_CRED
</TERM>
<LISTITEM>
<PARA>
delete credentials associated with the authentication service
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_REINITIALIZE_CRED
</TERM>
<LISTITEM>
<PARA>
reinitialize the user credentials
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_REFRESH_CRED
</TERM>
<LISTITEM>
<PARA>
extend lifetime of the user credentials
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
<PARA>
Additionally, the value of <PARAMETER>flags</PARAMETER> may be 
logically or'd with <CONSTANT>PAM_SILENT</CONSTANT>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SUCCESS
</TERM>
<LISTITEM>
<PARA>
Success.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_CRED_UNAVAIL
</TERM>
<LISTITEM>
<PARA>
Module cannot retrieve the user's credentials.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_CRED_EXPIRED
</TERM>
<LISTITEM>
<PARA>
User's credentials have expired.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_USER_UNKNOWN
</TERM>
<LISTITEM>
<PARA>
User is not known to an authentication module.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_CRED_ERR
</TERM>
<LISTITEM>
<PARA>
Module was unable to set the credentials of the user.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
May be translated to text with <FUNCTION>pam_strerror</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-start"> <REFMETA>
<REFENTRYTITLE>pam_start</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_start</REFNAME>
<REFPURPOSE>
initialize the PAM library
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>pam_start</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*service_name</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*user</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const <FUNCPARAMS>struct <STRUCTNAME>pam_conv</STRUCTNAME> 
  <PARAMETER>*pam_conversation</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>**pamh</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_start</FUNCTION> is used to initialize the PAM 
library. It must be called prior to any other usage of the PAM 
library. On success, <PARAMETER>*pamh</PARAMETER> becomes a handle 
that provides continuity for successive calls to the PAM library. 
<FUNCTION>pam_start</FUNCTION> expects arguments as follows: the 
<PARAMETER>service_name</PARAMETER> of the program, the 
<PARAMETER>username</PARAMETER> of the individual to be
authenticated, a pointer to an application-supplied
<STRUCTNAME>pam_conv</STRUCTNAME> structure, and a pointer to a
<PARAMETER>pam_handle_t</PARAMETER> pointer.
</PARA>
<PARA>
An application must provide the <EMPHASIS>conversation function</EMPHASIS> 
used for direct communication between a loaded module and the application. 
The application also typically provides a means for the module to prompt 
the user for a password, etc.
</PARA>
<PARA>
The structure, pam_conv, is defined to be,
<SYNOPSIS>
  struct pam_conv {
               int (*conv) (int num_msg,
                            const struct pam_message * *msg,
                            struct pam_response * *resp,
                            void *appdata_ptr);
               void *appdata_ptr;
  };
</SYNOPSIS>
It is initialized by the application before it is passed to the
library. The contents of this structure are attached to the
<PARAMETER>*pamh</PARAMETER> handle. The point of this argument is to
provide a mechanism for any loaded module to interact directly with the
application program; this is why it is called a conversation structure.
</PARA>
<PARA>
When a module calls the referenced <FUNCTION>conv</FUNCTION> function, 
<PARAMETER>appdata_ptr</PARAMETER> is set to the second element of this
structure.
</PARA>
<PARA>
The other arguments of a call to <FUNCTION>conv</FUNCTION> 
concern the information exchanged by module and application. 
<PARAMETER>num_msg</PARAMETER> holds the length of the array of
pointers passed via <PARAMETER>msg</PARAMETER>. On success,
the pointer <PARAMETER>resp</PARAMETER> points to an array of
<PARAMETER>num_msg</PARAMETER> <STRUCTNAME>pam_response</STRUCTNAME>
structures, holding the application-supplied text. Note that 
<PARAMETER>resp</PARAMETER> is a struct 
<STRUCTNAME>pam_response</STRUCTNAME> array and not an array of 
pointers.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
PAM_SUCCESS
</TERM>
<LISTITEM>
<PARA>
Success.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_BUF_ERR
</TERM>
<LISTITEM>
<PARA>
Memory allocation error.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
PAM_ABORT
</TERM>
<LISTITEM>
<PARA>
Internal failure.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<REFSECT1>
<TITLE>ERRORS</TITLE>
<PARA>
May be translated to text with <FUNCTION>pam_strerror</FUNCTION>.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


<REFENTRY ID="baselib-pam-strerror"> <REFMETA>
<REFENTRYTITLE>pam_strerror</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA> 
<REFNAMEDIV>
<REFNAME>pam_strerror</REFNAME>
<REFPURPOSE>
returns a string describing the PAM error
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>27 September 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;security/pam_appl.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>const char *
  <FUNCTION>pam_strerror</FUNCTION></FUNCDEF>
 <PARAMDEF>pam_handle_t 
  <PARAMETER><REPLACEABLE>*pamh</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>errnum</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>27 September 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pam_strerror</FUNCTION> returns a string describing the PAM 
error associated with <PARAMETER>errnum</PARAMETER>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
On success, this function returns a description of the indicated error.
The application 
should not free or modify this string. This returned string will not be 
translated.
</PARA>
</REFSECT1>
</REFENTRY>

<!--
Portions taken from the Linux-PAM Application Guide which contains
the following Copyright message.

    Copyright (C) Andrew G. Morgan 1996-9.  All rights reserved.

Redistribution and use in source (sgml) and binary (derived) forms,
with or without modification, are permitted provided that the
following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, and the entire permission notice in its entirety,
   including the disclaimer of warranties.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote
   products derived from this software without specific prior
   written permission.

ALTERNATIVELY, this product may be distributed under the terms of the
GNU General Public License, in which case the provisions of the GNU
GPL are required INSTEAD OF the above restrictions.  (This clause is
necessary due to a potential bad interaction between the GNU GPL and
the restrictions contained in a BSD-style copyright.)

THIS SOFTWARE IS PROVIDED `AS IS' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

 -->


</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.62 2004/07/20 15:58:46 nick Exp 0 -->


</CHAPTER>

</PART>
