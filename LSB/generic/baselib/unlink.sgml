<REFENTRY ID="baselib-unlink-3"> <REFMETA>
<REFENTRYTITLE>unlink</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>unlink
</REFNAME>
<REFPURPOSE>
remove a directory entry
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>unlink</FUNCTION></FUNCDEF>
 <PARAMDEF>const char 
  <PARAMETER><REPLACEABLE>*path</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>a</FUNCTION> is as specified in the
<CITETITLE PUBWORK="BOOK">Single UNIX Specification, 
Version 2</CITETITLE>, but with differences as listed below.
</PARA>
<PARA>
See also <xref linkend="exec-link-unlink" />.
</PARA>

<REFSECT2>
<TITLE>May return <ERRORNAME>EISDIR</ERRORNAME> on directories
</TITLE>
<PARA>
If <PARAMETER>path</PARAMETER> specifies a directory, the
implementation may return <ERRORNAME>EISDIR</ERRORNAME> 
instead of <ERRORNAME>EPERM</ERRORNAME> as specified by
<CITETITLE PUBWORK="BOOK">Single UNIX Specification, 
Version 2</CITETITLE>.
<FOOTNOTE>
<PARA>
The Linux kernel has deliberately chosen <ERRORNAME>EISDIR</ERRORNAME> 
for this case and does not expect to change (Al Viro, personal 
communication).
</PARA>
</FOOTNOTE>
</PARA>
</REFSECT2>

</REFSECT1>
</REFENTRY>
