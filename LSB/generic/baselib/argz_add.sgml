<refentry id="baselib-argz-add-1">

<refmeta>
<refentrytitle>
argz_add,
argz_add_sep,
argz_append,
argz_count,
argz_create,
argz_create_sep,
argz_delete,
argz_extract,
argz_insert,
argz_next,
argz_replace,
argz_stringify
</refentrytitle>
<refmiscinfo>Base Libraries</refmiscinfo>
</refmeta>

<refnamediv>
<refname>
argz_add,
argz_add_sep,
argz_append,
argz_count,
argz_create,
argz_create_sep,
argz_delete,
argz_extract,
argz_insert,
argz_next,
argz_replace,
argz_stringify
</refname>
<refpurpose>Operate on argz vectors</refpurpose>
<indexterm id="ix-baselib-argz-add-1">
	<primary>argz_add</primary></indexterm>
<indexterm id="ix-baselib-argz-add-sep-1">
	<primary>argz_add_sep</primary></indexterm>
<indexterm id="ix-baselib-argz-append-1">
	<primary>argz_append</primary></indexterm>
<indexterm id="ix-baselib-argz-count-1">
	<primary>argz_count</primary></indexterm>
<indexterm id="ix-baselib-argz-create-1">
	<primary>argz_create</primary></indexterm>
<indexterm id="ix-baselib-argz-create-sep-1">
	<primary>argz_create_sep</primary></indexterm>
<indexterm id="ix-baselib-argz-delete-1">
	<primary>argz_delete</primary></indexterm>
<indexterm id="ix-baselib-argz-extract-1">
	<primary>argz_extract</primary></indexterm>
<indexterm id="ix-baselib-argz-insert-1">
	<primary>argz_insert</primary></indexterm>
<indexterm id="ix-baselib-argz-next-1">
	<primary>argz_next</primary></indexterm>
<indexterm id="ix-baselib-argz-replace-1">
	<primary>argz_replace</primary></indexterm>
<indexterm id="ix-baselib-argz-stringify-1">
	<primary>argz_stringify</primary></indexterm>
</refnamediv>

<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;argz.h&gt;
</funcsynopsisinfo>

<funcprototype>
<funcdef>error_t
<function>argz_add</function>
</funcdef>
<paramdef>char * *
<parameter>argz</parameter>
</paramdef>
<paramdef>size_t *
<parameter>argz_len</parameter>
</paramdef>
<paramdef>const char *
<parameter>str</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>error_t
<function>argz_add_sep</function>
</funcdef>
<paramdef>char * *
<parameter>argz</parameter>
</paramdef>
<paramdef>size_t *
<parameter>argz_len</parameter>
</paramdef>
<paramdef>const char *
<parameter>str</parameter>
</paramdef>
<paramdef>int
<parameter>delim</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>error_t
<function>argz_append</function>
</funcdef>
<paramdef>char * *
<parameter>argz</parameter>
</paramdef>
<paramdef>size_t *
<parameter>argz_len</parameter>
</paramdef>
<paramdef>const char *
<parameter>buf</parameter>
</paramdef>
<paramdef>size_t
<parameter>buf_len</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>size_t
<function>argz_count</function>
</funcdef>
<paramdef>const char *
<parameter>argz</parameter>
</paramdef>
<paramdef>size_t *
<parameter>len</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>error_t
<function>argz_create</function>
</funcdef>
<paramdef>char * const 
<parameter>argv</parameter>
</paramdef>
<paramdef>char * *
<parameter>argz</parameter>
</paramdef>
<paramdef>size_t *
<parameter>len</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>error_t
<function>argz_create_sep</function>
</funcdef>
<paramdef>const char *
<parameter>str</parameter>
</paramdef>
<paramdef>int
<parameter>sep</parameter>
</paramdef>
<paramdef>char * *
<parameter>argz</parameter>
</paramdef>
<paramdef>size_t *
<parameter>len</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>void
<function>argz_delete</function>
</funcdef>
<paramdef>char * *
<parameter>argz</parameter>
</paramdef>
<paramdef>size_t *
<parameter>argz_len</parameter>
</paramdef>
<paramdef>char *
<parameter>entry</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>void
<function>argz_extract</function>
</funcdef>
<paramdef>const char *
<parameter>argz</parameter>
</paramdef>
<paramdef>size_t
<parameter>len</parameter>
</paramdef>
<paramdef>char * *
<parameter>argv</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>error_t
<function>argz_insert</function>
</funcdef>
<paramdef>char * *
<parameter>argz_insert</parameter>
</paramdef>
<paramdef>size_t *
<parameter>argz_len</parameter>
</paramdef>
<paramdef>char *
<parameter>before</parameter>
</paramdef>
<paramdef>const char *
<parameter>entry</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>char
<function>argz_next</function>
</funcdef>
<paramdef>const char *
<parameter>argz</parameter>
</paramdef>
<paramdef>size_t
<parameter>argz_len</parameter>
</paramdef>
<paramdef>const char *
<parameter>entry</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>error_t
<function>argz_replace</function>
</funcdef>
<paramdef>char * *
<parameter>argz</parameter>
</paramdef>
<paramdef>size_t *
<parameter>argz_len</parameter>
</paramdef>
<paramdef>const char *
<parameter>str</parameter>
</paramdef>
<paramdef>const char *
<parameter>with</parameter>
</paramdef>
<paramdef>unsigned int *
<parameter>replace_count</parameter>
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>void
<function>argz_stringify</function>
</funcdef>
<paramdef>char *
<parameter>argz</parameter>
</paramdef>
<paramdef>size_t
<parameter>len</parameter>
</paramdef>
<paramdef>int
<parameter>sep</parameter>
</paramdef>
</funcprototype>

</funcsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
INSERT TEXT HERE
</para>
</refsect1>

<refsect1>
<title>Return Value</title>
<para>
INSERT TEXT HERE
</para>
</refsect1>

<refsect1>
<title>Errors</title>
<variablelist>
<varlistentry>
<term>
INSERT ERROR CODE HERE
</term>
<listitem>
<para>
INSERT ERROR REASON HERE
</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>

<refsect1>
<title>Notes</title>
<para>
INSERT TEXT HERE
</para>
</refsect1>

<refsect1>
<title>See Also</title>
<para>
<function>INSERT TEXT HERE</function>,
<function>INSERT TEXT HERE</function>.
</para>
</refsect1>

</refentry>
