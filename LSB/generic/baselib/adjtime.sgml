<REFENTRY ID="baselib-adjtime-2"> <REFMETA>
<REFENTRYTITLE>adjtime</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>adjtime
</REFNAME>
<REFPURPOSE>
correct the time to allow synchronization of the system clock
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;time.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>adjtime</FUNCTION></FUNCDEF>
 <PARAMDEF>const struct timeval *
  <PARAMETER>delta</PARAMETER></PARAMDEF>
 <PARAMDEF>struct timeval *
  <PARAMETER>olddelta</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>adjtime</FUNCTION> makes small adjustments to the system time 
as returned by <FUNCTION>gettimeofday</FUNCTION>(2), advancing or retarding 
it by the time specified by the timeval <PARAMETER>delta</PARAMETER>. 
If <PARAMETER>delta</PARAMETER> is negative, the clock is slowed down 
by incrementing it more slowly than normal until the correction is complete. 
If <PARAMETER>delta</PARAMETER> is positive, a larger increment than
normal is used. The skew used to perform the correction is generally a
fraction of one percent. Thus, the time is always a monotonically
increasing function. A time correction from an earlier call to
<FUNCTION>adjtime</FUNCTION> may not be finished when 
<FUNCTION>adjtime</FUNCTION> is called again. If
<PARAMETER>olddelta</PARAMETER> is non-<LITERAL>NULL</LITERAL>, the 
structure pointed to will contain, upon return, the number of microseconds 
still to be corrected from the earlier call.
</PARA>
<PARA>
<FUNCTION>adjtime</FUNCTION> may be used by time servers that synchronize 
the clocks of computers in a local area network. Such time servers would 
slow down the clocks of some machines and speed up the clocks of others to 
bring them to the average network time.
</PARA><PARA>
The <FUNCTION>adjtime</FUNCTION> is restricted to the super-user.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>
Return Value
</TITLE>
<PARA>
On success, <RETURNVALUE>0</RETURNVALUE> is returned. 
On error, <RETURNVALUE>-1</RETURNVALUE> is returned and
the global variable <VARNAME>errno</VARNAME> is set appropriately.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>
Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
EFAULT
</TERM>
<LISTITEM>
<PARA>
An argument points outside the process's allocated address space.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>
EPERM
</TERM>
<LISTITEM>
<PARA>
The process's effective user ID is not that of the super-user.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>
</REFSECT1>
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</REFENTRY>
