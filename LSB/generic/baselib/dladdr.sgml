<REFENTRY ID="baselib-dladdr-3"> <REFMETA>
<REFENTRYTITLE>dladdr</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>dladdr
</REFNAME>
<REFPURPOSE>
find the shared object containing a given address
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>24 April  2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;dlfcn.h&gt;

typedef struct {
             const char  <STRUCTFIELD>*dli_fname</STRUCTFIELD>;
             void        <STRUCTFIELD>*dli_fbase</STRUCTFIELD>;
             const char  <STRUCTFIELD>*dli_sname</STRUCTFIELD>;
             void        <STRUCTFIELD>*dli_saddr</STRUCTFIELD>;
} <STRUCTNAME>Dl_info</STRUCTNAME>;
</SYNOPSIS>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>dladdr</FUNCTION></FUNCDEF>
 <PARAMDEF>void 
  <PARAMETER><REPLACEABLE>*address</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>Dl_info *dlip</PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>24 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>dladdr</FUNCTION> function shall query the dynamic
linker for information about the shared object containing the 
address <PARAMETER>address</PARAMETER>. The information shall be returned
in the user supplied data structure referenced by <PARAMETER>dlip</PARAMETER>.
</PARA>
<PARA>
The structure shall contain at least the following members:
<VARIABLELIST>
<VARLISTENTRY>
<TERM><structfield>dli_fname</structfield></TERM>
<LISTITEM><PARA>
The pathname of the shared object containing the address
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><structfield>dli_fbase</structfield></TERM>
<LISTITEM><PARA>
The base address at which the shared object is
mapped into the address space of the calling process.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><structfield>dli_sname</structfield></TERM>
<LISTITEM><PARA>
The name of the nearest runtime symbol with  value
less than or equal to <PARAMETER>address</PARAMETER>.
Where possible, the symbol name shall be returned as it
would appear in C source code.
</PARA><PARA>
If no symbol with a suitable value is found,
both this field and <structfield>dli_saddr</structfield>
shall be set to <LITERAL>NULL</LITERAL>.
</PARA></LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><structfield>dli_saddr</structfield></TERM>
<LISTITEM><PARA>
The value of the symbol returned in
<structfield>dli_sname</structfield>.
</PARA></LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</PARA>
<PARA>
The behavior of <function>dladdr</function> is only
specified in dynamically linked programs.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
On success, <function>dladdr</function> shall return non-zero, and
the structure referenced by <parameter>dlip</parameter> shall be filled in
as described. Otherwise, <function>dladdr</function> shall return zero,
and the cause of the error can be fetched with <function>dlerr</function>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors</TITLE>
<PARA>
See <function>dlerr</function>.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>
Environment
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
<LITERAL>LD_LIBRARY_PATH</LITERAL>
</TERM>
<LISTITEM>
<PARA>
directory search-path for object files
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
<!--      BSDI BSD/OS                    February 9, 1998    -->
<!-- This data is part of a licensed program from BERKELEY SOFTWARE DESIGN, INC. -->
<!-- Portions are copyrighted by BSDI, The Regents of the University of California, -->
<!-- Massachusetts Institute of Technology, Free Software Foundation, and others.  -->
</REFENTRY>
