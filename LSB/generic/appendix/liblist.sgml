<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibapnd,v 1.15 2004/07/15 14:27:37 anderson Exp 0 -->
<!--    at Fri Jul 16 08:20:37 2004 -->
<APPENDIX ID=app-A>
<TITLE>Alphabetical Listing of Interfaces</TITLE>
<PARA>
</PARA>
<SECT1 ID=app-libX11>
<TITLE>libX11</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.Xlib">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libX11 Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>XActivateScreenSaver<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XIconifyWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELabQueryMinL<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddConnectionWatch<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XIfEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELabToCIEXYZ<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddExtension<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XImageByteOrder<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELabWhiteShiftColors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddHost<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XInitExtension<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELuvClipL<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddHosts<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XInitImage<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELuvClipLuv<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddPixel<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XInitThreads<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELuvClipuv<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddToExtensionList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XInsertModifiermapEntry<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELuvQueryMaxC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAddToSaveSet<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XInstallColormap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELuvQueryMaxL<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllPlanes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XInternAtom<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELuvQueryMaxLC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocClassHint<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XInternAtoms<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELuvQueryMinL<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XInternalConnectionNumbers<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELuvToCIEuvY<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocColorCells<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XIntersectRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELuvWhiteShiftColors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocColorPlanes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XKeycodeToKeysym<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIEXYZToCIELab<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocIconSize<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XKeysymToKeycode<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIEXYZToCIEuvY<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocNamedColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XKeysymToString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIEXYZToCIExyY<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocSizeHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XKillClient<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIEXYZToRGBi<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocStandardColormap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XLastKnownRequestProcessed<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIEuvYToCIELuv<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllocWMHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XListDepths<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIEuvYToCIEXYZ<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAllowEvents<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XListExtensions<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIEuvYToTekHVC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAutoRepeatOff<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XListFonts<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIExyYToCIEXYZ<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XAutoRepeatOn<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XListFontsWithInfo<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsClientWhitePointOfCCC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBaseFontNameListOfFontSet<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XListHosts<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsConvertColors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBell<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XListInstalledColormaps<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCreateCCC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBitmapBitOrder<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XListPixmapFormats<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsDefaultCCC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBitmapPad<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XListProperties<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsDisplayOfCCC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBitmapUnit<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XLoadFont<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsFormatOfPrefix<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBlackPixel<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XLoadQueryFont<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsFreeCCC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XBlackPixelOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XLocaleOfFontSet<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsLookupColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCellsOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XLocaleOfIM<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsPrefixOfFormat<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeActivePointerGrab<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XLocaleOfOM<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsQueryBlack<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeGC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XLockDisplay<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsQueryBlue<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeKeyboardControl<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XLookupColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsQueryColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeKeyboardMapping<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XLookupKeysym<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsQueryColors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangePointerControl<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XLookupString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsQueryGreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeProperty<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XLowerWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsQueryRed<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeSaveSet<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XMapRaised<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsQueryWhite<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XChangeWindowAttributes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XMapSubwindows<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsRGBToRGBi<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCheckIfEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XMapWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsRGBiToCIEXYZ<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCheckMaskEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XMaskEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsRGBiToRGB<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCheckTypedEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XMatchVisualInfo<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsScreenNumberOfCCC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCheckTypedWindowEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XMaxCmapsOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsScreenWhitePointOfCCC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCheckWindowEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XMaxRequestSize<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsSetCCCOfColormap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCirculateSubwindows<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XMinCmapsOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsSetCompressionProc<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCirculateSubwindowsDown<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XMoveResizeWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsSetWhiteAdjustProc<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCirculateSubwindowsUp<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XMoveWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsSetWhitePoint<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XClearArea<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XNewModifiermap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsStoreColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XClearWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XNextEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsStoreColors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XClipBox<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XNextRequest<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsTekHVCClipC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCloseDisplay<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XNoOp<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsTekHVCClipV<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCloseIM<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XOMOfOC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsTekHVCClipVC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCloseOM<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XOffsetRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsTekHVCQueryMaxC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XConfigureWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XOpenDisplay<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsTekHVCQueryMaxV<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XConnectionNumber<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XOpenIM<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsTekHVCQueryMaxVC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XContextDependentDrawing<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XOpenOM<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsTekHVCQueryMaxVSamples<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XContextualDrawing<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XParseColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsTekHVCQueryMinV<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XConvertCase<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XParseGeometry<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsTekHVCToCIEuvY<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XConvertSelection<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XPeekEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsTekHVCWhiteShiftColors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCopyArea<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XPeekIfEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsVisualOfCCC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCopyColormapAndFree<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XPending<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocClientMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCopyGC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XPlanesOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocCompatMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCopyPlane<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XPointInRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocControls<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateBitmapFromData<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XPolygonRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomColors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateColormap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XProcessInternalConnection<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomDoodads<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateFontCursor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XProtocolRevision<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomKeyAliases<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateFontSet<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XProtocolVersion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomKeys<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateGC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XPutBackEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomOutlines<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateGlyphCursor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XPutImage<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomOverlayKeys<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateIC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XPutPixel<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomOverlayRows<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateImage<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQLength<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomOverlays<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateOC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryBestCursor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomPoints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreatePixmap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryBestSize<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomProps<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreatePixmapCursor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryBestStipple<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomRows<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreatePixmapFromBitmapData<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryBestTile<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomSectionDoodads<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomSections<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateSimpleWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryColors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeomShapes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XCreateWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryExtension<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocGeometry<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultColormap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryFont<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocIndicatorMaps<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultColormapOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryKeymap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocKeyboard<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultDepth<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryPointer<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocNames<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultDepthOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryTextExtents<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbAllocServerMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultGC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryTextExtents16<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbApplyCompatMapToKey<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultGCOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XQueryTree<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbBell<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultRootWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRaiseWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbBellEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XReadBitmapFile<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbChangeEnabledControls<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultScreenOfDisplay<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XReadBitmapFileData<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbChangeMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRebindKeysym<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbChangeNames<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultVisual<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRecolorCursor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbChangeTypesOfKey<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefaultVisualOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XReconfigureWMWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbComputeEffectiveMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDefineCursor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRectInRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbComputeRowBounds<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDeleteContext<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRefreshKeyboardMapping<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbComputeSectionBounds<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDeleteModifiermapEntry<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRegisterIMInstantiateCallback<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbComputeShapeBounds<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDeleteProperty<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRemoveConnectionWatch<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbComputeShapeTop<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroyIC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRemoveFromSaveSet<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbCopyKeyType<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroyImage<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRemoveHost<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbCopyKeyTypes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroyOC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRemoveHosts<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFindOverlayForKey<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroyRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XReparentWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbForceBell<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroySubwindows<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XResetScreenSaver<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeClientMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDestroyWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XResizeWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeCompatMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDirectionalDependentDrawing<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XResourceManagerString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeComponentList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisableAccessControl<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRestackWindows<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeControls<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayCells<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRootWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomColors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayHeight<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRootWindowOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomDoodads<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayHeightMM<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRotateBuffers<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomKeyAliases<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayKeycodes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XRotateWindowProperties<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomKeys<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayMotionBufferSize<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSaveContext<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomOutlines<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XScreenCount<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomOverlayKeys<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayOfIM<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XScreenNumberOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomOverlayRows<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayOfOM<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XScreenOfDisplay<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomOverlays<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XScreenResourceString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomPoints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayPlanes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSelectInput<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomProperties<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSendEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomRows<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayWidth<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XServerVendor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomSections<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDisplayWidthMM<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetAccessControl<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeomShapes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDoesBackingStore<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetArcMode<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeGeometry<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDoesSaveUnders<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetAuthorization<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeIndicatorMaps<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawArc<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetBackground<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeKeyboard<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawArcs<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetClassHint<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeNames<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawImageString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetClipMask<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbFreeServerMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawImageString16<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetClipOrigin<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetAutoRepeatRate<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawLine<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetClipRectangles<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetCompatMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawLines<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetCloseDownMode<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetControls<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawPoint<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetCommand<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetGeometry<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawPoints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetDashes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetIndicatorMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawRectangle<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetErrorHandler<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetIndicatorState<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawRectangles<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetFillRule<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetKeyActions<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawSegments<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetFillStyle<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetKeyBehaviors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetFont<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetKeyExplicitComponents<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawString16<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetFontPath<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetKeyModifierMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawText<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetForeground<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetKeySyms<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XDrawText16<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetFunction<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetKeyTypes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEHeadOfExtensionList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetGraphicsExposures<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetKeyboard<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetBeforeFlush<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetICFocus<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetKeyboardByName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetCloseDisplay<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetICValues<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetCopyGC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetIMValues<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetMapChanges<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetCreateFont<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetIOErrorHandler<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetNamedGeometry<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetCreateGC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetIconName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetNamedIndicator<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetError<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetIconSizes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetNames<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetErrorString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetInputFocus<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetState<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetEventToWire<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetLineAttributes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetUpdatedMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetFlushGC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetLocaleModifiers<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetVirtualMods<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetFreeFont<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetModifierMapping<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbGetXlibControls<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetFreeGC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetNormalHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbIgnoreExtension<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetPrintErrorValues<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetOCValues<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbInitCanonicalKeyTypes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetWireToError<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetOMValues<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbKeyTypesForCoreSymbols<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XESetWireToEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetPlaneMask<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbKeycodeToKeysym<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEmptyRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetPointerMapping<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbKeysymToModifiers<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEnableAccessControl<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetRGBColormaps<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbLatchGroup<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEqualRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbLatchModifiers<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEventMaskOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetScreenSaver<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbLibraryVersion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XEventsQueued<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetSelectionOwner<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbListComponents<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XExtendedMaxRequestSize<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetSizeHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbLockGroup<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XExtentsOfFontSet<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetStandardColormap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbLockModifiers<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFetchBuffer<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetStandardProperties<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbLookupKeyBinding<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFetchBytes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetState<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbLookupKeySym<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFetchName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetStipple<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbNoteControlsChanges<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFillArc<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetSubwindowMode<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbNoteMapChanges<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFillArcs<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetTSOrigin<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbNoteNameChanges<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFillPolygon<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetTextProperty<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbOpenDisplay<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFillRectangle<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetTile<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbQueryExtension<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFillRectangles<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetTransientForHint<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbRefreshKeyboardMapping<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFilterEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWMClientMachine<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbResizeKeyActions<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFindContext<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWMColormapWindows<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbResizeKeySyms<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFindOnExtensionList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWMHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbResizeKeyType<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFlush<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWMIconName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSelectEventDetails<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFlushGC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWMName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSelectEvents<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFontsOfFontSet<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWMNormalHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetAtomFuncs<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XForceScreenSaver<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWMProperties<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetAutoRepeatRate<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFree<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWMProtocols<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetAutoResetControls<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeColormap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWMSizeHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetCompatMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeColors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWindowBackground<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetControls<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeCursor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWindowBackgroundPixmap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetDebuggingFlags<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeExtensionList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWindowBorder<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetDetectableAutoRepeat<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeFont<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWindowBorderPixmap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetGeometry<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeFontInfo<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWindowBorderWidth<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetIgnoreLockMods<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeFontNames<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetWindowColormap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetIndicatorMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeFontPath<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSetZoomHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetMap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeFontSet<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XShrinkRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetNamedIndicator<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeGC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XStoreBuffer<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetNames<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeModifiermap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XStoreBytes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetServerInternalMods<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreePixmap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XStoreColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbSetXlibControls<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XFreeStringList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XStoreColors<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbToControl<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGContextFromGC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XStoreName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbTranslateKeyCode<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGeometry<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XStoreNamedColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbTranslateKeySym<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetAtomName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XStringListToTextProperty<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbUpdateMapFromCore<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetAtomNames<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XStringToKeysym<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbUseExtension<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetClassHint<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSubImage<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XkbVirtualModsToReal<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetCommand<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSubtractRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XmbDrawImageString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetDefault<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSupportsLocale<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XmbDrawString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetErrorDatabaseText<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XSync<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XmbDrawText<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetErrorText<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XTextExtents<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XmbLookupString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetFontPath<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XTextExtents16<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XmbResetIC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetFontProperty<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XTextPropertyToStringList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XmbSetWMProperties<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetGCValues<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XTextWidth<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XmbTextEscapement<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetGeometry<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XTextWidth16<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XmbTextExtents<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetICValues<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XTranslateCoordinates<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XmbTextListToTextProperty<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetIMValues<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUndefineCursor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XmbTextPerCharExtents<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetIconName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUngrabButton<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XmbTextPropertyToTextList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetIconSizes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUngrabKey<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmCombineDatabase<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetImage<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUngrabKeyboard<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmCombineFileDatabase<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetInputFocus<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUngrabPointer<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmDestroyDatabase<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetKeyboardControl<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUngrabServer<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmEnumerateDatabase<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetKeyboardMapping<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUninstallColormap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmGetDatabase<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetModifierMapping<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUnionRectWithRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmGetFileDatabase<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetMotionEvents<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUnionRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmGetResource<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetNormalHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUnloadFont<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmGetStringDatabase<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetOCValues<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUnlockDisplay<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmInitialize<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetOMValues<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUnmapSubwindows<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmLocaleOfDatabase<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetPixel<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUnmapWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmMergeDatabases<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetPointerControl<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUnregisterIMInstantiateCallback<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmParseCommand<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetPointerMapping<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XUnsetICFocus<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmPermStringToQuark<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetRGBColormaps<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XVaCreateNestedList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmPutFileDatabase<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetScreenSaver<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XVendorRelease<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmPutLineResource<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetSelectionOwner<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XVisualIDFromVisual<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmPutResource<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetSizeHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XWMGeometry<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmPutStringResource<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetStandardColormap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XWarpPointer<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmQGetResource<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetSubImage<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XWhitePixel<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmQGetSearchList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetTextProperty<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XWhitePixelOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmQGetSearchResource<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetTransientForHint<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XWidthMMOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmQPutResource<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetVisualInfo<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XWidthOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmQPutStringResource<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMClientMachine<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XWindowEvent<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmQuarkToString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMColormapWindows<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XWithdrawWindow<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmSetDatabase<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XWriteBitmapFile<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmStringToBindingQuarkList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMIconName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XXorRegion<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmStringToQuark<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XauDisposeAuth<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmStringToQuarkList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMNormalHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XauFileName<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XrmUniqueQuark<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMProtocols<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XauGetBestAuthByAddr<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>Xutf8TextListToTextProperty<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWMSizeHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XauReadAuth<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>Xutf8TextPropertyToTextList<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWindowAttributes<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsAddColorSpace<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XwcDrawImageString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetWindowProperty<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsAddFunctionSet<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XwcDrawString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGetZoomHints<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsAllocColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XwcDrawText<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGrabButton<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsAllocNamedColor<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XwcFreeStringList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGrabKey<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCCCOfColormap<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XwcLookupString<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGrabKeyboard<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELabClipL<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XwcResetIC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGrabPointer<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELabClipLab<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XwcTextEscapement<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XGrabServer<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELabClipab<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XwcTextExtents<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XHeightMMOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELabQueryMaxC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XwcTextListToTextProperty<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XHeightOfScreen<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELabQueryMaxL<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XwcTextPerCharExtents<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XIMOfIC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XcmsCIELabQueryMaxLC<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY><ENTRY>XwcTextPropertyToTextList<LINK LINKEND="std.Xlib">[1]</LINK></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libX11 Data Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>XSetAfterFunction<LINK LINKEND="std.Xlib"></LINK></ENTRY><ENTRY>XSynchronize<LINK LINKEND="std.Xlib"></LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libXt>
<TITLE>libXt</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.Xt">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libXt Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>XtAddActions<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtCvtStringToInitialState<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtOwnSelectionIncremental<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddCallback<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtCvtStringToInt<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtParent<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddCallbacks<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtCvtStringToPixel<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtParseAcceleratorTable<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddConverter<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtCvtStringToRestartStyle<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtParseTranslationTable<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddEventHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtCvtStringToShort<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtPeekEvent<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddExposureToRegion<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtCvtStringToTranslationTable<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtPending<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddGrab<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtCvtStringToUnsignedChar<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtPopdown<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddInput<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtCvtStringToVisual<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtPopup<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddRawEventHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDatabase<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtPopupSpringLoaded<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddSignal<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDestroyApplicationContext<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtProcessEvent<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddTimeOut<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDestroyGC<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtProcessLock<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAddWorkProc<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDestroyWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtProcessUnlock<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAllocateGC<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDirectConvert<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtQueryGeometry<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddActionHook<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDisownSelection<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRealizeWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddActions<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDispatchEvent<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRealloc<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddBlockHook<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDispatchEventToWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRegisterCaseConverter<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddConverter<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDisplay<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRegisterDrawable<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddInput<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDisplayInitialize<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRegisterExtensionSelector<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddSignal<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDisplayOfObject<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRegisterGrabAction<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddTimeOut<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDisplayStringConversionWarning<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtReleaseGC<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppAddWorkProc<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtDisplayToApplicationContext<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtReleasePropertyAtom<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppCreateShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtError<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveActionHook<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppError<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtErrorMsg<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveAllCallbacks<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppErrorMsg<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtFindFile<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveBlockHook<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppGetErrorDatabase<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtFree<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveCallback<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppGetErrorDatabaseText<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetActionKeysym<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveCallbacks<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppGetExitFlag<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetActionList<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveEventHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppGetSelectionTimeout<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetApplicationNameAndClass<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveEventTypeHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppInitialize<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetApplicationResources<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveGrab<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppLock<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetClassExtension<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveInput<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppMainLoop<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetConstraintResourceList<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveRawEventHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppNextEvent<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetDisplays<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveSignal<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppPeekEvent<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetErrorDatabase<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveTimeOut<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppPending<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetErrorDatabaseText<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtRemoveWorkProc<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppProcessEvent<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetGC<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtReservePropertyAtom<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppReleaseCacheRefs<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetKeyboardFocusWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtResizeWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetErrorHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetKeysymTable<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtResizeWindow<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetErrorMsgHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetMultiClickTime<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtResolvePathname<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetExitFlag<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetResourceList<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtScreen<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetFallbackResources<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetSelectionParameters<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtScreenDatabase<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetSelectionTimeout<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetSelectionRequest<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtScreenOfObject<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetTypeConverter<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetSelectionTimeout<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSendSelectionRequest<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetWarningHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetSelectionValue<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSessionGetToken<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppSetWarningMsgHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetSelectionValueIncremental<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSessionReturnToken<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppUnlock<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetSelectionValues<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetErrorHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppWarning<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetSelectionValuesIncremental<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetErrorMsgHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAppWarningMsg<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetSubresources<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetEventDispatcher<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtAugmentTranslations<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetSubvalues<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetKeyTranslator<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtBuildEventMask<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGetValues<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetKeyboardFocus<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallAcceptFocus<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGrabButton<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetLanguageProc<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallActionProc<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGrabKey<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetMappedWhenManaged<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallCallbackList<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGrabKeyboard<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetMultiClickTime<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallCallbacks<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtGrabPointer<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetSelectionParameters<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallConverter<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtHasCallbacks<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetSelectionTimeout<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackExclusive<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtHooksOfDisplay<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetSensitive<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackNone<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtInitialize<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetSubvalues<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackNonexclusive<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtInitializeWidgetClass<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetTypeConverter<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackPopdown<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtInsertEventHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetValues<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackReleaseCacheRef<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtInsertEventTypeHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetWMColormapWindows<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCallbackReleaseCacheRefList<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtInsertRawEventHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetWarningHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCalloc<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtInstallAccelerators<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSetWarningMsgHandler<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCancelSelectionRequest<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtInstallAllAccelerators<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtStringConversionWarning<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtChangeManagedSet<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsApplicationShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtSuperclass<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtClass<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsComposite<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtToolkitInitialize<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCloseDisplay<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsConstraint<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtToolkitThreadInitialize<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtConfigureWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsManaged<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtTranslateCoords<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtConvert<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsObject<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtTranslateKey<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtConvertAndStore<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsOverrideShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtTranslateKeycode<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtConvertCase<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsRealized<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtUngrabButton<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateApplicationContext<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsRectObj<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtUngrabKey<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateApplicationShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsSensitive<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtUngrabKeyboard<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateManagedWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsSessionShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtUngrabPointer<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreatePopupShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtUninstallTranslations<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateSelectionRequest<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsSubclass<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtUnmanageChild<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsTopLevelShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtUnmanageChildren<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCreateWindow<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsTransientShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtUnmapWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtColorToPixel<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsVendorShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtUnrealizeWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToBool<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsWMShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtUnregisterDrawable<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToBoolean<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtIsWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaAppCreateShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToColor<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtKeysymToKeycodeList<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaAppInitialize<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToFloat<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtLastEventProcessed<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaCreateArgsList<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToFont<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtLastTimestampProcessed<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaCreateManagedWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToPixel<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtMainLoop<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaCreatePopupShell<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToPixmap<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtMakeGeometryRequest<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaCreateWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToShort<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtMakeResizeRequest<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaGetApplicationResources<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtIntToUnsignedChar<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtMalloc<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaGetSubresources<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToAcceleratorTable<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtManageChild<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaGetSubvalues<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToAtom<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtManageChildren<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaGetValues<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToBool<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtMapWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaOpenApplication<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToBoolean<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtMenuPopupAction<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaSetSubvalues<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToCommandArgArray<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtMergeArgLists<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtVaSetValues<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToCursor<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtMoveWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtWarning<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToDimension<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtName<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtWarningMsg<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToDirectoryString<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtNameToWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtWidgetToApplicationContext<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToDisplay<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtNewString<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtWindow<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToFile<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtNextEvent<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtWindowOfObject<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToFloat<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtNoticeSignal<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtWindowToWidget<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToFont<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtOpenApplication<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>_XtCheckSubclassFlag<LINK LINKEND="std.Xt">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToFontSet<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtOpenDisplay<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>_XtCopyFromArg<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToFontStruct<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtOverrideTranslations<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>_XtInherit<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XtCvtStringToGravity<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>XtOwnSelection<LINK LINKEND="std.Xt">[1]</LINK></ENTRY><ENTRY>_XtIsSubclassOf<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libXt Data Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>XtCXtToolkitError<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>objectClass<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>topLevelShellClassRec<LINK LINKEND="std.Xt"></LINK></ENTRY></ROW>
<ROW><ENTRY>XtShellStrings<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>objectClassRec<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>topLevelShellWidgetClass<LINK LINKEND="std.Xt"></LINK></ENTRY></ROW>
<ROW><ENTRY>XtStrings<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>overrideShellClassRec<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>transientShellClassRec<LINK LINKEND="std.Xt"></LINK></ENTRY></ROW>
<ROW><ENTRY>_XtInheritTranslations<LINK LINKEND="std.LSB"></LINK></ENTRY><ENTRY>overrideShellWidgetClass<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>transientShellWidgetClass<LINK LINKEND="std.Xt"></LINK></ENTRY></ROW>
<ROW><ENTRY>applicationShellWidgetClass<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>rectObjClass<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>widgetClass<LINK LINKEND="std.Xt"></LINK></ENTRY></ROW>
<ROW><ENTRY>compositeClassRec<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>rectObjClassRec<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>widgetClassRec<LINK LINKEND="std.Xt"></LINK></ENTRY></ROW>
<ROW><ENTRY>compositeWidgetClass<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>sessionShellClassRec<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>wmShellClassRec<LINK LINKEND="std.Xt"></LINK></ENTRY></ROW>
<ROW><ENTRY>constraintClassRec<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>sessionShellWidgetClass<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>wmShellWidgetClass<LINK LINKEND="std.Xt"></LINK></ENTRY></ROW>
<ROW><ENTRY>constraintWidgetClass<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>shellClassRec<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>coreWidgetClass<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY>shellWidgetClass<LINK LINKEND="std.Xt"></LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libm>
<TITLE>libm</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.ISOC99">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv2">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libm Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>acos(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>csinhl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acosf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>csinl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log10(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acosh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>csqrt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log10f<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acoshf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>csqrtf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log10l<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acoshl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>csqrtl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log1p(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acosl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ctan(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>logb(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asin(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ctanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>logf<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asinf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ctanh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>logl<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asinh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ctanhf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lrint(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asinhf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ctanhl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lrintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asinhl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ctanl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lrintl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asinl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>dremf(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>lround(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atan(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>dreml(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>lroundf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atan2(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lroundl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atan2f(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erfc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>matherr(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atan2l(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erfcf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>modf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erfcl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>modff(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atanh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erff(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>modfl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atanhf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erfl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nan(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atanhl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>exp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atanl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>expf<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nanl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cabs(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>expl<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nearbyint(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cabsf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>expm1(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nearbyintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cabsl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fabs(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nearbyintl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacos(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fabsf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nextafter(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacosf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fabsl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nextafterf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacosh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fdim(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nextafterl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacoshf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fdimf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nexttoward(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacoshl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fdiml(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nexttowardf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacosl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>feclearexcept(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nexttowardl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>carg(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fegetenv(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pow(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cargf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fegetexceptflag(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pow10(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cargl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fegetround(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pow10f(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casin(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>feholdexcept(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pow10l(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casinf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>feraiseexcept(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>powf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casinh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fesetenv(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>powl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casinhf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fesetexceptflag(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>remainder(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casinhl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fesetround(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>remainderf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casinl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fetestexcept(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>remainderl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catan(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>feupdateenv(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>remquo(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catanf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>finite(GLIBC_2.1)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>remquof(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catanh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>finitef(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>remquol(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catanhf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>finitel(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>rint(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catanhl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>floor(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catanl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>floorf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rintl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cbrt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>floorl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>round(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cbrtf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fma(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>roundf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cbrtl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmaf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>roundl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccos(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmal(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalb(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccosf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmax(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbf(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccosh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmaxf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbl(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccoshf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmaxl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbln(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccoshl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmin(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalblnf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccosl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fminf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalblnl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ceil(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fminl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbn(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ceilf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmod(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbnf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ceill(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmodf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbnl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cexp(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmodl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>significand(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cexpf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>frexp(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>significandf(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cexpl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>frexpf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>significandl(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cimag(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>frexpl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sin(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cimagf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>gamma(GLIBC_2.1)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>sincos(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cimagl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>gammaf(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>sincosf(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clog(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>gammal(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>sincosl(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clog10(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>hypot(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sinf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clog10f(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>hypotf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sinh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clog10l(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>hypotl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sinhf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clogf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ilogb(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sinhl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clogl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ilogbf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sinl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>conj(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ilogbl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sqrt(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>conjf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j0(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sqrtf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>conjl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j0f(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>sqrtl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>copysign(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j0l(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>tan(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>copysignf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j1(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>copysignl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j1f(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>tanh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cos(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j1l(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>tanhf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cosf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>jn(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tanhl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cosh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>jnf(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>tanl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>coshf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>jnl(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>tgamma(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>coshl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ldexp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tgammaf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cosl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ldexpf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tgammal(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cpow(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ldexpl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>trunc(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cpowf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgamma(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>truncf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cpowl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgamma_r(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>truncl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cproj(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgammaf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>y0(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cprojf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgammaf_r(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>y0f(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cprojl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgammal(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>y0l(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>creal(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgammal_r(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>y1(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>crealf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llrint(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>y1f(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>creall(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llrintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>y1l(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>csin(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llrintl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>yn(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>csinf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llround(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ynf(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>csinh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llroundf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ynl(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>csinhf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llroundl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libm Data Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>signgam<LINK LINKEND="std.SUSv3"></LINK></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libGL>
<TITLE>libGL</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.OGL">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libGL Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>glAccum<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glGetString<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos4iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glActiveTextureARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glGetTexEnvfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos4s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glAlphaFunc<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glGetTexEnviv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos4sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glAreTexturesResident<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glGetTexGendv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glReadBuffer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glArrayElement<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glGetTexGenfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glReadPixels<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBegin<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glGetTexGeniv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRectd<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBindTexture<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glGetTexImage<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRectdv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBitmap<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glGetTexLevelParameterfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRectf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBlendColor<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glGetTexLevelParameteriv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRectfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBlendEquation<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glGetTexParameterfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRecti<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glBlendFunc<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glGetTexParameteriv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRectiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCallList<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glHint<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRects<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCallLists<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glHistogram<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRectsv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClear<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexMask<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRenderMode<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClearAccum<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexPointer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glResetHistogram<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClearColor<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexd<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glResetMinmax<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClearDepth<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexdv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRotated<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClearIndex<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRotatef<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClearStencil<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glScaled<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClientActiveTextureARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexi<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glScalef<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glClipPlane<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glScissor<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3b<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexs<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glSelectBuffer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3bv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexsv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glSeparableFilter2D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexub<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glShadeModel<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIndexubv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glStencilFunc<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glInitNames<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glStencilMask<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glInterleavedArrays<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glStencilOp<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIsEnabled<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord1d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIsList<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord1dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glIsTexture<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord1f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLightModelf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord1fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3ub<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLightModelfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord1i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3ubv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLightModeli<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord1iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3ui<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLightModeliv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord1s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3uiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLightf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord1sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3us<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLightfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord2d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor3usv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLighti<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord2dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4b<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLightiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord2f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4bv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLineStipple<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord2fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLineWidth<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord2i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glListBase<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord2iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLoadIdentity<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord2s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLoadMatrixd<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord2sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLoadMatrixf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord3d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLoadName<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord3dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glLogicOp<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord3f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMap1d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord3fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4ub<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMap1f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord3i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4ubv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMap2d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord3iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4ui<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMap2f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord3s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4uiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMapGrid1d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord3sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4us<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMapGrid1f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord4d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColor4usv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMapGrid2d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord4dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorMask<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMapGrid2f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord4f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorMaterial<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMaterialf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord4fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorPointer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMaterialfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord4i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorSubTable<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMateriali<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord4iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorTable<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMaterialiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord4s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorTableParameterfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMatrixMode<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoord4sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glColorTableParameteriv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMinmax<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexCoordPointer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionFilter1D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultMatrixd<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexEnvf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionFilter2D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultMatrixf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexEnvfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionParameterf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord1dARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexEnvi<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionParameterfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord1dvARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexEnviv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionParameteri<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord1fARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexGend<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glConvolutionParameteriv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord1fvARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexGendv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyColorSubTable<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord1iARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexGenf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyColorTable<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord1ivARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexGenfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyConvolutionFilter1D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord1sARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexGeni<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyConvolutionFilter2D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord1svARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexGeniv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyPixels<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord2dARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexImage1D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyTexImage1D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord2dvARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexImage2D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyTexImage2D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord2fARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexImage3D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyTexSubImage1D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord2fvARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexParameterf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyTexSubImage2D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord2iARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexParameterfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCopyTexSubImage3D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord2ivARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexParameteri<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glCullFace<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord2sARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexParameteriv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDeleteLists<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord2svARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexSubImage1D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDeleteTextures<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord3dARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexSubImage2D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDepthFunc<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord3dvARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTexSubImage3D<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDepthMask<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord3fARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTranslated<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDepthRange<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord3fvARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glTranslatef<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDisable<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord3iARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex2d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDisableClientState<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord3ivARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex2dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDrawArrays<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord3sARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex2f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDrawBuffer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord3svARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex2fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDrawElements<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord4dARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex2i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDrawPixels<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord4dvARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex2iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glDrawRangeElements<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord4fARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex2s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEdgeFlag<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord4fvARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex2sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEdgeFlagPointer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord4iARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex3d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEdgeFlagv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord4ivARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex3dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEnable<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord4sARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex3f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEnableClientState<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glMultiTexCoord4svARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex3fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEnd<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNewList<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex3i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEndList<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNormal3b<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex3iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord1d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNormal3bv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex3s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord1dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNormal3d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex3sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord1f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNormal3dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex4d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord1fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNormal3f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex4dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord2d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNormal3fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex4f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord2dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNormal3i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex4fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord2f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNormal3iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex4i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalCoord2fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNormal3s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex4iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalMesh1<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNormal3sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex4s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalMesh2<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glNormalPointer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertex4sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalPoint1<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glOrtho<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glVertexPointer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glEvalPoint2<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPassThrough<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glViewport<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFeedbackBuffer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPixelMapfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXChooseFBConfig<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFinish<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPixelMapuiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXChooseVisual<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFlush<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPixelMapusv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXCopyContext<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFogf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPixelStoref<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXCreateContext<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFogfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPixelStorei<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXCreateGLXPixmap<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFogi<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPixelTransferf<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXCreateNewContext<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFogiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPixelTransferi<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXCreatePbuffer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFrontFace<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPixelZoom<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXCreatePixmap<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glFrustum<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPointSize<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXCreateWindow<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGenLists<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPolygonMode<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXDestroyContext<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGenTextures<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPolygonOffset<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXDestroyGLXPixmap<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetBooleanv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPolygonStipple<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXDestroyPbuffer<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetClipPlane<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPopAttrib<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXDestroyPixmap<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetColorTable<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPopClientAttrib<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXDestroyWindow<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetColorTableParameterfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPopMatrix<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXFreeContextEXT<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetColorTableParameteriv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPopName<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXGetClientString<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetConvolutionFilter<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPrioritizeTextures<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXGetConfig<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetConvolutionParameterfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPushAttrib<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXGetContextIDEXT<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetConvolutionParameteriv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPushClientAttrib<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXGetCurrentContext<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetDoublev<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPushMatrix<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXGetCurrentDisplay<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetError<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glPushName<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXGetCurrentDrawable<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetFloatv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos2d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXGetCurrentReadDrawable<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetHistogram<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos2dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXGetFBConfigAttrib<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetHistogramParameterfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos2f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXGetProcAddressARB<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetHistogramParameteriv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos2fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXGetSelectedEvent<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetIntegerv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos2i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXGetVisualFromFBConfig<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetLightfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos2iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXImportContextEXT<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetLightiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos2s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXIsDirect<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMapdv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos2sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXMakeContextCurrent<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMapfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos3d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXMakeCurrent<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMapiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos3dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXQueryContext<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMaterialfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos3f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXQueryContextInfoEXT<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMaterialiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos3fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXQueryDrawable<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMinmax<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos3i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXQueryExtension<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMinmaxParameterfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos3iv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXQueryExtensionsString<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetMinmaxParameteriv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos3s<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXQueryServerString<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetPixelMapfv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos3sv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXQueryVersion<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetPixelMapuiv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos4d<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXSelectEvent<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetPixelMapusv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos4dv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXSwapBuffers<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetPointerv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos4f<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXUseXFont<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetPolygonStipple<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos4fv<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXWaitGL<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>glGetSeparableFilter<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glRasterPos4i<LINK LINKEND="std.OGL">[1]</LINK></ENTRY><ENTRY>glXWaitX<LINK LINKEND="std.OGL">[1]</LINK></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libXext>
<TITLE>libXext</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.X.dbe">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.DPMS">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.security">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.shape">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.shm">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.X.sync">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libXext Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>DPMSCapable<LINK LINKEND="std.X.DPMS">[1]</LINK></ENTRY><ENTRY>XShmCreateImage<LINK LINKEND="std.X.shm">[1]</LINK></ENTRY><ENTRY>XSyncQueryExtension<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSDisable<LINK LINKEND="std.X.DPMS">[1]</LINK></ENTRY><ENTRY>XShmCreatePixmap<LINK LINKEND="std.X.shm">[1]</LINK></ENTRY><ENTRY>XSyncSetCounter<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSEnable<LINK LINKEND="std.X.DPMS">[1]</LINK></ENTRY><ENTRY>XShmDetach<LINK LINKEND="std.X.shm">[1]</LINK></ENTRY><ENTRY>XSyncSetPriority<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSForceLevel<LINK LINKEND="std.X.DPMS">[1]</LINK></ENTRY><ENTRY>XShmGetEventBase<LINK LINKEND="std.X.shm">[1]</LINK></ENTRY><ENTRY>XSyncValueAdd<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSGetTimeouts<LINK LINKEND="std.X.DPMS">[1]</LINK></ENTRY><ENTRY>XShmGetImage<LINK LINKEND="std.X.shm">[1]</LINK></ENTRY><ENTRY>XSyncValueEqual<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSGetVersion<LINK LINKEND="std.X.DPMS">[1]</LINK></ENTRY><ENTRY>XShmPixmapFormat<LINK LINKEND="std.X.shm">[1]</LINK></ENTRY><ENTRY>XSyncValueGreaterOrEqual<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSInfo<LINK LINKEND="std.X.DPMS">[1]</LINK></ENTRY><ENTRY>XShmPutImage<LINK LINKEND="std.X.shm">[1]</LINK></ENTRY><ENTRY>XSyncValueGreaterThan<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSQueryExtension<LINK LINKEND="std.X.DPMS">[1]</LINK></ENTRY><ENTRY>XShmQueryExtension<LINK LINKEND="std.X.shm">[1]</LINK></ENTRY><ENTRY>XSyncValueHigh32<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>DPMSSetTimeouts<LINK LINKEND="std.X.DPMS">[1]</LINK></ENTRY><ENTRY>XShmQueryVersion<LINK LINKEND="std.X.shm">[1]</LINK></ENTRY><ENTRY>XSyncValueIsNegative<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XSecurityAllocXauth<LINK LINKEND="std.X.security">[1]</LINK></ENTRY><ENTRY>XSyncAwait<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XSyncValueIsPositive<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XSecurityFreeXauth<LINK LINKEND="std.X.security">[1]</LINK></ENTRY><ENTRY>XSyncChangeAlarm<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XSyncValueIsZero<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XSecurityGenerateAuthorization<LINK LINKEND="std.X.security">[1]</LINK></ENTRY><ENTRY>XSyncChangeCounter<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XSyncValueLessOrEqual<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XSecurityQueryExtension<LINK LINKEND="std.X.security">[1]</LINK></ENTRY><ENTRY>XSyncCreateAlarm<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XSyncValueLessThan<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XSecurityRevokeAuthorization<LINK LINKEND="std.X.security">[1]</LINK></ENTRY><ENTRY>XSyncCreateCounter<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XSyncValueLow32<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeCombineMask<LINK LINKEND="std.X.shape">[1]</LINK></ENTRY><ENTRY>XSyncDestroyAlarm<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XSyncValueSubtract<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeCombineRectangles<LINK LINKEND="std.X.shape">[1]</LINK></ENTRY><ENTRY>XSyncDestroyCounter<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XdbeAllocateBackBufferName<LINK LINKEND="std.X.dbe">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeCombineRegion<LINK LINKEND="std.X.shape">[1]</LINK></ENTRY><ENTRY>XSyncFreeSystemCounterList<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XdbeBeginIdiom<LINK LINKEND="std.X.dbe">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeCombineShape<LINK LINKEND="std.X.shape">[1]</LINK></ENTRY><ENTRY>XSyncGetPriority<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XdbeDeallocateBackBufferName<LINK LINKEND="std.X.dbe">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeGetRectangles<LINK LINKEND="std.X.shape">[1]</LINK></ENTRY><ENTRY>XSyncInitialize<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XdbeEndIdiom<LINK LINKEND="std.X.dbe">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeInputSelected<LINK LINKEND="std.X.shape">[1]</LINK></ENTRY><ENTRY>XSyncIntToValue<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XdbeFreeVisualInfo<LINK LINKEND="std.X.dbe">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeOffsetShape<LINK LINKEND="std.X.shape">[1]</LINK></ENTRY><ENTRY>XSyncIntsToValue<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XdbeGetBackBufferAttributes<LINK LINKEND="std.X.dbe">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeQueryExtension<LINK LINKEND="std.X.shape">[1]</LINK></ENTRY><ENTRY>XSyncListSystemCounters<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XdbeGetVisualInfo<LINK LINKEND="std.X.dbe">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeQueryExtents<LINK LINKEND="std.X.shape">[1]</LINK></ENTRY><ENTRY>XSyncMaxValue<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XdbeQueryExtension<LINK LINKEND="std.X.dbe">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeQueryVersion<LINK LINKEND="std.X.shape">[1]</LINK></ENTRY><ENTRY>XSyncMinValue<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY>XdbeSwapBuffers<LINK LINKEND="std.X.dbe">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>XShapeSelectInput<LINK LINKEND="std.X.shape">[1]</LINK></ENTRY><ENTRY>XSyncQueryAlarm<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>XShmAttach<LINK LINKEND="std.X.shm">[1]</LINK></ENTRY><ENTRY>XSyncQueryCounter<LINK LINKEND="std.X.sync">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libICE>
<TITLE>libICE</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.XICE">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libICE Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>IceAcceptConnection<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceGetConnectionContext<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceProtocolVersion<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceAddConnectionWatch<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceGetInBufSize<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceReadAuthFileEntry<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceAllocScratch<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceGetListenConnectionNumber<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceRegisterForProtocolReply<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceAppLockConn<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceGetListenConnectionString<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceRegisterForProtocolSetup<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceAppUnlockConn<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceGetOutBufSize<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceRelease<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceAuthFileName<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceInitThreads<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceRemoveConnectionWatch<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceCheckShutdownNegotiation<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceLastReceivedSequenceNumber<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceSetErrorHandler<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceCloseConnection<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceLastSentSequenceNumber<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceSetHostBasedAuthProc<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceComposeNetworkIdList<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceListenForConnections<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceSetIOErrorHandler<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceConnectionNumber<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceListenForWellKnownConnections<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceSetPaAuthData<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceConnectionStatus<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceLockAuthFile<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceSetShutdownNegotiation<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceConnectionString<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceOpenConnection<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceSwapping<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceFlush<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IcePing<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceUnlockAuthFile<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceFreeAuthFileEntry<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceProcessMessages<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceVendor<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceFreeListenObjs<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceProtocolRevision<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceWriteAuthFileEntry<LINK LINKEND="std.XICE">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>IceGenerateMagicCookie<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceProtocolSetup<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>IceGetAuthFileEntry<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY>IceProtocolShutdown<LINK LINKEND="std.XICE">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libSM>
<TITLE>libSM</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.XSM">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libSM Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>SmFreeProperty<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmcRelease<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsInitialize<LINK LINKEND="std.XSM">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmFreeReasons<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmcRequestSaveYourself<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsInteract<LINK LINKEND="std.XSM">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcClientID<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmcRequestSaveYourselfPhase2<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsProtocolRevision<LINK LINKEND="std.XSM">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcCloseConnection<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmcSaveYourselfDone<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsProtocolVersion<LINK LINKEND="std.XSM">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcDeleteProperties<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmcSetErrorHandler<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsRegisterClientReply<LINK LINKEND="std.XSM">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcGetIceConnection<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmcSetProperties<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsReturnProperties<LINK LINKEND="std.XSM">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcGetProperties<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmcVendor<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsSaveComplete<LINK LINKEND="std.XSM">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcInteractDone<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsCleanUp<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsSaveYourself<LINK LINKEND="std.XSM">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcInteractRequest<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsClientHostName<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsSaveYourselfPhase2<LINK LINKEND="std.XSM">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcModifyCallbacks<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsClientID<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsSetErrorHandler<LINK LINKEND="std.XSM">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcOpenConnection<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsDie<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsShutdownCancelled<LINK LINKEND="std.XSM">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>SmcProtocolRevision<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsGenerateClientID<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>SmcProtocolVersion<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY>SmsGetIceConnection<LINK LINKEND="std.XSM">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libdl>
<TITLE>libdl</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libdl Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>dladdr(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>dlerror(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>dlsym(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dlclose(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>dlopen(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libcrypt>
<TITLE>libcrypt</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libcrypt Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>crypt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>encrypt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setkey(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libz>
<TITLE>libz</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.zlib">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libz Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>adler32<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzdopen<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gztell<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>compress<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzeof<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzwrite<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>compress2<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzerror<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>inflate<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>crc32<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzflush<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>inflateEnd<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflate<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzgetc<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>inflateInit2_<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateCopy<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzgets<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>inflateInit_<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateEnd<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzopen<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>inflateReset<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateInit2_<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzprintf<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>inflateSetDictionary<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateInit_<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzputc<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>inflateSync<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateParams<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzputs<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>inflateSyncPoint<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateReset<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzread<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>uncompress<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateSetDictionary<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzrewind<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>zError<LINK LINKEND="std.zlib">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>get_crc_table<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzseek<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>gzclose<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY>gzsetparams<LINK LINKEND="std.zlib">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libncurses>
<TITLE>libncurses</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.SUS.CURSES">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libncurses Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>addch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvdelch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_refresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>addchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvderwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_restore<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>addchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvgetch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>addnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvgetnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_touch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>addstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvgetstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>standend<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attr_get<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvhline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>standout<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attr_off<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>start_color<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attr_on<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>subpad<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attr_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>subwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attroff<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>syncok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attron<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinsch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>termattrs<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attrset<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinsnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>termname<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>baudrate<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinsstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tgetent<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>beep<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tgetflag<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bkgd<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvprintw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tgetnum<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bkgdset<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvscanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tgetstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>border<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvvline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tgoto<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>box<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwaddch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tigetflag<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>can_change_color<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwaddchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tigetnum<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cbreak<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwaddchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tigetstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>chgat<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwaddnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>timeout<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clear<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwaddstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>touchline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clearok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwchgat<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>touchwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clrtobot<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwdelch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tparm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clrtoeol<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwgetch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tputs<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>color_content<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwgetnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>typeahead<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>color_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwgetstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>unctrl<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>copywin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwhline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>ungetch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>curs_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>untouchwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>def_prog_mode<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>use_env<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>def_shell_mode<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vidattr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>del_curterm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vidputs<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>delay_output<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>delch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinsch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vw_printw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deleteln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinsnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vw_scanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>delscreen<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinsstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vwprintw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>delwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vwscanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>derwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwprintw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>waddch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>doupdate<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwscanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>waddchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dupwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwvline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>waddchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>echo<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>napms<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>waddnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>echochar<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>newpad<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>waddstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>newterm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattr_get<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>erase<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>newwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattr_off<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>erasechar<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>nl<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattr_on<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>filter<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>nocbreak<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattr_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>flash<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>nodelay<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattroff<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>flushinp<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>noecho<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattron<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getbkgd<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>nonl<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattrset<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>noqiflush<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wbkgd<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>noraw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wbkgdset<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>notimeout<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wborder<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>overlay<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wchgat<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>halfdelay<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>overwrite<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wclear<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>has_colors<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>pair_content<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wclrtobot<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>has_ic<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>pechochar<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wclrtoeol<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>has_il<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>pnoutrefresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wcolor_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>hline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>prefresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wcursyncup<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>idcok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>printw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wdelch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>idlok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>putp<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wdeleteln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>immedok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>putwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wechochar<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>inch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>qiflush<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>werase<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>inchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>raw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wgetch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>inchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>redrawwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wgetnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>init_color<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>refresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wgetstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>init_pair<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>reset_prog_mode<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>whline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>initscr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>reset_shell_mode<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>innstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>resetty<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>insch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>restartterm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>insdelln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>ripoffline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>insertln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>savetty<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winsch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>insnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winsdelln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>insstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scr_dump<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winsertln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>instr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scr_init<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winsnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>intrflush<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scr_restore<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winsstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>is_linetouched<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scr_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>is_wintouched<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scrl<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wmove<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>isendwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scroll<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wnoutrefresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>keyname<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scrollok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wprintw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>keypad<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>set_curterm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wredrawln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>killchar<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>set_term<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wrefresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>leaveok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>setscrreg<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wscanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>longname<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>setupterm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wscrl<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>meta<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_attr_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wsetscrreg<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>move<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_attroff<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wstandend<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvaddch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_attron<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wstandout<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvaddchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_attrset<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wsyncdown<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvaddchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_clear<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wsyncup<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvaddnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_color<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wtimeout<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvaddstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_init<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wtouchln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvchgat<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_label<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wvline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvcur<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_noutrefresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libncurses Data Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>COLORS<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY>LINES<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY>curscr<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY></ROW>
<ROW><ENTRY>COLOR_PAIRS<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY>acs_map<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY>stdscr<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY></ROW>
<ROW><ENTRY>COLS<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY>cur_term<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libutil>
<TITLE>libutil</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libutil Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>forkpty(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>login_tty(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>logwtmp(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>login(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>logout(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>openpty(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libc>
<TITLE>libc</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.CXXABI">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.ISOC99">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.LFS">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv2">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv3">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SVID.3">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SVID.4">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libc Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>_Exit(GLIBC_2.1.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>getrusage(GLIBC_2.1.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigaddset(GLIBC_2.1.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_IO_feof(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getservbyname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigaltstack(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_IO_getc(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getservbyport(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigandset(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_IO_putc(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getservent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigblock(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_IO_puts(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getsid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigdelset(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__assert_fail(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getsockname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigemptyset(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__ctype_b_loc<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getsockopt()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigfillset()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__ctype_get_mb_cur_max(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getsubopt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>siggetmask(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__ctype_tolower_loc<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gettext()<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sighold()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__ctype_toupper_loc<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gettimeofday()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigignore()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__cxa_atexit(GLIBC_2.1.3)<LINK LINKEND="std.CXXABI">[1]</LINK></ENTRY><ENTRY>getuid(GLIBC_2.1.3)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>siginterrupt(GLIBC_2.1.3)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__errno_location(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getutent(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sigisemptyset(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__fpending(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getutent_r(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sigismember(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__fxstat(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getutxent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>siglongjmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__fxstat64(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getutxid(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>signal(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__getpagesize(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getutxline(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigorset(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__getpgid(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getw(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>sigpause(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__h_errno_location<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getwc()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigpending()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isinf<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getwchar()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigprocmask()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isinff<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getwd()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigqueue()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isinfl<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>glob()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigrelse()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isnan<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>glob64()<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sigreturn()<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isnanf<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>globfree()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigset()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isnanl<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>globfree64()<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sigstack()<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__libc_current_sigrtmax(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gmtime(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigsuspend(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__libc_current_sigrtmin(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gmtime_r(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigtimedwait(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__libc_start_main(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>grantpt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigwait(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__lxstat(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>hcreate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigwaitinfo(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__lxstat64(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>hdestroy(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sleep(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__mempcpy(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>hsearch(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>snprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__rawmemchr(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>htonl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>socket(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__register_atfork<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>htons()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>socketpair()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__sigsetjmp(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>iconv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__stpcpy(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>iconv_close(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>srand(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strdup(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>iconv_open(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>srand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtod_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>imaxabs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>srandom(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtof_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>imaxdiv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sscanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtok_r(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>index(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>statvfs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtol_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inet_addr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>statvfs64<LINK LINKEND="std.LFS">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtold_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inet_ntoa(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>stime(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtoll_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inet_ntop<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>stpcpy(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtoul_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inet_pton<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>stpncpy(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtoull_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>initgroups(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>strcasecmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__sysconf(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>initstate(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcasestr(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__sysv_signal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>insque(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcat(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__wcstod_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>ioctl(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>strchr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__wcstof_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isalnum(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__wcstol_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isalpha(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcoll(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__wcstold_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isascii(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__wcstoul_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isatty(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcspn(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__xmknod(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isblank(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strdup(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__xstat(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>iscntrl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strerror(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__xstat64(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isdigit(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strerror_r(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_exit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isgraph(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strfmon(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_longjmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isinf(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>strfry(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_obstack_begin(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isinff<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>strftime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_obstack_newchunk(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isinfl(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>strlen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_setjmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>islower(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strncasecmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_tolower(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isnan(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>strncat(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_toupper(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isnanf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>strncmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>a64l(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isnanl(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>strncpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>abort(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isprint(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strndup(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>abs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ispunct(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strnlen(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>accept(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isspace(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strpbrk(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>access(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isupper(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strptime(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acct(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>iswalnum(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strrchr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>adjtime(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>iswalpha(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strsep(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>alarm(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswblank(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strsignal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asctime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswcntrl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strspn(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asctime_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswctype(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>strstr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asprintf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>iswdigit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtod(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atof(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswgraph(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtof(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atoi(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswlower(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtoimax(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atol(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswprint(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtok(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atoll<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswpunct()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtok_r()<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>authnone_create(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>iswspace(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtol(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>basename(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswupper(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtold(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bcmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswxdigit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtoll(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bcopy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isxdigit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtoq(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bind(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>jrand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtoul(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bind_textdomain_codeset<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>key_decryptsession()<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY><ENTRY>strtoull()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bindresvport(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>kill(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>strtoumax(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bindtextdomain(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>killpg(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtouq(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>brk(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>l64a(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strverscmp(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bsd_signal(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>labs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strxfrm(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bsearch(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lchown(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svc_getreqset(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>btowc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lcong48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svc_register(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bzero(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ldiv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svc_run(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>calloc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lfind(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svc_sendreply(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catclose(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>link(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_auth(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catgets(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>listen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_decode(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catopen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llabs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_noproc(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfgetispeed(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lldiv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_noprog(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfgetospeed(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>localeconv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_progvers(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfmakeraw(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>localtime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_systemerr(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfsetispeed(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>localtime_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_weakauth(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfsetospeed(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lockf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svctcp_create(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfsetspeed(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>lockf64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>svcudp_create(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>chdir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>longjmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>swab(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>chmod(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lrand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>swapcontext(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>chown(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lsearch(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>swprintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>chroot(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>lseek(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>swscanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clearerr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lseek64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>symlink(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_create(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>makecontext(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sync(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_pcreateerror(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>malloc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sysconf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_perrno(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>mblen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>syslog(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_perror(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>mbrlen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>system(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_spcreateerror(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>mbrtowc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcdrain(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_sperrno(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>mbsinit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcflow(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_sperror(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>mbsnrtowcs(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>tcflush(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mbsrtowcs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcgetattr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>close(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mbstowcs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcgetpgrp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>closedir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mbtowc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcgetsid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>closelog(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>memccpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcsendbreak(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>confstr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>memchr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcsetattr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>connect(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>memcmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcsetpgrp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>creat(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>memcpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tdelete<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>creat64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>memmem(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>telldir(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ctermid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>memmove(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tempnam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ctime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>memrchr(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>textdomain(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ctime_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>memset(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tfind(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cuserid(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>mkdir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>time(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>daemon(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>mkfifo(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>times(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dcgettext(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>mkstemp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tmpfile(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dcngettext<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>mkstemp64()<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>tmpfile64()<LINK LINKEND="std.LFS">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dgettext<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>mktemp()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tmpnam()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>difftime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mktime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>toascii(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dirname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mlock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tolower(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>div(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mlockall(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>toupper(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dngettext<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>mmap()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>towctrans()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>drand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mmap64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>towlower(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dup(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mprotect(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>towupper(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dup2(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mrand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>truncate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ecvt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>msgctl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>truncate64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endgrent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>msgget(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tsearch(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endnetent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>msgrcv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ttyname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endprotoent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>msgsnd(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ttyname_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endpwent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>msync(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>twalk(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endservent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>munlock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tzset(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endutent(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>munlockall(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ualarm(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endutxent(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>munmap(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ulimit(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>erand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nanosleep(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>umask(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>err(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>nftw(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>uname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>error(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>nftw64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>ungetc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>errx(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>ngettext<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>ungetwc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nice(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>unlink(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execle(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nl_langinfo(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>unlockpt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execlp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nrand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>unsetenv<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ntohl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>usleep(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execve(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ntohs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>utime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execvp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>obstack_free(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>utimes(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>exit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>open(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>vasprintf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fchdir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>open64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>vdprintf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fchmod(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>opendir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>verrx(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fchown(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>openlog(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vfork(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fclose(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pathconf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vfprintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fcntl(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pause(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vfscanf<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fcvt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pclose(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vfwprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fdatasync(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>perror(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vfwscanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fdopen(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pipe(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vprintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>feof(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pmap_getport(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>vscanf<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ferror(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pmap_set(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>vsnprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fflush(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pmap_unset(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>vsprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fflush_unlocked(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>poll(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vsscanf<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ffs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>popen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vswprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>posix_memalign(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vswscanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetpos(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>printf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vsyslog<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetpos64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>psignal(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>vwprintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgets(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ptsname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vwscanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetwc(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>putc(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wait(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetwc_unlocked(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>putc_unlocked(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wait3(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetws(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>putchar(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wait4(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fileno(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>putchar_unlocked(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>waitpid(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>flock(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>putenv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>warn(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>flockfile(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>puts(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>warnx(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fmtmsg(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pututxline(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcpcpy(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fnmatch(GLIBC_2.2.3)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>putw(GLIBC_2.2.3)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>wcpncpy(GLIBC_2.2.3)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fopen(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>putwc(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcrtomb(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fopen64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>putwchar(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcscasecmp(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fork(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>qsort(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcscat(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fpathconf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>raise(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcschr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rand(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcscmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fputc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rand_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcscoll(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fputs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>random(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcscpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fputwc(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>random_r(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>wcscspn(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fputws(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>read(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsdup(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fread(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>readdir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsftime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>free(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>readdir64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>wcslen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>freeaddrinfo<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>readdir_r<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsncasecmp()<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>freopen(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>readlink(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsncat(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>freopen64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>readv(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsncmp(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fscanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>realloc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsncpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fseek(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>realpath(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsnlen(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fseeko(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>recv(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsnrtombs(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fseeko64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>recvfrom(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcspbrk(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fsetpos(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>recvmsg(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsrchr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fsetpos64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>regcomp(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsrtombs(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fstatvfs(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>regerror(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsspn(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fstatvfs64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>regexec(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsstr(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fsync(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>regfree(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstod(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftell(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>remove(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstof(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftello(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>remque(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstoimax(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftello64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>rename(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstok(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rewind(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstol(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftok(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rewinddir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstold(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftruncate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rindex(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstoll(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftruncate64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>rmdir(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstombs(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftrylockfile(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sbrk(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>wcstoq(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftw(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstoul(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftw64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>sched_get_priority_max(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstoull(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>funlockfile(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_get_priority_min(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstoumax(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fwide(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_getparam(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstouq(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fwprintf(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_getscheduler(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcswcs(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fwrite(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_rr_get_interval(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcswidth(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fwscanf(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_setparam(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsxfrm(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gai_strerror<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_setscheduler()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wctob()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gcvt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_yield(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wctomb(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getaddrinfo<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>seed48()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wctrans()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>seekdir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wctype(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getc_unlocked(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>select(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcwidth(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getchar(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>semctl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wmemchr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getchar_unlocked(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>semget(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wmemcmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getcontext(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>semop(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wmemcpy(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getcwd(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>send(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wmemmove(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getdate(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sendmsg(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wmemset(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getdomainname(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sendto(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wordexp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getegid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setbuf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wordfree(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getenv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setbuffer(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>wprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>geteuid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setcontext(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>write(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setdomainname<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>writev(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgrent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setegid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wscanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgrgid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setenv<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_accepted_reply(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgrgid_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>seteuid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_array(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgrnam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setgid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_bool(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgrnam_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setgrent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_bytes(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgroups(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setgroups(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>xdr_callhdr(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gethostbyaddr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sethostid(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>xdr_callmsg(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gethostbyname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sethostname(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>xdr_char(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gethostid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setitimer(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_double(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gethostname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setlocale(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_enum(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getitimer(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setlogmask(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_float(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getloadavg(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>setnetent(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_free(GLIBC_2.2)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getlogin(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setpgid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_int(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getnameinfo<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setpgrp()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_long()<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getnetbyaddr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setpriority(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_opaque(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getopt(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>setprotoent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_opaque_auth(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getopt_long(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>setpwent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_pointer(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getopt_long_only(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>setregid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_reference(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpagesize(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>setreuid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_rejected_reply(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpeername(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setrlimit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_replymsg(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpgid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setrlimit64<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>xdr_short(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpgrp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setservent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_string(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setsid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_u_char(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getppid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setsockopt(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>xdr_u_int(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpriority(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setstate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_u_long(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getprotobyname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setuid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_u_short(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getprotobynumber(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setutent(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>xdr_union(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getprotoent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setutxent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_vector(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpwent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setvbuf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_void(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpwnam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shmat(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_wrapstring(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpwnam_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shmctl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdrmem_create(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpwuid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shmdt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdrrec_create(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpwuid_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shmget(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdrrec_eof(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getrlimit(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shutdown(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>getrlimit64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>sigaction(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libc Data Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>__daylight<LINK LINKEND="std.LSB"></LINK></ENTRY><ENTRY>__timezone<LINK LINKEND="std.LSB"></LINK></ENTRY><ENTRY>_sys_errlist<LINK LINKEND="std.LSB"></LINK></ENTRY></ROW>
<ROW><ENTRY>__environ<LINK LINKEND="std.LSB"></LINK></ENTRY><ENTRY>__tzname<LINK LINKEND="std.LSB"></LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libpthread>
<TITLE>libpthread</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LFS">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libpthread Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>_pthread_cleanup_pop<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pthread_create()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_trywrlock()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_pthread_cleanup_push<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pthread_detach()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_unlock()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pread(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_equal(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_wrlock(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pread64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>pthread_exit(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlockattr_destroy(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_destroy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_getspecific(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlockattr_getpshared(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getdetachstate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_join(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlockattr_init(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getguardsize(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_key_create(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlockattr_setpshared(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getschedparam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_key_delete(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_self(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getstackaddr(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_kill(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_setcancelstate(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getstacksize(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutex_destroy(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_setcanceltype(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_init(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutex_init(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_setconcurrency<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setdetachstate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutex_lock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_setspecific(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setguardsize(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutex_trylock(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_sigmask(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setschedparam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutex_unlock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_testcancel(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setstackaddr(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_destroy(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pwrite(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setstacksize(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_getpshared(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pwrite64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cancel(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_gettype(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_close(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_broadcast(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_init(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_destroy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_destroy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_setpshared(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_getvalue(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_init(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_settype(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_init(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_signal(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_once(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_open(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_timedwait(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_destroy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_post(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_wait(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_init(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_timedwait(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_condattr_destroy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_rdlock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_trywait(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_condattr_getpshared<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_timedrdlock<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_unlink()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_condattr_init(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_timedwrlock<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_wait(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_condattr_setpshared<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_tryrdlock()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libpam>
<TITLE>libpam</TITLE>
<PARA>
</PARA>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libpam Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>pam_acct_mgmt<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_fail_delay<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_setcred<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pam_authenticate<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_get_item<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_start<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pam_chauthtok<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_getenvlist<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_strerror<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pam_close_session<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_open_session<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>pam_end<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_set_item<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
</APPENDIX>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibapnd,v 1.15 2004/07/15 14:27:37 anderson Exp 0 -->
