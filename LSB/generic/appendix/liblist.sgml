<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibapnd,v 1.18 2005/05/25 20:36:15 nick Exp 0 -->
<!--    at Wed May 25 18:41:55 2005 -->
<APPENDIX ID=app-A>
<TITLE>Alphabetical Listing of Interfaces</TITLE>
<PARA>
</PARA>
<SECT1 ID=app-libc>
<TITLE>libc</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LFS">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv2">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv3">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SVID.3">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SVID.4">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libc Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>_Exit(GLIBC_2.1.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>getrlimit(GLIBC_2.1.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigaddset(GLIBC_2.1.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_IO_feof(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getrlimit64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>sigaltstack(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_IO_getc(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getrusage(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigandset(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_IO_putc(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getservbyname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigdelset(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_IO_puts(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getservbyport(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigemptyset(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__assert_fail(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getservent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigfillset(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__ctype_b_loc<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getsid()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sighold()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__ctype_get_mb_cur_max(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getsockname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigignore(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__ctype_tolower_loc<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getsockopt()<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>siginterrupt()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__ctype_toupper_loc<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getsubopt()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigisemptyset()<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__cxa_atexit(GLIBC_2.1.3)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gettext(GLIBC_2.1.3)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sigismember(GLIBC_2.1.3)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__errno_location(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gettimeofday(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>siglongjmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__fpending(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getuid(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>signal(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__fxstat(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getutent(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sigorset(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__fxstat64(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getutent_r(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sigpause(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__getpagesize(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getutxent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigpending(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__getpgid(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getutxid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigprocmask(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__h_errno_location<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getutxline()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigqueue()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isinf<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getw()<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>sigrelse()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isinff<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getwc()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigreturn()<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isinfl<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getwchar()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigset()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isnan<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>getwd()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigsuspend()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isnanf<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>glob()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigtimedwait()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__isnanl<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>glob64()<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sigwait()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__libc_current_sigrtmax(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>globfree(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigwaitinfo(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__libc_current_sigrtmin(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>globfree64(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sleep(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__libc_start_main(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gmtime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>snprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__lxstat(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gmtime_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sockatmark<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__lxstat64(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>grantpt(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>socket(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__mempcpy(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>hcreate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>socketpair(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__rawmemchr(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>hdestroy(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sprintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__register_atfork<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>hsearch()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>srand()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__sigsetjmp(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>htonl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>srand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__stpcpy(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>htons(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>srandom(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strdup(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>iconv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sscanf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtod_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>iconv_close(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>statvfs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtof_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>iconv_open(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>statvfs64<LINK LINKEND="std.LFS">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtok_r(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>if_freenameindex<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>stime(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtol_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>if_indextoname<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>stpcpy(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtold_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>if_nameindex<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>stpncpy(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtoll_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>if_nametoindex<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcasecmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtoul_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>imaxabs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcasestr(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__strtoull_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>imaxdiv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcat(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__sysconf(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>index(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strchr(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__sysv_signal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inet_addr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__wcstod_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inet_ntoa(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcoll(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__wcstof_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inet_ntop<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__wcstol_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inet_pton<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strcspn(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__wcstold_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>initgroups(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>strdup(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__wcstoul_internal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>initstate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strerror(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__xmknod(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>insque(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strerror_r(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__xstat(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>ioctl(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>strfmon(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__xstat64(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isalnum(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strftime(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_exit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isalpha(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strlen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_longjmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isascii(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strncasecmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_setjmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isatty(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strncat(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_tolower(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isblank(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strncmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_toupper(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iscntrl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strncpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>a64l(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isdigit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strndup(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>abort(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isgraph(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strnlen(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>abs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>islower(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strpbrk(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>accept(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>isprint(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strptime(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>access(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ispunct(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strrchr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acct(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isspace(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strsep(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>adjtime(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isupper(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strsignal(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>alarm(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswalnum(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strspn(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asctime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswalpha(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strstr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asctime_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswblank(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtod(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asprintf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>iswcntrl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtof(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atof(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswctype(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtoimax(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atoi(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswdigit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtok(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atol(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswgraph(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtok_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atoll<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswlower()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtol()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>authnone_create(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>iswprint(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtold(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>basename(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswpunct(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtoll(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bcmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswspace(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtoq(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bcopy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswupper(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtoul(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bind(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>iswxdigit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtoull(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bind_textdomain_codeset<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>isxdigit()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtoumax()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bindresvport(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>jrand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>strtouq(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bindtextdomain(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>key_decryptsession(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY><ENTRY>strxfrm(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>brk(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>kill(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>svc_getreqset(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bsd_signal(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>killpg(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svc_register(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bsearch(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>l64a(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svc_run(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>btowc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>labs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svc_sendreply(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bzero(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lchown(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_auth(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>calloc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lcong48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_decode(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catclose(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ldiv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_noproc(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catgets(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lfind(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_noprog(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catopen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>link(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>svcerr_progvers(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfgetispeed(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>listen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_systemerr(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfgetospeed(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llabs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcerr_weakauth(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfmakeraw(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>lldiv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svctcp_create(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfsetispeed(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>localeconv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>svcudp_create(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfsetospeed(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>localtime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>swab(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cfsetspeed(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>localtime_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>swapcontext(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>chdir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lockf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>swprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>chmod(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lockf64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>swscanf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>chown(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>longjmp(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>symlink(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>chroot(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>lrand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sync(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clearerr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lsearch(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sysconf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_create(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>lseek(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>syslog(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_pcreateerror(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>lseek64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>system(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_perrno(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>makecontext(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcdrain(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_perror(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>malloc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcflow(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_spcreateerror(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>mblen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcflush(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_sperrno(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>mbrlen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcgetattr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clnt_sperror(GLIBC_2.0)<LINK LINKEND="std.SVID.4">[1]</LINK></ENTRY><ENTRY>mbrtowc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcgetpgrp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mbsinit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcgetsid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>close(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mbsnrtowcs(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>tcsendbreak(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>closedir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mbsrtowcs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcsetattr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>closelog(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mbstowcs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tcsetpgrp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>confstr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mbtowc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tdelete<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>connect(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>memccpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>telldir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>creat(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>memchr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tempnam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>creat64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>memcmp(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>textdomain(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ctermid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>memcpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tfind(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ctime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>memmem(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>time(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ctime_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>memmove(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>times(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cuserid(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>memrchr(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>tmpfile(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>daemon(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>memset(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tmpfile64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dcgettext(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>mkdir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tmpnam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dcngettext<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>mkfifo()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>toascii()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dgettext<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>mkstemp()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tolower()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>difftime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mkstemp64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>toupper(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dirname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mktemp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>towctrans(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>div(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mktime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>towlower(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dngettext<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>mlock()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>towupper()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>drand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mlockall(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>truncate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dup(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mmap(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>truncate64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dup2(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mmap64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>tsearch(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>duplocale<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>mprotect()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ttyname()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ecvt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>mrand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ttyname_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endgrent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>msgctl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>twalk(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endprotoent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>msgget(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tzset(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endpwent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>msgrcv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ualarm(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endservent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>msgsnd(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ulimit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endutent(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>msync(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>umask(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endutxent(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>munlock(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>uname(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>erand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>munlockall(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ungetc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>err(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>munmap(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ungetwc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>error(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>nanosleep(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>unlink(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>errx(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>newlocale<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>unlockpt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nftw(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>unsetenv<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execle(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nftw64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>uselocale<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execlp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ngettext<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>usleep(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nice(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>utime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execve(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nl_langinfo(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>utimes(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>execvp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nrand48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>utmpname<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>exit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ntohl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vasprintf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fchdir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ntohs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vdprintf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fchmod(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>open(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>verrx(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fchown(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>open64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>vfork(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fclose(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>opendir(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vfprintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fcntl(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>openlog(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vfscanf<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fcvt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pathconf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vfwprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fdatasync(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pause(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vfwscanf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fdopen(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pclose(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vprintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>feof(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>perror(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vscanf<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ferror(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pipe(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vsnprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fflush(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pmap_getport(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>vsprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fflush_unlocked(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pmap_set(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>vsscanf<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ffs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pmap_unset(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>vswprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>poll(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vswscanf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetpos(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>popen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vsyslog<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetpos64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>posix_memalign(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vwprintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgets(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>posix_openpt<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>vwscanf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetwc(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>printf(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wait(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetwc_unlocked(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>psignal(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>wait4(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fgetws(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ptsname(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>waitpid(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fileno(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>putc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>warn(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>flock(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>putc_unlocked(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>warnx(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>flockfile(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>putchar(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcpcpy(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fmtmsg(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>putchar_unlocked(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcpncpy(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fnmatch(GLIBC_2.2.3)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>putenv(GLIBC_2.2.3)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcrtomb(GLIBC_2.2.3)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fopen(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>puts(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcscasecmp(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fopen64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>pututxline(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcscat(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fork(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>putw(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>wcschr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fpathconf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>putwc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcscmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>putwchar(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcscoll(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fputc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>qsort(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcscpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fputs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>raise(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcscspn(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fputwc(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rand(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsdup(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fputws(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rand_r(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsftime(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fread(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>random(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcslen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>free(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>read(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsncasecmp(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>freeaddrinfo<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>readdir()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsncat()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>freelocale<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>readdir64()<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>wcsncmp()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>freopen(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>readdir_r<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsncpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>freopen64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>readlink(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsnlen(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fscanf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>readv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsnrtombs(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fseek(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>realloc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcspbrk(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fseeko(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>realpath(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsrchr(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fseeko64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>recv(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsrtombs(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fsetpos(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>recvfrom(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsspn(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fsetpos64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>recvmsg(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsstr(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fstatvfs(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>regcomp(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstod(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fstatvfs64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>regerror(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstof(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fsync(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>regexec(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>wcstoimax(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftell(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>regfree(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstok(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftello(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>remove(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstol(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftello64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>remque(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstold(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftime(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rename(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstoll(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftok(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rewind(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstombs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftruncate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rewinddir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstoq(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftruncate64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>rindex(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstoul(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftrylockfile(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rmdir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcstoull(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftw(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sbrk(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>wcstoumax(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ftw64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>scanf(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>wcstouq(GLIBC_2.1)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>funlockfile(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_get_priority_max(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcswcs(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fwide(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_get_priority_min(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcswidth(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fwprintf(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_getparam(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcsxfrm(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fwrite(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_getscheduler(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wctob(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>fwscanf(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>sched_rr_get_interval(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wctomb(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gai_strerror<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_setparam()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wctrans()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gcvt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_setscheduler(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wctype(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getaddrinfo<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sched_yield()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wcwidth()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>seed48(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wmemchr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getc_unlocked(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>seekdir(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wmemcmp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getchar(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>select(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wmemcpy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getchar_unlocked(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>semctl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wmemmove(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getcontext(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>semget(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wmemset(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getcwd(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>semop(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wordexp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getdate(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>send(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wordfree(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getegid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sendmsg(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>wprintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getenv(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sendto(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>write(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>geteuid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setbuf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>writev(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setbuffer(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>wscanf(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgrent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setcontext(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_accepted_reply(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgrgid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setegid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_array(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgrgid_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setenv<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_bool(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgrnam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>seteuid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_bytes(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgrnam_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setgid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_callhdr(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgrouplist<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>setgrent()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_callmsg()<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getgroups(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setgroups(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>xdr_char(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gethostbyaddr(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sethostname(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>xdr_double(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gethostbyname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setitimer(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_enum(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gethostid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setlocale(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_float(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>gethostname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setlogmask(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_free(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getitimer(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setpgid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_int(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getloadavg(GLIBC_2.2)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>setpgrp(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_long(GLIBC_2.2)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getlogin(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setpriority(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_opaque(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getlogin_r<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setprotoent()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_opaque_auth()<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getnameinfo<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setpwent()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_pointer()<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getopt(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>setregid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_reference(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getopt_long(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>setreuid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_rejected_reply(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getopt_long_only(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>setrlimit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_replymsg(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpagesize(GLIBC_2.0)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>setrlimit64<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>xdr_short(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpeername(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setservent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_string(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpgid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setsid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_u_char(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpgrp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setsockopt(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>xdr_u_int(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setstate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_u_long(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getppid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setuid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_u_short(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpriority(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setutent(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>xdr_union(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getprotobyname(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setutxent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_vector(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getprotobynumber(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setvbuf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_void(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getprotoent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shmat(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdr_wrapstring(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpwent(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shmctl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdrmem_create(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpwnam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shmdt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdrrec_create(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpwnam_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shmget(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>xdrrec_eof(GLIBC_2.0)<LINK LINKEND="std.SVID.3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getpwuid(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shutdown(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>getpwuid_r(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sigaction(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libc Data Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>__daylight<LINK LINKEND="std.LSB"></LINK></ENTRY><ENTRY>__timezone<LINK LINKEND="std.LSB"></LINK></ENTRY><ENTRY>_sys_errlist<LINK LINKEND="std.LSB"></LINK></ENTRY></ROW>
<ROW><ENTRY>__environ<LINK LINKEND="std.LSB"></LINK></ENTRY><ENTRY>__tzname<LINK LINKEND="std.LSB"></LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libcrypt>
<TITLE>libcrypt</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libcrypt Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>crypt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>encrypt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>setkey(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libdl>
<TITLE>libdl</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libdl Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>dladdr(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>dlerror(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>dlsym(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dlclose(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>dlopen(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libm>
<TITLE>libm</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.ISOC99">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv2">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libm Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>__finite<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>csinhf()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log10()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__finitef<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>csinhl()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log10f<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__finitel<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>csinl()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log10l<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__fpclassify<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>csqrt()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log1p()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__fpclassifyf<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>csqrtf()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log1pf<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__signbit<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>csqrtl()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log1pl<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>__signbitf<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>ctan()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log2<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acos(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ctanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log2f<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acosf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ctanh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log2l<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acosh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ctanhf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>logb(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acoshf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ctanhl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>logbf<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acoshl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ctanl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>logbl<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>acosl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>dremf(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>logf<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asin(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>dreml(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>logl<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asinf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lrint(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asinh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erfc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lrintf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asinhf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erfcf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lrintl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asinhl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erfcl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lround(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>asinl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erff(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lroundf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atan(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>erfl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lroundl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atan2(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>exp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>matherr(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atan2f(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>exp2<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>modf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atan2l(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>exp2f<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>modff(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>expf<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>modfl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atanh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>expl<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nan(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atanhf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>expm1(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atanhl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>expm1f<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nanl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>atanl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>expm1l<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nearbyint(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cabs(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fabs(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nearbyintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cabsf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fabsf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nearbyintl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cabsl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fabsl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nextafter(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacos(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fdim(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nextafterf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacosf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fdimf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nextafterl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacosh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fdiml(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nexttoward(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacoshf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>feclearexcept(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nexttowardf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacoshl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fegetenv(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>nexttowardl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cacosl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fegetexceptflag(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pow(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>carg(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fegetround(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pow10(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cargf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>feholdexcept(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pow10f(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cargl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>feraiseexcept(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pow10l(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casin(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fesetenv(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>powf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casinf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fesetexceptflag(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>powl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casinh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fesetround(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>remainder(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casinhf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fetestexcept(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>remainderf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casinhl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>feupdateenv(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>remainderl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>casinl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>finite(GLIBC_2.1)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>remquo(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catan(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>finitef(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>remquof(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catanf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>finitel(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>remquol(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catanh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>floor(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rint(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catanhf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>floorf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catanhl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>floorl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>rintl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>catanl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fma(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>round(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cbrt(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmaf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>roundf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cbrtf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmal(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>roundl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cbrtl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmax(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalb(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccos(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmaxf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbf(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccosf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmaxl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbl(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccosh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmin(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbln(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccoshf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fminf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalblnf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccoshl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fminl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalblnl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ccosl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmod(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbn(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ceil(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmodf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbnf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ceilf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>fmodl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>scalbnl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>ceill(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>frexp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>significand(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cexp(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>frexpf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>significandf(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cexpf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>frexpl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>significandl(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cexpl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>gamma(GLIBC_2.1)<LINK LINKEND="std.SUSv2">[1]</LINK></ENTRY><ENTRY>sin(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cimag(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>gammaf(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>sincos(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cimagf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>gammal(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>sincosf(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cimagl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>hypot(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sincosl(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clog(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>hypotf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sinf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clog10(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>hypotl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sinh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clog10f(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>ilogb(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sinhf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clog10l(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>ilogbf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sinhl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clogf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ilogbl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sinl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clogl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j0(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sqrt(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>conj(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j0f(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>sqrtf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>conjf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j0l(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>sqrtl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>conjl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j1(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tan(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>copysign(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j1f(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>tanf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>copysignf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>j1l(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>tanh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>copysignl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>jn(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tanhf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cos(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>jnf(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>tanhl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cosf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>jnl(GLIBC_2.0)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>tanl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cosh(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ldexp(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tgamma(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>coshf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ldexpf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tgammaf(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>coshl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ldexpl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>tgammal(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cosl(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgamma(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>trunc(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cpow(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgamma_r(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>truncf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cpowf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgammaf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>truncl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cpowl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgammaf_r(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>y0(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cproj(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgammal(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>y0f(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cprojf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>lgammal_r(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY><ENTRY>y0l(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cprojl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llrint(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>y1(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>creal(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llrintf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>y1f(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>crealf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llrintl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>y1l(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>creall(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llround(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>yn(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>csin(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llroundf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ynf(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>csinf(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>llroundl(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>ynl(GLIBC_2.1)<LINK LINKEND="std.ISOC99">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>csinh(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>log(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libm Data Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>signgam<LINK LINKEND="std.SUSv3"></LINK></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libncurses>
<TITLE>libncurses</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.SUS.CURSES">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libncurses Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>addch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvdelch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_refresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>addchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvderwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_restore<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>addchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvgetch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>addnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvgetnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_touch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>addstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvgetstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>standend<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attr_get<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvhline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>standout<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attr_off<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>start_color<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attr_on<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>subpad<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attr_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>subwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attroff<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>syncok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attron<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinsch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>termattrs<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>attrset<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinsnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>termname<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>baudrate<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinsstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tgetent<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>beep<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvinstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tgetflag<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bkgd<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvprintw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tgetnum<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>bkgdset<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvscanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tgetstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>border<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvvline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tgoto<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>box<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwaddch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tigetflag<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>can_change_color<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwaddchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tigetnum<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>cbreak<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwaddchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tigetstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>chgat<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwaddnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>timeout<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clear<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwaddstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>touchline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clearok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwchgat<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>touchwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clrtobot<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwdelch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tparm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clrtoeol<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwgetch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>tputs<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>color_content<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwgetnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>typeahead<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>color_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwgetstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>unctrl<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>copywin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwhline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>ungetch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>curs_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>untouchwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>def_prog_mode<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>use_env<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>def_shell_mode<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vidattr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>del_curterm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vidputs<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>delay_output<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>delch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinsch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vw_printw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deleteln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinsnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vw_scanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>delscreen<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinsstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vwprintw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>delwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwinstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>vwscanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>derwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwprintw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>waddch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>doupdate<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwscanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>waddchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>dupwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>mvwvline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>waddchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>echo<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>napms<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>waddnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>echochar<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>newpad<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>waddstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>endwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>newterm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattr_get<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>erase<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>newwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattr_off<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>erasechar<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>nl<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattr_on<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>filter<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>nocbreak<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattr_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>flash<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>nodelay<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattroff<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>flushinp<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>noecho<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattron<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getbkgd<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>nonl<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wattrset<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>noqiflush<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wbkgd<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>noraw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wbkgdset<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>notimeout<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wborder<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>getwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>overlay<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wchgat<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>halfdelay<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>overwrite<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wclear<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>has_colors<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>pair_content<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wclrtobot<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>has_ic<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>pechochar<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wclrtoeol<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>has_il<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>pnoutrefresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wcolor_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>hline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>prefresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wcursyncup<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>idcok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>printw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wdelch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>idlok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>putp<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wdeleteln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>immedok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>putwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wechochar<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>inch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>qiflush<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>werase<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>inchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>raw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wgetch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>inchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>redrawwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wgetnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>init_color<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>refresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wgetstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>init_pair<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>reset_prog_mode<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>whline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>initscr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>reset_shell_mode<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>innstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>resetty<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>insch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>restartterm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>insdelln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>ripoffline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>insertln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>savetty<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winsch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>insnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winsdelln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>insstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scr_dump<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winsertln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>instr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scr_init<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winsnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>intrflush<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scr_restore<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winsstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>is_linetouched<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scr_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>winstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>is_wintouched<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scrl<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wmove<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>isendwin<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scroll<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wnoutrefresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>keyname<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>scrollok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wprintw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>keypad<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>set_curterm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wredrawln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>killchar<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>set_term<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wrefresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>leaveok<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>setscrreg<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wscanw<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>longname<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>setupterm<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wscrl<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>meta<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_attr_set<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wsetscrreg<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>move<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_attroff<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wstandend<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvaddch<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_attron<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wstandout<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvaddchnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_attrset<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wsyncdown<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvaddchstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_clear<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wsyncup<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvaddnstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_color<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wtimeout<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvaddstr<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_init<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wtouchln<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvchgat<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_label<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>wvline<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>mvcur<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY>slk_noutrefresh<LINK LINKEND="std.SUS.CURSES">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libncurses Data Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>COLORS<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY>LINES<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY>curscr<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY></ROW>
<ROW><ENTRY>COLOR_PAIRS<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY>acs_map<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY>stdscr<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY></ROW>
<ROW><ENTRY>COLS<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY>cur_term<LINK LINKEND="std.SUS.CURSES"></LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libpam>
<TITLE>libpam</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libpam Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>pam_acct_mgmt<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_fail_delay<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_setcred<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pam_authenticate<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_get_item<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_start<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pam_chauthtok<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_getenvlist<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_strerror<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pam_close_session<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_open_session<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>pam_end<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pam_set_item<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libpthread>
<TITLE>libpthread</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LFS">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
<MEMBER>
<XREF LINKEND="STD.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libpthread Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>_pthread_cleanup_pop<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pthread_condattr_destroy()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_timedwrlock<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>_pthread_cleanup_push<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>pthread_condattr_getpshared<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_tryrdlock()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pread(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_condattr_init(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_trywrlock(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pread64(GLIBC_2.1)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY><ENTRY>pthread_condattr_setpshared<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_unlock(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_destroy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_create(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_wrlock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getdetachstate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_detach(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlockattr_destroy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getguardsize(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_equal(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlockattr_getpshared(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getinheritsched(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_exit(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlockattr_init(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getschedparam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_getconcurrency<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlockattr_setpshared(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getschedpolicy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_getschedparam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_self(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getscope(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_getspecific(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_setcancelstate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getstack<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_join()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_setcanceltype()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getstackaddr(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_key_create(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_setconcurrency<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getstacksize(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_key_delete(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_setschedparam(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_init(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_kill(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_setschedprio<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setdetachstate(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutex_destroy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_setspecific(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setguardsize(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutex_init(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_sigmask(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setinheritsched(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutex_lock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_testcancel(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setschedparam(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutex_trylock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pwrite(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setschedpolicy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutex_unlock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pwrite64(GLIBC_2.0)<LINK LINKEND="std.LFS">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setscope(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_destroy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_close(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setstack<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_getpshared()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_destroy()<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setstackaddr(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_gettype(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_getvalue(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setstacksize(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_init(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_init(GLIBC_2.1)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cancel(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_setpshared(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_open(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_broadcast(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_mutexattr_settype(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_post(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_destroy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_once(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_timedwait(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_init(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_destroy(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_trywait(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_signal(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_init(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_unlink(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_timedwait(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_rdlock(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>sem_wait(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>pthread_cond_wait(GLIBC_2.0)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>pthread_rwlock_timedrdlock<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-librt>
<TITLE>librt</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>librt Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>clock_getcpuclockid(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>clock_settime(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>timer_delete(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clock_getres(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shm_open(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>timer_getoverrun(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clock_gettime(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>shm_unlink(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>timer_gettime(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>clock_nanosleep(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>timer_create(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY><ENTRY>timer_settime(GLIBC_2.2)<LINK LINKEND="std.SUSv3">[1]</LINK></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libutil>
<TITLE>libutil</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libutil Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>forkpty(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>login_tty(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>logwtmp(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>login(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>logout(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>openpty(GLIBC_2.0)<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libz>
<TITLE>libz</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libz Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>adler32<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzclose<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gztell<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>compress<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzdopen<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzwrite<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>compress2<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzeof<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inflate<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>compressBound<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzerror<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inflateEnd<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>crc32<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzflush<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inflateInit2_<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflate<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzgetc<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inflateInit_<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateBound<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzgets<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inflateReset<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateCopy<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzopen<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inflateSetDictionary<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateEnd<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzprintf<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inflateSync<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateInit2_<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzputc<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>inflateSyncPoint<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateInit_<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzputs<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>uncompress<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateParams<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzread<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>zError<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateReset<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzrewind<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>zlibVersion<LINK LINKEND="std.LSB">[1]</LINK></ENTRY></ROW>
<ROW><ENTRY>deflateSetDictionary<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzseek<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>get_crc_table<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY>gzsetparams<LINK LINKEND="std.LSB">[1]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
</APPENDIX>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibapnd,v 1.18 2005/05/25 20:36:15 nick Exp 0 -->
