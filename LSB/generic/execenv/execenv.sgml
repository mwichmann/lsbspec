<PART ID="tocexecenv">
<TITLE>Execution Environment</TITLE>

<CHAPTER id=execenvfhs>
<TITLE>File System Hierarchy</TITLE>
<PARA>
An LSB conforming implementation shall provide the mandatory portions of the
file system hierarchy specified in the <XREF LINKEND="STD.FHS"> (FHS),
together with any additional requirements made in this specification.
</PARA>
<PARA>
An LSB conforming application shall conform to the <XREF LINKEND="STD.FHS">.
</PARA>
<PARA>
The FHS allows many components or subsystems to be optional. An application
shall check for the existence of an optional component before using it, and
should behave in a reasonable manner if the optional component is not
present.
</PARA>
<para>
The FHS requirement to locate the operating system kernel in either
<filename>/</filename> or <filename>/boot</filename> does not apply if
the operating system kernel does not exist as a file in the file system.
</para>
<para>
The FHS specifies certain behaviors for a variety of commands if they
are present (for example, <command>ping</command> or <command>python</command>).
However, LSB conforming applications
shall not rely on any commands beyond those specified by the LSB.  The
mere existence of a command may not be used as an indication that the
command behaves in any particular way.
</para>
<para>
The following directories or links need not be present:
<filename>/etc/X11</filename> 
<filename>/usr/bin/X11</filename>
<filename>/usr/lib/X11</filename>
<filename>/proc</filename>
</para>

<SECT1 id=dev>
<TITLE><FILENAME>/dev</FILENAME>: Device Files</TITLE>
<PARA>
The devices described in 
Chapter 6. "Operating System Specific Annex",
Section 6.1. "Linux", subsection 6.1.3. "/dev: Devices and special files"
in the <xref linkend="std.fhs"> are required on an LSB conforming system.
Other devices may also exist in <FILENAME>/dev</FILENAME>. 
Device names may exist as symbolic links to other device nodes
located in <FILENAME>/dev</FILENAME> or
subdirectories of <FILENAME>/dev</FILENAME>.
There is no requirement concerning major/minor number values.
</PARA>
</SECT1>
<SECT1 ID=etc xreflabel="Host-specific system configuration">
<TITLE><filename>/etc</filename>: Host-specific system configuration</TITLE>
<PARA>
In addition to the requirements for <filename>/etc</filename> in the
<xref linkend="std.fhs">, an LSB conforming system shall also provide the
following directories or symbolic links to directories:
<variablelist>
<varlistentry>
<term><filename>/etc/cron.d</filename></term>
<listitem><para>A directory containing extended <command>crontab</command> files;
see <xref linkend="cronjobs">.
</para></listitem>
</varlistentry>
<varlistentry>
<term><filename>/etc/cron.daily</filename></term>
<listitem><para>A directory containing shell scripts to be executed once a day;
see <xref linkend="cronjobs">.
</para></listitem>
</varlistentry>
<varlistentry>
<term><filename>/etc/cron.hourly</filename></term>
<listitem><para>A directory containing shell scripts to be executed once per hour;
see <xref linkend="cronjobs">.
</para></listitem>
</varlistentry>
<varlistentry>
<term><filename>/etc/cron.monthly</filename></term>
<listitem><para>A directory containing shell scripts to be executed once per month;
see <xref linkend="cronjobs">.
</para></listitem>
</varlistentry>
<varlistentry>
<term><filename>/etc/cron.weekly</filename></term>
<listitem><para>A directory containing shell scripts to be executed once a week;
see <xref linkend="cronjobs">.
</para></listitem>
</varlistentry>
<varlistentry>
<term><filename>/etc/init.d</filename></term>
<listitem><para>A directory containing system initialization scripts;
see <xref linkend="initsrcinstrm">.
</para></listitem>
</varlistentry>
<varlistentry>
<term><filename>/etc/profile.d</filename></term>
<listitem><para>A directory containing shell scripts. 
Script names should follow the same conventions
as specified for cron jobs (see <xref linkend="cronjobs">, but should
have the suffix <filename>.sh</filename>.
The behavior is unspecified if a script is installed in this directory that
does not have the suffix <filename>.sh</filename>.</para>
<para>
The <command>sh</command> utility
shall read and execute commands in its current execution environment 
from all the shell scripts in this directory that have the suffix <filename>.sh</filename>
when invoked as an interactive login shell,
or if the <parameter>-l</parameter> (the letter <emphasis>ell</emphasis>)
is specified (see <xref linkend="cmd-sh-invoke">).
</PARA>
</listitem>
</varlistentry>
</variablelist>
<NOTE>
<TITLE>Future Directions</TITLE>
<PARA>
These directories are required at this version of the LSB since there is not
yet an agreed method for abstracting the implementation so that applications
need not be aware of these locations during installation. However,
<XREF LINKEND="future-directions-annex">
describes a tool, <command>lsbinstall</command>, that will make these
directories implementation specific and no longer required.
</PARA>
</NOTE>
</PARA>
<SECT2 ID="FHS-NAME-RULES" xreflabel="File Naming Conventions">
<TITLE>File Naming Conventions</TITLE>
<PARA>
Conforming implementations and applications installing files into any
of the above locations under
<filename>/etc</filename> may only use filenames
from the following managed namespaces:
<ITEMIZEDLIST MARK="bullet">
<LISTITEM><PARA>
	Assigned names.  Such names must be chosen from
		the character set <literal>[a-z0-9]</literal>.
		In order to avoid conflicts these 
		names shall be reserved
		through the Linux Assigned Names and Numbers
		Authority (LANANA).
		Information about the LANANA
		may be found at
		<ULINK URL="http://www.lanana.org">www.lanana.org</ULINK>.
	</PARA>

<NOTE>
	<PARA>
		Commonly used names should be reserved in advance; 
		developers for projects are encouraged to reserve names
		from LANANA, so that each distribution can use the same
		name, and to avoid conflicts with other projects.
</PARA></NOTE></LISTITEM>

<LISTITEM><PARA>
	Hierarchical names.  Script names in this category take
		the form: 
		<filename>&lt;hier1&gt;-&lt;hier2&gt;-...-&lt;name&gt;</>,
		where name is taken from the character set 
		<literal>[a-z0-9],</> 
		and where there may be one or more 
		<filename>&lt;hier-n&gt;</> components.  
		<filename>&lt;hier1&gt;</> may either be an LSB provider name assigned
		by the LANANA, or
		it may be owners' DNS name in lower case, with at
		least one <literal>'.'</>.  
	e.g.  "<literal>debian.org</>", "<literal>staroffice.sun.com</>", etc.
		The LSB provider name assigned by LANANA 
		shall only consist of the ASCII characters <literal>[a-z0-9]</>.
</PARA></LISTITEM>

<LISTITEM><PARA>
	Reserved names.  Names that
		begin with the character '<literal>_</>' are reserved for
		distribution use only.  These names should be used
		for essential system packages only.

</PARA></LISTITEM>
</ITEMIZEDLIST>
<NOTE>
<PARA>
A non-conforming application may still have polluted these managed
namespaces with unregistered filenames; a conforming application should check
for namespace collisions and take appropriate steps if they occur.
</PARA>
<PARA>
In general, if a package or some system function is likely to be used
on multiple systems, the package developers or the distribution should
get a registered name through LANANA, and distributions should strive to
use the same name whenever possible.  For applications which may not
be essential or may not be commonly installed, the hierarchical namespace
may be more appropriate.  An advantage to the hierarchical namespace
is that there is no need to consult with the LANANA before obtaining an
assigned name.
</PARA>

<PARA>
Short names are highly desirable, since system
administrators may need to manually start and stop services.
Given this, they should be standardized on a per-package basis.  This
is the rationale behind having the LANANA organization assign these
names.  The LANANA may be called upon to handle other namespace issues,
such as package/prerequisites naming.
</PARA>
</NOTE>

</PARA>
</SECT2>
</SECT1>

<SECT1 id='FHS-user-accounting-dbs'>
<TITLE>User Accounting Databases</TITLE>
<PARA>
The <XREF LINKEND=STD.FHS> specifies two optional locations for user
accounting databases 
used by the <SIMPLELIST TYPE=inline>
<MEMBER><FUNCTION>getutent</FUNCTION></MEMBER>
<MEMBER><FUNCTION>getutent_r</FUNCTION></MEMBER>
<MEMBER><FUNCTION>getutxent</FUNCTION></MEMBER>
<MEMBER><FUNCTION>getutxid</FUNCTION></MEMBER>
<MEMBER><FUNCTION>getutxline</FUNCTION></MEMBER>
<MEMBER>and <FUNCTION>pututxline</FUNCTION></MEMBER>
</SIMPLELIST> functions. These are
<FILENAME>/var/run/utmp</FILENAME> and <FILENAME>/var/run/wtmp</FILENAME>.
</PARA>
<PARA>
The LSB does not specify the format or structure of these files, or even if
they are files at all. They should be used only as "magic cookies" to
the <function>utmpname</function> function. 
</PARA>
</SECT1>
<SECT1 ID='FHS-SYSADMIN' xreflabel="Path For System Administration Utilities">
<TITLE>Path For System Administration Utilities</TITLE>
<PARA>
Certain utilities used for system administration 
(and other privileged commands)
may be stored in 
<filename>/sbin</filename>, 
<filename>/usr/sbin</filename>, and 
<filename>/usr/local/sbin</filename>. Applications
requiring to use commands identified as system administration utilities
should add these directories to their 
<envar>PATH</envar>. By default, as described in
<xref LINKEND="STD.SUSv3">, standard utilities shall be found on the 
<envar>PATH</envar> returned
by <command>getconf PATH</command> (or <command>command -p getconf PATH</command>
to be guaranteed to invoke the correct version of <command>getconf</command>).
</PARA>
</SECT1>
</CHAPTER>


<CHAPTER id=execstuff>
<TITLE>Additional Recommendations</TITLE>
<!--
<SECT1 id=permissions-must>
<TITLE>Minimal granted Directory and File permissions</TITLE>

<PARA>
In this Chapter "System" means an "LSB conforming implementation" and
"application" means an "LSB conforming (third party vendor) application".
</PARA>

<PARA>
The system shall grant to the application read and execute              
permissions on files needed to use all system interfaces (ABIs)                 
required by the LSB specification.
</PARA>

</SECT1>
-->

<SECT1 id=permissions-should>
<TITLE>Recommendations for applications on ownership and permissions</TITLE>

<SECT2 id=permissions-dirwrite>
<TITLE>Directory Write Permissions</TITLE>

<PARA>
The application should not depend on having directory write 
permission in any directory except 
<simplelist type=inline>
<member><filename>/tmp</filename></member> 
<member><filename>/var/tmp</filename></member>
<member>and the invoking user's home directory.</member>
</simplelist>
</PARA>
<PARA>
In addition, the application may store variable data in 
<filename>/var/opt/<replaceable>package</replaceable></filename>,
(where <replaceable>package</replaceable> is the name of the 
application package), if such a directory is created with appropriate permissions during the package installation.
</PARA>

<PARA>
For these directories the application should be able to work 
with directory write permissions restricted by the 
<CONSTANT>S_ISVTXT</CONSTANT> bit, implementing the restricted
deletion mode as described for the XSI option for <xref linkend="std.susv3">..
</PARA>
 
</SECT2>

 
<SECT2 id=permissions-filewrite>
<TITLE>File Write Permissions</TITLE>

<PARA>
The application should not depend on file write permission to
any file that it does not itself create.
</PARA>
</SECT2>
         
<SECT2 id=permissions-fileread>
<TITLE>File Read and execute Permissions</TITLE>
 
<PARA>
The application should not depend on having read permission to
every file and directory.
</PARA>
 
</SECT2>

<SECT2 id=permissions-sbits>
<TITLE>SUID and SGID Permissions </TITLE>
 
<PARA>
The application should not depend on the set user ID or set group ID
(the <CONSTANT>S_ISUID</CONSTANT> or <CONSTANT>S_ISGID</CONSTANT>
permission bits)
permissions of a 
file not packaged with the application. Instead, the distribution is 
responsible for assuming that all system commands have the required 
permissions and work correctly.
</PARA>

<NOTE><TITLE>Rationale</TITLE>
<PARA>
In order to implement common security policies it is strongly advisable
for applications to use the minimum set of security attributes necessary for
correct operation. Applications that require substantial appropriate privilege
are likely to cause problems with such security policies.
</PARA>
</NOTE>
</SECT2>
 
<SECT2 id=priviledged-users>
<TITLE>Privileged users</TITLE>

<PARA>
In general, applications should not depend on running as a privileged user.
This specification uses the term "appropriate privilege" throughout to identify
operations that cannot be achieved without some special granting of additional
privilege.
</PARA>

<PARA>
Applications that have a reason to run with appropriate privilege
should outline this reason clearly in their documentation.
Users of the application should be informed, that "this application 
demands security privileges, which could interfere with system security".
</PARA>

<PARA>
The application should not contain binary-only software that 
requires being run with appropriate privilege, as this makes security auditing 
harder or even impossible. 
</PARA>

</SECT2>

<SECT2 id=changing-permissions>
<TITLE>Changing permissions</TITLE>

<PARA>
The application shall not change permissions of files and 
directories that do not belong to its own package. 
Should an application require that certain files and directories
not directly belonging to the package have a particular ownership,
the application shall document this requirement, and may fail during
installation if the permissions on these files is inappropriate.
</PARA>

</SECT2>

<SECT2 id=permission-media>
<TITLE>Removable Media (Cdrom, Floppy, etc.)</TITLE>

<para>
Applications that expect to be runnable from removable
media should not depend on logging in as a privileged user,
and should be prepared to deal with a restrictive
environment.  Examples of such restrictions could be
default mount options that disable set-user/group-ID
attributes, disabling block or character-special files on
the medium, or remapping the user and group IDs of files away
from any privileged value.
<note><title>Rationale</title>
<para>
System vendors and local system administrators
want to run applications from removable media, but want the
possibility to control what the application can do.
</para>
</note>
</para>

</SECT2>
 
<SECT2 id=permission-installers>
<TITLE>Installable applications</TITLE>

<PARA>
Where the installation of an application needs additional privileges, it must
clearly document all files and system databases that are modified outside of
those in 
<FILENAME>/opt/<REPLACEABLE>pkg-name</REPLACEABLE></FILENAME>
and <FILENAME>/var/opt/<REPLACEABLE>pkg-name</REPLACEABLE></FILENAME>,
other than those that may be
updated by system logging or auditing activities.


</PARA>

<PARA>
Without this, the local system administrator 
would have to blindly trust a piece of software,
particularly with respect to its security.
</PARA>
  
</SECT2>
</SECT1>

</CHAPTER>

<CHAPTER ID="execenv-addntl-bhvr">
<title>Additional Behaviors</title>
<SECT1>
<title>Mandatory Optional Behaviors</title>
<para>This section specifies behaviors in which there is optional
behavior in one of the standards on which the LSB relies, and where
the LSB requires a specific behavior.
<note><para>
The LSB does not require the kernel to be Linux; the set of mandated 
options reflects current existing practice, but may be modified in
future releases.
</para></note>
</para>

<para>
LSB conforming implementations shall support the following options defined
within the <CITETITLE PUBWORK="BOOK"><XREF LINKEND="STD.SUSv3"></CITETITLE>:
<SIMPLELIST COLUMNS=1>
<MEMBER>_POSIX_FSYNC</MEMBER>
<MEMBER>_POSIX_MAPPED_FILES</MEMBER>
<MEMBER>_POSIX_MEMLOCK</MEMBER>
<MEMBER>_POSIX_MEMLOCK_RANGE</MEMBER>
<MEMBER>_POSIX_MEMORY_PROTECTION</MEMBER>
<MEMBER>_POSIX_PRIORITY_SCHEDULING</MEMBER>
<MEMBER>_POSIX_REALTIME_SIGNALS</MEMBER>
<MEMBER>_POSIX_THREAD_ATTR_STACKADDR</MEMBER>
<MEMBER>_POSIX_THREAD_ATTR_STACKSIZE</MEMBER>
<MEMBER>_POSIX_THREAD_PROCESS_SHARED</MEMBER>
<MEMBER>_POSIX_THREAD_SAFE_FUNCTIONS</MEMBER>
<MEMBER>_POSIX_THREADS</MEMBER>
<!-- not sure about the following, so leaving them out for now ...
<MEMBER>_XOPEN_UNIX</MEMBER>
<MEMBER>_POSIX_ASYNCHRONOUS_IO</MEMBER>
<MEMBER>_POSIX_SEMAPHORES</MEMBER>
<MEMBER>_POSIX_SHARED_MEMORY_OBJECTS</MEMBER>
<MEMBER>_POSIX_TIMERS</MEMBER>
-->
</SIMPLELIST>
</PARA>

<para>The <FUNCTION>opendir</FUNCTION>
function shall consume a file descriptor in the same
fashion as <FUNCTION>open</FUNCTION>, and therefore may fail with 
<CONSTANT>EMFILE</CONSTANT> or <CONSTANT>ENFILE</CONSTANT>.
</para>

<para>The <CONSTANT>START</CONSTANT> and 
<CONSTANT>STOP</CONSTANT> <structname>termios</structname>
characters shall be changeable, as
described as optional behavior in the "General Terminal Interface"
section of the 
<CITETITLE PUBWORK="BOOK"><XREF LINKEND="STD.SUSv3"></CITETITLE>.
</para>

<para>The <function>access</function> function
function shall fail with <VARNAME>errno</VARNAME>
set to <CONSTANT>EINVAL</CONSTANT> if the 
<parameter>amode</parameter> argument contains bits other than 
those set by the bitwise inclusive OR of 
<CONSTANT>R_OK</CONSTANT>, 
<CONSTANT>W_OK</CONSTANT>, 
<CONSTANT>X_OK</CONSTANT> and 
<CONSTANT>F_OK</CONSTANT>.
</para>

<para>The <FUNCTION>link</FUNCTION> function shall require access
to the existing file in
order to succeed, as described as optional behavior in the 
<CITETITLE PUBWORK="BOOK"><XREF LINKEND="STD.SUSv3"></CITETITLE>.
</para>

<para id="exec-link-unlink"
XRefLabel="Section 18.1, Additional behaviors: unlink/link on directory"
>
Calling <FUNCTION>unlink</FUNCTION> on a directory shall fail.
Calling <FUNCTION>link</FUNCTION> specifying a directory as the first
argument shall fail.  See also <xref linkend="baselib-unlink-3">.
<note>
<para>
Linux allows <FUNCTION>rename</FUNCTION> on a directory without
having write access, but the LSB does not require this.</para>
</note>
</para>
<SECT2 id=addl-behaviors-test>
<TITLE>Special Requirements</TITLE>
<PARA>
LSB conforming systems shall enforce certain special additional restrictions
above and beyond those required by <XREF LINKEND="STD.SUSv3">.
<NOTE>
<PARA>These additional restrictions are required in order to support the testing
and certification programs associated with the LSB. In each case, these are values
that defined macros must not have; conforming applications that use these values
shall trigger a failure in the interface that is otherwise described as a "may fail".
</PARA>
</NOTE>
</PARA>
<para>The <FUNCTION>fcntl</FUNCTION> function shall treat the "cmd" value -1 as
invalid.</para>

<para>The <parameter>whence</parameter> value <constant>-1</constant>
shall be an invalid value for the
<function>lseek</function>, <function>fseek</function> and 
<function>fcntl</function> functions.</para>

<para>The value <constant>-5</constant> shall be an invalid signal number.</para>

<para>If the <function>sigaddset</function> or 
<function>sigdelset</function> functions are passed an
invalid signal number, they shall return with <ErrorName>EINVAL</ErrorName>.
Implementations
are only required to enforce this requirement for signal numbers which
are specified to be invalid by this specification (such as the <constant>-5</>
mentioned above).</para>
<para>The mode value <constant>-1</constant> to the <function>access</function>
function shall be treated as
invalid.</para>

<para>A value of <constant>-1</constant> shall be an invalid "_PC_..." value for
<function>pathconf</function>.</para>

<para>A value of <constant>-1</constant> shall be an invalid "_SC..." value for
<function>sysconf</function>.</para>

<para>The <parameter>nl_item</parameter> value <constant>-1</constant>
shall be invalid for <function>nl_langinfo</function>.</para>

<para>The value <constant>-1</constant> shall be an invalid "_CS_..." value for 
<function>confstr</function>.</para>

<para>The value <constant>"a"</constant> shall be an invalid <parameter>mode</parameter>
argument to <function>popen</function>.</para>

<para>The <function>fcntl</function> function shall fail and set <varname>errno</varname> to
<errorcode>EDEADLK</errorcode> if the
<parameter>cmd</parameter> argument is <constant>F_SETLKW</constant>,
and the lock is blocked by a lock from another process already blocked by the current process.
</para>

<para>The <function>opendir</function> function shall consume a file descriptor;
the <function>readdir</function> function shall fail and set <varname>errno</varname>
to <errorcode>EBADF</errorcode> if the underlying file descriptor is closed.
</para>

<para>The <function>link</function> function shall not work across file systems, and
shall fail and set <varname>errno</varname> to <errorcode>EXDEV</errorcode>
as described as optional behavior in <XREF linkend="std.susv3">.
</para>



</SECT2>
</SECT1>
</CHAPTER>

<CHAPTER id=localization>
<TITLE>Localization</TITLE>
<SECTION>
<TITLE>Introduction</TITLE>
<PARA>
In order to install a message catalog, the installation procedure 
shall supply the message catalog in a format readable by the
<COMMAND>msgfmt</COMMAND> utility, which shall be invoked to compile
the message catalog into an appropriate binary format on the target system.
<NOTE>
<TITLE>Rationale</TITLE>
<PARA>The original intent was to allow an application to contain the binary
GNU MO format files. However, the format of these files is not
officially stable, hence it is necessary to compile these catalogs
on the target system. These binary catalogs
may differ from architecture to architecture
as well.
</PARA>
</NOTE>
The resulting binary message catalog shall be
located in the package's private area under <FILENAME>/opt</FILENAME>, and the
application may use <FUNCTION>bindtextdomain</FUNCTION> to specify this
location.
</PARA>

<para>
Implementations shall support the POSIX and C locales as specified in
<XREF LINKEND=STD.SUSv3>. Other locales may be supported.
</para><para>
Implementations may define additional locale categories not defined by that standard.
<NOTE><PARA>
Implementations choosing additional locale categories should be aware
of <XREF LINKEND="STD.TR14652"> and are advised not to choose names that conflict with that
specification. If implementations provide locale categories whose names
are part of the FDCC set of <XREF LINKEND="STD.TR14652">, they should behave as defined by
that specification.
</PARA></NOTE>
</para>
</section>
<section id="localization-regex"
 XRefLabel="Regular Expressions">
<title>Regular Expressions</title>
<para>
Utilities that process regular expressions shall support Basic
Regular Expressions and Extended Regular Expressions as specified in 
<XREF LINKEND=STD.SUSv3>, with the following exceptions:</para>

<para>Range expression (such as <literal>[a-z]</literal>) can be based on code point
order instead of collating element order.</para>

<para>Equivalence class expression (such as <literal>[=a=]</literal>) and multi-character
collating element expression (such as <literal>[.ch.]</literal>) are optional.</para>

<para>Handling of a multi-character collating element is
optional.</para>

<para>This affects at least the following utilities: 
<itemizedlist>
<listitem><para><command>awk</command> (see <xref linkend="awk">)</para></listitem>
<listitem><para><command>grep</command> (see <xref
linkend="grep" >) (including <command>egrep</command>,
see <xref linkend="egrep">)</para></listitem>
<listitem><para><command>sed</command>
(see <xref linkend="sed">)</para></listitem>
</itemizedlist>
It also affects the behavior of interfaces in the base libraries, including
at least 
<itemizedlist>
<listitem><para><function>regexec</function> (see <xref linkend="baselib-regexec-2">)</para></listitem>
</itemizedlist>
</para>

</section>

<section id="localization-glob"
 XRefLabel="Pattern Matching Notation">
<title>Pattern Matching Notation</title>
<para>
Utilities that perform filename pattern matching (also known as Filename
Globbing) shall do it as specified in 
<XREF LINKEND=STD.SUSv3>, Pattern Matching Notation,
with the following exceptions:</para>

<para>Pattern bracket expressions (such as 
<literal>[a-z]</literal>) can be based on code point
order instead of collating element order.</para>

<para>Equivalence class expression (such as <literal>[=a=]</literal>) and multi-character
collating element expression (such as <literal>[.ch.]</literal>) are optional.</para>

<para>Handling of a multi-character collating element is
optional.</para>

<para>This affects at least the following utilities: 
<COMMAND>cpio</COMMAND>
(<xref linkend="cpio" >), 
<COMMAND>find</COMMAND> and
<COMMAND>tar</COMMAND> (<xref linkend="tar" >).</para>

</section>

</CHAPTER>

</PART>
