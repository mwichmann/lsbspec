<SECT1 ID=libncurses>
<TITLE>libncurses</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libncurses</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libncurses.so.5</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
ISO/IEC 9899: 1999, Programming Languages --C<FOOTNOTE ID="std-128-25">
<PARA>
ISO/IEC 9899: 1999, Programming Languages --C</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
 CAE Specification, May 1996, X/Open Curses, Issue 4, Version 2 (ISBN:
1-85912-171-3, C610), plus Corrigendum U018<FOOTNOTE ID="std-128-28">
<PARA>
 CAE Specification, May 1996, X/Open Curses, Issue 4, Version 2 (ISBN:
1-85912-171-3, C610), plus Corrigendum U018</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>Curses</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>addch</ENTRY><ENTRY>has_ic</ENTRY><ENTRY>mvprintw</ENTRY><ENTRY>scr_dump</ENTRY><ENTRY>waddchstr</ENTRY></ROW>
<ROW><ENTRY>addchnstr</ENTRY><ENTRY>has_il</ENTRY><ENTRY>mvscanw</ENTRY><ENTRY>scr_init</ENTRY><ENTRY>waddnstr</ENTRY></ROW>
<ROW><ENTRY>addchstr</ENTRY><ENTRY>has_key</ENTRY><ENTRY>mvvline</ENTRY><ENTRY>scr_restore</ENTRY><ENTRY>waddstr</ENTRY></ROW>
<ROW><ENTRY>addnstr</ENTRY><ENTRY>hline</ENTRY><ENTRY>mvwaddch</ENTRY><ENTRY>scr_set</ENTRY><ENTRY>wattr_get</ENTRY></ROW>
<ROW><ENTRY>addstr</ENTRY><ENTRY>idcok</ENTRY><ENTRY>mvwaddchnstr</ENTRY><ENTRY>scrl</ENTRY><ENTRY>wattr_off</ENTRY></ROW>
<ROW><ENTRY>assume_default_colors</ENTRY><ENTRY>idlok</ENTRY><ENTRY>mvwaddchstr</ENTRY><ENTRY>scroll</ENTRY><ENTRY>wattr_on</ENTRY></ROW>
<ROW><ENTRY>attr_get</ENTRY><ENTRY>immedok</ENTRY><ENTRY>mvwaddnstr</ENTRY><ENTRY>scrollok</ENTRY><ENTRY>wattr_set</ENTRY></ROW>
<ROW><ENTRY>attr_off</ENTRY><ENTRY>inch</ENTRY><ENTRY>mvwaddstr</ENTRY><ENTRY>set_term</ENTRY><ENTRY>wattroff</ENTRY></ROW>
<ROW><ENTRY>attr_on</ENTRY><ENTRY>inchnstr</ENTRY><ENTRY>mvwchgat</ENTRY><ENTRY>setscrreg</ENTRY><ENTRY>wattron</ENTRY></ROW>
<ROW><ENTRY>attr_set</ENTRY><ENTRY>inchstr</ENTRY><ENTRY>mvwdelch</ENTRY><ENTRY>slk_attr</ENTRY><ENTRY>wattrset</ENTRY></ROW>
<ROW><ENTRY>attroff</ENTRY><ENTRY>init_color</ENTRY><ENTRY>mvwgetch</ENTRY><ENTRY>slk_attr_set</ENTRY><ENTRY>wbkgd</ENTRY></ROW>
<ROW><ENTRY>attron</ENTRY><ENTRY>init_pair</ENTRY><ENTRY>mvwgetnstr</ENTRY><ENTRY>slk_attroff</ENTRY><ENTRY>wbkgdset</ENTRY></ROW>
<ROW><ENTRY>attrset</ENTRY><ENTRY>initscr</ENTRY><ENTRY>mvwgetstr</ENTRY><ENTRY>slk_attron</ENTRY><ENTRY>wborder</ENTRY></ROW>
<ROW><ENTRY>baudrate</ENTRY><ENTRY>innstr</ENTRY><ENTRY>mvwhline</ENTRY><ENTRY>slk_attrset</ENTRY><ENTRY>wchgat</ENTRY></ROW>
<ROW><ENTRY>beep</ENTRY><ENTRY>insch</ENTRY><ENTRY>mvwin</ENTRY><ENTRY>slk_clear</ENTRY><ENTRY>wclear</ENTRY></ROW>
<ROW><ENTRY>bkgd</ENTRY><ENTRY>insdelln</ENTRY><ENTRY>mvwinch</ENTRY><ENTRY>slk_color</ENTRY><ENTRY>wclrtobot</ENTRY></ROW>
<ROW><ENTRY>bkgdset</ENTRY><ENTRY>insertln</ENTRY><ENTRY>mvwinchnstr</ENTRY><ENTRY>slk_init</ENTRY><ENTRY>wclrtoeol</ENTRY></ROW>
<ROW><ENTRY>border</ENTRY><ENTRY>insnstr</ENTRY><ENTRY>mvwinchstr</ENTRY><ENTRY>slk_label</ENTRY><ENTRY>wcolor_set</ENTRY></ROW>
<ROW><ENTRY>box</ENTRY><ENTRY>insstr</ENTRY><ENTRY>mvwinnstr</ENTRY><ENTRY>slk_noutrefresh</ENTRY><ENTRY>wcursyncup</ENTRY></ROW>
<ROW><ENTRY>can_change_color</ENTRY><ENTRY>instr</ENTRY><ENTRY>mvwinsch</ENTRY><ENTRY>slk_refresh</ENTRY><ENTRY>wdelch</ENTRY></ROW>
<ROW><ENTRY>cbreak</ENTRY><ENTRY>intrflush</ENTRY><ENTRY>mvwinsnstr</ENTRY><ENTRY>slk_restore</ENTRY><ENTRY>wdeleteln</ENTRY></ROW>
<ROW><ENTRY>chgat</ENTRY><ENTRY>is_linetouched</ENTRY><ENTRY>mvwinsstr</ENTRY><ENTRY>slk_set</ENTRY><ENTRY>wechochar</ENTRY></ROW>
<ROW><ENTRY>clear</ENTRY><ENTRY>is_wintouched</ENTRY><ENTRY>mvwinstr</ENTRY><ENTRY>slk_touch</ENTRY><ENTRY>wenclose</ENTRY></ROW>
<ROW><ENTRY>clearok</ENTRY><ENTRY>isendwin</ENTRY><ENTRY>mvwprintw</ENTRY><ENTRY>standend</ENTRY><ENTRY>werase</ENTRY></ROW>
<ROW><ENTRY>clrtobot</ENTRY><ENTRY>keybound</ENTRY><ENTRY>mvwscanw</ENTRY><ENTRY>standout</ENTRY><ENTRY>wgetch</ENTRY></ROW>
<ROW><ENTRY>clrtoeol</ENTRY><ENTRY>keyname</ENTRY><ENTRY>mvwvline</ENTRY><ENTRY>start_color</ENTRY><ENTRY>wgetnstr</ENTRY></ROW>
<ROW><ENTRY>color_content</ENTRY><ENTRY>keyok</ENTRY><ENTRY>napms</ENTRY><ENTRY>subpad</ENTRY><ENTRY>wgetstr</ENTRY></ROW>
<ROW><ENTRY>color_set</ENTRY><ENTRY>keypad</ENTRY><ENTRY>newpad</ENTRY><ENTRY>subwin</ENTRY><ENTRY>whline</ENTRY></ROW>
<ROW><ENTRY>copywin</ENTRY><ENTRY>killchar</ENTRY><ENTRY>newterm</ENTRY><ENTRY>syncok</ENTRY><ENTRY>winch</ENTRY></ROW>
<ROW><ENTRY>curs_set</ENTRY><ENTRY>leaveok</ENTRY><ENTRY>newwin</ENTRY><ENTRY>termattrs</ENTRY><ENTRY>winchnstr</ENTRY></ROW>
<ROW><ENTRY>curses_version</ENTRY><ENTRY>longname</ENTRY><ENTRY>nl</ENTRY><ENTRY>termname</ENTRY><ENTRY>winchstr</ENTRY></ROW>
<ROW><ENTRY>def_prog_mode</ENTRY><ENTRY>mcprint</ENTRY><ENTRY>nocbreak</ENTRY><ENTRY>tgetent<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winnstr</ENTRY></ROW>
<ROW><ENTRY>def_shell_mode</ENTRY><ENTRY>meta</ENTRY><ENTRY>nodelay</ENTRY><ENTRY>tgetflag<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winsch</ENTRY></ROW>
<ROW><ENTRY>define_key</ENTRY><ENTRY>mouse_trafo</ENTRY><ENTRY>noecho</ENTRY><ENTRY>tgetnum<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winsdelln</ENTRY></ROW>
<ROW><ENTRY>delay_output</ENTRY><ENTRY>mouseinterval</ENTRY><ENTRY>nonl</ENTRY><ENTRY>tgetstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winsertln</ENTRY></ROW>
<ROW><ENTRY>delch</ENTRY><ENTRY>mousemask</ENTRY><ENTRY>noqiflush</ENTRY><ENTRY>tgoto<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winsnstr</ENTRY></ROW>
<ROW><ENTRY>deleteln</ENTRY><ENTRY>move</ENTRY><ENTRY>noraw</ENTRY><ENTRY>tigetflag</ENTRY><ENTRY>winsstr</ENTRY></ROW>
<ROW><ENTRY>delscreen</ENTRY><ENTRY>mvaddch</ENTRY><ENTRY>notimeout</ENTRY><ENTRY>tigetnum</ENTRY><ENTRY>winstr</ENTRY></ROW>
<ROW><ENTRY>delwin</ENTRY><ENTRY>mvaddchnstr</ENTRY><ENTRY>overlay</ENTRY><ENTRY>tigetstr</ENTRY><ENTRY>wmouse_trafo</ENTRY></ROW>
<ROW><ENTRY>derwin</ENTRY><ENTRY>mvaddchstr</ENTRY><ENTRY>overwrite</ENTRY><ENTRY>timeout</ENTRY><ENTRY>wmove</ENTRY></ROW>
<ROW><ENTRY>doupdate</ENTRY><ENTRY>mvaddnstr</ENTRY><ENTRY>pair_content</ENTRY><ENTRY>tparm</ENTRY><ENTRY>wnoutrefresh</ENTRY></ROW>
<ROW><ENTRY>dupwin</ENTRY><ENTRY>mvaddstr</ENTRY><ENTRY>pechochar</ENTRY><ENTRY>tputs<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wprintw</ENTRY></ROW>
<ROW><ENTRY>echo</ENTRY><ENTRY>mvchgat</ENTRY><ENTRY>pnoutrefresh</ENTRY><ENTRY>typeahead</ENTRY><ENTRY>wredrawln</ENTRY></ROW>
<ROW><ENTRY>echochar</ENTRY><ENTRY>mvcur</ENTRY><ENTRY>prefresh</ENTRY><ENTRY>ungetch</ENTRY><ENTRY>wrefresh</ENTRY></ROW>
<ROW><ENTRY>endwin</ENTRY><ENTRY>mvdelch</ENTRY><ENTRY>printw</ENTRY><ENTRY>ungetmouse</ENTRY><ENTRY>wresize</ENTRY></ROW>
<ROW><ENTRY>erase</ENTRY><ENTRY>mvderwin</ENTRY><ENTRY>putp</ENTRY><ENTRY>untouchwin</ENTRY><ENTRY>wscanw</ENTRY></ROW>
<ROW><ENTRY>erasechar</ENTRY><ENTRY>mvgetch</ENTRY><ENTRY>putwin</ENTRY><ENTRY>use_default_colors</ENTRY><ENTRY>wscrl</ENTRY></ROW>
<ROW><ENTRY>filter</ENTRY><ENTRY>mvgetnstr</ENTRY><ENTRY>qiflush</ENTRY><ENTRY>use_env</ENTRY><ENTRY>wsetscrreg</ENTRY></ROW>
<ROW><ENTRY>flash</ENTRY><ENTRY>mvgetstr</ENTRY><ENTRY>raw</ENTRY><ENTRY>use_extended_names</ENTRY><ENTRY>wstandend</ENTRY></ROW>
<ROW><ENTRY>flushinp</ENTRY><ENTRY>mvhline</ENTRY><ENTRY>redrawwin</ENTRY><ENTRY>vidattr</ENTRY><ENTRY>wstandout</ENTRY></ROW>
<ROW><ENTRY>getbkgd</ENTRY><ENTRY>mvinch</ENTRY><ENTRY>refresh</ENTRY><ENTRY>vidputs</ENTRY><ENTRY>wsyncdown</ENTRY></ROW>
<ROW><ENTRY>getch</ENTRY><ENTRY>mvinchnstr</ENTRY><ENTRY>reset_prog_mode</ENTRY><ENTRY>vline</ENTRY><ENTRY>wsyncup</ENTRY></ROW>
<ROW><ENTRY>getmouse</ENTRY><ENTRY>mvinchstr</ENTRY><ENTRY>reset_shell_mode</ENTRY><ENTRY>vw_printw</ENTRY><ENTRY>wtimeout</ENTRY></ROW>
<ROW><ENTRY>getnstr</ENTRY><ENTRY>mvinnstr</ENTRY><ENTRY>resetty</ENTRY><ENTRY>vw_scanw</ENTRY><ENTRY>wtouchln</ENTRY></ROW>
<ROW><ENTRY>getstr</ENTRY><ENTRY>mvinsch</ENTRY><ENTRY>resizeterm</ENTRY><ENTRY>vwprintw<FOOTNOTEREF LINKEND="std-128-25"></ENTRY><ENTRY>wvline</ENTRY></ROW>
<ROW><ENTRY>getwin</ENTRY><ENTRY>mvinsnstr</ENTRY><ENTRY>ripoffline</ENTRY><ENTRY>vwscanw</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>halfdelay</ENTRY><ENTRY>mvinsstr</ENTRY><ENTRY>savetty</ENTRY><ENTRY>waddch</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>has_colors</ENTRY><ENTRY>mvinstr</ENTRY><ENTRY>scanw</ENTRY><ENTRY>waddchnstr</ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>curscr</ENTRY><ENTRY>newscr</ENTRY><ENTRY>ttytype</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libncurses-ddefs>
<TITLE> Data Definitions for libncurses</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>curses.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef unsigned long chtype;

typedef char bool;

typedef typedef unsigned long chtype;
attr_t;

typedef unsigned long mmask_t;


char *keybound (int, int);
char *curses_version (void);
int assume_default_colors (int, int);
int define_key (char *, int);
int keyok (int, bool);
int resizeterm (int, int);
int use_default_colors (void);
int use_extended_names (bool);
int wresize (WINDOW *, int, int);
int addch (chtype);
int addchnstr (chtype *, int);
int addchstr (chtype *);
int addnstr (char *, int);
int addstr (char *);
int attroff (int);
int attron (int);
int attrset (int);
int attr_get (attr_t *, short *, void *);
int attr_off (attr_t, void *);
int attr_on (attr_t, void *);
int attr_set (attr_t, short, void *);
int baudrate (void);
int beep (void);
int bkgd (chtype);
void bkgdset (chtype);
int border (chtype, chtype, chtype, chtype, chtype, chtype, chtype, chtype);
int box (WINDOW *, chtype, chtype);
bool can_change_color (void);
int cbreak (void);
int chgat (int, attr_t, short, void *);
int clear (void);
int clearok (WINDOW *, bool);
int clrtobot (void);
int clrtoeol (void);
int color_content (short, short *, short *, short *);
int color_set (short, void *);
int copywin (WINDOW *, WINDOW *, int, int, int, int, int, int, int);
int curs_set (int);
int def_prog_mode (void);
int def_shell_mode (void);
int delay_output (int);
int delch (void);
void delscreen (SCREEN *);
int delwin (WINDOW *);
int deleteln (void);
WINDOW *derwin (WINDOW *, int, int, int, int);
int doupdate (void);
WINDOW *dupwin (WINDOW *);
int echo (void);
int echochar (chtype);
int erase (void);
int endwin (void);
char erasechar (void);
void filter (void);
int flash (void);
int flushinp (void);
chtype getbkgd (WINDOW *);
int getch (void);
int getnstr (char *, int);
int getstr (char *);
WINDOW *getwin (FILE *);
int halfdelay (int);
bool has_colors (void);
bool has_ic (void);
bool has_il (void);
int hline (chtype, int);
void idcok (WINDOW *, bool);
int idlok (WINDOW *, bool);
void immedok (WINDOW *, bool);
chtype inch (void);
int inchnstr (chtype *, int);
int inchstr (chtype *);
WINDOW *initscr (void);
int init_color (short, short, short, short);
int init_pair (short, short, short);
int innstr (char *, int);
int insch (chtype);
int insdelln (int);
int insertln (void);
int insnstr (char *, int);
int insstr (char *);
int instr (char *);
int intrflush (WINDOW *, bool);
bool isendwin (void);
bool is_linetouched (WINDOW *, int);
bool is_wintouched (WINDOW *);
char *keyname (int);
int keypad (WINDOW *, bool);
char killchar (void);
int leaveok (WINDOW *, bool);
char *longname (void);
int meta (WINDOW *, bool);
int move (int, int);
int mvaddch (int, int, chtype);
int mvaddchnstr (int, int, chtype *, int);
int mvaddchstr (int, int, chtype *);
int mvaddnstr (int, int, char *, int);
int mvaddstr (int, int, char *);
int mvchgat (int, int, int, attr_t, short, void *);
int mvcur (int, int, int, int);
int mvdelch (int, int);
int mvderwin (WINDOW *, int, int);
int mvgetch (int, int);
int mvgetnstr (int, int, char *, int);
int mvgetstr (int, int, char *);
int mvhline (int, int, chtype, int);
chtype mvinch (int, int);
int mvinchnstr (int, int, chtype *, int);
int mvinchstr (int, int, chtype *);
int mvinnstr (int, int, char *, int);
int mvinsch (int, int, chtype);
int mvinsnstr (int, int, char *, int);
int mvinsstr (int, int, char *);
int mvinstr (int, int, char *);
int mvprintw (int, int, char *, ...);
int mvscanw (int, int, char *, ...);
int mvvline (int, int, chtype, int);
int mvwaddch (WINDOW *, int, int, chtype);
int mvwaddchnstr (WINDOW *, int, int, chtype *, int);
int mvwaddchstr (WINDOW *, int, int, chtype *);
int mvwaddnstr (WINDOW *, int, int, char *, int);
int mvwaddstr (WINDOW *, int, int, char *);
int mvwchgat (WINDOW *, int, int, int, attr_t, short, void *);
int mvwdelch (WINDOW *, int, int);
int mvwgetch (WINDOW *, int, int);
int mvwgetnstr (WINDOW *, int, int, char *, int);
int mvwgetstr (WINDOW *, int, int, char *);
int mvwhline (WINDOW *, int, int, chtype, int);
int mvwin (WINDOW *, int, int);
chtype mvwinch (WINDOW *, int, int);
int mvwinchnstr (WINDOW *, int, int, chtype *, int);
int mvwinchstr (WINDOW *, int, int, chtype *);
int mvwinnstr (WINDOW *, int, int, char *, int);
int mvwinsch (WINDOW *, int, int, chtype);
int mvwinsnstr (WINDOW *, int, int, char *, int);
int mvwinsstr (WINDOW *, int, int, char *);
int mvwinstr (WINDOW *, int, int, char *);
int mvwprintw (WINDOW *, int, int, char *, ...);
int mvwscanw (WINDOW *, int, int, char *, ...);
int mvwvline (WINDOW *, int, int, chtype, int);
int napms (int);
WINDOW *newpad (int, int);
SCREEN *newterm (char *, FILE *, FILE *);
WINDOW *newwin (int, int, int, int);
int nl (void);
int nocbreak (void);
int nodelay (WINDOW *, bool);
int noecho (void);
int nonl (void);
void noqiflush (void);
int noraw (void);
int notimeout (WINDOW *, bool);
int overlay (WINDOW *, WINDOW *);
int overwrite (WINDOW *, WINDOW *);
int pair_content (short, short *, short *);
int pechochar (WINDOW *, chtype);
int pnoutrefresh (WINDOW *, int, int, int, int, int, int);
int prefresh (WINDOW *, int, int, int, int, int, int);
int printw (char *, ...);
int putp (char *);
int putwin (WINDOW *, FILE *);
void qiflush (void);
int raw (void);
int redrawwin (WINDOW *);
int refresh (void);
int resetty (void);
int reset_prog_mode (void);
int reset_shell_mode (void);
int ripoffline (int, int);
int savetty (void);
int scanw (char *, ...);
int scr_dump (char *);
int scr_init (char *);
int scrl (int);
int scroll (WINDOW *);
int scrollok (WINDOW *, bool);
int scr_restore (char *);
int scr_set (char *);
int setscrreg (int, int);
SCREEN *set_term (SCREEN *);
int slk_attroff (chtype);
int slk_attron (chtype);
int slk_attrset (chtype);
attr_t slk_attr (void);
int slk_attr_set (attr_t, short, void *);
int slk_clear (void);
int slk_color (short);
int slk_init (int);
char *slk_label (int);
int slk_noutrefresh (void);
int slk_refresh (void);
int slk_restore (void);
int slk_set (int, char *, int);
int slk_touch (void);
int standout (void);
int standend (void);
int start_color (void);
WINDOW *subpad (WINDOW *, int, int, int, int);
WINDOW *subwin (WINDOW *, int, int, int, int);
int syncok (WINDOW *, bool);
chtype termattrs (void);
char *termname (void);
int tigetflag (char *);
int tigetnum (char *);
char *tigetstr (char *);
void timeout (int);
char *tparm (char *, ...);
int typeahead (int);
int ungetch (int);
int untouchwin (WINDOW *);
void use_env (bool);
int vidattr (chtype);
int vidputs (chtype, int);
int vline (chtype, int);
int vwprintw (WINDOW *, char *, va_list);
int vw_printw (WINDOW *, char *, va_list);
int vwscanw (WINDOW *, char *, va_list);
int vw_scanw (WINDOW *, char *, va_list);
int waddch (WINDOW *, chtype);
int waddchnstr (WINDOW *, chtype *, int);
int waddchstr (WINDOW *, chtype *);
int waddnstr (WINDOW *, char *, int);
int waddstr (WINDOW *, char *);
int wattron (WINDOW *, int);
int wattroff (WINDOW *, int);
int wattrset (WINDOW *, int);
int wattr_get (WINDOW *, attr_t *, short *, void *);
int wattr_on (WINDOW *, attr_t, void *);
int wattr_off (WINDOW *, attr_t, void *);
int wattr_set (WINDOW *, attr_t, short, void *);
int wbkgd (WINDOW *, chtype);
void wbkgdset (WINDOW *, chtype);
int wborder (WINDOW *, chtype, chtype, chtype, chtype, chtype, chtype, chtype,
	     chtype);
int wchgat (WINDOW *, int, attr_t, short, void *);
int wclear (WINDOW *);
int wclrtobot (WINDOW *);
int wclrtoeol (WINDOW *);
int wcolor_set (WINDOW *, short, void *);
void wcursyncup (WINDOW *);
int wdelch (WINDOW *);
int wdeleteln (WINDOW *);
int wechochar (WINDOW *, chtype);
int werase (WINDOW *);
int wgetch (WINDOW *);
int wgetnstr (WINDOW *, char *, int);
int wgetstr (WINDOW *, char *);
int whline (WINDOW *, chtype, int);
chtype winch (WINDOW *);
int winchnstr (WINDOW *, chtype *, int);
int winchstr (WINDOW *, chtype *);
int winnstr (WINDOW *, char *, int);
int winsch (WINDOW *, chtype);
int winsdelln (WINDOW *, int);
int winsertln (WINDOW *);
int winsnstr (WINDOW *, char *, int);
int winsstr (WINDOW *, char *);
int winstr (WINDOW *, char *);
int wmove (WINDOW *, int, int);
int wnoutrefresh (WINDOW *);
int wprintw (WINDOW *, char *, ...);
int wredrawln (WINDOW *, int, int);
int wrefresh (WINDOW *);
int wscanw (WINDOW *, char *, ...);
int wscrl (WINDOW *, int);
int wsetscrreg (WINDOW *, int, int);
int wstandout (WINDOW *);
int wstandend (WINDOW *);
void wsyncdown (WINDOW *);
void wsyncup (WINDOW *);
void wtimeout (WINDOW *, int);
int wtouchln (WINDOW *, int, int, int);
int wvline (WINDOW *, chtype, int);
bool mouse_trafo (int *, int *, bool);
int getmouse (MEVENT *);
int ungetmouse (MEVENT *);
mmask_t mousemask (mmask_t, mmask_t *);
bool wenclose (WINDOW *, int, int);
int mouseinterval (int);
bool wmouse_trafo (WINDOW *, int *, int *, bool);
int mcprint (char *, int);
int has_key (int);
WINDOW *curscr;
WINDOW *newscr;
WINDOW *stdscr;
char ttytype;
</SCREEN>
</SECT2>
</SECT1>
