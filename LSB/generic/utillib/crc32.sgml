<refentry id="zlib-crc32-1">

<refmeta>
<refentrytitle>crc32</refentrytitle>
<refmiscinfo>Utility Libraries</refmiscinfo>
</refmeta>

<refnamediv>
<refname>crc32</refname>
<refpurpose>Compute Adler 32 Checksum</refpurpose>
<indexterm id="ix-utillib-crc32-1">
  <primary>crc32</primary></indexterm>
</refnamediv>

<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;zlib.h&gt;
</funcsynopsisinfo><funcprototype>
<funcdef>uLong
<function>crc32</function>
</funcdef>
<paramdef>uLong
<parameter>crc</parameter>
</paramdef>
<paramdef>const Bytef *
<parameter>buf</parameter>
</paramdef>
<paramdef>uInt
<parameter>len</parameter>
</paramdef>

</funcprototype>
</funcsynopsis>
</refsynopsisdiv>

<refsect1>
<title>Description</title>

<para>
The <function>crc32</function> function shall compute a running
Cyclic Redundancy Check checksum, as defined in <xref linkend="std.ituv42">.
On entry, <parameter>crc</parameter> is the previous value for the
checksum, and <parameter>buf</parameter> shall point to an array of
<parameter>len</parameter> bytes of data to be added to this checksum.
The <function>crc32</function> function shall return the new checksum.
</para>
<para>
If <parameter>buf</parameter> is <constant>NULL</constant> (or 
<constant>Z_NULL</constant>), <function>crc32</function>
shall return the initial checksum.
</para>

</refsect1>
<refsect1>
<title>Return Value</title>
<para>
The <function>crc32</function> function shall return  
the new checksum value.
</para>
</refsect1>
<refsect1>
<title>Errors</title>
<para>
None defined.
</para>
</refsect1>
<refsect1>
<title>Application Usage (informative)</title>
<para>
The following code fragment demonstrates typical usage of
the <function>crc32</function> function:
<programlisting>
     uLong crc = crc32(0L, Z_NULL, 0);

     while (read_buffer(buffer, length) != EOF) {
       crc = crc32(crc, buffer, length);
     }
     if (crc != original_crc) error();
</programlisting>
</para>
</refsect1>
</refentry>

