<PART ID="tocintro">
<TITLE>Introduction</TITLE>

<CHAPTER id=Introduction>
<TITLE>Introduction</TITLE>
<SECT1 ID="overview">
<TITLE>Introduction</TITLE>
<PARA>
This is version &specversion of the Linux Standard Base Specification. This 
version contained all of the sections that will apear in the final 1.0
Specfication. Behavioral specifications for some interfaces have not yet
been incorporated, but will be present in the 1.0 Specification.
</PARA>
<PARA>
Those wishing to implement this standard should use this specification with
the understanding that further testing and public review will occur, and that
changes as a result of these activities may occur.
</PARA>
<PARA>
An implementation of this version of the specification may not claim
to be an implementation of the Linux Standard Base.
</PARA>
</SECT1>

<SECT1 ID="overpurp">
<TITLE>Purpose</TITLE>
<PARA>
The Linux Standard Base (LSB) defines a system interface for compiled
applications and a minimal environment for support of installation scripts.
Its purpose is to enable a uniform industry standard environment for
high-volume applications conforming to the LSB.
</PARA>
<PARA>
The LSB defines a binary interface for application programs that are compiled
and packaged for LSB-conforming implementations on many different hardware
architectures. Since a binary specification must include information specific
to the computer processor architecture for which it is intended, it is not
possible for a single document to specify the interface for all possible
LSB-conforming implementations. Therefore, the LSB is a family of
specifications, rather than a single one.
</PARA>
<PARA>
The LSB is composed of two basic parts: A common part of the specification
describes those parts of the interface that remain constant across all hardware
implementations of the LSB, and an architecture-specific part of the
specification describes the parts of the specification that are specific to a
particular processor architecture. Together, the generic LSB and the
architecture-specific supplement for a single hardware architecture provide a
complete interface specification for compiled application programs on systems
that share a common hardware architecture.
</PARA>
<PARA>
This document is the generic LSB. It must be used in conjunction with an
architecture-specific supplement. Whenever a section of this specification
must be supplemented by architecture-specific information, this document
includes a reference to the architecture supplement. Architecture supplements
may also contain additional information that is not referenced here.
</PARA>
<PARA>
This document should be used in conjunction with the documents it references.
This document enumerates the system components it includes, but descriptions of
those components may be included entirely or partly in this document, partly in
other documents, or entirely in other reference documents. For example, the
section that describes system service routines includes a list of the system
routines supported in this interface, formal declarations of the data
structures they use that are visible to applications, and a pointer to the
underlying referenced specification for information about the syntax and
semantics of each call. Only those routines not described in standards
referenced by this document, or extensions to those standards, are described in
the detail. Information referenced in this way is as much a part of this
document as is the information explicitly included here.
</PARA>
</SECT1>

<SECT1 ID="rstandards">
<TITLE>Related Standards</TITLE>
<PARA>
The specifications listed below are referenced in whole or in part by
the Linux Standard Base.  Such references may be normative or
non-normative; a reference to specification shall only be considered
normative if it is explicitly cited as such.  The LSB
may make normative references to a portion of these
specifications (that is, to define a specific function or group of
functions); in such cases, only the explicitly referenced portion of
the specification is to be considered normative.

</PARA>
<TABLE>
<TITLE>Related Standards</TITLE>
<TGROUP COLS=3>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mkstandardsgmltable,v 1.4 2001/04/25 17:39:25 anderson Exp 0 -->
<!--    at Thu May  3 22:43:52 2001 -->
<TBODY>
<ROW><ENTRY>ABIUpdate</ENTRY><ENTRY>System V Application Binary Interface - DRAFT - 22 June 2000</ENTRY><ENTRY><ULINK URL="http://www.sco.com/developer/gabi/2000-07-17/contents.html">http://www.sco.com/developer/gabi/2000-07-17/contents.html</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>ELF</ENTRY><ENTRY>Tool Interface Standard (TIS) Executable and Linking Format (ELF) Specification version 1.2</ENTRY><ENTRY><ULINK URL=""></ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>ELF Specification</ENTRY><ENTRY>Toolkit Interface Standard (TIS) Executable and Linking Form</ENTRY><ENTRY><ULINK URL="http://www.linuxbase.org/spec/refspecs/elf.pdf">http://www.linuxbase.org/spec/refspecs/elf.pdf</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>FHS</ENTRY><ENTRY>Filesystem Hierarchy Standard 2.1</ENTRY><ENTRY><ULINK URL="http://www.pathname.com/fhs">http://www.pathname.com/fhs</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>FLTPNT</ENTRY><ENTRY>IEEE Standard for Binary Floating-Point Arithmetic</ENTRY><ENTRY><ULINK URL="http://www.ieee.org">http://www.ieee.org</ULINK></ENTRY><ENTRY>ANSI/IEEE Standards 745-1985 and 854-1987</ENTRY></ROW>
<ROW><ENTRY>gABI_41</ENTRY><ENTRY>System VApplication Binary Interface, Edition 4.1</ENTRY><ENTRY><ULINK URL="http://www.sco.com/developer/devspecs/gabi41.pdf">http://www.sco.com/developer/devspecs/gabi41.pdf</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>IA32-ABI-4</ENTRY><ENTRY>System V Application Binary Interface - Intel386 Architecture Processor Supplement</ENTRY><ENTRY><ULINK URL="http://www.sco.com/developer/devspecs/abi386-4.pdf">http://www.sco.com/developer/devspecs/abi386-4.pdf</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>IA64conventions</ENTRY><ENTRY>Itanium(R) Software Conventions & Runtime Architecture Guide</ENTRY><ENTRY><ULINK URL="http://developer.intel.com/design/ia-64/downloads/245358.htm">http://developer.intel.com/design/ia-64/downloads/245358.htm</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>ISOC90</ENTRY><ENTRY>ISO/IEC 9899: 1990, Programming Languages --C.</ENTRY><ENTRY><ULINK URL=""></ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>ISOC99</ENTRY><ENTRY>ISO/IEC 9899: 1999, Programming Languages --C</ENTRY><ENTRY><ULINK URL=""></ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>LFS</ENTRY><ENTRY>Large File Support</ENTRY><ENTRY><ULINK URL="http://www.UNIX-systems.org/version2/whatsnew/lfs20mar.html">http://www.UNIX-systems.org/version2/whatsnew/lfs20mar.html</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>LSB</ENTRY><ENTRY>Linux Standard Base</ENTRY><ENTRY><ULINK URL="http://www.linuxbase.org/spec/">http://www.linuxbase.org/spec/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>OGL</ENTRY><ENTRY>OpenGL® Application Binary Interface for Linux</ENTRY><ENTRY><ULINK URL="http://oss.sgi.com/projects/ogl-sample/ABI/">http://oss.sgi.com/projects/ogl-sample/ABI/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>POSIX.1</ENTRY><ENTRY>IEEE Std POSIX.1-1996 [ISO/IEC 9945-1:1996]</ENTRY><ENTRY><ULINK URL="http://www.ieee.org">http://www.ieee.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>POSIX.2</ENTRY><ENTRY>IEEE Std POSIX 1003.2-1992 (ISO/IEC 9945-2:1993)</ENTRY><ENTRY><ULINK URL="http://www.ieee.org">http://www.ieee.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>pthreads</ENTRY><ENTRY>POSIX 1003.1c</ENTRY><ENTRY><ULINK URL="http://www.ieee.org">http://www.ieee.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>SUS-CURSES</ENTRY><ENTRY> CAE Specification, May 1996, X/Open Curses, Issue 4, Version 2 (ISBN:
1-85912-171-3, C610), plus Corrigendum U018</ENTRY><ENTRY><ULINK URL="http://www.opengroup.org">http://www.opengroup.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>SUS-XBD</ENTRY><ENTRY>CAE Specification, January 1997, System Interface Definitions (XBD),
Issue 5 (ISBN: 1-85912-186-1, C605)</ENTRY><ENTRY><ULINK URL="http://www.opengroup.org">http://www.opengroup.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>SUS-XCU</ENTRY><ENTRY>CAE Specification, January 1997, Commands and Utilities (XCU), Issue 5(ISBN: 1-85912-191-8, C604)</ENTRY><ENTRY><ULINK URL="http://www.opengroup.org">http://www.opengroup.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>SUS-XNS</ENTRY><ENTRY>CAE Specification, February 1997, Networking Services (XNS), Issue 5
(ISBN: 1-85912-165-9, C523)</ENTRY><ENTRY><ULINK URL="http://www.opengroup.org/">http://www.opengroup.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>SUS-XSH</ENTRY><ENTRY>CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)</ENTRY><ENTRY><ULINK URL="http://www.opengroup.org/">http://www.opengroup.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>SUS-XSH95</ENTRY><ENTRY>The Single UNIX Specification Version 1 (UNIX 95) System Interfaces & Headers</ENTRY><ENTRY><ULINK URL="http://www.opengroup.org/">http://www.opengroup.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>SVID.3</ENTRY><ENTRY>System V Interface Definition, Issue 3</ENTRY><ENTRY><ULINK URL=""></ULINK></ENTRY><ENTRY>ISBN 0201566524</ENTRY></ROW>
<ROW><ENTRY>X-dbe</ENTRY><ENTRY>Double Buffer Extension Library</ENTRY><ENTRY><ULINK URL="http://www.x.org/">http://www.x.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>X-DPMS</ENTRY><ENTRY>X Display Power Management Signaling (DPMS) Extension, Library Specification</ENTRY><ENTRY><ULINK URL="http://www.x.org/">http://www.x.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>X-Record</ENTRY><ENTRY>X Record Extension Library</ENTRY><ENTRY><ULINK URL="http://www.x.org/">http://www.x.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>X-security</ENTRY><ENTRY>Security Extension Specification, Version 7.1</ENTRY><ENTRY><ULINK URL="http://www.x.org/">http://www.x.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>X-shape</ENTRY><ENTRY>X Nonrectangular Window Shape Extension Library Version 1.0</ENTRY><ENTRY><ULINK URL="http://www.x.org/">http://www.x.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>X-shm</ENTRY><ENTRY>MIT-SHM--The MIT Shared Memory Extension</ENTRY><ENTRY><ULINK URL="http://www.x.org/">http://www.x.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>X-sync</ENTRY><ENTRY>X Synchronization Extension Library</ENTRY><ENTRY><ULINK URL="http://www.x.org/">http://www.x.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>X-test</ENTRY><ENTRY>XTEST Extension Library</ENTRY><ENTRY><ULINK URL="http://www.x.org/">http://www.x.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>XICE</ENTRY><ENTRY>X11R6.4 X Inter-Client Exchange (ICE) Protocol</ENTRY><ENTRY><ULINK URL="http://www.x.org">http://www.x.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>XINPUT</ENTRY><ENTRY>X11R6.4  X11 Input Extension Library</ENTRY><ENTRY><ULINK URL="http://www.x.org">http://www.x.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>Xlib</ENTRY><ENTRY>X11R6.4 Xlib - C library</ENTRY><ENTRY><ULINK URL="http://www.x.org">http://www.x.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>XPG4</ENTRY><ENTRY>X/Open Portability Guide, Issue 4</ENTRY><ENTRY><ULINK URL="http://www.opengroup.org">http://www.opengroup.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>XSM</ENTRY><ENTRY>X11R6.4 X Session Managment Library</ENTRY><ENTRY><ULINK URL="http://www.x.org">http://www.x.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>Xt</ENTRY><ENTRY>X11R.4 X Toolkit Intrinsics</ENTRY><ENTRY><ULINK URL="http://www.x.org">http://www.x.org</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>zlib</ENTRY><ENTRY>zlib 1.1.3 Manual</ENTRY><ENTRY><ULINK URL="http://www.info-zip.org/pub/infozip/zlib/">http://www.info-zip.org/pub/infozip/zlib/</ULINK></ENTRY><ENTRY>See "zlib Manual" on that site</ENTRY></ROW>
</TBODY>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mkstandardsgmltable,v 1.4 2001/04/25 17:39:25 anderson Exp 0 -->

</TGROUP>
</TABLE>
</SECT1>

<SECT1 ID="rimplementations">
<TITLE>Related Implementations</TITLE>
<PARA>
The implementations listed here are referenced in whole or in part by the
Linux Standard Base when no formal specification is available.
</PARA>
<TABLE>
<TITLE>Related Implementations</TITLE>
<TGROUP COLS=3>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mkstandardsgmltable,v 1.4 2001/04/25 17:39:25 anderson Exp 0 -->
<!--    at Thu May  3 22:43:52 2001 -->
<TBODY>
<ROW><ENTRY>BSD</ENTRY><ENTRY>BSD 4.4 Lite version 2</ENTRY><ENTRY><ULINK URL=""></ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>Linux</ENTRY><ENTRY>GNU/Linux defacto standard</ENTRY><ENTRY><ULINK URL="http://www.gnu.org/">http://www.gnu.org/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>RPC & XDR</ENTRY><ENTRY>RFC 1831 & 1832</ENTRY><ENTRY><ULINK URL="http://www.ietf.org">http://www.ietf.org</ULINK></ENTRY><ENTRY>Still need API reference, instead of protocol reference</ENTRY></ROW>
<ROW><ENTRY>RPM</ENTRY><ENTRY>RPM Package Format V3.0</ENTRY><ENTRY><ULINK URL="http://www.rpmdp.org/rpmbook/">http://www.rpmdp.org/rpmbook/</ULINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mkstandardsgmltable,v 1.4 2001/04/25 17:39:25 anderson Exp 0 -->

</TGROUP>
</TABLE>
</SECT1>

<SECT1 ID="rlibraries">
<TITLE>Relevant Libraries</TITLE>
<PARA>
The Libraries listed here are available on a Linux Standard Base conforming
system. This list may be supplemented or ameneded by the architecture specific 
specifications.
</PARA>
<TABLE>
<TITLE>Relevant Libraries</TITLE>
<TGROUP COLS=2>
<THEAD>
<ROW>
<ENTRY>Library</ENTRY>
<ENTRY>Runtime Name</ENTRY>
</ROW>
</THEAD>
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibsgmltable,v 1.5 2001/04/25 17:39:25 anderson Exp 0 -->
<!--    at Thu May  3 22:43:52 2001 -->
<TBODY>
<ROW><ENTRY>libX11</ENTRY><ENTRY>libX11.so.6</ENTRY></ROW>
<ROW><ENTRY>libXt</ENTRY><ENTRY>libXt.so.6</ENTRY></ROW>
<ROW><ENTRY>libGL</ENTRY><ENTRY>libGL.so.1</ENTRY></ROW>
<ROW><ENTRY>libXext</ENTRY><ENTRY>libXext.so.6</ENTRY></ROW>
<ROW><ENTRY>libICE</ENTRY><ENTRY>libICE.so.6</ENTRY></ROW>
<ROW><ENTRY>libSM</ENTRY><ENTRY>libSM.so.6</ENTRY></ROW>
<ROW><ENTRY>libdl</ENTRY><ENTRY>libdl.so.2</ENTRY></ROW>
<ROW><ENTRY>libcrypt</ENTRY><ENTRY>libcrypt.so.1</ENTRY></ROW>
<ROW><ENTRY>libz</ENTRY><ENTRY>libz.so.1</ENTRY></ROW>
<ROW><ENTRY>libncurses</ENTRY><ENTRY>libncurses.so.5</ENTRY></ROW>
<ROW><ENTRY>proginterp</ENTRY><ENTRY>ld-lsb.so.1</ENTRY></ROW>
</TBODY>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibsgmltable,v 1.5 2001/04/25 17:39:25 anderson Exp 0 -->

</TGROUP>
</TABLE>
<PARA>
These libraries will be in a default location found by the dynamic linker.
</PARA>
</SECT1>

<SECT1 ID="howto">
<TITLE>How to Use this Standard</TITLE>
<PARA>
The complete LSB specification is composed of this generic LSB specification 
and the supplemental processor-specific specification for a particular 
processor architecture. These two documents constitute a specification that 
should be used in conjunction with the publicly-available standards documents 
it references. The LSB enumerates the system components it includes, but 
descriptions of those components may be included entirely in the LSB, partly 
in the LSB and partly in other documents, or entirely in other reference 
documents.
</PARA>
<PARA>
Programmers who wish to produce binary applications that will
run on any LSB-conforming implementation should follow this procedure:
</PARA>
<ORDEREDLIST NUMERATION="arabic">
<LISTITEM>
<PARA>
Link your binary application with the LSB's filter libraries found in
<FILENAME class=directory>/usr/lsb/lib</FILENAME>
to determine at compile time if your application is using
only LSB defined APIs.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
Link your binary application with the LSB 
<FILENAME>/lib/ld-lsb.so.1</FILENAME>
dynamic linker/loader. 
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>
Verify your binary application with the LSB's 
<FILENAME >/usr/bin/lsbappchk</FILENAME>
tool to determine at runtime if your application is using only LSB defined APIs.
</PARA>
</LISTITEM>
</orderedlist>
</SECT1>

<SECT1 ID="defns">
<TITLE>Definitions</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
LSB
</TERM>
<LISTITEM>
<PARA>
This document.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
LSB-Compliant Application
</TERM>
<LISTITEM>
<PARA>
An application written to include only the system routines, commands,
and other resources included in this document, and that has been compiled
into an executable file that has the formats and characteristics specified
for such files in this document, and whose behavior complies, installs,
and is executed in the environment with the rules given in this document.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
LSB-Conforming Implementation
</TERM>
<LISTITEM>
<PARA>
An implementation that provides the binary system interface for
applications described in this document.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
Non-LSB-Compliant Application
</TERM>
<LISTITEM>
<PARA>
An application which has been written to include system routines,
commands, or other resources not included in this document, or which
has been compiled into a  different from those specified here,
or which does not behave as specified in this document.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
LSB Implementation Conformance 
</TERM>
<LISTITEM>
<PARA>
Manufacturers of LSB-conforming implementations providing the system 
interface described in this document shall satisfy the following set 
of requirements: 
</PARA>
<PARA>
1. The implementation shall implement fully the architecture described 
in the hardware manual for the target processor architecture. 
</PARA>
<PARA>
2. The implementation shall be capable of executing compiled applications 
having the  described in this document. 
</PARA>
<PARA>
3. The implementation shall provide libraries containing the interfaces 
specified by this document, and shall provide a dynamic 
linking mechanism that allows these interfaces to be attached to 
applications at runtime. All the interfaces shall behave as specified 
in the normative references and requirements of this document 
</PARA>
<PARA>
4. The map of virtual memory provided by the implementation shall conform 
to the requirements of this document. 
</PARA>
<PARA>
5. The implementation's low-level behavior with respect to function call 
linkage, system traps, signals, and other such activities shall conform 
to the formats described in this document. 
</PARA>
<PARA>
6. The compilation system shall compile source code into executable 
files having the formats and characteristics specified in this document. 
</PARA>
<PARA>
7. The implementation shall provide all of the mandatory interfaces, 
in their entirety. 
</PARA>
<PARA>
8. The implementation may provide one or more of the optional 
interfaces. Each optional interface that is provided shall be provided 
in its entirety. The product documentation 
shall state which optional interfaces are provided. 
</PARA>
<PARA>
9. The implementation shall provide all files and utilities specified 
as part of this document in the  defined here and in 
other referenced documents. All commands and utilities shall behave as 
required by this document. The implementation 
shall also provide all mandatory components of an application's runtime 
environment that are included or referenced in this document. 
</PARA>
<PARA>
10. The implementation, when provided with standard data formats 
and values at a named interface, shall provide the behavior defined 
for those values and data formats at that interface. However, a 
conforming implementation may consist of separately-packaged and/or sold 
components. For example, a vendor of a conforming implementation might 
sell the hardware, operating system, and windowing system as separately 
packaged items. 
</PARA>
<PARA>
11. The implementation may provide additional interfaces with different 
names. It may also provide additional behavior corresponding to data 
values outside the standard ranges, for standard named interfaces. 
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
LSB Application Conformance 
</TERM>
<LISTITEM>
<PARA>
An LSB conforming application has the following characteristics: 
</PARA>
<PARA>
+ Its executable files are either shell scripts or object 
files in the  defined for the Object File Format system interface. 
(Q:what about other interpreted languages, such as perl/awk/python etc?) 
</PARA>
<PARA>
+ Its object files participate in dynamic linking as defined in the 
Program Loading and Linking System interface. 
</PARA>
<PARA>
+ It employs only the instructions, traps, and other low-level 
facilities defined in the Low-Level System interface as being for use 
by applications. 
</PARA>
<PARA>
+ If it requires any optional interface defined in this document in 
order to be installed or to execute successfully, the requirement for 
that optional interface is stated in the application's documentation. 
</PARA>
<PARA>
+ It does not use any interface or data  that is not required to 
be provided by a conforming implementation, unless: 
</PARA>
<PARA>
- If such an interface or data  is supplied by another application 
through direct invocation of that application during execution, that 
application is in turn an LSB- compliant application. 
</PARA>
<PARA>
- The use of that interface or data , as well as its source, 
is identified in the documentation of the application. 
</PARA>
<PARA>
+ It must not use any values for a named interface that are reserved 
for vendor extensions. 
</PARA>
<PARA>
A strictly conforming application does not require or use any interface, 
facility, or implementation-defined extension that is not defined in 
this document in order to be installed or to execute successfully. 
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
Rationale 
</TERM>
<LISTITEM>
<PARA>
An LSB-compliant application is expected to have no dependencies on any 
vendor extensions to this document. The most common such extensions are 
additional function entry points and additional libraries other than the 
ones defined in this document. If an application requires such extensions, 
it is not portable, since other LSB-conforming implementations may not 
provide those extensions. 
</PARA>
<PARA>
An LSB-compliant application is required to use system services on the 
implementation on which it is running, rather than importing system 
routines from some other implementation. Thus, it must link dynamically 
to any routines in the implementation that perform system traps to 
kernel services. 
</PARA>
<PARA>
It is to be expected that some applications may be companion applications 
to other applications. For example, a query application may be a 
companion to a database application; a preprocessor may be an adjunct 
to one or more compilers; a data reformatter may convert data from one 
document manager to another. In such cases, the application may or may 
not be LSB-compliant, regardless of whether the other application on 
which it is dependent is LSB-compliant. If such an application merely 
uses data produced by another application, the application's compliance is 
independent of the other application's compliance. If such an application 
actually invokes another application during execution (as, for example, 
a third-party math library), the invoking application is LSB-compliant 
only if it also constitutes a LSB-compliant application in combination 
with the invoked application. 
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</SECT1>

<SECT1 ID="terms">
<TITLE>Terminology</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
can
</TERM>
<LISTITEM>
<PARA>
Describes a permissible optional feature or behavior available to
the user or application. The feature or behavior is mandatory for an
implementation that conforms to this document. An application can rely
on the existence of the feature or behavior.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
implementation-defined
</TERM>
<LISTITEM>
<PARA>
(Same meaning as implementation-dependent.) Describes a value or
behavior that is not defined by this document but is selected by an
implementor. The value or behavior may vary among implementations
that conform to this document. An application should not rely on the
existence of the value or behavior. An application that relies on such
a value or behavior cannot be assured to be portable across conforming
implementations.  The implementor shall document such a value or behavior
so that it can be used correctly by an application.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
may
</TERM>
<LISTITEM>
<PARA>
Describes a feature or behavior that is optional for an implementation
that conforms to this document. An application should not rely on the
existence of the feature or behavior. An application that relies on such
a feature or behavior cannot be assured to be portable across conforming
implementations.  To avoid ambiguity, the opposite of may is expressed
as need not, instead of may not.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
must
</TERM>
<LISTITEM>
<PARA>
Describes a feature or behavior that is mandatory for an application
or user. An implementation that conforms to this document shall support
this feature or behavior.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
shall
</TERM>
<LISTITEM>
<PARA>
Describes a feature or behavior that is mandatory for an implementation
that conforms to this document. An application can rely on the existence
of the feature or behavior.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
should
</TERM>
<LISTITEM>
<PARA>
For an implementation that conforms to this document, describes a feature
or behavior that is recommended but not mandatory. An application should
not rely on the existence of the feature or behavior. An application that
relies on such a feature or behavior cannot be assured to be portable
across conforming implementations.
</PARA>
<PARA>
For an application, describes a feature or behavior that is recommended
programming practice for optimum portability.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
undefined
</TERM>
<LISTITEM>
<PARA>
Describes the nature of a value or behavior not defined by this document
which results from use of an invalid program construct or invalid
data input.  The value or behavior may vary among implementations that
conform to this document. An application should not rely on the existence
or validity of the value or behavior. An application that relies on any
particular value or behavior cannot be assured to be portable across
conforming implementations.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
unspecified
</TERM>
<LISTITEM>
<PARA>
Describes the nature of a value or behavior not specified by this document
which results from use of a valid program construct or valid data input.
The value or behavior may vary among implementations that conform to this
document. An application should not rely on the existence or validity
of the value or behavior. An application that relies on any particular
value or behavior cannot be assured to be portable across conforming
implementations.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
will
</TERM>
<LISTITEM>
<PARA>
Same meaning as shall; shall is the preferred term.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</SECT1>

</CHAPTER>
</PART>
