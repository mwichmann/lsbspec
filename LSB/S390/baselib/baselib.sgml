<PART ID=tocbaselib>
<TITLE>Base Libraries</TITLE>

<CHAPTER id=baselib>
<TITLE>Libraries</TITLE>

<PARA>

An LSB-conforming implementation shall support base libraries which
provide interfaces for accessing the operating system, processor and other
hardware in the system.
</PARA>

<PARA>
Only those interfaces that are unique to the PowerPC 32 platform are
defined here. This section should be used in conjunction with the
corresponding section in the Linux Standard Base Specification.
</PARA>

<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->
<!--    at Tue Jan 27 17:41:51 2004 -->
<SECT1 ID=libc>
<TITLE>Interfaces for libc</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libc</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libc.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
ISO/IEC 9899: 1999, Programming Languages --C<FOOTNOTE ID="std-131-25">
<PARA>
ISO/IEC 9899: 1999, Programming Languages --C</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Large File Support<FOOTNOTE ID="std-131-35">
<PARA>
Large File Support</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-131-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-131-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
The Single UNIX® Specification(SUS) Version 3<FOOTNOTE ID="std-131-67">
<PARA>
The Single UNIX® Specification(SUS) Version 3</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
System V Interface Definition, Issue 3 (ISBN 0201566524)<FOOTNOTE ID="std-131-21">
<PARA>
System V Interface Definition, Issue 3 (ISBN 0201566524)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
System V Interface Definition,Fourth Edition<FOOTNOTE ID="std-131-46">
<PARA>
System V Interface Definition,Fourth Edition</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<!--libgroup-->
<TITLE>RPC</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for RPC</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - RPC Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>authnone_create</primary></indexterm>authnone_create(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY><indexterm><primary>svc_getreqset</primary></indexterm>svc_getreqset(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>svcudp_create</primary></indexterm>svcudp_create(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>xdr_free</primary></indexterm>xdr_free(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_u_char</primary></indexterm>xdr_u_char(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_create</primary></indexterm>clnt_create(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY><indexterm><primary>svc_register</primary></indexterm>svc_register(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>xdr_accepted_reply</primary></indexterm>xdr_accepted_reply(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_int</primary></indexterm>xdr_int(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_u_int</primary></indexterm>xdr_u_int(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_pcreateerror</primary></indexterm>clnt_pcreateerror(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY><indexterm><primary>svc_sendreply</primary></indexterm>svc_sendreply(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>xdr_array</primary></indexterm>xdr_array(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_long</primary></indexterm>xdr_long(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_u_long</primary></indexterm>xdr_u_long(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_perrno</primary></indexterm>clnt_perrno(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY><indexterm><primary>svcerr_auth</primary></indexterm>svcerr_auth(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_bool</primary></indexterm>xdr_bool(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_opaque</primary></indexterm>xdr_opaque(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_u_short</primary></indexterm>xdr_u_short(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_perror</primary></indexterm>clnt_perror(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY><indexterm><primary>svcerr_decode</primary></indexterm>svcerr_decode(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_bytes</primary></indexterm>xdr_bytes(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_opaque_auth</primary></indexterm>xdr_opaque_auth(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_union</primary></indexterm>xdr_union(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_spcreateerror</primary></indexterm>clnt_spcreateerror(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY><indexterm><primary>svcerr_noproc</primary></indexterm>svcerr_noproc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_callhdr</primary></indexterm>xdr_callhdr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_pointer</primary></indexterm>xdr_pointer(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_vector</primary></indexterm>xdr_vector(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_sperrno</primary></indexterm>clnt_sperrno(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY><indexterm><primary>svcerr_noprog</primary></indexterm>svcerr_noprog(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_callmsg</primary></indexterm>xdr_callmsg(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_reference</primary></indexterm>xdr_reference(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_void</primary></indexterm>xdr_void(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_sperror</primary></indexterm>clnt_sperror(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY><indexterm><primary>svcerr_progvers</primary></indexterm>svcerr_progvers(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_char</primary></indexterm>xdr_char(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_rejected_reply</primary></indexterm>xdr_rejected_reply(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_wrapstring</primary></indexterm>xdr_wrapstring(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getdomainname</primary></indexterm>getdomainname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>svcerr_systemerr</primary></indexterm>svcerr_systemerr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_double</primary></indexterm>xdr_double(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_replymsg</primary></indexterm>xdr_replymsg(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdrmem_create</primary></indexterm>xdrmem_create(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>key_decryptsession</primary></indexterm>key_decryptsession(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>svcerr_weakauth</primary></indexterm>svcerr_weakauth(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_enum</primary></indexterm>xdr_enum(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_short</primary></indexterm>xdr_short(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdrrec_create</primary></indexterm>xdrrec_create(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setdomainname</primary></indexterm>setdomainname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>svctcp_create</primary></indexterm>svctcp_create(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>xdr_float</primary></indexterm>xdr_float(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdr_string</primary></indexterm>xdr_string(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY><indexterm><primary>xdrrec_eof</primary></indexterm>xdrrec_eof(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>System Calls</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for System Calls</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - System Calls Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__fxstat</primary></indexterm>__fxstat(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fchown</primary></indexterm>fchown(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ioctl</primary></indexterm>ioctl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>readdir</primary></indexterm>readdir(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setsid</primary></indexterm>setsid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__getpgid</primary></indexterm>__getpgid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fcntl</primary></indexterm>fcntl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>kill</primary></indexterm>kill(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>readdir_r</primary></indexterm>readdir_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setuid</primary></indexterm>setuid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__lxstat</primary></indexterm>__lxstat(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fdatasync</primary></indexterm>fdatasync(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>killpg</primary></indexterm>killpg(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>readlink</primary></indexterm>readlink(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sleep</primary></indexterm>sleep(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xmknod</primary></indexterm>__xmknod(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>flock</primary></indexterm>flock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>lchown</primary></indexterm>lchown(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>readv</primary></indexterm>readv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>statvfs</primary></indexterm>statvfs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xstat</primary></indexterm>__xstat(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fork</primary></indexterm>fork(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>link</primary></indexterm>link(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>rename</primary></indexterm>rename(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>stime</primary></indexterm>stime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>access</primary></indexterm>access(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>fstatvfs</primary></indexterm>fstatvfs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>lockf</primary></indexterm>lockf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>rmdir</primary></indexterm>rmdir(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>symlink</primary></indexterm>symlink(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acct</primary></indexterm>acct(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fsync</primary></indexterm>fsync(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>lseek</primary></indexterm>lseek(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sbrk</primary></indexterm>sbrk(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>sync</primary></indexterm>sync(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>alarm</primary></indexterm>alarm(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ftime</primary></indexterm>ftime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>mkdir</primary></indexterm>mkdir(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sched_get_priority_max</primary></indexterm>sched_get_priority_max(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sysconf</primary></indexterm>sysconf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>brk</primary></indexterm>brk(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>ftruncate</primary></indexterm>ftruncate(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>mkfifo</primary></indexterm>mkfifo(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sched_get_priority_min</primary></indexterm>sched_get_priority_min(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>time</primary></indexterm>time(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chdir</primary></indexterm>chdir(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getcontext</primary></indexterm>getcontext(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>mlock</primary></indexterm>mlock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sched_getparam</primary></indexterm>sched_getparam(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>times</primary></indexterm>times(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chmod</primary></indexterm>chmod(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getegid</primary></indexterm>getegid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>mlockall</primary></indexterm>mlockall(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sched_getscheduler</primary></indexterm>sched_getscheduler(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>truncate</primary></indexterm>truncate(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chown</primary></indexterm>chown(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>geteuid</primary></indexterm>geteuid(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>mmap</primary></indexterm>mmap(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sched_rr_get_interval</primary></indexterm>sched_rr_get_interval(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ulimit</primary></indexterm>ulimit(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chroot</primary></indexterm>chroot(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>getgid</primary></indexterm>getgid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>mprotect</primary></indexterm>mprotect(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sched_setparam</primary></indexterm>sched_setparam(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>umask</primary></indexterm>umask(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clock</primary></indexterm>clock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getgroups</primary></indexterm>getgroups(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>msync</primary></indexterm>msync(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sched_setscheduler</primary></indexterm>sched_setscheduler(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>uname</primary></indexterm>uname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>close</primary></indexterm>close(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getitimer</primary></indexterm>getitimer(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>munlock</primary></indexterm>munlock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sched_yield</primary></indexterm>sched_yield(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>unlink</primary></indexterm>unlink(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>closedir</primary></indexterm>closedir(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getloadavg</primary></indexterm>getloadavg(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>munlockall</primary></indexterm>munlockall(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>select</primary></indexterm>select(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>utime</primary></indexterm>utime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>creat</primary></indexterm>creat(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getpagesize</primary></indexterm>getpagesize(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>munmap</primary></indexterm>munmap(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setcontext</primary></indexterm>setcontext(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>utimes</primary></indexterm>utimes(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>dup</primary></indexterm>dup(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getpgid</primary></indexterm>getpgid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>nanosleep</primary></indexterm>nanosleep(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setegid</primary></indexterm>setegid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vfork</primary></indexterm>vfork(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>dup2</primary></indexterm>dup2(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getpgrp</primary></indexterm>getpgrp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>nice</primary></indexterm>nice(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>seteuid</primary></indexterm>seteuid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wait</primary></indexterm>wait(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execl</primary></indexterm>execl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getpid</primary></indexterm>getpid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>open</primary></indexterm>open(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setgid</primary></indexterm>setgid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wait3</primary></indexterm>wait3(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execle</primary></indexterm>execle(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getppid</primary></indexterm>getppid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>opendir</primary></indexterm>opendir(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setitimer</primary></indexterm>setitimer(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wait4</primary></indexterm>wait4(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execlp</primary></indexterm>execlp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getpriority</primary></indexterm>getpriority(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>pathconf</primary></indexterm>pathconf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setpgid</primary></indexterm>setpgid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>waitpid</primary></indexterm>waitpid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execv</primary></indexterm>execv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getrlimit</primary></indexterm>getrlimit(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>pause</primary></indexterm>pause(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setpgrp</primary></indexterm>setpgrp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>write</primary></indexterm>write(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execve</primary></indexterm>execve(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getrusage</primary></indexterm>getrusage(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>pipe</primary></indexterm>pipe(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setpriority</primary></indexterm>setpriority(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>writev</primary></indexterm>writev(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execvp</primary></indexterm>execvp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getsid</primary></indexterm>getsid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>poll</primary></indexterm>poll(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setregid</primary></indexterm>setregid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>exit</primary></indexterm>exit(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getuid</primary></indexterm>getuid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>pread</primary></indexterm>pread(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setreuid</primary></indexterm>setreuid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fchdir</primary></indexterm>fchdir(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getwd</primary></indexterm>getwd(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>pwrite</primary></indexterm>pwrite(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setrlimit</primary></indexterm>setrlimit(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fchmod</primary></indexterm>fchmod(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>initgroups</primary></indexterm>initgroups(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>read</primary></indexterm>read(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setrlimit64</primary></indexterm>setrlimit64(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Standard I/O</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Standard I/O</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Standard I/O Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_IO_feof</primary></indexterm>_IO_feof(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fgetpos</primary></indexterm>fgetpos(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>fsetpos</primary></indexterm>fsetpos(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>putchar</primary></indexterm>putchar(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sscanf</primary></indexterm>sscanf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_IO_getc</primary></indexterm>_IO_getc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fgets</primary></indexterm>fgets(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ftell</primary></indexterm>ftell(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>putchar_unlocked</primary></indexterm>putchar_unlocked(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>telldir</primary></indexterm>telldir(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_IO_putc</primary></indexterm>_IO_putc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fgetwc_unlocked</primary></indexterm>fgetwc_unlocked(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>ftello</primary></indexterm>ftello(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>puts</primary></indexterm>puts(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tempnam</primary></indexterm>tempnam(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_IO_puts</primary></indexterm>_IO_puts(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fileno</primary></indexterm>fileno(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>fwrite</primary></indexterm>fwrite(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>putw</primary></indexterm>putw(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>ungetc</primary></indexterm>ungetc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asprintf</primary></indexterm>asprintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>flockfile</primary></indexterm>flockfile(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getc</primary></indexterm>getc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>remove</primary></indexterm>remove(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vasprintf</primary></indexterm>vasprintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clearerr</primary></indexterm>clearerr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>fopen</primary></indexterm>fopen(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getc_unlocked</primary></indexterm>getc_unlocked(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>rewind</primary></indexterm>rewind(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vdprintf</primary></indexterm>vdprintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctermid</primary></indexterm>ctermid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>fprintf</primary></indexterm>fprintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getchar</primary></indexterm>getchar(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>rewinddir</primary></indexterm>rewinddir(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vfprintf</primary></indexterm>vfprintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fclose</primary></indexterm>fclose(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>fputc</primary></indexterm>fputc(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getchar_unlocked</primary></indexterm>getchar_unlocked(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>scanf</primary></indexterm>scanf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vprintf</primary></indexterm>vprintf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fdopen</primary></indexterm>fdopen(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>fputs</primary></indexterm>fputs(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getw</primary></indexterm>getw(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>seekdir</primary></indexterm>seekdir(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vsnprintf</primary></indexterm>vsnprintf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>feof</primary></indexterm>feof(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>fread</primary></indexterm>fread(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>pclose</primary></indexterm>pclose(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setbuf</primary></indexterm>setbuf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vsprintf</primary></indexterm>vsprintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ferror</primary></indexterm>ferror(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>freopen</primary></indexterm>freopen(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>popen</primary></indexterm>popen(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setbuffer</primary></indexterm>setbuffer(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fflush</primary></indexterm>fflush(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>fscanf</primary></indexterm>fscanf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>printf</primary></indexterm>printf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setvbuf</primary></indexterm>setvbuf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fflush_unlocked</primary></indexterm>fflush_unlocked(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fseek</primary></indexterm>fseek(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>putc</primary></indexterm>putc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>snprintf</primary></indexterm>snprintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetc</primary></indexterm>fgetc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>fseeko</primary></indexterm>fseeko(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>putc_unlocked</primary></indexterm>putc_unlocked(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sprintf</primary></indexterm>sprintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Standard I/O Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>stderr</primary></indexterm>stderr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>stdin</primary></indexterm>stdin(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>stdout</primary></indexterm>stdout(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Signal Handling</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Signal Handling</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Signal Handling Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__libc_current_sigrtmax</primary></indexterm>__libc_current_sigrtmax(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>sigaddset</primary></indexterm>sigaddset(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sighold</primary></indexterm>sighold(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigpause</primary></indexterm>sigpause(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigsuspend</primary></indexterm>sigsuspend(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__libc_current_sigrtmin</primary></indexterm>__libc_current_sigrtmin(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>sigaltstack</primary></indexterm>sigaltstack(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigignore</primary></indexterm>sigignore(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigpending</primary></indexterm>sigpending(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigtimedwait</primary></indexterm>sigtimedwait(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__sigsetjmp</primary></indexterm>__sigsetjmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>sigandset</primary></indexterm>sigandset(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>siginterrupt</primary></indexterm>siginterrupt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigprocmask</primary></indexterm>sigprocmask(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigwait</primary></indexterm>sigwait(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__sysv_signal</primary></indexterm>__sysv_signal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>sigblock</primary></indexterm>sigblock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>sigisemptyset</primary></indexterm>sigisemptyset(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>sigqueue</primary></indexterm>sigqueue(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigwaitinfo</primary></indexterm>sigwaitinfo(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bsd_signal</primary></indexterm>bsd_signal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigdelset</primary></indexterm>sigdelset(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigismember</primary></indexterm>sigismember(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigrelse</primary></indexterm>sigrelse(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>psignal</primary></indexterm>psignal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>sigemptyset</primary></indexterm>sigemptyset(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>siglongjmp</primary></indexterm>siglongjmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigreturn</primary></indexterm>sigreturn(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>raise</primary></indexterm>raise(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigfillset</primary></indexterm>sigfillset(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>signal</primary></indexterm>signal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sigset</primary></indexterm>sigset(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sigaction</primary></indexterm>sigaction(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>siggetmask</primary></indexterm>siggetmask(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>sigorset</primary></indexterm>sigorset(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>sigstack</primary></indexterm>sigstack(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Signal Handling Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_sys_siglist</primary></indexterm>_sys_siglist(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Localization Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Localization Functions</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Localization Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>bind_textdomain_codeset</primary></indexterm>bind_textdomain_codeset(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>catopen</primary></indexterm>catopen(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>dngettext</primary></indexterm>dngettext(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>iconv_open</primary></indexterm>iconv_open(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setlocale</primary></indexterm>setlocale(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bindtextdomain</primary></indexterm>bindtextdomain(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>dcgettext</primary></indexterm>dcgettext(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>gettext</primary></indexterm>gettext(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>localeconv</primary></indexterm>localeconv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>textdomain</primary></indexterm>textdomain(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catclose</primary></indexterm>catclose(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>dcngettext</primary></indexterm>dcngettext(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>iconv</primary></indexterm>iconv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ngettext</primary></indexterm>ngettext(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catgets</primary></indexterm>catgets(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>dgettext</primary></indexterm>dgettext(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>iconv_close</primary></indexterm>iconv_close(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>nl_langinfo</primary></indexterm>nl_langinfo(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Localization Functions Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_nl_msg_cat_cntr</primary></indexterm>_nl_msg_cat_cntr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Socket Interface</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Socket Interface</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Socket Interface Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__h_errno_location</primary></indexterm>__h_errno_location(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>gethostbyname_r</primary></indexterm>gethostbyname_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>getsockopt</primary></indexterm>getsockopt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>send</primary></indexterm>send(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>socket</primary></indexterm>socket(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>accept</primary></indexterm>accept(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>gethostid</primary></indexterm>gethostid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>listen</primary></indexterm>listen(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sendmsg</primary></indexterm>sendmsg(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>socketpair</primary></indexterm>socketpair(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bind</primary></indexterm>bind(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>gethostname</primary></indexterm>gethostname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>recv</primary></indexterm>recv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sendto</primary></indexterm>sendto(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bindresvport</primary></indexterm>bindresvport(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>getpeername</primary></indexterm>getpeername(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>recvfrom</primary></indexterm>recvfrom(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setsockopt</primary></indexterm>setsockopt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>connect</primary></indexterm>connect(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getsockname</primary></indexterm>getsockname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>recvmsg</primary></indexterm>recvmsg(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>shutdown</primary></indexterm>shutdown(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdepints-->
<TABLE>
<TITLE>libc - Socket Interface Deprecated Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gethostbyname_r</primary></indexterm>gethostbyname_r(GLIBC_2.1.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Wide Characters</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Wide Characters</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Wide Characters Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__wcstod_internal</primary></indexterm>__wcstod_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>mbsinit</primary></indexterm>mbsinit(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vwscanf</primary></indexterm>vwscanf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcsnlen</primary></indexterm>wcsnlen(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>wcstoumax</primary></indexterm>wcstoumax(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstof_internal</primary></indexterm>__wcstof_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>mbsnrtowcs</primary></indexterm>mbsnrtowcs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>wcpcpy</primary></indexterm>wcpcpy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>wcsnrtombs</primary></indexterm>wcsnrtombs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>wcstouq</primary></indexterm>wcstouq(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstol_internal</primary></indexterm>__wcstol_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>mbsrtowcs</primary></indexterm>mbsrtowcs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcpncpy</primary></indexterm>wcpncpy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>wcspbrk</primary></indexterm>wcspbrk(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcswcs</primary></indexterm>wcswcs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstold_internal</primary></indexterm>__wcstold_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>mbstowcs</primary></indexterm>mbstowcs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcrtomb</primary></indexterm>wcrtomb(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcsrchr</primary></indexterm>wcsrchr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcswidth</primary></indexterm>wcswidth(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstoul_internal</primary></indexterm>__wcstoul_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>mbtowc</primary></indexterm>mbtowc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcscasecmp</primary></indexterm>wcscasecmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>wcsrtombs</primary></indexterm>wcsrtombs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcsxfrm</primary></indexterm>wcsxfrm(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>btowc</primary></indexterm>btowc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>putwc</primary></indexterm>putwc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcscat</primary></indexterm>wcscat(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcsspn</primary></indexterm>wcsspn(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wctob</primary></indexterm>wctob(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetwc</primary></indexterm>fgetwc(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>putwchar</primary></indexterm>putwchar(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcschr</primary></indexterm>wcschr(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcsstr</primary></indexterm>wcsstr(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wctomb</primary></indexterm>wctomb(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetws</primary></indexterm>fgetws(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>swprintf</primary></indexterm>swprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcscmp</primary></indexterm>wcscmp(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcstod</primary></indexterm>wcstod(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wctrans</primary></indexterm>wctrans(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fputwc</primary></indexterm>fputwc(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>swscanf</primary></indexterm>swscanf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcscoll</primary></indexterm>wcscoll(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcstof</primary></indexterm>wcstof(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wctype</primary></indexterm>wctype(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fputws</primary></indexterm>fputws(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>towctrans</primary></indexterm>towctrans(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcscpy</primary></indexterm>wcscpy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcstoimax</primary></indexterm>wcstoimax(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcwidth</primary></indexterm>wcwidth(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fwide</primary></indexterm>fwide(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>towlower</primary></indexterm>towlower(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcscspn</primary></indexterm>wcscspn(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcstok</primary></indexterm>wcstok(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wmemchr</primary></indexterm>wmemchr(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fwprintf</primary></indexterm>fwprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>towupper</primary></indexterm>towupper(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcsdup</primary></indexterm>wcsdup(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>wcstol</primary></indexterm>wcstol(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wmemcmp</primary></indexterm>wmemcmp(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fwscanf</primary></indexterm>fwscanf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ungetwc</primary></indexterm>ungetwc(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcsftime</primary></indexterm>wcsftime(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcstold</primary></indexterm>wcstold(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wmemcpy</primary></indexterm>wmemcpy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getwc</primary></indexterm>getwc(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vfwprintf</primary></indexterm>vfwprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcslen</primary></indexterm>wcslen(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcstoll</primary></indexterm>wcstoll(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wmemmove</primary></indexterm>wmemmove(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getwchar</primary></indexterm>getwchar(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vfwscanf</primary></indexterm>vfwscanf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcsncasecmp</primary></indexterm>wcsncasecmp(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>wcstombs</primary></indexterm>wcstombs(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wmemset</primary></indexterm>wmemset(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mblen</primary></indexterm>mblen(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vswprintf</primary></indexterm>vswprintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcsncat</primary></indexterm>wcsncat(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcstoq</primary></indexterm>wcstoq(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>wprintf</primary></indexterm>wprintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mbrlen</primary></indexterm>mbrlen(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vswscanf</primary></indexterm>vswscanf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcsncmp</primary></indexterm>wcsncmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcstoul</primary></indexterm>wcstoul(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wscanf</primary></indexterm>wscanf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mbrtowc</primary></indexterm>mbrtowc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vwprintf</primary></indexterm>vwprintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcsncpy</primary></indexterm>wcsncpy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>wcstoull</primary></indexterm>wcstoull(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>String Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for String Functions</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - String Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__mempcpy</primary></indexterm>__mempcpy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>bzero</primary></indexterm>bzero(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strcasestr</primary></indexterm>strcasestr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strncasecmp</primary></indexterm>strncasecmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strtoimax</primary></indexterm>strtoimax(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__rawmemchr</primary></indexterm>__rawmemchr(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>ffs</primary></indexterm>ffs(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strcat</primary></indexterm>strcat(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strncat</primary></indexterm>strncat(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strtok</primary></indexterm>strtok(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__stpcpy</primary></indexterm>__stpcpy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>index</primary></indexterm>index(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strchr</primary></indexterm>strchr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strncmp</primary></indexterm>strncmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strtok_r</primary></indexterm>strtok_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strdup</primary></indexterm>__strdup(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>memccpy</primary></indexterm>memccpy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strcmp</primary></indexterm>strcmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strncpy</primary></indexterm>strncpy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strtold</primary></indexterm>strtold(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtod_internal</primary></indexterm>__strtod_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>memchr</primary></indexterm>memchr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strcoll</primary></indexterm>strcoll(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strndup</primary></indexterm>strndup(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strtoll</primary></indexterm>strtoll(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtof_internal</primary></indexterm>__strtof_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>memcmp</primary></indexterm>memcmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strcpy</primary></indexterm>strcpy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strnlen</primary></indexterm>strnlen(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strtoq</primary></indexterm>strtoq(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtok_r</primary></indexterm>__strtok_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>memcpy</primary></indexterm>memcpy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strcspn</primary></indexterm>strcspn(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strpbrk</primary></indexterm>strpbrk(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strtoull</primary></indexterm>strtoull(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtol_internal</primary></indexterm>__strtol_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>memmove</primary></indexterm>memmove(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strdup</primary></indexterm>strdup(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strptime</primary></indexterm>strptime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strtoumax</primary></indexterm>strtoumax(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtold_internal</primary></indexterm>__strtold_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>memrchr</primary></indexterm>memrchr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strerror</primary></indexterm>strerror(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strrchr</primary></indexterm>strrchr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strtouq</primary></indexterm>strtouq(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtoll_internal</primary></indexterm>__strtoll_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>memset</primary></indexterm>memset(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strerror_r</primary></indexterm>strerror_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strsep</primary></indexterm>strsep(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strverscmp</primary></indexterm>strverscmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtoul_internal</primary></indexterm>__strtoul_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>rindex</primary></indexterm>rindex(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strfmon</primary></indexterm>strfmon(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strsignal</primary></indexterm>strsignal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strxfrm</primary></indexterm>strxfrm(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtoull_internal</primary></indexterm>__strtoull_internal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>stpcpy</primary></indexterm>stpcpy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strfry</primary></indexterm>strfry(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strspn</primary></indexterm>strspn(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>swab</primary></indexterm>swab(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bcmp</primary></indexterm>bcmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>stpncpy</primary></indexterm>stpncpy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strftime</primary></indexterm>strftime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strstr</primary></indexterm>strstr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bcopy</primary></indexterm>bcopy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strcasecmp</primary></indexterm>strcasecmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strlen</primary></indexterm>strlen(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strtof</primary></indexterm>strtof(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>IPC Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for IPC Functions</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - IPC Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>ftok</primary></indexterm>ftok(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>msgrcv</primary></indexterm>msgrcv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>semget</primary></indexterm>semget(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>shmctl</primary></indexterm>shmctl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>msgctl</primary></indexterm>msgctl(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>msgsnd</primary></indexterm>msgsnd(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>semop</primary></indexterm>semop(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>shmdt</primary></indexterm>shmdt(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>msgget</primary></indexterm>msgget(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>semctl</primary></indexterm>semctl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>shmat</primary></indexterm>shmat(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>shmget</primary></indexterm>shmget(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Regular Expressions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Regular Expressions</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Regular Expressions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>advance</primary></indexterm>advance(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>re_exec</primary></indexterm>re_exec(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>regerror</primary></indexterm>regerror(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>regfree</primary></indexterm>regfree(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>re_comp</primary></indexterm>re_comp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>regcomp</primary></indexterm>regcomp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>regexec</primary></indexterm>regexec(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>step</primary></indexterm>step(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Regular Expressions Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>loc1</primary></indexterm>loc1(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>loc2</primary></indexterm>loc2(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>locs</primary></indexterm>locs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Character Type Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Character Type Functions</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Character Type Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__ctype_get_mb_cur_max</primary></indexterm>__ctype_get_mb_cur_max(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>isdigit</primary></indexterm>isdigit(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswalnum</primary></indexterm>iswalnum(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswlower</primary></indexterm>iswlower(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>toascii</primary></indexterm>toascii(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_tolower</primary></indexterm>_tolower(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isgraph</primary></indexterm>isgraph(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswalpha</primary></indexterm>iswalpha(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswprint</primary></indexterm>iswprint(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tolower</primary></indexterm>tolower(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_toupper</primary></indexterm>_toupper(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>islower</primary></indexterm>islower(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswblank</primary></indexterm>iswblank(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswpunct</primary></indexterm>iswpunct(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>toupper</primary></indexterm>toupper(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>isalnum</primary></indexterm>isalnum(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isprint</primary></indexterm>isprint(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswcntrl</primary></indexterm>iswcntrl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswspace</primary></indexterm>iswspace(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>isalpha</primary></indexterm>isalpha(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ispunct</primary></indexterm>ispunct(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswctype</primary></indexterm>iswctype(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>iswupper</primary></indexterm>iswupper(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>isascii</primary></indexterm>isascii(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isspace</primary></indexterm>isspace(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswdigit</primary></indexterm>iswdigit(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswxdigit</primary></indexterm>iswxdigit(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>iscntrl</primary></indexterm>iscntrl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isupper</primary></indexterm>isupper(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>iswgraph</primary></indexterm>iswgraph(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isxdigit</primary></indexterm>isxdigit(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Time Manipulation</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Time Manipulation</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Time Manipulation Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>adjtime</primary></indexterm>adjtime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>asctime_r</primary></indexterm>asctime_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>difftime</primary></indexterm>difftime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>localtime</primary></indexterm>localtime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tzset</primary></indexterm>tzset(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>adjtimex</primary></indexterm>adjtimex(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>ctime</primary></indexterm>ctime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>gmtime</primary></indexterm>gmtime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>localtime_r</primary></indexterm>localtime_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ualarm</primary></indexterm>ualarm(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asctime</primary></indexterm>asctime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ctime_r</primary></indexterm>ctime_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>gmtime_r</primary></indexterm>gmtime_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>mktime</primary></indexterm>mktime(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Time Manipulation Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__daylight</primary></indexterm>__daylight(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>__tzname</primary></indexterm>__tzname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>timezone</primary></indexterm>timezone(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__timezone</primary></indexterm>__timezone(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>daylight</primary></indexterm>daylight(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tzname</primary></indexterm>tzname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Terminal Interface Functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Terminal Interface Functions</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Terminal Interface Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>cfgetispeed</primary></indexterm>cfgetispeed(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>cfsetispeed</primary></indexterm>cfsetispeed(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tcdrain</primary></indexterm>tcdrain(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tcgetattr</primary></indexterm>tcgetattr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tcsendbreak</primary></indexterm>tcsendbreak(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cfgetospeed</primary></indexterm>cfgetospeed(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>cfsetospeed</primary></indexterm>cfsetospeed(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tcflow</primary></indexterm>tcflow(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tcgetpgrp</primary></indexterm>tcgetpgrp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tcsetattr</primary></indexterm>tcsetattr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cfmakeraw</primary></indexterm>cfmakeraw(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>cfsetspeed</primary></indexterm>cfsetspeed(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>tcflush</primary></indexterm>tcflush(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tcgetsid</primary></indexterm>tcgetsid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tcsetpgrp</primary></indexterm>tcsetpgrp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>System Database Interface</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for System Database Interface</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - System Database Interface Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>endgrent</primary></indexterm>endgrent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getgrgid</primary></indexterm>getgrgid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getprotoent</primary></indexterm>getprotoent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getutent</primary></indexterm>getutent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>setnetent</primary></indexterm>setnetent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endnetent</primary></indexterm>endnetent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getgrgid_r</primary></indexterm>getgrgid_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getpwent</primary></indexterm>getpwent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getutent_r</primary></indexterm>getutent_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>setprotoent</primary></indexterm>setprotoent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endprotoent</primary></indexterm>endprotoent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getgrnam</primary></indexterm>getgrnam(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getpwnam</primary></indexterm>getpwnam(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getutxent</primary></indexterm>getutxent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setpwent</primary></indexterm>setpwent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endpwent</primary></indexterm>endpwent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>gethostbyaddr</primary></indexterm>gethostbyaddr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getpwuid</primary></indexterm>getpwuid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getutxid</primary></indexterm>getutxid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setservent</primary></indexterm>setservent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endservent</primary></indexterm>endservent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>gethostbyname</primary></indexterm>gethostbyname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getpwuid_r</primary></indexterm>getpwuid_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getutxline</primary></indexterm>getutxline(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setutent</primary></indexterm>setutent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endutent</primary></indexterm>endutent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>getnetbyaddr</primary></indexterm>getnetbyaddr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getservbyname</primary></indexterm>getservbyname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>pututxline</primary></indexterm>pututxline(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setutxent</primary></indexterm>setutxent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endutxent</primary></indexterm>endutxent(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getprotobyname</primary></indexterm>getprotobyname(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getservbyport</primary></indexterm>getservbyport(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setgrent</primary></indexterm>setgrent(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getgrent</primary></indexterm>getgrent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getprotobynumber</primary></indexterm>getprotobynumber(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getservent</primary></indexterm>getservent(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setgroups</primary></indexterm>setgroups(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Language Support</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Language Support</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Language Support Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__libc_start_main</primary></indexterm>__libc_start_main(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>_obstack_begin</primary></indexterm>_obstack_begin(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>_obstack_newchunk</primary></indexterm>_obstack_newchunk(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>obstack_free</primary></indexterm>obstack_free(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Large File Support</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Large File Support</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Large File Support Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__fxstat64</primary></indexterm>__fxstat64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>freopen64</primary></indexterm>freopen64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>ftw64</primary></indexterm>ftw64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>nftw64</primary></indexterm>nftw64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>tmpfile64</primary></indexterm>tmpfile64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__lxstat64</primary></indexterm>__lxstat64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fseeko64</primary></indexterm>fseeko64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>getrlimit64</primary></indexterm>getrlimit64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>open64</primary></indexterm>open64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>truncate64</primary></indexterm>truncate64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xstat64</primary></indexterm>__xstat64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fsetpos64</primary></indexterm>fsetpos64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>lockf64</primary></indexterm>lockf64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>pread64</primary></indexterm>pread64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>creat64</primary></indexterm>creat64(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>fstatvfs64</primary></indexterm>fstatvfs64(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>lseek64</primary></indexterm>lseek64(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>pwrite64</primary></indexterm>pwrite64(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetpos64</primary></indexterm>fgetpos64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>ftello64</primary></indexterm>ftello64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>mkstemp64</primary></indexterm>mkstemp64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>readdir64</primary></indexterm>readdir64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fopen64</primary></indexterm>fopen64(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>ftruncate64</primary></indexterm>ftruncate64(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>mmap64</primary></indexterm>mmap64(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY><indexterm><primary>statvfs64</primary></indexterm>statvfs64(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Standard Library</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Standard Library</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libc - Standard Library Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_Exit</primary></indexterm>_Exit(GLIBC_2.1.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>div</primary></indexterm>div(GLIBC_2.1.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>globfree</primary></indexterm>globfree(GLIBC_2.1.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>lldiv</primary></indexterm>lldiv(GLIBC_2.1.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setlogmask</primary></indexterm>setlogmask(GLIBC_2.1.1)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__assert_fail</primary></indexterm>__assert_fail(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>drand48</primary></indexterm>drand48(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>globfree64</primary></indexterm>globfree64(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>longjmp</primary></indexterm>longjmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setstate</primary></indexterm>setstate(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__cxa_atexit</primary></indexterm>__cxa_atexit(GLIBC_2.1.3)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>ecvt</primary></indexterm>ecvt(GLIBC_2.1.3)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>grantpt</primary></indexterm>grantpt(GLIBC_2.1.3)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>lrand48</primary></indexterm>lrand48(GLIBC_2.1.3)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>srand</primary></indexterm>srand(GLIBC_2.1.3)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__errno_location</primary></indexterm>__errno_location(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>erand48</primary></indexterm>erand48(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>hcreate</primary></indexterm>hcreate(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>lsearch</primary></indexterm>lsearch(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>srand48</primary></indexterm>srand48(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__fpending</primary></indexterm>__fpending(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>err</primary></indexterm>err(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>hdestroy</primary></indexterm>hdestroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>makecontext</primary></indexterm>makecontext(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>srandom</primary></indexterm>srandom(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__getpagesize</primary></indexterm>__getpagesize(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>error</primary></indexterm>error(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>hsearch</primary></indexterm>hsearch(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>malloc</primary></indexterm>malloc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strtod</primary></indexterm>strtod(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isinf</primary></indexterm>__isinf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>errx</primary></indexterm>errx(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>htonl</primary></indexterm>htonl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>memmem</primary></indexterm>memmem(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>strtol</primary></indexterm>strtol(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isinff</primary></indexterm>__isinff(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fcvt</primary></indexterm>fcvt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>htons</primary></indexterm>htons(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>mkstemp</primary></indexterm>mkstemp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>strtoul</primary></indexterm>strtoul(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isinfl</primary></indexterm>__isinfl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fmtmsg</primary></indexterm>fmtmsg(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>imaxabs</primary></indexterm>imaxabs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>mktemp</primary></indexterm>mktemp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>swapcontext</primary></indexterm>swapcontext(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isnan</primary></indexterm>__isnan(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fnmatch</primary></indexterm>fnmatch(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>imaxdiv</primary></indexterm>imaxdiv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>mrand48</primary></indexterm>mrand48(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>syslog</primary></indexterm>syslog(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isnanf</primary></indexterm>__isnanf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>fpathconf</primary></indexterm>fpathconf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>inet_addr</primary></indexterm>inet_addr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>nftw</primary></indexterm>nftw(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>system</primary></indexterm>system(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isnanl</primary></indexterm>__isnanl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>free</primary></indexterm>free(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>inet_ntoa</primary></indexterm>inet_ntoa(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>nrand48</primary></indexterm>nrand48(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tdelete</primary></indexterm>tdelete(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__sysconf</primary></indexterm>__sysconf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>freeaddrinfo</primary></indexterm>freeaddrinfo(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>inet_ntop</primary></indexterm>inet_ntop(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ntohl</primary></indexterm>ntohl(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tfind</primary></indexterm>tfind(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_exit</primary></indexterm>_exit(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ftrylockfile</primary></indexterm>ftrylockfile(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>inet_pton</primary></indexterm>inet_pton(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ntohs</primary></indexterm>ntohs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tmpfile</primary></indexterm>tmpfile(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_longjmp</primary></indexterm>_longjmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ftw</primary></indexterm>ftw(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>initstate</primary></indexterm>initstate(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>openlog</primary></indexterm>openlog(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tmpnam</primary></indexterm>tmpnam(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_setjmp</primary></indexterm>_setjmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>funlockfile</primary></indexterm>funlockfile(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>insque</primary></indexterm>insque(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>perror</primary></indexterm>perror(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>tsearch</primary></indexterm>tsearch(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>a64l</primary></indexterm>a64l(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>gai_strerror</primary></indexterm>gai_strerror(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isatty</primary></indexterm>isatty(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>posix_memalign</primary></indexterm>posix_memalign(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ttyname</primary></indexterm>ttyname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>abort</primary></indexterm>abort(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>gcvt</primary></indexterm>gcvt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isblank</primary></indexterm>isblank(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ptsname</primary></indexterm>ptsname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ttyname_r</primary></indexterm>ttyname_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>abs</primary></indexterm>abs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getaddrinfo</primary></indexterm>getaddrinfo(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isinf</primary></indexterm>isinf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>putenv</primary></indexterm>putenv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>twalk</primary></indexterm>twalk(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atof</primary></indexterm>atof(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getcwd</primary></indexterm>getcwd(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isinff</primary></indexterm>isinff(GLIBC_2.0)</ENTRY>
<ENTRY><indexterm><primary>qsort</primary></indexterm>qsort(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>unlockpt</primary></indexterm>unlockpt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atoi</primary></indexterm>atoi(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getdate</primary></indexterm>getdate(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isinfl</primary></indexterm>isinfl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY><indexterm><primary>rand</primary></indexterm>rand(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>unsetenv</primary></indexterm>unsetenv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atol</primary></indexterm>atol(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getenv</primary></indexterm>getenv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isnan</primary></indexterm>isnan(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>rand_r</primary></indexterm>rand_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>usleep</primary></indexterm>usleep(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atoll</primary></indexterm>atoll(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getlogin</primary></indexterm>getlogin(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isnanf</primary></indexterm>isnanf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY><indexterm><primary>random</primary></indexterm>random(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>verrx</primary></indexterm>verrx(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basename</primary></indexterm>basename(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getnameinfo</primary></indexterm>getnameinfo(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>isnanl</primary></indexterm>isnanl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY><indexterm><primary>random_r</primary></indexterm>random_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>vfscanf</primary></indexterm>vfscanf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bsearch</primary></indexterm>bsearch(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getopt</primary></indexterm>getopt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>jrand48</primary></indexterm>jrand48(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>realloc</primary></indexterm>realloc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vscanf</primary></indexterm>vscanf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>calloc</primary></indexterm>calloc(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getopt_long</primary></indexterm>getopt_long(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>l64a</primary></indexterm>l64a(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>realpath</primary></indexterm>realpath(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vsscanf</primary></indexterm>vsscanf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>closelog</primary></indexterm>closelog(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getopt_long_only</primary></indexterm>getopt_long_only(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>labs</primary></indexterm>labs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>remque</primary></indexterm>remque(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>vsyslog</primary></indexterm>vsyslog(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>confstr</primary></indexterm>confstr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>getsubopt</primary></indexterm>getsubopt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>lcong48</primary></indexterm>lcong48(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>seed48</primary></indexterm>seed48(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>warn</primary></indexterm>warn(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cuserid</primary></indexterm>cuserid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY><indexterm><primary>gettimeofday</primary></indexterm>gettimeofday(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>ldiv</primary></indexterm>ldiv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>setenv</primary></indexterm>setenv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>warnx</primary></indexterm>warnx(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>daemon</primary></indexterm>daemon(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>glob</primary></indexterm>glob(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>lfind</primary></indexterm>lfind(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sethostid</primary></indexterm>sethostid(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>wordexp</primary></indexterm>wordexp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>dirname</primary></indexterm>dirname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>glob64</primary></indexterm>glob64(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>llabs</primary></indexterm>llabs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>sethostname</primary></indexterm>sethostname(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>wordfree</primary></indexterm>wordfree(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Standard Library Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__environ</primary></indexterm>__environ(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>_sys_errlist</primary></indexterm>_sys_errlist(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>getdate_err</primary></indexterm>getdate_err(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>opterr</primary></indexterm>opterr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>optopt</primary></indexterm>optopt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_environ</primary></indexterm>_environ(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY><indexterm><primary>environ</primary></indexterm>environ(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>optarg</primary></indexterm>optarg(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY><indexterm><primary>optind</primary></indexterm>optind(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libc-ddefs>
<TITLE>Data Definitions for libc</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO C serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>errno.h</TITLE>
<PARA>
</PARA>
<SCREEN>




#define EDEADLOCK	EDEADLK
</SCREEN>
</SECT2>
<SECT2>
<TITLE>inttypes.h</TITLE>
<PARA>
</PARA>
<SCREEN>






typedef long long intmax_t;
typedef unsigned long long uintmax_t;
typedef unsigned int uintptr_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>limits.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ULONG_MAX	0xFFFFFFFFUL
#define LONG_MAX	2147483647






#define CHAR_MIN	0
#define CHAR_MAX	255
</SCREEN>
</SECT2>
<SECT2>
<TITLE>setjmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>






typedef int __jmp_buf[14];
</SCREEN>
</SECT2>
<SECT2>
<TITLE>signal.h</TITLE>
<PARA>
</PARA>
<SCREEN>



typedef struct
{
  unsigned long mask;
  unsigned long addr;
}
__attribute__ ((aligned (8))) _psw_t;
typedef struct
{
  _psw_t psw;
  unsigned long gprs;
  unsigned int acrs;
}
_s390_regs_common;


























struct sigaction
{
  union
  {
    sighandler_t _sa_handler;
    void (*_sa_sigaction) (int, siginfo_t *, void *);
  }
  __sigaction_handler;
  unsigned long sa_flags;
  void (*sa_restorer) (void);
  sigset_t sa_mask;
}
 ;





typedef struct
{
  unsigned int fpc;
  double fprs;
}
_s390_fp_regs;
typedef struct
{
  _s390_regs_common regs;
  _s390_fp_regs fpregs;
}
_sigregs;





struct sigcontext
{
  unsigned long oldmask;
  _sigregs *sregs;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stddef.h</TITLE>
<PARA>
</PARA>
<SCREEN>



typedef unsigned long size_t;
typedef int ptrdiff_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/ioctl.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FIONREAD	0x541B
#define TIOCNOTTY	21538
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/ipc.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct ipc_perm
{
  key_t __key;
  uid_t uid;
  gid_t gid;
  uid_t cuid;
  uid_t cgid;
  unsigned short mode;
  unsigned short __pad1;
  unsigned short __seq;
  unsigned short __pad2;
  unsigned long __unused1;
  unsigned long __unused2;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/mman.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define MCL_CURRENT	1
#define MCL_FUTURE	2
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/msg.h</TITLE>
<PARA>
</PARA>
<SCREEN>






typedef unsigned long msglen_t;
typedef unsigned long msgqnum_t;


struct msqid_ds
{
  struct ipc_perm msg_perm;
  time_t msg_stime;
  time_t msg_rtime;
  unsigned long __unused1;
  time_t msg_ctime;
  unsigned long __unused2;
  unsigned long __unused3;
  unsigned long __msg_cbytes;
  msgqnum_t msg_qnum;
  msglen_t msg_qbytes;
  pid_t msg_lspid;
  pid_t msg_lrpid;
  unsigned long __unused4;
  unsigned long __unused5;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/sem.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct semid_ds
{
  struct ipc_perm sem_perm;
  time_t sem_otime;
  unsigned long __unused1;
  time_t sem_ctime;
  unsigned long __unused2;
  unsigned long sem_nsems;
  unsigned long __unused3;
  unsigned long __unused4;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/shm.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SHMLBA	(__getpagesize())





typedef unsigned long shmatt_t;


struct shmid_ds
{
  struct ipc_perm shm_perm;
  size_t shm_segsz;
  time_t shm_atime;
  unsigned long __unused1;
  time_t shm_dtime;
  unsigned long __unused2;
  time_t shm_ctime;
  unsigned long __unused3;
  pid_t shm_cpid;
  pid_t shm_lpid;
  shmatt_t shm_nattch;
  unsigned long __unused4;
  unsigned long __unused5;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/stat.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define _STAT_VER	3


struct stat
{
  dev_t st_dev;
  unsigned int __pad1;
  ino_t st_ino;
  mode_t st_mode;
  nlink_t st_nlink;
  uid_t st_uid;
  gid_t st_gid;
  dev_t st_rdev;
  unsigned int __pad2;
  off_t st_size;
  blksize_t st_blksize;
  blkcnt_t st_blocks;
  time_t st_atime;
  unsigned long __unused1;
  time_t st_mtime;
  unsigned long __unused2;
  time_t st_ctime;
  unsigned long __unused3;
  unsigned long __unused4;
  unsigned long __unused5;
}
 ;
struct stat64
{
  dev_t st_dev;
  int __pad1;
  ino_t __st_ino;
  mode_t st_mode;
  nlink_t st_nlink;
  uid_t st_uid;
  gid_t st_gid;
  dev_t st_rdev;
  int __pad2;
  off64_t st_size;
  blksize_t st_blksize;
  blkcnt64_t st_blocks;
  time_t st_atime;
  int __unused1;
  time_t st_mtime;
  int __unused2;
  time_t st_ctime;
  int __unused3;
  ino64_t st_ino;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/statvfs.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct statvfs
{
  unsigned long f_bsize;
  unsigned long f_frsize;
  fsblkcnt_t f_blocks;
  fsblkcnt_t f_bfree;
  fsblkcnt_t f_bavail;
  fsfilcnt_t f_files;
  fsfilcnt_t f_ffree;
  fsfilcnt_t f_favail;
  unsigned long f_fsid;
  int __f_unused;
  unsigned long f_flag;
  unsigned long f_namemax;
  int __f_spare[6];
}
 ;
struct statvfs64
{
  unsigned long f_bsize;
  unsigned long f_frsize;
  fsblkcnt64_t f_blocks;
  fsblkcnt64_t f_bfree;
  fsblkcnt64_t f_bavail;
  fsfilcnt64_t f_files;
  fsfilcnt64_t f_ffree;
  fsfilcnt64_t f_favail;
  unsigned long f_fsid;
  int __f_unused;
  unsigned long f_flag;
  unsigned long f_namemax;
  int __f_spare[6];
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/types.h</TITLE>
<PARA>
</PARA>
<SCREEN>



typedef int ssize_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>termios.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define OLCUC	0000002
#define ONLCR	0000004
#define XCASE	0000004
#define NLDLY	0000400
#define CR1	0001000
#define IUCLC	0001000
#define CR2	0002000
#define CR3	0003000
#define CRDLY	0003000
#define TAB1	0004000
#define TAB2	0010000
#define TAB3	0014000
#define TABDLY	0014000
#define BS1	0020000
#define BSDLY	0020000
#define VT1	0040000
#define VTDLY	0040000
#define FF1	0100000
#define FFDLY	0100000









#define VSUSP	10
#define VEOL	11
#define VREPRINT	12
#define VDISCARD	13
#define VWERASE	14
#define VEOL2	16
#define VMIN	6
#define VSWTC	7
#define VSTART	8
#define VSTOP	9



#define IXON	0002000
#define IXOFF	0010000






#define CS6	0000020
#define CS7	0000040
#define CS8	0000060
#define CSIZE	0000060
#define CSTOPB	0000100
#define CREAD	0000200
#define PARENB	0000400
#define PARODD	0001000
#define HUPCL	0002000
#define CLOCAL	0004000
#define VTIME	5



#define ISIG	0000001
#define ICANON	0000002
#define ECHOE	0000020
#define ECHOK	0000040
#define ECHONL	0000100
#define NOFLSH	0000200
#define TOSTOP	0000400
#define ECHOCTL	0001000
#define ECHOPRT	0002000
#define ECHOKE	0004000
#define FLUSHO	0010000
#define PENDIN	0040000
#define IEXTEN	0100000
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ucontext.h</TITLE>
<PARA>
</PARA>
<SCREEN>







#define NGREG	36











typedef union
{
  double d;
  float f;
}
fpreg_t;





typedef struct
{
  unsigned int fpc;
  fpreg_t fprs[16];
}
fpregset_t;





typedef struct
{
  _psw_t psw;
  unsigned long gregs[16];
  unsigned int aregs[16];
  fpregset_t fpregs;
}
mcontext_t;


typedef struct ucontext
{
  unsigned long uc_flags;
  struct ucontext *uc_link;
  stack_t uc_stack;
  mcontext_t uc_mcontext;
  sigset_t uc_sigmask;
}
ucontext_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>unistd.h</TITLE>
<PARA>
</PARA>
<SCREEN>



typedef int intptr_t;
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->
<!--    at Tue Jan 27 17:42:23 2004 -->
<SECT1 ID=libm>
<TITLE>Interfaces for libm</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libm Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libm</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libm.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
ISO/IEC 9899: 1999, Programming Languages --C<FOOTNOTE ID="std-13-25">
<PARA>
ISO/IEC 9899: 1999, Programming Languages --C</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-13-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
The Single UNIX® Specification(SUS) Version 3<FOOTNOTE ID="std-13-67">
<PARA>
The Single UNIX® Specification(SUS) Version 3</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<!--libgroup-->
<TITLE>Math</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Math</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libm - Math Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>acos</primary></indexterm>acos(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cexp</primary></indexterm>cexp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>expf</primary></indexterm>expf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>jnf</primary></indexterm>jnf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>remquof</primary></indexterm>remquof(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acosf</primary></indexterm>acosf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cexpf</primary></indexterm>cexpf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>expl</primary></indexterm>expl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>jnl</primary></indexterm>jnl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>remquol</primary></indexterm>remquol(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acosh</primary></indexterm>acosh(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cexpl</primary></indexterm>cexpl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>expm1</primary></indexterm>expm1(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ldexp</primary></indexterm>ldexp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>rint</primary></indexterm>rint(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acoshf</primary></indexterm>acoshf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cimag</primary></indexterm>cimag(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fabs</primary></indexterm>fabs(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ldexpf</primary></indexterm>ldexpf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>rintf</primary></indexterm>rintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acoshl</primary></indexterm>acoshl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cimagf</primary></indexterm>cimagf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fabsf</primary></indexterm>fabsf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ldexpl</primary></indexterm>ldexpl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>rintl</primary></indexterm>rintl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>acosl</primary></indexterm>acosl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cimagl</primary></indexterm>cimagl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fabsl</primary></indexterm>fabsl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lgamma</primary></indexterm>lgamma(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>round</primary></indexterm>round(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asin</primary></indexterm>asin(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>clog</primary></indexterm>clog(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fdim</primary></indexterm>fdim(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lgamma_r</primary></indexterm>lgamma_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>roundf</primary></indexterm>roundf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinf</primary></indexterm>asinf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>clog10</primary></indexterm>clog10(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>fdimf</primary></indexterm>fdimf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lgammaf</primary></indexterm>lgammaf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>roundl</primary></indexterm>roundl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinh</primary></indexterm>asinh(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>clog10f</primary></indexterm>clog10f(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>fdiml</primary></indexterm>fdiml(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lgammaf_r</primary></indexterm>lgammaf_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>scalb</primary></indexterm>scalb(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinhf</primary></indexterm>asinhf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>clog10l</primary></indexterm>clog10l(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>feclearexcept</primary></indexterm>feclearexcept(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lgammal</primary></indexterm>lgammal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>scalbf</primary></indexterm>scalbf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinhl</primary></indexterm>asinhl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>clogf</primary></indexterm>clogf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fegetenv</primary></indexterm>fegetenv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lgammal_r</primary></indexterm>lgammal_r(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>scalbl</primary></indexterm>scalbl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asinl</primary></indexterm>asinl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>clogl</primary></indexterm>clogl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fegetexceptflag</primary></indexterm>fegetexceptflag(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>llrint</primary></indexterm>llrint(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>scalbln</primary></indexterm>scalbln(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan</primary></indexterm>atan(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>conj</primary></indexterm>conj(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fegetround</primary></indexterm>fegetround(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>llrintf</primary></indexterm>llrintf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>scalblnf</primary></indexterm>scalblnf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan2</primary></indexterm>atan2(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>conjf</primary></indexterm>conjf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>feholdexcept</primary></indexterm>feholdexcept(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>llrintl</primary></indexterm>llrintl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>scalblnl</primary></indexterm>scalblnl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan2f</primary></indexterm>atan2f(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>conjl</primary></indexterm>conjl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>feraiseexcept</primary></indexterm>feraiseexcept(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>llround</primary></indexterm>llround(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>scalbn</primary></indexterm>scalbn(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atan2l</primary></indexterm>atan2l(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>copysign</primary></indexterm>copysign(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fesetenv</primary></indexterm>fesetenv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>llroundf</primary></indexterm>llroundf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>scalbnf</primary></indexterm>scalbnf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanf</primary></indexterm>atanf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>copysignf</primary></indexterm>copysignf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fesetexceptflag</primary></indexterm>fesetexceptflag(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>llroundl</primary></indexterm>llroundl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>scalbnl</primary></indexterm>scalbnl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanh</primary></indexterm>atanh(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>copysignl</primary></indexterm>copysignl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fesetround</primary></indexterm>fesetround(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>log</primary></indexterm>log(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>significand</primary></indexterm>significand(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanhf</primary></indexterm>atanhf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cos</primary></indexterm>cos(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fetestexcept</primary></indexterm>fetestexcept(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>log10</primary></indexterm>log10(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>significandf</primary></indexterm>significandf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanhl</primary></indexterm>atanhl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cosf</primary></indexterm>cosf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>feupdateenv</primary></indexterm>feupdateenv(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>log10f</primary></indexterm>log10f(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>significandl</primary></indexterm>significandl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atanl</primary></indexterm>atanl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cosh</primary></indexterm>cosh(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>finite</primary></indexterm>finite(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-5"></ENTRY>
<ENTRY><indexterm><primary>log10l</primary></indexterm>log10l(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>sin</primary></indexterm>sin(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cabs</primary></indexterm>cabs(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>coshf</primary></indexterm>coshf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>finitef</primary></indexterm>finitef(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>log1p</primary></indexterm>log1p(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>sincos</primary></indexterm>sincos(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cabsf</primary></indexterm>cabsf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>coshl</primary></indexterm>coshl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>finitel</primary></indexterm>finitel(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>logb</primary></indexterm>logb(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>sincosf</primary></indexterm>sincosf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cabsl</primary></indexterm>cabsl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cosl</primary></indexterm>cosl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>floor</primary></indexterm>floor(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>logf</primary></indexterm>logf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>sincosl</primary></indexterm>sincosl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacos</primary></indexterm>cacos(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cpow</primary></indexterm>cpow(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>floorf</primary></indexterm>floorf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>logl</primary></indexterm>logl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>sinf</primary></indexterm>sinf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacosf</primary></indexterm>cacosf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cpowf</primary></indexterm>cpowf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>floorl</primary></indexterm>floorl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lrint</primary></indexterm>lrint(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>sinh</primary></indexterm>sinh(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacosh</primary></indexterm>cacosh(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cpowl</primary></indexterm>cpowl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fma</primary></indexterm>fma(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lrintf</primary></indexterm>lrintf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>sinhf</primary></indexterm>sinhf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacoshf</primary></indexterm>cacoshf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cproj</primary></indexterm>cproj(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fmaf</primary></indexterm>fmaf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lrintl</primary></indexterm>lrintl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>sinhl</primary></indexterm>sinhl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacoshl</primary></indexterm>cacoshl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cprojf</primary></indexterm>cprojf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fmal</primary></indexterm>fmal(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lround</primary></indexterm>lround(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>sinl</primary></indexterm>sinl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cacosl</primary></indexterm>cacosl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>cprojl</primary></indexterm>cprojl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fmax</primary></indexterm>fmax(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lroundf</primary></indexterm>lroundf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>sqrt</primary></indexterm>sqrt(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>carg</primary></indexterm>carg(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>creal</primary></indexterm>creal(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fmaxf</primary></indexterm>fmaxf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>lroundl</primary></indexterm>lroundl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>sqrtf</primary></indexterm>sqrtf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cargf</primary></indexterm>cargf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>crealf</primary></indexterm>crealf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fmaxl</primary></indexterm>fmaxl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>matherr</primary></indexterm>matherr(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>sqrtl</primary></indexterm>sqrtl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cargl</primary></indexterm>cargl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>creall</primary></indexterm>creall(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fmin</primary></indexterm>fmin(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>modf</primary></indexterm>modf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>tan</primary></indexterm>tan(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casin</primary></indexterm>casin(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>csin</primary></indexterm>csin(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fminf</primary></indexterm>fminf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>modff</primary></indexterm>modff(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>tanf</primary></indexterm>tanf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinf</primary></indexterm>casinf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>csinf</primary></indexterm>csinf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fminl</primary></indexterm>fminl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>modfl</primary></indexterm>modfl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>tanh</primary></indexterm>tanh(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinh</primary></indexterm>casinh(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>csinh</primary></indexterm>csinh(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fmod</primary></indexterm>fmod(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>nan</primary></indexterm>nan(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>tanhf</primary></indexterm>tanhf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinhf</primary></indexterm>casinhf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>csinhf</primary></indexterm>csinhf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fmodf</primary></indexterm>fmodf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>nanf</primary></indexterm>nanf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>tanhl</primary></indexterm>tanhl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinhl</primary></indexterm>casinhl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>csinhl</primary></indexterm>csinhl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>fmodl</primary></indexterm>fmodl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>nanl</primary></indexterm>nanl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>tanl</primary></indexterm>tanl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>casinl</primary></indexterm>casinl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>csinl</primary></indexterm>csinl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>frexp</primary></indexterm>frexp(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>nearbyint</primary></indexterm>nearbyint(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>tgamma</primary></indexterm>tgamma(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catan</primary></indexterm>catan(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>csqrt</primary></indexterm>csqrt(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>frexpf</primary></indexterm>frexpf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>nearbyintf</primary></indexterm>nearbyintf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>tgammaf</primary></indexterm>tgammaf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanf</primary></indexterm>catanf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>csqrtf</primary></indexterm>csqrtf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>frexpl</primary></indexterm>frexpl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>nearbyintl</primary></indexterm>nearbyintl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>tgammal</primary></indexterm>tgammal(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanh</primary></indexterm>catanh(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>csqrtl</primary></indexterm>csqrtl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>gamma</primary></indexterm>gamma(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-5"></ENTRY>
<ENTRY><indexterm><primary>nextafter</primary></indexterm>nextafter(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>trunc</primary></indexterm>trunc(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanhf</primary></indexterm>catanhf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ctan</primary></indexterm>ctan(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>gammaf</primary></indexterm>gammaf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>nextafterf</primary></indexterm>nextafterf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>truncf</primary></indexterm>truncf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanhl</primary></indexterm>catanhl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ctanf</primary></indexterm>ctanf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>gammal</primary></indexterm>gammal(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>nextafterl</primary></indexterm>nextafterl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>truncl</primary></indexterm>truncl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catanl</primary></indexterm>catanl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ctanh</primary></indexterm>ctanh(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>hypot</primary></indexterm>hypot(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>nexttoward</primary></indexterm>nexttoward(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>y0</primary></indexterm>y0(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cbrt</primary></indexterm>cbrt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ctanhf</primary></indexterm>ctanhf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>hypotf</primary></indexterm>hypotf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>nexttowardf</primary></indexterm>nexttowardf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>y0f</primary></indexterm>y0f(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cbrtf</primary></indexterm>cbrtf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ctanhl</primary></indexterm>ctanhl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>hypotl</primary></indexterm>hypotl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>nexttowardl</primary></indexterm>nexttowardl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>y0l</primary></indexterm>y0l(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cbrtl</primary></indexterm>cbrtl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ctanl</primary></indexterm>ctanl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ilogb</primary></indexterm>ilogb(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>pow</primary></indexterm>pow(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>y1</primary></indexterm>y1(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccos</primary></indexterm>ccos(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>dremf</primary></indexterm>dremf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>ilogbf</primary></indexterm>ilogbf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>pow10</primary></indexterm>pow10(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>y1f</primary></indexterm>y1f(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccosf</primary></indexterm>ccosf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>dreml</primary></indexterm>dreml(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>ilogbl</primary></indexterm>ilogbl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>pow10f</primary></indexterm>pow10f(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>y1l</primary></indexterm>y1l(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccosh</primary></indexterm>ccosh(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>erf</primary></indexterm>erf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>j0</primary></indexterm>j0(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>pow10l</primary></indexterm>pow10l(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>yn</primary></indexterm>yn(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccoshf</primary></indexterm>ccoshf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>erfc</primary></indexterm>erfc(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>j0f</primary></indexterm>j0f(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>powf</primary></indexterm>powf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ynf</primary></indexterm>ynf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccoshl</primary></indexterm>ccoshl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>erfcf</primary></indexterm>erfcf(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>j0l</primary></indexterm>j0l(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>powl</primary></indexterm>powl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>ynl</primary></indexterm>ynl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ccosl</primary></indexterm>ccosl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>erfcl</primary></indexterm>erfcl(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>j1</primary></indexterm>j1(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>remainder</primary></indexterm>remainder(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ceil</primary></indexterm>ceil(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>erff</primary></indexterm>erff(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>j1f</primary></indexterm>j1f(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>remainderf</primary></indexterm>remainderf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ceilf</primary></indexterm>ceilf(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>erfl</primary></indexterm>erfl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>j1l</primary></indexterm>j1l(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-25"></ENTRY>
<ENTRY><indexterm><primary>remainderl</primary></indexterm>remainderl(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ceill</primary></indexterm>ceill(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>exp</primary></indexterm>exp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>jn</primary></indexterm>jn(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY><indexterm><primary>remquo</primary></indexterm>remquo(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libm - Math Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>signgam</primary></indexterm>signgam(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-13-67"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libm-ddefs>
<TITLE>Data Definitions for libm</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO C serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->
<!--    at Tue Jan 27 17:42:37 2004 -->
<SECT1 ID=libpthread>
<TITLE>Interfaces for libpthread</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libpthread Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpthread</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpthread.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-132-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
The Single UNIX® Specification(SUS) Version 3<FOOTNOTE ID="std-132-67">
<PARA>
The Single UNIX® Specification(SUS) Version 3</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<!--libgroup-->
<TITLE>Posix Threads</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Posix Threads</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libpthread - Posix Threads Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_pthread_cleanup_pop</primary></indexterm>_pthread_cleanup_pop(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-10"></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_setschedpolicy</primary></indexterm>pthread_attr_setschedpolicy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_getschedparam</primary></indexterm>pthread_getschedparam(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_once</primary></indexterm>pthread_once(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_setconcurrency</primary></indexterm>pthread_setconcurrency(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_pthread_cleanup_push</primary></indexterm>_pthread_cleanup_push(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-10"></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_setscope</primary></indexterm>pthread_attr_setscope(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_getspecific</primary></indexterm>pthread_getspecific(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_destroy</primary></indexterm>pthread_rwlock_destroy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_setschedparam</primary></indexterm>pthread_setschedparam(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_atfork</primary></indexterm>pthread_atfork(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_setstackaddr</primary></indexterm>pthread_attr_setstackaddr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_join</primary></indexterm>pthread_join(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_init</primary></indexterm>pthread_rwlock_init(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_setspecific</primary></indexterm>pthread_setspecific(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_destroy</primary></indexterm>pthread_attr_destroy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_setstacksize</primary></indexterm>pthread_attr_setstacksize(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_key_create</primary></indexterm>pthread_key_create(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_rdlock</primary></indexterm>pthread_rwlock_rdlock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_sigmask</primary></indexterm>pthread_sigmask(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getdetachstate</primary></indexterm>pthread_attr_getdetachstate(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_cancel</primary></indexterm>pthread_cancel(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_key_delete</primary></indexterm>pthread_key_delete(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_timedrdlock</primary></indexterm>pthread_rwlock_timedrdlock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_testcancel</primary></indexterm>pthread_testcancel(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getguardsize</primary></indexterm>pthread_attr_getguardsize(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_broadcast</primary></indexterm>pthread_cond_broadcast(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_kill</primary></indexterm>pthread_kill(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_timedwrlock</primary></indexterm>pthread_rwlock_timedwrlock(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>sem_close</primary></indexterm>sem_close(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getinheritsched</primary></indexterm>pthread_attr_getinheritsched(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_destroy</primary></indexterm>pthread_cond_destroy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_destroy</primary></indexterm>pthread_mutex_destroy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_tryrdlock</primary></indexterm>pthread_rwlock_tryrdlock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>sem_destroy</primary></indexterm>sem_destroy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getschedparam</primary></indexterm>pthread_attr_getschedparam(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_init</primary></indexterm>pthread_cond_init(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_init</primary></indexterm>pthread_mutex_init(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_trywrlock</primary></indexterm>pthread_rwlock_trywrlock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>sem_getvalue</primary></indexterm>sem_getvalue(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getschedpolicy</primary></indexterm>pthread_attr_getschedpolicy(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_signal</primary></indexterm>pthread_cond_signal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_lock</primary></indexterm>pthread_mutex_lock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_unlock</primary></indexterm>pthread_rwlock_unlock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>sem_init</primary></indexterm>sem_init(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getscope</primary></indexterm>pthread_attr_getscope(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_timedwait</primary></indexterm>pthread_cond_timedwait(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_trylock</primary></indexterm>pthread_mutex_trylock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_wrlock</primary></indexterm>pthread_rwlock_wrlock(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>sem_open</primary></indexterm>sem_open(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getstackaddr</primary></indexterm>pthread_attr_getstackaddr(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_wait</primary></indexterm>pthread_cond_wait(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_unlock</primary></indexterm>pthread_mutex_unlock(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_destroy</primary></indexterm>pthread_rwlockattr_destroy(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>sem_post</primary></indexterm>sem_post(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getstacksize</primary></indexterm>pthread_attr_getstacksize(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_destroy</primary></indexterm>pthread_condattr_destroy(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_destroy</primary></indexterm>pthread_mutexattr_destroy(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_getpshared</primary></indexterm>pthread_rwlockattr_getpshared(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>sem_timedwait</primary></indexterm>sem_timedwait(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_init</primary></indexterm>pthread_attr_init(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_init</primary></indexterm>pthread_condattr_init(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_getpshared</primary></indexterm>pthread_mutexattr_getpshared(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_init</primary></indexterm>pthread_rwlockattr_init(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>sem_trywait</primary></indexterm>sem_trywait(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setdetachstate</primary></indexterm>pthread_attr_setdetachstate(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_create</primary></indexterm>pthread_create(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_gettype</primary></indexterm>pthread_mutexattr_gettype(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_setpshared</primary></indexterm>pthread_rwlockattr_setpshared(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>sem_unlink</primary></indexterm>sem_unlink(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setguardsize</primary></indexterm>pthread_attr_setguardsize(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_detach</primary></indexterm>pthread_detach(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_init</primary></indexterm>pthread_mutexattr_init(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_self</primary></indexterm>pthread_self(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>sem_wait</primary></indexterm>sem_wait(GLIBC_2.1)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setinheritsched</primary></indexterm>pthread_attr_setinheritsched(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_equal</primary></indexterm>pthread_equal(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_setpshared</primary></indexterm>pthread_mutexattr_setpshared(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_setcancelstate</primary></indexterm>pthread_setcancelstate(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setschedparam</primary></indexterm>pthread_attr_setschedparam(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_exit</primary></indexterm>pthread_exit(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_settype</primary></indexterm>pthread_mutexattr_settype(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY><indexterm><primary>pthread_setcanceltype</primary></indexterm>pthread_setcanceltype(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-132-67"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpthread-ddefs>
<TITLE>Data Definitions for libpthread</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO C serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->
<!--    at Tue Jan 27 17:43:05 2004 -->
<SECT1 ID=libgcc-s>
<TITLE>Interfaces for libgcc_s</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libgcc_s Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgcc_s</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgcc_s.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-236-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<!--libgroup-->
<TITLE>Unwind Library</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Unwind Library</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libgcc_s - Unwind Library Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_Unwind_DeleteException</primary></indexterm>_Unwind_DeleteException(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetDataRelBase</primary></indexterm>_Unwind_GetDataRelBase(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetLanguageSpecificData</primary></indexterm>_Unwind_GetLanguageSpecificData(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY><indexterm><primary>_Unwind_RaiseException</primary></indexterm>_Unwind_RaiseException(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY><indexterm><primary>_Unwind_SetIP</primary></indexterm>_Unwind_SetIP(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Unwind_Find_FDE</primary></indexterm>_Unwind_Find_FDE(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetGR</primary></indexterm>_Unwind_GetGR(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetRegionStart</primary></indexterm>_Unwind_GetRegionStart(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY><indexterm><primary>_Unwind_Resume</primary></indexterm>_Unwind_Resume(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Unwind_ForcedUnwind</primary></indexterm>_Unwind_ForcedUnwind(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetIP</primary></indexterm>_Unwind_GetIP(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetTextRelBase</primary></indexterm>_Unwind_GetTextRelBase(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY><indexterm><primary>_Unwind_SetGR</primary></indexterm>_Unwind_SetGR(GCC_3.0)<FOOTNOTEREF LINKEND="std-236-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgcc-s-ddefs>
<TITLE>Data Definitions for libgcc_s</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO C serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<SECT1 ID=libgcc-sman>
<TITLE>Interfaces Definitions for libgcc_s</TITLE>
<PARA>
</PARA>
<REFENTRY ID="baselib--Unwind-DeleteException"> <REFMETA>
<REFENTRYTITLE>_Unwind_DeleteException</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_DeleteException
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void 
  <FUNCTION>_Unwind_DeleteException</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Exception</STRUCTNAME> 
  <PARAMETER>*object</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_DeleteException</FUNCTION> deletes the given exception
<PARAMETER>object</PARAMETER>. If a given runtime resumes normal
execution after catching a foreign exception, it will not know how to
delete that exception. Such an exception shall be deleted by calling
<FUNCTION>_Unwind_DeleteException</FUNCTION>. This is a convenience
function that calls the function pointed to by the 
<EMPHASIS>exception_cleanup</EMPHASIS> field of the exception header.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-Find-FDE"> <REFMETA>
<REFENTRYTITLE>_Unwind_Find_FDE</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_Find_FDE
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>fde *
  <FUNCTION>_Unwind_Find_FDE</FUNCTION></FUNCDEF>
 <PARAMDEF>void
  <PARAMETER><REPLACEABLE>*pc</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>dwarf_eh_bases</STRUCTNAME> 
  <PARAMETER>*bases</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_Find_FDE</FUNCTION> 
looks for the object containing
<PARAMETER>pc</PARAMETER>, then inserts into
<PARAMETER>bases</PARAMETER>.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-ForcedUnwind"> <REFMETA>
<REFENTRYTITLE>_Unwind_ForcedUnwind</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_ForcedUnwind
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Reason_Code
  <FUNCTION>_Unwind_ForcedUnwind</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Exception</STRUCTNAME> 
  <PARAMETER>*object</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>_Unwind_Stop_Fn
  <PARAMETER><REPLACEABLE>stop</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>void
  <PARAMETER><REPLACEABLE>*stop_parameter</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_ForcedUnwind</FUNCTION> raises an exception 
for forced unwinding, passing along the given exception
<PARAMETER>object</PARAMETER>, which should have its
<EMPHASIS>exception_class</EMPHASIS> and 
<EMPHASIS>exception_cleanup</EMPHASIS> fields set. The exception 
<PARAMETER>object</PARAMETER> has been allocated by the language-specific
runtime, and has a language-specific format, except that it shall contain an
<STRUCTNAME>_Unwind_Exception</STRUCTNAME> struct.
</PARA>
<PARA>
Forced unwinding is a single-phase process. <PARAMETER>stop</PARAMETER>
and <PARAMETER>stop_parameter</PARAMETER> control the termination of the 
unwind process instead of the usual personality routine query.
<PARAMETER>stop</PARAMETER> is called for each unwind frame, with the 
parameteres described for the usual personality routine below,
plus an additional <PARAMETER>stop_parameter</PARAMETER>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
When <PARAMETER>stop</PARAMETER> identifies the destination frame, it 
transfers control to the user code as appropriate without returning, 
normally after calling <FUNCTION>_Unwind_DeleteException</FUNCTION>. If not,
then it should return an <VARNAME>_Unwind_Reason_Code</VARNAME> value.
</PARA>
<PARA>
If <PARAMETER>stop</PARAMETER> returns any reason code other than
<SYMBOL>_URC_NO_REASON</SYMBOL>, then the stack state is indeterminate
from the point of view of the caller of 
<FUNCTION>_Unwind_ForcedUnwind</FUNCTION>. Rather than attempt to return,
therefore, the unwind library should use the 
<STRUCTFIELD>exception_cleanup</STRUCTFIELD> entry in the exception, and then 
call <FUNCTION>abort</FUNCTION>.
</PARA>
<VARIABLELIST>

<VARLISTENTRY>
<TERM>_URC_NO_REASON</TERM>
<LISTITEM>
<PARA>
This is not the destination from. The unwind runtime will call frame's
personality routine with the <VARNAME>_UA_FORCE_UNWIND</VARNAME>
and <VARNAME>_UA_CLEANUP_PHASE</VARNAME> flag set in 
<EMPHASIS>actions</EMPHASIS>, and then unwind to the next frame
and call the <FUNCTION>stop</FUNCTION> function again.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>_URC_END_OF_STACK</TERM>
<LISTITEM>
<PARA>
In order to allow <FUNCTION>_Unwind_ForcedUnwind</FUNCTION> to 
perform special processing when it reaches the end of the stack, the 
unwind runtime will call it after the last frame is rejected, with a 
<CONSTANT>NULL</CONSTANT> stack pointer in the context, and the 
<FUNCTION>stop</FUNCTION> function shall catch this condition. It may 
return this code if it cannot handle end-of-stack.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>_URC_FATAL_PHASE2_ERROR</TERM>
<LISTITEM>
<PARA>
The <FUNCTION>stop</FUNCTION> function may return this code for other fatal 
conditions like stack corruption.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>

</REFSECT1>

</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetDataRelBase"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetDataRelBase</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetDataRelBase
</REFNAME>
<REFPURPOSE>
private IA64 C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Ptr
  <FUNCTION>_Unwind_GetDataRelBase</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetDataRelBase</FUNCTION> 
returns the global pointer in register one for <PARAMETER>context</PARAMETER>.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetGR"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetGR</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetGR
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Word
  <FUNCTION>_Unwind_GetGR</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>int
  <PARAMETER><REPLACEABLE>index</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetGR</FUNCTION> returns data at
<PARAMETER>index</PARAMETER> found in <PARAMETER>context</PARAMETER>.
The register is identified by its index: <LITERAL>0</LITERAL> to 
<LITERAL>31</LITERAL> are for the fixed registers, and 
<LITERAL>32</LITERAL> to <LITERAL>127</LITERAL> are for the stacked 
registers.
</PARA>
<PARA>
During the two phases of unwinding, only <TOKEN>GR1</TOKEN> has 
a guaranteed value, which is the global pointer of the frame referenced 
by the unwind <PARAMETER>context</PARAMETER>. If the register has its 
<TOKEN>NAT</TOKEN> bit set, the behavior is unspecified.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetIP"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetIP</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetIP
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Ptr
  <FUNCTION>_Unwind_GetIP</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetIP</FUNCTION> 
returns the instruction pointer value for the routine identified by the 
unwind <PARAMETER>context</PARAMETER>.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetLanguageSpecificData"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetLanguageSpecificData</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetLanguageSpecificData
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Ptr
  <FUNCTION>_Unwind_GetLanguageSpecificData</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>uint
  <PARAMETER><REPLACEABLE>value</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetLanguageSpecificData</FUNCTION> 
returns the address of the language specific data area for the
current stack frame.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetRegionStart"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetRegionStart</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetRegionStart
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Ptr
  <FUNCTION>_Unwind_GetRegionStart</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetRegionStart</FUNCTION> routine returns the address 
(i.e., <LITERAL>0</LITERAL>) of the beginning of the procedure or code
fragment described by the current unwind descriptor block.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-GetTextRelBase"> <REFMETA>
<REFENTRYTITLE>_Unwind_GetTextRelBase</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_GetTextRelBase
</REFNAME>
<REFPURPOSE>
private IA64 C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Ptr
  <FUNCTION>_Unwind_GetTextRelBase</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_GetTextRelBase</FUNCTION> 
calls the abort method, then returns.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-RaiseException"> <REFMETA>
<REFENTRYTITLE>_Unwind_RaiseException</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_RaiseException
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Reason_Code
  <FUNCTION>_Unwind_RaiseException</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Exception</STRUCTNAME> 
  <PARAMETER>*object</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_RaiseException</FUNCTION> 
raises an exception, passing along the given exception 
<PARAMETER>object</PARAMETER>, which should have its 
<STRUCTFIELD>exception_class</STRUCTFIELD> and 
<STRUCTFIELD>exception_cleanup</STRUCTFIELD> fields set. 
The exception object has been allocated by the language-specific
runtime, and has a language-specific format, exception that it shall
contain an <VARNAME>_Unwind_Exception</VARNAME>.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value</TITLE>
<PARA>
<FUNCTION>_Unwind_RaiseException</FUNCTION> does not return unless an
error condition is found. If an error condition occurs, an 
<VARNAME>_Unwind_Reason_Code</VARNAME> is returnd:
</PARA>

<VARIABLELIST>

<VARLISTENTRY>
<TERM>_URC_END_OF_STACK</TERM>
<LISTITEM>
<PARA>
The unwinder encountered the end of the stack during phase one without 
finding a handler. The unwind runtime will not have modified the stack. 
The C++ runtime will normally call <FUNCTION>uncaught_exception</FUNCTION> 
in this case.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>_URC_FATAL_PHASE1_ERROR</TERM>
<LISTITEM>
<PARA>
The unwinder encountered an unexpected error during phase one, because
of something like stack corruption. The unwind runtime will not have 
modified the stack. The C++ runtime will normally call 
<FUNCTION>terminate</FUNCTION> in this case.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>_URC_FATAL_PHASE2_ERROR</TERM>
<LISTITEM>
<PARA>
The unwinder encountered an unexpected error during phase two.
This is usually a <EMPHASIS>throw</EMPHASIS>, which will call 
<FUNCTION>terminate</FUNCTION>.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>

</REFSECT1>

</REFENTRY>

<REFENTRY ID="baselib--Unwind-Resume"> <REFMETA>
<REFENTRYTITLE>_Unwind_Resume</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_Resume
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void
  <FUNCTION>_Unwind_Resume</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Exception</STRUCTNAME> 
  <PARAMETER>*object</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_Resume</FUNCTION> 
resumes propagation of an existing exception <PARAMETER>object</PARAMETER>.
A call to this routine is inserted as the end of a landing pad that
performs cleanup, but does not resume normal execution. It causes
unwinding to proceed further.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-SetGR"> <REFMETA>
<REFENTRYTITLE>_Unwind_SetGR</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_SetGR
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void
  <FUNCTION>_Unwind_SetGR</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>int
  <PARAMETER><REPLACEABLE>index</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>uint
  <PARAMETER><REPLACEABLE>value</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_SetGR</FUNCTION> 
sets the <PARAMETER>value</PARAMETER> of the register 
<PARAMETER>index</PARAMETER>ed for the routine identified 
by the unwind <PARAMETER>context</PARAMETER>.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib--Unwind-SetIP"> <REFMETA>
<REFENTRYTITLE>_Unwind_SetIP</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_SetIP
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void
  <FUNCTION>_Unwind_SetIP</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Context</STRUCTNAME> 
  <PARAMETER>*context</PARAMETER></FUNCPARAMS></PARAMDEF>
 <PARAMDEF>uint
  <PARAMETER><REPLACEABLE>value</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_SetIP</FUNCTION> 
sets the <PARAMETER>value</PARAMETER> of the instruction pointer for the 
routine identified by the unwind <PARAMETER>context</PARAMETER>
</PARA>
</REFSECT1>
</REFENTRY>

</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->
<!--    at Tue Jan 27 17:42:48 2004 -->
<SECT1 ID=libdl>
<TITLE>Interfaces for libdl</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libdl Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libdl</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libdl.so.2</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-27-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
The Single UNIX® Specification(SUS) Version 3<FOOTNOTE ID="std-27-67">
<PARA>
The Single UNIX® Specification(SUS) Version 3</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<!--libgroup-->
<TITLE>Dynamic Loader</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Dynamic Loader</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libdl - Dynamic Loader Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>dladdr</primary></indexterm>dladdr(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-27-10"></ENTRY>
<ENTRY><indexterm><primary>dlclose</primary></indexterm>dlclose(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-27-67"></ENTRY>
<ENTRY><indexterm><primary>dlerror</primary></indexterm>dlerror(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-27-67"></ENTRY>
<ENTRY><indexterm><primary>dlopen</primary></indexterm>dlopen(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-27-67"></ENTRY>
<ENTRY><indexterm><primary>dlsym</primary></indexterm>dlsym(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-27-67"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libdl-ddefs>
<TITLE>Data Definitions for libdl</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO C serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->
<!--    at Tue Jan 27 17:42:57 2004 -->
<SECT1 ID=libcrypt>
<TITLE>Interfaces for libcrypt</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libcrypt Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libcrypt</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libcrypt.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
The Single UNIX® Specification(SUS) Version 3<FOOTNOTE ID="std-29-67">
<PARA>
The Single UNIX® Specification(SUS) Version 3</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<!--libgroup-->
<TITLE>Encryption</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Encryption</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libcrypt - Encryption Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>crypt</primary></indexterm>crypt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-29-67"></ENTRY>
<ENTRY><indexterm><primary>encrypt</primary></indexterm>encrypt(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-29-67"></ENTRY>
<ENTRY><indexterm><primary>setkey</primary></indexterm>setkey(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-29-67"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libcrypt-ddefs>
<TITLE>Data Definitions for libcrypt</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO C serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->
<!--    at Tue Jan 27 17:43:20 2004 -->
<SECT1 ID=libstdcxx>
<TITLE>Interfaces for libstdcxx</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libstdcxx</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libstdc++.so.5</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
ISO/IEC 14882: 1998(E) Programming languages --C++<FOOTNOTE ID="std-231-65">
<PARA>
ISO/IEC 14882: 1998(E) Programming languages --C++</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-231-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<!--libgroup-->
<TITLE>C++ Runtime Support</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for C++ Runtime Support</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - C++ Runtime Support Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >* __uninitialized_fill_n_aux&lt;basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >*, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >*, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, __false_type)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >* __uninitialized_fill_n_aux&lt;basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >*, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >*, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, __false_type)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>C++ type descriptors for built-in types</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for C++ type descriptors for built-in types</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;long double></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;long double></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct __numeric_limits_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct __numeric_limits_base</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;long long></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;long long></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned long long></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned long long></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;float></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;float></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;double></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;double></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;short></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;short></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned short></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned short></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;int></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;int></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned int></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned int></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;long></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;long></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned long></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned long></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;wchar_t></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;unsigned char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;unsigned char></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;signed char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;signed char></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;char></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>struct numeric_limits&lt;bool></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for struct numeric_limits&lt;bool></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class allocator&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for allocator&lt;char></TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class allocator&lt;char></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class allocator&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char>::deallocate(char*, unsigned)</primary></indexterm>allocator&lt;char>::deallocate(char*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;char>::allocate(unsigned, void const*)</primary></indexterm>allocator&lt;char>::allocate(unsigned, void const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class allocator&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for allocator&lt;wchar_t></TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class allocator&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class allocator&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t>::deallocate(wchar_t*, unsigned)</primary></indexterm>allocator&lt;wchar_t>::deallocate(wchar_t*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>allocator&lt;wchar_t>::allocate(unsigned, void const*)</primary></indexterm>allocator&lt;wchar_t>::allocate(unsigned, void const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>facet functions</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for facet functions</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_string</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_string</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_string Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_of(wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_of(wchar_t const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_Rep::_M_clone(allocator&lt;wchar_t> const&, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_Rep::_M_clone(allocator&lt;wchar_t> const&, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_of(wchar_t const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_of(wchar_t const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_Rep::_S_create(unsigned, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_Rep::_S_create(unsigned, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_Rep::operator&lsqb;](unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_Rep::operator&lsqb;](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_of(wchar_t, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_of(wchar_t, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::erase(unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::erase(unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_of(wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_of(wchar_t const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::append(wchar_t const*, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::append(wchar_t const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_of(wchar_t const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_of(wchar_t const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::append(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::append(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::append(unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::append(unsigned, wchar_t)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_of(wchar_t, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_of(wchar_t, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::assign(wchar_t const*, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::assign(wchar_t const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_not_of(wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_not_of(wchar_t const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::assign(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::assign(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_not_of(wchar_t const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_not_of(wchar_t const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::assign(unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::assign(unsigned, wchar_t)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, unsigned, wchar_t)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_not_of(wchar_t, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_last_not_of(wchar_t, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(unsigned, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(unsigned, wchar_t const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_not_of(wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_not_of(wchar_t const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(unsigned, wchar_t const*, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(unsigned, wchar_t const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_not_of(wchar_t const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_not_of(wchar_t const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_not_of(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_not_of(wchar_t, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find_first_not_of(wchar_t, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(unsigned, unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::insert(unsigned, unsigned, wchar_t)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::at(unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::at(unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::resize(unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::resize(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::copy(wchar_t*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::copy(wchar_t*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::resize(unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::resize(unsigned, wchar_t)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find(wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find(wchar_t const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, wchar_t const*, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, wchar_t const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find(wchar_t const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find(wchar_t const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, unsigned, wchar_t)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(unsigned, unsigned, wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(unsigned, unsigned, wchar_t const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find(wchar_t, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::find(wchar_t, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(unsigned, unsigned, wchar_t const*, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(unsigned, unsigned, wchar_t const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::rfind(wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::rfind(wchar_t const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::rfind(wchar_t const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::rfind(wchar_t const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::rfind(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::rfind(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(unsigned, unsigned, unsigned, wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::replace(unsigned, unsigned, unsigned, wchar_t)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::rfind(wchar_t, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::rfind(wchar_t, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::reserve(unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::reserve(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::substr(unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::substr(unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_M_mutate(unsigned, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_M_mutate(unsigned, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_M_fold(unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_M_fold(unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](wchar_t const*, unsigned, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](wchar_t const*, unsigned, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::compare(unsigned, unsigned, wchar_t const*) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::compare(unsigned, unsigned, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::compare(unsigned, unsigned, wchar_t const*, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::compare(unsigned, unsigned, wchar_t const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::compare(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::compare(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](unsigned, wchar_t, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](unsigned, wchar_t, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::compare(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::compare(unsigned, unsigned, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](wchar_t const*, unsigned, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](wchar_t const*, unsigned, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_M_check(unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_M_check(unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::operator&lsqb;](unsigned) const</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::operator&lsqb;](unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_S_construct(unsigned, wchar_t, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_S_construct(unsigned, wchar_t, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](unsigned, wchar_t, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](unsigned, wchar_t, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::at(unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::at(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::operator&lsqb;](unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::operator&lsqb;](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class istreambuf_iterator&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class istreambuf_iterator&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class gslice</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for gslice</TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class gslice</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class gslice Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>gslice::_Indexer::_Indexer&lsqb;in-charge](unsigned, valarray&lt;unsigned> const&, valarray&lt;unsigned> const&)</primary></indexterm>gslice::_Indexer::_Indexer&lsqb;in-charge](unsigned, valarray&lt;unsigned> const&, valarray&lt;unsigned> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>gslice::_Indexer::_Indexer&lsqb;not-in-charge](unsigned, valarray&lt;unsigned> const&, valarray&lt;unsigned> const&)</primary></indexterm>gslice::_Indexer::_Indexer&lsqb;not-in-charge](unsigned, valarray&lt;unsigned> const&, valarray&lt;unsigned> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __basic_file&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __basic_file&lt;char></TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __basic_file&lt;char></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class __basic_file&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char>::xsgetn(char*, int)</primary></indexterm>__basic_file&lt;char>::xsgetn(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__basic_file&lt;char>::xsputn(char const*, int)</primary></indexterm>__basic_file&lt;char>::xsputn(char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __default_alloc_template&lt;(bool)1, (int)0></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __default_alloc_template&lt;(bool)1, (int)0></TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __default_alloc_template&lt;(bool)1, (int)0></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class __default_alloc_template&lt;(bool)1, (int)0> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0>::deallocate(void*, unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0>::deallocate(void*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0>::_S_freelist_index(unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0>::_S_freelist_index(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0>::reallocate(void*, unsigned, unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0>::reallocate(void*, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0>::allocate(unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0>::allocate(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0>::_S_round_up(unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0>::_S_round_up(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0>::_S_refill(unsigned)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0>::_S_refill(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__default_alloc_template&lt;(bool)1, (int)0>::_S_chunk_alloc(unsigned, int&)</primary></indexterm>__default_alloc_template&lt;(bool)1, (int)0>::_S_chunk_alloc(unsigned, int&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class valarray&lt;unsigned></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for valarray&lt;unsigned></TITLE>
<PARA>
</PARA>
</SECT3>
<SECT3>
<TITLE>Interfaces for Class valarray&lt;unsigned></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class valarray&lt;unsigned> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned>::size() const</primary></indexterm>valarray&lt;unsigned>::size() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned>::valarray&lsqb;not-in-charge](unsigned)</primary></indexterm>valarray&lt;unsigned>::valarray&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned>::valarray&lsqb;in-charge](valarray&lt;unsigned> const&)</primary></indexterm>valarray&lt;unsigned>::valarray&lsqb;in-charge](valarray&lt;unsigned> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned>::~valarray &lsqb;in-charge]()</primary></indexterm>valarray&lt;unsigned>::~valarray &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned>::valarray&lsqb;in-charge](unsigned)</primary></indexterm>valarray&lt;unsigned>::valarray&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned>::~valarray &lsqb;not-in-charge]()</primary></indexterm>valarray&lt;unsigned>::~valarray &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned>::valarray&lsqb;not-in-charge](valarray&lt;unsigned> const&)</primary></indexterm>valarray&lt;unsigned>::valarray&lsqb;not-in-charge](valarray&lt;unsigned> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>valarray&lt;unsigned>::operator&lsqb;](unsigned)</primary></indexterm>valarray&lt;unsigned>::operator&lsqb;](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_Rep::_M_clone(allocator&lt;char> const&, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_Rep::_M_clone(allocator&lt;char> const&, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_Rep::_S_create(unsigned, allocator&lt;char> const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_Rep::_S_create(unsigned, allocator&lt;char> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_Rep::operator&lsqb;](unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_Rep::operator&lsqb;](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::erase(unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::erase(unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(char const*, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(char const*, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_not_of(char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_not_of(char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_not_of(char const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_not_of(char const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_not_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_not_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_not_of(char, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_not_of(char, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, char const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, char const*, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::at(unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::at(unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::resize(unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::resize(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::copy(char*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::copy(char*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::resize(unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::resize(unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char const*, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, char const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, char const*, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::reserve(unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::reserve(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::substr(unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::substr(unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_M_mutate(unsigned, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_M_mutate(unsigned, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_M_fold(unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_M_fold(unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;in-charge](char const*, unsigned, allocator&lt;char> const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;in-charge](char const*, unsigned, allocator&lt;char> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, char const*) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned, allocator&lt;char> const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned, allocator&lt;char> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;in-charge](unsigned, char, allocator&lt;char> const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;in-charge](unsigned, char, allocator&lt;char> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;not-in-charge](char const*, unsigned, allocator&lt;char> const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;not-in-charge](char const*, unsigned, allocator&lt;char> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_M_check(unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_M_check(unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator&lsqb;](unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator&lsqb;](unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned, allocator&lt;char> const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned, allocator&lt;char> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_S_construct(unsigned, char, allocator&lt;char> const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::_S_construct(unsigned, char, allocator&lt;char> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;not-in-charge](unsigned, char, allocator&lt;char> const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::basic_string&lsqb;not-in-charge](unsigned, char, allocator&lt;char> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::at(unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::at(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator&lsqb;](unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator&lsqb;](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class locale</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class locale</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class locale Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](char const*, unsigned)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](locale::facet**, unsigned, bool)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](locale::facet**, unsigned, bool)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](locale::facet**, unsigned, bool)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](locale::facet**, unsigned, bool)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;in-charge](locale::_Impl const&, unsigned)</primary></indexterm>locale::_Impl::_Impl&lsqb;in-charge](locale::_Impl const&, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::_Impl::_Impl&lsqb;not-in-charge](locale::_Impl const&, unsigned)</primary></indexterm>locale::_Impl::_Impl&lsqb;not-in-charge](locale::_Impl const&, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__enum_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__enum_type_info</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __cxxabiv1::__enum_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo for __cxxabiv1::__enum_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__enum_type_info::~__enum_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __cxxabiv1::__enum_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__enum_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__enum_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__enum_type_info</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__array_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__array_type_info</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __cxxabiv1::__array_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo for __cxxabiv1::__array_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__array_type_info::~__array_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __cxxabiv1::__array_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__array_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__array_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__array_type_info</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__class_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__class_type_info</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __cxxabiv1::__class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__class_type_info::~__class_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __cxxabiv1::__class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__class_type_info</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class __cxxabiv1::__class_type_info Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const<FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const<FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __cxxabiv1::__pbase_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pbase_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pbase_type_info::~__pbase_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __cxxabiv1::__pbase_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pbase_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pbase_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pbase_type_info</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __cxxabiv1::__pointer_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pointer_type_info::~__pointer_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__is_pointer_p() const</primary></indexterm>__cxxabiv1::__pointer_type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pointer_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __cxxabiv1::__pointer_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pointer_type_info</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__function_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__function_type_info</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __cxxabiv1::__function_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo for __cxxabiv1::__function_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__function_type_info::~__function_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__function_type_info::__is_function_p() const</primary></indexterm>__cxxabiv1::__function_type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __cxxabiv1::__function_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__function_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__function_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__function_type_info</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __cxxabiv1::__si_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__si_class_type_info::~__si_class_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __cxxabiv1::__si_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__si_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__si_class_type_info</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class __cxxabiv1::__si_class_type_info Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const<FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const</primary></indexterm>__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const<FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __cxxabiv1::__vmi_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __cxxabiv1::__vmi_class_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__vmi_class_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__vmi_class_type_info</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class __cxxabiv1::__vmi_class_type_info Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const<FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const</primary></indexterm>__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const<FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __cxxabiv1::__fundamental_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo for __cxxabiv1::__fundamental_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __cxxabiv1::__fundamental_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__fundamental_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__fundamental_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__fundamental_type_info</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo for __cxxabiv1::__pointer_to_member_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge]()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge deleting]()</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pbase_type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</primary></indexterm>__cxxabiv1::__pointer_to_member_type_info::__pointer_catch(__cxxabiv1::__pbase_type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __cxxabiv1::__pointer_to_member_type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __cxxabiv1::__pointer_to_member_type_info</primary></indexterm>typeinfo name for __cxxabiv1::__pointer_to_member_type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __cxxabiv1::__pointer_to_member_type_info</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> >::~stdio_filebuf &lsqb;in-charge]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> >::~stdio_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> >::~stdio_filebuf &lsqb;in-charge deleting]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> >::~stdio_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo name for __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __gnu_cxx::stdio_filebuf&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::~stdio_filebuf &lsqb;in-charge]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::~stdio_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::~stdio_filebuf &lsqb;in-charge deleting]()</primary></indexterm>__gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::~stdio_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo name for __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __gnu_cxx::stdio_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class locale::facet</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for locale::facet</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for locale::facet</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet &lsqb;in-charge]()</primary></indexterm>locale::facet::~facet &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::~facet &lsqb;in-charge deleting]()</primary></indexterm>locale::facet::~facet &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for locale::facet</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for locale::facet</primary></indexterm>typeinfo name for locale::facet</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class locale::facet</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class locale::facet Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::facet&lsqb;in-charge](unsigned)</primary></indexterm>locale::facet::facet&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>locale::facet::facet&lsqb;not-in-charge](unsigned)</primary></indexterm>locale::facet::facet&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class ios_base::failure</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ios_base::failure</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for ios_base::failure</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base::failure</primary></indexterm>typeinfo for ios_base::failure</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure &lsqb;in-charge]()</primary></indexterm>ios_base::failure::~failure &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::~failure &lsqb;in-charge deleting]()</primary></indexterm>ios_base::failure::~failure &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ios_base::failure::what() const</primary></indexterm>ios_base::failure::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for ios_base::failure</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base::failure</primary></indexterm>typeinfo name for ios_base::failure</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ios_base::failure</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_iostream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_iostream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_iostream&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_iostream&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for basic_iostream&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge]()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_iostream&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_iostream&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo name for basic_iostream&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>11</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;char, char_traints&lt;char> ></primary></indexterm>typeinfo for basic_istream&lt;char, char_traints&lt;char> ></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for basic_ostream&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2050</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_iostream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_iostream&lt;char, char_traits&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;char, char_traits&lt;char> >::~basic_iostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istream&lt;char, char_traints&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istream&lt;char, char_traints&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_istream&lt;char, char_traints&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;char, char_traints&lt;char> ></primary></indexterm>typeinfo for basic_istream&lt;char, char_traints&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char> >::~basic_istream &lsqb;in-charge]()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char> >::~basic_istream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char> >::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>basic_istream&lt;char, char_traints&lt;char> >::~basic_istream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_istream&lt;char, char_traints&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istream&lt;char, char_traints&lt;char> ></primary></indexterm>typeinfo name for basic_istream&lt;char, char_traints&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istream&lt;char, char_traints&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_istream&lt;char, char_traints&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char> >::get(char*, int)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char> >::get(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char> >::getline(char*, int, char)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char> >::getline(char*, int, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char> >::get(char*, int, char)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char> >::get(char*, int, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char> >::readsome(char*, int)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char> >::readsome(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char> >::read(char*, int)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char> >::read(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;char, char_traints&lt;char> >::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;char, char_traints&lt;char> >::~basic_istream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char> >::ignore(int, int)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char> >::ignore(int, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;char, char_traints&lt;char> >::~basic_istream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;char, char_traints&lt;char> >::~basic_istream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;char, char_traints&lt;char> >::getline(char*, int)</primary></indexterm>basic_istream&lt;char, char_traints&lt;char> >::getline(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_ostream&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for basic_ostream&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char> >::~basic_ostream &lsqb;in-charge]()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char> >::~basic_ostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char> >::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char> >::~basic_ostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_ostream&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostream&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo name for basic_ostream&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_ostream&lt;char, char_traits&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;char, char_traits&lt;char> >::write(char const*, int)</primary></indexterm>basic_ostream&lt;char, char_traits&lt;char> >::write(char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;char, char_traits&lt;char> >::~basic_ostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;char, char_traits&lt;char> >::~basic_ostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;char, char_traits&lt;char> >::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;char, char_traits&lt;char> >::~basic_ostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __num_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __num_base</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __num_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __num_base</primary></indexterm>typeinfo name for __num_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __num_base</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class __num_base Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__num_base::_S_format_float(ios_base const&, char*, char, int)</primary></indexterm>__num_base::_S_format_float(ios_base const&, char*, char, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class bad_typeid</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_typeid</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for bad_typeid</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_typeid</primary></indexterm>typeinfo for bad_typeid</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;in-charge]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;in-charge deleting]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for bad_typeid</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_typeid</primary></indexterm>typeinfo name for bad_typeid</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_typeid</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype_base</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for ctype_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_base</primary></indexterm>typeinfo name for ctype_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype_base</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class istrstream</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for istrstream</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for istrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for istrstream</primary></indexterm>typeinfo for istrstream</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::~istrstream &lsqb;in-charge]()</primary></indexterm>istrstream::~istrstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::~istrstream &lsqb;in-charge deleting]()</primary></indexterm>istrstream::~istrstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for istrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for istrstream</primary></indexterm>typeinfo name for istrstream</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class istrstream</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class istrstream Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;in-charge](char const*, int)</primary></indexterm>istrstream::istrstream&lsqb;in-charge](char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;not-in-charge](char*, int)</primary></indexterm>istrstream::istrstream&lsqb;not-in-charge](char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;in-charge](char*, int)</primary></indexterm>istrstream::istrstream&lsqb;in-charge](char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to istrstream::~istrstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to istrstream::~istrstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>istrstream::istrstream&lsqb;not-in-charge](char const*, int)</primary></indexterm>istrstream::istrstream&lsqb;not-in-charge](char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to istrstream::~istrstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to istrstream::~istrstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class money_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_base</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for money_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_base</primary></indexterm>typeinfo name for money_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_base</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;char, (bool)0></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;char, (bool)0></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for moneypunct&lt;char, (bool)0></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, (bool)0></primary></indexterm>typeinfo for moneypunct&lt;char, (bool)0></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;char, (bool)0>::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;char, (bool)0>::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for moneypunct&lt;char, (bool)0></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;char, (bool)0></primary></indexterm>typeinfo name for moneypunct&lt;char, (bool)0></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;char, (bool)0></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class moneypunct&lt;char, (bool)0> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;char, (bool)0>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;char, (bool)0>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::moneypunct&lsqb;in-charge](unsigned)</primary></indexterm>moneypunct&lt;char, (bool)0>::moneypunct&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::moneypunct&lsqb;not-in-charge](unsigned)</primary></indexterm>moneypunct&lt;char, (bool)0>::moneypunct&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;char, (bool)1></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;char, (bool)1></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for moneypunct&lt;char, (bool)1></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;char, (bool)1></primary></indexterm>typeinfo for moneypunct&lt;char, (bool)1></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;char, (bool)1>::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;char, (bool)1>::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for moneypunct&lt;char, (bool)1></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;char, (bool)1></primary></indexterm>typeinfo name for moneypunct&lt;char, (bool)1></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;char, (bool)1></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class moneypunct&lt;char, (bool)1> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;char, (bool)1>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;char, (bool)1>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::moneypunct&lsqb;in-charge](unsigned)</primary></indexterm>moneypunct&lt;char, (bool)1>::moneypunct&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::moneypunct&lsqb;not-in-charge](unsigned)</primary></indexterm>moneypunct&lt;char, (bool)1>::moneypunct&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;wchar_t, (bool)0></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;wchar_t, (bool)0></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for moneypunct&lt;wchar_t, (bool)0></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, (bool)0></primary></indexterm>typeinfo for moneypunct&lt;wchar_t, (bool)0></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for moneypunct&lt;wchar_t, (bool)0></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;wchar_t, (bool)0></primary></indexterm>typeinfo name for moneypunct&lt;wchar_t, (bool)0></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;wchar_t, (bool)0></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class moneypunct&lt;wchar_t, (bool)0> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::moneypunct&lsqb;in-charge](unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::moneypunct&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::moneypunct&lsqb;not-in-charge](unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::moneypunct&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct&lt;wchar_t, (bool)1></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct&lt;wchar_t, (bool)1></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for moneypunct&lt;wchar_t, (bool)1></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct&lt;wchar_t, (bool)1></primary></indexterm>typeinfo for moneypunct&lt;wchar_t, (bool)1></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::~moneypunct &lsqb;in-charge]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::~moneypunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::~moneypunct &lsqb;in-charge deleting]()</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::~moneypunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for moneypunct&lt;wchar_t, (bool)1></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct&lt;wchar_t, (bool)1></primary></indexterm>typeinfo name for moneypunct&lt;wchar_t, (bool)1></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_base</primary></indexterm>typeinfo for money_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct&lt;wchar_t, (bool)1></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class moneypunct&lt;wchar_t, (bool)1> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::moneypunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::moneypunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::moneypunct&lsqb;in-charge](unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::moneypunct&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::moneypunct&lsqb;not-in-charge](unsigned)</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::moneypunct&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class ostrstream</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ostrstream</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for ostrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ostrstream</primary></indexterm>typeinfo for ostrstream</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::~ostrstream &lsqb;in-charge]()</primary></indexterm>ostrstream::~ostrstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ostrstream::~ostrstream &lsqb;in-charge deleting]()</primary></indexterm>ostrstream::~ostrstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for ostrstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ostrstream</primary></indexterm>typeinfo name for ostrstream</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ostrstream</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class ostrstream Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to ostrstream::~ostrstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to ostrstream::~ostrstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to ostrstream::~ostrstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to ostrstream::~ostrstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __timepunct&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __timepunct&lt;char></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __timepunct&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;char></primary></indexterm>typeinfo for __timepunct&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char>::~__timepunct &lsqb;in-charge]()</primary></indexterm>__timepunct&lt;char>::~__timepunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char>::~__timepunct &lsqb;in-charge deleting]()</primary></indexterm>__timepunct&lt;char>::~__timepunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __timepunct&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;char></primary></indexterm>typeinfo name for __timepunct&lt;char></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __timepunct&lt;char></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class __timepunct&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char>::_M_put(char*, unsigned, char const*, tm const*) const</primary></indexterm>__timepunct&lt;char>::_M_put(char*, unsigned, char const*, tm const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char>::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>__timepunct&lt;char>::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char>::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>__timepunct&lt;char>::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char>::__timepunct&lsqb;not-in-charge](unsigned)</primary></indexterm>__timepunct&lt;char>::__timepunct&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;char>::__timepunct&lsqb;in-charge](unsigned)</primary></indexterm>__timepunct&lt;char>::__timepunct&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __timepunct&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __timepunct&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __timepunct&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __timepunct&lt;wchar_t></primary></indexterm>typeinfo for __timepunct&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t>::~__timepunct &lsqb;in-charge]()</primary></indexterm>__timepunct&lt;wchar_t>::~__timepunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t>::~__timepunct &lsqb;in-charge deleting]()</primary></indexterm>__timepunct&lt;wchar_t>::~__timepunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __timepunct&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __timepunct&lt;wchar_t></primary></indexterm>typeinfo name for __timepunct&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __timepunct&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class __timepunct&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t>::_M_put(wchar_t*, unsigned, wchar_t const*, tm const*) const</primary></indexterm>__timepunct&lt;wchar_t>::_M_put(wchar_t*, unsigned, wchar_t const*, tm const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t>::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>__timepunct&lt;wchar_t>::__timepunct&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t>::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>__timepunct&lt;wchar_t>::__timepunct&lsqb;in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t>::__timepunct&lsqb;not-in-charge](unsigned)</primary></indexterm>__timepunct&lt;wchar_t>::__timepunct&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>__timepunct&lt;wchar_t>::__timepunct&lsqb;in-charge](unsigned)</primary></indexterm>__timepunct&lt;wchar_t>::__timepunct&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class logic_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for logic_error</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for logic_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for logic_error</primary></indexterm>typeinfo for logic_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;in-charge]()</primary></indexterm>logic_error::~logic_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;in-charge deleting]()</primary></indexterm>logic_error::~logic_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for logic_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for logic_error</primary></indexterm>typeinfo name for logic_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class logic_error</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class range_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for range_error</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for range_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for range_error</primary></indexterm>typeinfo for range_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error &lsqb;in-charge]()</primary></indexterm>range_error::~range_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>range_error::~range_error &lsqb;in-charge deleting]()</primary></indexterm>range_error::~range_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for range_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for range_error</primary></indexterm>typeinfo name for range_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class range_error</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt_base</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for codecvt_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_base</primary></indexterm>typeinfo name for codecvt_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt_base</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_byname&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype_byname&lt;char></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for ctype_byname&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_byname&lt;char></primary></indexterm>typeinfo for ctype_byname&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char>::~ctype_byname &lsqb;in-charge]()</primary></indexterm>ctype_byname&lt;char>::~ctype_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char>::~ctype_byname &lsqb;in-charge deleting]()</primary></indexterm>ctype_byname&lt;char>::~ctype_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_is(unsigned short, char) const</primary></indexterm>ctype&lt;char>::do_is(unsigned short, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_is(char const*, char const*, unsigned short*) const</primary></indexterm>ctype&lt;char>::do_is(char const*, char const*, unsigned short*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_scan_is(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char>::do_scan_is(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_scan_not(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char>::do_scan_not(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_toupper(char) const</primary></indexterm>ctype&lt;char>::do_toupper(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_toupper(char*, char const*) const</primary></indexterm>ctype&lt;char>::do_toupper(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_tolower(char) const</primary></indexterm>ctype&lt;char>::do_tolower(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_tolower(char*, char const*) const</primary></indexterm>ctype&lt;char>::do_tolower(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_widen(char) const</primary></indexterm>ctype&lt;char>::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_widen(char const*, char const*, char*) const</primary></indexterm>ctype&lt;char>::do_widen(char const*, char const*, char*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_narrow(char, char) const</primary></indexterm>ctype&lt;char>::do_narrow(char, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_narrow(char const*, char const*, char, char*) const</primary></indexterm>ctype&lt;char>::do_narrow(char const*, char const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for ctype_byname&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype_byname&lt;char></primary></indexterm>typeinfo name for ctype_byname&lt;char></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype_byname&lt;char></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class ctype_byname&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char>::ctype_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>ctype_byname&lt;char>::ctype_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;char>::ctype_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>ctype_byname&lt;char>::ctype_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class ctype_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class ctype_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class ctype_byname&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t>::ctype_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>ctype_byname&lt;wchar_t>::ctype_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t>::ctype_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>ctype_byname&lt;wchar_t>::ctype_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class domain_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for domain_error</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for domain_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for domain_error</primary></indexterm>typeinfo for domain_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error &lsqb;in-charge]()</primary></indexterm>domain_error::~domain_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>domain_error::~domain_error &lsqb;in-charge deleting]()</primary></indexterm>domain_error::~domain_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for domain_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for domain_error</primary></indexterm>typeinfo name for domain_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class domain_error</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class length_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for length_error</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for length_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for length_error</primary></indexterm>typeinfo for length_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error &lsqb;in-charge]()</primary></indexterm>length_error::~length_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>length_error::~length_error &lsqb;in-charge deleting]()</primary></indexterm>length_error::~length_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for length_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for length_error</primary></indexterm>typeinfo name for length_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class length_error</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class out_of_range</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for out_of_range</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for out_of_range</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for out_of_range</primary></indexterm>typeinfo for out_of_range</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range &lsqb;in-charge]()</primary></indexterm>out_of_range::~out_of_range &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>out_of_range::~out_of_range &lsqb;in-charge deleting]()</primary></indexterm>out_of_range::~out_of_range &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for out_of_range</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for out_of_range</primary></indexterm>typeinfo name for out_of_range</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class out_of_range</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class strstreambuf</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for strstreambuf</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for strstreambuf</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for strstreambuf</primary></indexterm>typeinfo for strstreambuf</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::~strstreambuf &lsqb;in-charge]()</primary></indexterm>strstreambuf::~strstreambuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::~strstreambuf &lsqb;in-charge deleting]()</primary></indexterm>strstreambuf::~strstreambuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for strstreambuf</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for strstreambuf</primary></indexterm>typeinfo name for strstreambuf</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class strstreambuf</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class strstreambuf Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::setbuf(char*, int)</primary></indexterm>strstreambuf::setbuf(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::_M_alloc(unsigned)</primary></indexterm>strstreambuf::_M_alloc(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](void* (*)(unsigned), void (*)(void*))</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](void* (*)(unsigned), void (*)(void*))<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::_M_setup(char*, char*, int)</primary></indexterm>strstreambuf::_M_setup(char*, char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](void* (*)(unsigned), void (*)(void*))</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](void* (*)(unsigned), void (*)(void*))<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](signed char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](signed char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char*, int, signed char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](signed char*, int, signed char*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char const*, int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](char*, int, char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](char*, int, char*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](signed char*, int, signed char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](signed char*, int, signed char*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char*, int, unsigned char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](unsigned char*, int, unsigned char*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](char*, int, char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](char*, int, char*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;not-in-charge](int)</primary></indexterm>strstreambuf::strstreambuf&lsqb;not-in-charge](int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char*, int, unsigned char*)</primary></indexterm>strstreambuf::strstreambuf&lsqb;in-charge](unsigned char*, int, unsigned char*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class bad_exception</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_exception</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for bad_exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_exception</primary></indexterm>typeinfo for bad_exception</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;in-charge]()</primary></indexterm>bad_exception::~bad_exception &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;in-charge deleting]()</primary></indexterm>bad_exception::~bad_exception &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for bad_exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_exception</primary></indexterm>typeinfo name for bad_exception</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_exception</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_filebuf&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_filebuf&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_filebuf&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for basic_filebuf&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::~basic_filebuf &lsqb;in-charge]()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::~basic_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::~basic_filebuf &lsqb;in-charge deleting]()</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::~basic_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_filebuf&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo name for basic_filebuf&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_filebuf&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_filebuf&lt;char, char_traits&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::_M_convert_to_external(char*, int, int&, int&)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::_M_convert_to_external(char*, int, int&, int&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::xsgetn(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::xsgetn(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;char, char_traits&lt;char> >::xsputn(char const*, int)</primary></indexterm>basic_filebuf&lt;char, char_traits&lt;char> >::xsputn(char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_filebuf &lsqb;in-charge]()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_filebuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_filebuf &lsqb;in-charge deleting]()</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_filebuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::imbue(locale const&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::_M_convert_to_external(wchar_t*, int, int&, int&)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::_M_convert_to_external(wchar_t*, int, int&, int&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::xsgetn(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::xsgetn(wchar_t*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::xsputn(wchar_t const*, int)</primary></indexterm>basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t> >::xsputn(wchar_t const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_fstream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_fstream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_fstream&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_fstream&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for basic_fstream&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge]()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_fstream&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_fstream&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo name for basic_fstream&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_fstream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_fstream&lt;char, char_traits&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;char, char_traits&lt;char> >::~basic_fstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge]()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_fstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_fstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_istream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_istream &lsqb;in-charge]()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_istream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_istream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_istream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_istream&lt;wchar_t, char_traits&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::get(wchar_t*, int)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::get(wchar_t*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::getline(wchar_t*, int, wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::getline(wchar_t*, int, wchar_t)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::get(wchar_t*, int, wchar_t)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::get(wchar_t*, int, wchar_t)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::readsome(wchar_t*, int)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::readsome(wchar_t*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::read(wchar_t*, int)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::read(wchar_t*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_istream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_istream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::ignore(int, unsigned)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::ignore(int, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_istream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_istream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::getline(wchar_t*, int)</primary></indexterm>basic_istream&lt;wchar_t, char_traits&lt;wchar_t> >::getline(wchar_t*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ostream &lsqb;in-charge]()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>4294964227</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> >::write(wchar_t const*, int)</primary></indexterm>basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> >::write(wchar_t const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ostream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ostream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class messages_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages_base</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for messages_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_base</primary></indexterm>typeinfo name for messages_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages_base</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class runtime_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for runtime_error</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for runtime_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for runtime_error</primary></indexterm>typeinfo for runtime_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;in-charge]()</primary></indexterm>runtime_error::~runtime_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;in-charge deleting]()</primary></indexterm>runtime_error::~runtime_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for runtime_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for runtime_error</primary></indexterm>typeinfo name for runtime_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class runtime_error</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ifstream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ifstream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_ifstream&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ifstream&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for basic_ifstream&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char> >::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char> >::~basic_ifstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;char, char_traits&lt;char> >::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ifstream&lt;char, char_traits&lt;char> >::~basic_ifstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_ifstream&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ifstream&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo name for basic_ifstream&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ifstream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_ifstream&lt;char, char_traits&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;char, char_traits&lt;char> >::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;char, char_traits&lt;char> >::~basic_ifstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;char, char_traits&lt;char> >::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;char, char_traits&lt;char> >::~basic_ifstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ifstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ifstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ifstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ifstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ifstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ifstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge]()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>11</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_istream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_ostream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2050</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_iostream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_iostream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ofstream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ofstream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_ofstream&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ofstream&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for basic_ofstream&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char> >::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char> >::~basic_ofstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;char, char_traits&lt;char> >::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ofstream&lt;char, char_traits&lt;char> >::~basic_ofstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_ofstream&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ofstream&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo name for basic_ofstream&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ofstream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_ofstream&lt;char, char_traits&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;char, char_traits&lt;char> >::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;char, char_traits&lt;char> >::~basic_ofstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;char, char_traits&lt;char> >::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;char, char_traits&lt;char> >::~basic_ofstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ofstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ofstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ofstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ofstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ofstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ofstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_byname&lt;char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt_byname&lt;char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for codecvt_byname&lt;char, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;char, char, __mbstate_t></primary></indexterm>typeinfo for codecvt_byname&lt;char, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t>::~codecvt_byname &lsqb;in-charge]()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t>::~codecvt_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t>::~codecvt_byname &lsqb;in-charge deleting]()</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t>::~codecvt_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_encoding() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_always_noconv() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for codecvt_byname&lt;char, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t></primary></indexterm>typeinfo name for codecvt_byname&lt;char, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt_byname&lt;char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class codecvt_byname&lt;char, char, __mbstate_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t>::codecvt_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t>::codecvt_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;char, char, __mbstate_t>::codecvt_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>codecvt_byname&lt;char, char, __mbstate_t>::codecvt_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt_byname&lt;wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt_byname&lt;wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for codecvt_byname&lt;wchar_t, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t></primary></indexterm>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t>::~codecvt_byname &lsqb;in-charge]()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t>::~codecvt_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t>::~codecvt_byname &lsqb;in-charge deleting]()</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t>::~codecvt_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_encoding() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_always_noconv() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for codecvt_byname&lt;wchar_t, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t></primary></indexterm>typeinfo name for codecvt_byname&lt;wchar_t, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Class data for collate_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for collate_byname&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;wchar_t></primary></indexterm>typeinfo for collate_byname&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t>::~collate_byname &lsqb;in-charge]()</primary></indexterm>collate_byname&lt;wchar_t>::~collate_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t>::~collate_byname &lsqb;in-charge deleting]()</primary></indexterm>collate_byname&lt;wchar_t>::~collate_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::do_transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::do_transform(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::do_hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::do_hash(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for collate_byname&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;wchar_t></primary></indexterm>typeinfo name for collate_byname&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt_byname&lt;wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class codecvt_byname&lt;wchar_t, char, __mbstate_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t>::codecvt_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t>::codecvt_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t>::collate_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;wchar_t>::collate_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt_byname&lt;wchar_t, char, __mbstate_t>::codecvt_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>codecvt_byname&lt;wchar_t, char, __mbstate_t>::codecvt_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t>::collate_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;wchar_t>::collate_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class collate_byname&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for collate_byname&lt;char></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for collate_byname&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate_byname&lt;char></primary></indexterm>typeinfo for collate_byname&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char>::~collate_byname &lsqb;in-charge]()</primary></indexterm>collate_byname&lt;char>::~collate_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char>::~collate_byname &lsqb;in-charge deleting]()</primary></indexterm>collate_byname&lt;char>::~collate_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::do_compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char>::do_compare(char const*, char const*, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::do_transform(char const*, char const*) const</primary></indexterm>collate&lt;char>::do_transform(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::do_hash(char const*, char const*) const</primary></indexterm>collate&lt;char>::do_hash(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for collate_byname&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate_byname&lt;char></primary></indexterm>typeinfo name for collate_byname&lt;char></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class collate_byname&lt;char></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class collate_byname&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char>::collate_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;char>::collate_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate_byname&lt;char>::collate_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;char>::collate_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class collate_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class collate_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class overflow_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for overflow_error</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for overflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for overflow_error</primary></indexterm>typeinfo for overflow_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error &lsqb;in-charge]()</primary></indexterm>overflow_error::~overflow_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>overflow_error::~overflow_error &lsqb;in-charge deleting]()</primary></indexterm>overflow_error::~overflow_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for overflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for overflow_error</primary></indexterm>typeinfo name for overflow_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class overflow_error</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_streambuf&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_streambuf&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_streambuf&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for basic_streambuf&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::~basic_streambuf &lsqb;in-charge]()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::~basic_streambuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::~basic_streambuf &lsqb;in-charge deleting]()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::~basic_streambuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_streambuf&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo name for basic_streambuf&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_streambuf&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_streambuf&lt;char, char_traits&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::sgetn(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::sgetn(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::xsgetn(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::xsgetn(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::sputn(char const*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::sputn(char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::xsputn(char const*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::xsputn(char const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::setbuf(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::pubsetbuf(char*, int)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::pubsetbuf(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_streambuf &lsqb;in-charge]()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_streambuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_streambuf &lsqb;in-charge deleting]()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_streambuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::sgetn(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::sgetn(wchar_t*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::xsgetn(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::xsgetn(wchar_t*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::sputn(wchar_t const*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::sputn(wchar_t const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::xsputn(wchar_t const*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::xsputn(wchar_t const*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::setbuf(wchar_t*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::pubsetbuf(wchar_t*, int)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::pubsetbuf(wchar_t*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> ></primary></indexterm>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringbuf &lsqb;in-charge]()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringbuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringbuf &lsqb;in-charge deleting]()</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringbuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, long)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;char, char_traits&lt;char> >::sync()</primary></indexterm>basic_streambuf&lt;char, char_traits&lt;char> >::sync()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> ></primary></indexterm>typeinfo name for basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::_M_really_sync(unsigned, unsigned)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::_M_really_sync(unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)</primary></indexterm>basic_stringbuf&lt;char, char_traits&lt;char>, allocator&lt;char> >::setbuf(char*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></primary></indexterm>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringbuf &lsqb;in-charge]()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringbuf &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringbuf &lsqb;in-charge deleting]()</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringbuf &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::imbue(locale const&)</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::imbue(locale const&)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, long)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, long)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::seekoff(long, _Ios_Seekdir, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::seekpos(fpos&lt;__mbstate_t>, _Ios_Openmode)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::sync()</primary></indexterm>basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t> >::sync()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_M_really_sync(unsigned, unsigned)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::_M_really_sync(unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)</primary></indexterm>basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::setbuf(wchar_t*, int)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class messages_byname&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages_byname&lt;char></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for messages_byname&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;char></primary></indexterm>typeinfo for messages_byname&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char>::~messages_byname &lsqb;in-charge]()</primary></indexterm>messages_byname&lt;char>::~messages_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char>::~messages_byname &lsqb;in-charge deleting]()</primary></indexterm>messages_byname&lt;char>::~messages_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::do_open(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, locale const&) const</primary></indexterm>messages&lt;char>::do_open(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const</primary></indexterm>messages&lt;char>::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::do_close(int) const</primary></indexterm>messages&lt;char>::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for messages_byname&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;char></primary></indexterm>typeinfo name for messages_byname&lt;char></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages_byname&lt;char></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class messages_byname&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char>::messages_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>messages_byname&lt;char>::messages_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;char>::messages_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>messages_byname&lt;char>::messages_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class messages_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for messages_byname&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_byname&lt;wchar_t></primary></indexterm>typeinfo for messages_byname&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t>::~messages_byname &lsqb;in-charge]()</primary></indexterm>messages_byname&lt;wchar_t>::~messages_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t>::~messages_byname &lsqb;in-charge deleting]()</primary></indexterm>messages_byname&lt;wchar_t>::~messages_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::do_open(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, locale const&) const</primary></indexterm>messages&lt;wchar_t>::do_open(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&) const</primary></indexterm>messages&lt;wchar_t>::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::do_close(int) const</primary></indexterm>messages&lt;wchar_t>::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for messages_byname&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages_byname&lt;wchar_t></primary></indexterm>typeinfo name for messages_byname&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class messages_byname&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t>::messages_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>messages_byname&lt;wchar_t>::messages_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages_byname&lt;wchar_t>::messages_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>messages_byname&lt;wchar_t>::messages_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct_byname&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct_byname&lt;char></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for numpunct_byname&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;char></primary></indexterm>typeinfo for numpunct_byname&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char>::~numpunct_byname &lsqb;in-charge]()</primary></indexterm>numpunct_byname&lt;char>::~numpunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char>::~numpunct_byname &lsqb;in-charge deleting]()</primary></indexterm>numpunct_byname&lt;char>::~numpunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::do_decimal_point() const</primary></indexterm>numpunct&lt;char>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::do_thousands_sep() const</primary></indexterm>numpunct&lt;char>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::do_grouping() const</primary></indexterm>numpunct&lt;char>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::do_truename() const</primary></indexterm>numpunct&lt;char>::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::do_falsename() const</primary></indexterm>numpunct&lt;char>::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for numpunct_byname&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;char></primary></indexterm>typeinfo name for numpunct_byname&lt;char></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct_byname&lt;char></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class numpunct_byname&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char>::numpunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;char>::numpunct_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;char>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;char>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for numpunct_byname&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct_byname&lt;wchar_t></primary></indexterm>typeinfo for numpunct_byname&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t>::~numpunct_byname &lsqb;in-charge]()</primary></indexterm>numpunct_byname&lt;wchar_t>::~numpunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t>::~numpunct_byname &lsqb;in-charge deleting]()</primary></indexterm>numpunct_byname&lt;wchar_t>::~numpunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_decimal_point() const</primary></indexterm>numpunct&lt;wchar_t>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_grouping() const</primary></indexterm>numpunct&lt;wchar_t>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_truename() const</primary></indexterm>numpunct&lt;wchar_t>::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_falsename() const</primary></indexterm>numpunct&lt;wchar_t>::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for numpunct_byname&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct_byname&lt;wchar_t></primary></indexterm>typeinfo name for numpunct_byname&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class numpunct_byname&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t>::numpunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;wchar_t>::numpunct_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;wchar_t>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_get_byname &lsqb;in-charge]()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_get_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_get_byname &lsqb;in-charge deleting]()</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_get_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo name for time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::time_get_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::time_get_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::time_get_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>time_get_byname&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::time_get_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_get_byname &lsqb;in-charge]()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_get_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_get_byname &lsqb;in-charge deleting]()</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_get_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo name for time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_get_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_get_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_get_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>time_get_byname&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_get_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_put_byname &lsqb;in-charge]()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_put_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_put_byname &lsqb;in-charge deleting]()</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_put_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, tm const*, char, char) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo name for time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::time_put_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::time_put_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::time_put_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>time_put_byname&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::time_put_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_put_byname &lsqb;in-charge]()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_put_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_put_byname &lsqb;in-charge deleting]()</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_put_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, tm const*, char, char) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo name for time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_put_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_put_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_put_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>time_put_byname&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_put_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class underflow_error</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for underflow_error</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for underflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for underflow_error</primary></indexterm>typeinfo for underflow_error</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error &lsqb;in-charge]()</primary></indexterm>underflow_error::~underflow_error &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>underflow_error::~underflow_error &lsqb;in-charge deleting]()</primary></indexterm>underflow_error::~underflow_error &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>runtime_error::what() const</primary></indexterm>runtime_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for underflow_error</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for underflow_error</primary></indexterm>typeinfo name for underflow_error</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class underflow_error</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class invalid_argument</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for invalid_argument</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for invalid_argument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for invalid_argument</primary></indexterm>typeinfo for invalid_argument</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument &lsqb;in-charge]()</primary></indexterm>invalid_argument::~invalid_argument &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument &lsqb;in-charge deleting]()</primary></indexterm>invalid_argument::~invalid_argument &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for invalid_argument</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for invalid_argument</primary></indexterm>typeinfo name for invalid_argument</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class invalid_argument</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;char, (bool)0></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;char, (bool)0></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for moneypunct_byname&lt;char, (bool)0></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, (bool)0></primary></indexterm>typeinfo for moneypunct_byname&lt;char, (bool)0></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0>::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;char, (bool)0>::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0>::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;char, (bool)0>::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)0>::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)0>::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for moneypunct_byname&lt;char, (bool)0></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, (bool)0></primary></indexterm>typeinfo name for moneypunct_byname&lt;char, (bool)0></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;char, (bool)0></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class moneypunct_byname&lt;char, (bool)0> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0>::moneypunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;char, (bool)0>::moneypunct_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)0>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;char, (bool)0>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;char, (bool)1></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;char, (bool)1></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for moneypunct_byname&lt;char, (bool)1></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;char, (bool)1></primary></indexterm>typeinfo for moneypunct_byname&lt;char, (bool)1></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1>::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;char, (bool)1>::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1>::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;char, (bool)1>::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_decimal_point() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_thousands_sep() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_grouping() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_curr_symbol() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_positive_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_negative_sign() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_frac_digits() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_pos_format() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;char, (bool)1>::do_neg_format() const</primary></indexterm>moneypunct&lt;char, (bool)1>::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for moneypunct_byname&lt;char, (bool)1></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;char, (bool)1></primary></indexterm>typeinfo name for moneypunct_byname&lt;char, (bool)1></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;char, (bool)1></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class moneypunct_byname&lt;char, (bool)1> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1>::moneypunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;char, (bool)1>::moneypunct_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;char, (bool)1>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;char, (bool)1>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;wchar_t, (bool)0></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;wchar_t, (bool)0></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for moneypunct_byname&lt;wchar_t, (bool)0></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, (bool)0></primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, (bool)0></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0>::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0>::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0>::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0>::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)0>::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)0>::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for moneypunct_byname&lt;wchar_t, (bool)0></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)0></primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)0></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;wchar_t, (bool)0></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class moneypunct_byname&lt;wchar_t, (bool)0> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0>::moneypunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0>::moneypunct_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)0>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)0>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class moneypunct_byname&lt;wchar_t, (bool)1></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for moneypunct_byname&lt;wchar_t, (bool)1></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for moneypunct_byname&lt;wchar_t, (bool)1></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for moneypunct_byname&lt;wchar_t, (bool)1></primary></indexterm>typeinfo for moneypunct_byname&lt;wchar_t, (bool)1></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1>::~moneypunct_byname &lsqb;in-charge]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1>::~moneypunct_byname &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1>::~moneypunct_byname &lsqb;in-charge deleting]()</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1>::~moneypunct_byname &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_decimal_point() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_thousands_sep() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_grouping() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_curr_symbol() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_curr_symbol() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_positive_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_positive_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_negative_sign() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_negative_sign() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_frac_digits() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_frac_digits() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_pos_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_pos_format() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct&lt;wchar_t, (bool)1>::do_neg_format() const</primary></indexterm>moneypunct&lt;wchar_t, (bool)1>::do_neg_format() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for moneypunct_byname&lt;wchar_t, (bool)1></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)1></primary></indexterm>typeinfo name for moneypunct_byname&lt;wchar_t, (bool)1></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class moneypunct_byname&lt;wchar_t, (bool)1></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class moneypunct_byname&lt;wchar_t, (bool)1> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1>::moneypunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1>::moneypunct_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>moneypunct_byname&lt;wchar_t, (bool)1>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>moneypunct_byname&lt;wchar_t, (bool)1>::moneypunct_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></primary></indexterm>typeinfo for basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></primary></indexterm>typeinfo name for basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_stringstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></primary></indexterm>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_stringstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></primary></indexterm>typeinfo for basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_istringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_istringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></primary></indexterm>typeinfo name for basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_istringstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_istringstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></primary></indexterm>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_istringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_istringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_istringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_istringstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_istringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_istringstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></primary></indexterm>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_ostringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_ostringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></primary></indexterm>typeinfo name for basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_ostringstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;char, char_traits&lt;char>, allocator&lt;char> >::~basic_ostringstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></primary></indexterm>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_ostringstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_ostringstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_ostringstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_ostringstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_ostringstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_ostringstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __ctype_abstract_base&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __ctype_abstract_base&lt;char></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __ctype_abstract_base&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;char></primary></indexterm>typeinfo for __ctype_abstract_base&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;char>::~__ctype_abstract_base &lsqb;in-charge]()</primary></indexterm>__ctype_abstract_base&lt;char>::~__ctype_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;char>::~__ctype_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__ctype_abstract_base&lt;char>::~__ctype_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __ctype_abstract_base&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __ctype_abstract_base&lt;char></primary></indexterm>typeinfo name for __ctype_abstract_base&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_base</primary></indexterm>typeinfo for ctype_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __ctype_abstract_base&lt;char></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __ctype_abstract_base&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __ctype_abstract_base&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __ctype_abstract_base&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __ctype_abstract_base&lt;wchar_t></primary></indexterm>typeinfo for __ctype_abstract_base&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;wchar_t>::~__ctype_abstract_base &lsqb;in-charge]()</primary></indexterm>__ctype_abstract_base&lt;wchar_t>::~__ctype_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__ctype_abstract_base&lt;wchar_t>::~__ctype_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__ctype_abstract_base&lt;wchar_t>::~__ctype_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __ctype_abstract_base&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __ctype_abstract_base&lt;wchar_t></primary></indexterm>typeinfo name for __ctype_abstract_base&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype_base</primary></indexterm>typeinfo for ctype_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __ctype_abstract_base&lt;wchar_t></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __codecvt_abstract_base&lt;char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class __codecvt_abstract_base&lt;char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t></primary></indexterm>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t>::~__codecvt_abstract_base &lsqb;in-charge]()</primary></indexterm>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t>::~__codecvt_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t>::~__codecvt_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__codecvt_abstract_base&lt;wchar_t, char, __mbstate_t>::~__codecvt_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t></primary></indexterm>typeinfo name for __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_base</primary></indexterm>typeinfo for codecvt_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class __codecvt_abstract_base&lt;wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class ctype&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype&lt;char></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for ctype&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;char></primary></indexterm>typeinfo for ctype&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::~ctype &lsqb;in-charge]()</primary></indexterm>ctype&lt;char>::~ctype &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::~ctype &lsqb;in-charge deleting]()</primary></indexterm>ctype&lt;char>::~ctype &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_is(unsigned short, char) const</primary></indexterm>ctype&lt;char>::do_is(unsigned short, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_is(char const*, char const*, unsigned short*) const</primary></indexterm>ctype&lt;char>::do_is(char const*, char const*, unsigned short*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_scan_is(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char>::do_scan_is(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_scan_not(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char>::do_scan_not(unsigned short, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_toupper(char) const</primary></indexterm>ctype&lt;char>::do_toupper(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_toupper(char*, char const*) const</primary></indexterm>ctype&lt;char>::do_toupper(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_tolower(char) const</primary></indexterm>ctype&lt;char>::do_tolower(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_tolower(char*, char const*) const</primary></indexterm>ctype&lt;char>::do_tolower(char*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_widen(char) const</primary></indexterm>ctype&lt;char>::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_widen(char const*, char const*, char*) const</primary></indexterm>ctype&lt;char>::do_widen(char const*, char const*, char*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_narrow(char, char) const</primary></indexterm>ctype&lt;char>::do_narrow(char, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::do_narrow(char const*, char const*, char, char*) const</primary></indexterm>ctype&lt;char>::do_narrow(char const*, char const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for ctype&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype&lt;char></primary></indexterm>typeinfo name for ctype&lt;char></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype&lt;char></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class ctype&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, int&, int, int, unsigned, ctype&lt;char> const&, _Ios_Iostate&) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, int&, int, int, unsigned, ctype&lt;char> const&, _Ios_Iostate&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned short const*, bool, unsigned)</primary></indexterm>ctype&lt;char>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned short const*, bool, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::ctype&lsqb;in-charge](__locale_struct*, unsigned short const*, bool, unsigned)</primary></indexterm>ctype&lt;char>::ctype&lsqb;in-charge](__locale_struct*, unsigned short const*, bool, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::ctype&lsqb;not-in-charge](unsigned short const*, bool, unsigned)</primary></indexterm>ctype&lt;char>::ctype&lsqb;not-in-charge](unsigned short const*, bool, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;char>::ctype&lsqb;in-charge](unsigned short const*, bool, unsigned)</primary></indexterm>ctype&lt;char>::ctype&lsqb;in-charge](unsigned short const*, bool, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class ctype&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ctype&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for ctype&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ctype&lt;wchar_t></primary></indexterm>typeinfo for ctype&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::~ctype &lsqb;in-charge]()</primary></indexterm>ctype&lt;wchar_t>::~ctype &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::~ctype &lsqb;in-charge deleting]()</primary></indexterm>ctype&lt;wchar_t>::~ctype &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_is(unsigned short, wchar_t) const</primary></indexterm>ctype&lt;wchar_t>::do_is(unsigned short, wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_is(wchar_t const*, wchar_t const*, unsigned short*) const</primary></indexterm>ctype&lt;wchar_t>::do_is(wchar_t const*, wchar_t const*, unsigned short*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t>::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t>::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_toupper(wchar_t) const</primary></indexterm>ctype&lt;wchar_t>::do_toupper(wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_toupper(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t>::do_toupper(wchar_t*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_tolower(wchar_t) const</primary></indexterm>ctype&lt;wchar_t>::do_tolower(wchar_t) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_tolower(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t>::do_tolower(wchar_t*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_widen(char) const</primary></indexterm>ctype&lt;wchar_t>::do_widen(char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_widen(char const*, char const*, wchar_t*) const</primary></indexterm>ctype&lt;wchar_t>::do_widen(char const*, char const*, wchar_t*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_narrow(wchar_t, char) const</primary></indexterm>ctype&lt;wchar_t>::do_narrow(wchar_t, char) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const</primary></indexterm>ctype&lt;wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for ctype&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ctype&lt;wchar_t></primary></indexterm>typeinfo name for ctype&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ctype&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class ctype&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::ctype&lsqb;in-charge](__locale_struct*, unsigned)</primary></indexterm>ctype&lt;wchar_t>::ctype&lsqb;in-charge](__locale_struct*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned)</primary></indexterm>ctype&lt;wchar_t>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::ctype&lsqb;in-charge](unsigned)</primary></indexterm>ctype&lt;wchar_t>::ctype&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::ctype&lsqb;not-in-charge](unsigned)</primary></indexterm>ctype&lt;wchar_t>::ctype&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt&lt;char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt&lt;char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for codecvt&lt;char, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;char, char, __mbstate_t></primary></indexterm>typeinfo for codecvt&lt;char, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::~codecvt &lsqb;in-charge]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::~codecvt &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::~codecvt &lsqb;in-charge deleting]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::~codecvt &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_encoding() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_always_noconv() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for codecvt&lt;char, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;char, char, __mbstate_t></primary></indexterm>typeinfo name for codecvt&lt;char, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Class data for __codecvt_abstract_base&lt;char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for __codecvt_abstract_base&lt;char, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t></primary></indexterm>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;char, char, __mbstate_t>::~__codecvt_abstract_base &lsqb;in-charge]()</primary></indexterm>__codecvt_abstract_base&lt;char, char, __mbstate_t>::~__codecvt_abstract_base &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__codecvt_abstract_base&lt;char, char, __mbstate_t>::~__codecvt_abstract_base &lsqb;in-charge deleting]()</primary></indexterm>__codecvt_abstract_base&lt;char, char, __mbstate_t>::~__codecvt_abstract_base &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>__cxa_pure_virtual</primary></indexterm>__cxa_pure_virtual</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for __codecvt_abstract_base&lt;char, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for __codecvt_abstract_base&lt;char, char, __mbstate_t></primary></indexterm>typeinfo name for __codecvt_abstract_base&lt;char, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt_base</primary></indexterm>typeinfo for codecvt_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt&lt;char, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class codecvt&lt;char, char, __mbstate_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned)</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned)</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class codecvt&lt;wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for codecvt&lt;wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for codecvt&lt;wchar_t, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t></primary></indexterm>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::~codecvt &lsqb;in-charge]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::~codecvt &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::~codecvt &lsqb;in-charge deleting]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::~codecvt &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_encoding() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_encoding() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_always_noconv() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_always_noconv() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for codecvt&lt;wchar_t, char, __mbstate_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t></primary></indexterm>typeinfo name for codecvt&lt;wchar_t, char, __mbstate_t></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class codecvt&lt;wchar_t, char, __mbstate_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class codecvt&lt;wchar_t, char, __mbstate_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned)</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned)</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class collate&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for collate&lt;char></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for collate&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;char></primary></indexterm>typeinfo for collate&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::~collate &lsqb;in-charge]()</primary></indexterm>collate&lt;char>::~collate &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::~collate &lsqb;in-charge deleting]()</primary></indexterm>collate&lt;char>::~collate &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::do_compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char>::do_compare(char const*, char const*, char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::do_transform(char const*, char const*) const</primary></indexterm>collate&lt;char>::do_transform(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::do_hash(char const*, char const*) const</primary></indexterm>collate&lt;char>::do_hash(char const*, char const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for collate&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;char></primary></indexterm>typeinfo name for collate&lt;char></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class collate&lt;char></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class collate&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::_M_transform(char*, char const*, unsigned) const</primary></indexterm>collate&lt;char>::_M_transform(char*, char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::collate&lsqb;not-in-charge](__locale_struct*, unsigned)</primary></indexterm>collate&lt;char>::collate&lsqb;not-in-charge](__locale_struct*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::collate&lsqb;in-charge](__locale_struct*, unsigned)</primary></indexterm>collate&lt;char>::collate&lsqb;in-charge](__locale_struct*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::collate&lsqb;not-in-charge](unsigned)</primary></indexterm>collate&lt;char>::collate&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;char>::collate&lsqb;in-charge](unsigned)</primary></indexterm>collate&lt;char>::collate&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class collate&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for collate&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for collate&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for collate&lt;wchar_t></primary></indexterm>typeinfo for collate&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::~collate &lsqb;in-charge]()</primary></indexterm>collate&lt;wchar_t>::~collate &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::~collate &lsqb;in-charge deleting]()</primary></indexterm>collate&lt;wchar_t>::~collate &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::do_transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::do_transform(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::do_hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::do_hash(wchar_t const*, wchar_t const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for collate&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for collate&lt;wchar_t></primary></indexterm>typeinfo name for collate&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class collate&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class collate&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned) const</primary></indexterm>collate&lt;wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::collate&lsqb;not-in-charge](__locale_struct*, unsigned)</primary></indexterm>collate&lt;wchar_t>::collate&lsqb;not-in-charge](__locale_struct*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::collate&lsqb;in-charge](__locale_struct*, unsigned)</primary></indexterm>collate&lt;wchar_t>::collate&lsqb;in-charge](__locale_struct*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::collate&lsqb;not-in-charge](unsigned)</primary></indexterm>collate&lt;wchar_t>::collate&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>collate&lt;wchar_t>::collate&lsqb;in-charge](unsigned)</primary></indexterm>collate&lt;wchar_t>::collate&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~num_get &lsqb;in-charge]()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~num_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~num_get &lsqb;in-charge deleting]()</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~num_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, bool&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned short&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, float&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, void*&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo name for num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::num_get&lsqb;in-charge](unsigned)</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::num_get&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::num_get&lsqb;not-in-charge](unsigned)</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::num_get&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~num_get &lsqb;in-charge]()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~num_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~num_get &lsqb;in-charge deleting]()</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~num_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, bool&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned short&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long long&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, float&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, void*&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo name for num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::num_get&lsqb;in-charge](unsigned)</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::num_get&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::num_get&lsqb;not-in-charge](unsigned)</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::num_get&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~num_put &lsqb;in-charge]()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~num_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~num_put &lsqb;in-charge deleting]()</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~num_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, bool) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, bool) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, unsigned long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, unsigned long long) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, unsigned long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, long double) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, void const*) const</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, void const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo name for num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::num_put&lsqb;in-charge](unsigned)</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::num_put&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::num_put&lsqb;not-in-charge](unsigned)</primary></indexterm>num_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::num_put&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~num_put &lsqb;in-charge]()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~num_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~num_put &lsqb;in-charge deleting]()</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~num_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, bool) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, bool) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long long) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, void const*) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, void const*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo name for num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for __num_base</primary></indexterm>typeinfo for __num_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::num_put&lsqb;in-charge](unsigned)</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::num_put&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::num_put&lsqb;not-in-charge](unsigned)</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::num_put&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class bad_cast</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_cast</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for bad_cast</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_cast</primary></indexterm>typeinfo for bad_cast</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;in-charge]()</primary></indexterm>bad_cast::~bad_cast &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;in-charge deleting]()</primary></indexterm>bad_cast::~bad_cast &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for bad_cast</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_cast</primary></indexterm>typeinfo name for bad_cast</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_cast</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class ios_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for ios_base</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for ios_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for ios_base</primary></indexterm>typeinfo name for ios_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class ios_base</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class messages&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages&lt;char></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for messages&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;char></primary></indexterm>typeinfo for messages&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::~messages &lsqb;in-charge]()</primary></indexterm>messages&lt;char>::~messages &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::~messages &lsqb;in-charge deleting]()</primary></indexterm>messages&lt;char>::~messages &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::do_open(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, locale const&) const</primary></indexterm>messages&lt;char>::do_open(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const</primary></indexterm>messages&lt;char>::do_get(int, int, int, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::do_close(int) const</primary></indexterm>messages&lt;char>::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for messages&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages&lt;char></primary></indexterm>typeinfo name for messages&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_base</primary></indexterm>typeinfo for messages_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages&lt;char></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class messages&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>messages&lt;char>::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>messages&lt;char>::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::messages&lsqb;in-charge](unsigned)</primary></indexterm>messages&lt;char>::messages&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;char>::messages&lsqb;not-in-charge](unsigned)</primary></indexterm>messages&lt;char>::messages&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class messages&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for messages&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for messages&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages&lt;wchar_t></primary></indexterm>typeinfo for messages&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::~messages &lsqb;in-charge]()</primary></indexterm>messages&lt;wchar_t>::~messages &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::~messages &lsqb;in-charge deleting]()</primary></indexterm>messages&lt;wchar_t>::~messages &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::do_open(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, locale const&) const</primary></indexterm>messages&lt;wchar_t>::do_open(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, locale const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&) const</primary></indexterm>messages&lt;wchar_t>::do_get(int, int, int, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::do_close(int) const</primary></indexterm>messages&lt;wchar_t>::do_close(int) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for messages&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for messages&lt;wchar_t></primary></indexterm>typeinfo name for messages&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for messages_base</primary></indexterm>typeinfo for messages_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class messages&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class messages&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>messages&lt;wchar_t>::messages&lsqb;in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)</primary></indexterm>messages&lt;wchar_t>::messages&lsqb;not-in-charge](__locale_struct*, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::messages&lsqb;in-charge](unsigned)</primary></indexterm>messages&lt;wchar_t>::messages&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>messages&lt;wchar_t>::messages&lsqb;not-in-charge](unsigned)</primary></indexterm>messages&lt;wchar_t>::messages&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct&lt;char></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct&lt;char></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for numpunct&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;char></primary></indexterm>typeinfo for numpunct&lt;char></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::~numpunct &lsqb;in-charge]()</primary></indexterm>numpunct&lt;char>::~numpunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::~numpunct &lsqb;in-charge deleting]()</primary></indexterm>numpunct&lt;char>::~numpunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::do_decimal_point() const</primary></indexterm>numpunct&lt;char>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::do_thousands_sep() const</primary></indexterm>numpunct&lt;char>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::do_grouping() const</primary></indexterm>numpunct&lt;char>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::do_truename() const</primary></indexterm>numpunct&lt;char>::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::do_falsename() const</primary></indexterm>numpunct&lt;char>::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for numpunct&lt;char></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;char></primary></indexterm>typeinfo name for numpunct&lt;char></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct&lt;char></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class numpunct&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::numpunct&lsqb;in-charge](__locale_struct*, unsigned)</primary></indexterm>numpunct&lt;char>::numpunct&lsqb;in-charge](__locale_struct*, unsigned)</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned)</primary></indexterm>numpunct&lt;char>::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned)</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::numpunct&lsqb;in-charge](unsigned)</primary></indexterm>numpunct&lt;char>::numpunct&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;char>::numpunct&lsqb;not-in-charge](unsigned)</primary></indexterm>numpunct&lt;char>::numpunct&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class numpunct&lt;wchar_t></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for numpunct&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for numpunct&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for numpunct&lt;wchar_t></primary></indexterm>typeinfo for numpunct&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::~numpunct &lsqb;in-charge]()</primary></indexterm>numpunct&lt;wchar_t>::~numpunct &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::~numpunct &lsqb;in-charge deleting]()</primary></indexterm>numpunct&lt;wchar_t>::~numpunct &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_decimal_point() const</primary></indexterm>numpunct&lt;wchar_t>::do_decimal_point() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t>::do_thousands_sep() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_grouping() const</primary></indexterm>numpunct&lt;wchar_t>::do_grouping() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_truename() const</primary></indexterm>numpunct&lt;wchar_t>::do_truename() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_falsename() const</primary></indexterm>numpunct&lt;wchar_t>::do_falsename() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for numpunct&lt;wchar_t></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for numpunct&lt;wchar_t></primary></indexterm>typeinfo name for numpunct&lt;wchar_t></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class numpunct&lt;wchar_t></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class numpunct&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::numpunct&lsqb;in-charge](__locale_struct*, unsigned)</primary></indexterm>numpunct&lt;wchar_t>::numpunct&lsqb;in-charge](__locale_struct*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned)</primary></indexterm>numpunct&lt;wchar_t>::numpunct&lsqb;not-in-charge](__locale_struct*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::numpunct&lsqb;in-charge](unsigned)</primary></indexterm>numpunct&lt;wchar_t>::numpunct&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::numpunct&lsqb;not-in-charge](unsigned)</primary></indexterm>numpunct&lt;wchar_t>::numpunct&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_get &lsqb;in-charge]()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_get &lsqb;in-charge deleting]()</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo name for time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, int&, int, int, unsigned, ctype&lt;char> const&, _Ios_Iostate&) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, int&, int, int, unsigned, ctype&lt;char> const&, _Ios_Iostate&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::time_get&lsqb;in-charge](unsigned)</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::time_get&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_name(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, int&, char const**, unsigned, _Ios_Iostate&) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_name(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, int&, char const**, unsigned, _Ios_Iostate&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::time_get&lsqb;not-in-charge](unsigned)</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::time_get&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_get &lsqb;in-charge]()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_get &lsqb;in-charge deleting]()</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_date_order() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo name for time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_num(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, int&, int, int, unsigned, ctype&lt;wchar_t> const&, _Ios_Iostate&) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_num(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, int&, int, int, unsigned, ctype&lt;wchar_t> const&, _Ios_Iostate&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_get&lsqb;in-charge](unsigned)</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_get&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_name(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, int&, wchar_t const**, unsigned, _Ios_Iostate&) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_name(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, int&, wchar_t const**, unsigned, _Ios_Iostate&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_get&lsqb;not-in-charge](unsigned)</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_get&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_put &lsqb;in-charge]()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_put &lsqb;in-charge deleting]()</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~time_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, tm const*, char, char) const</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, char, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo name for time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::time_put&lsqb;in-charge](unsigned)</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::time_put&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::time_put&lsqb;not-in-charge](unsigned)</primary></indexterm>time_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::time_put&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_put &lsqb;in-charge]()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_put &lsqb;in-charge deleting]()</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~time_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, tm const*, char, char) const</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, tm const*, char, char) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo name for time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for locale::facet</primary></indexterm>typeinfo for locale::facet</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for time_base</primary></indexterm>typeinfo for time_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_put&lsqb;in-charge](unsigned)</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_put&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_put&lsqb;not-in-charge](unsigned)</primary></indexterm>time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::time_put&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class bad_alloc</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for bad_alloc</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for bad_alloc</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for bad_alloc</primary></indexterm>typeinfo for bad_alloc</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc &lsqb;in-charge]()</primary></indexterm>bad_alloc::~bad_alloc &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>bad_alloc::~bad_alloc &lsqb;in-charge deleting]()</primary></indexterm>bad_alloc::~bad_alloc &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for bad_alloc</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for bad_alloc</primary></indexterm>typeinfo name for bad_alloc</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class bad_alloc</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ios&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ios&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_ios&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo for basic_ios&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char> >::~basic_ios &lsqb;in-charge]()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char> >::~basic_ios &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;char, char_traits&lt;char> >::~basic_ios &lsqb;in-charge deleting]()</primary></indexterm>basic_ios&lt;char, char_traits&lt;char> >::~basic_ios &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_ios&lt;char, char_traits&lt;char> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ios&lt;char, char_traits&lt;char> ></primary></indexterm>typeinfo name for basic_ios&lt;char, char_traits&lt;char> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base</primary></indexterm>typeinfo for ios_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>1026</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ios&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ios &lsqb;in-charge]()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ios &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>basic_ios&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ios &lsqb;in-charge deleting]()</primary></indexterm>basic_ios&lt;wchar_t, char_traits&lt;wchar_t> >::~basic_ios &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__vmi_class_type_info</primary></indexterm>vtable for __cxxabiv1::__vmi_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></primary></indexterm>typeinfo name for basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>flags:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>8</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>basetype:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for ios_base</primary></indexterm>typeinfo for ios_base</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>2050</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class basic_ios&lt;wchar_t, char_traits&lt;wchar_t> ></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class exception</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for exception</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for exception</primary></indexterm>typeinfo for exception</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception &lsqb;in-charge]()</primary></indexterm>exception::~exception &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::~exception &lsqb;in-charge deleting]()</primary></indexterm>exception::~exception &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for exception</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for exception</primary></indexterm>typeinfo name for exception</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class exception</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~money_get &lsqb;in-charge]()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~money_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~money_get &lsqb;in-charge deleting]()</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::~money_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, bool, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&) const</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, bool, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo name for money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::money_get&lsqb;in-charge](unsigned)</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::money_get&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::money_get&lsqb;not-in-charge](unsigned)</primary></indexterm>money_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::money_get&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~money_get &lsqb;in-charge]()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~money_get &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~money_get &lsqb;in-charge deleting]()</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~money_get &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, bool, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, bool, ios_base&, _Ios_Iostate&, long double&) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >&) const</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, bool, ios_base&, _Ios_Iostate&, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo name for money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::money_get&lsqb;in-charge](unsigned)</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::money_get&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::money_get&lsqb;not-in-charge](unsigned)</primary></indexterm>money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::money_get&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~money_put &lsqb;in-charge]()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~money_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~money_put &lsqb;in-charge deleting]()</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::~money_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, bool, ios_base&, char, long double) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, bool, ios_base&, char, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::do_put(ostreambuf_iterator&lt;char, char_traits&lt;char> >, bool, ios_base&, char, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></primary></indexterm>typeinfo name for money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::money_put&lsqb;in-charge](unsigned)</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::money_put&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::money_put&lsqb;not-in-charge](unsigned)</primary></indexterm>money_put&lt;char, ostreambuf_iterator&lt;char, char_traits&lt;char> > >::money_put&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~money_put &lsqb;in-charge]()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~money_put &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~money_put &lsqb;in-charge deleting]()</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::~money_put &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, bool, ios_base&, wchar_t, long double) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, bool, ios_base&, wchar_t, long double) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&) const</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, bool, ios_base&, wchar_t, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></primary></indexterm>typeinfo name for money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > ></TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > > Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::money_put&lsqb;in-charge](unsigned)</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::money_put&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::money_put&lsqb;not-in-charge](unsigned)</primary></indexterm>money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::money_put&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class strstream</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for strstream</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for strstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for strstream</primary></indexterm>typeinfo for strstream</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstream::~strstream &lsqb;in-charge]()</primary></indexterm>strstream::~strstream &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>strstream::~strstream &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for strstream</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__si_class_type_info</primary></indexterm>vtable for __cxxabiv1::__si_class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for strstream</primary></indexterm>typeinfo name for strstream</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class strstream</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<!--table start-->
<TABLE>
<TITLE>libstdcxx - Class strstream Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to strstream::~strstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to strstream::~strstream &lsqb;in-charge deleting]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to strstream::~strstream &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY><indexterm><primary>non-virtual thunk &lsqb;nv:-8] to strstream::~strstream &lsqb;in-charge]()</primary></indexterm>non-virtual thunk &lsqb;nv:-8] to strstream::~strstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>virtual thunk &lsqb;v:0,-12] to strstream::~strstream &lsqb;in-charge]()</primary></indexterm>virtual thunk &lsqb;v:0,-12] to strstream::~strstream &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class time_base</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for time_base</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for time_base</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for time_base</primary></indexterm>typeinfo name for time_base</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class time_base</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class type_info</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Class data for type_info</TITLE>
<PARA>
</PARA>
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>vtable for type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Offset</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY>0</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>RTTI</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo for type_info</primary></indexterm>typeinfo for type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;in-charge]()</primary></indexterm>type_info::~type_info &lsqb;in-charge]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;in-charge deleting]()</primary></indexterm>type_info::~type_info &lsqb;in-charge deleting]()</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>vfunc:</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
<!--classdata-->
<!--table start-->
<TABLE>
<TITLE>typeinfo for type_info</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<!--entry start-->
<ENTRY>Base Vtable</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
<!--entry end-->
</ROW>
<ROW>
<!--entry start-->
<ENTRY>Name</ENTRY>
<!--entry end-->
<!--entry start-->
<ENTRY><indexterm><primary>typeinfo name for type_info</primary></indexterm>typeinfo name for type_info</ENTRY>
<!--entry end-->
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--table end-->
</SECT3>
<SECT3>
<TITLE>Interfaces for Class type_info</TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_istream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_istream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Class basic_ostream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Class basic_ostream&lt;char, char_traits&lt;char> ></TITLE>
<PARA>
</PARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libstdcxx-ddefs>
<TITLE>Data Definitions for libstdcxx</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO C serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
</SECT1>
<SECT1 ID=libstdcxxman>
<TITLE>Interfaces Definitions for libstdcxx</TITLE>
<PARA>
</PARA>






</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->


</CHAPTER>

</PART>
