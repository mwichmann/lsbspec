<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.80 2006/02/27 19:51:04 nick Exp 0 -->
<!--    at Wed Mar 15 18:19:41 2006 -->
<SECT1 ID=libpthread>
<TITLE>Interfaces for libpthread</TITLE>
<PARA>
<XREF LINKEND="lib-libpthread-def"> defines the library name and shared object name
for the libpthread library
</PARA>
<TABLE id="lib-libpthread-def">
<TITLE>libpthread Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpthread</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpthread.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libpthread.1'>
[LFS] <XREF LINKEND="std.LFS">
</MEMBER>
<MEMBER ID='REFSTD.libpthread.2'>
[LSB] <XREF LINKEND="std.LSB">
</MEMBER>
<MEMBER ID='REFSTD.libpthread.3'>
[SUSv3] <XREF LINKEND="std.SUSv3">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Realtime Threads -->
<SECT2>
<!--libgroup-->
<TITLE>Realtime Threads</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Realtime Threads</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Realtime Threads specified in <XREF linkend="tbl-libpthread-realt-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpthread-realt-ints">
<TITLE>libpthread - Realtime Threads Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getinheritsched</primary></indexterm>pthread_attr_getinheritsched(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_getschedpolicy</primary></indexterm>pthread_attr_getschedpolicy(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_getscope</primary></indexterm>pthread_attr_getscope(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_setinheritsched</primary></indexterm>pthread_attr_setinheritsched(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setschedpolicy</primary></indexterm>pthread_attr_setschedpolicy(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_setscope</primary></indexterm>pthread_attr_setscope(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_getschedparam</primary></indexterm>pthread_getschedparam(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setschedparam</primary></indexterm>pthread_setschedparam(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Advanced Realtime Threads -->
<SECT2>
<!--libgroup-->
<TITLE>Advanced Realtime Threads</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Advanced Realtime Threads</TITLE>
<PARA>
No external functions are defined for libpthread - Advanced Realtime Threads
in this part of the specification. See also the generic specification, &ISOSTD-1;.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Posix Threads -->
<SECT2>
<!--libgroup-->
<TITLE>Posix Threads</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Posix Threads</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Posix Threads specified in <XREF linkend="tbl-libpthread-posix-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpthread-posix-ints">
<TITLE>libpthread - Posix Threads Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_pthread_cleanup_pop</primary></indexterm>_pthread_cleanup_pop(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_pthread_cleanup_push</primary></indexterm>_pthread_cleanup_push(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_destroy</primary></indexterm>pthread_attr_destroy(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_getdetachstate</primary></indexterm>pthread_attr_getdetachstate(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getguardsize</primary></indexterm>pthread_attr_getguardsize(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_getschedparam</primary></indexterm>pthread_attr_getschedparam(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_getstack</primary></indexterm>pthread_attr_getstack(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_getstackaddr</primary></indexterm>pthread_attr_getstackaddr(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_getstacksize</primary></indexterm>pthread_attr_getstacksize(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_init</primary></indexterm>pthread_attr_init(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_setdetachstate</primary></indexterm>pthread_attr_setdetachstate(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_setguardsize</primary></indexterm>pthread_attr_setguardsize(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_attr_setschedparam</primary></indexterm>pthread_attr_setschedparam(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_setstackaddr</primary></indexterm>pthread_attr_setstackaddr(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_attr_setstacksize</primary></indexterm>pthread_attr_setstacksize(GLIBC_2.3.3) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cancel</primary></indexterm>pthread_cancel(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_cond_broadcast</primary></indexterm>pthread_cond_broadcast(GLIBC_2.3.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_destroy</primary></indexterm>pthread_cond_destroy(GLIBC_2.3.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_init</primary></indexterm>pthread_cond_init(GLIBC_2.3.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_signal</primary></indexterm>pthread_cond_signal(GLIBC_2.3.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_cond_timedwait</primary></indexterm>pthread_cond_timedwait(GLIBC_2.3.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_cond_wait</primary></indexterm>pthread_cond_wait(GLIBC_2.3.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_destroy</primary></indexterm>pthread_condattr_destroy(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_getpshared</primary></indexterm>pthread_condattr_getpshared(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_condattr_init</primary></indexterm>pthread_condattr_init(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_condattr_setpshared</primary></indexterm>pthread_condattr_setpshared(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_create</primary></indexterm>pthread_create(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_detach</primary></indexterm>pthread_detach(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_equal</primary></indexterm>pthread_equal(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_exit</primary></indexterm>pthread_exit(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_getconcurrency</primary></indexterm>pthread_getconcurrency(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_getspecific</primary></indexterm>pthread_getspecific(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_join</primary></indexterm>pthread_join(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_key_create</primary></indexterm>pthread_key_create(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_key_delete</primary></indexterm>pthread_key_delete(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_kill</primary></indexterm>pthread_kill(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_mutex_destroy</primary></indexterm>pthread_mutex_destroy(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_init</primary></indexterm>pthread_mutex_init(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_lock</primary></indexterm>pthread_mutex_lock(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutex_trylock</primary></indexterm>pthread_mutex_trylock(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_mutex_unlock</primary></indexterm>pthread_mutex_unlock(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_destroy</primary></indexterm>pthread_mutexattr_destroy(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_getpshared</primary></indexterm>pthread_mutexattr_getpshared(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_gettype</primary></indexterm>pthread_mutexattr_gettype(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_mutexattr_init</primary></indexterm>pthread_mutexattr_init(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_setpshared</primary></indexterm>pthread_mutexattr_setpshared(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_mutexattr_settype</primary></indexterm>pthread_mutexattr_settype(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_once</primary></indexterm>pthread_once(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_rwlock_destroy</primary></indexterm>pthread_rwlock_destroy(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_init</primary></indexterm>pthread_rwlock_init(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_rdlock</primary></indexterm>pthread_rwlock_rdlock(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_timedrdlock</primary></indexterm>pthread_rwlock_timedrdlock(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_rwlock_timedwrlock</primary></indexterm>pthread_rwlock_timedwrlock(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_tryrdlock</primary></indexterm>pthread_rwlock_tryrdlock(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_trywrlock</primary></indexterm>pthread_rwlock_trywrlock(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlock_unlock</primary></indexterm>pthread_rwlock_unlock(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_rwlock_wrlock</primary></indexterm>pthread_rwlock_wrlock(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_destroy</primary></indexterm>pthread_rwlockattr_destroy(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_getpshared</primary></indexterm>pthread_rwlockattr_getpshared(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_rwlockattr_init</primary></indexterm>pthread_rwlockattr_init(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_rwlockattr_setpshared</primary></indexterm>pthread_rwlockattr_setpshared(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_self</primary></indexterm>pthread_self(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setcancelstate</primary></indexterm>pthread_setcancelstate(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setcanceltype</primary></indexterm>pthread_setcanceltype(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pthread_setconcurrency</primary></indexterm>pthread_setconcurrency(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_setspecific</primary></indexterm>pthread_setspecific(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_sigmask</primary></indexterm>pthread_sigmask(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pthread_testcancel</primary></indexterm>pthread_testcancel(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sem_close</primary></indexterm>sem_close(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_destroy</primary></indexterm>sem_destroy(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_getvalue</primary></indexterm>sem_getvalue(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_init</primary></indexterm>sem_init(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sem_open</primary></indexterm>sem_open(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_post</primary></indexterm>sem_post(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_timedwait</primary></indexterm>sem_timedwait(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_trywait</primary></indexterm>sem_trywait(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sem_unlink</primary></indexterm>sem_unlink(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>sem_wait</primary></indexterm>sem_wait(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Thread aware versions of libc interfaces -->
<SECT2>
<!--libgroup-->
<TITLE>Thread aware versions of libc interfaces</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Thread aware versions of libc interfaces</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Thread aware versions of libc interfaces specified in <XREF linkend="tbl-libpthread-threa-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libpthread-threa-ints">
<TITLE>libpthread - Thread aware versions of libc interfaces Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>lseek64</primary></indexterm>lseek64(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>open64</primary></indexterm>open64(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>pread</primary></indexterm>pread(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pread64</primary></indexterm>pread64(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.1">[LFS]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pwrite</primary></indexterm>pwrite(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.3">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>pwrite64</primary></indexterm>pwrite64(GLIBC_2.2) <LINK LINKEND="REFSTD.libpthread.1">[LFS]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libpthread-ddefs>
<TITLE>Data Definitions for libpthread</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libpthread.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>pthread.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>semaphore.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.80 2006/02/27 19:51:04 nick Exp 0 -->
